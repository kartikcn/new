{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { RMFilterInputDTO } from '../background-loc/model/DTO/rmFilterInput.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../rm-config/rm-config/services/rm-config.service\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"../employee/services/employee.service\";\nimport * as i5 from \"../svg-view/services/svg-view.service\";\nimport * as i6 from \"../background-loc/services/bl.service\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/radiobutton\";\nimport * as i12 from \"../svg-view/svg-view.component\";\nfunction RoomEmployeeSvgComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 3)(2, \"div\", 7)(3, \"label\", 15);\n    i0.ɵɵtext(4, \"Employee \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"ng-select\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"td\")(7, \"td\")(8, \"td\")(9, \"td\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumEm)(\"searchable\", true);\n  }\n}\nfunction RoomEmployeeSvgComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RoomEmployeeSvgComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵelement(1, \"app-svg-view\", 24);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RoomEmployeeSvgComponent_ngx_spinner_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 25)(1, \"p\", 26);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport class RoomEmployeeSvgComponent {\n  constructor(formBuilder, rmConfigSrv, authSrv, emSrv, svgViewSrv, blServ, cdr, spinner) {\n    this.formBuilder = formBuilder;\n    this.rmConfigSrv = rmConfigSrv;\n    this.authSrv = authSrv;\n    this.emSrv = emSrv;\n    this.svgViewSrv = svgViewSrv;\n    this.blServ = blServ;\n    this.cdr = cdr;\n    this.spinner = spinner;\n    this.allBl = [];\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.allRmDdata = [];\n    this.rm_data = [];\n    this.isRoomView = true;\n    this.isEmployeeView = false;\n    this.enumEm = [];\n    this.allEmployees = [];\n    this.viewSvg = false;\n    this.fileString = '';\n    this.fileName = '';\n    this.defaultLoadColor = \"\";\n    this.assignedColor = \"#ff0000\";\n    this.roomDetails = [];\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.noSVGFound = false;\n    this.showSpinner = true;\n    this.filterPanel = this.formBuilder.group({\n      viewFor: ['Room'],\n      blId: [null],\n      flId: [null],\n      rmId: [null],\n      emId: [null]\n    });\n  }\n  ngOnInit() {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllRoom();\n    this.loadAllEmployees();\n    this.onRoom();\n  }\n  ngAfterViewInit() {\n    if (this.viewSvg) {\n      this.svgViewComp;\n    }\n  }\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe(res => {\n      this.enumBL = res;\n      this.enumBL = res.map(i => {\n        i.name = i.blNameString;\n        return i;\n      });\n      this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe(res => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map(i => {\n        i.name = i.flNameString;\n        return i;\n      });\n      this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n  loadAllRoom() {\n    this.blServ.getALLRoom().subscribe(res => {\n      this.allRmDdata = res;\n      this.allRmDdata = res.map(i => {\n        i.name = i.rmNameString;\n        return i;\n      });\n      this.allRmDdata.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n      this.rm_data = this.allRmDdata;\n    });\n  }\n  loadAllEmployees() {\n    this.emSrv.getAllEmployeeList().subscribe(res => {\n      this.allEmployees = res;\n      this.enumEm = this.allEmployees.map(({\n        emId,\n        firstName,\n        lastName,\n        blId,\n        flId,\n        rmId\n      }) => ({\n        emId,\n        firstName,\n        lastName,\n        blId,\n        flId,\n        rmId\n      }));\n      this.enumEm.map(i => {\n        i.fullName = i.firstName + ' ' + i.lastName;\n        return i;\n      });\n    });\n  }\n  onRoom() {\n    this.isRoomView = true;\n    this.isEmployeeView = false;\n    let blField = this.filterPanel.controls['blId'];\n    let flField = this.filterPanel.controls['flId'];\n    let rmField = this.filterPanel.controls['rmId'];\n    let emField = this.filterPanel.controls['emId'];\n    emField.setValidators(null);\n    blField.setValidators([Validators.required]);\n    flField.setValidators([Validators.required]);\n    rmField.setValidators([Validators.required]);\n    emField.updateValueAndValidity();\n    blField.updateValueAndValidity();\n    flField.updateValueAndValidity();\n    rmField.updateValueAndValidity();\n  }\n  onEmployee() {\n    let blId = this.filterPanel.controls['blId'].value;\n    let flId = this.filterPanel.controls['flId'].value;\n    let rmId = this.filterPanel.controls['rmId'].value;\n    let emId = this.filterPanel.controls['emId'].value;\n    if (blId !== null && flId !== null && rmId !== null && emId !== null) {\n      this.isRoomView = true;\n      this.isEmployeeView = true;\n    } else {\n      this.isRoomView = false;\n      this.isEmployeeView = true;\n    }\n    let blField = this.filterPanel.controls['blId'];\n    let flField = this.filterPanel.controls['flId'];\n    let rmField = this.filterPanel.controls['rmId'];\n    let emField = this.filterPanel.controls['emId'];\n    blField.setValidators(null);\n    flField.setValidators(null);\n    rmField.setValidators(null);\n    emField.setValidators([Validators.required]);\n    blField.updateValueAndValidity();\n    flField.updateValueAndValidity();\n    rmField.updateValueAndValidity();\n    emField.updateValueAndValidity();\n  }\n  onSelectBlCode($event) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n      this.rm_data = this.allRmDdata;\n    }\n  }\n  loadFloorCode(bl_id) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.rm_data = this.allRmDdata.filter(t => t.blId == bl_id);\n      this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n    }\n  }\n  onSelectFlCode(event) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n          rmId: null\n        });\n        this.loadRmCode(event.id, event.blId);\n      }, 10);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          rmId: null\n        });\n      }, 10);\n      this.rm_data = this.allRmDdata;\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n  loadRmCode(flId, blId) {\n    if (flId != null) {\n      this.rm_data = [];\n      this.rm_data = this.allRmDdata.filter(t => t.blId == blId && t.flId == flId);\n      this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n    }\n  }\n  onSelectRmCode(event) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n          flId: event.flId\n        });\n      }, 10);\n    }\n  }\n  onSearch() {\n    this.roomDetails = [];\n    this.noSVGFound = false;\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.fileName = '';\n    this.fileString = '';\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    if (this.isRoomView && !this.isEmployeeView) {\n      let blId = this.filterPanel.controls.blId.value;\n      let flId = this.filterPanel.controls.flId.value;\n      let rmId = this.filterPanel.controls.rmId.value;\n      this.getRoomDetails(blId, flId, rmId, \"\");\n      let data = {\n        id: flId,\n        blId: blId,\n        compId: this.compId,\n        name: '',\n        flInfo: '',\n        svgName: '',\n        units: ''\n      };\n      setTimeout(() => {\n        if (this.svgRoomData.content[0].svgElementId !== null) {\n          this.svgViewSrv.getSVGFile(data).subscribe(res => {\n            if (res.code != 409) {\n              this.fileName = res.fileName;\n              this.fileString = res.fileContent;\n              this.filterPanel.patchValue({\n                emId: null\n              });\n              this.viewSvg = true;\n              this.cdr.detectChanges();\n              this.spinner.hide();\n              this.showSpinner = false;\n            } else {\n              this.spinner.hide();\n              this.showSpinner = false;\n              this.noSVGFound = true;\n            }\n          });\n        } else {\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.noSVGFound = true;\n        }\n      }, 100);\n    } else if (this.isEmployeeView) {\n      let emId = this.filterPanel.controls.emId.value;\n      const emArray = this.enumEm.filter(each => each.emId == emId);\n      if (emArray[0].blId == null) {\n        this.filterPanel.patchValue({\n          blId: null,\n          flId: null,\n          rmId: null\n        });\n      } else {\n        this.loadFloorCode(emArray[0].blId);\n        this.loadRmCode(emArray[0].flId, emArray[0].blId);\n        this.filterPanel.patchValue({\n          blId: emArray[0].blId,\n          flId: emArray[0].flId,\n          rmId: emArray[0].rmId\n        });\n      }\n      if (emArray[0].blId !== null && emArray[0].flId !== null && emArray[0].rmId !== null) {\n        this.getRoomDetails(emArray[0].blId, emArray[0].flId, emArray[0].rmId, emArray[0].fullName);\n        let data = {\n          id: emArray[0].flId,\n          blId: emArray[0].blId,\n          compId: this.compId,\n          name: '',\n          flInfo: '',\n          svgName: '',\n          units: ''\n        };\n        setTimeout(() => {\n          if (this.svgRoomData.content[0].svgElementId !== null) {\n            this.roomDetails[0].em = emArray;\n            this.svgViewSrv.getSVGFile(data).subscribe(res => {\n              if (res.code != 409) {\n                this.fileName = res.fileName;\n                this.fileString = res.fileContent;\n                this.isRoomView = true;\n                this.viewSvg = true;\n                this.cdr.detectChanges();\n                this.spinner.hide();\n                this.showSpinner = false;\n              } else {\n                this.noSVGFound = true;\n                this.spinner.hide();\n                this.showSpinner = false;\n              }\n              error => {\n                console.log(error);\n              };\n            });\n          } else {\n            this.noSVGFound = true;\n            this.spinner.hide();\n            this.showSpinner = false;\n          }\n        }, 100);\n      } else {\n        this.noSVGFound = true;\n        this.spinner.hide();\n        this.showSpinner = false;\n      }\n    }\n  }\n  getRoomDetails(blId, flId, rmId, empLabel) {\n    let data = {\n      id: rmId,\n      name: '',\n      blId: blId,\n      flId: flId,\n      svgElementId: '',\n      compId: this.compId\n    };\n    this.blServ.getRmById(data).subscribe(res => {\n      let idObj = {\n        roomElementId: res.rm.svgElementId,\n        assetElementId: null\n      };\n      let colorObj = {\n        roomColor: \"#ff0000\",\n        assetColor: null\n      };\n      let contentData = {\n        blId: blId,\n        flId: flId,\n        rmId: res.rm.rmId,\n        label: empLabel != \"\" ? [res.rm.rmId, empLabel] : [res.rm.rmId],\n        showLabel: true,\n        highlightRoom: true,\n        svgElementId: idObj,\n        color: colorObj,\n        rmCode: '',\n        zoomAtRoom: false\n      };\n      this.svgRoomData.content.push(contentData);\n      this.roomDetails.push(res);\n    });\n    this.svgRoomData.blId = blId;\n    this.svgRoomData.flId = flId;\n    this.svgRoomData.locate = \"room\";\n  }\n  onClear() {\n    this.roomDetails = [];\n    this.viewSvg = false;\n    this.fileName = '';\n    this.fileString = '';\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null,\n      rmId: null,\n      emId: null\n    });\n    if (this.isRoomView && this.isEmployeeView) {\n      this.isRoomView = false;\n    }\n    ;\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n  }\n  static #_ = this.ɵfac = function RoomEmployeeSvgComponent_Factory(t) {\n    return new (t || RoomEmployeeSvgComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.RmConfigService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.EmployeeService), i0.ɵɵdirectiveInject(i5.SvgViewService), i0.ɵɵdirectiveInject(i6.BuildingService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i7.NgxSpinnerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RoomEmployeeSvgComponent,\n    selectors: [[\"app-room-employee-svg\"]],\n    viewQuery: function RoomEmployeeSvgComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SvgViewComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n      }\n    },\n    decls: 47,\n    vars: 18,\n    consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [2, \"display\", \"flex\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"margin-left\", \"5px\"], [1, \"form-field-lable\", 2, \"margin-right\", \"5px\"], [1, \"input-label-custom\"], [\"name\", \"viewFor\", \"value\", \"Room\", \"formControlName\", \"viewFor\", 3, \"click\"], [1, \"form-field-lable\", 2, \"margin-left\", \"5px\"], [\"name\", \"viewFor\", \"value\", \"Employee\", \"formControlName\", \"viewFor\", 3, \"click\"], [2, \"margin\", \"5px 0 0 5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [4, \"ngIf\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"rmId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-fussion\", 3, \"fullScreen\", 4, \"ngIf\"], [\"appendTo\", \"body\", \"formControlName\", \"emId\", \"bindLabel\", \"fullName\", \"bindValue\", \"emId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [1, \"card\", \"no-file-found\"], [2, \"height\", \"500px\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-fussion\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function RoomEmployeeSvgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Locate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 7)(11, \"p-radioButton\", 8);\n        i0.ɵɵlistener(\"click\", function RoomEmployeeSvgComponent_Template_p_radioButton_click_11_listener() {\n          return ctx.onRoom();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Room\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"p-radioButton\", 10);\n        i0.ɵɵlistener(\"click\", function RoomEmployeeSvgComponent_Template_p_radioButton_click_15_listener() {\n          return ctx.onEmployee();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"label\", 9);\n        i0.ɵɵtext(17, \"Employee\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(18, \"td\")(19, \"td\")(20, \"td\");\n        i0.ɵɵelementStart(21, \"td\", 3)(22, \"div\", 11)(23, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function RoomEmployeeSvgComponent_Template_button_click_23_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function RoomEmployeeSvgComponent_Template_button_click_24_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(25, RoomEmployeeSvgComponent_tr_25_Template, 10, 3, \"tr\", 14);\n        i0.ɵɵelementStart(26, \"tr\")(27, \"td\", 3)(28, \"div\", 7)(29, \"label\", 15);\n        i0.ɵɵtext(30, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"ng-select\", 16);\n        i0.ɵɵlistener(\"change\", function RoomEmployeeSvgComponent_Template_ng_select_change_31_listener($event) {\n          return ctx.onSelectBlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"td\", 3)(33, \"div\", 7)(34, \"label\", 15);\n        i0.ɵɵtext(35, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"ng-select\", 17);\n        i0.ɵɵlistener(\"change\", function RoomEmployeeSvgComponent_Template_ng_select_change_36_listener($event) {\n          return ctx.onSelectFlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"td\", 3)(38, \"div\", 7)(39, \"label\", 15);\n        i0.ɵɵtext(40, \"Room\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"ng-select\", 18);\n        i0.ɵɵlistener(\"change\", function RoomEmployeeSvgComponent_Template_ng_select_change_41_listener($event) {\n          return ctx.onSelectRmCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(42, \"td\", 3)(43, \"td\", 3);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(44, RoomEmployeeSvgComponent_div_44_Template, 3, 0, \"div\", 19);\n        i0.ɵɵtemplate(45, RoomEmployeeSvgComponent_div_45_Template, 2, 0, \"div\", 20);\n        i0.ɵɵtemplate(46, RoomEmployeeSvgComponent_ngx_spinner_46_Template, 3, 1, \"ngx-spinner\", 21);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isEmployeeView);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true)(\"readonly\", ctx.isEmployeeView);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true)(\"readonly\", ctx.isEmployeeView);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.rm_data)(\"searchable\", true)(\"readonly\", ctx.isEmployeeView);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.noSVGFound);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    dependencies: [i8.NgIf, i9.NgSelectComponent, i10.ButtonDirective, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i11.RadioButton, i7.NgxSpinnerComponent, i12.SvgViewComponent],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  background-color: #879cc9;\\n  color: black;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n  height: 10px !important;\\n}\\n\\n.no-file-found[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvcm9vbS1lbXBsb3llZS1zdmcvcm9vbS1lbXBsb3llZS1zdmcuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi9zcmMvc2Nzcy9fdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8uLi8uLi8uLi9NYW5hdiUyMEd1cHRhL0Rvd25sb2Fkcy9mbXMvZm1zL2Zyb250ZW5kL2Ztc19mcm9udGVuZC9zcmMvYXBwL3VpL3Jvb20tZW1wbG95ZWUtc3ZnL3Jvb20tZW1wbG95ZWUtc3ZnLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0kseUJDT0s7RUROTCxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsdUJBQUE7QUVESjs7QUZJQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBRURKIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnL3NyYy9zY3NzL3ZhcmlhYmxlcyc7XG5cbjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRvb2xiYXI7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLm5vLWZpbGUtZm91bmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogNTAwcHg7XG59IiwiLy8gVHlwb2dyYXBoeSB2YXJpYWJsZXNcbiRmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4kdXJsOiAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwJztcblxuXG4vLyBUaGVtaW5nIHZhcmlhYmxlXG4kcHJpbWFyeS1jb2xvcjogIzBiOWU2ZDtcbiR3aGl0ZTogI2ZmZmZmZjtcbiRtYWluLWJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4kdGV4dC1zaXplOjEycHg7XG4kdG9vbGJhcjojODc5Y2M5O1xuJHNpZGUtbmF2OiMzNDNhNDA7XG4kbWFuZGF0b3J5RmllbGQ6I2UwMTUxNTtcbiR0YWJCZ0NvbG9yOiAjODc5Y2M5O1xuJHRhYkFjdGl2ZUJnQ29sb3I6ICNmZmZmZmY7XG4kdGFiSGVpZ2h0OiAyLjM1O1xuJHRhYldpZHRoOiA4MHB4O1xuJHRhYkJvcmRlclJhZGl1czogNnB4IDZweCAwIDA7XG4kdGFiQm9yZGVyQm90dG9tOiAzcHggc29saWQgIzg3OWNjOSAhaW1wb3J0YW50O1xuJHRhYkZvbnRDb2xvcjogI2ZmZmZmZjtcbiR0YWJQYW5lQmFja2dyb3VuZENvbG9yOiAjRjBGMkY1O1xuJEFjdGl2ZVRhYkZvbnRDb2xvcjogIzAwMDAwMDtcblxuJHRhYmxldFBvdHJhaXRNaW5XaWR0aDo2MDBweCA7XG4kdGFibGV0UG90cmFpdE1heFdpZHRoOiA5NTlweDtcbiR0YWJsZXRMYW5kc2NhcGVNaW5XaWR0aDogOTYwcHg7XG4kdGFibGV0TGFuZHNwYWNlTWF4V2lkdGg6IDE0MzlweDtcbiIsIjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4NzljYzk7XG4gIGNvbG9yOiBibGFjaztcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gIGhlaWdodDogMTBweCAhaW1wb3J0YW50O1xufVxuXG4ubm8tZmlsZS1mb3VuZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDUwMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","BuildingFilterInput","FLFilterInputDTO","RMFilterInputDTO","SvgViewComponent","SvgRoomData","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","enumEm","RoomEmployeeSvgComponent","constructor","formBuilder","rmConfigSrv","authSrv","emSrv","svgViewSrv","blServ","cdr","spinner","allBl","enumBL","enumFL","enumAllFL","allRmDdata","rm_data","isRoomView","isEmployeeView","allEmployees","viewSvg","fileString","fileName","defaultLoadColor","assignedColor","roomDetails","svgRoomData","noSVGFound","showSpinner","filterPanel","group","viewFor","blId","flId","rmId","emId","ngOnInit","compId","getLoggedInUserCompId","loadAllBuilding","loadAllFloor","loadAllRoom","loadAllEmployees","onRoom","ngAfterViewInit","svgViewComp","getALLBuilding","subscribe","res","map","i","name","blNameString","unshift","getALLFloor","flNameString","getALLRoom","rmNameString","getAllEmployeeList","firstName","lastName","fullName","blField","controls","flField","rmField","emField","setValidators","required","updateValueAndValidity","onEmployee","value","onSelectBlCode","$event","id","setTimeout","patchValue","loadFloorCode","bl_id","filter","t","onSelectFlCode","event","loadRmCode","onSelectRmCode","onSearch","show","getRoomDetails","data","flInfo","svgName","units","content","svgElementId","getSVGFile","code","fileContent","detectChanges","hide","emArray","each","em","error","console","log","empLabel","getRmById","idObj","roomElementId","rm","assetElementId","colorObj","roomColor","assetColor","contentData","label","showLabel","highlightRoom","color","rmCode","zoomAtRoom","push","locate","onClear","_","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","RmConfigService","i3","AuthService","i4","EmployeeService","i5","SvgViewService","i6","BuildingService","ChangeDetectorRef","i7","NgxSpinnerService","_2","selectors","viewQuery","RoomEmployeeSvgComponent_Query","rf","ctx","ɵɵlistener","RoomEmployeeSvgComponent_Template_p_radioButton_click_11_listener","RoomEmployeeSvgComponent_Template_p_radioButton_click_15_listener","RoomEmployeeSvgComponent_Template_button_click_23_listener","RoomEmployeeSvgComponent_Template_button_click_24_listener","ɵɵtemplate","RoomEmployeeSvgComponent_tr_25_Template","RoomEmployeeSvgComponent_Template_ng_select_change_31_listener","RoomEmployeeSvgComponent_Template_ng_select_change_36_listener","RoomEmployeeSvgComponent_Template_ng_select_change_41_listener","RoomEmployeeSvgComponent_div_44_Template","RoomEmployeeSvgComponent_div_45_Template","RoomEmployeeSvgComponent_ngx_spinner_46_Template","valid"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\room-employee-svg\\room-employee-svg.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\room-employee-svg\\room-employee-svg.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { RMFilterInputDTO } from '../background-loc/model/DTO/rmFilterInput.model';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { EmployeeService } from '../employee/services/employee.service';\nimport { RmConfigService } from '../rm-config/rm-config/services/rm-config.service';\nimport { SvgViewService } from '../svg-view/services/svg-view.service';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { SvgRoomContentData } from 'src/app/model/svgroomcontentdata.model';\nimport { SvgElementIdType } from 'src/app/model/svgelementidtype.model';\nimport { SvgElementColorType } from 'src/app/model/svgelementcolortype.model';\n\n@Component({\n  selector: 'app-room-employee-svg',\n  templateUrl: './room-employee-svg.component.html',\n  styleUrls: ['./room-employee-svg.component.scss']\n})\nexport class RoomEmployeeSvgComponent implements OnInit {\n  filterPanel!: UntypedFormGroup;\n  compId!: number;\n  allBl: any[] = [];\n  enumBL: BuildingFilterInput[] = [];\n  enumFL: FLFilterInputDTO[] = [];\n  enumAllFL: FLFilterInputDTO[] = [];\n  allRmDdata: any[] = [];\n  rm_data: any[] = [];\n  isRoomView: boolean = true;\n  isEmployeeView: boolean = false;\n  enumEm: any[] = [];\n  allEmployees: any[] = [];\n  viewSvg: boolean = false;\n  fileString: string = '';\n  fileName: string = '';\n  defaultLoadColor: string = \"\";\n  assignedColor: string = \"#ff0000\";\n  roomDetails: any[] = [];\n  svgRoomData : SvgRoomData = new SvgRoomData(null,null,\"\",[]);\n  noSVGFound: boolean = false;\n  showSpinner: boolean = true;\n  @ViewChild(SvgViewComponent, { static: false }) svgViewComp!: SvgViewComponent;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private rmConfigSrv: RmConfigService,\n    private authSrv: AuthService,\n    private emSrv: EmployeeService,\n    private svgViewSrv: SvgViewService,\n    private blServ: BuildingService,\n    private cdr: ChangeDetectorRef,\n    private spinner: NgxSpinnerService,\n  ) {\n    this.filterPanel = this.formBuilder.group({\n      viewFor: ['Room'],\n      blId: [null],\n      flId: [null],\n      rmId: [null],\n      emId: [null]\n    });\n  }\n\n  ngOnInit(): void {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllRoom();\n    this.loadAllEmployees();\n    this.onRoom();\n\n  }\n\n  ngAfterViewInit() {\n    if (this.viewSvg) {\n      this.svgViewComp;\n    }\n  }\n\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe((res: any) => {\n      this.enumBL = res;\n      this.enumBL = res.map((i: any) => { i.name = i.blNameString; return i; });\n      this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe((res: any) => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map((i: any) => { i.name = i.flNameString; return i; });\n      this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n\n  loadAllRoom() {\n    this.blServ.getALLRoom().subscribe((res: any[]) => {\n      this.allRmDdata = res;\n      this.allRmDdata = res.map((i: any) => { i.name = i.rmNameString; return i; });\n      this.allRmDdata.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n      this.rm_data = this.allRmDdata;\n    });\n  }\n\n  loadAllEmployees() {\n    this.emSrv.getAllEmployeeList().subscribe((res: any) => {\n      this.allEmployees = res;\n      this.enumEm = this.allEmployees.map(({ emId, firstName, lastName, blId, flId, rmId }) => ({ emId, firstName, lastName, blId, flId, rmId }));\n      this.enumEm.map((i: any) => { i.fullName = i.firstName + ' ' + i.lastName; return i; })\n    })\n  }\n\n  onRoom() {\n    this.isRoomView = true;\n    this.isEmployeeView = false;\n    let blField = this.filterPanel.controls['blId'];\n    let flField = this.filterPanel.controls['flId'];\n    let rmField = this.filterPanel.controls['rmId'];\n    let emField = this.filterPanel.controls['emId'];\n    emField.setValidators(null);\n    blField.setValidators([Validators.required]);\n    flField.setValidators([Validators.required]);\n    rmField.setValidators([Validators.required]);\n    emField.updateValueAndValidity();\n    blField.updateValueAndValidity();\n    flField.updateValueAndValidity();\n    rmField.updateValueAndValidity();\n  }\n\n  onEmployee() {\n    let blId = this.filterPanel.controls['blId'].value;\n    let flId = this.filterPanel.controls['flId'].value;\n    let rmId = this.filterPanel.controls['rmId'].value;\n    let emId = this.filterPanel.controls['emId'].value;\n    if (blId !== null && flId !== null && rmId !== null && emId !== null) {\n      this.isRoomView = true;\n      this.isEmployeeView = true;\n    } else {\n      this.isRoomView = false;\n      this.isEmployeeView = true;\n    }\n    let blField = this.filterPanel.controls['blId'];\n    let flField = this.filterPanel.controls['flId'];\n    let rmField = this.filterPanel.controls['rmId'];\n    let emField = this.filterPanel.controls['emId'];\n    blField.setValidators(null);\n    flField.setValidators(null);\n    rmField.setValidators(null);\n    emField.setValidators([Validators.required]);\n    blField.updateValueAndValidity();\n    flField.updateValueAndValidity();\n    rmField.updateValueAndValidity();\n    emField.updateValueAndValidity();\n  }\n\n  onSelectBlCode($event: any) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    }\n    else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n      this.rm_data = this.allRmDdata;\n    }\n  }\n\n  loadFloorCode(bl_id: any) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id)\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.rm_data = this.allRmDdata.filter(t => t.blId == bl_id)\n      this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n    }\n  }\n\n  onSelectFlCode(event: any) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n          rmId: null,\n        });\n        this.loadRmCode(event.id, event.blId);\n      }, 10);\n    }\n    else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          rmId: null\n        });\n      }, 10);\n      this.rm_data = this.allRmDdata;\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n\n  loadRmCode(flId: any, blId: any) {\n    if (flId != null) {\n      this.rm_data = [];\n      this.rm_data = this.allRmDdata.filter(t => t.blId == blId && t.flId == flId);\n      this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n    }\n  }\n\n  onSelectRmCode(event: any) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n          flId: event.flId,\n        });\n      }, 10);\n    }\n  }\n\n  onSearch() {\n    this.roomDetails = [];\n    this.noSVGFound = false;\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.fileName = '';\n    this.fileString = '';\n    this.svgRoomData = new SvgRoomData(null,null,\"\",[]);\n    if (this.isRoomView && !this.isEmployeeView) {\n      let blId = this.filterPanel.controls.blId.value;\n      let flId = this.filterPanel.controls.flId.value;\n      let rmId = this.filterPanel.controls.rmId.value;\n      this.getRoomDetails(blId, flId, rmId,\"\");\n      let data = {\n        id: flId,\n        blId: blId,\n        compId: this.compId,\n        name: '',\n        flInfo: '',\n        svgName: '',\n        units : '',\n      }\n      setTimeout(() => {\n        if (this.svgRoomData.content[0].svgElementId !== null) {\n          this.svgViewSrv.getSVGFile(data).subscribe((res: any) => {\n            if (res.code != 409) {\n              this.fileName = res.fileName;\n              this.fileString = res.fileContent;\n              this.filterPanel.patchValue({\n                emId: null\n              })\n              this.viewSvg = true;\n              this.cdr.detectChanges();\n              this.spinner.hide();\n              this.showSpinner = false;\n            }\n            else{\n              this.spinner.hide();\n              this.showSpinner = false;\n              this.noSVGFound = true;\n            }\n          })\n        } else {\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.noSVGFound = true;\n        }\n      }, 100)\n    }\n    else if (this.isEmployeeView) {\n      let emId = this.filterPanel.controls.emId.value;\n      const emArray = this.enumEm.filter(each => each.emId == emId);\n      if(emArray[0].blId == null){\n        this.filterPanel.patchValue({\n          blId:null,\n          flId:null,\n          rmId:null\n        })\n      }else{\n        this.loadFloorCode(emArray[0].blId);\n        this.loadRmCode(emArray[0].flId, emArray[0].blId);\n        this.filterPanel.patchValue({\n          blId:emArray[0].blId,\n          flId:emArray[0].flId,\n          rmId:emArray[0].rmId\n        })\n      }\n      if (emArray[0].blId !== null && emArray[0].flId !== null && emArray[0].rmId !== null) {\n        this.getRoomDetails(emArray[0].blId, emArray[0].flId, emArray[0].rmId,emArray[0].fullName);\n        let data = {\n          id: emArray[0].flId,\n          blId: emArray[0].blId,\n          compId: this.compId,\n          name: '',\n          flInfo: '',\n          svgName: '',\n          units:''\n        }\n        setTimeout(() => {\n          if (this.svgRoomData.content[0].svgElementId  !== null) {\n            this.roomDetails[0].em = emArray;\n            this.svgViewSrv.getSVGFile(data).subscribe((res: any) => {\n              if (res.code != 409) {\n                this.fileName = res.fileName;\n                this.fileString = res.fileContent;\n                this.isRoomView = true;\n                this.viewSvg = true;\n                this.cdr.detectChanges();\n                this.spinner.hide();\n                this.showSpinner = false;\n              }\n              else{\n                this.noSVGFound = true;\n                this.spinner.hide();\n                this.showSpinner = false;\n              }\n              (error:any) => {\n                console.log(error);\n              }\n            })\n          } else {\n            this.noSVGFound = true;\n            this.spinner.hide();\n            this.showSpinner = false;\n          }\n        }, 100)\n      } else {\n        this.noSVGFound = true;\n        this.spinner.hide();\n        this.showSpinner = false;\n      }\n    }\n  }\n\n  getRoomDetails(blId: any, flId: any, rmId: any,empLabel:string) {\n    let data = {\n      id: rmId,\n      name: '',\n      blId: blId,\n      flId: flId,\n      svgElementId: '',\n      compId: this.compId\n    }\n    this.blServ.getRmById(data).subscribe((res: any) => {\n      let idObj:SvgElementIdType ={\n        roomElementId:res.rm.svgElementId,\n        assetElementId : null\n      }\n      let colorObj: SvgElementColorType ={\n        roomColor:\"#ff0000\",\n        assetColor: null\n      }\n      let contentData:SvgRoomContentData ={\n        blId:blId,\n        flId:flId,\n        rmId:res.rm.rmId,\n        label:empLabel!=\"\"?[res.rm.rmId,empLabel]:[res.rm.rmId],\n        showLabel:true,\n        highlightRoom:true,\n        svgElementId : idObj,\n        color:colorObj,\n        rmCode:'',\n        zoomAtRoom:false\n      }\n      this.svgRoomData.content.push(contentData);\n      this.roomDetails.push(res);\n    })\n    this.svgRoomData.blId = blId;\n    this.svgRoomData.flId = flId;\n    this.svgRoomData.locate = \"room\";\n  }\n\n  onClear() {\n    this.roomDetails = [];\n    this.viewSvg = false;\n    this.fileName = '';\n    this.fileString = '';\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null,\n      rmId: null,\n      emId: null\n    });\n    if (this.isRoomView && this.isEmployeeView) {\n      this.isRoomView = false;\n    };\n    this.svgRoomData = new SvgRoomData(null,null,\"\",[]);\n  }\n\n}\n","<div class=\"card\">\n    <form [formGroup]=\"filterPanel\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"width: 20%\">\n                    <div style=\"display: flex;\">\n                        <div style=\"display: flex; align-items: center; margin-left: 5px;\">\n                            <label class='form-field-lable' style=\"margin-right: 5px;\">Locate</label>\n                        </div>\n                        <div style=\"display: flex;\">\n                            <div class=\"input-label-custom \">\n                                <p-radioButton name=\"viewFor\" value=\"Room\" formControlName=\"viewFor\" (click)=\"onRoom()\">\n                                </p-radioButton>\n                                <label class='form-field-lable' style=\"margin-left: 5px;\">Room</label>\n                            </div>\n                            <div class=\"input-label-custom \">\n                                <p-radioButton name=\"viewFor\" value=\"Employee\" formControlName=\"viewFor\"\n                                    (click)=\"onEmployee()\">\n                                </p-radioButton>\n                                <label class='form-field-lable' style=\"margin-left: 5px;\">Employee</label>\n                            </div>\n                        </div>\n                    </div>\n                </td>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td style=\"width: 20%;\">\n                    <div style=\"margin: 5px 0 0 5px \">\n                        <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple label=\"Search\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                    </div>\n                </td>\n            </tr>\n            <tr *ngIf=\"isEmployeeView\">\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Employee </label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumEm\" formControlName=\"emId\"\n                            [searchable]=\"true\" bindLabel=\"fullName\" bindValue=\"emId\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n            </tr>\n            <tr>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Building </label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" (change)=\"onSelectBlCode($event)\"\n                            placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                            [readonly]=\"isEmployeeView\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Floor</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\" (change)=\"onSelectFlCode($event)\"\n                            [readonly]=\"isEmployeeView\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Room</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"rm_data\" formControlName=\"rmId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\" (change)=\"onSelectRmCode($event)\"\n                            [readonly]=\"isEmployeeView\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                </td>\n                <td style=\"width: 20%\">\n                </td>\n            </tr>\n        </table>\n    </form>\n\n</div>\n<div class=\"card no-file-found\" *ngIf=\"noSVGFound\">\n    <h1>No Floorplan available</h1>\n</div>\n<div class=\"card\" *ngIf=\"viewSvg \">\n    <app-svg-view \n    style=\"height: 500px;\"></app-svg-view>\n</div>\n\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#879cc9\" class=\"spinner-color\" type=\"ball-fussion\"\n    *ngIf=\"showSpinner\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n</ngx-spinner>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}