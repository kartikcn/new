{"ast":null,"code":"import { PpmScheduleTypeComponent } from '../widgets/ppm-schedule-type/ppm-schedule-type.component';\nimport { PpmScheduleTypeListComponent } from '../widgets/ppm-schedule-type-list/ppm-schedule-type-list.component';\nimport { PlanLocAssetListComponent } from '../widgets/plan-loc-asset-list/plan-loc-asset-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../widgets/plan-loc-asset-list/plan-loc-asset-list.component\";\nimport * as i3 from \"primeng/panel\";\nexport let PpmScheduleComponent = /*#__PURE__*/(() => {\n  class PpmScheduleComponent {\n    constructor(router, route) {\n      this.router = router;\n      this.route = route;\n      this.planLocEqId = 0;\n      this.showChild = false;\n      this.route.queryParams.subscribe(params => {\n        if (params.planId != null) {\n          this.planId = params.planId;\n        } else {\n          this.planId = null;\n        }\n      });\n    }\n    ngOnInit() {}\n    ngAfterViewInit() {\n      if (this.planId) {\n        this.planLocAssetListComponent.getPlanLocAssetByPlanId(this.planId);\n      } else {\n        this.planLocAssetListComponent.loadData();\n      }\n    }\n    onRowSelect(event) {\n      let gridTitle = `Plan Schedule Details For ( ${event.data.blName} | ${event.data.flName} | ${event.data.rmName} `;\n      gridTitle = event.data.eqId ? `${gridTitle} | ${event.data.eqCode} )` : `${gridTitle} )`;\n      this.router.navigate(['/schedule-details'], {\n        queryParams: {\n          planLocEqId: event.data.planLocEqId,\n          gridTitle: gridTitle,\n          planId: this.planId\n        },\n        skipLocationChange: true\n      });\n    }\n    static #_ = this.ɵfac = function PpmScheduleComponent_Factory(t) {\n      return new (t || PpmScheduleComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PpmScheduleComponent,\n      selectors: [[\"app-ppm-schedule\"]],\n      viewQuery: function PpmScheduleComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(PpmScheduleTypeComponent, 5);\n          i0.ɵɵviewQuery(PpmScheduleTypeListComponent, 5);\n          i0.ɵɵviewQuery(PlanLocAssetListComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ppmScheduleTypeComponent = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ppmScheduleTypeListComponent = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.planLocAssetListComponent = _t.first);\n        }\n      },\n      decls: 3,\n      vars: 0,\n      consts: [[1, \"card\", 2, \"height\", \"90vh\"], [\"header\", \"Select a plan to define/edit schedules\"], [3, \"parentFun\"]],\n      template: function PpmScheduleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"app-plan-loc-asset-list\", 2);\n          i0.ɵɵlistener(\"parentFun\", function PpmScheduleComponent_Template_app_plan_loc_asset_list_parentFun_2_listener($event) {\n            return ctx.onRowSelect($event);\n          });\n          i0.ɵɵelementEnd()()();\n        }\n      },\n      dependencies: [i2.PlanLocAssetListComponent, i3.Panel]\n    });\n  }\n  return PpmScheduleComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}