{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport class RmResourcesService {\n  constructor(rmResourceService, rmResourceDetailService) {\n    this.rmResourceService = rmResourceService;\n    this.rmResourceDetailService = rmResourceDetailService;\n  }\n  getUnAssignedResources(data) {\n    return this.rmResourceService.search('resources', 'getUnAssigned', data);\n  }\n  getAssignedResources(data) {\n    return this.rmResourceService.search('resources', 'getAssigned', data);\n  }\n  saveRmResource(data) {\n    return this.rmResourceDetailService.add('rmResources', 'save', data);\n  }\n  deleteUserUnAssignedScreens(data) {\n    return this.rmResourceDetailService.add('rmResources', 'delete', data);\n  }\n  getAllRmResources() {\n    return this.rmResourceService.getAll('rmResources', 'getAllRmResources');\n  }\n  static #_ = this.ɵfac = function RmResourcesService_Factory(t) {\n    return new (t || RmResourcesService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RmResourcesService,\n    factory: RmResourcesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RmResourcesService","constructor","rmResourceService","rmResourceDetailService","getUnAssignedResources","data","search","getAssignedResources","saveRmResource","add","deleteUserUnAssignedScreens","getAllRmResources","getAll","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\rm-resources\\service\\rm-resources.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from '../../../services/data.service';\nimport { Resources } from '../../resources/model/resourcesDTO';\nimport { RmResourcesDTO } from '../model/rm-resourcesDTO';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RmResourcesService {\n\n  constructor(\n    private rmResourceService: DataService<any>,\n    private rmResourceDetailService: DataService<RmResourcesDTO>\n\n  ) { }\n\n  public getUnAssignedResources(data:any) {\n    return this.rmResourceService.search('resources', 'getUnAssigned',data);\n  }\n\n  public getAssignedResources(data:any) {\n    return this.rmResourceService.search('resources', 'getAssigned',data);\n  }\n  \n  public saveRmResource(data: any): Observable<any> {\n    return this.rmResourceDetailService.add('rmResources', 'save', data);\n  }\n\n  public deleteUserUnAssignedScreens(data: any) {\n    \n    return this.rmResourceDetailService.add('rmResources', 'delete', data);\n  }\n  public getAllRmResources(){\n    return this.rmResourceService.getAll('rmResources','getAllRmResources');\n  }\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,kBAAkB;EAE7BC,YACUC,iBAAmC,EACnCC,uBAAoD;IADpD,KAAAD,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,uBAAuB,GAAvBA,uBAAuB;EAE7B;EAEGC,sBAAsBA,CAACC,IAAQ;IACpC,OAAO,IAAI,CAACH,iBAAiB,CAACI,MAAM,CAAC,WAAW,EAAE,eAAe,EAACD,IAAI,CAAC;EACzE;EAEOE,oBAAoBA,CAACF,IAAQ;IAClC,OAAO,IAAI,CAACH,iBAAiB,CAACI,MAAM,CAAC,WAAW,EAAE,aAAa,EAACD,IAAI,CAAC;EACvE;EAEOG,cAAcA,CAACH,IAAS;IAC7B,OAAO,IAAI,CAACF,uBAAuB,CAACM,GAAG,CAAC,aAAa,EAAE,MAAM,EAAEJ,IAAI,CAAC;EACtE;EAEOK,2BAA2BA,CAACL,IAAS;IAE1C,OAAO,IAAI,CAACF,uBAAuB,CAACM,GAAG,CAAC,aAAa,EAAE,QAAQ,EAAEJ,IAAI,CAAC;EACxE;EACOM,iBAAiBA,CAAA;IACtB,OAAO,IAAI,CAACT,iBAAiB,CAACU,MAAM,CAAC,aAAa,EAAC,mBAAmB,CAAC;EACzE;EAAC,QAAAC,CAAA,G;qBA1BUb,kBAAkB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBlB,kBAAkB;IAAAmB,OAAA,EAAlBnB,kBAAkB,CAAAoB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}