{"ast":null,"code":"import { UtilConstant as UC } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nexport class BreakpointService {\n  static #_ = this.clients = [];\n  static #_2 = this.tabletPotrait = UC.TABLET_POTRAIT;\n  static #_3 = this.tabletLandscape = UC.TABLET_LANDSCAPE;\n  static #_4 = this.useTabletProtrait = false;\n  static #_5 = this.useTabletLandscape = false;\n  constructor(bpo) {\n    this.bpo = bpo;\n    BreakpointService.bpoSubscription = this.bpo.observe([BreakpointService.tabletPotrait, BreakpointService.tabletLandscape]).subscribe(state => {\n      BreakpointService.useTabletProtrait = state.breakpoints[BreakpointService.tabletPotrait];\n      BreakpointService.useTabletLandscape = state.breakpoints[BreakpointService.tabletLandscape];\n      BreakpointService.clients.forEach(client => {\n        client.notify();\n      });\n    });\n  }\n  register(client) {\n    BreakpointService.clients.push(client);\n    client.notify();\n  }\n  unregister(client) {\n    const index = BreakpointService.clients.indexOf(client, 0);\n    if (index > -1) BreakpointService.clients.splice(index, 1);\n  }\n  static #_6 = this.ɵfac = function BreakpointService_Factory(t) {\n    return new (t || BreakpointService)(i0.ɵɵinject(i1.BreakpointObserver));\n  };\n  static #_7 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BreakpointService,\n    factory: BreakpointService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UtilConstant","UC","BreakpointService","_","clients","_2","tabletPotrait","TABLET_POTRAIT","_3","tabletLandscape","TABLET_LANDSCAPE","_4","useTabletProtrait","_5","useTabletLandscape","constructor","bpo","bpoSubscription","observe","subscribe","state","breakpoints","forEach","client","notify","register","push","unregister","index","indexOf","splice","_6","i0","ɵɵinject","i1","BreakpointObserver","_7","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\services\\breakpoint.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\nimport { UtilConstant as UC } from 'src/common/UtilConstant';\n \n@Injectable({\n    providedIn: 'root'\n})\n \nexport class BreakpointService \n{\n    private static clients : any[] = [];\n    private static tabletPotrait = UC.TABLET_POTRAIT;\n    private static tabletLandscape = UC.TABLET_LANDSCAPE;\n    public static useTabletProtrait = false;\n    public static useTabletLandscape = false;\n    private static bpoSubscription:any;\n \n    constructor(private bpo: BreakpointObserver)\n    {\n        BreakpointService.bpoSubscription = \n        this.bpo.observe([ BreakpointService.tabletPotrait, BreakpointService.tabletLandscape]).subscribe((state : BreakpointState) => { \n            BreakpointService.useTabletProtrait = state.breakpoints[BreakpointService.tabletPotrait];\n            BreakpointService.useTabletLandscape = state.breakpoints[BreakpointService.tabletLandscape];\n            BreakpointService.clients.forEach(client => {\n                client.notify();\n            });\n        });\n    }\n \n    public register(client : any) : void\n    {\n        BreakpointService.clients.push(client);\n        client.notify();\n    }\n \n    public unregister(client : any) : void\n    {\n        const index = BreakpointService.clients.indexOf(client, 0);\n        if (index > -1)\n            BreakpointService.clients.splice(index, 1);\n    }\n}"],"mappings":"AAEA,SAASA,YAAY,IAAIC,EAAE,QAAQ,yBAAyB;;;AAM5D,OAAM,MAAOC,iBAAiB;EAAA,QAAAC,CAAA,GAEX,KAAAC,OAAO,GAAW,EAAE;EAAA,QAAAC,EAAA,GACpB,KAAAC,aAAa,GAAGL,EAAE,CAACM,cAAc;EAAA,QAAAC,EAAA,GACjC,KAAAC,eAAe,GAAGR,EAAE,CAACS,gBAAgB;EAAA,QAAAC,EAAA,GACtC,KAAAC,iBAAiB,GAAG,KAAK;EAAA,QAAAC,EAAA,GACzB,KAAAC,kBAAkB,GAAG,KAAK;EAGxCC,YAAoBC,GAAuB;IAAvB,KAAAA,GAAG,GAAHA,GAAG;IAEnBd,iBAAiB,CAACe,eAAe,GACjC,IAAI,CAACD,GAAG,CAACE,OAAO,CAAC,CAAEhB,iBAAiB,CAACI,aAAa,EAAEJ,iBAAiB,CAACO,eAAe,CAAC,CAAC,CAACU,SAAS,CAAEC,KAAuB,IAAI;MAC1HlB,iBAAiB,CAACU,iBAAiB,GAAGQ,KAAK,CAACC,WAAW,CAACnB,iBAAiB,CAACI,aAAa,CAAC;MACxFJ,iBAAiB,CAACY,kBAAkB,GAAGM,KAAK,CAACC,WAAW,CAACnB,iBAAiB,CAACO,eAAe,CAAC;MAC3FP,iBAAiB,CAACE,OAAO,CAACkB,OAAO,CAACC,MAAM,IAAG;QACvCA,MAAM,CAACC,MAAM,EAAE;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEOC,QAAQA,CAACF,MAAY;IAExBrB,iBAAiB,CAACE,OAAO,CAACsB,IAAI,CAACH,MAAM,CAAC;IACtCA,MAAM,CAACC,MAAM,EAAE;EACnB;EAEOG,UAAUA,CAACJ,MAAY;IAE1B,MAAMK,KAAK,GAAG1B,iBAAiB,CAACE,OAAO,CAACyB,OAAO,CAACN,MAAM,EAAE,CAAC,CAAC;IAC1D,IAAIK,KAAK,GAAG,CAAC,CAAC,EACV1B,iBAAiB,CAACE,OAAO,CAAC0B,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;EAClD;EAAC,QAAAG,EAAA,G;qBAhCQ7B,iBAAiB,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBlC,iBAAiB;IAAAmC,OAAA,EAAjBnC,iBAAiB,CAAAoC,IAAA;IAAAC,UAAA,EAHd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}