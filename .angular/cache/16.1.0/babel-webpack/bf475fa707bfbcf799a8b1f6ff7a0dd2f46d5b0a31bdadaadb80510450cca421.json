{"ast":null,"code":"import * as FileSaver from 'file-saver';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/enum.service\";\nimport * as i2 from \"src/app/ui/employee/services/employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"primeng/table\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/dropdown\";\nimport * as i10 from \"ng-zorro-antd/table\";\nimport * as i11 from \"@angular/material/tooltip\";\nfunction AddTableComponent_ng_template_4_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30)(1, \"div\", 9)(2, \"div\", 10)(3, \"p\", 11);\n    i0.ɵɵtext(4, \"Requested For \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵelement(6, \"p-sortIcon\", 31)(7, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddTableComponent_ng_template_4_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 33);\n    i0.ɵɵlistener(\"onChange\", function AddTableComponent_ng_template_4_ng_template_35_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const filter_r10 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r10($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r9 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r9)(\"options\", ctx_r4.enumStatusData)(\"showClear\", true);\n  }\n}\nfunction AddTableComponent_ng_template_4_th_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 34)(1, \"div\", 9)(2, \"div\", 10)(3, \"p\", 11);\n    i0.ɵɵtext(4, \"Date To Respond\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵelement(6, \"p-sortIcon\", 35)(7, \"p-columnFilter\", 36);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddTableComponent_ng_template_4_th_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37)(1, \"div\", 9)(2, \"div\", 10)(3, \"p\", 11);\n    i0.ɵɵtext(4, \"Date Responded\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵelement(6, \"p-sortIcon\", 38)(7, \"p-columnFilter\", 39);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddTableComponent_ng_template_4_th_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 40)(1, \"div\", 9)(2, \"div\", 10)(3, \"p\", 11);\n    i0.ɵɵtext(4, \"Date To Complete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵelement(6, \"p-sortIcon\", 41)(7, \"p-columnFilter\", 42);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddTableComponent_ng_template_4_th_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 43)(1, \"div\", 9)(2, \"div\", 10)(3, \"p\", 11);\n    i0.ɵɵtext(4, \"Date Completed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵelement(6, \"p-sortIcon\", 44)(7, \"p-columnFilter\", 45);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddTableComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 7);\n    i0.ɵɵelementStart(2, \"th\", 8)(3, \"div\", 9)(4, \"div\", 10)(5, \"p\", 11);\n    i0.ɵɵtext(6, \"Request Id \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 12);\n    i0.ɵɵelement(8, \"p-sortIcon\", 13)(9, \"p-columnFilter\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 15)(11, \"div\", 9)(12, \"div\", 10)(13, \"p\", 11);\n    i0.ɵɵtext(14, \"Requested Date \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 12);\n    i0.ɵɵelement(16, \"p-sortIcon\", 16)(17, \"p-columnFilter\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(18, AddTableComponent_ng_template_4_th_18_Template, 8, 0, \"th\", 18);\n    i0.ɵɵelementStart(19, \"th\", 19)(20, \"div\", 9)(21, \"div\", 10)(22, \"p\", 11);\n    i0.ɵɵtext(23, \"Problem Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 12);\n    i0.ɵɵelement(25, \"p-sortIcon\", 20)(26, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"th\", 22)(28, \"div\", 9)(29, \"div\", 10)(30, \"p\", 11);\n    i0.ɵɵtext(31, \"Status\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 12);\n    i0.ɵɵelement(33, \"p-sortIcon\", 23);\n    i0.ɵɵelementStart(34, \"p-columnFilter\", 24);\n    i0.ɵɵtemplate(35, AddTableComponent_ng_template_4_ng_template_35_Template, 1, 3, \"ng-template\", 25);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(36, AddTableComponent_ng_template_4_th_36_Template, 8, 0, \"th\", 26);\n    i0.ɵɵtemplate(37, AddTableComponent_ng_template_4_th_37_Template, 8, 0, \"th\", 27);\n    i0.ɵɵtemplate(38, AddTableComponent_ng_template_4_th_38_Template, 8, 0, \"th\", 28);\n    i0.ɵɵtemplate(39, AddTableComponent_ng_template_4_th_39_Template, 8, 0, \"th\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isEscalatedData);\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isEscalatedData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isEscalatedData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isEscalatedData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isEscalatedData);\n  }\n}\nfunction AddTableComponent_ng_template_5_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const wr_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.getEmployeeFullName(wr_r13.requestedFor));\n  }\n}\nfunction AddTableComponent_ng_template_5_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const wr_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(2, 2, wr_r13.escDateResponded, \"dd MMM yyyy\"), \" \", ctx_r15.convertToDisplayTime(wr_r13.escTimeResponded), \"\");\n  }\n}\nfunction AddTableComponent_ng_template_5_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const wr_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(2, 2, wr_r13.dateResponded, \"dd MMM yyyy\"), \" \", ctx_r16.convertToDisplayTime(wr_r13.timeResponded), \"\");\n  }\n}\nfunction AddTableComponent_ng_template_5_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const wr_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(2, 2, wr_r13.escDateCompleted, \"dd MMM yyyy\"), \" \", ctx_r17.convertToDisplayTime(wr_r13.escTimeCompleted), \"\");\n  }\n}\nfunction AddTableComponent_ng_template_5_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const wr_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(2, 2, wr_r13.dateCompleted, \"dd MMM yyyy\"), \" \", ctx_r18.convertToDisplayTime(wr_r13.timeCompleted), \"\");\n  }\n}\nfunction AddTableComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 46)(1, \"td\", 7)(2, \"button\", 47);\n    i0.ɵɵlistener(\"click\", function AddTableComponent_ng_template_5_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const wr_r13 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.onClickView(wr_r13));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, AddTableComponent_ng_template_5_td_8_Template, 2, 1, \"td\", 48);\n    i0.ɵɵelementStart(9, \"td\", 49);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, AddTableComponent_ng_template_5_td_13_Template, 3, 5, \"td\", 48);\n    i0.ɵɵtemplate(14, AddTableComponent_ng_template_5_td_14_Template, 3, 5, \"td\", 48);\n    i0.ɵɵtemplate(15, AddTableComponent_ng_template_5_td_15_Template, 3, 5, \"td\", 48);\n    i0.ɵɵtemplate(16, AddTableComponent_ng_template_5_td_16_Template, 3, 5, \"td\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const wr_r13 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", wr_r13);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(wr_r13.wrId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 11, wr_r13.dateRequested, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isEscalatedData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", wr_r13.problemTypeString);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", wr_r13.problemTypeString, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getEnumByEnumId(wr_r13.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isEscalatedData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isEscalatedData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isEscalatedData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isEscalatedData);\n  }\n}\nfunction AddTableComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records to display. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 5);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nexport let AddTableComponent = /*#__PURE__*/(() => {\n  class AddTableComponent {\n    constructor(enumsrv, employeeService, router, datePripe) {\n      this.enumsrv = enumsrv;\n      this.employeeService = employeeService;\n      this.router = router;\n      this.datePripe = datePripe;\n      this.loading = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.enumStatusData = [];\n      this.requestsData = [];\n      this.enumStauts = [];\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.allEmployees = [];\n      this.enumEm = [];\n      this.enumStatusFilter = [];\n      this.req_array = [];\n      this.isEscalatedData = false;\n    }\n    ngOnInit() {\n      this.requestsData = this.data;\n      this.loadAllEnums();\n      this.loadAllEmployee();\n    }\n    getRequestData(data) {\n      this.requestsData = data;\n    }\n    loadAllEnums() {\n      this.enumsrv.getEnums().subscribe(res => {\n        if (res) {\n          this.enumList = res;\n          this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n          // this.enumStauts = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n          this.enumStatusData = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n          this.enumStatusFilter = [...this.enumStatusData];\n          this.enumStatusFilter.unshift(new EnumList(null, \"\", \"\", 'Make a selection', null));\n        }\n      });\n    }\n    loadAllEmployee() {\n      this.employeeService.getAllEmployeeList().subscribe(res => {\n        if (res) {\n          this.allEmployees = res;\n        } else {\n          this.allEmployees = [];\n        }\n      });\n    }\n    getEnumByEnumId(enumKey) {\n      return this.enumStatusData.find(t => t.enumKey === enumKey)?.enumValue;\n    }\n    getEmployeeFullName(id) {\n      if (this.allEmployees) {\n        this.enumEm = this.allEmployees.filter(em => em.emId === id);\n        this.fullName = this.enumEm.map(em => {\n          if (em.firstName.length > 0 && em.lastName.length > 0) {\n            return em.firstName + \" \" + em.lastName + ' - ' + em.emCode;\n          } else {\n            return em.firstName + ' - ' + em.emCode;\n          }\n        });\n      }\n      return this.fullName[0];\n    }\n    getDestructuredData(req_data) {\n      if (this.isEscalatedData) {\n        this.req_array = req_data.map(item => {\n          console.log(item);\n          return {\n            \"Request Id\": item['wrId'],\n            \"Requested Date\": this.datePripe.transform(item['dateRequested'], 'dd MMM yyyy'),\n            \"Problem Type\": item['problemTypeString'],\n            \"Status\": this.getEnumByEnumId(item['status']),\n            \"Date To Respond\": item['escDateResponded'] ? this.datePripe.transform(item['escDateResponded'], 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(item['escTimeResponded']) : '',\n            \"Date Responded\": item['dateResponded'] ? this.datePripe.transform(item['dateResponded'], 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(item['timeResponded']) : '',\n            \"Date To Complete\": item['escDateCompleted'] ? this.datePripe.transform(item['escDateCompleted'], 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(item['escTimeCompleted']) : '',\n            \"Date Completed\": item['dateCompleted'] ? this.datePripe.transform(item['dateCompleted'], 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(item['timeCompleted']) : ''\n          };\n        });\n      } else {\n        this.req_array = req_data.map(item => {\n          return {\n            \"Request Id\": item['wrId'],\n            \"Requested Date\": this.datePripe.transform(item['dateRequested'], 'dd MMM yyyy'),\n            \"Requested For\": this.getEmployeeFullName(item['requestedFor']),\n            \"Problem Type\": item['problemTypeString'],\n            \"Status\": this.getEnumByEnumId(item['status'])\n          };\n        });\n      }\n    }\n    saveAsExcelFile(buffer, fileName) {\n      let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n      let EXCEL_EXTENSION = '.xlsx';\n      const data = new Blob([buffer], {\n        type: EXCEL_TYPE\n      });\n      FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n    }\n    onClickView(data) {\n      const wrId = data.wrId;\n      const status = data.status;\n      const url = this.router.serializeUrl(this.router.createUrlTree([\"/work-request-details\"], {\n        queryParams: {\n          requestId: wrId,\n          index: 0,\n          action: \"details\",\n          status: status,\n          viewDetails: true,\n          isNavigationFromReport: true\n        }\n      }));\n      window.open(url, '_blank');\n    }\n    exportExcel() {\n      this.getDestructuredData(this.requestsData);\n      var excelHeaders = [];\n      import(\"xlsx\").then(xlsx => {\n        const worksheet = xlsx.utils.json_to_sheet(this.req_array);\n        if (this.isEscalatedData) {\n          worksheet['!cols'] = [{\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }];\n          excelHeaders = [\"Request Id\", \"Requested Date\", \"Problem Type\", \"Status\", \"Date To Respond\", \"Date Responded\", \"Date To Complete\", \"Date Completed\"];\n        } else {\n          worksheet['!cols'] = [{\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }, {\n            wch: 20\n          }];\n          excelHeaders = [\"Request Id\", \"Requested Date\", \"Requested For\", \"Problem Type\", \"Status\"];\n        }\n        // Insert the headers in the worksheet\n        const headers = excelHeaders.map((header, index) => ({\n          v: header,\n          position: String.fromCharCode(65 + index) + 1\n        }));\n        headers.forEach(header => {\n          worksheet[header.position] = {\n            v: header.v\n          };\n        });\n        const workbook = {\n          Sheets: {\n            'data': worksheet\n          },\n          SheetNames: ['data']\n        };\n        const excelBuffer = xlsx.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array'\n        });\n        this.saveAsExcelFile(excelBuffer, \"requests\");\n      });\n    }\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    static #_ = this.ɵfac = function AddTableComponent_Factory(t) {\n      return new (t || AddTableComponent)(i0.ɵɵdirectiveInject(i1.EnumService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DatePipe));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddTableComponent,\n      selectors: [[\"app-add-table\"]],\n      inputs: {\n        data: \"data\",\n        isEscalatedData: \"isEscalatedData\"\n      },\n      decls: 7,\n      vars: 10,\n      consts: [[1, \"card\"], [2, \"margin\", \"10px\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-excel\", \"matTooltip\", \"XLS\", \"matTooltipPosition\", \"bottom\", 1, \"p-button-success\", \"p-mr-2\", \"pull-right\", 3, \"disabled\", \"click\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"scrollDirection\", \"both\", \"scrollHeight\", \"400px\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"dataKey\", \"wrId\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"scrollable\", \"rowHover\", \"totalRecords\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"wrId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"wrId\"], [\"type\", \"text\", \"field\", \"wrId\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateRequested\"], [\"field\", \"formatedDateRequested\"], [\"matchMode\", \"contains\", \"type\", \"text\", \"field\", \"formatedDateRequested\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedRequestedFor\", 4, \"ngIf\"], [\"pSortableColumn\", \"problemTypeString\"], [\"field\", \"problemTypeString\"], [\"matchMode\", \"contains\", \"type\", \"text\", \"field\", \"problemTypeString\", \"display\", \"menu\"], [\"pSortableColumn\", \"status\"], [\"field\", \"status\"], [\"field\", \"status\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"pSortableColumn\", \"fromatedDateToRespond\", 4, \"ngIf\"], [\"pSortableColumn\", \"formatedDateResponded\", 4, \"ngIf\"], [\"pSortableColumn\", \"formatedDateToComplete\", 4, \"ngIf\"], [\"pSortableColumn\", \"formatedDateCompleted\", 4, \"ngIf\"], [\"pSortableColumn\", \"formatedRequestedFor\"], [\"field\", \"formatedRequestedFor\"], [\"matchMode\", \"contains\", \"type\", \"text\", \"field\", \"formatedRequestedFor\", \"display\", \"menu\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Status\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [\"pSortableColumn\", \"fromatedDateToRespond\"], [\"field\", \"fromatedDateToRespond\"], [\"type\", \"text\", \"field\", \"fromatedDateToRespond\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateResponded\"], [\"field\", \"formatedDateResponded\"], [\"type\", \"text\", \"field\", \"formatedDateResponded\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateToComplete\"], [\"field\", \"formatedDateToComplete\"], [\"type\", \"text\", \"field\", \"formatedDateToComplete\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateCompleted\"], [\"field\", \"formatedDateCompleted\"], [\"type\", \"text\", \"field\", \"formatedDateCompleted\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"matTooltip\", \"View\", \"matTooltipPosition\", \"below\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [4, \"ngIf\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"]],\n      template: function AddTableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AddTableComponent_Template_button_click_2_listener() {\n            return ctx.exportExcel();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"p-table\", 3);\n          i0.ɵɵtemplate(4, AddTableComponent_ng_template_4_Template, 40, 5, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, AddTableComponent_ng_template_5_Template, 17, 14, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, AddTableComponent_ng_template_6_Template, 3, 1, \"ng-template\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.requestsData.length == 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.requestsData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0))(\"scrollable\", true)(\"rowHover\", false)(\"totalRecords\", ctx.requestsData.length);\n        }\n      },\n      dependencies: [i4.NgIf, i5.NgControlStatus, i5.NgModel, i6.PrimeTemplate, i7.Table, i7.SortableColumn, i7.SelectableRow, i7.SortIcon, i7.ColumnFilter, i8.ButtonDirective, i9.Dropdown, i10.NzTableCellDirective, i10.NzThMeasureDirective, i10.NzTrDirective, i11.MatTooltip, i4.DatePipe],\n      styles: [\".dark-panel.p-dialog .p-dialog-header{border-radius:5px 5px 0 0/5px 5px 0px 0px;padding:10px 10px 10px 20px}  .p-dialog-content{overflow:visible}  .p-dialog .p-dialog-content{padding:10px}\"]\n    });\n  }\n  return AddTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}