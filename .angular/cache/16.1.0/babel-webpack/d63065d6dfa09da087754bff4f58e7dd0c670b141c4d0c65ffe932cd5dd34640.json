{"ast":null,"code":"import { PpmScheduleTypeComponent } from '../widgets/ppm-schedule-type/ppm-schedule-type.component';\nimport { PpmScheduleTypeListComponent } from '../widgets/ppm-schedule-type-list/ppm-schedule-type-list.component';\nimport { PlanLocAssetListComponent } from '../widgets/plan-loc-asset-list/plan-loc-asset-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../widgets/plan-loc-asset-list/plan-loc-asset-list.component\";\nimport * as i3 from \"primeng/panel\";\nexport class PpmScheduleComponent {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.planLocEqId = 0;\n    this.showChild = false;\n    this.route.queryParams.subscribe(params => {\n      if (params.planId != null) {\n        this.planId = params.planId;\n      } else {\n        this.planId = null;\n      }\n    });\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    if (this.planId) {\n      this.planLocAssetListComponent.getPlanLocAssetByPlanId(this.planId);\n    } else {\n      this.planLocAssetListComponent.loadData();\n    }\n  }\n  onRowSelect(event) {\n    let gridTitle = `Plan Schedule Details For ( ${event.data.blName} | ${event.data.flName} | ${event.data.rmName} `;\n    gridTitle = event.data.eqId ? `${gridTitle} | ${event.data.eqCode} )` : `${gridTitle} )`;\n    this.router.navigate(['/schedule-details'], {\n      queryParams: {\n        planLocEqId: event.data.planLocEqId,\n        gridTitle: gridTitle,\n        planId: this.planId\n      },\n      skipLocationChange: true\n    });\n  }\n  static #_ = this.ɵfac = function PpmScheduleComponent_Factory(t) {\n    return new (t || PpmScheduleComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PpmScheduleComponent,\n    selectors: [[\"app-ppm-schedule\"]],\n    viewQuery: function PpmScheduleComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(PpmScheduleTypeComponent, 5);\n        i0.ɵɵviewQuery(PpmScheduleTypeListComponent, 5);\n        i0.ɵɵviewQuery(PlanLocAssetListComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ppmScheduleTypeComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ppmScheduleTypeListComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.planLocAssetListComponent = _t.first);\n      }\n    },\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"card\", 2, \"height\", \"90vh\"], [\"header\", \"Select a plan to define/edit schedules\"], [3, \"parentFun\"]],\n    template: function PpmScheduleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"app-plan-loc-asset-list\", 2);\n        i0.ɵɵlistener(\"parentFun\", function PpmScheduleComponent_Template_app_plan_loc_asset_list_parentFun_2_listener($event) {\n          return ctx.onRowSelect($event);\n        });\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i2.PlanLocAssetListComponent, i3.Panel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["PpmScheduleTypeComponent","PpmScheduleTypeListComponent","PlanLocAssetListComponent","PpmScheduleComponent","constructor","router","route","planLocEqId","showChild","queryParams","subscribe","params","planId","ngOnInit","ngAfterViewInit","planLocAssetListComponent","getPlanLocAssetByPlanId","loadData","onRowSelect","event","gridTitle","data","blName","flName","rmName","eqId","eqCode","navigate","skipLocationChange","_","i0","ɵɵdirectiveInject","i1","Router","ActivatedRoute","_2","selectors","viewQuery","PpmScheduleComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","PpmScheduleComponent_Template_app_plan_loc_asset_list_parentFun_2_listener","$event","ɵɵelementEnd"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/ppm-schedule/modal/ppm-schedule.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/ppm-schedule/modal/ppm-schedule.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { PpmScheduleTypeComponent } from '../widgets/ppm-schedule-type/ppm-schedule-type.component';\nimport { PpmScheduleTypeListComponent } from '../widgets/ppm-schedule-type-list/ppm-schedule-type-list.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlanLocAssetListComponent } from '../widgets/plan-loc-asset-list/plan-loc-asset-list.component';\n\n@Component({\n  selector: 'app-ppm-schedule',\n  templateUrl: './ppm-schedule.component.html',\n  styleUrls: ['./ppm-schedule.component.scss']\n})\nexport class PpmScheduleComponent {\n  @ViewChild(PpmScheduleTypeComponent, { static: false }) ppmScheduleTypeComponent!: PpmScheduleTypeComponent;\n  @ViewChild(PpmScheduleTypeListComponent, { static: false }) ppmScheduleTypeListComponent!: PpmScheduleTypeListComponent;\n  @ViewChild(PlanLocAssetListComponent, { static: false }) planLocAssetListComponent!: PlanLocAssetListComponent;\n  planLocEqId: number = 0\n  showChild: boolean = false;\n  planId:any;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {\n    this.route.queryParams.subscribe(params => {\n      if (params.planId != null) {\n        this.planId = params.planId;\n      } else {\n        this.planId = null;\n      }\n    });\n  }\n  ngOnInit() {\n   \n  }\n  ngAfterViewInit() {\n    if(this.planId){\n      this.planLocAssetListComponent.getPlanLocAssetByPlanId(this.planId);\n    } else {\n      this.planLocAssetListComponent.loadData();\n    }\n  }\n  onRowSelect(event: any) {\n    let gridTitle = `Plan Schedule Details For ( ${event.data.blName} | ${event.data.flName} | ${event.data.rmName} `;\n    gridTitle =   event.data.eqId ? `${gridTitle} | ${event.data.eqCode} )` : `${gridTitle} )`;\n    this.router.navigate(['/schedule-details'], {\n      queryParams: {\n        planLocEqId: event.data.planLocEqId, gridTitle: gridTitle,planId:this.planId\n      },skipLocationChange:true\n    })\n  }\n\n}\n","<div class=\"card\" style=\"height:90vh;\">\n    <p-panel header=\"Select a plan to define/edit schedules\">\n        <app-plan-loc-asset-list (parentFun)=\"onRowSelect($event)\"></app-plan-loc-asset-list>\n    </p-panel>\n</div>\n"],"mappings":"AACA,SAASA,wBAAwB,QAAQ,0DAA0D;AACnG,SAASC,4BAA4B,QAAQ,oEAAoE;AAEjH,SAASC,yBAAyB,QAAQ,8DAA8D;;;;;AAOxG,OAAM,MAAOC,oBAAoB;EAO/BC,YACUC,MAAc,EACdC,KAAqB;IADrB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IALf,KAAAC,WAAW,GAAW,CAAC;IACvB,KAAAC,SAAS,GAAY,KAAK;IAMxB,IAAI,CAACF,KAAK,CAACG,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,IAAIA,MAAM,CAACC,MAAM,IAAI,IAAI,EAAE;QACzB,IAAI,CAACA,MAAM,GAAGD,MAAM,CAACC,MAAM;OAC5B,MAAM;QACL,IAAI,CAACA,MAAM,GAAG,IAAI;;IAEtB,CAAC,CAAC;EACJ;EACAC,QAAQA,CAAA,GAER;EACAC,eAAeA,CAAA;IACb,IAAG,IAAI,CAACF,MAAM,EAAC;MACb,IAAI,CAACG,yBAAyB,CAACC,uBAAuB,CAAC,IAAI,CAACJ,MAAM,CAAC;KACpE,MAAM;MACL,IAAI,CAACG,yBAAyB,CAACE,QAAQ,EAAE;;EAE7C;EACAC,WAAWA,CAACC,KAAU;IACpB,IAAIC,SAAS,GAAG,+BAA+BD,KAAK,CAACE,IAAI,CAACC,MAAM,MAAMH,KAAK,CAACE,IAAI,CAACE,MAAM,MAAMJ,KAAK,CAACE,IAAI,CAACG,MAAM,GAAG;IACjHJ,SAAS,GAAKD,KAAK,CAACE,IAAI,CAACI,IAAI,GAAG,GAAGL,SAAS,MAAMD,KAAK,CAACE,IAAI,CAACK,MAAM,IAAI,GAAG,GAAGN,SAAS,IAAI;IAC1F,IAAI,CAACf,MAAM,CAACsB,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE;MAC1ClB,WAAW,EAAE;QACXF,WAAW,EAAEY,KAAK,CAACE,IAAI,CAACd,WAAW;QAAEa,SAAS,EAAEA,SAAS;QAACR,MAAM,EAAC,IAAI,CAACA;OACvE;MAACgB,kBAAkB,EAAC;KACtB,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBArCU1B,oBAAoB,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBhC,oBAAoB;IAAAiC,SAAA;IAAAC,SAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;uBACpBvC,wBAAwB;uBACxBC,4BAA4B;uBAC5BC,yBAAyB;;;;;;;;;;;;;;QCdtC4B,EAAA,CAAAW,cAAA,aAAuC;QAENX,EAAA,CAAAY,UAAA,uBAAAC,2EAAAC,MAAA;UAAA,OAAaJ,GAAA,CAAAtB,WAAA,CAAA0B,MAAA,CAAmB;QAAA,EAAC;QAACd,EAAA,CAAAe,YAAA,EAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}