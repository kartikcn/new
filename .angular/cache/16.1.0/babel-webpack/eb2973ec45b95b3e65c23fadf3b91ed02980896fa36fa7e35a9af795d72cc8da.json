{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"../services/document-list-services\";\nimport * as i3 from \"../provider/add-documents-list-provider\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/accordion\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/panel\";\nimport * as i11 from \"primeng/confirmdialog\";\nimport * as i12 from \"@angular/material/tooltip\";\nfunction DocumentsListComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function DocumentsListComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAddDocuments());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DocumentsListComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 13);\n    i0.ɵɵelementStart(2, \"th\", 14)(3, \"div\", 15)(4, \"div\", 16)(5, \"p\", 17);\n    i0.ɵɵtext(6, \"Document Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 18);\n    i0.ɵɵelement(8, \"p-sortIcon\", 19)(9, \"p-columnFilter\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 21)(11, \"div\", 15)(12, \"div\", 16)(13, \"p\", 17);\n    i0.ɵɵtext(14, \"Document Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 18);\n    i0.ɵɵelement(16, \"p-sortIcon\", 22)(17, \"p-columnFilter\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 24)(19, \"div\", 15)(20, \"div\", 16)(21, \"p\", 17);\n    i0.ɵɵtext(22, \"Notes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 18);\n    i0.ɵɵelement(24, \"p-sortIcon\", 25)(25, \"p-columnFilter\", 26);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction DocumentsListComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 27)(1, \"td\", 13)(2, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function DocumentsListComponent_ng_template_5_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const doc_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.showDocumentDialog(doc_r7));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function DocumentsListComponent_ng_template_5_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const doc_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onDelete(doc_r7));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\", 30);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\", 30);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const doc_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", doc_r7);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", doc_r7.docName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(doc_r7.docName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doc_r7.docType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", doc_r7.notes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(doc_r7.notes);\n  }\n}\nfunction DocumentsListComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 31);\n    i0.ɵɵtext(2, \" No Records Found \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 36);\n    i0.ɵɵelementStart(2, \"th\", 14)(3, \"div\", 15)(4, \"div\", 16)(5, \"p\", 17);\n    i0.ɵɵtext(6, \"Document Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 18);\n    i0.ɵɵelement(8, \"p-sortIcon\", 19)(9, \"p-columnFilter\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 21)(11, \"div\", 15)(12, \"div\", 16)(13, \"p\", 17);\n    i0.ɵɵtext(14, \"Document Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 18);\n    i0.ɵɵelement(16, \"p-sortIcon\", 22)(17, \"p-columnFilter\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 24)(19, \"div\", 15)(20, \"div\", 16)(21, \"p\", 17);\n    i0.ɵɵtext(22, \"Notes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 18);\n    i0.ɵɵelement(24, \"p-sortIcon\", 25)(25, \"p-columnFilter\", 26);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 27)(1, \"td\", 36)(2, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_ng_template_3_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const doc_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r19.showDocumentDialog(doc_r18));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\", 30);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 30);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const doc_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", doc_r18);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", doc_r18.docName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", doc_r18.docName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doc_r18.docType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", doc_r18.notes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", doc_r18.notes, \" \");\n  }\n}\nfunction DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 31);\n    i0.ɵɵtext(2, \" No Records Found \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-accordionTab\", 35)(1, \"p-table\", 3);\n    i0.ɵɵtemplate(2, DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_ng_template_2_Template, 26, 0, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_ng_template_3_Template, 9, 6, \"ng-template\", 5);\n    i0.ɵɵtemplate(4, DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_ng_template_4_Template, 3, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const title_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"header\", title_r14.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r13.cardData)(\"paginator\", true)(\"rows\", ctx_r13.rowCount)(\"showCurrentPageReport\", true)(\"rowHover\", false)(\"scrollable\", true);\n  }\n}\nfunction DocumentsListComponent_div_7_p_accordion_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-accordion\", 33);\n    i0.ɵɵlistener(\"onOpen\", function DocumentsListComponent_div_7_p_accordion_1_Template_p_accordion_onOpen_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onTabOpen($event));\n    });\n    i0.ɵɵtemplate(1, DocumentsListComponent_div_7_p_accordion_1_p_accordionTab_1_Template, 5, 7, \"p-accordionTab\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.cardTitles);\n  }\n}\nfunction DocumentsListComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, DocumentsListComponent_div_7_p_accordion_1_Template, 2, 1, \"p-accordion\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showAccordion);\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"30vw\"\n  };\n};\nexport let DocumentsListComponent = /*#__PURE__*/(() => {\n  class DocumentsListComponent {\n    constructor(messageService, confirmSerive, documentListService, addDocumentsListModalDialogueProvider) {\n      this.messageService = messageService;\n      this.confirmSerive = confirmSerive;\n      this.documentListService = documentListService;\n      this.addDocumentsListModalDialogueProvider = addDocumentsListModalDialogueProvider;\n      this.tableName = '';\n      this.fieldName = '';\n      this.rowCount = 3;\n      this.docBucketItemsList = [];\n      this.docId = 0;\n      this.displayImage = false;\n      this.eqDocuments = [];\n      this.planDocuments = [];\n      this.cardTitles = [{\n        id: \"Asset Documents\"\n      }, {\n        id: \"Plan Documents\"\n      }];\n      this.showAccordion = false;\n      this.cardData = [];\n      this.docBucketId = 0;\n      this.parentFun = new EventEmitter();\n    }\n    ngOnInit() {}\n    onAddDocuments() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        docBucketId: this.data.docBucketId,\n        tableName: this.data.tableName,\n        pkField: this.data.pkField,\n        fieldName: this.data.fieldName,\n        pkValue: this.data.pkValue\n      };\n      this.addDocumentsListModalDialogueProvider.openDialog(dialogConfig);\n      this.addDocumentsListModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'requestDoc',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          if (this.data.tableName == \"wr\") {\n            this.loadDocumentsByRequestIdAndDocBucketId(this.data.pkValue, result);\n          } else {\n            this.loadDocumentsByDocBucketId(result);\n          }\n          this.docId = result;\n          this.docBucketId = result;\n          this.data.docBucketId = result;\n          this.setDocBucketId(result);\n        }\n      });\n    }\n    loadDocumentsByDocBucketId(docBucketId) {\n      //get all docBucketItemsBydocBucketId\n      this.docBucketItemsList = [];\n      if (!(docBucketId == null || docBucketId == \"null\" || docBucketId == 0)) {\n        this.documentListService.getListOfDocuments(docBucketId).subscribe(res => {\n          this.docBucketItemsList = res;\n        });\n      }\n    }\n    showDocumentDialog(doc) {\n      this.documentListService.getDocument(doc.docBucketItemsId).subscribe(res => {\n        const docContent = res.text;\n        if (doc.docExtension === 'png' || doc.docExtension === 'jpeg' || doc.docExtension === 'jpg') {\n          this.src = \"data:image/png;base64,\" + docContent;\n          this.displayImage = true;\n        } else {\n          const byteCharacters = atob(docContent);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          let mimeType;\n          // Determine the MIME type based on the file extension or type\n          if (doc.docExtension === 'pdf') {\n            mimeType = 'application/pdf';\n          } else if (doc.docExtension === 'doc' || doc.docExtension === 'docx') {\n            mimeType = 'application/msword';\n          } else if (doc.docExtension === 'xlsx' || doc.docExtension === 'xls') {\n            mimeType = 'application/vnd.ms-excel';\n          } else if (doc.docExtension === 'ppt') {\n            mimeType = 'application/vnd.ms-powerpoint';\n          } else {\n            // Fallback to a generic binary file\n            mimeType = 'application/octet-stream';\n          }\n          const blob = new Blob([byteArray], {\n            type: mimeType\n          });\n          const url = URL.createObjectURL(blob);\n          const anchor = document.createElement('a');\n          anchor.href = url;\n          anchor.target = '_blank';\n          anchor.setAttribute('download', doc.docName); // Set the download attribute to the desired filename\n          anchor.style.display = 'none';\n          document.body.appendChild(anchor);\n          anchor.click();\n          document.body.removeChild(anchor);\n        }\n      });\n    }\n    onDelete(docDetails) {\n      this.confirmSerive.confirm({\n        message: 'Are you sure that you want to delete ?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deleteDocument(docDetails);\n        },\n        key: \"deleteDoc\"\n      });\n    }\n    deleteDocument(docDetails) {\n      this.documentListService.deleteDocument(docDetails).subscribe(res => {\n        this.messageService.clear();\n        this.loadDocumentsByDocBucketId(docDetails.docBucketId);\n        this.messageService.add({\n          key: 'requestDoc',\n          severity: 'success',\n          summary: 'Record Deleted successfully',\n          detail: 'Record Deleted successfully'\n        });\n      });\n    }\n    setDocBucketId(result) {\n      this.parentFun.emit(result);\n    }\n    loadDocumentsByRequestIdAndDocBucketId(requestId, docBucketId) {\n      //get all docBucketItemsBydocBucketId\n      this.rowCount = 5;\n      this.docBucketItemsList = [];\n      this.showAccordion = true;\n      this.documentListService.getListOfDocumentsByRequestId(parseInt(requestId), docBucketId).subscribe(res => {\n        this.docBucketItemsList = res.wrDocs;\n        this.eqDocuments = res.eqDocs;\n        this.planDocuments = res.planDocs;\n      });\n    }\n    onTabOpen(event) {\n      this.cardData = [];\n      var selectedTab = this.cardTitles[event.index];\n      switch (selectedTab.id) {\n        case 'Asset Documents':\n          this.cardData = this.eqDocuments;\n          break;\n        case 'Plan Documents':\n          this.cardData = this.planDocuments;\n          break;\n        default:\n          this.cardData = [];\n          break;\n      }\n    }\n    static #_ = this.ɵfac = function DocumentsListComponent_Factory(t) {\n      return new (t || DocumentsListComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i2.DocumentListService), i0.ɵɵdirectiveInject(i3.AddDocumentsListModalDialogueProvider));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DocumentsListComponent,\n      selectors: [[\"app-documents-list\"]],\n      inputs: {\n        docBucketId: \"docBucketId\"\n      },\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 12,\n      vars: 17,\n      consts: [[\"header\", \"Documents List\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"scrollHeight\", \"300px\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowHover\", \"scrollable\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"class\", \"card\", 4, \"ngIf\"], [\"header\", \"\", 3, \"maximizable\", \"visible\", \"closable\", \"draggable\", \"resizable\", \"modal\", \"visibleChange\"], [\"width\", \"90%\", \"height\", \"90%\", 3, \"src\", \"alt\"], [\"key\", \"requestDoc\", \"position\", \"top-right\"], [\"key\", \"deleteDoc\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-upload\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"docName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"docName\"], [\"type\", \"text\", \"field\", \"docName\", \"display\", \"menu\"], [\"pSortableColumn\", \"docType\"], [\"field\", \"docType\"], [\"type\", \"text\", \"field\", \"docType\", \"display\", \"menu\"], [\"pSortableColumn\", \"notes\"], [\"field\", \"notes\"], [\"type\", \"text\", \"field\", \"notes\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-download\", 1, \"p-button-text\", 2, \"font-size\", \"5rem\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"], [\"colspan\", \"2\"], [3, \"onOpen\", 4, \"ngIf\"], [3, \"onOpen\"], [3, \"header\", 4, \"ngFor\", \"ngForOf\"], [3, \"header\"], [2, \"width\", \"3rem\"]],\n      template: function DocumentsListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0);\n          i0.ɵɵtemplate(1, DocumentsListComponent_ng_template_1_Template, 1, 0, \"ng-template\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"p-table\", 3);\n          i0.ɵɵtemplate(4, DocumentsListComponent_ng_template_4_Template, 26, 0, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, DocumentsListComponent_ng_template_5_Template, 10, 6, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, DocumentsListComponent_ng_template_6_Template, 3, 0, \"ng-template\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(7, DocumentsListComponent_div_7_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p-dialog\", 8);\n          i0.ɵɵlistener(\"visibleChange\", function DocumentsListComponent_Template_p_dialog_visibleChange_8_listener($event) {\n            return ctx.displayImage = $event;\n          });\n          i0.ɵɵelement(9, \"img\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"p-toast\", 10)(11, \"p-confirmDialog\", 11);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"value\", ctx.docBucketItemsList)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowHover\", false)(\"scrollable\", true);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.showAccordion);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(16, _c0));\n          i0.ɵɵproperty(\"maximizable\", true)(\"visible\", ctx.displayImage)(\"closable\", true)(\"draggable\", false)(\"resizable\", false)(\"modal\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"src\", ctx.src, i0.ɵɵsanitizeUrl);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i5.Accordion, i5.AccordionTab, i1.PrimeTemplate, i6.Table, i6.SortableColumn, i6.SelectableRow, i6.SortIcon, i6.ColumnFilter, i7.ButtonDirective, i8.Dialog, i9.Toast, i10.Panel, i11.ConfirmDialog, i12.MatTooltip],\n      styles: [\"[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th .grid-header-column{display:flex;flex-direction:row}[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th .grid-header-label{width:70%;justify-content:flex-start;justify-content:space-between;padding-right:5px}[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th .grid-sort-icon{display:flex;justify-content:flex-end;align-items:center;width:30%}.ellipsis[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]     .p-datatable-table{table-layout:fixed}\"]\n    });\n  }\n  return DocumentsListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}