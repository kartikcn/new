{"ast":null,"code":"import { EventEmitter, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, UntypedFormControl, Validators } from '@angular/forms';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { take } from 'rxjs/operators';\nimport { SvgRoomDataInput } from 'src/app/model/svgroomdatainput.model';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\nimport { RoomFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/RoomFilterInputDTO.model';\nimport { EmployeeDetails } from 'src/app/ui/employee/model/employee-details.model';\nimport { SvgViewComponent } from 'src/app/ui/svg-view/svg-view.component';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { Equipment } from '../../equipment/modal/DTO/equipmentDto.modal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"src/app/ui/employee/services/employee.service\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"src/app/services/site.service\";\nimport * as i7 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i8 from \"../../equipment/services/equipment.services\";\nimport * as i9 from \"../service/add-work-request.services\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"../provider/add-problem-type.provider\";\nimport * as i12 from \"../../sla-request-parameters/services/sla-request-parameters.service\";\nimport * as i13 from \"../../help-desk-problem-description/services/problem-description.services\";\nimport * as i14 from \"@angular/router\";\nimport * as i15 from \"ngx-spinner\";\nimport * as i16 from \"src/app/services/breakpoint.service\";\nimport * as i17 from \"@ng-select/ng-select\";\nimport * as i18 from \"@angular/material/icon\";\nimport * as i19 from \"@angular/material/dialog\";\nimport * as i20 from \"ng-zorro-antd/table\";\nimport * as i21 from \"ng-zorro-antd/input\";\nimport * as i22 from \"primeng/table\";\nimport * as i23 from \"primeng/calendar\";\nimport * as i24 from \"primeng/button\";\nimport * as i25 from \"primeng/dialog\";\nimport * as i26 from \"primeng/toast\";\nimport * as i27 from \"primeng/card\";\nimport * as i28 from \"primeng/confirmdialog\";\nimport * as i29 from \"primeng/overlaypanel\";\nimport * as i30 from \"primeng/radiobutton\";\nimport * as i31 from \"@angular/material/tooltip\";\nimport * as i32 from \"../../../svg-view/svg-view.component\";\nimport * as i33 from \"../../../../directive/directive/trim-input.directive\";\nconst _c0 = [\"op\"];\nfunction AddWorkRequestComponent_div_0_h2_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 64);\n    i0.ɵɵtext(1, \"Details\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddWorkRequestComponent_div_0_td_68_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"div\", 20)(2, \"label\", 31);\n    i0.ɵɵtext(3, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ng-select\", 65);\n    i0.ɵɵlistener(\"change\", function AddWorkRequestComponent_div_0_td_68_Template_ng_select_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onSelectEqCode($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r13.enumStatus)(\"searchable\", true)(\"readonly\", ctx_r13.isView || ctx_r13.setAssetReadOnly || ctx_r13.isDetails);\n  }\n}\nfunction AddWorkRequestComponent_div_0_div_85_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 68)(1, \"div\", 69)(2, \"p-radioButton\", 70);\n    i0.ɵɵlistener(\"ngModelChange\", function AddWorkRequestComponent_div_0_div_85_div_1_Template_p_radioButton_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r23.selectedPriority = $event);\n    })(\"click\", function AddWorkRequestComponent_div_0_div_85_div_1_Template_p_radioButton_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const priority_r22 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r25.selectPriority(priority_r22));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 71);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const priority_r22 = ctx.$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"inputId\", priority_r22.slaResponseParametersId)(\"disabled\", ctx_r21.isView)(\"ngModel\", ctx_r21.selectedPriority)(\"value\", priority_r22.slaResponseParametersId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", priority_r22.slaResponseParametersId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", priority_r22.priority, \"\");\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"stop-event\": a0\n  };\n};\nfunction AddWorkRequestComponent_div_0_div_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 66);\n    i0.ɵɵtemplate(1, AddWorkRequestComponent_div_0_div_85_div_1_Template, 5, 6, \"div\", 67);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r14.isView));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.slaResponseParameters);\n  }\n}\nfunction AddWorkRequestComponent_div_0_ng_template_126_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 5)(1, \"th\", 72)(2, \"div\", 73)(3, \"p\", 74);\n    i0.ɵɵtext(4, \" Problem Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"input\", 75);\n    i0.ɵɵlistener(\"input\", function AddWorkRequestComponent_div_0_ng_template_126_Template_input_input_5_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.filterTable($event.target.value));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", ctx_r16.searchTextLower);\n  }\n}\nfunction AddWorkRequestComponent_div_0_ng_template_127_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 76)(1, \"td\", 77);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pd_r28 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", pd_r28);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", pd_r28.pdDescription);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pd_r28.pdDescription, \"\");\n  }\n}\nfunction AddWorkRequestComponent_div_0_ng_template_128_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records to display. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 1);\n  }\n}\nconst _c2 = function () {\n  return {\n    width: \"25vw\"\n  };\n};\nconst _c3 = function () {\n  return [5, 10, 25];\n};\nconst _c4 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nfunction AddWorkRequestComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"p-card\", 15)(2, \"div\")(3, \"form\", 16);\n    i0.ɵɵtemplate(4, AddWorkRequestComponent_div_0_h2_4_Template, 2, 0, \"h2\", 17);\n    i0.ɵɵelementStart(5, \"table\", 18)(6, \"tr\")(7, \"td\")(8, \"div\", 19)(9, \"div\", 20)(10, \"label\", 21);\n    i0.ɵɵtext(11, \"Requested For\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ng-select\", 22);\n    i0.ɵɵlistener(\"change\", function AddWorkRequestComponent_div_0_Template_ng_select_change_12_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onSelectRequestedFor($event));\n    })(\"scrollToEnd\", function AddWorkRequestComponent_div_0_Template_ng_select_scrollToEnd_12_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.scrollToEndEm());\n    })(\"search\", function AddWorkRequestComponent_div_0_Template_ng_select_search_12_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.searchEm($event));\n    })(\"open\", function AddWorkRequestComponent_div_0_Template_ng_select_open_12_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.onOpenEm());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 23)(14, \"mat-icon\", 24, 25);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_0_Template_mat_icon_click_14_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.isEmpSelected && ctx_r35.locateRoom(\"em\"));\n    });\n    i0.ɵɵtext(16, \"location_on\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"div\", 20)(19, \"div\", 26)(20, \"div\", 27)(21, \"label\", 21);\n    i0.ɵɵtext(22, \"Logged Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"p-calendar\", 28);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(24, \"td\")(25, \"div\", 20)(26, \"div\", 26)(27, \"div\", 27)(28, \"label\", 21);\n    i0.ɵɵtext(29, \"Logged Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"p-calendar\", 29);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(31, \"tr\")(32, \"td\")(33, \"div\", 20)(34, \"label\", 21);\n    i0.ɵɵtext(35, \"Building\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"ng-select\", 30);\n    i0.ɵɵlistener(\"change\", function AddWorkRequestComponent_div_0_Template_ng_select_change_36_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.onSelectBlCode($event));\n    })(\"scrollToEnd\", function AddWorkRequestComponent_div_0_Template_ng_select_scrollToEnd_36_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.scrollToEndBl());\n    })(\"search\", function AddWorkRequestComponent_div_0_Template_ng_select_search_36_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.searchBl($event));\n    })(\"open\", function AddWorkRequestComponent_div_0_Template_ng_select_open_36_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(37, \"td\")(38, \"div\", 20)(39, \"label\", 31);\n    i0.ɵɵtext(40, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"ng-select\", 32);\n    i0.ɵɵlistener(\"open\", function AddWorkRequestComponent_div_0_Template_ng_select_open_41_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.onOpenFl());\n    })(\"change\", function AddWorkRequestComponent_div_0_Template_ng_select_change_41_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onSelectFlCode($event));\n    })(\"scrollToEnd\", function AddWorkRequestComponent_div_0_Template_ng_select_scrollToEnd_41_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.scrollToEndFl());\n    })(\"search\", function AddWorkRequestComponent_div_0_Template_ng_select_search_41_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.searchFl($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(42, \"td\")(43, \"div\", 19)(44, \"div\", 20)(45, \"label\", 31);\n    i0.ɵɵtext(46, \"Room\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"ng-select\", 33);\n    i0.ɵɵlistener(\"open\", function AddWorkRequestComponent_div_0_Template_ng_select_open_47_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.onOpenRm());\n    })(\"change\", function AddWorkRequestComponent_div_0_Template_ng_select_change_47_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.onSelectRmCode($event));\n    })(\"scrollToEnd\", function AddWorkRequestComponent_div_0_Template_ng_select_scrollToEnd_47_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.scrollToEndRm());\n    })(\"search\", function AddWorkRequestComponent_div_0_Template_ng_select_search_47_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.searchRm($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(48, \"div\", 23)(49, \"mat-icon\", 24, 25);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_0_Template_mat_icon_click_49_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.isRoomSelected && ctx_r48.locateRoom(\"rm\"));\n    });\n    i0.ɵɵtext(51, \"location_on\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(52, \"tr\")(53, \"td\")(54, \"div\", 19)(55, \"div\", 20)(56, \"label\", 31);\n    i0.ɵɵtext(57, \"Asset\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"ng-select\", 34);\n    i0.ɵɵlistener(\"change\", function AddWorkRequestComponent_div_0_Template_ng_select_change_58_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.onSelectEqCode($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(59, \"div\", 23)(60, \"mat-icon\", 24, 25);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_0_Template_mat_icon_click_60_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.isAssetSelected && ctx_r50.locateRoom(\"asset\"));\n    });\n    i0.ɵɵtext(62, \"location_on\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(63, \"td\")(64, \"div\", 20)(65, \"label\", 31);\n    i0.ɵɵtext(66, \"Asset Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(67, \"input\", 35);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(68, AddWorkRequestComponent_div_0_td_68_Template, 5, 4, \"td\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(69, \"tr\")(70, \"td\")(71, \"div\", 36)(72, \"div\")(73, \"label\", 21);\n    i0.ɵɵtext(74, \"Problem Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(75, \"div\", 37)(76, \"div\", 38);\n    i0.ɵɵelement(77, \"textarea\", 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(78, \"div\", 40)(79, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_0_Template_button_click_79_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.onAddProblemType());\n    });\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(80, \"td\", 42)(81, \"div\", 43)(82, \"div\")(83, \"label\", 21);\n    i0.ɵɵtext(84, \"Priority\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(85, AddWorkRequestComponent_div_0_div_85_Template, 2, 4, \"div\", 44);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(86, \"tr\")(87, \"td\", 45)(88, \"div\", 46)(89, \"div\", 47)(90, \"div\", 26)(91, \"div\", 27)(92, \"label\", 31);\n    i0.ɵɵtext(93, \"Respond By\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(94, \"p-calendar\", 48);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(95, \"div\", 47)(96, \"div\", 26)(97, \"div\", 27)(98, \"label\", 31);\n    i0.ɵɵtext(99, \"Complete By\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(100, \"p-calendar\", 49);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(101, \"td\", 45)(102, \"div\", 46)(103, \"div\", 47)(104, \"div\", 26)(105, \"div\", 27)(106, \"label\", 31);\n    i0.ɵɵtext(107, \"Date Responded\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(108, \"p-calendar\", 50);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(109, \"div\", 47)(110, \"div\", 26)(111, \"div\", 27)(112, \"label\", 31);\n    i0.ɵɵtext(113, \"Date Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(114, \"p-calendar\", 51);\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementStart(115, \"tr\")(116, \"td\", 42)(117, \"div\", 47)(118, \"label\", 21);\n    i0.ɵɵtext(119, \"Problem Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(120, \"textarea\", 52);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(121, \"td\")(122, \"div\", 53)(123, \"p-overlayPanel\", 54, 55)(125, \"p-table\", 56);\n    i0.ɵɵlistener(\"selectionChange\", function AddWorkRequestComponent_div_0_Template_p_table_selectionChange_125_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.selectedProblemDescription = $event);\n    })(\"onRowSelect\", function AddWorkRequestComponent_div_0_Template_p_table_onRowSelect_125_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.onRowSelectProblemDescription($event));\n    });\n    i0.ɵɵtemplate(126, AddWorkRequestComponent_div_0_ng_template_126_Template, 6, 1, \"ng-template\", 10);\n    i0.ɵɵtemplate(127, AddWorkRequestComponent_div_0_ng_template_127_Template, 3, 3, \"ng-template\", 57);\n    i0.ɵɵtemplate(128, AddWorkRequestComponent_div_0_ng_template_128_Template, 3, 1, \"ng-template\", 58);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(129, \"button\", 59);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_0_Template_button_click_129_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.toggleOp($event));\n    });\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementStart(130, \"div\", 60)(131, \"mat-dialog-actions\", 61)(132, \"p-button\", 62);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_0_Template_p_button_click_132_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r55.onSaveWr());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(133, \"p-button\", 63);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_0_Template_p_button_click_133_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r56 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r56.onClear());\n    });\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"header\", !ctx_r0.isView && !ctx_r0.isDetails ? \"Log a Request\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.addWrFormPanel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isView && !ctx_r0.isDetails);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.enumRequestedFor)(\"readonly\", ctx_r0.isView);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"blue-icon\", ctx_r0.isEmpSelected);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r0.isEmpSelected ? \"View Floor Plan\" : \"\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r0.idDisabled)(\"showIcon\", false)(\"timeOnly\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.enumBL)(\"readonly\", ctx_r0.isView);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.enumFL)(\"readonly\", ctx_r0.isView);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.rm_data)(\"searchable\", true)(\"readonly\", ctx_r0.isView);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"blue-icon\", ctx_r0.isRoomSelected);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r0.isRoomSelected ? \"View Floor Plan\" : \"\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumEquipment)(\"searchable\", true)(\"readonly\", ctx_r0.isView || ctx_r0.setAssetReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"blue-icon\", ctx_r0.isAssetSelected);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r0.isAssetSelected ? \"View Floor Plan\" : \"\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"readonly\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isView);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"readonly\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isView);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.slaResponseParameters.length > 0);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r0.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r0.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r0.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r0.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(9);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(73, _c2));\n    i0.ɵɵproperty(\"dismissable\", true)(\"hideTransitionOptions\", \"0ms\")(\"showCloseIcon\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r0.filteredProblemDescriptionList)(\"selection\", ctx_r0.selectedProblemDescription)(\"paginator\", true)(\"rows\", ctx_r0.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(74, _c3))(\"scrollable\", true)(\"rowHover\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isView);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.addWrFormPanel.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(75, _c4));\n    i0.ɵɵproperty(\"hidden\", ctx_r0.isView || ctx_r0.isDetails);\n  }\n}\nfunction AddWorkRequestComponent_div_1_h2_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 64);\n    i0.ɵɵtext(1, \"Details\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddWorkRequestComponent_div_1_td_70_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r68 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"div\", 20)(2, \"label\", 31);\n    i0.ɵɵtext(3, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ng-select\", 65);\n    i0.ɵɵlistener(\"change\", function AddWorkRequestComponent_div_1_td_70_Template_ng_select_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r68);\n      const ctx_r67 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r67.onSelectEqCode($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r61 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r61.enumStatus)(\"searchable\", true)(\"readonly\", ctx_r61.isView || ctx_r61.setAssetReadOnly || ctx_r61.isDetails);\n  }\n}\nfunction AddWorkRequestComponent_div_1_div_85_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r73 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 68)(1, \"div\", 69)(2, \"p-radioButton\", 70);\n    i0.ɵɵlistener(\"ngModelChange\", function AddWorkRequestComponent_div_1_div_85_div_4_div_1_Template_p_radioButton_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r73);\n      const ctx_r72 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r72.selectedPriority = $event);\n    })(\"click\", function AddWorkRequestComponent_div_1_div_85_div_4_div_1_Template_p_radioButton_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r73);\n      const priority_r71 = restoredCtx.$implicit;\n      const ctx_r74 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r74.selectPriority(priority_r71));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 71);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const priority_r71 = ctx.$implicit;\n    const ctx_r70 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"inputId\", priority_r71.slaResponseParametersId)(\"disabled\", ctx_r70.isView)(\"ngModel\", ctx_r70.selectedPriority)(\"value\", priority_r71.slaResponseParametersId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", priority_r71.slaResponseParametersId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", priority_r71.priority, \"\");\n  }\n}\nfunction AddWorkRequestComponent_div_1_div_85_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 66);\n    i0.ɵɵtemplate(1, AddWorkRequestComponent_div_1_div_85_div_4_div_1_Template, 5, 6, \"div\", 67);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r69 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r69.isView));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r69.slaResponseParameters);\n  }\n}\nfunction AddWorkRequestComponent_div_1_div_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 84)(1, \"div\")(2, \"label\", 21);\n    i0.ɵɵtext(3, \"Priority\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, AddWorkRequestComponent_div_1_div_85_div_4_Template, 2, 4, \"div\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r62 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r62.slaResponseParameters.length > 0);\n  }\n}\nfunction AddWorkRequestComponent_div_1_ng_template_128_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r76 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 5)(1, \"th\", 72)(2, \"div\", 73)(3, \"p\", 74);\n    i0.ɵɵtext(4, \" Problem Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"input\", 75);\n    i0.ɵɵlistener(\"input\", function AddWorkRequestComponent_div_1_ng_template_128_Template_input_input_5_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r75 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r75.filterTable($event.target.value));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r64 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", ctx_r64.searchTextLower);\n  }\n}\nfunction AddWorkRequestComponent_div_1_ng_template_129_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 76)(1, \"td\", 77);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pd_r77 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", pd_r77);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", pd_r77.pdDescription);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pd_r77.pdDescription, \"\");\n  }\n}\nfunction AddWorkRequestComponent_div_1_ng_template_130_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records to display. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 1);\n  }\n}\nfunction AddWorkRequestComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r80 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-card\", 15)(2, \"div\")(3, \"form\", 16);\n    i0.ɵɵtemplate(4, AddWorkRequestComponent_div_1_h2_4_Template, 2, 0, \"h2\", 17);\n    i0.ɵɵelementStart(5, \"table\", 18)(6, \"tr\")(7, \"td\")(8, \"div\", 19)(9, \"div\", 20)(10, \"label\", 21);\n    i0.ɵɵtext(11, \"Requested For\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ng-select\", 22);\n    i0.ɵɵlistener(\"change\", function AddWorkRequestComponent_div_1_Template_ng_select_change_12_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r79 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r79.onSelectRequestedFor($event));\n    })(\"scrollToEnd\", function AddWorkRequestComponent_div_1_Template_ng_select_scrollToEnd_12_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r81 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r81.scrollToEndEm());\n    })(\"search\", function AddWorkRequestComponent_div_1_Template_ng_select_search_12_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r82 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r82.searchEm($event));\n    })(\"open\", function AddWorkRequestComponent_div_1_Template_ng_select_open_12_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r83 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r83.onOpenEm());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 23)(14, \"mat-icon\", 24, 25);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_1_Template_mat_icon_click_14_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r84 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r84.isEmpSelected && ctx_r84.locateRoom(\"em\"));\n    });\n    i0.ɵɵtext(16, \"location_on\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"div\", 20)(19, \"div\", 26)(20, \"div\", 27)(21, \"label\", 21);\n    i0.ɵɵtext(22, \"Logged Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"p-calendar\", 28);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(24, \"tr\")(25, \"td\")(26, \"div\", 20)(27, \"div\", 26)(28, \"div\", 27)(29, \"label\", 21);\n    i0.ɵɵtext(30, \"Logged Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"p-calendar\", 29);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(32, \"td\")(33, \"div\", 20)(34, \"label\", 21);\n    i0.ɵɵtext(35, \"Building\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"ng-select\", 30);\n    i0.ɵɵlistener(\"change\", function AddWorkRequestComponent_div_1_Template_ng_select_change_36_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r85 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r85.onSelectBlCode($event));\n    })(\"scrollToEnd\", function AddWorkRequestComponent_div_1_Template_ng_select_scrollToEnd_36_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r86 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r86.scrollToEndBl());\n    })(\"search\", function AddWorkRequestComponent_div_1_Template_ng_select_search_36_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r87 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r87.searchBl($event));\n    })(\"open\", function AddWorkRequestComponent_div_1_Template_ng_select_open_36_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r88 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r88.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(37, \"tr\")(38, \"td\")(39, \"div\", 20)(40, \"label\", 31);\n    i0.ɵɵtext(41, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"ng-select\", 32);\n    i0.ɵɵlistener(\"open\", function AddWorkRequestComponent_div_1_Template_ng_select_open_42_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r89 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r89.onOpenFl());\n    })(\"change\", function AddWorkRequestComponent_div_1_Template_ng_select_change_42_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r90 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r90.onSelectFlCode($event));\n    })(\"scrollToEnd\", function AddWorkRequestComponent_div_1_Template_ng_select_scrollToEnd_42_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r91 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r91.scrollToEndFl());\n    })(\"search\", function AddWorkRequestComponent_div_1_Template_ng_select_search_42_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r92 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r92.searchFl($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(43, \"td\")(44, \"div\", 19)(45, \"div\", 20)(46, \"label\", 31);\n    i0.ɵɵtext(47, \"Room\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"ng-select\", 33);\n    i0.ɵɵlistener(\"open\", function AddWorkRequestComponent_div_1_Template_ng_select_open_48_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r93 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r93.onOpenRm());\n    })(\"change\", function AddWorkRequestComponent_div_1_Template_ng_select_change_48_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r94 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r94.onSelectRmCode($event));\n    })(\"scrollToEnd\", function AddWorkRequestComponent_div_1_Template_ng_select_scrollToEnd_48_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r95 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r95.scrollToEndRm());\n    })(\"search\", function AddWorkRequestComponent_div_1_Template_ng_select_search_48_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r96 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r96.searchRm($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(49, \"div\", 23)(50, \"mat-icon\", 24, 25);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_1_Template_mat_icon_click_50_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r97 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r97.isRoomSelected && ctx_r97.locateRoom(\"rm\"));\n    });\n    i0.ɵɵtext(52, \"location_on\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(53, \"tr\")(54, \"td\")(55, \"div\", 19)(56, \"div\", 20)(57, \"label\", 31);\n    i0.ɵɵtext(58, \"Asset\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(59, \"ng-select\", 34);\n    i0.ɵɵlistener(\"change\", function AddWorkRequestComponent_div_1_Template_ng_select_change_59_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r98 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r98.onSelectEqCode($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(60, \"div\", 23)(61, \"mat-icon\", 24, 25);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_1_Template_mat_icon_click_61_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r99 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r99.isAssetSelected && ctx_r99.locateRoom(\"asset\"));\n    });\n    i0.ɵɵtext(63, \"location_on\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(64, \"td\")(65, \"div\", 20)(66, \"label\", 31);\n    i0.ɵɵtext(67, \"Asset Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(68, \"input\", 35);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(69, \"tr\");\n    i0.ɵɵtemplate(70, AddWorkRequestComponent_div_1_td_70_Template, 5, 4, \"td\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(71, \"tr\")(72, \"td\")(73, \"div\", 78)(74, \"div\")(75, \"label\", 21);\n    i0.ɵɵtext(76, \"Problem Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(77, \"div\");\n    i0.ɵɵelement(78, \"textarea\", 79);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(79, \"td\")(80, \"div\", 80)(81, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_1_Template_button_click_81_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r100 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r100.onAddProblemType());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(82, \"tr\")(83, \"td\", 42)(84, \"div\", 43);\n    i0.ɵɵtemplate(85, AddWorkRequestComponent_div_1_div_85_Template, 5, 1, \"div\", 81);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(86, \"tr\")(87, \"td\")(88, \"div\", 47)(89, \"div\", 26)(90, \"div\", 27)(91, \"label\", 31);\n    i0.ɵɵtext(92, \"Respond By\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(93, \"p-calendar\", 48);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(94, \"td\")(95, \"div\", 47)(96, \"div\", 26)(97, \"div\", 27)(98, \"label\", 31);\n    i0.ɵɵtext(99, \"Complete By\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(100, \"p-calendar\", 49);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(101, \"tr\")(102, \"td\")(103, \"div\", 47)(104, \"div\", 26)(105, \"div\", 27)(106, \"label\", 31);\n    i0.ɵɵtext(107, \"Date Responded\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(108, \"p-calendar\", 50);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(109, \"td\")(110, \"div\", 47)(111, \"div\", 26)(112, \"div\", 27)(113, \"label\", 31);\n    i0.ɵɵtext(114, \"Date Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(115, \"p-calendar\", 51);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(116, \"tr\")(117, \"td\")(118, \"div\", 47)(119, \"label\", 21);\n    i0.ɵɵtext(120, \"Problem Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(121, \"nz-textarea-count\", 82);\n    i0.ɵɵelement(122, \"textarea\", 83);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(123, \"td\")(124, \"div\", 53)(125, \"p-overlayPanel\", 54, 55)(127, \"p-table\", 56);\n    i0.ɵɵlistener(\"selectionChange\", function AddWorkRequestComponent_div_1_Template_p_table_selectionChange_127_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r101 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r101.selectedProblemDescription = $event);\n    })(\"onRowSelect\", function AddWorkRequestComponent_div_1_Template_p_table_onRowSelect_127_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r102 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r102.onRowSelectProblemDescription($event));\n    });\n    i0.ɵɵtemplate(128, AddWorkRequestComponent_div_1_ng_template_128_Template, 6, 1, \"ng-template\", 10);\n    i0.ɵɵtemplate(129, AddWorkRequestComponent_div_1_ng_template_129_Template, 3, 3, \"ng-template\", 57);\n    i0.ɵɵtemplate(130, AddWorkRequestComponent_div_1_ng_template_130_Template, 3, 1, \"ng-template\", 58);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(131, \"button\", 59);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_1_Template_button_click_131_listener($event) {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r103 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r103.toggleOp($event));\n    });\n    i0.ɵɵelementEnd()()()()()()();\n    i0.ɵɵelementStart(132, \"div\", 60)(133, \"mat-dialog-actions\", 61)(134, \"p-button\", 62);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_1_Template_p_button_click_134_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r104 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r104.onSaveWr());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(135, \"p-button\", 63);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_div_1_Template_p_button_click_135_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r105 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r105.onClear());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"header\", !ctx_r1.isView && !ctx_r1.isDetails ? \"Log a Request\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.addWrFormPanel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isView && !ctx_r1.isDetails);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.enumRequestedFor)(\"readonly\", ctx_r1.isView);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"blue-icon\", ctx_r1.isEmpSelected);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1.isEmpSelected ? \"View Floor Plan\" : \"\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r1.idDisabled)(\"showIcon\", false)(\"timeOnly\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.enumBL)(\"readonly\", ctx_r1.isView);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.enumFL)(\"readonly\", ctx_r1.isView);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.rm_data)(\"searchable\", true)(\"readonly\", ctx_r1.isView);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"blue-icon\", ctx_r1.isRoomSelected);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1.isRoomSelected ? \"View Floor Plan\" : \"\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumEquipment)(\"searchable\", true)(\"readonly\", ctx_r1.isView || ctx_r1.setAssetReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"blue-icon\", ctx_r1.isAssetSelected);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1.isAssetSelected ? \"View Floor Plan\" : \"\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"readonly\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isView);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"readonly\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isView);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.slaResponseParameters.length > 0);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r1.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r1.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r1.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showTime\", true)(\"disabled\", ctx_r1.idDisabled)(\"showIcon\", false);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"nzMaxCharacterCount\", 4000);\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(74, _c2));\n    i0.ɵɵproperty(\"dismissable\", true)(\"hideTransitionOptions\", \"0ms\")(\"showCloseIcon\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r1.filteredProblemDescriptionList)(\"selection\", ctx_r1.selectedProblemDescription)(\"paginator\", true)(\"rows\", ctx_r1.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(75, _c3))(\"scrollable\", true)(\"rowHover\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isView);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.addWrFormPanel.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(76, _c4));\n    i0.ɵɵproperty(\"hidden\", ctx_r1.isView || ctx_r1.isDetails);\n  }\n}\nfunction AddWorkRequestComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r107 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 85);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_ng_template_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r107);\n      const ctx_r106 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r106.onClickGoToDetails());\n    });\n    i0.ɵɵtext(1, \" Go to Details \");\n    i0.ɵɵelement(2, \"i\", 86);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_ng_template_13_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r107);\n      const ctx_r108 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r108.onCloseSucPopUp());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddWorkRequestComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.svgDialogHeaderText);\n  }\n}\nfunction AddWorkRequestComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-svg-view\", 88);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgInputData\", ctx_r4.svgInputData);\n  }\n}\nfunction AddWorkRequestComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \"Message\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddWorkRequestComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 89)(1, \"p\", 90);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.svgDialogHeaderText);\n  }\n}\nfunction AddWorkRequestComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r110 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function AddWorkRequestComponent_ng_template_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r110);\n      const ctx_r109 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r109.showMessage = false);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddWorkRequestComponent_ngx_spinner_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 91)(1, \"p\", 92);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nconst _c5 = function () {\n  return {\n    width: \"30vw\"\n  };\n};\nconst _c6 = function (a0) {\n  return {\n    width: a0\n  };\n};\nexport let AddWorkRequestComponent = /*#__PURE__*/(() => {\n  class AddWorkRequestComponent {\n    constructor(formBuilder, authSrv, enumsrv, emServ, confirmationService, siteServ, blServ, eqServ, wrServ, datePipe, messageService, addPbTypeProvider, slaRequestParameterSer, pdService, router, parentSpinner, cdr, bps) {\n      this.formBuilder = formBuilder;\n      this.authSrv = authSrv;\n      this.enumsrv = enumsrv;\n      this.emServ = emServ;\n      this.confirmationService = confirmationService;\n      this.siteServ = siteServ;\n      this.blServ = blServ;\n      this.eqServ = eqServ;\n      this.wrServ = wrServ;\n      this.datePipe = datePipe;\n      this.messageService = messageService;\n      this.addPbTypeProvider = addPbTypeProvider;\n      this.slaRequestParameterSer = slaRequestParameterSer;\n      this.pdService = pdService;\n      this.router = router;\n      this.parentSpinner = parentSpinner;\n      this.cdr = cdr;\n      this.bps = bps;\n      this.subscriptions = [];\n      this.enumRequestedFor = [];\n      this.enumAllSites = [];\n      this.enumBL = [];\n      this.enumAllBl = [];\n      this.enumFL = [];\n      this.enumRM = [];\n      this.enumAllEquipment = [];\n      this.enumEquipment = [];\n      this.enumAllFL = [];\n      this.allRmDdata = [];\n      this.rm_data = [];\n      this.problemTypeData = [];\n      this.showTimeToResponse = '';\n      this.showTimeToCompleted = '';\n      this.showAutoIssue = '';\n      this.showAutoApproval = '';\n      this.enumDeafultValue = [];\n      this.isPrivorityChecked = false;\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumWr = [];\n      this.enumStatus = [];\n      this.enumSlaResponseParam = [];\n      this.enumAutoIssue = [];\n      this.enumIsDeafult = [];\n      this.enumAutoApproval = [];\n      this.enumRequested = [];\n      this.enumWrSteps = [];\n      this.enumStepType = [];\n      this.emDefualtLoacation = [];\n      this.displayProblemType = '';\n      this.problemTypeId = 0;\n      this.today = new Date();\n      this.isView = false;\n      this.isDetails = false;\n      this.isReadOnly = false;\n      this.afterSavedForm = false;\n      this.editFields = true;\n      this.problemDescriptionList = [];\n      this.filteredProblemDescriptionList = [];\n      this.setAssetReadOnly = false;\n      this.parameters = {\n        \"siteId\": null,\n        \"blId\": null,\n        \"flId\": null,\n        \"rmId\": null,\n        \"eqId\": null,\n        \"probTypeId\": null,\n        \"emId\": null\n      };\n      this.slaData = [];\n      this.slaResponseParameters = [];\n      this.selectedCategory = null;\n      this.displaySuccPopUp = false;\n      this.slaResponseParametersId = 0;\n      this.searchTextLower = '';\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.idDisabled = true;\n      this.isEmpSelected = false;\n      this.isAssetSelected = false;\n      this.isRoomSelected = false;\n      this.viewSvg = false;\n      this.showSvg = false;\n      this.showSpinnerParent = false;\n      this.noSVGFound = false;\n      this.allEmployees = [];\n      this.svgDialogHeaderText = '';\n      this.showMessage = false;\n      this.docBucketId = 0;\n      this.parentFun = new EventEmitter();\n      this.svgDialogWidth = '';\n      this.useTabletProtrait = false;\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      this.limitEm = 0;\n      this.offsetEm = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.selectedRm = {};\n      this.selectedEm = {};\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.svgInputData = new SvgRoomDataInput(null, null, null, false, false, false, false, false, \"\", null, \"\", \"\", null, null);\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.addWrFormPanel = this.formBuilder.group({\n        selectedPriority: new UntypedFormControl(),\n        wrId: [0],\n        parentWrId: [null],\n        eqDescription: [null],\n        completeByDate: [null],\n        respondByDate: [null],\n        status: [null],\n        siteId: [null],\n        blId: [null, [Validators.required]],\n        flId: [null],\n        rmId: [null],\n        eqId: [null],\n        probTypeId: [null, [Validators.required]],\n        description: [null, [Validators.required]],\n        dateRequested: [null],\n        timeRequested: [null],\n        dateCompleted: [null],\n        timeCompleted: [null],\n        dateResponded: [null],\n        timeResponded: [null],\n        escDateResponded: [null],\n        escTimeResponded: [null],\n        escDateCompleted: [null],\n        escTimeCompleted: [null],\n        slaRequestParametersId: [null],\n        requestedBy: [null],\n        requestedFor: [null, [Validators.required]],\n        dateToPerform: [new Date()],\n        slaResponseParametersId: [null],\n        respondedDateTime: [null],\n        completedDateTime: [null],\n        docBucketId: [null],\n        scheduleId: [null],\n        planId: [null],\n        problemTypeString: [null]\n      });\n      this.subscriptions.push(this.addWrFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {\n      this.bps.register(this);\n      this.loadEnumsData();\n      this.loadEquipments();\n      this.addWrFormPanel.patchValue({\n        dateRequested: new Date(),\n        timeRequested: new Date()\n      });\n      this.setAssetReadOnly = true;\n      this.loadDefaultUser();\n      if (this.isReadOnly) {\n        this.addWrFormPanel.disable();\n      }\n      this.loadProblemDescription();\n      this.disableDateTimeFields();\n    }\n    notify() {\n      this.useTabletProtrait = BreakpointService.useTabletProtrait;\n      if (this.useTabletProtrait) {\n        this.svgDialogWidth = '75vw';\n      } else {\n        this.svgDialogWidth = '50vw';\n      }\n    }\n    loadProblemDescription() {\n      this.pdService.getALLPds().subscribe(res => {\n        this.problemDescriptionList = res;\n        this.filteredProblemDescriptionList = this.problemDescriptionList;\n      });\n    }\n    loadDefaultUser() {\n      if (this.isDetails || this.isView) {\n        //nothing to perform\n      } else {\n        const emId = this.authSrv.getLoggedInUserEMId();\n        this.emServ.getEmById(emId).subscribe(res => {\n          const emData = this.createEmData(res.em);\n          this.selectedEm = emData;\n          this.updateEmList(emData);\n          if (res.employeeLocation.blId !== null) {\n            this.getBlById(res.employeeLocation.blId);\n            if (res.employeeLocation.flId != null) {\n              this.getFlById(res.employeeLocation.flId);\n            }\n            if (res.employeeLocation.rmId != null) {\n              this.getRmById(res.employeeLocation.rmId);\n            }\n            this.isEmpSelected = true;\n            this.isRoomSelected = true;\n            setTimeout(() => {\n              this.addWrFormPanel.patchValue({\n                blId: res.employeeLocation.blId,\n                flId: res.employeeLocation.flId,\n                rmId: res.employeeLocation.rmId,\n                siteId: res.employeeLocation.blSiteId,\n                requestedFor: res.employeeDetails.emId,\n                status: \"Requested\"\n              });\n              this.setAssetReadOnly = false;\n              this.enumEquipment = this.enumAllEquipment.filter(eq => eq.blId === res.employeeLocation.blId);\n              this.enumEquipment.unshift(new Equipment('Make a selection', null, '', '', '', '', 0, '', ''));\n            }, 0);\n            this.parameters = {\n              ...this.parameters,\n              blId: res.employeeLocation.blId,\n              flId: res.employeeLocation.flId,\n              rmId: res.employeeLocation.rmId,\n              siteId: res.employeeLocation.blSiteId,\n              emId: null\n            };\n          } else if (res.employeeDetails.emId) {\n            setTimeout(() => {\n              this.addWrFormPanel.patchValue({\n                requestedFor: res.employeeDetails.emId,\n                status: \"Requested\"\n              });\n            }, 0);\n            this.isEmpSelected = true;\n          } else {\n            this.isEmpSelected = false;\n          }\n          this.loadApplicableSla(this.parameters);\n        });\n      }\n    }\n    loadEnumsData() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n        // this.enumSlaResponseParam = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase());\n        this.enumAutoIssue = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'auto_issue'.toLocaleUpperCase());\n        this.enumAutoApproval = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'auto_approval'.toLocaleUpperCase());\n        this.enumDeafultValue = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'is_default'.toLocaleUpperCase());\n        // this.enumWrSteps = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr_steps'.toLocaleUpperCase());\n        this.enumStepType = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr_steps'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'step_type'.toLocaleUpperCase());\n      }, error => {});\n    }\n    loadRequestedForData() {\n      this.emServ.getAllEmployeeList().subscribe(res => {\n        this.allEmployees = res.map(i => {\n          i.blCode = i.blBlCode;\n          i.flCode = i.flFlCode;\n          return i;\n        });\n        this.enumRequestedFor = res;\n        this.enumRequestedFor = res.map(i => {\n          i.fullName = i.emCode + ' - ' + i.firstName + \" \" + i.lastName;\n          return i;\n        });\n        this.enumRequestedFor.unshift(new EmployeeDetails({\n          fullName: 'Make a selection',\n          emId: \"\",\n          initials: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          maidenName: \"\",\n          aliasName: \"\",\n          email: \"\",\n          emStd: \"\",\n          emStatus: 0,\n          idNumber: \"\",\n          birthDate: null,\n          gender: 0,\n          compName: \"\",\n          dateJoin: \"\",\n          dateLeave: \"\",\n          compId: 0,\n          emPhoto: \"\",\n          ccCode: 0,\n          lineMngr: \"\",\n          emPhotoMobile: \"\"\n        }));\n      });\n    }\n    loadEquipments() {\n      this.eqServ.getAllEquipments().subscribe(res => {\n        this.enumAllEquipment = res;\n        this.enumAllEquipment = res.map(i => {\n          i.displayEqId = i.eqCode;\n          return i;\n        });\n        this.enumEquipment = [...this.enumAllEquipment];\n      });\n    }\n    onSelectRequestedFor($event) {\n      this.isEmpSelected = false;\n      // this.isRoomSelected = false;\n      const em_id = $event.emId;\n      this.slaData = [];\n      this.slaResponseParameters = [];\n      if (em_id != \"\") {\n        this.isEmpSelected = true;\n        this.enumBL = this.enumBL;\n        this.enumFL = this.enumAllFL;\n        this.rm_data = this.allRmDdata;\n        this.emServ.getEmById(em_id).subscribe(res => {\n          const emData = this.createEmData(res.em);\n          this.selectedEm = emData;\n          this.updateEmList(emData);\n          if (res.employeeLocation.blId) {\n            this.getBlById(res.employeeLocation.blId);\n            if (res.employeeLocation.flId != null) {\n              this.getFlById(res.employeeLocation.flId);\n            }\n            if (res.employeeLocation.rmId != null) {\n              this.getRmById(res.employeeLocation.rmId);\n            }\n            this.parameters = {\n              ...this.parameters,\n              blId: res.employeeLocation.blId,\n              flId: res.employeeLocation.flId,\n              rmId: res.employeeLocation.rmId,\n              siteId: res.employeeLocation.blSiteId,\n              emId: null\n            };\n            // Get Applicable Sla\n            this.loadApplicableSla(this.parameters);\n            this.isRoomSelected = true;\n            setTimeout(() => {\n              this.addWrFormPanel.patchValue({\n                blId: res.employeeLocation.blId,\n                flId: res.employeeLocation.flId ? res.employeeLocation.flId : null,\n                rmId: res.employeeLocation.rmId ? res.employeeLocation.rmId : null,\n                siteId: res.employeeLocation.blSiteId\n              });\n            }, 0);\n          } else {\n            this.loadApplicableSla(this.parameters);\n          }\n        });\n      } else {\n        this.isEmpSelected = false;\n      }\n    }\n    onSelectBlCode($event) {\n      this.slaData = [];\n      this.slaResponseParameters = [];\n      this.isRoomSelected = false;\n      this.isAssetSelected = false;\n      if ($event.blId != null && $event.blId != '') {\n        this.selectedBl = $event;\n        this.selectedFl = {};\n        this.parameters = {\n          ...this.parameters,\n          blId: $event.blId,\n          flId: null,\n          rmId: null,\n          siteId: $event.siteId,\n          eqId: null\n        };\n        this.enumEquipment = this.enumAllEquipment.filter(eq => eq.blId === $event.blId);\n        this.enumEquipment.unshift(new Equipment('Make a selection', null, '', '', '', '', 0, '', ''));\n        this.setAssetReadOnly = false;\n        // Get Apllicable SLa\n        this.loadApplicableSla(this.parameters);\n        setTimeout(() => {\n          this.addWrFormPanel.patchValue({\n            flId: null,\n            rmId: null,\n            siteId: $event.siteId,\n            eqId: null,\n            eqDescription: null\n          });\n        }, 0);\n      } else {\n        this.enumEquipment = [];\n        this.setAssetReadOnly = true;\n        this.parameters = {\n          ...this.parameters,\n          blId: null,\n          siteId: null,\n          flId: null,\n          rmId: null,\n          eqId: null\n        };\n        // Get Applicable SLA\n        this.loadApplicableSla(this.parameters);\n        setTimeout(() => {\n          this.addWrFormPanel.patchValue({\n            flId: null,\n            rmId: null,\n            blId: null,\n            siteId: null,\n            eqId: null,\n            eqDescription: null\n          });\n        }, 0);\n        this.selectedBl = {};\n        this.selectedFl = {};\n      }\n    }\n    onSelectFlCode($event) {\n      this.slaData = [];\n      this.slaResponseParameters = [];\n      this.isRoomSelected = false;\n      if ($event.flId != null && $event.flId != '') {\n        this.selectedFl = $event;\n        this.getBlById($event.blId);\n        this.parameters = {\n          ...this.parameters,\n          blId: $event.blId,\n          flId: $event.flId,\n          siteId: $event.siteId,\n          rmId: null\n        };\n        // Get Applicable SLA.\n        this.loadApplicableSla(this.parameters);\n        setTimeout(() => {\n          this.addWrFormPanel.patchValue({\n            blId: $event.blId,\n            siteId: $event.siteId,\n            rmId: null,\n            eqId: null,\n            eqDescription: null\n          });\n        }, 0);\n        this.enumEquipment = this.enumAllEquipment.filter(eq => eq.blId === $event.blId);\n        this.enumEquipment.unshift(new Equipment('Make a selection', null, '', '', '', '', 0, '', ''));\n        this.setAssetReadOnly = false;\n      } else {\n        this.isRoomSelected = false;\n        this.parameters = {\n          ...this.parameters,\n          flId: null,\n          rmId: null\n        };\n        // Get Applicable SLA\n        this.loadApplicableSla(this.parameters);\n        setTimeout(() => {\n          this.addWrFormPanel.patchValue({\n            rmId: null\n          });\n        }, 0);\n      }\n      this.selectedRm = {};\n    }\n    onSelectRmCode($event) {\n      this.isRoomSelected = false;\n      this.slaData = [];\n      this.slaResponseParameters = [];\n      if ($event.rmId != null && $event.rmId != '') {\n        this.selectedRm = $event;\n        this.getBlById($event.blId);\n        this.getFlById($event.flId);\n        this.isRoomSelected = true;\n        this.parameters = {\n          ...this.parameters,\n          blId: $event.blId,\n          flId: $event.flId,\n          rmId: $event.rmId,\n          siteId: $event.siteId\n        };\n        // Get Applicable SLA\n        this.loadApplicableSla(this.parameters);\n        setTimeout(() => {\n          this.addWrFormPanel.patchValue({\n            blId: $event.blId,\n            flId: $event.flId,\n            siteId: $event.siteId,\n            eqId: null,\n            eqDescription: null\n          });\n        }, 0);\n        this.enumEquipment = this.enumAllEquipment.filter(eq => eq.blId === $event.blId);\n        this.enumEquipment.unshift(new Equipment('Make a selection', null, '', '', '', '', 0, '', ''));\n        this.setAssetReadOnly = false;\n      } else {\n        this.isRoomSelected = false;\n        this.parameters = {\n          ...this.parameters,\n          rmId: null\n        };\n        // Get Applicable SLA\n        this.loadApplicableSla(this.parameters);\n        this.setAssetReadOnly = false;\n      }\n    }\n    onSelectEqCode($event) {\n      this.isAssetSelected = false;\n      this.slaData = [];\n      this.slaResponseParameters = [];\n      if ($event.eqId != null && $event.eqId !== '') {\n        this.isAssetSelected = true;\n        this.isRoomSelected = true;\n        this.enumFL = this.enumAllFL;\n        this.rm_data = this.allRmDdata;\n        this.parameters = {\n          ...this.parameters,\n          blId: $event.blId,\n          flId: $event.flId,\n          rmId: $event.rmId,\n          eqId: $event.eqId\n        };\n        this.getBlById($event.blId);\n        if ($event.flId != null) {\n          this.getFlById($event.flId);\n        }\n        if ($event != null) {\n          this.getRmById($event.rmId);\n        }\n        // Get Applicable SLA\n        this.loadApplicableSla(this.parameters);\n        setTimeout(() => {\n          this.addWrFormPanel.patchValue({\n            flId: $event.flId,\n            rmId: $event.rmId,\n            eqDescription: $event.description\n          });\n        }, 0);\n      } else {\n        this.isAssetSelected = false;\n        this.parameters = {\n          ...this.parameters,\n          eqId: null\n        };\n        // Get Applicable SLA\n        this.loadApplicableSla(this.parameters);\n        setTimeout(() => {\n          this.addWrFormPanel.patchValue({\n            eqId: null,\n            eqDescription: null\n          });\n        }, 0);\n      }\n    }\n    onAddProblemType() {\n      this.slaData = [];\n      this.slaResponseParameters = [];\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '600px';\n      dialogConfig.data = {\n        isEdit: false,\n        newRecord: true\n      };\n      this.addPbTypeProvider.openDialog(dialogConfig);\n      this.addPbTypeProvider.onDialogueClosed.pipe(take(1)).subscribe(result => {\n        if (result) {\n          if (result.data) {\n            this.problemTypeId = result.data.problemTypeId;\n            this.parameters = {\n              ...this.parameters,\n              probTypeId: result.data.problemTypeId\n            };\n            // Get Applicable SLA\n            this.loadApplicableSla(this.parameters);\n          }\n          this.displayPbTypeFun(result);\n          this.displayProblemType = \"\";\n        }\n      });\n    }\n    displayPbTypeFun(pbTypeData) {\n      if (pbTypeData) {\n        this.displayProblemType = this.displayProblemType + pbTypeData.label + \" | \";\n        if (pbTypeData.parent) {\n          this.displayPbTypeFun(pbTypeData.parent);\n        } else {\n          this.displayProblemType = this.displayProblemType.split(\" | \").reverse().join(\" | \").slice(3);\n          this.addWrFormPanel.patchValue({\n            problemTypeString: this.displayProblemType,\n            probTypeId: pbTypeData.key\n          });\n        }\n      }\n    }\n    isValid() {\n      return this.getValidationErrors().length === 0;\n    }\n    getValidationErrors() {\n      const validationErros = [];\n      return validationErros;\n    }\n    get value() {\n      const wrDetails = {\n        wrId: this.addWrFormPanel.controls.wrId.value,\n        parentWrId: this.addWrFormPanel.controls.parentWrId.value,\n        status: this.addWrFormPanel.controls.status.value,\n        siteId: this.addWrFormPanel.controls.siteId.value,\n        blId: this.addWrFormPanel.controls.blId.value,\n        flId: this.addWrFormPanel.controls.flId.value,\n        rmId: this.addWrFormPanel.controls.rmId.value,\n        eqId: this.addWrFormPanel.controls.eqId.value,\n        probTypeId: this.addWrFormPanel.controls.probTypeId.value,\n        description: this.addWrFormPanel.controls.description.value,\n        dateRequested: this.addWrFormPanel.controls.dateRequested.value,\n        timeRequested: this.addWrFormPanel.controls.timeRequested.value,\n        dateCompleted: this.addWrFormPanel.controls.dateCompleted.value,\n        timeCompleted: this.addWrFormPanel.controls.timeCompleted.value,\n        dateResponded: this.addWrFormPanel.controls.dateResponded.value,\n        timeRepsonded: this.addWrFormPanel.controls.timeRepsonded.value,\n        slaRequestParametersId: this.addWrFormPanel.controls.slaRequestParametersId.value,\n        requestedBy: this.addWrFormPanel.controls.requestedBy.value,\n        requestedFor: this.addWrFormPanel.controls.requestedFor.value,\n        dateToPerform: this.addWrFormPanel.controls.dateToPerform.value,\n        eqDescription: this.addWrFormPanel.controls.eqDescription.value,\n        completeByDate: this.addWrFormPanel.controls.completeByDate.value,\n        respondByDate: this.addWrFormPanel.controls.respondByDate.value,\n        slaResponseParametersId: this.addWrFormPanel.controls.slaResponseParametersId.value,\n        respondedDateTime: this.addWrFormPanel.controls.respondedDateTime.value,\n        completedDateTime: this.addWrFormPanel.controls.completedDateTime.value,\n        docBucketId: this.addWrFormPanel.controls.docBucketId.value,\n        scheduleId: this.addWrFormPanel.controls.scheduleId.value,\n        planId: this.addWrFormPanel.controls.planId.value\n      };\n      return wrDetails;\n    }\n    set value(value) {\n      this.slaResponseParametersId = value.slaResponseParametersId ? value.slaResponseParametersId : 0;\n      const dateRequestedToSet = value.dateRequested;\n      const timeRequestedToSet = value.timeRequested;\n      const dateTimeStringToSet = dateRequestedToSet + ' ' + timeRequestedToSet;\n      const escRespondDateTime = value.escDateResponded && value.escTimeResponded && value.escDateResponded + ' ' + value.escTimeResponded;\n      const escCompleteDateTime = value.escDateCompleted && value.escTimeCompleted && value.escDateCompleted + ' ' + value.escTimeCompleted;\n      const respondedDateTime = value.dateResponded && value.timeResponded && value.dateResponded + ' ' + value.timeResponded;\n      const completedDateTime = value.dateCompleted && value.timeCompleted && value.dateCompleted + ' ' + value.timeCompleted;\n      this.docBucketId = value.docBucketId;\n      this.problemTypeId = value.probTypeId;\n      this.parameters = {\n        ...this.parameters,\n        eqId: value.eqId,\n        blId: value.blId,\n        flId: value.flId,\n        rmId: value.rmId,\n        siteId: value.siteId,\n        probTypeId: value.probTypeId\n      };\n      // this.slaResponseParametersId === 0 ?this.loadApplicableSla(this.parameters):this.getSlaResponseParametersById(this.slaResponseParametersId);\n      this.loadApplicableSla(this.parameters);\n      setTimeout(() => {\n        if (value.requestedFor) {\n          this.getEmById(value.requestedFor);\n        }\n        if (value.blId !== null) {\n          this.getBlById(value.blId);\n          if (value.flId != null) {\n            this.getFlById(value.flId);\n          }\n          if (value.rmId != null) {\n            this.getRmById(value.rmId);\n          }\n          this.setAssetReadOnly = false;\n          this.enumEquipment = this.enumAllEquipment.filter(eq => eq.blId === value.blId);\n          //this.enumEquipment.unshift(new Equipment('Make a selection', null, '', '', '', '', 0, '', this.compId));\n        } else {\n          this.setAssetReadOnly = true;\n        }\n        this.addWrFormPanel.patchValue({\n          wrId: value.wrId,\n          parentWrId: value.parentWrId,\n          status: value.status ? value.status : 'Requested',\n          siteId: value.siteId,\n          blId: value.blId,\n          flId: value.flId,\n          rmId: value.rmId,\n          eqId: value.eqId,\n          problemTypeString: value.problemTypeString,\n          description: value.description,\n          dateRequested: new Date(value.dateRequested),\n          timeRequested: new Date(dateTimeStringToSet),\n          dateCompleted: value.dateCompleted,\n          timeCompleted: value.timeCompleted,\n          dateResponded: value.dateResponded,\n          timeResponded: value.timeResponded,\n          slaRequestParametersId: value.slaRequestParametersId,\n          requestedBy: value.requestedBy,\n          requestedFor: value.requestedFor,\n          dateToPerform: new Date(value.dateToPerform),\n          eqDescription: value.eqDescription,\n          completeByDate: escCompleteDateTime && new Date(escCompleteDateTime),\n          respondByDate: escRespondDateTime && new Date(escRespondDateTime),\n          slaResponseParametersId: value.slaResponseParametersId,\n          respondedDateTime: respondedDateTime && new Date(respondedDateTime),\n          completedDateTime: completedDateTime && new Date(completedDateTime),\n          docBucketId: value.docBucketId,\n          scheduleId: value.scheduleId,\n          planId: value.planId,\n          probTypeId: value.probTypeId\n        });\n      }, 100);\n      this.onChange(value);\n      this.onTouched();\n      this.setLocationIcon(value.rmId, value.eqId, value.requestedFor);\n    }\n    convertToTime(value) {\n      if (value != null) {\n        var currDate = new Date();\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        currDate.setHours(data[0]);\n        currDate.setMinutes(data[1]);\n        currDate.setSeconds(0);\n        currDate.setMilliseconds(0);\n        return this.datePipe.transform(currDate, \"HH:mm:ss\");\n      } else {\n        return '';\n      }\n    }\n    getIdByStatus(status) {\n      return this.enumStatus.find(t => t.enumValue.toLocaleUpperCase() === status.toLocaleUpperCase())?.enumKey;\n    }\n    onSaveWr() {\n      if (this.addWrFormPanel.valid) {\n        const data = this.addWrFormPanel.getRawValue();\n        const loggedIn = this.authSrv.getLoggedInUserEMId() ? this.authSrv.getLoggedInUserEMId() : null;\n        data.requestedBy = loggedIn;\n        data.status = this.addWrFormPanel.controls.status.value ? this.addWrFormPanel.controls.status.value : \"Requested\";\n        data.dateRequested = this.datePipe.transform(data.dateRequested, \"yyyy-MM-dd\");\n        data.timeRequested = this.datePipe.transform(data.timeRequested, \"HH:mm:ss\");\n        data.probType = this.problemTypeId;\n        data.dateToPerform = this.datePipe.transform(data.dateToPerform, \"yyyy-MM-dd\");\n        data.slaRequestParametersId = this.addWrFormPanel.controls.slaRequestParametersId.value ? this.addWrFormPanel.controls.slaRequestParametersId.value : this.slaData[0].slaRequestParametersId;\n        data.escDateResponded = this.datePipe.transform(data.respondByDate, \"yyyy-MM-dd\");\n        data.escTimeResponded = this.datePipe.transform(data.respondByDate, \"HH:mm:ss\");\n        data.escDateCompleted = this.datePipe.transform(data.completeByDate, \"yyyy-MM-dd\");\n        data.escTimeCompleted = this.datePipe.transform(data.completeByDate, \"HH:mm:ss\");\n        data.selectedSlaRespParamId = this.selectedPriority;\n        data.slaResponseParametersId = this.selectedPriority;\n        this.wrServ.saveWorkRequest(data).subscribe(res => {\n          if (res.wrId > 0) {\n            if (!this.afterSavedForm) {\n              this.displaySuccPopUp = true;\n              this.requestId = res.wrId;\n            } else {\n              this.parentFun.emit(res.wrId);\n              this.messageService.clear();\n              this.messageService.add({\n                key: 'wrSave',\n                severity: 'success',\n                summary: 'Record saved successfully',\n                detail: 'Record saved successfully'\n              });\n              this.showTimeToResponse = '';\n              this.showTimeToCompleted = '';\n              this.showAutoIssue = '';\n              this.showAutoApproval = '';\n              this.isPrivorityChecked = false;\n            }\n          } else {\n            this.displaySuccPopUp = false;\n          }\n        }, error => {});\n      }\n    }\n    onClear() {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to clear?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.clearWrFormPanel();\n        },\n        key: \"wrGrid\"\n      });\n    }\n    clearWrFormPanel() {\n      this.addWrFormPanel.reset();\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.setAssetReadOnly = true;\n      this.loadDefaultUser();\n      this.addWrFormPanel.patchValue({\n        dateToPerform: new Date(),\n        dateRequested: new Date(),\n        timeRequested: new Date()\n      });\n      this.parameters = {\n        siteId: null,\n        blId: null,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        emId: null,\n        probType: null\n      };\n      this.slaData = [];\n      this.slaResponseParameters = [];\n      this.enumBL = this.enumAllBl;\n      this.enumFL = this.enumAllFL;\n      this.rm_data = this.allRmDdata;\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      this.scrollToEndBl();\n      this.scrollToEndFl();\n      this.scrollToEndRm();\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.addWrFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    validate(_) {\n      return this.addWrFormPanel.valid ? null : {\n        addWrFormPanel: {\n          valid: false\n        }\n      };\n    }\n    handleEscalationDateTime(id) {\n      const requestTime = this.addWrFormPanel.controls.timeRequested.value;\n      const requestDate = this.addWrFormPanel.controls.dateRequested.value;\n      if (requestTime !== null && requestDate !== null) {\n        const requestDateTime = {\n          requestDate: this.datePipe.transform(requestDate, \"yyyy-MM-dd\"),\n          requestTime: this.datePipe.transform(requestTime, \"HH:mm:ss\"),\n          selectedSlaResponseId: id\n        };\n        this.wrServ.getEscaltionDateAndTime(requestDateTime).subscribe(res => {\n          if (res) {\n            this.addWrFormPanel.patchValue({\n              respondByDate: new Date(res.responseDateTime),\n              completeByDate: new Date(res.completeDateTime)\n            });\n          }\n        });\n      }\n    }\n    selectPriority(rec) {\n      this.isPrivorityChecked = false;\n      this.showTimeToResponse = '';\n      this.showTimeToCompleted = '';\n      this.showAutoIssue = '';\n      this.showAutoApproval = '';\n      this.selectedPriorityRec = [];\n      this.selectedPriorityRec = rec;\n      if (rec.timeToResponse != null && rec.timeToResponse > 0) {\n        this.showTimeToResponse = `Response required in ${rec.timeToResponse} hours`;\n      }\n      if (rec.timeToComplete != null && rec.timeToComplete > 0) {\n        this.showTimeToCompleted = `Completion required in ${rec.timeToComplete} hours`;\n      }\n      if (rec.autoIssue != null && rec.autoIssue > 0) {\n        let enumValueForAutoIssue = this.getAutoIssue(rec.autoIssue);\n        this.showAutoIssue = enumValueForAutoIssue === \"Yes\" ? `Request will be AutoIssue ` : '';\n      }\n      if (rec.autoApproval != null && rec.autoApproval > 0) {\n        let enumValueForAutoApproval = this.getAutoApproval(rec.autoIssue);\n        this.showAutoApproval = enumValueForAutoApproval === \"Yes\" ? `Request will be AutoApproval ` : '';\n      }\n      if (this.showTimeToResponse != '' || this.showTimeToCompleted != '' || this.showAutoIssue != '' || this.showAutoApproval != '' || rec.slaSteps.length > 0) {\n        this.isPrivorityChecked = true;\n      }\n      this.handleEscalationDateTime(rec.slaResponseParametersId);\n    }\n    getAutoIssue(auto_issue) {\n      return this.enumAutoIssue.find(t => t.enumKey === auto_issue)?.enumValue;\n    }\n    getAutoApproval(auto_approval) {\n      return this.enumAutoApproval.find(t => t.enumKey === auto_approval)?.enumValue;\n    }\n    getIsdeafult(is_default) {\n      return this.enumDeafultValue.find(t => t.enumKey === is_default)?.enumValue;\n    }\n    getDefaultPriority(SlaResponseParam) {\n      if (this.slaResponseParametersId && this.slaResponseParametersId > 0) {\n        const selectedResponseParam = this.slaResponseParameters.find(each => each.slaResponseParametersId == this.slaResponseParametersId);\n        if (!selectedResponseParam) {\n          const defaultResponseParam = SlaResponseParam.find(each => each.isDefault === \"Yes\");\n          this.selectedPriority = defaultResponseParam.slaResponseParametersId;\n        } else {\n          this.selectedPriority = selectedResponseParam.slaResponseParametersId;\n        }\n        return;\n      } else {\n        SlaResponseParam.forEach(rec => {\n          // let isDefault = this.getIsdeafult(rec.isDefault);\n          if (rec.isDefault === \"Yes\") {\n            this.slaResponseParameters = this.slaResponseParameters.filter(each => each.slaResponseParametersId !== rec.slaResponseParametersId);\n            this.slaResponseParameters.unshift(rec);\n            this.selectedPriority = rec.slaResponseParametersId;\n            this.handleEscalationDateTime(this.selectedPriority);\n            this.selectPriority(rec);\n            return;\n          }\n        });\n      }\n    }\n    getStepTypeValue(stepType) {\n      return this.enumStepType.find(t => t.enumKey === stepType)?.enumValue;\n    }\n    getPersonName(data) {\n      let fullName = '';\n      if (data.emId !== null) {\n        const emData = this.enumRequestedFor.filter(e => e.emId === data.emId);\n        if (emData[0].firstName !== null && emData[0].lastName !== null) {\n          fullName = emData[0].firstName + \" \" + emData[0].lastName;\n        } else if (emData[0].firstName === null && emData[0].lastName !== null) {\n          fullName = emData[0].lastName;\n        } else if (emData[0].firstName !== null && emData[0].lastName === null) {\n          fullName = emData[0].firstName;\n        } else {\n          fullName = data.emId;\n        }\n      } else if (data.cfId !== null) {\n        if (data.technicianData.name !== null) {\n          fullName = data.technicianData.name;\n        } else {\n          fullName = data.cfId;\n        }\n      } else if (data.teamId !== null) {\n        fullName = data.teamId;\n      }\n      return fullName;\n    }\n    onRowSelectProblemDescription(event) {\n      this.pdService.getPdById(event.data.pdId).subscribe(res => {\n        setTimeout(() => {\n          if (this.addWrFormPanel != null) {\n            this.addWrFormPanel.patchValue({\n              description: res.pdDescription\n            });\n          }\n        }, 0);\n      });\n      this.toggleOp(event);\n    }\n    onCloseSucPopUp() {\n      this.displaySuccPopUp = false;\n      this.clearWrFormPanel();\n    }\n    onClickGoToDetails() {\n      this.displaySuccPopUp = false;\n      this.router.navigate(['/work-request-details'], {\n        queryParams: {\n          requestId: this.requestId,\n          fromLoggRequestPage: true,\n          action: 'afterSavedForm'\n        }\n      });\n    }\n    loadApplicableSla(parameters) {\n      this.slaRequestParameterSer.getApplicableSlaRequestParameters(parameters).subscribe(res => {\n        if (res.length > 0) {\n          this.slaData = res;\n          if (this.slaData[0].slaResponseParameters.length > 0) {\n            this.slaResponseParameters = this.slaData[0].slaResponseParameters;\n            this.getDefaultPriority(this.slaData[0].slaResponseParameters);\n          }\n        } else {\n          this.slaData = [];\n          this.isPrivorityChecked = false;\n          this.addWrFormPanel.patchValue({\n            respondByDate: null,\n            completeByDate: null\n          });\n        }\n      });\n    }\n    getSlaResponseParametersById(slaResponseParametersId) {\n      this.slaResponseParameters = [];\n      this.slaRequestParameterSer.getSlaResponseParametersById(slaResponseParametersId).subscribe(res => {\n        this.slaResponseParameters.push(res);\n        this.selectedPriority = res.slaResponseParametersId;\n      });\n    }\n    filterTable(searchText) {\n      this.searchTextLower = searchText.toLowerCase();\n      this.filteredProblemDescriptionList = this.problemDescriptionList.filter(item => item.pdDescription.toLowerCase().includes(this.searchTextLower));\n    }\n    toggleOp(event) {\n      this.op.toggle(event);\n      this.filterTable(\"\");\n    }\n    disableDateTimeFields() {\n      this.addWrFormPanel.get('dateRequested')?.disable();\n      this.addWrFormPanel.get('timeRequested')?.disable();\n      this.addWrFormPanel.get('respondByDate')?.disable();\n      this.addWrFormPanel.get('completeByDate')?.disable();\n      this.addWrFormPanel.get('respondedDateTime')?.disable();\n      this.addWrFormPanel.get('completedDateTime')?.disable();\n    }\n    setLocationIcon(rmId, eqId, emId) {\n      rmId != null ? this.isRoomSelected = true : this.isRoomSelected = false;\n      eqId != null ? this.isAssetSelected = true : this.isAssetSelected = false;\n      emId != null ? this.isEmpSelected = true : this.isEmpSelected = false;\n    }\n    locateRoom(fieldType) {\n      this.showSvg = false;\n      this.showMessage = false;\n      this.noSVGFound = false;\n      this.viewSvg = false;\n      this.svgDialogHeaderText = '';\n      let emId = this.addWrFormPanel.controls.requestedFor.value;\n      if (fieldType === 'em') {\n        this.emServ.getEmById(emId).subscribe(res => {\n          const employee = res.em;\n          if (employee.blId !== null && employee.flId !== null && employee.rmId !== null) {\n            this.svgDialogHeaderText = '';\n            this.svgDialogHeaderText = `'${employee.firstName + \" \" + employee.lastName}' is located in Building: ${employee.bl.blCode}, on Floor: ${employee.fl.flCode}. `;\n            this.svgInputData = new SvgRoomDataInput(employee.blId, employee.flId, employee.rmId, false, true, false, false, true, employee.firstName + \" \" + employee.lastName, null, \"\", \"\", null, null);\n            this.viewSvg = true;\n            this.showSvg = true;\n          } else {\n            this.noSVGFound = true;\n            this.svgDialogHeaderText = 'No location details found';\n            this.showMessage = true;\n          }\n        });\n      } else if (fieldType === 'asset') {\n        const assetId = this.addWrFormPanel.controls.eqId.value;\n        const asset = this.enumEquipment.find(item => item.eqId === assetId);\n        if (asset) {\n          this.svgDialogHeaderText = '';\n          this.svgDialogHeaderText = `'${asset.eqCode}' is located in Building: ${asset.bl.blCode}, on Floor: ${asset.fl.flCode}. `;\n          this.svgInputData = new SvgRoomDataInput(asset.blId, asset.flId, asset.rmId, false, false, true, false, true, \"\", asset, \"\", \"\", null, null);\n          this.viewSvg = true;\n          this.showSvg = true;\n        }\n      } else if (fieldType === 'rm') {\n        const roomId = this.addWrFormPanel.controls.rmId.value;\n        const room = this.rm_data.find(item => item.rmId === roomId);\n        if (room) {\n          this.svgInputData = new SvgRoomDataInput(room.blId, room.flId, room.rmId, true, false, false, false, true, \"\", null, \"\", \"\", null, null);\n          this.viewSvg = true;\n          this.showSvg = true;\n        }\n      } else {\n        this.noSVGFound = true;\n        this.showMessage = true;\n      }\n    }\n    ngOnDestroy() {\n      this.bps.unregister(this);\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blServ.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blServ.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.updateFlList(this.selectedFl);\n      });\n    }\n    scrollToEndRm() {\n      this.offsetRm = this.limitRm;\n      this.limitRm += this.scrollLimit;\n      this.filterCriteria.limit = this.limitRm;\n      this.filterCriteria.offset = this.offsetRm;\n      this.blServ.getALLRoomByScroll(this.filterCriteria).subscribe(res => {\n        this.rm_data = res;\n        this.updateRmList(this.selectedRm);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    searchRm(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"rmName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndRm();\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      if (flData.flId) {\n        this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n        this.enumFL = this.enumFL.filter(t => t.flId !== null);\n        this.enumFL.unshift(flData);\n      }\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateRmList(rmData) {\n      if (rmData.rmId) {\n        this.rm_data = this.rm_data.filter(t => t.rmId !== rmData.rmId);\n        this.rm_data = this.rm_data.filter(t => t.rmId !== null);\n        this.rm_data.unshift(rmData);\n      }\n      this.rm_data.unshift(new RoomFilterInputDTO(null, 'Make a selection', null, null));\n    }\n    createBlData(bl) {\n      const blData = {\n        blId: bl.blId,\n        blNameString: bl.blName != null ? bl.blCode + \" - \" + bl.blName : bl.blCode,\n        site: null\n      };\n      return blData;\n    }\n    createFlData(fl) {\n      const flData = {\n        flId: fl.flId,\n        flNameString: fl.flName != null ? fl.flCode + \" - \" + fl.flName : fl.flCode,\n        blId: fl.blId,\n        blNameString: fl.bl.blName != null ? fl.bl.blCode + \" - \" + fl.bl.blName : fl.bl.blCode\n      };\n      return flData;\n    }\n    createRmData(rm) {\n      const rmData = {\n        rmId: rm.rmId,\n        rmNameString: rm.rmName != null ? rm.rmCode + \" - \" + rm.rmName : rm.rmCode,\n        flId: rm.flId,\n        blId: rm.blId\n      };\n      return rmData;\n    }\n    getBlById(blId) {\n      this.blServ.getBlById(blId).subscribe(res => {\n        const blData = this.createBlData(res.bl);\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n      });\n    }\n    getFlById(flId) {\n      this.blServ.getFlById(flId).subscribe(res => {\n        const flData = this.createFlData(res);\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n      });\n    }\n    getRmById(rmId) {\n      this.blServ.getRmById(rmId).subscribe(res => {\n        const rmData = this.createRmData(res.rm);\n        this.selectedRm = rmData;\n        this.updateRmList(rmData);\n      });\n    }\n    getEmById(emId) {\n      this.emServ.getEmById(emId).subscribe(res => {\n        const emData = this.createEmData(res.em);\n        this.selectedEm = emData;\n        this.updateEmList(emData);\n        return res.em;\n      });\n    }\n    scrollToEndEm() {\n      this.offsetEm = this.limitEm;\n      this.limitEm += this.scrollLimit;\n      this.filterCriteria.limit = this.limitEm;\n      this.filterCriteria.offset = this.offsetEm;\n      this.emServ.getALLmployeeByScroll(this.filterCriteria).subscribe(res => {\n        this.enumRequestedFor = res;\n        this.updateEmList(this.selectedEm);\n      });\n    }\n    searchEm(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"firstName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndEm();\n    }\n    createEmData(em) {\n      const emData = {\n        emId: em.emId,\n        emCode: em.emCode,\n        firstName: em.firstName\n      };\n      return emData;\n    }\n    updateEmList(emData) {\n      if (emData.emId) {\n        this.enumRequestedFor = this.enumRequestedFor.filter(e => e.emId != emData.emId);\n        this.enumRequestedFor = this.enumRequestedFor.filter(e => e.emId != null);\n        this.enumRequestedFor.unshift(emData);\n      }\n      this.enumRequestedFor.unshift({\n        emId: null,\n        firstName: 'Make a selection',\n        emCode: null\n      });\n    }\n    closeSvgDialog(state) {\n      if (!state) {\n        this.viewSvg = false;\n        this.showSvg = false;\n      }\n    }\n    expandSvgDialog(maximized) {\n      this.parentSpinner.show();\n      this.showSpinnerParent = true;\n      setTimeout(() => {\n        this.showSpinnerParent = false;\n        this.parentSpinner.hide();\n      }, 100);\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    onOpenRm() {\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      if (this.selectedFl.flId) {\n        this.filterCriteria = {\n          fieldName: \"fl.flId\",\n          value: this.selectedFl.flId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndRm();\n    }\n    onOpenEm() {\n      this.limitEm = 0;\n      this.offsetEm = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndEm();\n    }\n    static #_ = this.ɵfac = function AddWorkRequestComponent_Factory(t) {\n      return new (t || AddWorkRequestComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.EnumService), i0.ɵɵdirectiveInject(i4.EmployeeService), i0.ɵɵdirectiveInject(i5.ConfirmationService), i0.ɵɵdirectiveInject(i6.SiteService), i0.ɵɵdirectiveInject(i7.BuildingService), i0.ɵɵdirectiveInject(i8.EquipmentService), i0.ɵɵdirectiveInject(i9.AddWorkRequestService), i0.ɵɵdirectiveInject(i10.DatePipe), i0.ɵɵdirectiveInject(i5.MessageService), i0.ɵɵdirectiveInject(i11.AddWrProblemTypeProvider), i0.ɵɵdirectiveInject(i12.SLARequestServices), i0.ɵɵdirectiveInject(i13.ProblemDescriptionService), i0.ɵɵdirectiveInject(i14.Router), i0.ɵɵdirectiveInject(i15.NgxSpinnerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i16.BreakpointService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddWorkRequestComponent,\n      selectors: [[\"app-add-work-request\"]],\n      viewQuery: function AddWorkRequestComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(SvgViewComponent, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.op = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComponent = _t.first);\n        }\n      },\n      inputs: {\n        isView: \"isView\",\n        isDetails: \"isDetails\",\n        isReadOnly: \"isReadOnly\",\n        afterSavedForm: \"afterSavedForm\",\n        editFields: \"editFields\"\n      },\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddWorkRequestComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddWorkRequestComponent),\n        multi: true\n      }, MessageService])],\n      decls: 22,\n      vars: 30,\n      consts: [[\"style\", \"height: 85vh;\", 4, \"ngIf\"], [4, \"ngIf\"], [\"key\", \"wrSave\", \"position\", \"top-right\"], [\"key\", \"wrGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Your request logged successfully!\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"closable\", \"visibleChange\"], [\"width\", \"100%\"], [2, \"font-size\", \"16px\"], [2, \"font-weight\", \"500\", \"margin-left\", \"3px\"], [\"pTemplate\", \"footer\"], [\"header\", \"Header\", 3, \"visible\", \"modal\", \"closable\", \"maximizable\", \"visibleChange\", \"onMaximize\"], [\"pTemplate\", \"header\"], [\"header\", \"Header\", 3, \"visible\", \"modal\", \"closable\", \"maximizable\", \"visibleChange\"], [\"style\", \"margin-top: 20px;\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [2, \"height\", \"85vh\"], [3, \"header\"], [3, \"formGroup\"], [\"mat-dialog-title\", \"\", \"class\", \"mat-dialog-title-ext\", 4, \"ngIf\"], [\"width\", \"100%\", 2, \"table-layout\", \"fixed\"], [1, \"location-container\"], [1, \"input-label-custom\", \"input-container\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"requestedFor\", \"bindLabel\", \"firstName\", \"bindValue\", \"emId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"readonly\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [1, \"icon-container\"], [3, \"matTooltip\", \"click\"], [\"tooltip\", \"matTooltip\"], [1, \"p-fluid\"], [1, \"p-field\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequested\", \"formControlName\", \"dateRequested\", 3, \"disabled\", \"showIcon\"], [\"appendTo\", \"body\", \"name\", \"timeRequested\", \"formControlName\", \"timeRequested\", 3, \"showTime\", \"disabled\", \"showIcon\", \"timeOnly\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"readonly\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"readonly\", \"open\", \"change\", \"scrollToEnd\", \"search\"], [\"appendTo\", \"body\", \"formControlName\", \"rmId\", \"bindLabel\", \"rmNameString\", \"bindValue\", \"rmId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"open\", \"change\", \"scrollToEnd\", \"search\"], [\"appendTo\", \"body\", \"formControlName\", \"eqId\", \"bindLabel\", \"displayEqId\", \"bindValue\", \"eqId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"type\", \"text\", \"disabled\", \"true\", \"formControlName\", \"eqDescription\", 1, \"form-control\", 3, \"readonly\"], [2, \"width\", \"100%\", \"margin-left\", \"3px\", \"display\", \"flex\", \"flex-direction\", \"column\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\"], [2, \"width\", \"70%\"], [\"name\", \"problemTypeString\", \"rows\", \"2\", \"formControlName\", \"problemTypeString\", \"placeholder\", \"Add problem type\", \"nz-input\", \"\", 1, \"form-control\", \"note-border\", 3, \"readonly\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"margin-left\", \"5px\"], [\"type\", \"text\", \"pButton\", \"\", \"label\", \"Select Problem\", 3, \"disabled\", \"click\"], [\"colspan\", \"2\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"width\", \"100%\"], [\"class\", \"priority-container\", 3, \"ngClass\", 4, \"ngIf\"], [2, \"width\", \"25%\"], [1, \"d-flex\"], [1, \"input-label-custom\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"respondByDate\", \"formControlName\", \"respondByDate\", 3, \"showTime\", \"disabled\", \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"completeByDate\", \"formControlName\", \"completeByDate\", 3, \"showTime\", \"disabled\", \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"respondedDateTime\", \"formControlName\", \"respondedDateTime\", 3, \"showTime\", \"disabled\", \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"completedDateTime\", \"formControlName\", \"completedDateTime\", 3, \"showTime\", \"disabled\", \"showIcon\"], [\"name\", \"description\", \"rows\", \"2\", \"formControlName\", \"description\", \"maxlength\", \"4000\", \"nz-input\", \"\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [2, \"margin-left\", \"6px\", \"margin-top\", \"px\"], [\"appendTo\", \"body\", 3, \"dismissable\", \"hideTransitionOptions\", \"showCloseIcon\"], [\"op\", \"\"], [\"selectionMode\", \"single\", \"responsiveLayout\", \"scroll\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"scrollDirection\", \"both\", \"scrollHeight\", \"200px\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"dataKey\", \"pdId\", 3, \"value\", \"selection\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"scrollable\", \"rowHover\", \"selectionChange\", \"onRowSelect\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"type\", \"text\", \"pButton\", \"\", \"label\", \"Select Problem Description\", \"icon\", \"pi pi-search\", 3, \"disabled\", \"click\"], [1, \"d-flex\", \"justify-content-end\", \"m-3\", 2, \"margin-right\", \"30px\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"ml5\", 3, \"disabled\", \"click\"], [\"label\", \"Clear\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"hidden\", \"click\"], [\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [\"appendTo\", \"body\", \"formControlName\", \"status\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [1, \"priority-container\", 3, \"ngClass\"], [\"class\", \" m-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"m-2\"], [2, \"display\", \"flex\"], [\"name\", \"selectedPriority\", \"formControlName\", \"selectedPriority\", 3, \"inputId\", \"disabled\", \"ngModel\", \"value\", \"ngModelChange\", \"click\"], [2, \"margin-left\", \"10px\", \"font-size\", \"12px\", 3, \"for\"], [\"width\", \"100%\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [2, \"width\", \"100%\"], [2, \"margin-top\", \"10px\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\", 3, \"value\", \"input\"], [3, \"pSelectableRow\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"], [2, \"width\", \"95%\", \"margin-left\", \"3px\", \"display\", \"flex\", \"flex-direction\", \"column\"], [\"name\", \"problemTypeString\", \"rows\", \"3\", \"formControlName\", \"problemTypeString\", \"placeholder\", \"Add problem type\", \"nz-input\", \"\", 1, \"form-control\", \"note-border\", 3, \"readonly\"], [2, \"margin-top\", \"25px\"], [\"style\", \"display: flex; flex-direction: column;\", 4, \"ngIf\"], [3, \"nzMaxCharacterCount\"], [\"name\", \"description\", \"rows\", \"4\", \"formControlName\", \"description\", \"maxlength\", \"4000\", \"nz-input\", \"\", 1, \"form-control\", \"note-border\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"click\"], [1, \"pi\", \"pi-arrow-circle-right\", 2, \"margin-left\", \"0.5rem\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"label\", \"Close\", \"styleClass\", \"p-button-text\", 3, \"click\"], [3, \"svgInputData\"], [2, \"margin-top\", \"20px\"], [1, \"msg-label\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n      template: function AddWorkRequestComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AddWorkRequestComponent_div_0_Template, 134, 76, \"div\", 0);\n          i0.ɵɵtemplate(1, AddWorkRequestComponent_div_1_Template, 136, 77, \"div\", 1);\n          i0.ɵɵelement(2, \"p-toast\", 2)(3, \"p-confirmDialog\", 3);\n          i0.ɵɵelementStart(4, \"p-dialog\", 4);\n          i0.ɵɵlistener(\"visibleChange\", function AddWorkRequestComponent_Template_p_dialog_visibleChange_4_listener($event) {\n            return ctx.displaySuccPopUp = $event;\n          });\n          i0.ɵɵelementStart(5, \"table\", 5)(6, \"tr\")(7, \"td\")(8, \"div\")(9, \"p\", 6);\n          i0.ɵɵtext(10, \"Request Id:\");\n          i0.ɵɵelementStart(11, \"span\", 7);\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵtemplate(13, AddWorkRequestComponent_ng_template_13_Template, 4, 0, \"ng-template\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"p-dialog\", 9);\n          i0.ɵɵlistener(\"visibleChange\", function AddWorkRequestComponent_Template_p_dialog_visibleChange_14_listener($event) {\n            return ctx.showSvg = $event;\n          })(\"visibleChange\", function AddWorkRequestComponent_Template_p_dialog_visibleChange_14_listener($event) {\n            return ctx.closeSvgDialog($event);\n          })(\"onMaximize\", function AddWorkRequestComponent_Template_p_dialog_onMaximize_14_listener($event) {\n            return ctx.expandSvgDialog($event);\n          });\n          i0.ɵɵtemplate(15, AddWorkRequestComponent_ng_template_15_Template, 2, 1, \"ng-template\", 10);\n          i0.ɵɵtemplate(16, AddWorkRequestComponent_div_16_Template, 2, 1, \"div\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"p-dialog\", 11);\n          i0.ɵɵlistener(\"visibleChange\", function AddWorkRequestComponent_Template_p_dialog_visibleChange_17_listener($event) {\n            return ctx.showMessage = $event;\n          });\n          i0.ɵɵtemplate(18, AddWorkRequestComponent_ng_template_18_Template, 2, 0, \"ng-template\", 10);\n          i0.ɵɵtemplate(19, AddWorkRequestComponent_div_19_Template, 3, 1, \"div\", 12);\n          i0.ɵɵtemplate(20, AddWorkRequestComponent_ng_template_20_Template, 1, 0, \"ng-template\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(21, AddWorkRequestComponent_ngx_spinner_21_Template, 3, 1, \"ngx-spinner\", 13);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(26, _c5));\n          i0.ɵɵproperty(\"visible\", ctx.displaySuccPopUp)(\"modal\", true)(\"maximizable\", false)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.requestId);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction1(27, _c6, ctx.svgDialogWidth));\n          i0.ɵɵproperty(\"visible\", ctx.showSvg)(\"modal\", true)(\"closable\", true)(\"maximizable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(29, _c2));\n          i0.ɵɵproperty(\"visible\", ctx.showMessage)(\"modal\", true)(\"closable\", true)(\"maximizable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.noSVGFound);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.showSpinnerParent);\n        }\n      },\n      dependencies: [i10.NgClass, i10.NgForOf, i10.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i17.NgSelectComponent, i18.MatIcon, i19.MatDialogTitle, i19.MatDialogActions, i20.NzTableCellDirective, i20.NzThMeasureDirective, i20.NzTrDirective, i21.NzTextareaCountComponent, i21.NzInputDirective, i5.PrimeTemplate, i22.Table, i22.SelectableRow, i23.Calendar, i24.ButtonDirective, i24.Button, i25.Dialog, i26.Toast, i27.Card, i28.ConfirmDialog, i29.OverlayPanel, i15.NgxSpinnerComponent, i30.RadioButton, i31.MatTooltip, i32.SvgViewComponent, i33.TrimInputDirective],\n      styles: [\".p-card .p-card-title{font-size:1.5rem;font-weight:700;margin-bottom:.5rem}  .ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{overflow:hidden!important;text-overflow:ellipsis!important;white-space:nowrap!important;max-width:350px!important}  .p-card .p-card-body{padding:10px}  .mat-typography h2{margin:0;font-size:16px!important;padding-left:5px}  .p-card .p-card-content{padding:0}.margin-class[_ngcontent-%COMP%]{margin:10px}  .mat-dialog-content{overflow:hidden!important}.field-checkbox[_ngcontent-%COMP%]{display:inline-block;max-width:200px}.field-checkbox[_ngcontent-%COMP%] + .field-checkbox[_ngcontent-%COMP%]{margin-top:10px}.ellipsis[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}  .p-datatable-table{table-layout:fixed!important}  .cdk-overlay-container{z-index:1400}.location-container[_ngcontent-%COMP%]{display:flex}.input-container[_ngcontent-%COMP%]{width:92%}.icon-container[_ngcontent-%COMP%]{display:flex;align-self:center;margin-top:16px}.blue-icon[_ngcontent-%COMP%]{color:#2196f3;cursor:pointer}.no-file-found[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:500px;padding-top:5px}[_nghost-%COMP%]     .p-dialog-header{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0;height:10px!important}.msg-label[_ngcontent-%COMP%]{font-size:15px;margin-bottom:0;font-weight:500;font-family:sans-serif;color:#000}.stop-event[_ngcontent-%COMP%]{pointer-events:none}.priority-container[_ngcontent-%COMP%]{display:grid;overflow-y:scroll;max-height:80px;min-height:55px;grid-template-columns:repeat(5,1fr)}@media screen and (min-width: 600px) and (max-width: 959px){  .p-button{height:40px!important}.priority-container[_ngcontent-%COMP%]{grid-template-columns:repeat(4,1fr)}}@media screen and (min-width: 960px) and (max-width: 1439px){  .p-button{height:38px!important}}\"]\n    });\n  }\n  return AddWorkRequestComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}