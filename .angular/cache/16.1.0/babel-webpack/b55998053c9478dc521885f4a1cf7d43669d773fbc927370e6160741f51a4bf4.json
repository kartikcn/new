{"ast":null,"code":"import { MatSort } from '@angular/material/sort';\nimport { CountryFilterInput } from './countryFilterInput.model';\nimport { RegnFilterInput } from '../widgets/region-list/regnFilterInput.model';\nimport { StateFilterInput } from '../widgets/state-list/stateFilterInput.model';\nimport { CityFilterInput } from '../widgets/city-list/cityFilterInput.model';\nimport { RegionListComponent } from '../widgets/region-list/region-list.component';\nimport { StateListComponent } from '../widgets/state-list/state-list.component';\nimport { CityListComponent } from '../widgets/city-list/city-list.component';\nimport { UtilConstant } from '../../../../common/UtilConstant';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/country.service\";\nimport * as i3 from \"../services/regn.service\";\nimport * as i4 from \"../services/state.service\";\nimport * as i5 from \"../services/city.service\";\nimport * as i6 from \"../provider/cntry.provider\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../widgets/region-list/region-list.component\";\nimport * as i9 from \"../widgets/state-list/state-list.component\";\nimport * as i10 from \"../widgets/city-list/city-list.component\";\nimport * as i11 from \"@ng-select/ng-select\";\nimport * as i12 from \"primeng/api\";\nimport * as i13 from \"primeng/table\";\nimport * as i14 from \"primeng/button\";\nimport * as i15 from \"primeng/panel\";\nimport * as i16 from \"primeng/paginator\";\nfunction LocationComponent_ng_template_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function LocationComponent_ng_template_49_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAddCtry());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LocationComponent_ng_template_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 39);\n    i0.ɵɵelementStart(2, \"th\", 40)(3, \"div\", 41)(4, \"div\", 42)(5, \"p\", 43);\n    i0.ɵɵtext(6, \"Country Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 44);\n    i0.ɵɵelement(8, \"p-sortIcon\", 45)(9, \"p-columnFilter\", 46);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 47)(11, \"div\", 41)(12, \"div\", 42)(13, \"p\", 43);\n    i0.ɵɵtext(14, \"Country Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 44);\n    i0.ɵɵelement(16, \"p-sortIcon\", 48)(17, \"p-columnFilter\", 49);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction LocationComponent_ng_template_54_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 50)(1, \"td\", 39)(2, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function LocationComponent_ng_template_54_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const cntry_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.openEditItem(cntry_r7.ctryId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cntry_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", cntry_r7);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(cntry_r7.ctryCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cntry_r7.ctryName);\n  }\n}\nfunction LocationComponent_ng_template_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nconst _c1 = function () {\n  return [25, 50, 100];\n};\nexport let LocationComponent = /*#__PURE__*/(() => {\n  class LocationComponent {\n    constructor(fb, cntrySrv, regnSrv, stateSrv, citySrv, cntryModalDialogueProvider, cdRef) {\n      this.fb = fb;\n      this.cntrySrv = cntrySrv;\n      this.regnSrv = regnSrv;\n      this.stateSrv = stateSrv;\n      this.citySrv = citySrv;\n      this.cntryModalDialogueProvider = cntryModalDialogueProvider;\n      this.cdRef = cdRef;\n      this.EnumList = [];\n      this.enumClonedList = [];\n      this.enumCntry = [];\n      this.enumRegn = [];\n      this.enumState = [];\n      this.enumCity = [];\n      this.GLACCList = [];\n      this.GL_data = [];\n      this.subscriptions = [];\n      this.loading = false;\n      this.isGLList = true;\n      this.displayedColumns = ['id', 'ctryId', 'ctryName'];\n      this.tab_name_clicked = \"\";\n      this.selectedCtry = '';\n      this.selectedRegn = '';\n      this.selectedState = '';\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"ctryId\"],\n        sortOrder: \"ASC\"\n      };\n      this.totalElements = 0;\n      this.filterCriteriaList = [];\n      this.isSorted = false;\n      this.isFiltered = false;\n      this.cntryFilterPanel = this.fb.group({\n        cntryId: [\"\"],\n        regnId: [\"\"],\n        stateId: [\"\"],\n        cityId: [\"\"]\n      });\n    }\n    ngOnInit() {\n      this.loadCntry();\n      this.onFilter();\n    }\n    ngAfterViewInit() {\n      // this.onFilter();\n      this.tab_name_clicked = 'Country';\n      $(\"#locTabContent,#Country\").show();\n      this.cdRef.detectChanges();\n    }\n    loadCntry() {\n      this.cntrySrv.getALLCountry().subscribe(res => {\n        this.enumCntry = res;\n        this.enumCntry = res.map(i => {\n          i.name = i.code + ' - ' + i.name;\n          return i;\n        });\n        this.enumCntry.unshift(new CountryFilterInput('', 'Make a selection'));\n      });\n    }\n    loadRegn() {\n      this.regnSrv.getALLRegn().subscribe(res => {\n        this.enumRegn = res;\n        this.enumRegn = res.map(i => {\n          i.name = i.id + ' - ' + i.name;\n          return i;\n        });\n        this.enumRegn.unshift(new RegnFilterInput('', 'Make a selection', ''));\n      });\n    }\n    loadState() {\n      this.stateSrv.getALLState().subscribe(res => {\n        this.enumState = res;\n        this.enumState = res.map(i => {\n          i.name = i.id + ' - ' + i.name;\n          return i;\n        });\n        this.enumState.unshift(new StateFilterInput('', 'Make a selection', '', ''));\n      });\n    }\n    loadCity() {\n      this.citySrv.getALLCity().subscribe(res => {\n        this.enumCity = res;\n        this.enumCity = res.map(i => {\n          i.name = i.id + ' - ' + i.name;\n          return i;\n        });\n        this.enumCity.unshift(new CityFilterInput('', 'Make a selection', '', '', ''));\n      });\n    }\n    onClear() {\n      this.isGLList = true;\n      this.GL_data = [];\n      this.loadRecords(new CountryFilterInput(\"\", \"\"));\n    }\n    onFilter() {\n      var cntry = this.cntryFilterPanel.controls.cntryId.value ? this.cntryFilterPanel.controls.cntryId.value : 0;\n      var regn = this.cntryFilterPanel.controls.regnId.value ? this.cntryFilterPanel.controls.regnId.value : 0;\n      var state = this.cntryFilterPanel.controls.stateId.value ? this.cntryFilterPanel.controls.stateId.value : 0;\n      var city = this.cntryFilterPanel.controls.cityId.value ? this.cntryFilterPanel.controls.cityId.value : 0;\n      let cntryData = {\n        id: cntry,\n        name: \"\",\n        ctryCode: \"\",\n        filterDto: {\n          paginationDTO: this.paginationObj,\n          filterCriteria: this.filterCriteriaList\n        }\n      };\n      let regnData = {\n        id: regn,\n        name: \"\",\n        cntryId: cntry\n      };\n      let stateData = {\n        stateId: state,\n        name: \"\",\n        regnId: regn,\n        ctryId: cntry\n      };\n      let cityData = {\n        cityId: city,\n        name: \"\",\n        regnId: regn,\n        cntryId: cntry,\n        stateId: state\n      };\n      this.loadRecords(cntryData);\n    }\n    loadRecords(data) {\n      this.cntryFilter = data;\n      this.loading = true;\n      this.isGLList = true;\n      this.isFiltered = false;\n      //this.GL_data = [];\n      this.cntrySrv.getCountryList(data).subscribe(res => {\n        if (res.status != 202) {\n          this.isGLList = false;\n          this.isFiltered = false;\n          this.GL_data = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.isGLList = true;\n          this.GL_data = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    openEditItem(cntry_name) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        cntry_id: cntry_name,\n        isEdit: true,\n        newRecord: false\n      };\n      this.cntryModalDialogueProvider.openDialog(dialogConfig);\n      this.cntryModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        this.loadRecords(this.cntryFilter);\n      });\n    }\n    onAddCtry() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        cntry_id: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.cntryModalDialogueProvider.openDialog(dialogConfig);\n      this.cntryModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        this.loadRecords(this.cntryFilter);\n      });\n    }\n    openClickCountry(event, name) {\n      this.loadTabData(name);\n      event.preventDefault();\n    }\n    loadTabData(name) {\n      this.hidePrevTab(this.tab_name_clicked);\n      this.tab_name_clicked = name;\n      $(\"#locTabContent\").hide();\n      switch (this.tab_name_clicked) {\n        case \"Country\":\n          {\n            this.loadCntry();\n            this.selectedRegn = \"\";\n            this.selectedState = \"\";\n            $(\"#locTabContent,#Country\").show();\n            break;\n          }\n        case \"Region\":\n          {\n            this.regnListPanel.isHide = true;\n            this.selectedState = \"\";\n            if (this.selectedCtry != '' && this.selectedCtry != null) {\n              this.regnListPanel.selectedCtry = 'Country : ' + this.cityListPanel.getCtryNameById(this.selectedCtry);\n              this.regnListPanel.isHide = false;\n            } else {\n              this.regnListPanel.selectedCtry = '';\n            }\n            let data = {\n              id: 0,\n              name: '',\n              cntryId: this.selectedCtry != '' ? this.selectedCtry : 0,\n              filterDto: {\n                paginationDTO: {},\n                filterCriteria: []\n              }\n            };\n            this.regnListPanel.loadRecords(data); // any need to change RegnFilterInput\n            $(\"#locTabContent,#Region\").show();\n            break;\n          }\n        case \"State\":\n          {\n            this.stateListPanel.isHide = true;\n            if (this.selectedCtry != '' && this.selectedCtry != null) {\n              this.stateListPanel.selectedCtry = 'Country : ' + this.cityListPanel.getCtryNameById(this.selectedCtry);\n              this.stateListPanel.isHide = false;\n            } else {\n              this.stateListPanel.selectedCtry = '';\n            }\n            if (this.selectedRegn != '' && this.selectedRegn != null) {\n              this.stateListPanel.selectedRegn = 'Region : ' + this.cityListPanel.getRegnNameById(this.selectedRegn);\n              this.stateListPanel.isHide = false;\n            } else {\n              this.stateListPanel.selectedRegn = '';\n            }\n            let data = {\n              stateId: 0,\n              stateCode: '',\n              name: '',\n              regnId: this.selectedRegn != '' ? this.selectedRegn : 0,\n              ctryId: this.selectedCtry != '' ? this.selectedCtry : 0,\n              filterDto: {\n                paginationDTO: {},\n                filterCriteria: []\n              }\n            };\n            this.stateListPanel.loadRecords(data); //StateFilterInput\n            $(\"#locTabContent,#State\").show();\n            break;\n          }\n        case \"City\":\n          {\n            this.cityListPanel.isHide = true;\n            if (this.selectedCtry != '' && this.selectedCtry != null) {\n              this.cityListPanel.selectedCtry = 'Country : ' + this.cityListPanel.getCtryNameById(this.selectedCtry);\n              this.cityListPanel.isHide = false;\n            } else {\n              this.cityListPanel.selectedCtry = '';\n            }\n            if (this.selectedRegn != '' && this.selectedRegn != null) {\n              this.cityListPanel.selectedRegn = 'Region : ' + this.cityListPanel.getRegnNameById(this.selectedRegn);\n              this.cityListPanel.isHide = false;\n            } else {\n              this.cityListPanel.selectedRegn = '';\n            }\n            if (this.selectedState != '' && this.selectedState != null) {\n              this.cityListPanel.selectedState = 'State : ' + this.cityListPanel.getStateNameById(this.selectedState);\n              this.cityListPanel.isHide = false;\n            } else {\n              this.cityListPanel.selectedState = '';\n            }\n            let cityData = {\n              cityId: 0,\n              cityCode: \"\",\n              name: \"\",\n              stateId: this.selectedState != '' ? this.selectedState : 0,\n              regnId: this.selectedRegn != '' ? this.selectedRegn : 0,\n              cntryId: this.selectedCtry != '' ? this.selectedCtry : 0,\n              filterDto: {\n                paginationDTO: {},\n                filterCriteria: []\n              }\n            };\n            this.cityListPanel.loadRecords(cityData); //CityFilterInput\n            $(\"#locTabContent,#City\").show();\n            break;\n          }\n        default:\n          {\n            break;\n          }\n      }\n    }\n    hidePrevTab(name) {\n      switch (name) {\n        case \"Country\":\n          {\n            $(\"#Country\").hide();\n            break;\n          }\n        case \"Region\":\n          {\n            $(\"#Region\").hide();\n            break;\n          }\n        case \"State\":\n          {\n            $(\"#State\").hide();\n            break;\n          }\n        case \"City\":\n          {\n            $(\"#City\").hide();\n            break;\n          }\n        default:\n          {\n            break;\n          }\n      }\n    }\n    onRowSelect(event) {\n      this.regnListPanel.loadCntry();\n      $(\"#Country\").hide();\n      var regn = this.cntryFilterPanel.controls.regnId.value != \"\" ? this.cntryFilterPanel.controls.regnId.value : 0;\n      // regn = regn != null ? regn.substring(regn.indexOf(\"-\") + 1, regn.length).trim() : \"\";\n      let regnData = {\n        id: regn,\n        name: \"\",\n        cntryId: event.data.ctryId,\n        filterDto: {\n          paginationDTO: {},\n          filterCriteria: []\n        }\n      };\n      this.selectedCtry = event.data.ctryId;\n      this.regnListPanel.selectedCtry = 'Country : ' + event.data.ctryName;\n      this.regnListPanel.isHide = false;\n      this.regnListPanel.loadRecords(regnData);\n      this.tab_name_clicked = \"Region\";\n      $(\"#locTabContent,#Region\").show();\n    }\n    loadStateTabPanel(data) {\n      if (data == 'regionAdded') {\n        this.stateListPanel.loadCntry();\n        this.stateListPanel.loadRegn();\n      } else if (data == true) {\n        this.selectedCtry = '';\n        this.selectedRegn = '';\n        this.regnListPanel.isHide = true;\n        let data = {\n          id: 0,\n          name: \"\",\n          cntryId: 0,\n          filterDto: {\n            paginationDTO: {},\n            filterCriteria: []\n          }\n        };\n        this.regnListPanel.loadRecords(data); //) data need to be the type new RegnFilterInput(0, \"\", 0\n      } else {\n        $(\"#Region\").hide();\n        let stateData = {\n          stateId: 0,\n          name: \"\",\n          stateCode: \"\",\n          regnId: data.regnId,\n          ctryId: data.ctryId,\n          filterDto: {\n            paginationDTO: {},\n            filterCriteria: []\n          }\n        };\n        this.selectedRegn = data.regnId;\n        this.stateListPanel.selectedCtry = 'Country : ' + data.ctryCtryName;\n        this.stateListPanel.selectedRegn = 'Region : ' + data.regnName;\n        this.stateListPanel.isHide = false;\n        this.stateListPanel.loadRecords(stateData);\n        this.tab_name_clicked = \"State\";\n        $(\"#locTabContent,#State\").show();\n      }\n    }\n    loadCityTabPanel(data) {\n      if (data == 'stateAdded') {\n        this.cityListPanel.loadCntry();\n        this.cityListPanel.loadRegn();\n        this.cityListPanel.loadState();\n      } else if (data == true) {\n        this.selectedCtry = '';\n        this.selectedRegn = '';\n        this.stateListPanel.isHide = true;\n        let stateData = {\n          stateId: 0,\n          name: \"\",\n          stateCode: \"\",\n          regnId: 0,\n          ctryId: 0,\n          filterDto: {\n            paginationDTO: {},\n            filterCriteria: []\n          }\n        };\n        this.stateListPanel.loadRecords(stateData); //StateFilterInput\n      } else {\n        $(\"#State\").hide();\n        let cityData = {\n          cityId: 0,\n          cityCode: \"\",\n          name: \"\",\n          stateId: data.stateId,\n          regnId: data.regnId,\n          cntryId: data.ctryId,\n          filterDto: {\n            paginationDTO: {},\n            filterCriteria: []\n          }\n        };\n        this.selectedState = data.stateId;\n        this.selectedCtry = data.ctryId;\n        this.selectedRegn = data.regnId;\n        this.cityListPanel.selectedCtry = 'Country : ' + data.ctryCtryName;\n        this.cityListPanel.selectedRegn = 'Region : ' + data.regnRegnName;\n        this.cityListPanel.selectedState = 'State : ' + data.stateName;\n        this.cityListPanel.isHide = false;\n        this.cityListPanel.loadRecords(cityData);\n        this.tab_name_clicked = \"City\";\n        $(\"#locTabContent,#City\").show();\n      }\n    }\n    updateCityTabPanel(event) {\n      if (event == true) {\n        this.selectedCtry = '';\n        this.selectedRegn = '';\n        this.selectedState = '';\n      }\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.onFilter();\n    }\n    onSort(event) {\n      //this.isSorted = true;\n    }\n    onInnerFilter(event) {\n      this.isSorted = false;\n      setTimeout(() => {\n        if (this.isFiltered && !this.isSorted) {\n          this.isSorted = false;\n          Object.keys(event.filters).forEach(field => {\n            const filterValue = event.filters[field][0].value;\n            const matchMode = event.filters[field][0].matchMode;\n            if (filterValue !== undefined) {\n              let filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n              this.updateFilterCriteriaList(filterCriteria);\n            }\n          });\n          // if (this.filterCriteriaList.length!=0) {\n          //   this.paginationObj.pageNo = 0;\n          // }\n          this.paginationObj.pageNo = 0;\n          this.onFilter();\n        }\n        this.isFiltered = true;\n      }, 0);\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function LocationComponent_Factory(t) {\n      return new (t || LocationComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.CountryService), i0.ɵɵdirectiveInject(i3.RegnService), i0.ɵɵdirectiveInject(i4.StateService), i0.ɵɵdirectiveInject(i5.CityService), i0.ɵɵdirectiveInject(i6.CntryModalDialogueProvider), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LocationComponent,\n      selectors: [[\"app-location\"]],\n      viewQuery: function LocationComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatSort, 5);\n          i0.ɵɵviewQuery(MatPaginator, 5);\n          i0.ɵɵviewQuery(RegionListComponent, 5);\n          i0.ɵɵviewQuery(StateListComponent, 5);\n          i0.ɵɵviewQuery(CityListComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.regnListPanel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stateListPanel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cityListPanel = _t.first);\n        }\n      },\n      decls: 64,\n      vars: 36,\n      consts: [[\"header\", \"Filter\", \"hidden\", \"\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\", \"margin-right\", \"5px\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"cntryId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"regnId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"stateId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"width\", \"20%\"], [\"appendTo\", \"body\", \"formControlName\", \"cityId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"width\", \"7%\"], [2, \"width\", \"13%\"], [\"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-raised\", 3, \"click\"], [\"type\", \"reset\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-raised\", \"pull-right\", 3, \"click\"], [2, \"padding-left\", \"0px\"], [1, \"tabs-rounded\", 2, \"background-color\", \"white\"], [\"id\", \"asset_tabs\", 1, \"nav\", \"nav-tabs\", 2, \"font-size\", \"12px\", \"border-bottom\", \"0\"], [1, \"perform-li\", 3, \"ngClass\"], [\"href\", \"/\", \"prevent-default\", \"\", \"data-toggle\", \"tab\", 3, \"click\"], [\"href\", \"/\", \"data-toggle\", \"tab\", 3, \"click\"], [\"id\", \"locTabContent\", 1, \"tab-content\"], [\"id\", \"Country\", 1, \"tab-pane\"], [1, \"card\", 2, \"height\", \"85vh\"], [\"header\", \" \"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\", \"rowHover\", \"scrollable\", \"onRowSelect\", \"onFilter\", \"onSort\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"id\", \"Region\", 1, \"tab-pane\"], [3, \"parentFun\"], [\"id\", \"State\", 1, \"tab-pane\"], [\"id\", \"City\", 1, \"tab-pane\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"ctryCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"ctryCode\"], [\"type\", \"text\", \"field\", \"ctryCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"ctryName\"], [\"field\", \"ctryName\"], [\"type\", \"text\", \"field\", \"ctryName\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 1, \"p-button-text\", 3, \"click\"]],\n      template: function LocationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Country Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"ng-select\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n          i0.ɵɵtext(12, \"Region Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"ng-select\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"td\", 3)(15, \"div\", 4)(16, \"label\", 5);\n          i0.ɵɵtext(17, \"State Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"ng-select\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"td\", 9)(20, \"div\", 4)(21, \"label\", 5);\n          i0.ɵɵtext(22, \"City Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"ng-select\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(24, \"td\", 11);\n          i0.ɵɵelementStart(25, \"td\", 12)(26, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function LocationComponent_Template_button_click_26_listener() {\n            return ctx.onFilter();\n          });\n          i0.ɵɵtext(27, \" Filter \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function LocationComponent_Template_button_click_28_listener() {\n            return ctx.onClear();\n          });\n          i0.ɵɵtext(29, \"Clear\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(30, \"div\", 15)(31, \"div\", 16)(32, \"ul\", 17)(33, \"li\", 18)(34, \"a\", 19);\n          i0.ɵɵlistener(\"click\", function LocationComponent_Template_a_click_34_listener($event) {\n            return ctx.openClickCountry($event, \"Country\");\n          });\n          i0.ɵɵtext(35, \"Country\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"li\", 18)(37, \"a\", 20);\n          i0.ɵɵlistener(\"click\", function LocationComponent_Template_a_click_37_listener($event) {\n            return ctx.openClickCountry($event, \"Region\");\n          });\n          i0.ɵɵtext(38, \"Region\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"li\", 18)(40, \"a\", 20);\n          i0.ɵɵlistener(\"click\", function LocationComponent_Template_a_click_40_listener($event) {\n            return ctx.openClickCountry($event, \"State\");\n          });\n          i0.ɵɵtext(41, \"State\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"li\", 18)(43, \"a\", 20);\n          i0.ɵɵlistener(\"click\", function LocationComponent_Template_a_click_43_listener($event) {\n            return ctx.openClickCountry($event, \"City\");\n          });\n          i0.ɵɵtext(44, \"City\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(45, \"div\", 21)(46, \"div\", 22)(47, \"div\", 23)(48, \"p-panel\", 24);\n          i0.ɵɵtemplate(49, LocationComponent_ng_template_49_Template, 1, 0, \"ng-template\", 25);\n          i0.ɵɵelementStart(50, \"div\", 26)(51, \"p-table\", 27, 28);\n          i0.ɵɵlistener(\"onRowSelect\", function LocationComponent_Template_p_table_onRowSelect_51_listener($event) {\n            return ctx.onRowSelect($event);\n          })(\"onFilter\", function LocationComponent_Template_p_table_onFilter_51_listener($event) {\n            return ctx.onInnerFilter($event);\n          })(\"onSort\", function LocationComponent_Template_p_table_onSort_51_listener($event) {\n            return ctx.onSort($event);\n          });\n          i0.ɵɵtemplate(53, LocationComponent_ng_template_53_Template, 18, 0, \"ng-template\", 29);\n          i0.ɵɵtemplate(54, LocationComponent_ng_template_54_Template, 7, 3, \"ng-template\", 30);\n          i0.ɵɵtemplate(55, LocationComponent_ng_template_55_Template, 3, 1, \"ng-template\", 31);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"div\", 32)(57, \"p-paginator\", 33);\n          i0.ɵɵlistener(\"onPageChange\", function LocationComponent_Template_p_paginator_onPageChange_57_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(58, \"div\", 34)(59, \"app-region-list\", 35);\n          i0.ɵɵlistener(\"parentFun\", function LocationComponent_Template_app_region_list_parentFun_59_listener($event) {\n            return ctx.loadStateTabPanel($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(60, \"div\", 36)(61, \"app-state-list\", 35);\n          i0.ɵɵlistener(\"parentFun\", function LocationComponent_Template_app_state_list_parentFun_61_listener($event) {\n            return ctx.loadCityTabPanel($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(62, \"div\", 37)(63, \"app-city-list\", 35);\n          i0.ɵɵlistener(\"parentFun\", function LocationComponent_Template_app_city_list_parentFun_63_listener($event) {\n            return ctx.updateCityTabPanel($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"toggleable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.cntryFilterPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumCntry)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumRegn)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumState)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumCity)(\"searchable\", false);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.tab_name_clicked === \"Country\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.tab_name_clicked === \"Region\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(31, _c0, ctx.tab_name_clicked === \"State\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(33, _c0, ctx.tab_name_clicked === \"City\"));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"value\", ctx.GL_data)(\"paginator\", false)(\"rowHover\", true)(\"scrollable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(35, _c1));\n        }\n      },\n      dependencies: [i7.NgClass, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.RegionListComponent, i9.StateListComponent, i10.CityListComponent, i11.NgSelectComponent, i12.PrimeTemplate, i13.Table, i13.SortableColumn, i13.SelectableRow, i13.SortIcon, i13.ColumnFilter, i14.ButtonDirective, i15.Panel, i16.Paginator],\n      styles: [\".tabs-rounded[_ngcontent-%COMP%] > ul[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{border-top-left-radius:7px;border-top-right-radius:7px;border-bottom:3px solid #879cc9!important;outline:none}td[_ngcontent-%COMP%]{padding:3px}.nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{border:none;background:rgb(206,212,214)}span[_ngcontent-%COMP%]{height:24px!important;font-size:10px!important}.trFont[_ngcontent-%COMP%]{font-size:11px!important}.panel-group-custom[_ngcontent-%COMP%]{margin:-12px!important}label[_ngcontent-%COMP%]{font-size:10px;font-weight:500;padding:0 0 0 3px;margin-bottom:-10px!important}.td-calc-2[_ngcontent-%COMP%]{width:50%}.panel-body-custom[_ngcontent-%COMP%]{padding:0}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px}select[_ngcontent-%COMP%], input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{border:thin double rgb(181,155,90)!important;padding-left:5px;background:#fff}.input-group[_ngcontent-%COMP%]   .input-group-addon[_ngcontent-%COMP%]{height:24px}.nav[_ngcontent-%COMP%]{padding-left:0;margin-bottom:0;list-style:none;background-color:#f0f2f5}.nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{position:relative;display:block}.nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{position:relative;display:block;background-color:#879cc9;color:#fff;padding:5px 10px}.nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{text-decoration:none;color:#000;background-color:#fff}.nav[_ngcontent-%COMP%] > li.disabled[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{color:#777}.nav[_ngcontent-%COMP%] > li.disabled[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav[_ngcontent-%COMP%] > li.disabled[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{color:#777;text-decoration:none;cursor:not-allowed;background-color:transparent}.nav[_ngcontent-%COMP%]   .open[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .nav[_ngcontent-%COMP%]   .open[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav[_ngcontent-%COMP%]   .open[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{background-color:#eee;border-color:#337ab7}.nav[_ngcontent-%COMP%]   .nav-divider[_ngcontent-%COMP%]{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > img[_ngcontent-%COMP%]{max-width:none}.nav-tabs[_ngcontent-%COMP%]{border-bottom:1px solid #ddd}.nav-tabs[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{float:left;margin-bottom:-1px}.nav-tabs[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{margin-right:2px;line-height:2.35;min-width:80px;border:1px solid transparent;border-radius:6px 6px 0 0}.nav-tabs[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover{border-color:#eee #eee #ddd}.nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{color:#000;cursor:default;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent}.nav-tabs.nav-justified[_ngcontent-%COMP%]{width:100%;border-bottom:0}.nav-tabs.nav-justified[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{float:none}.nav-tabs.nav-justified[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{margin-bottom:5px;text-align:center}.nav-tabs.nav-justified[_ngcontent-%COMP%] > .dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{top:auto;left:auto}@media (min-width: 768px){.nav-tabs.nav-justified[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{display:table-cell;width:1%}.nav-tabs.nav-justified[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{margin-bottom:0}}.nav-tabs.nav-justified[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{margin-right:0;border-radius:4px}.nav-tabs.nav-justified[_ngcontent-%COMP%] > .active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .nav-tabs.nav-justified[_ngcontent-%COMP%] > .active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav-tabs.nav-justified[_ngcontent-%COMP%] > .active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{border:1px solid #ddd}@media (min-width: 768px){.nav-tabs.nav-justified[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0}.nav-tabs.nav-justified[_ngcontent-%COMP%] > .active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .nav-tabs.nav-justified[_ngcontent-%COMP%] > .active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav-tabs.nav-justified[_ngcontent-%COMP%] > .active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{border-bottom-color:#fff}}\"]\n    });\n  }\n  return LocationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}