{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport let RmConfigService = /*#__PURE__*/(() => {\n  class RmConfigService {\n    constructor(rmConfigService, rmConfigDetailService) {\n      this.rmConfigService = rmConfigService;\n      this.rmConfigDetailService = rmConfigDetailService;\n    }\n    getRmConfig(data) {\n      return this.rmConfigService.search('rmConfig', 'getById', data);\n    }\n    saveRmConfig(data) {\n      return this.rmConfigDetailService.add('rmConfig', 'save', data);\n    }\n    deleteRmConfigById(id) {\n      return this.rmConfigService.deleteById('rmConfig', 'delete', id);\n    }\n    getAvailableRooms(filterData) {\n      return this.rmConfigService.search('rmConfig', 'getRmConfigList', filterData);\n    }\n    getAllFilterData() {\n      return this.rmConfigService.getAll('rmConfig', 'getAllFilterData');\n    }\n    checkRmArrangementExists(data) {\n      return this.rmConfigService.search('rmConfig', 'checkRmConfig', data);\n    }\n    getRoomsList(id) {\n      return this.rmConfigDetailService.getAllById(\"rmConfig\", \"getRoomsList\", id);\n    }\n    getReservableRoomsPaginated(data) {\n      return this.rmConfigDetailService.search(\"rmConfig\", \"getReservRmPaginated\", data);\n    }\n    getAvailableRoomsForRecurrence(data) {\n      return this.rmConfigService.search('rmConfig', 'recurrence', data);\n    }\n    getRmConfigsByIds(data) {\n      return this.rmConfigService.search('rmConfig', 'getallByIds', data);\n    }\n    getRmConfigByBlAndFlId(data) {\n      return this.rmConfigService.search('rmConfig', 'getallbyblandfl', data);\n    }\n    static #_ = this.ɵfac = function RmConfigService_Factory(t) {\n      return new (t || RmConfigService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RmConfigService,\n      factory: RmConfigService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RmConfigService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}