{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class DepartmentService {\n  constructor(departmentService) {\n    this.departmentService = departmentService;\n  }\n  getAllDepartments() {\n    return this.departmentService.getAll('department', 'getAll');\n  }\n  getById(divId) {\n    return this.departmentService.getSingleById(\"department\", \"getById\", divId);\n  }\n  saveDepartment(data) {\n    return this.departmentService.add('department', 'save', data);\n  }\n  deleteById(divId) {\n    return this.departmentService.deleteById(\"department\", \"deleteById\", divId);\n  }\n  checkDepartmentExists(divId) {\n    return this.departmentService.getSingleById(\"department\", \"check\", divId);\n  }\n  getDepartmentList(data) {\n    return this.departmentService.search(\"department\", \"list\", data);\n  }\n  getDepartmentAreaByFloor(data) {\n    return this.departmentService.search(\"department\", \"getareabyfloor\", data);\n  }\n  getDepartmentWithAllocatedArea(data) {\n    return this.departmentService.search(\"department\", \"getallocatedarea\", data);\n  }\n  getAllDepartmentsWithDivCode() {\n    return this.departmentService.getAll('department', 'getallwithdivcode');\n  }\n  static #_ = this.ɵfac = function DepartmentService_Factory(t) {\n    return new (t || DepartmentService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DepartmentService,\n    factory: DepartmentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DepartmentService","constructor","departmentService","getAllDepartments","getAll","getById","divId","getSingleById","saveDepartment","data","add","deleteById","checkDepartmentExists","getDepartmentList","search","getDepartmentAreaByFloor","getDepartmentWithAllocatedArea","getAllDepartmentsWithDivCode","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\division-department\\services\\department.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DepartmentService {\n\n    constructor(\n        private departmentService: DataService<any>,\n\n    ) { }\n\n    public getAllDepartments() {\n        return this.departmentService.getAll('department', 'getAll');\n    }\n\n    public getById(divId: any) {\n        return this.departmentService.getSingleById(\"department\", \"getById\", divId);\n    }\n\n    public saveDepartment(data: any): Observable<any> {\n        return this.departmentService.add('department', 'save', data);\n    }\n\n    public deleteById(divId: any) {\n        return this.departmentService.deleteById(\"department\", \"deleteById\", divId);\n    }\n\n    public checkDepartmentExists(divId: any) {\n        return this.departmentService.getSingleById(\"department\", \"check\", divId);\n    }\n\n    public getDepartmentList(data:any){\n        return this.departmentService.search(\"department\", \"list\", data);\n    }\n\n    public getDepartmentAreaByFloor(data:any){\n        return this.departmentService.search(\"department\", \"getareabyfloor\", data);\n    }\n\n    public getDepartmentWithAllocatedArea(data:any){\n        return this.departmentService.search(\"department\", \"getallocatedarea\", data);\n    }\n\n    public getAllDepartmentsWithDivCode() {\n        return this.departmentService.getAll('department', 'getallwithdivcode');\n    }\n    \n}\n"],"mappings":";;AAOA,OAAM,MAAOA,iBAAiB;EAE1BC,YACYC,iBAAmC;IAAnC,KAAAA,iBAAiB,GAAjBA,iBAAiB;EAEzB;EAEGC,iBAAiBA,CAAA;IACpB,OAAO,IAAI,CAACD,iBAAiB,CAACE,MAAM,CAAC,YAAY,EAAE,QAAQ,CAAC;EAChE;EAEOC,OAAOA,CAACC,KAAU;IACrB,OAAO,IAAI,CAACJ,iBAAiB,CAACK,aAAa,CAAC,YAAY,EAAE,SAAS,EAAED,KAAK,CAAC;EAC/E;EAEOE,cAAcA,CAACC,IAAS;IAC3B,OAAO,IAAI,CAACP,iBAAiB,CAACQ,GAAG,CAAC,YAAY,EAAE,MAAM,EAAED,IAAI,CAAC;EACjE;EAEOE,UAAUA,CAACL,KAAU;IACxB,OAAO,IAAI,CAACJ,iBAAiB,CAACS,UAAU,CAAC,YAAY,EAAE,YAAY,EAAEL,KAAK,CAAC;EAC/E;EAEOM,qBAAqBA,CAACN,KAAU;IACnC,OAAO,IAAI,CAACJ,iBAAiB,CAACK,aAAa,CAAC,YAAY,EAAE,OAAO,EAAED,KAAK,CAAC;EAC7E;EAEOO,iBAAiBA,CAACJ,IAAQ;IAC7B,OAAO,IAAI,CAACP,iBAAiB,CAACY,MAAM,CAAC,YAAY,EAAE,MAAM,EAAEL,IAAI,CAAC;EACpE;EAEOM,wBAAwBA,CAACN,IAAQ;IACpC,OAAO,IAAI,CAACP,iBAAiB,CAACY,MAAM,CAAC,YAAY,EAAE,gBAAgB,EAAEL,IAAI,CAAC;EAC9E;EAEOO,8BAA8BA,CAACP,IAAQ;IAC1C,OAAO,IAAI,CAACP,iBAAiB,CAACY,MAAM,CAAC,YAAY,EAAE,kBAAkB,EAAEL,IAAI,CAAC;EAChF;EAEOQ,4BAA4BA,CAAA;IAC/B,OAAO,IAAI,CAACf,iBAAiB,CAACE,MAAM,CAAC,YAAY,EAAE,mBAAmB,CAAC;EAC3E;EAAC,QAAAc,CAAA,G;qBAzCQlB,iBAAiB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBvB,iBAAiB;IAAAwB,OAAA,EAAjBxB,iBAAiB,CAAAyB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}