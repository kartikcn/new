{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/user-procs.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nfunction UserAssignScreensComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"h4\");\n    i0.ɵɵtext(3, \"Un Assign Processes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\")(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function UserAssignScreensComponent_ng_template_2_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onUnAssign());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.selectedScreens.length > 0));\n  }\n}\nfunction UserAssignScreensComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 9);\n    i0.ɵɵelement(2, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 10)(4, \"div\", 11)(5, \"div\", 12)(6, \"p\", 13);\n    i0.ɵɵtext(7, \"Processes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 14);\n    i0.ɵɵelement(9, \"p-sortIcon\", 15)(10, \"p-columnFilter\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"th\", 17)(12, \"div\", 11)(13, \"div\", 12)(14, \"p\", 13);\n    i0.ɵɵtext(15, \"Subprocesses\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 14);\n    i0.ɵɵelement(17, \"p-sortIcon\", 18)(18, \"p-columnFilter\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"th\", 20)(20, \"div\", 11)(21, \"div\", 12)(22, \"p\", 13);\n    i0.ɵɵtext(23, \"Screen Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 14);\n    i0.ɵɵelement(25, \"p-sortIcon\", 21)(26, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction UserAssignScreensComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 9);\n    i0.ɵɵelement(2, \"p-tableCheckbox\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const assign_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", assign_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(assign_r6.processCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(assign_r6.subProcessCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(assign_r6.screenName);\n  }\n}\nfunction UserAssignScreensComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [\"\", \"processId\", \"subProcessId\", \"screenName\"];\n};\nexport let UserAssignScreensComponent = /*#__PURE__*/(() => {\n  class UserAssignScreensComponent {\n    constructor(userProcSrv, autSrv) {\n      this.userProcSrv = userProcSrv;\n      this.autSrv = autSrv;\n      this.role = \"\";\n      this.assignUserScreens = [];\n      this.selectedScreens = [];\n      this.loading = false;\n      this.userRoleId = 0;\n      this.allScreenProcsPanels = new EventEmitter();\n    }\n    ngOnInit() {\n      if (this.role.length > 1) this.loadAssignUsersScreen(this.role);\n    }\n    loadAssignUsersScreen(userRoleData) {\n      this.selectedScreens = [];\n      this.role = userRoleData.roleName;\n      this.userRoleId = userRoleData.userRoleId;\n      this.loading = true;\n      if (this.role.length > 1) {\n        let postData = {\n          \"userRoleId\": this.userRoleId\n        };\n        this.userProcSrv.getAssignUserScreens(postData).subscribe(res => {\n          if (this.role === 'Application Admin') {\n            this.assignUserScreens = res;\n          } else {\n            this.assignUserScreens = res.filter(t => t.screenName != \"Add or Edit Company\");\n            this.assignUserScreens = this.assignUserScreens.filter(t => t.screenName != \"User Plan Report\");\n            this.assignUserScreens = this.assignUserScreens.filter(t => t.screenName != \"Add or Edit Cost\");\n          }\n          this.loading = false;\n        }, error => {\n          console.log(error);\n          this.loading = false;\n        });\n      } else this.assignUserScreens = [];\n      this.loading = false;\n    }\n    onUnAssign() {\n      console.log(this.selectedScreens);\n      const dataRecord = {\n        userProcs: this.selectedScreens\n      };\n      this.userProcSrv.deleteUserAssignScreens(dataRecord).subscribe(res => {\n        this.allScreenProcsPanels.emit(\"true\");\n      }, error => {\n        console.log(error);\n      });\n    }\n    static #_ = this.ɵfac = function UserAssignScreensComponent_Factory(t) {\n      return new (t || UserAssignScreensComponent)(i0.ɵɵdirectiveInject(i1.UserProcsService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserAssignScreensComponent,\n      selectors: [[\"app-user-assign-screens\"]],\n      outputs: {\n        allScreenProcsPanels: \"allScreenProcsPanels\"\n      },\n      decls: 6,\n      vars: 7,\n      consts: [[1, \"card\"], [\"dataKey\", \"userScreensNum\", \"styleClass\", \"p-datatable-customers\", \"scrollHeight\", \"200px\", 3, \"value\", \"selection\", \"scrollable\", \"globalFilterFields\", \"loading\", \"showCurrentPageReport\", \"selectionChange\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"d-flex\", \"flex-row\"], [2, \"flex\", \"auto\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Un-Assign\", \"icon\", \"pi pi-minus\", 1, \"p-button-primary\", \"p-button-sm\", \"p-mr-2\", 3, \"disabled\", \"click\"], [2, \"width\", \"3rem\"], [\"pSortableColumn\", \"processCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"processCode\"], [\"type\", \"text\", \"field\", \"processCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"subProcessCode\"], [\"field\", \"subProcessCode\"], [\"type\", \"text\", \"field\", \"subProcessCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"screenName\"], [\"field\", \"screenName\"], [\"type\", \"text\", \"field\", \"screenName\", \"display\", \"menu\"], [3, \"value\"]],\n      template: function UserAssignScreensComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-table\", 1);\n          i0.ɵɵlistener(\"selectionChange\", function UserAssignScreensComponent_Template_p_table_selectionChange_1_listener($event) {\n            return ctx.selectedScreens = $event;\n          });\n          i0.ɵɵtemplate(2, UserAssignScreensComponent_ng_template_2_Template, 6, 1, \"ng-template\", 2);\n          i0.ɵɵtemplate(3, UserAssignScreensComponent_ng_template_3_Template, 27, 0, \"ng-template\", 3);\n          i0.ɵɵtemplate(4, UserAssignScreensComponent_ng_template_4_Template, 9, 4, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, UserAssignScreensComponent_ng_template_5_Template, 3, 1, \"ng-template\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.assignUserScreens)(\"selection\", ctx.selectedScreens)(\"scrollable\", true)(\"globalFilterFields\", i0.ɵɵpureFunction0(6, _c0))(\"loading\", ctx.loading)(\"showCurrentPageReport\", true);\n        }\n      },\n      dependencies: [i3.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SortIcon, i4.TableCheckbox, i4.TableHeaderCheckbox, i4.ColumnFilter, i5.ButtonDirective]\n    });\n  }\n  return UserAssignScreensComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}