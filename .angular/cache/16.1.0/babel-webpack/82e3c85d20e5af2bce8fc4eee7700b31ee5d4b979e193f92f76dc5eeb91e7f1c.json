{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { BuildingFilterInputDTO } from '../../model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../../model/DTO/FloorFilterInputDTO.model';\nimport { RoomTypeFilterInputDTO } from 'src/app/ui/room category/model/DTO/RoomTypeFilterInputDTO.model';\nimport { RoomCategoryFilterInputDTO } from 'src/app/ui/rmcat/modal/RoomCategoryFilterInputDTO.model';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/bl.service\";\nimport * as i3 from \"../../../../services/rmcat.service\";\nimport * as i4 from \"src/app/services/enum.service\";\nimport * as i5 from \"src/app/ui/division-department/services/division.services\";\nimport * as i6 from \"src/app/ui/division-department/services/department.services\";\nimport * as i7 from \"src/app/ui/division-department/services/subDepartment.services\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"ng-zorro-antd/table\";\nimport * as i11 from \"ng-zorro-antd/input\";\nimport * as i12 from \"primeng/button\";\nimport * as i13 from \"primeng/dialog\";\nimport * as i14 from \"../../../../directive/numbers-only.directive\";\nimport * as i15 from \"../../../../directive/directive/upper-case.directive\";\nimport * as i16 from \"../../../../directive/directive/trim-input.directive\";\nfunction AddRmFormComponent_p_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.imageerrorMsg);\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"30vw\"\n  };\n};\nexport let AddRmFormComponent = /*#__PURE__*/(() => {\n  class AddRmFormComponent {\n    constructor(formBuilder, blSrv, rmcatSrv, enumsrv, divisionservice, departmentservice, subDeptService) {\n      this.formBuilder = formBuilder;\n      this.blSrv = blSrv;\n      this.rmcatSrv = rmcatSrv;\n      this.enumsrv = enumsrv;\n      this.divisionservice = divisionservice;\n      this.departmentservice = departmentservice;\n      this.subDeptService = subDeptService;\n      this.subscriptions = [];\n      this.newRecord = true;\n      this.enumList = [];\n      this.enumBL = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.enumComp = [];\n      this.enumRmCat = [];\n      this.enumRmType = [];\n      this.enumAllRmType = [];\n      this.rm_img = \"assets/images/blank-image.png\";\n      this.isPhotoUploaded = false;\n      this.displayImage = false;\n      this.reservableEnumList = [];\n      this.hotelableEnumList = [];\n      this.enumDivision = [];\n      this.enumAllDepartment = [];\n      this.enumDepartment = [];\n      this.commonareaEnumList = [];\n      this.spaceStandardEnumList = [];\n      this.rmUseEnumList = [];\n      this.imageerrorMsg = '';\n      this.NotImage = false;\n      this.enumAllSubDepartment = [];\n      this.enumSubDepartment = [];\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.rmFormPanel = this.formBuilder.group({\n        blId: ['', [Validators.required]],\n        flId: ['', [Validators.required]],\n        rmId: [null],\n        rmCode: ['', [Validators.required]],\n        rmName: ['', [Validators.required]],\n        rmInfo: [''],\n        rmcatId: [null],\n        rmtypeId: [null],\n        rmArea: [null, [Validators.required]],\n        rmPhoto1: [null],\n        rmPhoto2: [null],\n        isReservable: [null, [Validators.min(1)]],\n        isHotelable: [null, [Validators.min(1)]],\n        svgElementId: [null],\n        divId: [null],\n        depId: [null],\n        commonAreaType: [null, [Validators.required, Validators.min(1)]],\n        emCapacity: [null, [Validators.required]],\n        rmAreaManual: [null],\n        isOccupiable: [null],\n        spaceStandard: [null, [Validators.required]],\n        rmUse: [null, [Validators.required]],\n        subDepId: [null]\n      });\n      this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.rmFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    preview() {\n      this.displayImage = true;\n    }\n    ngOnInit() {\n      this.loadRmCatType();\n      this.loadRmType();\n      this.loadHotelableReservableCommonAreaEnums();\n      this.loadDivision();\n      this.loadDepartment();\n      this.loadSubDepartment();\n    }\n    loadRmCatType() {\n      this.rmcatSrv.getALLRmcats().subscribe(res => {\n        this.enumRmCat = res;\n        this.enumRmCat.unshift(new RoomCategoryFilterInputDTO(null, 'Make a selection'));\n      });\n    }\n    loadRmType() {\n      this.rmcatSrv.getALLRmTypes().subscribe(res => {\n        this.enumAllRmType = res;\n        this.enumAllRmType = res.map(i => {\n          i.name = i.rmCat + ' - ' + i.rmType;\n          return i;\n        });\n        this.enumAllRmType.unshift(new RoomTypeFilterInputDTO(null, 'Make a selection', null));\n        this.enumRmType = this.enumAllRmType;\n      });\n    }\n    onSelectBlCode($event) {\n      setTimeout(() => {\n        this.rmFormPanel.patchValue({\n          flId: null\n        });\n      }, 10);\n      if ($event.blId != null) {\n        this.selectedBl = $event;\n        this.selectedFl = {};\n        this.prevFl = {};\n      } else {\n        this.prevBl = {};\n        this.prevFl = {};\n        this.selectedBl = {};\n        this.selectedFl = {};\n      }\n    }\n    onSelectRmCat($event) {\n      if ($event.rmcatId != null) {\n        setTimeout(() => {\n          this.rmFormPanel.patchValue({\n            rmType: null\n          });\n          this.loadRmTypeCode($event.rmcatId);\n        }, 10);\n      } else {\n        this.enumRmType = this.enumAllRmType;\n        //this.enumRmType.unshift(new RmTypeFilterInputDTO('', 'Make a selection', ''));\n      }\n    }\n\n    loadRmTypeCode(rmcat) {\n      if (rmcat != null) {\n        this.enumRmType = [];\n        this.enumRmType = this.enumAllRmType.filter(t => t.rmcatId == rmcat);\n        // .map((i) => {\n        //   if (!i.name.includes(i.id + ' - ')) { i.name = i.id + ' - ' + i.name; }\n        //   return i;\n        // });\n        this.enumRmType.unshift(new RoomTypeFilterInputDTO(null, 'Make a selection', null));\n      } else {\n        this.enumRmType = this.enumAllRmType;\n      }\n    }\n    isValid() {\n      return this.getValidationErrors().length === 0;\n    }\n    getValidationErrors() {\n      const me = this;\n      const validationErros = [];\n      return validationErros;\n    }\n    /// End Of Form Validation Related Code\n    get value() {\n      const blDetails = {\n        blId: this.rmFormPanel.controls.blId.value,\n        flId: this.rmFormPanel.controls.flId.value,\n        rmId: this.rmFormPanel.controls.rmId.value,\n        rmCode: this.rmFormPanel.controls.rmCode.value,\n        rmName: this.rmFormPanel.controls.rmName.value,\n        rmInfo: this.rmFormPanel.controls.rmInfo.value,\n        rmcatId: this.rmFormPanel.controls.rmcatId.value,\n        rmtypeId: this.rmFormPanel.controls.rmtypeId.value,\n        rmArea: this.rmFormPanel.controls.rmArea.value,\n        rmPhoto1: this.rmFormPanel.controls.rmPhoto1.value,\n        rmPhoto2: this.rmFormPanel.controls.rmPhoto2.value,\n        isReservable: this.rmFormPanel.controls.isReservable.value,\n        isHotelable: this.rmFormPanel.controls.isHotelable.value,\n        svgElementId: this.rmFormPanel.controls.svgElementId.value,\n        divId: this.rmFormPanel.controls.divId.value,\n        depId: this.rmFormPanel.controls.depId.value,\n        commonAreaType: this.rmFormPanel.controls.commonAreaType.value,\n        emCapacity: this.rmFormPanel.controls.emCapacity.value,\n        rmAreaManual: this.rmFormPanel.controls.rmAreaManual.value,\n        isOccupiable: this.rmFormPanel.controls.isOccupiable.value,\n        spaceStandard: this.rmFormPanel.controls.spaceStandard.value,\n        rmUse: this.rmFormPanel.controls.rmUse.value,\n        subDepId: this.rmFormPanel.controls.subDepId.value\n      };\n      return blDetails;\n    }\n    set value(value) {\n      if (value.blId) {\n        this.prevBl = value.bl;\n        this.setPrevBl(value.bl);\n      }\n      if (value.flId) {\n        this.prevFl = value.fl;\n        this.setPrevFl(value.fl);\n      }\n      setTimeout(() => {\n        this.rmFormPanel.patchValue({\n          blId: value.blId,\n          flId: value.flId,\n          rmId: value.rmId,\n          rmCode: value.rmCode,\n          rmName: value.rmName,\n          rmInfo: value.rmInfo,\n          rmcatId: value.rmcatId,\n          rmtypeId: value.rmtypeId,\n          rmArea: value.rmArea,\n          rmPhoto1: value.rmPhoto1,\n          rmPhoto2: value.rmPhoto2,\n          isReservable: value.isReservable,\n          isHotelable: value.isHotelable,\n          svgElementId: value.svgElementId,\n          divId: value.divId,\n          depId: value.depId,\n          commonAreaType: value.commonAreaType,\n          emCapacity: value.emCapacity,\n          rmAreaManual: value.rmAreaManual,\n          isOccupiable: value.isOccupiable,\n          spaceStandard: value.spaceStandard,\n          rmUse: value.rmUse,\n          subDepId: value.subDepId\n        });\n        if (value.rmCat != null && value.rmType == null) {\n          this.loadRmTypeCode(value.rmCat);\n        }\n        if (value.divId != null && value.depId == null) {\n          this.loadDepartmentCode(value.divId);\n          this.loadSubDepartmentCode(value.divId, null);\n        }\n        if (value.divId != null && value.depId != null) {\n          this.loadDepartmentCode(value.divId);\n          this.loadSubDepartmentCode(value.divId, value.depId);\n        }\n        if (value.blId != null && value.flId != null) {\n          this.rmFormPanel.patchValue({\n            flId: value.flId\n          });\n        }\n      });\n      this.onChange(value);\n      this.onTouched();\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.rmFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    // communicate the inner form validation to the parent form\n    validate(_) {\n      return this.rmFormPanel.valid ? null : {\n        rmFormPanel: {\n          valid: false\n        }\n      };\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    fileChangeEvent(event) {\n      let me = this;\n      let fileReader = new FileReader();\n      var file = event.target.files[0];\n      this.selectedFile = file;\n      let filename = file.name;\n      var extFile = filename.substr(filename.lastIndexOf(\".\") + 1, filename.length).toLowerCase();\n      if (extFile == \"jpg\" || extFile == \"jpeg\" || extFile == \"png\") {\n        var imgSize = event.target.files[0].size;\n        if (imgSize > 1000000) {\n          this.NotImage = true;\n          this.imageerrorMsg = 'Image Size should not be greater than 1 MB';\n        } else {\n          this.NotImage = false;\n          this.imageerrorMsg = '';\n          me.isPhotoUploaded = true;\n          fileReader.readAsDataURL(file);\n          console.log(fileReader.result);\n          fileReader.onload = function () {\n            me.rm_img = fileReader.result;\n          };\n        }\n      } else {\n        this.NotImage = true;\n        this.imageerrorMsg = 'Only jpg/jpeg and png files are allowed!';\n      }\n    }\n    loadHotelableReservableCommonAreaEnums() {\n      this.reservableEnumList = [];\n      this.hotelableEnumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.reservableEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'is_reservable'.toLocaleUpperCase());\n        this.reservableEnumList.map(item => {\n          if (item.enumValue == 'Yes') {\n            this.enumIdIsReservable = item.enumKey;\n          } else if (item.enumValue == 'No') {\n            this.enumIdIsUnReservable = item.enumKey;\n          }\n        });\n        this.reservableEnumList.unshift(new EnumList(null, '', '', 'Make a selection', null));\n        this.hotelableEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'is_hotelable'.toLocaleUpperCase());\n        this.hotelableEnumList.map(item => {\n          if (item.enumValue == 'Yes') {\n            this.enumIdIsHotelable = item.enumKey;\n          } else if (item.enumValue == 'No') {\n            this.enumIdIsUnHotelable = item.enumKey;\n          }\n        });\n        this.hotelableEnumList.unshift(new EnumList(null, '', '', 'Make a selection', null));\n        this.commonareaEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase());\n        this.commonareaEnumList.unshift(new EnumList(null, '', '', 'Make a selection', null));\n        this.spaceStandardEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'space_standard'.toLocaleUpperCase());\n        this.spaceStandardEnumList.unshift(new EnumList(null, '', '', 'Make a selection', null));\n        this.rmUseEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'rm_use'.toLocaleUpperCase());\n        this.rmUseEnumList.unshift(new EnumList(null, '', '', 'Make a selection', null));\n      });\n    }\n    onSelectReservable($event) {\n      if ($event.enumKey) {\n        if ($event.enumKey == this.enumIdIsReservable) {\n          setTimeout(() => {\n            this.rmFormPanel.patchValue({\n              isHotelable: this.enumIdIsUnHotelable\n            });\n          }, 10);\n        }\n      }\n    }\n    onSelectHotelable($event) {\n      if ($event.enumKey) {\n        if ($event.enumKey == this.enumIdIsHotelable) {\n          setTimeout(() => {\n            this.rmFormPanel.patchValue({\n              isReservable: this.enumIdIsUnReservable\n            });\n          }, 10);\n        }\n      }\n    }\n    loadDivision() {\n      this.enumDivision = [];\n      this.divisionservice.getAllDivisions().subscribe(res => {\n        if (res) {\n          this.enumDivision = res;\n          this.enumDivision.unshift({\n            divCode: 'Make a Selection',\n            divId: null\n          });\n        }\n      });\n    }\n    loadDepartment() {\n      this.enumAllDepartment = [];\n      this.departmentservice.getAllDepartments().subscribe(res => {\n        if (res) {\n          this.enumAllDepartment = res.map(each => {\n            return {\n              depLabel: each.division.divCode + \" - \" + each.depCode,\n              depId: each.depId,\n              divId: each.divId\n            };\n          });\n          this.enumAllDepartment.unshift({\n            depLabel: 'Make a Selection',\n            depId: null,\n            divId: null\n          });\n          this.enumDepartment = this.enumAllDepartment;\n        }\n      });\n    }\n    loadSubDepartment() {\n      this.enumAllSubDepartment = [];\n      this.subDeptService.getAllSubDepartments().subscribe(res => {\n        if (res) {\n          this.enumAllSubDepartment = res.map(each => {\n            each.subDepLabel = each.divisionDivCode + \" - \" + each.departmentDepCode + \" - \" + each.subDepCode;\n            return each;\n          });\n          this.enumAllSubDepartment.unshift({\n            subDepLabel: 'Make a Selection',\n            depId: null,\n            divId: null,\n            subDepId: null\n          });\n          this.enumSubDepartment = [...this.enumAllSubDepartment];\n        }\n      });\n    }\n    onSelectDivision(event) {\n      if (event.divId != null) {\n        setTimeout(() => {\n          this.rmFormPanel.patchValue({\n            depId: null,\n            subDepId: null\n          });\n          this.loadDepartmentCode(event.divId);\n          this.loadSubDepartmentCode(event.divId, null);\n        }, 10);\n      } else {\n        this.enumDepartment = [...this.enumAllDepartment];\n        this.enumSubDepartment = [...this.enumAllSubDepartment];\n      }\n    }\n    loadDepartmentCode(divId) {\n      if (divId != null) {\n        this.enumDepartment = [];\n        this.enumDepartment = this.enumAllDepartment.filter(t => t.divId == divId);\n        this.enumDepartment.unshift({\n          depLabel: 'Make a Selection',\n          depId: null,\n          divId: null\n        });\n      }\n    }\n    loadSubDepartmentCode(divId, depId) {\n      this.enumSubDepartment = [];\n      if (divId != null) {\n        this.enumSubDepartment = this.enumAllSubDepartment.filter(t => t.divId == divId);\n      }\n      if (depId != null) {\n        this.enumSubDepartment = this.enumSubDepartment.filter(t => t.depId == depId);\n      }\n      this.enumSubDepartment.unshift({\n        subDepLabel: 'Make a Selection',\n        depId: null,\n        divId: null,\n        subDepId: null\n      });\n    }\n    onSelectDepartment(event) {\n      if (event.depId != null) {\n        setTimeout(() => {\n          this.rmFormPanel.patchValue({\n            subDepId: null\n          });\n          this.loadSubDepartmentCode(event.divId, event.depId);\n        }, 10);\n      } else {\n        this.enumSubDepartment = [...this.enumAllSubDepartment];\n      }\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blSrv.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n        this.setPrevBl(this.prevBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blSrv.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n        this.setPrevFl(this.prevFl);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    onSelectFlCode(event) {\n      if (event.flId != null) {\n        this.selectedFl = event;\n        const blData = {\n          blId: event.blId,\n          blNameString: event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        setTimeout(() => {\n          this.rmFormPanel.patchValue({\n            blId: event.blId\n          });\n        }, 10);\n      } else {}\n    }\n    setPrevBl(prevBl) {\n      if (prevBl) {\n        const blData = {\n          blId: prevBl.blId,\n          blNameString: prevBl.blName != null ? prevBl.blCode + \" - \" + prevBl.blName : prevBl.blCode,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n      }\n    }\n    setPrevFl(prevFl) {\n      if (prevFl) {\n        const flData = {\n          flId: prevFl.flId,\n          flNameString: prevFl.flName != null ? prevFl.flCode + \" - \" + prevFl.flName : prevFl.flCode,\n          blId: prevFl.blId,\n          blNameString: prevFl.bl.blName != null ? prevFl.bl.blCode + \" - \" + prevFl.bl.blName : prevFl.bl.blCode\n        };\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n      }\n    }\n    updateBlList(blData) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    static #_ = this.ɵfac = function AddRmFormComponent_Factory(t) {\n      return new (t || AddRmFormComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.BuildingService), i0.ɵɵdirectiveInject(i3.RmcatService), i0.ɵɵdirectiveInject(i4.EnumService), i0.ɵɵdirectiveInject(i5.DivisionService), i0.ɵɵdirectiveInject(i6.DepartmentService), i0.ɵɵdirectiveInject(i7.SubDepartmentService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddRmFormComponent,\n      selectors: [[\"app-add-rm-form\"]],\n      inputs: {\n        isNew: \"isNew\",\n        isView: \"isView\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddRmFormComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddRmFormComponent),\n        multi: true\n      }])],\n      decls: 123,\n      vars: 64,\n      consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"readonly\", \"clearable\", \"items\", \"searchable\", \"open\", \"change\", \"scrollToEnd\", \"search\"], [\"type\", \"text\", \"name\", \"rmCode\", \"uppercase\", \"\", \"formControlName\", \"rmCode\", \"maxlength\", \"32\", \"appTrimInput\", \"\", 1, \"form-control\", 3, \"readonly\"], [\"type\", \"text\", \"name\", \"rmName\", \"formControlName\", \"rmName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\", 3, \"readonly\"], [\"appendTo\", \"body\", \"formControlName\", \"spaceStandard\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"rmUse\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"rmcatId\", \"bindLabel\", \"rmCatDesc\", \"bindValue\", \"rmcatId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"rmtypeId\", \"bindLabel\", \"name\", \"bindValue\", \"rmtypeId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\"], [\"type\", \"text\", \"name\", \"rmArea\", \"NumbersOnly\", \"\", \"formControlName\", \"rmArea\", \"maxlength\", \"6\", \"appTrimInput\", \"\", 1, \"form-control\", 3, \"readonly\"], [\"rowspan\", \"2\", 2, \"width\", \"50%\", 3, \"hidden\"], [2, \"width\", \"100%\"], [2, \"align-content\", \"flex-start\"], [1, \"container\"], [\"alt\", \"\", 1, \"image\", 2, \"width\", \"100px\", \"height\", \"100px\", 3, \"src\"], [1, \"middle\"], [1, \"text\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"Select Photo\", \"type\", \"button\", \"icon\", \"pi pi-image\", \"iconPos\", \"left\", 1, \"p-button\", 2, \"margin-left\", \"4px\", 3, \"disabled\", \"click\"], [\"type\", \"file\", \"accept\", \"image/*\", \"hidden\", \"\", 3, \"change\"], [\"_fileInput\", \"\"], [\"class\", \"form-field-lable\", \"style\", \"color: red;font-size: 10px;\", 4, \"ngIf\"], [\"colspan\", \"2\", 2, \"width\", \"50%\"], [\"name\", \"rmInfo\", \"formControlName\", \"rmInfo\", \"rows\", \"2\", \"nz-input\", \"\", \"maxlength\", \"128\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\", 3, \"readonly\"], [\"appendTo\", \"body\", \"formControlName\", \"isReservable\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"isHotelable\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"commonAreaType\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\"], [\"type\", \"text\", \"name\", \"emCapacity\", \"NumbersOnly\", \"\", \"formControlName\", \"emCapacity\", \"maxlength\", \"6\", \"appTrimInput\", \"\", 1, \"form-control\", 3, \"readonly\"], [\"type\", \"text\", \"name\", \"rmAreaManual\", \"NumbersOnly\", \"\", \"formControlName\", \"rmAreaManual\", \"maxlength\", \"6\", \"appTrimInput\", \"\", 1, \"form-control\", 3, \"readonly\"], [\"appendTo\", \"body\", \"formControlName\", \"divId\", \"bindLabel\", \"divCode\", \"bindValue\", \"divId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"depId\", \"bindLabel\", \"depLabel\", \"bindValue\", \"depId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"subDepId\", \"bindLabel\", \"subDepLabel\", \"bindValue\", \"subDepId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"readonly\", \"searchable\"], [3, \"visible\", \"visibleChange\"], [\"width\", \"90%\", \"height\", \"90%\", 3, \"src\", \"alt\"], [1, \"form-field-lable\", 2, \"color\", \"red\", \"font-size\", \"10px\"]],\n      template: function AddRmFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r2 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Building\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"ng-select\", 5);\n          i0.ɵɵlistener(\"change\", function AddRmFormComponent_Template_ng_select_change_7_listener($event) {\n            return ctx.onSelectBlCode($event);\n          })(\"scrollToEnd\", function AddRmFormComponent_Template_ng_select_scrollToEnd_7_listener() {\n            return ctx.scrollToEndBl();\n          })(\"search\", function AddRmFormComponent_Template_ng_select_search_7_listener($event) {\n            return ctx.searchBl($event);\n          })(\"open\", function AddRmFormComponent_Template_ng_select_open_7_listener() {\n            return ctx.onOpenBl();\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(8, \"td\", 2)(9, \"div\", 3)(10, \"label\", 4);\n          i0.ɵɵtext(11, \"Floor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"ng-select\", 6);\n          i0.ɵɵlistener(\"open\", function AddRmFormComponent_Template_ng_select_open_12_listener() {\n            return ctx.onOpenFl();\n          })(\"change\", function AddRmFormComponent_Template_ng_select_change_12_listener($event) {\n            return ctx.onSelectFlCode($event);\n          })(\"scrollToEnd\", function AddRmFormComponent_Template_ng_select_scrollToEnd_12_listener() {\n            return ctx.scrollToEndFl();\n          })(\"search\", function AddRmFormComponent_Template_ng_select_search_12_listener($event) {\n            return ctx.searchFl($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(13, \"tr\")(14, \"td\", 2)(15, \"div\", 3)(16, \"label\", 4);\n          i0.ɵɵtext(17, \"Room Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"td\", 2)(20, \"div\", 3)(21, \"label\", 4);\n          i0.ɵɵtext(22, \"Room Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"input\", 8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"tr\")(25, \"td\", 2)(26, \"div\", 3)(27, \"label\", 4);\n          i0.ɵɵtext(28, \"Space Standard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"ng-select\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"td\", 2)(31, \"div\", 3)(32, \"label\", 4);\n          i0.ɵɵtext(33, \"Room Use\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"ng-select\", 10);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(35, \"tr\")(36, \"td\", 2)(37, \"div\", 3)(38, \"label\", 11);\n          i0.ɵɵtext(39, \"Room Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"ng-select\", 12);\n          i0.ɵɵlistener(\"change\", function AddRmFormComponent_Template_ng_select_change_40_listener($event) {\n            return ctx.onSelectRmCat($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(41, \"td\", 2)(42, \"div\", 3)(43, \"div\", 3)(44, \"label\", 11);\n          i0.ɵɵtext(45, \"Room Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(46, \"ng-select\", 13);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(47, \"tr\")(48, \"td\", 2)(49, \"div\", 3)(50, \"label\", 4);\n          i0.ɵɵtext(51, \"Room Area ft\\u00B2\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(52, \"input\", 14);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(53, \"td\", 15)(54, \"table\", 16)(55, \"tr\")(56, \"td\", 17)(57, \"div\", 18);\n          i0.ɵɵelement(58, \"img\", 19);\n          i0.ɵɵelementStart(59, \"div\", 20)(60, \"div\", 21)(61, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function AddRmFormComponent_Template_button_click_61_listener() {\n            return ctx.preview();\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(62, \"td\", 2)(63, \"div\", 3)(64, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function AddRmFormComponent_Template_button_click_64_listener() {\n            i0.ɵɵrestoreView(_r2);\n            const _r0 = i0.ɵɵreference(67);\n            return i0.ɵɵresetView(_r0.click());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(65, \"div\")(66, \"input\", 24, 25);\n          i0.ɵɵlistener(\"change\", function AddRmFormComponent_Template_input_change_66_listener($event) {\n            return ctx.fileChangeEvent($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(68, AddRmFormComponent_p_68_Template, 2, 1, \"p\", 26);\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵelement(69, \"tr\");\n          i0.ɵɵelementStart(70, \"tr\")(71, \"td\", 27)(72, \"div\", 3)(73, \"label\", 11);\n          i0.ɵɵtext(74, \"Room Info\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(75, \"textarea\", 28);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(76, \"tr\")(77, \"td\", 2)(78, \"div\", 3)(79, \"label\", 4);\n          i0.ɵɵtext(80, \"Is Reservable\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(81, \"ng-select\", 29);\n          i0.ɵɵlistener(\"change\", function AddRmFormComponent_Template_ng_select_change_81_listener($event) {\n            return ctx.onSelectReservable($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(82, \"td\", 2)(83, \"div\", 3)(84, \"label\", 4);\n          i0.ɵɵtext(85, \"Is Hotelable\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(86, \"ng-select\", 30);\n          i0.ɵɵlistener(\"change\", function AddRmFormComponent_Template_ng_select_change_86_listener($event) {\n            return ctx.onSelectHotelable($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(87, \"tr\")(88, \"td\", 2)(89, \"div\", 3)(90, \"label\", 4);\n          i0.ɵɵtext(91, \"Common Area Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(92, \"ng-select\", 31);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(93, \"td\", 2)(94, \"div\", 3)(95, \"label\", 4);\n          i0.ɵɵtext(96, \"Employee Capacity\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(97, \"input\", 32);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(98, \"tr\")(99, \"td\", 2)(100, \"div\", 3)(101, \"label\", 11);\n          i0.ɵɵtext(102, \"Room Area Manual\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(103, \"input\", 33);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(104, \"td\", 2)(105, \"div\", 3)(106, \"label\", 11);\n          i0.ɵɵtext(107, \"Division\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(108, \"ng-select\", 34);\n          i0.ɵɵlistener(\"change\", function AddRmFormComponent_Template_ng_select_change_108_listener($event) {\n            return ctx.onSelectDivision($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(109, \"tr\")(110, \"td\", 2)(111, \"div\", 3)(112, \"div\", 3)(113, \"label\", 11);\n          i0.ɵɵtext(114, \"Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(115, \"ng-select\", 35);\n          i0.ɵɵlistener(\"change\", function AddRmFormComponent_Template_ng_select_change_115_listener($event) {\n            return ctx.onSelectDepartment($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(116, \"td\", 2)(117, \"div\", 3)(118, \"label\", 11);\n          i0.ɵɵtext(119, \"Sub Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(120, \"ng-select\", 36);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(121, \"p-dialog\", 37);\n          i0.ɵɵlistener(\"visibleChange\", function AddRmFormComponent_Template_p_dialog_visibleChange_121_listener($event) {\n            return ctx.displayImage = $event;\n          });\n          i0.ɵɵelement(122, \"img\", 38);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.rmFormPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"readonly\", ctx.isView)(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"readonly\", ctx.isView);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"readonly\", ctx.isView);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.spaceStandardEnumList)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.rmUseEnumList)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumRmCat)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumRmType)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"readonly\", ctx.isView);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"hidden\", ctx.isNew);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"src\", ctx.rm_img, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.isView);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.NotImage);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"readonly\", ctx.isView);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.reservableEnumList)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.hotelableEnumList)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.commonareaEnumList)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"readonly\", ctx.isView);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"readonly\", ctx.isView);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDivision)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDepartment)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumSubDepartment)(\"readonly\", ctx.isView)(\"searchable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(63, _c0));\n          i0.ɵɵproperty(\"visible\", ctx.displayImage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"src\", ctx.rm_img, i0.ɵɵsanitizeUrl);\n        }\n      },\n      dependencies: [i8.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i9.NgSelectComponent, i10.NzTableCellDirective, i10.NzTrDirective, i11.NzInputDirective, i12.ButtonDirective, i13.Dialog, i14.NumbersOnlyDirective, i15.UppercaseDirective, i16.TrimInputDirective],\n      styles: [\".container[_ngcontent-%COMP%]{position:relative;width:50%;align-content:flex-start;margin-left:0}.image[_ngcontent-%COMP%]{opacity:1;display:block;transition:.5s ease;backface-visibility:hidden}.middle[_ngcontent-%COMP%]{transition:.5s ease;opacity:0;position:absolute;top:50%;left:65%;transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);text-align:center}.container[_ngcontent-%COMP%]:hover   .image[_ngcontent-%COMP%]{opacity:.3}.container[_ngcontent-%COMP%]:hover   .middle[_ngcontent-%COMP%]{opacity:1}.text[_ngcontent-%COMP%]{color:#fff;font-size:10px;padding:16px 32px}.form-field-lable[_ngcontent-%COMP%]{font-size:11px;margin-bottom:0;font-weight:500}.form-control[_ngcontent-%COMP%]{margin-top:-3px;padding-left:5px}[_ngcontent-%COMP%]::placeholder{color:#555;opacity:1}[_ngcontent-%COMP%]:-ms-input-placeholder{color:#555}[_ngcontent-%COMP%]::-ms-input-placeholder{color:#555}.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{border-radius:0!important}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card[_ngcontent-%COMP%]{padding:0;border:thin double rgb(181,155,90)}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}\"]\n    });\n  }\n  return AddRmFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}