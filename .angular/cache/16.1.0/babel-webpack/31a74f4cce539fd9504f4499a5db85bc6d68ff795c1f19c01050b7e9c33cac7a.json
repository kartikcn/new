{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport html2canvas from 'html2canvas';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../work-request/service/add-work-request.services\";\nimport * as i6 from \"src/app/ui/booking/services/booking.services\";\nimport * as i7 from \"src/app/services/enum.service\";\nimport * as i8 from \"src/app/services/breakpoint.service\";\nimport * as i9 from \"primeng/table\";\nimport * as i10 from \"primeng/calendar\";\nimport * as i11 from \"primeng/button\";\nimport * as i12 from \"primeng/dialog\";\nimport * as i13 from \"primeng/panel\";\nimport * as i14 from \"primeng/chart\";\nimport * as i15 from \"@ng-select/ng-select\";\nimport * as i16 from \"../../../requests-by-asset-reports/widgets/add-table/add-table.component\";\nimport * as i17 from \"@swimlane/ngx-charts\";\nconst _c0 = [\"chartContainer\"];\nfunction SlaEscalatedSummaryReportsComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"tr\")(2, \"td\", 11)(3, \"div\", 12)(4, \"div\", 13)(5, \"div\", 14)(6, \"label\", 15);\n    i0.ɵɵtext(7, \"Requested From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 16);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 11)(10, \"div\", 12)(11, \"div\", 13)(12, \"div\", 14)(13, \"label\", 15);\n    i0.ɵɵtext(14, \"Requested To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 18)(17, \"div\", 12)(18, \"label\", 15);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 19);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.scrollToEndBl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.searchBl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"td\", 20)(22, \"div\", 12)(23, \"label\", 15);\n    i0.ɵɵtext(24, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ng-select\", 21);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_25_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_scrollToEnd_25_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.scrollToEndFl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_search_25_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.searchFl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_open_25_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"td\", 20)(27, \"div\", 12)(28, \"label\", 15);\n    i0.ɵɵtext(29, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"ng-select\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"td\", 11)(32, \"div\", 12)(33, \"label\", 15);\n    i0.ɵɵtext(34, \"Display Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"ng-select\", 23);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_35_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onSelectDisplayType($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"td\", 24)(37, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_3_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_3_Template_button_click_38_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onClear());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"p-button\", 27);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_3_Template_p_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx_r0.displayTypeData);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.filterPanel.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isShowGrid);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"tr\")(2, \"td\", 28)(3, \"div\", 12)(4, \"div\", 13)(5, \"div\", 14)(6, \"label\", 15);\n    i0.ɵɵtext(7, \"Requested From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 16);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 28)(10, \"div\", 12)(11, \"div\", 13)(12, \"div\", 14)(13, \"label\", 15);\n    i0.ɵɵtext(14, \"Requested To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 28)(17, \"div\", 12)(18, \"label\", 15);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 19);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.scrollToEndBl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.searchBl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"tr\")(22, \"td\", 28)(23, \"div\", 12)(24, \"label\", 15);\n    i0.ɵɵtext(25, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"ng-select\", 21);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_26_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_scrollToEnd_26_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.scrollToEndFl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_search_26_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.searchFl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_open_26_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"td\", 28)(28, \"div\", 12)(29, \"label\", 15);\n    i0.ɵɵtext(30, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"ng-select\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"td\", 28)(33, \"div\", 12)(34, \"label\", 15);\n    i0.ɵɵtext(35, \"Display Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"ng-select\", 23);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_36_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onSelectDisplayType($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(37, \"tr\")(38, \"td\", 29)(39, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_4_Template_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_4_Template_button_click_40_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.onClear());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"p-button\", 27);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_4_Template_p_button_click_41_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx_r1.displayTypeData);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.filterPanel.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isShowGrid);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"tr\")(2, \"td\", 32)(3, \"div\", 12)(4, \"div\", 13)(5, \"div\", 14)(6, \"label\", 15);\n    i0.ɵɵtext(7, \"Requested From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 16);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 32)(10, \"div\", 12)(11, \"div\", 13)(12, \"div\", 14)(13, \"label\", 15);\n    i0.ɵɵtext(14, \"Requested To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 32)(17, \"div\", 12)(18, \"label\", 15);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 19);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.scrollToEndBl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.searchBl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"td\", 32)(22, \"div\", 12)(23, \"label\", 15);\n    i0.ɵɵtext(24, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ng-select\", 21);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_25_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_scrollToEnd_25_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.scrollToEndFl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_search_25_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.searchFl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_open_25_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"td\", 32)(27, \"div\", 12)(28, \"label\", 15);\n    i0.ɵɵtext(29, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"ng-select\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"td\", 32)(32, \"div\", 12)(33, \"label\", 15);\n    i0.ɵɵtext(34, \"Display Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"ng-select\", 23);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_35_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.onSelectDisplayType($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"td\", 33)(37, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_5_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_5_Template_button_click_38_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.onClear());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"p-button\", 27);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_5_Template_p_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r2.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r2.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r2.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx_r2.displayTypeData);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.filterPanel.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isShowGrid);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_7_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const dataItem_r50 = ctx.$implicit;\n    i0.ɵɵtextInterpolate2(\" \", dataItem_r50.label, \" (\", dataItem_r50.value, \") \");\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34, 35)(2, \"p-chart\", 36, 37);\n    i0.ɵɵlistener(\"onDataSelect\", function SlaEscalatedSummaryReportsComponent_div_7_Template_p_chart_onDataSelect_2_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.onClick($event));\n    });\n    i0.ɵɵtemplate(4, SlaEscalatedSummaryReportsComponent_div_7_ng_template_4_Template, 1, 2, \"ng-template\", 38);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"type\", ctx_r3.chartType)(\"height\", 540)(\"data\", ctx_r3.data)(\"options\", ctx_r3.options);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34, 35)(2, \"div\")(3, \"ngx-charts-pie-chart\", 39);\n    i0.ɵɵlistener(\"select\", function SlaEscalatedSummaryReportsComponent_div_8_Template_ngx_charts_pie_chart_select_3_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.selectChartData($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"results\", ctx_r4.pieChartData)(\"view\", ctx_r4.pieChartView)(\"legend\", true)(\"labels\", false)(\"doughnut\", ctx_r4.chartType == \"doughnut\")(\"scheme\", ctx_r4.customScheme)(\"legendTitle\", \"\")(\"tooltipDisabled\", false);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_9_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 43)(2, \"div\", 44)(3, \"div\", 45)(4, \"p\", 46);\n    i0.ɵɵtext(5, \"Escalated For\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 47);\n    i0.ɵɵelement(7, \"p-sortIcon\", 48)(8, \"p-columnFilter\", 49);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 50)(10, \"div\", 44)(11, \"div\", 45)(12, \"p\", 46);\n    i0.ɵɵtext(13, \" Request Count\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 47);\n    i0.ɵɵelement(15, \"p-sortIcon\", 51)(16, \"p-columnFilter\", 52);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_9_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 53);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_div_9_ng_template_3_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r61);\n      const record_r59 = restoredCtx.$implicit;\n      const ctx_r60 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r60.onRowSelect(record_r59.label));\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const record_r59 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", record_r59);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r59.label);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r59.reqCount);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_9_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r58 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r58.esctdGridData.length);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"p-table\", 41);\n    i0.ɵɵtemplate(2, SlaEscalatedSummaryReportsComponent_div_9_ng_template_2_Template, 17, 0, \"ng-template\", 8);\n    i0.ɵɵtemplate(3, SlaEscalatedSummaryReportsComponent_div_9_ng_template_3_Template, 5, 3, \"ng-template\", 9);\n    i0.ɵɵtemplate(4, SlaEscalatedSummaryReportsComponent_div_9_ng_template_4_Template, 3, 1, \"ng-template\", 42);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.esctdGridData)(\"paginator\", false);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \" Requests List\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-table\", 54);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r7.displayData)(\"isEscalatedData\", ctx_r7.viewForEscalation);\n  }\n}\nconst _c1 = function () {\n  return {\n    \"max-width\": \"70vw\"\n  };\n};\nexport class SlaEscalatedSummaryReportsComponent {\n  constructor(messageService, blService, formBuilder, datePipe, wrServ, bookingSrv, enumsrv, bps) {\n    this.messageService = messageService;\n    this.blService = blService;\n    this.formBuilder = formBuilder;\n    this.datePipe = datePipe;\n    this.wrServ = wrServ;\n    this.bookingSrv = bookingSrv;\n    this.enumsrv = enumsrv;\n    this.bps = bps;\n    this.allSitesData = [];\n    this.enumBL = [];\n    this.enumAllBl = [];\n    this.enumFL = [];\n    this.enumRM = [];\n    this.enumAllFL = [];\n    this.allRmDdata = [];\n    this.rm_data = [];\n    this.compId = 1;\n    this.chartType = 'pie';\n    this.allRequestList = [];\n    this.esctdResponseData = [];\n    this.esctdCompleteData = [];\n    this.esctdCompleteAndResponseData = [];\n    this.noEsctdData = [];\n    this.displayData = [];\n    this.labels = ['Escalated For Response', 'Escalated For Complete', 'Escalated For Response and Complete', 'Not Escalated'];\n    this.isShowDialog = false;\n    this.isShowGrid = false;\n    //isShowCharts: boolean = false;\n    this.esctdGridData = [];\n    this.chartData = [];\n    this.chartImg = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumWr = [];\n    this.enumStatus = [];\n    this.viewForEscalation = true;\n    this.displayTypeData = [{\n      \"id\": 1,\n      \"lable\": 'Pie Chart',\n      \"value\": \"pie\"\n    }, {\n      \"id\": 2,\n      \"lable\": 'Bar Chart',\n      \"value\": \"bar\"\n    },\n    // { \"id\": 2, \"lable\": 'Doughnut', \"value\": \"doughnut\" },\n    {\n      \"id\": 4,\n      \"lable\": 'Grid',\n      \"value\": \"grid\"\n    }];\n    this.pieChartData = [];\n    this.dynamicColors = [];\n    this.customScheme = {\n      domain: ['#FF0000', '#00FF00', '#0000FF', '#FFFF00'] // define your custom colors here\n    };\n\n    this.showRequestsTypeList = [{\n      label: \"Preventive Maintenance\",\n      value: \"ppm\"\n    }, {\n      label: \"Facilities Helpdesk\",\n      value: \"facilities\"\n    }, {\n      label: \"All\",\n      value: \"all\"\n    }];\n    this.showType = \"facilities\";\n    this.useTabletProtrait = false;\n    this.useTabletLandscape = false;\n    this.pieChartView = [1000, 500];\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.selectedBl = {};\n    this.selectedFl = {};\n    this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n    this.filterPanel = this.formBuilder.group({\n      siteId: [null],\n      blId: [null],\n      flId: [null],\n      dateRequestedFrom: [null],\n      dateRequestedTo: [null],\n      chartType: ['bar'],\n      showType: [this.showType]\n    });\n  }\n  ngOnInit() {\n    this.bps.register(this);\n    this.viewForEscalation = true;\n    var date = new Date();\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    this.loadEnums();\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        dateRequestedFrom: firstDay,\n        dateRequestedTo: lastDay,\n        showType: this.showType\n      });\n      this.onSearch();\n    });\n  }\n  notify() {\n    this.useTabletProtrait = BreakpointService.useTabletProtrait;\n    this.useTabletLandscape = BreakpointService.useTabletLandscape;\n    this.updatePieChartView();\n  }\n  onSearch() {\n    const filterData = {\n      dateRequestedFrom: this.datePipe.transform(this.filterPanel.controls.dateRequestedFrom.value, \"yyyy-MM-dd\"),\n      dateRequestedTo: this.datePipe.transform(this.filterPanel.controls.dateRequestedTo.value, \"yyyy-MM-dd\"),\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      showRequestType: this.filterPanel.controls.showType.value\n    };\n    this.loadRecords(filterData);\n    this.chartType = this.filterPanel.controls.chartType.value;\n    this.updatePieChartView();\n  }\n  loadRecords(filterData) {\n    this.allRequestList = [];\n    this.esctdResponseData = [];\n    this.esctdCompleteData = [];\n    this.esctdCompleteAndResponseData = [];\n    this.noEsctdData = [];\n    this.wrServ.getAllWrByFilter(filterData).subscribe(res => {\n      this.allRequestList = res.map(each => {\n        return {\n          ...each,\n          formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n          fromatedDateToRespond: each.escDateResponded ? this.datePipe.transform(each.escDateResponded, 'dd MMM yyyy') + \" \" + this.convertToDisplayTime(each.escTimeResponded) : '',\n          formatedDateResponded: each.dateResponded ? this.datePipe.transform(each.dateResponded, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeResponded) : '',\n          formatedDateToComplete: each.escDateCompleted ? this.datePipe.transform(each.escDateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.escTimeCompleted) : '',\n          formatedDateCompleted: each.dateCompleted ? this.datePipe.transform(each.dateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeCompleted) : ''\n        };\n      });\n      const currentDate = new Date(); // Assuming the current date is obtained correctly\n      this.allRequestList.forEach(item => {\n        const {\n          dateResponded,\n          escDateResponded,\n          dateCompleted,\n          escDateCompleted,\n          timeResponded,\n          timeCompleted,\n          escTimeResponded,\n          escTimeCompleted,\n          status\n        } = item;\n        const isEscalatedForResponse = dateResponded && new Date(dateResponded + 'T' + timeResponded).getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime() || !dateResponded && currentDate.getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime();\n        const isEscalatedForComplete = dateCompleted && new Date(dateCompleted + 'T' + timeCompleted).getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime() || !dateCompleted && currentDate.getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime();\n        const statusEnum = this.getEnumById(status);\n        if (isEscalatedForResponse && !isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n          this.esctdResponseData.push(item);\n        }\n        if (isEscalatedForComplete && !isEscalatedForResponse && statusEnum !== \"Cancelled\" && statusEnum !== \"Rejected\") {\n          this.esctdCompleteData.push(item);\n        }\n        if (isEscalatedForResponse && isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n          this.esctdCompleteAndResponseData.push(item);\n        }\n        if (!isEscalatedForResponse && !isEscalatedForComplete) {\n          this.noEsctdData.push(item);\n        }\n      });\n      this.chartData = [];\n      this.chartData = [this.esctdResponseData.length, this.esctdCompleteData.length, this.esctdCompleteAndResponseData.length, this.noEsctdData.length];\n      this.setChartData(this.chartData);\n      this.setPieChartData(this.chartData);\n      this.setGridData();\n    });\n  }\n  isWhiteColorShade(color) {\n    // Extract RGB values from the color string\n    const rgbValues = color.match(/\\d+/g);\n    const r = parseInt(rgbValues[0]);\n    const g = parseInt(rgbValues[1]);\n    const b = parseInt(rgbValues[2]);\n    // Check if all RGB values are close to 255 (white)\n    const threshold = 50; // Adjust this threshold as needed\n    const average = (r + g + b) / 3;\n    return average > threshold;\n  }\n  setChartData(data) {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue('--text-color');\n    this.dynamicColors = [];\n    for (let i = 0; i < this.labels.length; i++) {\n      let color = '';\n      do {\n        color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      } while (color === 'rgba(255, 255, 255, 1)' || this.isWhiteColorShade(color));\n      {\n        // Regenerate color if it is white\n        color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      }\n      ;\n      this.dynamicColors.push(color);\n    }\n    this.customScheme = {\n      domain: [...this.dynamicColors]\n    };\n    this.data = {\n      labels: this.labels,\n      datasets: [{\n        label: 'Requests',\n        data: data,\n        backgroundColor: this.dynamicColors,\n        borderColor: this.dynamicColors,\n        borderWidth: 1\n      }]\n    };\n    if (this.chartType === 'bar') {\n      this.setBarChartOptions();\n    } else {\n      this.options = {\n        legend: {\n          position: 'right',\n          labels: {\n            usePointStyle: true,\n            generateLabels: chart => {\n              const data = chart.data;\n              if (data.labels.length && data.datasets.length) {\n                return data.labels.map((label, i) => {\n                  const dataset = data.datasets[0];\n                  const meta = chart.getDatasetMeta(0);\n                  const style = meta.controller.getStyle(i);\n                  const count = dataset.data[i];\n                  return {\n                    text: `${label}: ${count}`,\n                    fillStyle: style.backgroundColor,\n                    hidden: isNaN(count) || meta.data[i].hidden,\n                    index: i\n                  };\n                });\n              }\n              return [];\n            }\n          }\n        },\n        elements: {\n          arc: {\n            borderWidth: 1,\n            borderColor: '#fff'\n          }\n        }\n      };\n    }\n  }\n  onSelectBlCode($event) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        flId: null\n      });\n    }, 0);\n    if ($event.blId != null && $event.blId != '') {\n      this.selectedBl = $event;\n      this.selectedFl = {};\n    } else {\n      this.selectedBl = {};\n      this.selectedFl = {};\n    }\n  }\n  onSelectFlCode($event) {\n    if ($event.flId != null && $event.flId != '') {\n      this.selectedFl = $event;\n      const blData = {\n        blId: $event.blId,\n        blNameString: $event.blNameString,\n        site: null\n      };\n      this.selectedBl = blData;\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId\n        });\n      }, 10);\n    }\n  }\n  onClear() {\n    this.selectedBl = {};\n    this.selectedFl = {};\n    this.isShowGrid = false;\n    this.filterPanel.patchValue({\n      siteId: null,\n      blId: null,\n      flId: null,\n      dateRequestedFrom: null,\n      dateRequestedTo: null,\n      chartType: this.displayTypeData[0].value,\n      showType: this.showType\n    });\n  }\n  onClick(event) {\n    this.isShowDialog = false;\n    this.displayData = [];\n    let index = event.element ? event.element.index : null;\n    let label = index >= 0 ? this.labels[index] : event.name;\n    if (label === 'Escalated For Response') {\n      this.displayData = this.esctdResponseData;\n    } else if (label === 'Escalated For Complete') {\n      this.displayData = this.esctdCompleteData;\n    } else if (label === 'Not Escalated') {\n      this.displayData = this.noEsctdData;\n    } else {\n      this.displayData = this.esctdCompleteAndResponseData;\n    }\n    this.isShowDialog = true;\n  }\n  onSelectDisplayType(event) {\n    this.setChartData(this.chartData);\n    this.isShowGrid = false;\n    this.chartType = event.value;\n    if (this.chartType === 'pie' || this.chartType === 'doughnut') {\n      this.setOtherChartOptions();\n    } else if (this.chartType === 'bar') {\n      this.setBarChartOptions();\n    } else {\n      this.setGridData();\n      this.isShowGrid = true;\n    }\n    this.updatePieChartView();\n  }\n  updatePieChartView() {\n    if (this.chartType === 'pie' || this.chartType === 'doughnut') {\n      if (this.useTabletProtrait) {\n        this.pieChartView = [300, 250];\n      } else if (this.useTabletLandscape) {\n        this.pieChartView = [750, 400];\n      } else {\n        this.pieChartView = [1000, 500];\n      }\n    }\n  }\n  setGridData() {\n    this.esctdGridData = [{\n      label: 'Escalated For Response',\n      reqCount: this.esctdResponseData.length\n    }, {\n      label: 'Escalated For Complete',\n      reqCount: this.esctdCompleteData.length\n    }, {\n      label: 'Escalated For Response and Complete',\n      reqCount: this.esctdCompleteAndResponseData.length\n    }, {\n      label: 'Not Escalated',\n      reqCount: this.noEsctdData.length\n    }];\n  }\n  onRowSelect(label) {\n    this.isShowDialog = false;\n    if (label === 'Escalated For Response') {\n      this.displayData = this.esctdResponseData;\n    } else if (label === 'Escalated For Complete') {\n      this.displayData = this.esctdCompleteData;\n    } else if (label === 'Not Escalated') {\n      this.displayData = this.noEsctdData;\n    } else {\n      this.displayData = this.esctdCompleteAndResponseData;\n    }\n    this.isShowDialog = true;\n  }\n  exportChartToPDF() {\n    const htmlRef = this.chartContainer.nativeElement;\n    html2canvas(htmlRef).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      this.chartImg = [];\n      this.chartImg.push(imgData);\n      this.printPDF();\n    });\n  }\n  printPDF() {\n    var reportDetails = {\n      chartImg: this.chartImg,\n      title: 'SLA Escalated Summary Reports'\n    };\n    this.bookingSrv.printPdf(reportDetails).subscribe(res => {\n      if (res != null) {\n        this.messageService.add({\n          key: 'reportBookingSer',\n          severity: 'success',\n          summary: 'PDF Created',\n          detail: 'PDF created successfully'\n        });\n        var file = new Blob([res], {\n          type: 'application/pdf'\n        });\n        var fileURL = URL.createObjectURL(file);\n        window.open(fileURL);\n      }\n    });\n  }\n  setBarChartOptions() {\n    this.options = {\n      title: {\n        display: false,\n        text: 'Bar Chart',\n        fontSize: 18\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        x: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Escalated Type',\n            fontStyle: 'bold'\n          },\n          grid: {\n            display: false,\n            drawOnChartArea: false\n          }\n        },\n        y: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Request Count',\n            fontStyle: 'bold'\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 5\n          },\n          grid: {\n            display: false,\n            drawOnChartArea: false\n          }\n        }\n      },\n      tooltips: {\n        enabled: true,\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (tooltipItem) {\n            return \"Requests: \" + tooltipItem.formattedValue;\n          }\n        }\n      },\n      responsive: true,\n      animation: {\n        duration: 1000,\n        easing: 'easeOutBounce'\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    };\n  }\n  setOtherChartOptions() {\n    this.options.scales = {};\n    this.options.legend = {\n      position: 'right',\n      labels: {\n        generateLabels: chart => {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: `${label}: ${data.datasets[0].data[i]}`,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: isNaN(data.datasets[0].data[i]) || meta.data[i].hidden,\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      }\n    };\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n      this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n    });\n  }\n  getEnumById(id) {\n    return this.enumStatus.find(t => t.id === id)?.enumValue;\n  }\n  convertToDisplayTime(value) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n  setPieChartData(chartData) {\n    this.pieChartData = [];\n    this.pieChartData.push({\n      label: this.labels[0],\n      name: this.labels[0] + \" \" + chartData[0],\n      value: chartData[0]\n    });\n    this.pieChartData.push({\n      label: this.labels[1],\n      name: this.labels[1] + \" \" + chartData[1],\n      value: chartData[1]\n    });\n    this.pieChartData.push({\n      label: this.labels[2],\n      name: this.labels[2] + \" \" + chartData[2],\n      value: chartData[2]\n    });\n    this.pieChartData.push({\n      label: this.labels[3],\n      name: this.labels[3] + \" \" + chartData[3],\n      value: chartData[3]\n    });\n  }\n  selectChartData(event) {\n    const isChartSelected = event.hasOwnProperty('name');\n    // Stop event propagation if the legend is selected\n    if (!isChartSelected) {\n      // event.preventDefault();\n      // event.stopPropagation();\n      return;\n    } else {\n      this.isShowDialog = false;\n      this.displayData = [];\n      let label = event.name;\n      if (label === `${this.labels[0]} ${this.chartData[0]}`) {\n        this.displayData = this.esctdResponseData;\n      } else if (label === `${this.labels[1]} ${this.chartData[1]}`) {\n        this.displayData = this.esctdCompleteData;\n      } else if (label === `${this.labels[2]} ${this.chartData[2]}`) {\n        this.displayData = this.esctdCompleteAndResponseData;\n      } else if (label === `${this.labels[3]} ${this.chartData[3]}`) {\n        this.displayData = this.noEsctdData;\n      }\n      this.isShowDialog = true;\n    }\n  }\n  ngOnDestroy() {\n    this.bps.unregister(this);\n  }\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blService.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    });\n  }\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blService.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n      this.enumFL = res;\n      this.updateFlList(this.selectedFl);\n    });\n  }\n  searchBl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"blName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndBl();\n  }\n  searchFl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"flName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndFl();\n  }\n  updateBlList(blData) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n  updateFlList(flData) {\n    if (flData.flId) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n    }\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.scrollToEndBl();\n  }\n  onOpenFl() {\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    if (this.selectedBl.blId) {\n      this.filterCriteria = {\n        fieldName: \"bl.blId\",\n        value: this.selectedBl.blId,\n        matchMode: \"equals\",\n        limit: 0,\n        offset: 0\n      };\n    } else {\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n    }\n    this.scrollToEndFl();\n  }\n  static #_ = this.ɵfac = function SlaEscalatedSummaryReportsComponent_Factory(t) {\n    return new (t || SlaEscalatedSummaryReportsComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.BuildingService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i5.AddWorkRequestService), i0.ɵɵdirectiveInject(i6.BookingService), i0.ɵɵdirectiveInject(i7.EnumService), i0.ɵɵdirectiveInject(i8.BreakpointService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SlaEscalatedSummaryReportsComponent,\n    selectors: [[\"app-sla-escalated-summary-reports\"]],\n    viewQuery: function SlaEscalatedSummaryReportsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartContainer = _t.first);\n      }\n    },\n    inputs: {\n      showType: \"showType\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 13,\n    vars: 16,\n    consts: [[1, \"card\", 2, \"height\", \"90vh\"], [\"header\", \"SLA Summary\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [1, \"p-d-flex\"], [\"class\", \"card\", \"style\", \"margin-top:3px\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"styleClass\", \"dark-panel\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"width\", \"100%\"], [2, \"width\", \"10%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedFrom\", \"formControlName\", \"dateRequestedFrom\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedTo\", \"formControlName\", \"dateRequestedTo\", \"inputId\", \"icon\", 3, \"showIcon\"], [2, \"width\", \"15%\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [2, \"width\", \"20%\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"showType\", \"bindLabel\", \"label\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"chartType\", \"bindLabel\", \"lable\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [2, \"width\", \"15%\", \"padding-top\", \"10px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", \"margin-right\", \"5px\", 3, \"click\"], [\"icon\", \"pi pi-file-pdf\", \"matTooltip\", \"Generate PDF\", \"matTooltipPosition\", \"below\", \"styleClass\", \"p-button-raised p-button-danger\", 3, \"disabled\", \"click\"], [2, \"width\", \"30%\"], [2, \"width\", \"30%\", \"padding-top\", \"10px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-panel-button\", 2, \"margin-left\", \"2px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-panel-button\", 2, \"margin-left\", \"2px\", \"margin-right\", \"2px\", 3, \"click\"], [2, \"width\", \"13%\"], [2, \"width\", \"22%\", \"padding-top\", \"10px\"], [1, \"card\", 2, \"margin-top\", \"3px\"], [\"chartContainer\", \"\"], [3, \"type\", \"height\", \"data\", \"options\", \"onDataSelect\"], [\"barChart\", \"\"], [\"pTemplate\", \"dataLabel\"], [3, \"results\", \"view\", \"legend\", \"labels\", \"doughnut\", \"scheme\", \"legendTitle\", \"tooltipDisabled\", \"select\"], [1, \"card\"], [\"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\"], [\"pTemplate\", \"emptymessage\"], [\"pSortableColumn\", \"label\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"label\"], [\"type\", \"text\", \"field\", \"label\", \"display\", \"menu\"], [\"pSortableColumn\", \"reqCount\"], [\"field\", \"reqCount\"], [\"type\", \"text\", \"field\", \"reqCount\", \"display\", \"menu\"], [3, \"pSelectableRow\", \"click\"], [3, \"data\", \"isEscalatedData\"]],\n    template: function SlaEscalatedSummaryReportsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"form\", 2);\n        i0.ɵɵtemplate(3, SlaEscalatedSummaryReportsComponent_table_3_Template, 40, 17, \"table\", 3);\n        i0.ɵɵtemplate(4, SlaEscalatedSummaryReportsComponent_table_4_Template, 42, 17, \"table\", 3);\n        i0.ɵɵtemplate(5, SlaEscalatedSummaryReportsComponent_table_5_Template, 40, 17, \"table\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵtemplate(7, SlaEscalatedSummaryReportsComponent_div_7_Template, 5, 4, \"div\", 5);\n        i0.ɵɵtemplate(8, SlaEscalatedSummaryReportsComponent_div_8_Template, 4, 8, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, SlaEscalatedSummaryReportsComponent_div_9_Template, 5, 2, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p-dialog\", 7);\n        i0.ɵɵlistener(\"visibleChange\", function SlaEscalatedSummaryReportsComponent_Template_p_dialog_visibleChange_10_listener($event) {\n          return ctx.isShowDialog = $event;\n        });\n        i0.ɵɵtemplate(11, SlaEscalatedSummaryReportsComponent_ng_template_11_Template, 2, 0, \"ng-template\", 8);\n        i0.ɵɵtemplate(12, SlaEscalatedSummaryReportsComponent_ng_template_12_Template, 1, 2, \"ng-template\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"toggleable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait && !ctx.useTabletLandscape);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.useTabletLandscape);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.chartType == \"bar\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.chartType == \"pie\" || ctx.chartType == \"doughnut\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShowGrid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(15, _c1));\n        i0.ɵɵproperty(\"visible\", ctx.isShowDialog)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n      }\n    },\n    dependencies: [i4.NgIf, i1.PrimeTemplate, i9.Table, i9.SortableColumn, i9.SelectableRow, i9.SortIcon, i9.ColumnFilter, i10.Calendar, i11.ButtonDirective, i11.Button, i12.Dialog, i13.Panel, i14.UIChart, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i15.NgSelectComponent, i16.AddTableComponent, i17.PieChartComponent],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  padding-left: 1rem !important;\\n  padding: 0rem;\\n  border-radius: 0rem !important;\\n}\\n\\n[_nghost-%COMP%]     .chart-legend .legend-labels {\\n  width: auto !important;\\n}\\n\\n[_nghost-%COMP%]    .ngx-charts-outer {\\n  animation: chartFadeIn linear 0 !important;\\n}\\n\\n.filter-panel-button[_ngcontent-%COMP%] {\\n  width: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svZmFjaWxpdGllcy1oZWxwZGVzay1yZXBvcnRzL3NsYS1lc2NhbGF0ZWQtc3VtbWFyeS1yZXBvcnRzL21vZGFsL3NsYS1lc2NhbGF0ZWQtc3VtbWFyeS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUUsNkJBQUE7RUFDQSxhQUFBO0VBQ0EsOEJBQUE7QUFBRjs7QUFHQTtFQUNFLHNCQUFBO0FBQUY7O0FBSUE7RUFFRSwwQ0FBQTtBQURGOztBQUtBO0VBQ0UsV0FBQTtBQUZGIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLWRpYWxvZyAucC1kaWFsb2ctaGVhZGVyXG4ge1xuICBwYWRkaW5nLWxlZnQ6IDFyZW0gIWltcG9ydGFudDtcbiAgcGFkZGluZzogMHJlbTtcbiAgYm9yZGVyLXJhZGl1czogMHJlbSAhaW1wb3J0YW50OyBcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5jaGFydC1sZWdlbmQgLmxlZ2VuZC1sYWJlbHMge1xuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuIC8vIGJhY2tncm91bmQ6IHJnYigwIDAgMCAvIDAlKTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwLm5neC1jaGFydHMtb3V0ZXJ7XG4gIC13ZWJraXQtYW5pbWF0aW9uOmNoYXJ0RmFkZUluIGxpbmVhciAwICFpbXBvcnRhbnQ7XG4gIGFuaW1hdGlvbjpjaGFydEZhZGVJbiBsaW5lYXIgMCAhaW1wb3J0YW50O1xufVxuXG5cbi5maWx0ZXItcGFuZWwtYnV0dG9ue1xuICB3aWR0aDo1MHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MessageService","html2canvas","BreakpointService","UtilConstant","BuildingFilterInputDTO","FloorFilterInputDTO","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_20_listener","$event","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","onSelectBlCode","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_scrollToEnd_20_listener","ctx_r10","scrollToEndBl","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_search_20_listener","ctx_r11","searchBl","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_open_20_listener","ctx_r12","onOpenBl","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_25_listener","ctx_r13","onSelectFlCode","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_scrollToEnd_25_listener","ctx_r14","scrollToEndFl","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_search_25_listener","ctx_r15","searchFl","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_open_25_listener","ctx_r16","onOpenFl","SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_35_listener","ctx_r17","onSelectDisplayType","SlaEscalatedSummaryReportsComponent_table_3_Template_button_click_37_listener","ctx_r18","onSearch","SlaEscalatedSummaryReportsComponent_table_3_Template_button_click_38_listener","ctx_r19","onClear","SlaEscalatedSummaryReportsComponent_table_3_Template_p_button_click_39_listener","ctx_r20","exportChartToPDF","ɵɵadvance","ɵɵproperty","ctx_r0","enumBL","enumFL","showRequestsTypeList","displayTypeData","filterPanel","valid","isShowGrid","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_20_listener","_r22","ctx_r21","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_scrollToEnd_20_listener","ctx_r23","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_search_20_listener","ctx_r24","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_open_20_listener","ctx_r25","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_26_listener","ctx_r26","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_scrollToEnd_26_listener","ctx_r27","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_search_26_listener","ctx_r28","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_open_26_listener","ctx_r29","SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_36_listener","ctx_r30","SlaEscalatedSummaryReportsComponent_table_4_Template_button_click_39_listener","ctx_r31","SlaEscalatedSummaryReportsComponent_table_4_Template_button_click_40_listener","ctx_r32","SlaEscalatedSummaryReportsComponent_table_4_Template_p_button_click_41_listener","ctx_r33","ctx_r1","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_20_listener","_r35","ctx_r34","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_scrollToEnd_20_listener","ctx_r36","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_search_20_listener","ctx_r37","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_open_20_listener","ctx_r38","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_25_listener","ctx_r39","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_scrollToEnd_25_listener","ctx_r40","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_search_25_listener","ctx_r41","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_open_25_listener","ctx_r42","SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_35_listener","ctx_r43","SlaEscalatedSummaryReportsComponent_table_5_Template_button_click_37_listener","ctx_r44","SlaEscalatedSummaryReportsComponent_table_5_Template_button_click_38_listener","ctx_r45","SlaEscalatedSummaryReportsComponent_table_5_Template_p_button_click_39_listener","ctx_r46","ctx_r2","ɵɵtextInterpolate2","dataItem_r50","label","value","SlaEscalatedSummaryReportsComponent_div_7_Template_p_chart_onDataSelect_2_listener","_r52","ctx_r51","onClick","ɵɵtemplate","SlaEscalatedSummaryReportsComponent_div_7_ng_template_4_Template","ctx_r3","chartType","data","options","SlaEscalatedSummaryReportsComponent_div_8_Template_ngx_charts_pie_chart_select_3_listener","_r55","ctx_r54","selectChartData","ctx_r4","pieChartData","pieChartView","customScheme","SlaEscalatedSummaryReportsComponent_div_9_ng_template_3_Template_tr_click_0_listener","restoredCtx","_r61","record_r59","$implicit","ctx_r60","onRowSelect","ɵɵtextInterpolate","reqCount","ɵɵattribute","ctx_r58","esctdGridData","length","SlaEscalatedSummaryReportsComponent_div_9_ng_template_2_Template","SlaEscalatedSummaryReportsComponent_div_9_ng_template_3_Template","SlaEscalatedSummaryReportsComponent_div_9_ng_template_4_Template","ctx_r5","ctx_r7","displayData","viewForEscalation","SlaEscalatedSummaryReportsComponent","constructor","messageService","blService","formBuilder","datePipe","wrServ","bookingSrv","enumsrv","bps","allSitesData","enumAllBl","enumRM","enumAllFL","allRmDdata","rm_data","compId","allRequestList","esctdResponseData","esctdCompleteData","esctdCompleteAndResponseData","noEsctdData","labels","isShowDialog","chartData","chartImg","enumList","enumClonedList","enumWr","enumStatus","dynamicColors","domain","showType","useTabletProtrait","useTabletLandscape","limitBl","offsetBl","limitFl","offsetFl","filterCriteria","fieldName","matchMode","limit","offset","selectedBl","selectedFl","scrollLimit","SCROLL_LIMIT","group","siteId","blId","flId","dateRequestedFrom","dateRequestedTo","ngOnInit","register","date","Date","firstDay","getFullYear","getMonth","lastDay","loadEnums","setTimeout","patchValue","notify","updatePieChartView","filterData","transform","controls","showRequestType","loadRecords","getAllWrByFilter","subscribe","res","map","each","formatedDateRequested","dateRequested","fromatedDateToRespond","escDateResponded","convertToDisplayTime","escTimeResponded","formatedDateResponded","dateResponded","timeResponded","formatedDateToComplete","escDateCompleted","escTimeCompleted","formatedDateCompleted","dateCompleted","timeCompleted","currentDate","forEach","item","status","isEscalatedForResponse","getTime","isEscalatedForComplete","statusEnum","getEnumById","push","setChartData","setPieChartData","setGridData","isWhiteColorShade","color","rgbValues","match","r","parseInt","g","b","threshold","average","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","i","Math","floor","random","datasets","backgroundColor","borderColor","borderWidth","setBarChartOptions","legend","position","usePointStyle","generateLabels","chart","dataset","meta","getDatasetMeta","style","controller","getStyle","count","text","fillStyle","hidden","isNaN","index","elements","arc","blData","blNameString","site","updateBlList","event","element","name","setOtherChartOptions","htmlRef","chartContainer","nativeElement","then","canvas","imgData","toDataURL","printPDF","reportDetails","title","printPdf","add","key","severity","summary","detail","file","Blob","type","fileURL","URL","createObjectURL","window","open","display","fontSize","scales","x","fontStyle","grid","drawOnChartArea","y","ticks","beginAtZero","stepSize","tooltips","enabled","mode","intersect","callbacks","tooltipItem","formattedValue","responsive","animation","duration","easing","plugins","strokeStyle","lineWidth","getEnums","Object","assign","filter","t","tableName","toLocaleUpperCase","id","find","enumValue","split","time","isChartSelected","hasOwnProperty","ngOnDestroy","unregister","getALLBuildingByScroll","getALLFloorByScroll","updateFlList","term","unshift","flData","_","ɵɵdirectiveInject","i1","i2","BuildingService","i3","UntypedFormBuilder","i4","DatePipe","i5","AddWorkRequestService","i6","BookingService","i7","EnumService","i8","_2","selectors","viewQuery","SlaEscalatedSummaryReportsComponent_Query","rf","ctx","decls","vars","consts","template","SlaEscalatedSummaryReportsComponent_Template","SlaEscalatedSummaryReportsComponent_table_3_Template","SlaEscalatedSummaryReportsComponent_table_4_Template","SlaEscalatedSummaryReportsComponent_table_5_Template","SlaEscalatedSummaryReportsComponent_div_7_Template","SlaEscalatedSummaryReportsComponent_div_8_Template","SlaEscalatedSummaryReportsComponent_div_9_Template","SlaEscalatedSummaryReportsComponent_Template_p_dialog_visibleChange_10_listener","SlaEscalatedSummaryReportsComponent_ng_template_11_Template","SlaEscalatedSummaryReportsComponent_ng_template_12_Template","ɵɵstyleMap","ɵɵpureFunction0","_c1"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/facilities-helpdesk-reports/sla-escalated-summary-reports/modal/sla-escalated-summary-reports.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/facilities-helpdesk-reports/sla-escalated-summary-reports/modal/sla-escalated-summary-reports.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { BuildingFilterInput } from 'src/app/ui/background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/flFilterInput.model';\nimport { BuildingService } from 'src/app/ui/background-loc/services/bl.service';\nimport { AddWorkRequestService } from '../../../work-request/service/add-work-request.services';\nimport { BookingService } from 'src/app/ui/booking/services/booking.services';\nimport html2canvas from 'html2canvas';\nimport { Enums } from 'src/app/model/enums.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\n\n@Component({\n  selector: 'app-sla-escalated-summary-reports',\n  templateUrl: './sla-escalated-summary-reports.component.html',\n  styleUrls: ['./sla-escalated-summary-reports.component.scss'],\n  providers: [MessageService]\n})\nexport class SlaEscalatedSummaryReportsComponent implements OnInit {\n\n  filterPanel!: UntypedFormGroup;\n  allSitesData: any[] = [];\n  enumBL: BuildingFilterInputDTO[] = [];\n  enumAllBl: BuildingFilterInputDTO[] = [];\n  enumFL: FloorFilterInputDTO[] = [];\n  enumRM: BuildingFilterInput[] = [];\n  enumAllFL: FloorFilterInputDTO[] = [];\n  allRmDdata: any[] = [];\n  rm_data: any[] = [];\n  data: any;\n  options: any;\n  compId: number = 1;\n  chartType: String = 'pie';\n  allRequestList: any[] = [];\n  esctdResponseData: any[] = [];\n  esctdCompleteData: any[] = [];\n  esctdCompleteAndResponseData: any[] = [];\n  noEsctdData: any[] = [];\n  displayData: any[] = [];\n  labels: any[] = ['Escalated For Response', 'Escalated For Complete', 'Escalated For Response and Complete', 'Not Escalated'];\n  isShowDialog: boolean = false;\n  isShowGrid: boolean = false;\n  //isShowCharts: boolean = false;\n  esctdGridData: any[] = [];\n  chartData: any[] = [];\n  chartImg: any[] = [];\n  enumList: Enums[] = [];\n  enumClonedList: Enums[] = [];\n  enumWr: Enums[] = [];\n  enumStatus: Enums[] = [];\n  title: any;\n  viewForEscalation: boolean = true;\n  displayTypeData: any = [\n    { \"id\": 1, \"lable\": 'Pie Chart', \"value\": \"pie\" },\n    { \"id\": 2, \"lable\": 'Bar Chart', \"value\": \"bar\" },\n    // { \"id\": 2, \"lable\": 'Doughnut', \"value\": \"doughnut\" },\n    { \"id\": 4, \"lable\": 'Grid', \"value\": \"grid\" },\n  ]\n  pieChartData: any[] = [];\n  dynamicColors: any[] = [];\n  customScheme = {\n    domain: ['#FF0000', '#00FF00', '#0000FF', '#FFFF00'] // define your custom colors here\n  };\n  showRequestsTypeList:any[] = [{label:\"Preventive Maintenance\",value:\"ppm\"},\n                                {label:\"Facilities Helpdesk\",value:\"facilities\"},\n                                {label:\"All\",value:\"all\"}]\n  @ViewChild('chartContainer', { static: false }) chartContainer!: ElementRef;\n  @Input()showType:string = \"facilities\";\n  useTabletProtrait = false;\n  useTabletLandscape = false;\n  pieChartView:any[]=[1000, 500];\n  limitBl: number = 0;\n  offsetBl: number = 0;\n  limitFl: number = 0;\n  offsetFl: number = 0;\n  filterCriteria: any = {\n    fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n  };\n  selectedBl: any = {};\n  selectedFl: any = {};\n  scrollLimit:number = UtilConstant.SCROLL_LIMIT;\n  constructor(\n    private messageService: MessageService,\n    private blService: BuildingService,\n    private formBuilder: UntypedFormBuilder,\n    private datePipe: DatePipe,\n    private wrServ: AddWorkRequestService,\n    private bookingSrv: BookingService,\n    private enumsrv: EnumService,\n    private bps : BreakpointService\n  ) {\n\n    this.filterPanel = this.formBuilder.group({\n      siteId: [null],\n      blId: [null],\n      flId: [null],\n      dateRequestedFrom: [null],\n      dateRequestedTo: [null],\n      chartType: ['bar'],\n      showType : [this.showType]\n    });\n  }\n\n  ngOnInit() {\n    this.bps.register(this);\n    this.viewForEscalation = true;\n    var date = new Date();\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    this.loadEnums();\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        dateRequestedFrom: firstDay,\n        dateRequestedTo: lastDay,\n        showType: this.showType\n      });\n      this.onSearch();\n    });\n  }\n\n  notify(): void {\n    this.useTabletProtrait = BreakpointService.useTabletProtrait;\n    this.useTabletLandscape = BreakpointService.useTabletLandscape;\n    this.updatePieChartView();\n  }\n\n  onSearch() {\n    const filterData = {\n      dateRequestedFrom: this.datePipe.transform(this.filterPanel.controls.dateRequestedFrom.value, \"yyyy-MM-dd\"),\n      dateRequestedTo: this.datePipe.transform(this.filterPanel.controls.dateRequestedTo.value, \"yyyy-MM-dd\"),\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      showRequestType:this.filterPanel.controls.showType.value,\n    }\n    this.loadRecords(filterData);\n    this.chartType = this.filterPanel.controls.chartType.value;\n    this.updatePieChartView();\n  }\n\n  loadRecords(filterData: any) {\n    this.allRequestList = [];\n    this.esctdResponseData = [];\n    this.esctdCompleteData = [];\n    this.esctdCompleteAndResponseData = [];\n    this.noEsctdData = [];\n    this.wrServ.getAllWrByFilter(filterData).subscribe((res: any) => {\n      this.allRequestList = res.map((each: any) => {\n        return {\n          ...each,\n          formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n          fromatedDateToRespond: each.escDateResponded ? this.datePipe.transform(each.escDateResponded, 'dd MMM yyyy') + \" \" + this.convertToDisplayTime(each.escTimeResponded) : '',\n          formatedDateResponded: each.dateResponded ? this.datePipe.transform(each.dateResponded, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeResponded) : '',\n          formatedDateToComplete: each.escDateCompleted ? this.datePipe.transform(each.escDateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.escTimeCompleted) : '',\n          formatedDateCompleted: each.dateCompleted ? this.datePipe.transform(each.dateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeCompleted) : '',\n        }\n      });\n      const currentDate = new Date(); // Assuming the current date is obtained correctly\n      this.allRequestList.forEach((item) => {\n        const { dateResponded, escDateResponded, dateCompleted, escDateCompleted, timeResponded, timeCompleted, escTimeResponded, escTimeCompleted, status } = item;\n\n        const isEscalatedForResponse =\n          (dateResponded && new Date(dateResponded + 'T' + timeResponded).getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime()) ||\n          (!dateResponded && currentDate.getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime());\n\n        const isEscalatedForComplete =\n          (dateCompleted && new Date(dateCompleted + 'T' + timeCompleted).getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime()) ||\n          (!dateCompleted && currentDate.getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime());\n\n        const statusEnum = this.getEnumById(status);\n\n        if (isEscalatedForResponse && !isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n          this.esctdResponseData.push(item);\n        }\n\n        if (isEscalatedForComplete && !isEscalatedForResponse && statusEnum !== \"Cancelled\" && statusEnum !== \"Rejected\") {\n          this.esctdCompleteData.push(item);\n        }\n\n        if (isEscalatedForResponse && isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n          this.esctdCompleteAndResponseData.push(item);\n        }\n\n        if (!isEscalatedForResponse && !isEscalatedForComplete) {\n          this.noEsctdData.push(item);\n        }\n      });\n      this.chartData = [];\n      this.chartData = [this.esctdResponseData.length, this.esctdCompleteData.length, this.esctdCompleteAndResponseData.length, this.noEsctdData.length];\n      this.setChartData(this.chartData);\n      this.setPieChartData(this.chartData);\n      this.setGridData();\n    })\n\n  }\n\n  isWhiteColorShade(color: any) {\n    // Extract RGB values from the color string\n    const rgbValues = color.match(/\\d+/g);\n    const r = parseInt(rgbValues[0]);\n    const g = parseInt(rgbValues[1]);\n    const b = parseInt(rgbValues[2]);\n\n    // Check if all RGB values are close to 255 (white)\n    const threshold = 50; // Adjust this threshold as needed\n    const average = (r + g + b) / 3;\n    return average > threshold;\n  }\n\n  setChartData(data: any) {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue('--text-color');\n    this.dynamicColors = [];\n    for (let i = 0; i < this.labels.length; i++) {\n      let color = '';\n      do {\n        color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      } while (color === 'rgba(255, 255, 255, 1)' || this.isWhiteColorShade(color)) { // Regenerate color if it is white\n        color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      };\n      this.dynamicColors.push(color);\n    }\n    this.customScheme = { domain: [...this.dynamicColors] }\n    this.data = {\n      labels: this.labels,\n      datasets: [\n        {\n          label: 'Requests',\n          data: data,\n          backgroundColor: this.dynamicColors,\n          borderColor: this.dynamicColors,\n          borderWidth: 1\n        },\n\n      ]\n    };\n\n    if (this.chartType === 'bar') {\n      this.setBarChartOptions();\n    } else {\n      this.options = {\n        legend: {\n          position: 'right',\n          labels: {\n            usePointStyle: true,\n            generateLabels: (chart: any) => {\n              const data = chart.data;\n              if (data.labels.length && data.datasets.length) {\n                return data.labels.map((label: any, i: number) => {\n                  const dataset = data.datasets[0];\n                  const meta = chart.getDatasetMeta(0);\n                  const style = meta.controller.getStyle(i);\n\n                  const count = dataset.data[i];\n\n                  return {\n                    text: `${label}: ${count}`,\n                    fillStyle: style.backgroundColor,\n                    hidden: isNaN(count) || meta.data[i].hidden,\n                    index: i\n                  };\n                });\n              }\n              return [];\n            }\n          },\n         \n        },\n        elements: {\n          arc: {\n            borderWidth: 1,\n            borderColor: '#fff'\n          }\n        }\n      };\n\n\n    }\n  }\n\n  onSelectBlCode($event: any) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        flId: null,\n      });\n    }, 0);\n    if ($event.blId != null && $event.blId != '') {\n      this.selectedBl = $event;\n      this.selectedFl = {};\n    } else {\n      this.selectedBl = {};\n      this.selectedFl = {};\n    }\n  }\n\n  onSelectFlCode($event: any) {\n    if ($event.flId != null && $event.flId != '') {\n      this.selectedFl = $event;\n      const blData: any = {\n        blId: $event.blId,\n        blNameString: $event.blNameString,\n        site: null\n      }\n      this.selectedBl = blData;\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId,\n        });\n      }, 10);\n    }\n  }\n\n  onClear() {\n    this.selectedBl = {};\n    this.selectedFl = {};\n    this.isShowGrid = false;\n    this.filterPanel.patchValue({\n      siteId: null,\n      blId: null,\n      flId: null,\n      dateRequestedFrom: null,\n      dateRequestedTo: null,\n      chartType: this.displayTypeData[0].value,\n      showType: this.showType\n    });\n  }\n\n  onClick(event: any) {\n    this.isShowDialog = false;\n    this.displayData = [];\n    let index = event.element ? event.element.index : null;\n    let label = index >= 0 ? this.labels[index] : event.name;\n    if (label === 'Escalated For Response') {\n      this.displayData = this.esctdResponseData;\n    } else if (label === 'Escalated For Complete') {\n      this.displayData = this.esctdCompleteData;\n    } else if (label === 'Not Escalated') {\n      this.displayData = this.noEsctdData;\n    } else {\n      this.displayData = this.esctdCompleteAndResponseData;\n    }\n    this.isShowDialog = true;\n  }\n\n  onSelectDisplayType(event: any) {\n    this.setChartData(this.chartData);\n    this.isShowGrid = false;\n    this.chartType = event.value;\n    if (this.chartType === 'pie' || this.chartType === 'doughnut') {\n      this.setOtherChartOptions();\n    } else if (this.chartType === 'bar') {\n      this.setBarChartOptions();\n    } else {\n      this.setGridData();\n      this.isShowGrid = true;\n    }\n    this.updatePieChartView();\n  }\n\n  updatePieChartView(){\n    if (this.chartType === 'pie' || this.chartType === 'doughnut') {\n      if(this.useTabletProtrait){\n        this.pieChartView=[300,250];\n      }else if(this.useTabletLandscape){\n        this.pieChartView=[750,400];\n      }else{\n        this.pieChartView=[1000,500];\n      }\n    } \n  }\n\n  setGridData() {\n    this.esctdGridData = [{ label: 'Escalated For Response', reqCount: this.esctdResponseData.length }\n      , { label: 'Escalated For Complete', reqCount: this.esctdCompleteData.length },\n    { label: 'Escalated For Response and Complete', reqCount: this.esctdCompleteAndResponseData.length },\n    { label: 'Not Escalated', reqCount: this.noEsctdData.length }]\n  }\n\n  onRowSelect(label: any) {\n    this.isShowDialog = false;\n    if (label === 'Escalated For Response') {\n      this.displayData = this.esctdResponseData;\n    } else if (label === 'Escalated For Complete') {\n      this.displayData = this.esctdCompleteData;\n    } else if (label === 'Not Escalated') {\n      this.displayData = this.noEsctdData;\n    } else {\n      this.displayData = this.esctdCompleteAndResponseData;\n    }\n    this.isShowDialog = true;\n  }\n\n  exportChartToPDF() {\n    const htmlRef :HTMLElement= this.chartContainer.nativeElement;\n    html2canvas(htmlRef).then((canvas: any) => {\n      const imgData = canvas.toDataURL('image/png');\n      this.chartImg = [];\n      this.chartImg.push(imgData);\n      this.printPDF();\n    });\n  }\n\n  printPDF() {\n    var reportDetails: any = {\n\n      chartImg: this.chartImg,\n      title: 'SLA Escalated Summary Reports',\n    }\n\n    this.bookingSrv.printPdf(reportDetails).subscribe((res: any) => {\n      if (res != null) {\n        this.messageService.add({ key: 'reportBookingSer', severity: 'success', summary: 'PDF Created', detail: 'PDF created successfully' });\n        var file = new Blob([res], { type: 'application/pdf' });\n        var fileURL = URL.createObjectURL(file);\n        window.open(fileURL);\n      }\n    })\n  }\n\n  setBarChartOptions() {\n    this.options = {\n      title: {\n        display: false,\n        text: 'Bar Chart',\n        fontSize: 18\n      },\n      legend: {\n        display: false,\n      },\n      scales: {\n        x: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Escalated Type',\n            fontStyle: 'bold',\n          },\n          grid: {\n            display: false,\n            drawOnChartArea: false\n          }\n        },\n        y: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Request Count',\n            fontStyle: 'bold',\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 5,\n          },\n          grid: {\n            display: false,\n            drawOnChartArea: false\n          }\n        },\n      },\n      tooltips: {\n        enabled: true,\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (tooltipItem: any) {\n            return \"Requests: \" + tooltipItem.formattedValue;\n          }\n        }\n      },\n      responsive: true,\n      animation: {\n        duration: 1000,\n        easing: 'easeOutBounce'\n      },\n      plugins:{\n        legend:{\n          display:false\n        }\n      }\n    };\n\n  }\n\n  setOtherChartOptions() {\n    this.options.scales = {};\n    this.options.legend = {\n      position: 'right',\n      labels: {\n        generateLabels: (chart: any) => {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label: any, i: number) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n\n              return {\n                text: `${label}: ${data.datasets[0].data[i]}`,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: isNaN(data.datasets[0].data[i]) || meta.data[i].hidden,\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      }\n    }\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: Enums[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t =>  t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n\n      }\n    );\n  }\n\n  getEnumById(id: any) {\n    return this.enumStatus.find((t: any) => t.id === id)?.enumValue;\n  };\n\n  convertToDisplayTime(value: any) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n\n  setPieChartData(chartData: any[]) {\n    this.pieChartData = [];\n    this.pieChartData.push({label: this.labels[0], name: this.labels[0] + \" \" + chartData[0], value: chartData[0] });\n    this.pieChartData.push({label: this.labels[1], name: this.labels[1] + \" \" + chartData[1], value: chartData[1] });\n    this.pieChartData.push({label: this.labels[2], name: this.labels[2] + \" \" + chartData[2], value: chartData[2] });\n    this.pieChartData.push({label: this.labels[3], name: this.labels[3] + \" \" + chartData[3], value: chartData[3] });\n  }\n\n  selectChartData(event: any) {\n    const isChartSelected = event.hasOwnProperty('name');\n    // Stop event propagation if the legend is selected\n    if (!isChartSelected) {\n      // event.preventDefault();\n      // event.stopPropagation();\n      return\n    } else {\n      this.isShowDialog = false;\n      this.displayData = [];\n      let label = event.name;\n      if (label === `${this.labels[0]} ${this.chartData[0]}`) {\n        this.displayData = this.esctdResponseData;\n      } else if (label === `${this.labels[1]} ${this.chartData[1]}`) {\n        this.displayData = this.esctdCompleteData;\n      } else if (label === `${this.labels[2]} ${this.chartData[2]}`) {\n        this.displayData = this.esctdCompleteAndResponseData;\n      } else if (label === `${this.labels[3]} ${this.chartData[3]}`) {\n        this.displayData = this.noEsctdData;\n      }\n      this.isShowDialog = true;\n    }\n  }\n\n  ngOnDestroy() {\n    this.bps.unregister(this);\n  }\n\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blService.getALLBuildingByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    })\n  }\n\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blService.getALLFloorByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumFL = res;\n      this.updateFlList(this.selectedFl);\n    })\n  }\n\n  searchBl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"blName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndBl();\n  }\n\n  searchFl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"flName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndFl();\n  }\n\n  updateBlList(blData: any) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  updateFlList(flData: any) {\n    if (flData.flId) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n    }\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n    };\n    this.scrollToEndBl();\n  }\n\n  onOpenFl() {\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    if (this.selectedBl.blId) {\n      this.filterCriteria = { fieldName: \"bl.blId\", value: this.selectedBl.blId, matchMode: \"equals\", limit: 0, offset: 0 }\n    } else {\n      this.filterCriteria = {\n        fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n      };\n    }\n    this.scrollToEndFl();\n  }\n\n}","<div class=\"card\" style=\"height: 90vh;\">\n    <p-panel header=\"SLA Summary\" [toggleable]=\"true\">\n        <form [formGroup]=\"filterPanel\">\n            <table width=\"100%\" *ngIf=\"!useTabletProtrait && !useTabletLandscape\">\n                <tr>\n                    <td style=\"width:10%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>Requested From</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedFrom\"\n                                        formControlName=\"dateRequestedFrom\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:10%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>Requested To</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedTo\"\n                                        formControlName=\"dateRequestedTo\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:15%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Building </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\" [searchable]=\"true\"\n                                bindLabel=\"blNameString\" bindValue=\"blId\" (change)=\"onSelectBlCode($event)\" placeholder=\"Make a selection\"\n                                class=\"ng-select-dropdown\" (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\"(open)=\"onOpenBl()\">\n                            </ng-select>\n                        </div>\n\n                    </td>\n                    <td style=\"width:20%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Floor</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\" [searchable]=\"true\"\n                                bindLabel=\"flNameString\" bindValue=\"flId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                                (change)=\"onSelectFlCode($event)\" (scrollToEnd)=\"scrollToEndFl()\" (search)=\"searchFl($event)\"\n                                (open)=\"onOpenFl()\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:20%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Requests Type </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"showRequestsTypeList\"\n                                formControlName=\"showType\"  [searchable]=\"true\"\n                                bindLabel=\"label\" bindValue=\"value\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:10%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Display Type</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"false\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"displayTypeData\"\n                                formControlName=\"chartType\" bindLabel=\"lable\" bindValue=\"value\"\n                                (change)=\"onSelectDisplayType($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:15%; padding-top:10px;\">\n                        <button (click)=\"onSearch()\" pButton pRipple label=\"Search\" [disabled]=\"!filterPanel.valid\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"width: 60px;  margin-left: 5px; margin-right: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <p-button icon=\"pi pi-file-pdf\" (click)=\"exportChartToPDF()\" [disabled]=\"isShowGrid\" matTooltip=\"Generate PDF\"\n                            matTooltipPosition=\"below\" styleClass=\"p-button-raised p-button-danger\">\n                        </p-button>\n                    </td>\n                </tr>\n            </table>\n            <table width=\"100%\" *ngIf=\"useTabletProtrait\">\n                <tr>\n                    <td style=\"width:30%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>Requested From</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedFrom\"\n                                        formControlName=\"dateRequestedFrom\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:30%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>Requested To</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedTo\"\n                                        formControlName=\"dateRequestedTo\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:30%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Building </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\" [searchable]=\"true\"\n                                bindLabel=\"blNameString\" bindValue=\"blId\" (change)=\"onSelectBlCode($event)\" placeholder=\"Make a selection\"\n                                class=\"ng-select-dropdown\" (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\"(open)=\"onOpenBl()\">\n                            </ng-select>\n                        </div>\n\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"width:30%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Floor</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\" [searchable]=\"true\"\n                                bindLabel=\"flNameString\" bindValue=\"flId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                                (change)=\"onSelectFlCode($event)\" (scrollToEnd)=\"scrollToEndFl()\" (search)=\"searchFl($event)\"\n                                (open)=\"onOpenFl()\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:30%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Requests Type </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"showRequestsTypeList\"\n                                formControlName=\"showType\"  [searchable]=\"true\"\n                                bindLabel=\"label\" bindValue=\"value\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:30%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Display Type</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"false\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"displayTypeData\"\n                                formControlName=\"chartType\" bindLabel=\"lable\" bindValue=\"value\"\n                                (change)=\"onSelectDisplayType($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"width:30%; padding-top:10px;\">\n                        <button (click)=\"onSearch()\" pButton pRipple label=\"Search\" [disabled]=\"!filterPanel.valid\"\n                            style=\"margin-left:2px;\"\n                            class=\"p-button-primary p-button-sm pull right filter-panel-button\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"margin-left: 2px; margin-right: 2px;\"\n                            class=\"p-button-primary p-button-sm pull right filter-panel-button\"></button>\n                        <p-button icon=\"pi pi-file-pdf\" (click)=\"exportChartToPDF()\" [disabled]=\"isShowGrid\" matTooltip=\"Generate PDF\"\n                            matTooltipPosition=\"below\" styleClass=\"p-button-raised p-button-danger\">\n                        </p-button>\n                    </td>\n                </tr>\n            </table>\n            <table width=\"100%\" *ngIf=\"useTabletLandscape\">\n                <tr>\n                    <td style=\"width:13%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>Requested From</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedFrom\"\n                                        formControlName=\"dateRequestedFrom\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:13%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>Requested To</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedTo\"\n                                        formControlName=\"dateRequestedTo\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:13%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Building </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\" [searchable]=\"true\"\n                                bindLabel=\"blNameString\" bindValue=\"blId\" (change)=\"onSelectBlCode($event)\" placeholder=\"Make a selection\"\n                                class=\"ng-select-dropdown\" (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\"(open)=\"onOpenBl()\">\n                            </ng-select>\n                        </div>\n\n                    </td>\n                    <td style=\"width:13%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Floor</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\" [searchable]=\"true\"\n                                bindLabel=\"flNameString\" bindValue=\"flId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                                (change)=\"onSelectFlCode($event)\" (scrollToEnd)=\"scrollToEndFl()\" (search)=\"searchFl($event)\"\n                                (open)=\"onOpenFl()\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:13%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Requests Type </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"showRequestsTypeList\"\n                                formControlName=\"showType\"  [searchable]=\"true\"\n                                bindLabel=\"label\" bindValue=\"value\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:13%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Display Type</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"false\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"displayTypeData\"\n                                formControlName=\"chartType\" bindLabel=\"lable\" bindValue=\"value\"\n                                (change)=\"onSelectDisplayType($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:22%; padding-top:10px;\">\n                        <button (click)=\"onSearch()\" pButton pRipple label=\"Search\" [disabled]=\"!filterPanel.valid\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"width: 60px;  margin-left: 5px; margin-right: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <p-button icon=\"pi pi-file-pdf\" (click)=\"exportChartToPDF()\" [disabled]=\"isShowGrid\" matTooltip=\"Generate PDF\"\n                            matTooltipPosition=\"below\" styleClass=\"p-button-raised p-button-danger\">\n                        </p-button>\n                    </td>\n                </tr>\n            </table>\n        </form>\n\n    </p-panel>\n    <div class=\"p-d-flex\" >\n        <div class=\"card\" style=\"margin-top:3px\" *ngIf=\"chartType == 'bar'\" #chartContainer>\n            <p-chart #barChart [type]=\"chartType\" [height]=\"540\" [data]=\"data\" [options]=\"options\"\n                (onDataSelect)=\"onClick($event)\">\n                <ng-template let-dataItem pTemplate=\"dataLabel\">\n                    {{ dataItem.label }} ({{ dataItem.value }})\n                </ng-template></p-chart>\n        </div>\n        <div class=\"card\" style=\"margin-top:3px\" *ngIf=\"chartType == 'pie' || chartType == 'doughnut'\" #chartContainer>\n            <div>\n                <ngx-charts-pie-chart\n                 [results]=\"pieChartData\" \n                 [view]=\"pieChartView\" \n                 [legend]=\"true\" \n                 [labels]=\"false\"\n                 [doughnut]=\"chartType == 'doughnut'\" \n                 [scheme]=\"customScheme\"\n                 [legendTitle]=\"''\"\n                 [tooltipDisabled]=\"false\"\n                 (select)=\"selectChartData($event)\"\n                 >\n                </ngx-charts-pie-chart>\n            </div>\n\n        </div>\n        <!-- <div class=\"card\" style=\"margin-top:3px\" *ngIf=\"chartType == 'doughnut'\" #chartContainer>\n            <p-chart #doughnutChart [type]=\"chartType\" [height]=\"540\" [data]=\"data\" [options]=\"options\"\n                (onDataSelect)=\"onClick($event)\">\n                <ng-template let-dataItem pTemplate=\"dataLabel\">\n                    {{ dataItem.label }} ({{ dataItem.value }})\n                </ng-template></p-chart>\n        </div> -->\n    </div>\n\n    <!-- show grid -->\n    <div class=\"card\" *ngIf=\"isShowGrid\">\n        <p-table [value]=\"esctdGridData\" styleClass=\"p-datatable-customers p-datatable-gridlines\" [paginator]=\"false\"\n            selectionMode=\"single\">\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"label\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Escalated For</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"label\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"label\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"reqCount\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\"> Request Count</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"reqCount\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"reqCount\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-record>\n                <tr [pSelectableRow]=\"record\" (click)=\"onRowSelect(record.label)\">\n                    <td>{{record.label}}</td>\n                    <td>{{record.reqCount}}</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-columns>\n                <tr>\n                    <td [attr.colspan]=\"esctdGridData.length\">\n                        No records found.\n                    </td>\n                </tr>\n            </ng-template>\n        </p-table>\n    </div>\n</div>\n<!-- requests details -->\n<p-dialog [(visible)]=\"isShowDialog\" [modal]=\"true\" [style]=\"{ 'max-width': '70vw' }\" [maximizable]=\"true\"\n    [draggable]=\"false\" [resizable]=\"false\" styleClass=\"dark-panel\">\n    <ng-template pTemplate=\"header\">\n        <h2> Requests List</h2>\n    </ng-template>\n    <ng-template pTemplate=\"body\">\n        <app-add-table [data]=\"displayData\" [isEscalatedData]=\"viewForEscalation\"></app-add-table>\n    </ng-template>\n</p-dialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}