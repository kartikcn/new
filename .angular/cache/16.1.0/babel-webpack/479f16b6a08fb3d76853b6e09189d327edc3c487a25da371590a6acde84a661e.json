{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../providers/request-ither-cost-provider\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../services/request-other-cost-services\";\nimport * as i4 from \"src/app/services/auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"primeng/panel\";\nimport * as i10 from \"primeng/confirmdialog\";\nfunction RequestOtherCostComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function RequestOtherCostComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAdd());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isReadOnly);\n  }\n}\nfunction RequestOtherCostComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 11);\n    i0.ɵɵelementStart(2, \"th\", 12)(3, \"div\", 13)(4, \"div\", 14)(5, \"p\", 15);\n    i0.ɵɵtext(6, \"Cost Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 16);\n    i0.ɵɵelement(8, \"p-sortIcon\", 17)(9, \"p-columnFilter\", 18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 19)(11, \"div\", 13)(12, \"div\", 14)(13, \"p\", 15);\n    i0.ɵɵtext(14, \"Estimated Cost\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 16);\n    i0.ɵɵelement(16, \"p-sortIcon\", 20)(17, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 22)(19, \"div\", 13)(20, \"div\", 14)(21, \"p\", 15);\n    i0.ɵɵtext(22, \"Actual Cost\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 16);\n    i0.ɵɵelement(24, \"p-sortIcon\", 23)(25, \"p-columnFilter\", 24);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\", 25)(27, \"div\", 13)(28, \"div\", 14)(29, \"p\", 15);\n    i0.ɵɵtext(30, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 16);\n    i0.ɵɵelement(32, \"p-sortIcon\", 26)(33, \"p-columnFilter\", 27);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"th\", 28)(35, \"div\", 13)(36, \"div\", 14)(37, \"p\", 15);\n    i0.ɵɵtext(38, \"Entered By\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 16);\n    i0.ɵɵelement(40, \"p-sortIcon\", 29)(41, \"p-columnFilter\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(42, \"th\", 31)(43, \"div\", 13)(44, \"div\", 14)(45, \"p\", 15);\n    i0.ɵɵtext(46, \"Date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(47, \"div\", 16);\n    i0.ɵɵelement(48, \"p-sortIcon\", 32)(49, \"p-columnFilter\", 33);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(50, \"th\", 34)(51, \"div\", 13)(52, \"div\", 14)(53, \"p\", 15);\n    i0.ɵɵtext(54, \"Time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(55, \"div\", 16);\n    i0.ɵɵelement(56, \"p-sortIcon\", 35)(57, \"p-columnFilter\", 36);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction RequestOtherCostComponent_ng_template_5_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function RequestOtherCostComponent_ng_template_5_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const cost_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onEdit(cost_r6.requestOtherCostId));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cost_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r7.isSupervisor && cost_r6.enteredBy != ctx_r7.loggedIdUserName);\n  }\n}\nfunction RequestOtherCostComponent_ng_template_5_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function RequestOtherCostComponent_ng_template_5_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const cost_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onView(cost_r6.requestOtherCostId));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestOtherCostComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 37)(1, \"td\", 11);\n    i0.ɵɵtemplate(2, RequestOtherCostComponent_ng_template_5_button_2_Template, 1, 1, \"button\", 38);\n    i0.ɵɵtemplate(3, RequestOtherCostComponent_ng_template_5_button_3_Template, 1, 0, \"button\", 39);\n    i0.ɵɵelementStart(4, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function RequestOtherCostComponent_ng_template_5_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const cost_r6 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onDelete(cost_r6.requestOtherCostId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cost_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", cost_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.isSupervisor && cost_r6.enteredBy != ctx_r2.loggedIdUserName || ctx_r2.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cost_r6.costTypeCostType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cost_r6.estimatedCost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cost_r6.actualCost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cost_r6.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cost_r6.userUserName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(17, 11, cost_r6.dateEntered, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.convertToDisplayTime(cost_r6.timeEntered));\n  }\n}\nfunction RequestOtherCostComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 43);\n    i0.ɵɵtext(2, \" No Records Found \");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 20];\n};\nexport let RequestOtherCostComponent = /*#__PURE__*/(() => {\n  class RequestOtherCostComponent {\n    constructor(requestOtherCostDialogueProvider, messageService, requestOtherCostService, confirmationService, authService, datePipe) {\n      this.requestOtherCostDialogueProvider = requestOtherCostDialogueProvider;\n      this.messageService = messageService;\n      this.requestOtherCostService = requestOtherCostService;\n      this.confirmationService = confirmationService;\n      this.authService = authService;\n      this.datePipe = datePipe;\n      this.requestCostData = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.requestId = 0;\n      this.isRequestor = false;\n      this.isApprover = false;\n      this.isTechnician = false;\n      this.isSupervisor = false;\n      this.isReadOnly = false;\n    }\n    ngOnInit() {\n      this.loggedIdUserName = this.authService.getLoggedInUserId();\n    }\n    loadRecords(id) {\n      this.requestOtherCostService.getAllByRquestId(id).subscribe(res => {\n        if (res.status != 202) {\n          this.requestCostData = res.map(each => {\n            return {\n              ...each,\n              formatedDateEntered: this.datePipe.transform(each.dateEntered, 'dd MMMM yyyy')\n            };\n          });\n        } else {\n          this.requestCostData = [];\n        }\n      });\n    }\n    onAdd() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        requestId: this.requestId,\n        isView: false,\n        showActualCost: false,\n        userChecks: {\n          isRequestor: this.isRequestor,\n          isApprover: this.isApprover,\n          isSupervisor: this.isSupervisor,\n          isTechnician: this.isTechnician\n        }\n      };\n      this.requestOtherCostDialogueProvider.openDialog(dialogConfig);\n      this.requestOtherCostDialogueProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'requestPart',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords(result.requestId);\n        }\n      });\n    }\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    onEdit(id) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        requestOtherCostId: id,\n        requestId: this.requestId,\n        isEdit: true,\n        isView: false,\n        newRecord: false,\n        showActualCost: true,\n        userChecks: {\n          isRequestor: this.isRequestor,\n          isApprover: this.isApprover,\n          isSupervisor: this.isSupervisor,\n          isTechnician: this.isTechnician\n        }\n      };\n      this.requestOtherCostDialogueProvider.openDialog(dialogConfig);\n      this.requestOtherCostDialogueProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'requestPart',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords(result.requestId);\n        }\n      });\n    }\n    onDelete(requestPartId) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deleteRequestoOtherCost(requestPartId);\n        },\n        key: \"grid\"\n      });\n    }\n    deleteRequestoOtherCost(requestPartId) {\n      this.requestOtherCostService.deleteById(requestPartId).subscribe(res => {\n        this.messageService.clear();\n        if (res.text === \"could not execute statement\" && res.code == 409) {\n          this.messageService.add({\n            key: 'requestPartwarning',\n            severity: 'warn',\n            summary: 'Can not delete the record',\n            detail: 'The part is associated with other records. Please change the part before deleting the record.'\n          });\n        } else {\n          this.messageService.add({\n            key: 'requestPart',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadRecords(this.requestId);\n        }\n      }, error => {});\n    }\n    onView(id) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        requestOtherCostId: id,\n        requestId: this.requestId,\n        isEdit: true,\n        isView: true,\n        newRecord: false,\n        userChecks: {\n          isRequestor: this.isRequestor,\n          isApprover: this.isApprover,\n          isSupervisor: this.isSupervisor,\n          isTechnician: this.isTechnician\n        }\n      };\n      this.requestOtherCostDialogueProvider.openDialog(dialogConfig);\n      this.requestOtherCostDialogueProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'requestPart',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords(result.requestId);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function RequestOtherCostComponent_Factory(t) {\n      return new (t || RequestOtherCostComponent)(i0.ɵɵdirectiveInject(i1.RequestOtherCostDialogueProvider), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.RequestOtherCostService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.DatePipe));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RequestOtherCostComponent,\n      selectors: [[\"app-request-other-cost\"]],\n      inputs: {\n        isReadOnly: \"isReadOnly\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 10,\n      vars: 7,\n      consts: [[\"header\", \"Cost Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"130px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"scrollable\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"key\", \"grid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"key\", \"requestPart\", \"position\", \"top-right\"], [\"key\", \"requestPartwarning\", \"position\", \"top-center\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"disabled\", \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"costTypeCostType\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"costTypeCostType\"], [\"type\", \"text\", \"field\", \"costTypeCostType\", \"display\", \"menu\"], [\"pSortableColumn\", \"estimatedCost\"], [\"field\", \"estimatedCost\"], [\"type\", \"text\", \"field\", \"estimatedCost\", \"display\", \"menu\"], [\"pSortableColumn\", \"actualCost\"], [\"field\", \"actualCost\"], [\"type\", \"text\", \"field\", \"actualCost\", \"display\", \"menu\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [\"pSortableColumn\", \"userUserName\"], [\"field\", \"userUserName\"], [\"type\", \"text\", \"field\", \"userUserName\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateEntered\"], [\"field\", \"formatedDateEntered\"], [\"type\", \"text\", \"field\", \"formatedDateEntered\", \"display\", \"menu\"], [\"pSortableColumn\", \"timeEntered\"], [\"field\", \"timeEntered\"], [\"type\", \"text\", \"field\", \"timeEntered\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"class\", \"p-button-text p-button-rounded\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"class\", \"p-button-text p-button-rounded\", 3, \"click\", 4, \"ngIf\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"disabled\", \"click\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"disabled\", \"click\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [\"colspan\", \"8\", 2, \"text-align\", \"center\"]],\n      template: function RequestOtherCostComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0);\n          i0.ɵɵtemplate(1, RequestOtherCostComponent_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"p-table\", 3);\n          i0.ɵɵtemplate(4, RequestOtherCostComponent_ng_template_4_Template, 58, 0, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, RequestOtherCostComponent_ng_template_5_Template, 20, 14, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, RequestOtherCostComponent_ng_template_6_Template, 3, 0, \"ng-template\", 6);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(7, \"p-confirmDialog\", 7)(8, \"p-toast\", 8)(9, \"p-toast\", 9);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"value\", ctx.requestCostData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(6, _c0))(\"scrollable\", true);\n        }\n      },\n      dependencies: [i5.NgIf, i2.PrimeTemplate, i6.Table, i6.SortableColumn, i6.SelectableRow, i6.SortIcon, i6.ColumnFilter, i7.ButtonDirective, i8.Toast, i9.Panel, i10.ConfirmDialog, i5.DatePipe]\n    });\n  }\n  return RequestOtherCostComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}