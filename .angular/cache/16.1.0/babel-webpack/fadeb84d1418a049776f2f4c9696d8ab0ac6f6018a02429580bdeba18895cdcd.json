{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class ArrangementService {\n  constructor(ArrangementSrv, service) {\n    this.ArrangementSrv = ArrangementSrv;\n    this.service = service;\n  }\n  getAllArrangements() {\n    return this.ArrangementSrv.getAll(\"arrangement\", \"getAll\");\n  }\n  getAllArrangementsPaginated(data) {\n    return this.ArrangementSrv.search(\"arrangement\", \"getAllPaginated\", data);\n  }\n  getArrangementByType(id) {\n    return this.service.getSingleById(\"arrangement\", \"getByType\", id);\n  }\n  updateArrangement(data) {\n    return this.ArrangementSrv.add(\"arrangement\", \"save\", data);\n  }\n  checkArrangementTypeExists(data) {\n    return this.service.getSingle(\"arrangement\", \"isExist\", data);\n  }\n  static #_ = this.ɵfac = function ArrangementService_Factory(t) {\n    return new (t || ArrangementService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArrangementService,\n    factory: ArrangementService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ArrangementService","constructor","ArrangementSrv","service","getAllArrangements","getAll","getAllArrangementsPaginated","data","search","getArrangementByType","id","getSingleById","updateArrangement","add","checkArrangementTypeExists","getSingle","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/arrangement/services/arrangement.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { Arrangement } from \"../model/arrangement.model\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ArrangementService{\n    constructor(\n        private ArrangementSrv:DataService<Arrangement>,\n        private service:DataService<any>\n        ){}\n\n    public getAllArrangements():Observable<Arrangement[]>{\n        return this.ArrangementSrv.getAll(\"arrangement\",\"getAll\");\n    }\n\n    public getAllArrangementsPaginated(data:any){\n        return this.ArrangementSrv.search(\"arrangement\",\"getAllPaginated\",data);\n    }\n\n    public getArrangementByType(id:any){\n        return this.service.getSingleById(\"arrangement\",\"getByType\",id)\n    }\n\n    public updateArrangement(data:Arrangement):Observable<Arrangement>{\n        return this.ArrangementSrv.add(\"arrangement\",\"save\",data);\n    }\n\n    public checkArrangementTypeExists(data:any) {\n        return this.service.getSingle(\"arrangement\", \"isExist\", data);\n    }\n}"],"mappings":";;AAUA,OAAM,MAAOA,kBAAkB;EAC3BC,YACYC,cAAuC,EACvCC,OAAwB;IADxB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,OAAO,GAAPA,OAAO;EACb;EAECC,kBAAkBA,CAAA;IACrB,OAAO,IAAI,CAACF,cAAc,CAACG,MAAM,CAAC,aAAa,EAAC,QAAQ,CAAC;EAC7D;EAEOC,2BAA2BA,CAACC,IAAQ;IACvC,OAAO,IAAI,CAACL,cAAc,CAACM,MAAM,CAAC,aAAa,EAAC,iBAAiB,EAACD,IAAI,CAAC;EAC3E;EAEOE,oBAAoBA,CAACC,EAAM;IAC9B,OAAO,IAAI,CAACP,OAAO,CAACQ,aAAa,CAAC,aAAa,EAAC,WAAW,EAACD,EAAE,CAAC;EACnE;EAEOE,iBAAiBA,CAACL,IAAgB;IACrC,OAAO,IAAI,CAACL,cAAc,CAACW,GAAG,CAAC,aAAa,EAAC,MAAM,EAACN,IAAI,CAAC;EAC7D;EAEOO,0BAA0BA,CAACP,IAAQ;IACtC,OAAO,IAAI,CAACJ,OAAO,CAACY,SAAS,CAAC,aAAa,EAAE,SAAS,EAAER,IAAI,CAAC;EACjE;EAAC,QAAAS,CAAA,G;qBAxBQhB,kBAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBrB,kBAAkB;IAAAsB,OAAA,EAAlBtB,kBAAkB,CAAAuB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}