{"ast":null,"code":"import * as i5$1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i4$2 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i2$2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, Directive, Injectable, Optional, NgZone, ViewChildren, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i7 from 'ng-zorro-antd/button';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport * as i1$2 from 'ng-zorro-antd/cdk/resize-observer';\nimport { NzResizeObserverModule } from 'ng-zorro-antd/cdk/resize-observer';\nimport * as i5 from 'ng-zorro-antd/checkbox';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport * as i1$4 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i4 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownDirective, NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i3$1 from 'ng-zorro-antd/empty';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport * as i1$1 from 'ng-zorro-antd/i18n';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport * as i11 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i2$1 from 'ng-zorro-antd/menu';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport * as i7$1 from 'ng-zorro-antd/pagination';\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\nimport * as i4$1 from 'ng-zorro-antd/radio';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport * as i8$1 from 'ng-zorro-antd/spin';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { __decorate } from 'tslib';\nimport { fromEvent, Subject, ReplaySubject, BehaviorSubject, combineLatest, merge, EMPTY, of } from 'rxjs';\nimport { takeUntil, map, filter, startWith, switchMap, debounceTime, delay, distinctUntilChanged, skip, mergeMap } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport * as i2 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { InputBoolean, arraysEqual, isNil, measureScrollbar } from 'ng-zorro-antd/core/util';\nimport * as i8 from 'ng-zorro-antd/core/transition-patch';\nimport * as i9 from 'ng-zorro-antd/core/wave';\nconst _c0 = [\"*\"];\nfunction NzTableFilterComponent_ng_template_1_Template(rf, ctx) {}\nfunction NzTableFilterComponent_ng_container_2_li_7_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function NzTableFilterComponent_ng_container_2_li_7_label_1_Template_label_ngModelChange_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const f_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.check(f_r4));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const f_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", f_r4.checked);\n  }\n}\nfunction NzTableFilterComponent_ng_container_2_li_7_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function NzTableFilterComponent_ng_container_2_li_7_label_2_Template_label_ngModelChange_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const f_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.check(f_r4));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const f_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", f_r4.checked);\n  }\n}\nfunction NzTableFilterComponent_ng_container_2_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_li_7_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const f_r4 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.check(f_r4));\n    });\n    i0.ɵɵtemplate(1, NzTableFilterComponent_ng_container_2_li_7_label_1_Template, 1, 1, \"label\", 13);\n    i0.ɵɵtemplate(2, NzTableFilterComponent_ng_container_2_li_7_label_2_Template, 1, 1, \"label\", 14);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const f_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"nzSelected\", f_r4.checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.filterMultiple);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.filterMultiple);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(f_r4.text);\n  }\n}\nfunction NzTableFilterComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"nz-filter-trigger\", 3);\n    i0.ɵɵlistener(\"nzVisibleChange\", function NzTableFilterComponent_ng_container_2_Template_nz_filter_trigger_nzVisibleChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onVisibleChange($event));\n    });\n    i0.ɵɵelement(2, \"span\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-dropdown-menu\", null, 5)(5, \"div\", 6)(6, \"ul\", 7);\n    i0.ɵɵtemplate(7, NzTableFilterComponent_ng_container_2_li_7_Template, 5, 4, \"li\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 9)(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.reset());\n    });\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NzTableFilterComponent_ng_container_2_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.confirm());\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(4);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzVisible\", ctx_r1.isVisible)(\"nzActive\", ctx_r1.isChecked)(\"nzDropdownMenu\", _r2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.listOfParsedFilter)(\"ngForTrackBy\", ctx_r1.trackByValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.isChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.locale.filterReset, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.locale.filterConfirm);\n  }\n}\nfunction NzTableSelectionComponent_label_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function NzTableSelectionComponent_label_0_Template_label_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onCheckedChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"ant-table-selection-select-all-custom\", ctx_r0.showRowSelection);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.checked)(\"nzDisabled\", ctx_r0.disabled)(\"nzIndeterminate\", ctx_r0.indeterminate);\n  }\n}\nfunction NzTableSelectionComponent_div_1_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵlistener(\"click\", function NzTableSelectionComponent_div_1_li_6_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const selection_r6 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(selection_r6.onSelect());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const selection_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", selection_r6.text, \" \");\n  }\n}\nfunction NzTableSelectionComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"span\", 4);\n    i0.ɵɵelement(2, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nz-dropdown-menu\", null, 6)(5, \"ul\", 7);\n    i0.ɵɵtemplate(6, NzTableSelectionComponent_div_1_li_6_Template, 2, 1, \"li\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(4);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzDropdownMenu\", _r4);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.listOfSelections);\n  }\n}\nfunction NzTableSortersComponent_ng_template_1_Template(rf, ctx) {}\nfunction NzTableSortersComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r1.sortOrder === \"ascend\");\n  }\n}\nfunction NzTableSortersComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r2.sortOrder === \"descend\");\n  }\n}\nconst _c1 = [\"nzChecked\", \"\"];\nfunction NzTdAddOnComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"nz-row-indent\", 2);\n    i0.ɵɵelementStart(2, \"button\", 3);\n    i0.ɵɵlistener(\"expandChange\", function NzTdAddOnComponent_ng_container_0_Template_button_expandChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onExpandChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"indentSize\", ctx_r0.nzIndentSize);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"expand\", ctx_r0.nzExpand)(\"spaceMode\", !ctx_r0.nzShowExpand);\n  }\n}\nfunction NzTdAddOnComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function NzTdAddOnComponent_label_1_Template_label_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onCheckedChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzDisabled\", ctx_r1.nzDisabled)(\"ngModel\", ctx_r1.nzChecked)(\"nzIndeterminate\", ctx_r1.nzIndeterminate);\n  }\n}\nconst _c2 = [\"nzColumnKey\", \"\"];\nfunction NzThAddOnComponent_nz_table_filter_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-table-filter\", 5);\n    i0.ɵɵlistener(\"filterChange\", function NzThAddOnComponent_nz_table_filter_0_Template_nz_table_filter_filterChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onFilterValueChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(2);\n    const _r3 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"contentTemplate\", _r1)(\"extraTemplate\", _r3)(\"customFilter\", ctx_r0.nzCustomFilter)(\"filterMultiple\", ctx_r0.nzFilterMultiple)(\"listOfFilter\", ctx_r0.nzFilters);\n  }\n}\nfunction NzThAddOnComponent_ng_template_1_ng_template_0_Template(rf, ctx) {}\nfunction NzThAddOnComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzThAddOnComponent_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(6);\n    const _r7 = i0.ɵɵreference(8);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.nzShowSort ? _r5 : _r7);\n  }\n}\nfunction NzThAddOnComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n    i0.ɵɵprojection(1, 1);\n  }\n}\nfunction NzThAddOnComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-sorters\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(8);\n    i0.ɵɵproperty(\"sortOrder\", ctx_r6.sortOrder)(\"sortDirections\", ctx_r6.sortDirections)(\"contentTemplate\", _r7);\n  }\n}\nfunction NzThAddOnComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nconst _c3 = [[[\"\", \"nz-th-extra\", \"\"]], [[\"nz-filter-trigger\"]], \"*\"];\nconst _c4 = [\"[nz-th-extra]\", \"nz-filter-trigger\", \"*\"];\nconst _c5 = [\"nzSelections\", \"\"];\nconst _c6 = [\"nz-table-content\", \"\"];\nfunction NzTableContentComponent_col_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"col\");\n  }\n  if (rf & 2) {\n    const width_r3 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"width\", width_r3)(\"min-width\", width_r3);\n  }\n}\nfunction NzTableContentComponent_thead_1_ng_template_1_Template(rf, ctx) {}\nfunction NzTableContentComponent_thead_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 3);\n    i0.ɵɵtemplate(1, NzTableContentComponent_thead_1_ng_template_1_Template, 0, 0, \"ng-template\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.theadTemplate);\n  }\n}\nfunction NzTableContentComponent_ng_template_2_Template(rf, ctx) {}\nconst _c7 = [\"tdElement\"];\nconst _c8 = [\"nz-table-fixed-row\", \"\"];\nfunction NzTableFixedRowComponent_div_2_ng_template_2_Template(rf, ctx) {}\nfunction NzTableFixedRowComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵtemplate(2, NzTableFixedRowComponent_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(5);\n    i0.ɵɵstyleProp(\"width\", i0.ɵɵpipeBind1(1, 3, ctx_r1.hostWidth$), \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r2);\n  }\n}\nfunction NzTableFixedRowComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c9 = [\"nz-table-measure-row\", \"\"];\nfunction NzTrMeasureComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\", 1, 2);\n  }\n}\nfunction NzTbodyComponent_ng_container_0_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵlistener(\"listOfAutoWidth\", function NzTbodyComponent_ng_container_0_tr_1_Template_tr_listOfAutoWidth_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onListOfAutoWidthChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const listOfMeasureColumn_r2 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵproperty(\"listOfMeasureColumn\", listOfMeasureColumn_r2);\n  }\n}\nfunction NzTbodyComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTbodyComponent_ng_container_0_tr_1_Template, 1, 1, \"tr\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const listOfMeasureColumn_r2 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isInsideTable && listOfMeasureColumn_r2.length);\n  }\n}\nfunction NzTbodyComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵelement(1, \"nz-embed-empty\", 5);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"specificContent\", i0.ɵɵpipeBind1(2, 1, ctx_r1.noResult$));\n  }\n}\nconst _c10 = [\"tableHeaderElement\"];\nconst _c11 = [\"tableBodyElement\"];\nfunction NzTableInnerScrollComponent_ng_container_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7, 8);\n    i0.ɵɵelement(2, \"table\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r3.bodyStyleMap);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scrollX\", ctx_r3.scrollX)(\"listOfColWidth\", ctx_r3.listOfColWidth)(\"contentTemplate\", ctx_r3.contentTemplate);\n  }\n}\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_ng_template_1_Template(rf, ctx) {}\nconst _c12 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_ng_template_1_Template, 0, 0, \"ng-template\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.virtualTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c12, item_r8, i_r9));\n  }\n}\nfunction NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 10, 8)(2, \"table\", 11)(3, \"tbody\");\n    i0.ɵɵtemplate(4, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_ng_container_4_Template, 2, 5, \"ng-container\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r4.data.length ? ctx_r4.scrollY : ctx_r4.noDateVirtualHeight);\n    i0.ɵɵproperty(\"itemSize\", ctx_r4.virtualItemSize)(\"maxBufferPx\", ctx_r4.virtualMaxBufferPx)(\"minBufferPx\", ctx_r4.virtualMinBufferPx);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scrollX\", ctx_r4.scrollX)(\"listOfColWidth\", ctx_r4.listOfColWidth);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r4.data)(\"cdkVirtualForTrackBy\", ctx_r4.virtualForTrackBy);\n  }\n}\nfunction NzTableInnerScrollComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2, 3);\n    i0.ɵɵelement(3, \"table\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, NzTableInnerScrollComponent_ng_container_0_div_4_Template, 3, 4, \"div\", 5);\n    i0.ɵɵtemplate(5, NzTableInnerScrollComponent_ng_container_0_cdk_virtual_scroll_viewport_5_Template, 5, 9, \"cdk-virtual-scroll-viewport\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.headerStyleMap);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scrollX\", ctx_r0.scrollX)(\"listOfColWidth\", ctx_r0.listOfColWidth)(\"theadTemplate\", ctx_r0.theadTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.virtualTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.virtualTemplate);\n  }\n}\nfunction NzTableInnerScrollComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14, 8);\n    i0.ɵɵelement(2, \"table\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.bodyStyleMap);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scrollX\", ctx_r1.scrollX)(\"listOfColWidth\", ctx_r1.listOfColWidth)(\"theadTemplate\", ctx_r1.theadTemplate)(\"contentTemplate\", ctx_r1.contentTemplate);\n  }\n}\nfunction NzTableTitleFooterComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\nfunction NzTableTitleFooterComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.footer);\n  }\n}\nfunction NzTableComponent_ng_container_1_ng_template_1_Template(rf, ctx) {}\nfunction NzTableComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTableComponent_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r8 = i0.ɵɵreference(11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\nfunction NzTableComponent_nz_table_title_footer_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-title-footer\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", ctx_r2.nzTitle);\n  }\n}\nfunction NzTableComponent_nz_table_inner_scroll_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-inner-scroll\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    const _r10 = i0.ɵɵreference(13);\n    const _r1 = i0.ɵɵreference(3);\n    i0.ɵɵproperty(\"data\", ctx_r3.data)(\"scrollX\", ctx_r3.scrollX)(\"scrollY\", ctx_r3.scrollY)(\"contentTemplate\", _r10)(\"listOfColWidth\", ctx_r3.listOfAutoColWidth)(\"theadTemplate\", ctx_r3.theadTemplate)(\"verticalScrollBarWidth\", ctx_r3.verticalScrollBarWidth)(\"virtualTemplate\", ctx_r3.nzVirtualScrollDirective ? ctx_r3.nzVirtualScrollDirective.templateRef : null)(\"virtualItemSize\", ctx_r3.nzVirtualItemSize)(\"virtualMaxBufferPx\", ctx_r3.nzVirtualMaxBufferPx)(\"virtualMinBufferPx\", ctx_r3.nzVirtualMinBufferPx)(\"tableMainElement\", _r1)(\"virtualForTrackBy\", ctx_r3.nzVirtualForTrackBy);\n  }\n}\nfunction NzTableComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-inner-default\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    const _r10 = i0.ɵɵreference(13);\n    i0.ɵɵproperty(\"tableLayout\", ctx_r5.nzTableLayout)(\"listOfColWidth\", ctx_r5.listOfManualColWidth)(\"theadTemplate\", ctx_r5.theadTemplate)(\"contentTemplate\", _r10);\n  }\n}\nfunction NzTableComponent_nz_table_title_footer_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-table-title-footer\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"footer\", ctx_r6.nzFooter);\n  }\n}\nfunction NzTableComponent_ng_container_9_ng_template_1_Template(rf, ctx) {}\nfunction NzTableComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTableComponent_ng_container_9_ng_template_1_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r8 = i0.ɵɵreference(11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8);\n  }\n}\nfunction NzTableComponent_ng_template_10_nz_pagination_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-pagination\", 16);\n    i0.ɵɵlistener(\"nzPageSizeChange\", function NzTableComponent_ng_template_10_nz_pagination_0_Template_nz_pagination_nzPageSizeChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onPageSizeChange($event));\n    })(\"nzPageIndexChange\", function NzTableComponent_ng_template_10_nz_pagination_0_Template_nz_pagination_nzPageIndexChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.onPageIndexChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"hidden\", !ctx_r14.showPagination)(\"nzShowSizeChanger\", ctx_r14.nzShowSizeChanger)(\"nzPageSizeOptions\", ctx_r14.nzPageSizeOptions)(\"nzItemRender\", ctx_r14.nzItemRender)(\"nzShowQuickJumper\", ctx_r14.nzShowQuickJumper)(\"nzHideOnSinglePage\", ctx_r14.nzHideOnSinglePage)(\"nzShowTotal\", ctx_r14.nzShowTotal)(\"nzSize\", ctx_r14.nzPaginationType === \"small\" ? \"small\" : ctx_r14.nzSize === \"default\" ? \"default\" : \"small\")(\"nzPageSize\", ctx_r14.nzPageSize)(\"nzTotal\", ctx_r14.nzTotal)(\"nzSimple\", ctx_r14.nzSimple)(\"nzPageIndex\", ctx_r14.nzPageIndex);\n  }\n}\nfunction NzTableComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzTableComponent_ng_template_10_nz_pagination_0_Template, 1, 12, \"nz-pagination\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.nzShowPagination && ctx_r9.data.length);\n  }\n}\nfunction NzTableComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c13 = [\"contentTemplate\"];\nfunction NzTheadComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction NzTheadComponent_ng_container_2_ng_template_1_Template(rf, ctx) {}\nfunction NzTheadComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzTheadComponent_ng_container_2_ng_template_1_Template, 0, 0, \"ng-template\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0);\n  }\n}\nconst NZ_CONFIG_MODULE_NAME$1 = 'filterTrigger';\nlet NzFilterTriggerComponent = /*#__PURE__*/(() => {\n  class NzFilterTriggerComponent {\n    onVisibleChange(visible) {\n      this.nzVisible = visible;\n      this.nzVisibleChange.next(visible);\n    }\n    hide() {\n      this.nzVisible = false;\n      this.cdr.markForCheck();\n    }\n    show() {\n      this.nzVisible = true;\n      this.cdr.markForCheck();\n    }\n    constructor(nzConfigService, ngZone, cdr, destroy$) {\n      this.nzConfigService = nzConfigService;\n      this.ngZone = ngZone;\n      this.cdr = cdr;\n      this.destroy$ = destroy$;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME$1;\n      this.nzActive = false;\n      this.nzVisible = false;\n      this.nzBackdrop = false;\n      this.nzVisibleChange = new EventEmitter();\n    }\n    ngOnInit() {\n      this.ngZone.runOutsideAngular(() => {\n        fromEvent(this.nzDropdown.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => {\n          event.stopPropagation();\n        });\n      });\n    }\n    static #_ = this.ɵfac = function NzFilterTriggerComponent_Factory(t) {\n      return new (t || NzFilterTriggerComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.NzDestroyService));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzFilterTriggerComponent,\n      selectors: [[\"nz-filter-trigger\"]],\n      viewQuery: function NzFilterTriggerComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(NzDropDownDirective, 7, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzDropdown = _t.first);\n        }\n      },\n      inputs: {\n        nzActive: \"nzActive\",\n        nzDropdownMenu: \"nzDropdownMenu\",\n        nzVisible: \"nzVisible\",\n        nzBackdrop: \"nzBackdrop\"\n      },\n      outputs: {\n        nzVisibleChange: \"nzVisibleChange\"\n      },\n      exportAs: [\"nzFilterTrigger\"],\n      features: [i0.ɵɵProvidersFeature([NzDestroyService])],\n      ngContentSelectors: _c0,\n      decls: 2,\n      vars: 8,\n      consts: [[\"nz-dropdown\", \"\", \"nzTrigger\", \"click\", \"nzPlacement\", \"bottomRight\", 1, \"ant-table-filter-trigger\", 3, \"nzBackdrop\", \"nzClickHide\", \"nzDropdownMenu\", \"nzVisible\", \"nzVisibleChange\"]],\n      template: function NzFilterTriggerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"span\", 0);\n          i0.ɵɵlistener(\"nzVisibleChange\", function NzFilterTriggerComponent_Template_span_nzVisibleChange_0_listener($event) {\n            return ctx.onVisibleChange($event);\n          });\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"active\", ctx.nzActive)(\"ant-table-filter-open\", ctx.nzVisible);\n          i0.ɵɵproperty(\"nzBackdrop\", ctx.nzBackdrop)(\"nzClickHide\", false)(\"nzDropdownMenu\", ctx.nzDropdownMenu)(\"nzVisible\", ctx.nzVisible);\n        }\n      },\n      dependencies: [i4.NzDropDownDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([WithConfig(), InputBoolean()], NzFilterTriggerComponent.prototype, \"nzBackdrop\", void 0);\n  return NzFilterTriggerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableFilterComponent = /*#__PURE__*/(() => {\n  class NzTableFilterComponent {\n    trackByValue(_, item) {\n      return item.value;\n    }\n    check(filter) {\n      if (this.filterMultiple) {\n        this.listOfParsedFilter = this.listOfParsedFilter.map(item => {\n          if (item === filter) {\n            return {\n              ...item,\n              checked: !filter.checked\n            };\n          } else {\n            return item;\n          }\n        });\n        filter.checked = !filter.checked;\n      } else {\n        this.listOfParsedFilter = this.listOfParsedFilter.map(item => ({\n          ...item,\n          checked: item === filter\n        }));\n      }\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n    }\n    confirm() {\n      this.isVisible = false;\n      this.emitFilterData();\n    }\n    reset() {\n      this.isVisible = false;\n      this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter, true);\n      this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n      this.emitFilterData();\n    }\n    onVisibleChange(value) {\n      this.isVisible = value;\n      if (!value) {\n        this.emitFilterData();\n      } else {\n        this.listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n      }\n    }\n    emitFilterData() {\n      const listOfChecked = this.listOfParsedFilter.filter(item => item.checked).map(item => item.value);\n      if (!arraysEqual(this.listOfChecked, listOfChecked)) {\n        if (this.filterMultiple) {\n          this.filterChange.emit(listOfChecked);\n        } else {\n          this.filterChange.emit(listOfChecked.length > 0 ? listOfChecked[0] : null);\n        }\n      }\n    }\n    parseListOfFilter(listOfFilter, reset) {\n      return listOfFilter.map(item => {\n        const checked = reset ? false : !!item.byDefault;\n        return {\n          text: item.text,\n          value: item.value,\n          checked\n        };\n      });\n    }\n    getCheckedStatus(listOfParsedFilter) {\n      return listOfParsedFilter.some(item => item.checked);\n    }\n    constructor(cdr, i18n) {\n      this.cdr = cdr;\n      this.i18n = i18n;\n      this.contentTemplate = null;\n      this.customFilter = false;\n      this.extraTemplate = null;\n      this.filterMultiple = true;\n      this.listOfFilter = [];\n      this.filterChange = new EventEmitter();\n      this.destroy$ = new Subject();\n      this.isChecked = false;\n      this.isVisible = false;\n      this.listOfParsedFilter = [];\n      this.listOfChecked = [];\n    }\n    ngOnInit() {\n      this.i18n.localeChange.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.locale = this.i18n.getLocaleData('Table');\n        this.cdr.markForCheck();\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        listOfFilter\n      } = changes;\n      if (listOfFilter && this.listOfFilter && this.listOfFilter.length) {\n        this.listOfParsedFilter = this.parseListOfFilter(this.listOfFilter);\n        this.isChecked = this.getCheckedStatus(this.listOfParsedFilter);\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzTableFilterComponent_Factory(t) {\n      return new (t || NzTableFilterComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.NzI18nService));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableFilterComponent,\n      selectors: [[\"nz-table-filter\"]],\n      hostAttrs: [1, \"ant-table-filter-column\"],\n      inputs: {\n        contentTemplate: \"contentTemplate\",\n        customFilter: \"customFilter\",\n        extraTemplate: \"extraTemplate\",\n        filterMultiple: \"filterMultiple\",\n        listOfFilter: \"listOfFilter\"\n      },\n      outputs: {\n        filterChange: \"filterChange\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 3,\n      vars: 3,\n      consts: [[1, \"ant-table-column-title\"], [3, \"ngTemplateOutlet\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"nzVisible\", \"nzActive\", \"nzDropdownMenu\", \"nzVisibleChange\"], [\"nz-icon\", \"\", \"nzType\", \"filter\", \"nzTheme\", \"fill\"], [\"filterMenu\", \"nzDropdownMenu\"], [1, \"ant-table-filter-dropdown\"], [\"nz-menu\", \"\"], [\"nz-menu-item\", \"\", 3, \"nzSelected\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ant-table-filter-dropdown-btns\"], [\"nz-button\", \"\", \"nzType\", \"link\", \"nzSize\", \"small\", 3, \"disabled\", \"click\"], [\"nz-button\", \"\", \"nzType\", \"primary\", \"nzSize\", \"small\", 3, \"click\"], [\"nz-menu-item\", \"\", 3, \"nzSelected\", \"click\"], [\"nz-radio\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"nz-radio\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"ngModelChange\"]],\n      template: function NzTableFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"span\", 0);\n          i0.ɵɵtemplate(1, NzTableFilterComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, NzTableFilterComponent_ng_container_2_Template, 13, 8, \"ng-container\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.customFilter)(\"ngIfElse\", ctx.extraTemplate);\n        }\n      },\n      dependencies: [i2$1.NzMenuDirective, i2$1.NzMenuItemDirective, i3.NgControlStatus, i3.NgModel, i4$1.NzRadioComponent, i5.NzCheckboxComponent, i4.NzDropdownMenuComponent, i7.NzButtonComponent, i8.ɵNzTransitionPatchDirective, i9.NzWaveDirective, i2$2.NgForOf, i2$2.NgIf, i2$2.NgTemplateOutlet, i11.NzIconDirective, NzFilterTriggerComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTableFilterComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzRowExpandButtonDirective = /*#__PURE__*/(() => {\n  class NzRowExpandButtonDirective {\n    constructor() {\n      this.expand = false;\n      this.spaceMode = false;\n      this.expandChange = new EventEmitter();\n    }\n    onHostClick() {\n      if (!this.spaceMode) {\n        this.expand = !this.expand;\n        this.expandChange.next(this.expand);\n      }\n    }\n    static #_ = this.ɵfac = function NzRowExpandButtonDirective_Factory(t) {\n      return new (t || NzRowExpandButtonDirective)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzRowExpandButtonDirective,\n      selectors: [[\"button\", \"nz-row-expand-button\", \"\"]],\n      hostAttrs: [1, \"ant-table-row-expand-icon\"],\n      hostVars: 7,\n      hostBindings: function NzRowExpandButtonDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NzRowExpandButtonDirective_click_HostBindingHandler() {\n            return ctx.onHostClick();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"type\", \"button\");\n          i0.ɵɵclassProp(\"ant-table-row-expand-icon-expanded\", !ctx.spaceMode && ctx.expand === true)(\"ant-table-row-expand-icon-collapsed\", !ctx.spaceMode && ctx.expand === false)(\"ant-table-row-expand-icon-spaced\", ctx.spaceMode);\n        }\n      },\n      inputs: {\n        expand: \"expand\",\n        spaceMode: \"spaceMode\"\n      },\n      outputs: {\n        expandChange: \"expandChange\"\n      }\n    });\n  }\n  return NzRowExpandButtonDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzRowIndentDirective = /*#__PURE__*/(() => {\n  class NzRowIndentDirective {\n    constructor() {\n      this.indentSize = 0;\n    }\n    static #_ = this.ɵfac = function NzRowIndentDirective_Factory(t) {\n      return new (t || NzRowIndentDirective)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzRowIndentDirective,\n      selectors: [[\"nz-row-indent\"]],\n      hostAttrs: [1, \"ant-table-row-indent\"],\n      hostVars: 2,\n      hostBindings: function NzRowIndentDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"padding-left\", ctx.indentSize, \"px\");\n        }\n      },\n      inputs: {\n        indentSize: \"indentSize\"\n      }\n    });\n  }\n  return NzRowIndentDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableSelectionComponent = /*#__PURE__*/(() => {\n  class NzTableSelectionComponent {\n    constructor() {\n      this.listOfSelections = [];\n      this.checked = false;\n      this.disabled = false;\n      this.indeterminate = false;\n      this.showCheckbox = false;\n      this.showRowSelection = false;\n      this.checkedChange = new EventEmitter();\n    }\n    onCheckedChange(checked) {\n      this.checked = checked;\n      this.checkedChange.emit(checked);\n    }\n    static #_ = this.ɵfac = function NzTableSelectionComponent_Factory(t) {\n      return new (t || NzTableSelectionComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableSelectionComponent,\n      selectors: [[\"nz-table-selection\"]],\n      hostAttrs: [1, \"ant-table-selection\"],\n      inputs: {\n        listOfSelections: \"listOfSelections\",\n        checked: \"checked\",\n        disabled: \"disabled\",\n        indeterminate: \"indeterminate\",\n        showCheckbox: \"showCheckbox\",\n        showRowSelection: \"showRowSelection\"\n      },\n      outputs: {\n        checkedChange: \"checkedChange\"\n      },\n      decls: 2,\n      vars: 2,\n      consts: [[\"nz-checkbox\", \"\", 3, \"ant-table-selection-select-all-custom\", \"ngModel\", \"nzDisabled\", \"nzIndeterminate\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"ant-table-selection-extra\", 4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"ngModel\", \"nzDisabled\", \"nzIndeterminate\", \"ngModelChange\"], [1, \"ant-table-selection-extra\"], [\"nz-dropdown\", \"\", \"nzPlacement\", \"bottomLeft\", 1, \"ant-table-selection-down\", 3, \"nzDropdownMenu\"], [\"nz-icon\", \"\", \"nzType\", \"down\"], [\"selectionMenu\", \"nzDropdownMenu\"], [\"nz-menu\", \"\", 1, \"ant-table-selection-menu\"], [\"nz-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-menu-item\", \"\", 3, \"click\"]],\n      template: function NzTableSelectionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTableSelectionComponent_label_0_Template, 1, 5, \"label\", 0);\n          i0.ɵɵtemplate(1, NzTableSelectionComponent_div_1_Template, 7, 2, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.showCheckbox);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showRowSelection);\n        }\n      },\n      dependencies: [i2$1.NzMenuDirective, i2$1.NzMenuItemDirective, i3.NgControlStatus, i3.NgModel, i5.NzCheckboxComponent, i4.NzDropDownDirective, i4.NzDropdownMenuComponent, i8.ɵNzTransitionPatchDirective, i2$2.NgForOf, i2$2.NgIf, i11.NzIconDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTableSelectionComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableSortersComponent = /*#__PURE__*/(() => {\n  class NzTableSortersComponent {\n    constructor() {\n      this.sortDirections = ['ascend', 'descend', null];\n      this.sortOrder = null;\n      this.contentTemplate = null;\n      this.isUp = false;\n      this.isDown = false;\n    }\n    ngOnChanges(changes) {\n      const {\n        sortDirections\n      } = changes;\n      if (sortDirections) {\n        this.isUp = this.sortDirections.indexOf('ascend') !== -1;\n        this.isDown = this.sortDirections.indexOf('descend') !== -1;\n      }\n    }\n    static #_ = this.ɵfac = function NzTableSortersComponent_Factory(t) {\n      return new (t || NzTableSortersComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableSortersComponent,\n      selectors: [[\"nz-table-sorters\"]],\n      hostAttrs: [1, \"ant-table-column-sorters\"],\n      inputs: {\n        sortDirections: \"sortDirections\",\n        sortOrder: \"sortOrder\",\n        contentTemplate: \"contentTemplate\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 6,\n      vars: 5,\n      consts: [[1, \"ant-table-column-title\"], [3, \"ngTemplateOutlet\"], [1, \"ant-table-column-sorter\"], [1, \"ant-table-column-sorter-inner\"], [\"nz-icon\", \"\", \"nzType\", \"caret-up\", \"class\", \"ant-table-column-sorter-up\", 3, \"active\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"caret-down\", \"class\", \"ant-table-column-sorter-down\", 3, \"active\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"caret-up\", 1, \"ant-table-column-sorter-up\"], [\"nz-icon\", \"\", \"nzType\", \"caret-down\", 1, \"ant-table-column-sorter-down\"]],\n      template: function NzTableSortersComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"span\", 0);\n          i0.ɵɵtemplate(1, NzTableSortersComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n          i0.ɵɵtemplate(4, NzTableSortersComponent_span_4_Template, 1, 2, \"span\", 4);\n          i0.ɵɵtemplate(5, NzTableSortersComponent_span_5_Template, 1, 2, \"span\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"ant-table-column-sorter-full\", ctx.isDown && ctx.isUp);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isUp);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isDown);\n        }\n      },\n      dependencies: [i8.ɵNzTransitionPatchDirective, i2$2.NgIf, i2$2.NgTemplateOutlet, i11.NzIconDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTableSortersComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzCellFixedDirective = /*#__PURE__*/(() => {\n  class NzCellFixedDirective {\n    setAutoLeftWidth(autoLeft) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'left', autoLeft);\n    }\n    setAutoRightWidth(autoRight) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'right', autoRight);\n    }\n    setIsFirstRight(isFirstRight) {\n      this.setFixClass(isFirstRight, 'ant-table-cell-fix-right-first');\n    }\n    setIsLastLeft(isLastLeft) {\n      this.setFixClass(isLastLeft, 'ant-table-cell-fix-left-last');\n    }\n    setFixClass(flag, className) {\n      // the setFixClass function may call many times, so remove it first.\n      this.renderer.removeClass(this.elementRef.nativeElement, className);\n      if (flag) {\n        this.renderer.addClass(this.elementRef.nativeElement, className);\n      }\n    }\n    constructor(renderer, elementRef) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.nzRight = false;\n      this.nzLeft = false;\n      this.colspan = null;\n      this.colSpan = null;\n      this.changes$ = new Subject();\n      this.isAutoLeft = false;\n      this.isAutoRight = false;\n      this.isFixedLeft = false;\n      this.isFixedRight = false;\n      this.isFixed = false;\n    }\n    ngOnChanges() {\n      this.setIsFirstRight(false);\n      this.setIsLastLeft(false);\n      this.isAutoLeft = this.nzLeft === '' || this.nzLeft === true;\n      this.isAutoRight = this.nzRight === '' || this.nzRight === true;\n      this.isFixedLeft = this.nzLeft !== false;\n      this.isFixedRight = this.nzRight !== false;\n      this.isFixed = this.isFixedLeft || this.isFixedRight;\n      const validatePx = value => {\n        if (typeof value === 'string' && value !== '') {\n          return value;\n        } else {\n          return null;\n        }\n      };\n      this.setAutoLeftWidth(validatePx(this.nzLeft));\n      this.setAutoRightWidth(validatePx(this.nzRight));\n      this.changes$.next();\n    }\n    static #_ = this.ɵfac = function NzCellFixedDirective_Factory(t) {\n      return new (t || NzCellFixedDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzCellFixedDirective,\n      selectors: [[\"td\", \"nzRight\", \"\"], [\"th\", \"nzRight\", \"\"], [\"td\", \"nzLeft\", \"\"], [\"th\", \"nzLeft\", \"\"]],\n      hostVars: 6,\n      hostBindings: function NzCellFixedDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"position\", ctx.isFixed ? \"sticky\" : null);\n          i0.ɵɵclassProp(\"ant-table-cell-fix-right\", ctx.isFixedRight)(\"ant-table-cell-fix-left\", ctx.isFixedLeft);\n        }\n      },\n      inputs: {\n        nzRight: \"nzRight\",\n        nzLeft: \"nzLeft\",\n        colspan: \"colspan\",\n        colSpan: \"colSpan\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NzCellFixedDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableStyleService = /*#__PURE__*/(() => {\n  class NzTableStyleService {\n    setTheadTemplate(template) {\n      this.theadTemplate$.next(template);\n    }\n    setHasFixLeft(hasFixLeft) {\n      this.hasFixLeft$.next(hasFixLeft);\n    }\n    setHasFixRight(hasFixRight) {\n      this.hasFixRight$.next(hasFixRight);\n    }\n    setTableWidthConfig(widthConfig) {\n      this.tableWidthConfigPx$.next(widthConfig);\n    }\n    setListOfTh(listOfTh) {\n      let columnCount = 0;\n      listOfTh.forEach(th => {\n        columnCount += th.colspan && +th.colspan || th.colSpan && +th.colSpan || 1;\n      });\n      const listOfThPx = listOfTh.map(item => item.nzWidth);\n      this.columnCount$.next(columnCount);\n      this.listOfThWidthConfigPx$.next(listOfThPx);\n    }\n    setListOfMeasureColumn(listOfTh) {\n      const listOfKeys = [];\n      listOfTh.forEach(th => {\n        const length = th.colspan && +th.colspan || th.colSpan && +th.colSpan || 1;\n        for (let i = 0; i < length; i++) {\n          listOfKeys.push(`measure_key_${i}`);\n        }\n      });\n      this.listOfMeasureColumn$.next(listOfKeys);\n    }\n    setListOfAutoWidth(listOfAutoWidth) {\n      this.listOfAutoWidthPx$.next(listOfAutoWidth.map(width => `${width}px`));\n    }\n    setShowEmpty(showEmpty) {\n      this.showEmpty$.next(showEmpty);\n    }\n    setNoResult(noResult) {\n      this.noResult$.next(noResult);\n    }\n    setScroll(scrollX, scrollY) {\n      const enableAutoMeasure = !!(scrollX || scrollY);\n      if (!enableAutoMeasure) {\n        this.setListOfAutoWidth([]);\n      }\n      this.enableAutoMeasure$.next(enableAutoMeasure);\n    }\n    constructor() {\n      this.theadTemplate$ = new ReplaySubject(1);\n      this.hasFixLeft$ = new ReplaySubject(1);\n      this.hasFixRight$ = new ReplaySubject(1);\n      this.hostWidth$ = new ReplaySubject(1);\n      this.columnCount$ = new ReplaySubject(1);\n      this.showEmpty$ = new ReplaySubject(1);\n      this.noResult$ = new ReplaySubject(1);\n      this.listOfThWidthConfigPx$ = new BehaviorSubject([]);\n      this.tableWidthConfigPx$ = new BehaviorSubject([]);\n      this.manualWidthConfigPx$ = combineLatest([this.tableWidthConfigPx$, this.listOfThWidthConfigPx$]).pipe(map(([widthConfig, listOfWidth]) => widthConfig.length ? widthConfig : listOfWidth));\n      this.listOfAutoWidthPx$ = new ReplaySubject(1);\n      this.listOfListOfThWidthPx$ = merge( /** init with manual width **/\n      this.manualWidthConfigPx$, combineLatest([this.listOfAutoWidthPx$, this.manualWidthConfigPx$]).pipe(map(([autoWidth, manualWidth]) => {\n        /** use autoWidth until column length match **/\n        if (autoWidth.length === manualWidth.length) {\n          return autoWidth.map((width, index) => {\n            if (width === '0px') {\n              return manualWidth[index] || null;\n            } else {\n              return manualWidth[index] || width;\n            }\n          });\n        } else {\n          return manualWidth;\n        }\n      })));\n      this.listOfMeasureColumn$ = new ReplaySubject(1);\n      this.listOfListOfThWidth$ = this.listOfAutoWidthPx$.pipe(map(list => list.map(width => parseInt(width, 10))));\n      this.enableAutoMeasure$ = new ReplaySubject(1);\n    }\n    static #_ = this.ɵfac = function NzTableStyleService_Factory(t) {\n      return new (t || NzTableStyleService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzTableStyleService,\n      factory: NzTableStyleService.ɵfac\n    });\n  }\n  return NzTableStyleService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableCellDirective = /*#__PURE__*/(() => {\n  class NzTableCellDirective {\n    constructor(nzTableStyleService) {\n      this.isInsideTable = false;\n      this.isInsideTable = !!nzTableStyleService;\n    }\n    static #_ = this.ɵfac = function NzTableCellDirective_Factory(t) {\n      return new (t || NzTableCellDirective)(i0.ɵɵdirectiveInject(NzTableStyleService, 8));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzTableCellDirective,\n      selectors: [[\"th\", 9, \"nz-disable-th\", 3, \"mat-cell\", \"\"], [\"td\", 9, \"nz-disable-td\", 3, \"mat-cell\", \"\"]],\n      hostVars: 2,\n      hostBindings: function NzTableCellDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-table-cell\", ctx.isInsideTable);\n        }\n      }\n    });\n  }\n  return NzTableCellDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzTdAddOnComponent = /*#__PURE__*/(() => {\n  class NzTdAddOnComponent {\n    constructor() {\n      this.nzChecked = false;\n      this.nzDisabled = false;\n      this.nzIndeterminate = false;\n      this.nzIndentSize = 0;\n      this.nzShowExpand = false;\n      this.nzShowCheckbox = false;\n      this.nzExpand = false;\n      this.nzCheckedChange = new EventEmitter();\n      this.nzExpandChange = new EventEmitter();\n      this.isNzShowExpandChanged = false;\n      this.isNzShowCheckboxChanged = false;\n    }\n    onCheckedChange(checked) {\n      this.nzChecked = checked;\n      this.nzCheckedChange.emit(checked);\n    }\n    onExpandChange(expand) {\n      this.nzExpand = expand;\n      this.nzExpandChange.emit(expand);\n    }\n    ngOnChanges(changes) {\n      const isFirstChange = value => value && value.firstChange && value.currentValue !== undefined;\n      const {\n        nzExpand,\n        nzChecked,\n        nzShowExpand,\n        nzShowCheckbox\n      } = changes;\n      if (nzShowExpand) {\n        this.isNzShowExpandChanged = true;\n      }\n      if (nzShowCheckbox) {\n        this.isNzShowCheckboxChanged = true;\n      }\n      if (isFirstChange(nzExpand) && !this.isNzShowExpandChanged) {\n        this.nzShowExpand = true;\n      }\n      if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n        this.nzShowCheckbox = true;\n      }\n    }\n    static #_ = this.ɵfac = function NzTdAddOnComponent_Factory(t) {\n      return new (t || NzTdAddOnComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTdAddOnComponent,\n      selectors: [[\"td\", \"nzChecked\", \"\"], [\"td\", \"nzDisabled\", \"\"], [\"td\", \"nzIndeterminate\", \"\"], [\"td\", \"nzIndentSize\", \"\"], [\"td\", \"nzExpand\", \"\"], [\"td\", \"nzShowExpand\", \"\"], [\"td\", \"nzShowCheckbox\", \"\"]],\n      hostVars: 4,\n      hostBindings: function NzTdAddOnComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-table-cell-with-append\", ctx.nzShowExpand || ctx.nzIndentSize > 0)(\"ant-table-selection-column\", ctx.nzShowCheckbox);\n        }\n      },\n      inputs: {\n        nzChecked: \"nzChecked\",\n        nzDisabled: \"nzDisabled\",\n        nzIndeterminate: \"nzIndeterminate\",\n        nzIndentSize: \"nzIndentSize\",\n        nzShowExpand: \"nzShowExpand\",\n        nzShowCheckbox: \"nzShowCheckbox\",\n        nzExpand: \"nzExpand\"\n      },\n      outputs: {\n        nzCheckedChange: \"nzCheckedChange\",\n        nzExpandChange: \"nzExpandChange\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      attrs: _c1,\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 2,\n      consts: [[4, \"ngIf\"], [\"nz-checkbox\", \"\", 3, \"nzDisabled\", \"ngModel\", \"nzIndeterminate\", \"ngModelChange\", 4, \"ngIf\"], [3, \"indentSize\"], [\"nz-row-expand-button\", \"\", 3, \"expand\", \"spaceMode\", \"expandChange\"], [\"nz-checkbox\", \"\", 3, \"nzDisabled\", \"ngModel\", \"nzIndeterminate\", \"ngModelChange\"]],\n      template: function NzTdAddOnComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzTdAddOnComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n          i0.ɵɵtemplate(1, NzTdAddOnComponent_label_1_Template, 1, 3, \"label\", 1);\n          i0.ɵɵprojection(2);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.nzShowExpand || ctx.nzIndentSize > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzShowCheckbox);\n        }\n      },\n      dependencies: [i3.NgControlStatus, i3.NgModel, i5.NzCheckboxComponent, i2$2.NgIf, NzRowIndentDirective, NzRowExpandButtonDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzTdAddOnComponent.prototype, \"nzShowExpand\", void 0);\n  __decorate([InputBoolean()], NzTdAddOnComponent.prototype, \"nzShowCheckbox\", void 0);\n  __decorate([InputBoolean()], NzTdAddOnComponent.prototype, \"nzExpand\", void 0);\n  return NzTdAddOnComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzThAddOnComponent = /*#__PURE__*/(() => {\n  class NzThAddOnComponent {\n    getNextSortDirection(sortDirections, current) {\n      const index = sortDirections.indexOf(current);\n      if (index === sortDirections.length - 1) {\n        return sortDirections[0];\n      } else {\n        return sortDirections[index + 1];\n      }\n    }\n    setSortOrder(order) {\n      this.sortOrderChange$.next(order);\n    }\n    clearSortOrder() {\n      if (this.sortOrder !== null) {\n        this.setSortOrder(null);\n      }\n    }\n    onFilterValueChange(value) {\n      this.nzFilterChange.emit(value);\n      this.nzFilterValue = value;\n      this.updateCalcOperator();\n    }\n    updateCalcOperator() {\n      this.calcOperatorChange$.next();\n    }\n    constructor(host, cdr, ngZone, destroy$) {\n      this.host = host;\n      this.cdr = cdr;\n      this.ngZone = ngZone;\n      this.destroy$ = destroy$;\n      this.manualClickOrder$ = new Subject();\n      this.calcOperatorChange$ = new Subject();\n      this.nzFilterValue = null;\n      this.sortOrder = null;\n      this.sortDirections = ['ascend', 'descend', null];\n      this.sortOrderChange$ = new Subject();\n      this.isNzShowSortChanged = false;\n      this.isNzShowFilterChanged = false;\n      this.nzFilterMultiple = true;\n      this.nzSortOrder = null;\n      this.nzSortPriority = false;\n      this.nzSortDirections = ['ascend', 'descend', null];\n      this.nzFilters = [];\n      this.nzSortFn = null;\n      this.nzFilterFn = null;\n      this.nzShowSort = false;\n      this.nzShowFilter = false;\n      this.nzCustomFilter = false;\n      this.nzCheckedChange = new EventEmitter();\n      this.nzSortOrderChange = new EventEmitter();\n      this.nzFilterChange = new EventEmitter();\n    }\n    ngOnInit() {\n      this.ngZone.runOutsideAngular(() => fromEvent(this.host.nativeElement, 'click').pipe(filter(() => this.nzShowSort), takeUntil(this.destroy$)).subscribe(() => {\n        const nextOrder = this.getNextSortDirection(this.sortDirections, this.sortOrder);\n        this.ngZone.run(() => {\n          this.setSortOrder(nextOrder);\n          this.manualClickOrder$.next(this);\n        });\n      }));\n      this.sortOrderChange$.pipe(takeUntil(this.destroy$)).subscribe(order => {\n        if (this.sortOrder !== order) {\n          this.sortOrder = order;\n          this.nzSortOrderChange.emit(order);\n        }\n        this.updateCalcOperator();\n        this.cdr.markForCheck();\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        nzSortDirections,\n        nzFilters,\n        nzSortOrder,\n        nzSortFn,\n        nzFilterFn,\n        nzSortPriority,\n        nzFilterMultiple,\n        nzShowSort,\n        nzShowFilter\n      } = changes;\n      if (nzSortDirections) {\n        if (this.nzSortDirections && this.nzSortDirections.length) {\n          this.sortDirections = this.nzSortDirections;\n        }\n      }\n      if (nzSortOrder) {\n        this.sortOrder = this.nzSortOrder;\n        this.setSortOrder(this.nzSortOrder);\n      }\n      if (nzShowSort) {\n        this.isNzShowSortChanged = true;\n      }\n      if (nzShowFilter) {\n        this.isNzShowFilterChanged = true;\n      }\n      const isFirstChange = value => value && value.firstChange && value.currentValue !== undefined;\n      if ((isFirstChange(nzSortOrder) || isFirstChange(nzSortFn)) && !this.isNzShowSortChanged) {\n        this.nzShowSort = true;\n      }\n      if (isFirstChange(nzFilters) && !this.isNzShowFilterChanged) {\n        this.nzShowFilter = true;\n      }\n      if ((nzFilters || nzFilterMultiple) && this.nzShowFilter) {\n        const listOfValue = this.nzFilters.filter(item => item.byDefault).map(item => item.value);\n        this.nzFilterValue = this.nzFilterMultiple ? listOfValue : listOfValue[0] || null;\n      }\n      if (nzSortFn || nzFilterFn || nzSortPriority || nzFilters) {\n        this.updateCalcOperator();\n      }\n    }\n    static #_ = this.ɵfac = function NzThAddOnComponent_Factory(t) {\n      return new (t || NzThAddOnComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.NzDestroyService));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzThAddOnComponent,\n      selectors: [[\"th\", \"nzColumnKey\", \"\"], [\"th\", \"nzSortFn\", \"\"], [\"th\", \"nzSortOrder\", \"\"], [\"th\", \"nzFilters\", \"\"], [\"th\", \"nzShowSort\", \"\"], [\"th\", \"nzShowFilter\", \"\"], [\"th\", \"nzCustomFilter\", \"\"]],\n      hostVars: 4,\n      hostBindings: function NzThAddOnComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-table-column-has-sorters\", ctx.nzShowSort)(\"ant-table-column-sort\", ctx.sortOrder === \"descend\" || ctx.sortOrder === \"ascend\");\n        }\n      },\n      inputs: {\n        nzColumnKey: \"nzColumnKey\",\n        nzFilterMultiple: \"nzFilterMultiple\",\n        nzSortOrder: \"nzSortOrder\",\n        nzSortPriority: \"nzSortPriority\",\n        nzSortDirections: \"nzSortDirections\",\n        nzFilters: \"nzFilters\",\n        nzSortFn: \"nzSortFn\",\n        nzFilterFn: \"nzFilterFn\",\n        nzShowSort: \"nzShowSort\",\n        nzShowFilter: \"nzShowFilter\",\n        nzCustomFilter: \"nzCustomFilter\"\n      },\n      outputs: {\n        nzCheckedChange: \"nzCheckedChange\",\n        nzSortOrderChange: \"nzSortOrderChange\",\n        nzFilterChange: \"nzFilterChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([NzDestroyService]), i0.ɵɵNgOnChangesFeature],\n      attrs: _c2,\n      ngContentSelectors: _c4,\n      decls: 9,\n      vars: 2,\n      consts: [[3, \"contentTemplate\", \"extraTemplate\", \"customFilter\", \"filterMultiple\", \"listOfFilter\", \"filterChange\", 4, \"ngIf\", \"ngIfElse\"], [\"notFilterTemplate\", \"\"], [\"extraTemplate\", \"\"], [\"sortTemplate\", \"\"], [\"contentTemplate\", \"\"], [3, \"contentTemplate\", \"extraTemplate\", \"customFilter\", \"filterMultiple\", \"listOfFilter\", \"filterChange\"], [3, \"ngTemplateOutlet\"], [3, \"sortOrder\", \"sortDirections\", \"contentTemplate\"]],\n      template: function NzThAddOnComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c3);\n          i0.ɵɵtemplate(0, NzThAddOnComponent_nz_table_filter_0_Template, 1, 5, \"nz-table-filter\", 0);\n          i0.ɵɵtemplate(1, NzThAddOnComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(3, NzThAddOnComponent_ng_template_3_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(5, NzThAddOnComponent_ng_template_5_Template, 1, 3, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(7, NzThAddOnComponent_ng_template_7_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzShowFilter || ctx.nzCustomFilter)(\"ngIfElse\", _r1);\n        }\n      },\n      dependencies: [i2$2.NgIf, i2$2.NgTemplateOutlet, NzTableSortersComponent, NzTableFilterComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzThAddOnComponent.prototype, \"nzShowSort\", void 0);\n  __decorate([InputBoolean()], NzThAddOnComponent.prototype, \"nzShowFilter\", void 0);\n  __decorate([InputBoolean()], NzThAddOnComponent.prototype, \"nzCustomFilter\", void 0);\n  return NzThAddOnComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzThMeasureDirective = /*#__PURE__*/(() => {\n  class NzThMeasureDirective {\n    constructor(renderer, elementRef) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.changes$ = new Subject();\n      this.nzWidth = null;\n      this.colspan = null;\n      this.colSpan = null;\n      this.rowspan = null;\n      this.rowSpan = null;\n    }\n    ngOnChanges(changes) {\n      const {\n        nzWidth,\n        colspan,\n        rowspan,\n        colSpan,\n        rowSpan\n      } = changes;\n      if (colspan || colSpan) {\n        const col = this.colspan || this.colSpan;\n        if (!isNil(col)) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'colspan', `${col}`);\n        } else {\n          this.renderer.removeAttribute(this.elementRef.nativeElement, 'colspan');\n        }\n      }\n      if (rowspan || rowSpan) {\n        const row = this.rowspan || this.rowSpan;\n        if (!isNil(row)) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'rowspan', `${row}`);\n        } else {\n          this.renderer.removeAttribute(this.elementRef.nativeElement, 'rowspan');\n        }\n      }\n      if (nzWidth || colspan) {\n        this.changes$.next();\n      }\n    }\n    static #_ = this.ɵfac = function NzThMeasureDirective_Factory(t) {\n      return new (t || NzThMeasureDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzThMeasureDirective,\n      selectors: [[\"th\"]],\n      inputs: {\n        nzWidth: \"nzWidth\",\n        colspan: \"colspan\",\n        colSpan: \"colSpan\",\n        rowspan: \"rowspan\",\n        rowSpan: \"rowSpan\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NzThMeasureDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzThSelectionComponent = /*#__PURE__*/(() => {\n  class NzThSelectionComponent {\n    constructor() {\n      this.nzSelections = [];\n      this.nzChecked = false;\n      this.nzDisabled = false;\n      this.nzIndeterminate = false;\n      this.nzShowCheckbox = false;\n      this.nzShowRowSelection = false;\n      this.nzCheckedChange = new EventEmitter();\n      this.isNzShowExpandChanged = false;\n      this.isNzShowCheckboxChanged = false;\n    }\n    onCheckedChange(checked) {\n      this.nzChecked = checked;\n      this.nzCheckedChange.emit(checked);\n    }\n    ngOnChanges(changes) {\n      const isFirstChange = value => value && value.firstChange && value.currentValue !== undefined;\n      const {\n        nzChecked,\n        nzSelections,\n        nzShowExpand,\n        nzShowCheckbox\n      } = changes;\n      if (nzShowExpand) {\n        this.isNzShowExpandChanged = true;\n      }\n      if (nzShowCheckbox) {\n        this.isNzShowCheckboxChanged = true;\n      }\n      if (isFirstChange(nzSelections) && !this.isNzShowExpandChanged) {\n        this.nzShowRowSelection = true;\n      }\n      if (isFirstChange(nzChecked) && !this.isNzShowCheckboxChanged) {\n        this.nzShowCheckbox = true;\n      }\n    }\n    static #_ = this.ɵfac = function NzThSelectionComponent_Factory(t) {\n      return new (t || NzThSelectionComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzThSelectionComponent,\n      selectors: [[\"th\", \"nzSelections\", \"\"], [\"th\", \"nzChecked\", \"\"], [\"th\", \"nzShowCheckbox\", \"\"], [\"th\", \"nzShowRowSelection\", \"\"]],\n      hostAttrs: [1, \"ant-table-selection-column\"],\n      inputs: {\n        nzSelections: \"nzSelections\",\n        nzChecked: \"nzChecked\",\n        nzDisabled: \"nzDisabled\",\n        nzIndeterminate: \"nzIndeterminate\",\n        nzShowCheckbox: \"nzShowCheckbox\",\n        nzShowRowSelection: \"nzShowRowSelection\"\n      },\n      outputs: {\n        nzCheckedChange: \"nzCheckedChange\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      attrs: _c5,\n      ngContentSelectors: _c0,\n      decls: 2,\n      vars: 6,\n      consts: [[3, \"checked\", \"disabled\", \"indeterminate\", \"listOfSelections\", \"showCheckbox\", \"showRowSelection\", \"checkedChange\"]],\n      template: function NzThSelectionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"nz-table-selection\", 0);\n          i0.ɵɵlistener(\"checkedChange\", function NzThSelectionComponent_Template_nz_table_selection_checkedChange_0_listener($event) {\n            return ctx.onCheckedChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"checked\", ctx.nzChecked)(\"disabled\", ctx.nzDisabled)(\"indeterminate\", ctx.nzIndeterminate)(\"listOfSelections\", ctx.nzSelections)(\"showCheckbox\", ctx.nzShowCheckbox)(\"showRowSelection\", ctx.nzShowRowSelection);\n        }\n      },\n      dependencies: [NzTableSelectionComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzThSelectionComponent.prototype, \"nzShowCheckbox\", void 0);\n  __decorate([InputBoolean()], NzThSelectionComponent.prototype, \"nzShowRowSelection\", void 0);\n  return NzThSelectionComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzCellAlignDirective = /*#__PURE__*/(() => {\n  class NzCellAlignDirective {\n    constructor() {\n      this.nzAlign = null;\n    }\n    static #_ = this.ɵfac = function NzCellAlignDirective_Factory(t) {\n      return new (t || NzCellAlignDirective)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzCellAlignDirective,\n      selectors: [[\"th\", \"nzAlign\", \"\"], [\"td\", \"nzAlign\", \"\"]],\n      hostVars: 2,\n      hostBindings: function NzCellAlignDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"text-align\", ctx.nzAlign);\n        }\n      },\n      inputs: {\n        nzAlign: \"nzAlign\"\n      }\n    });\n  }\n  return NzCellAlignDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzCellEllipsisDirective = /*#__PURE__*/(() => {\n  class NzCellEllipsisDirective {\n    constructor() {\n      this.nzEllipsis = true;\n    }\n    static #_ = this.ɵfac = function NzCellEllipsisDirective_Factory(t) {\n      return new (t || NzCellEllipsisDirective)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzCellEllipsisDirective,\n      selectors: [[\"th\", \"nzEllipsis\", \"\"], [\"td\", \"nzEllipsis\", \"\"]],\n      hostVars: 2,\n      hostBindings: function NzCellEllipsisDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-table-cell-ellipsis\", ctx.nzEllipsis);\n        }\n      },\n      inputs: {\n        nzEllipsis: \"nzEllipsis\"\n      }\n    });\n  }\n  __decorate([InputBoolean()], NzCellEllipsisDirective.prototype, \"nzEllipsis\", void 0);\n  return NzCellEllipsisDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzCellBreakWordDirective = /*#__PURE__*/(() => {\n  class NzCellBreakWordDirective {\n    constructor() {\n      this.nzBreakWord = true;\n    }\n    static #_ = this.ɵfac = function NzCellBreakWordDirective_Factory(t) {\n      return new (t || NzCellBreakWordDirective)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzCellBreakWordDirective,\n      selectors: [[\"th\", \"nzBreakWord\", \"\"], [\"td\", \"nzBreakWord\", \"\"]],\n      hostVars: 2,\n      hostBindings: function NzCellBreakWordDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"word-break\", ctx.nzBreakWord ? \"break-all\" : \"\");\n        }\n      },\n      inputs: {\n        nzBreakWord: \"nzBreakWord\"\n      }\n    });\n  }\n  __decorate([InputBoolean()], NzCellBreakWordDirective.prototype, \"nzBreakWord\", void 0);\n  return NzCellBreakWordDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableContentComponent = /*#__PURE__*/(() => {\n  class NzTableContentComponent {\n    constructor() {\n      this.tableLayout = 'auto';\n      this.theadTemplate = null;\n      this.contentTemplate = null;\n      this.listOfColWidth = [];\n      this.scrollX = null;\n    }\n    static #_ = this.ɵfac = function NzTableContentComponent_Factory(t) {\n      return new (t || NzTableContentComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableContentComponent,\n      selectors: [[\"table\", \"nz-table-content\", \"\"]],\n      hostVars: 8,\n      hostBindings: function NzTableContentComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"table-layout\", ctx.tableLayout)(\"width\", ctx.scrollX)(\"min-width\", ctx.scrollX ? \"100%\" : null);\n          i0.ɵɵclassProp(\"ant-table-fixed\", ctx.scrollX);\n        }\n      },\n      inputs: {\n        tableLayout: \"tableLayout\",\n        theadTemplate: \"theadTemplate\",\n        contentTemplate: \"contentTemplate\",\n        listOfColWidth: \"listOfColWidth\",\n        scrollX: \"scrollX\"\n      },\n      attrs: _c6,\n      ngContentSelectors: _c0,\n      decls: 4,\n      vars: 3,\n      consts: [[3, \"width\", \"minWidth\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"ant-table-thead\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [1, \"ant-table-thead\"]],\n      template: function NzTableContentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzTableContentComponent_col_0_Template, 1, 4, \"col\", 0);\n          i0.ɵɵtemplate(1, NzTableContentComponent_thead_1_Template, 2, 1, \"thead\", 1);\n          i0.ɵɵtemplate(2, NzTableContentComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n          i0.ɵɵprojection(3);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.listOfColWidth);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.theadTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n        }\n      },\n      dependencies: [i2$2.NgForOf, i2$2.NgIf, i2$2.NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTableContentComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableFixedRowComponent = /*#__PURE__*/(() => {\n  class NzTableFixedRowComponent {\n    constructor(nzTableStyleService, renderer) {\n      this.nzTableStyleService = nzTableStyleService;\n      this.renderer = renderer;\n      this.hostWidth$ = new BehaviorSubject(null);\n      this.enableAutoMeasure$ = new BehaviorSubject(false);\n      this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n      if (this.nzTableStyleService) {\n        const {\n          enableAutoMeasure$,\n          hostWidth$\n        } = this.nzTableStyleService;\n        enableAutoMeasure$.pipe(takeUntil(this.destroy$)).subscribe(this.enableAutoMeasure$);\n        hostWidth$.pipe(takeUntil(this.destroy$)).subscribe(this.hostWidth$);\n      }\n    }\n    ngAfterViewInit() {\n      this.nzTableStyleService.columnCount$.pipe(takeUntil(this.destroy$)).subscribe(count => {\n        this.renderer.setAttribute(this.tdElement.nativeElement, 'colspan', `${count}`);\n      });\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzTableFixedRowComponent_Factory(t) {\n      return new (t || NzTableFixedRowComponent)(i0.ɵɵdirectiveInject(NzTableStyleService), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableFixedRowComponent,\n      selectors: [[\"tr\", \"nz-table-fixed-row\", \"\"], [\"tr\", \"nzExpand\", \"\"]],\n      viewQuery: function NzTableFixedRowComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c7, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tdElement = _t.first);\n        }\n      },\n      attrs: _c8,\n      ngContentSelectors: _c0,\n      decls: 6,\n      vars: 4,\n      consts: [[1, \"nz-disable-td\", \"ant-table-cell\"], [\"tdElement\", \"\"], [\"class\", \"ant-table-expanded-row-fixed\", \"style\", \"position: sticky; left: 0px; overflow: hidden;\", 3, \"width\", 4, \"ngIf\", \"ngIfElse\"], [\"contentTemplate\", \"\"], [1, \"ant-table-expanded-row-fixed\", 2, \"position\", \"sticky\", \"left\", \"0px\", \"overflow\", \"hidden\"], [3, \"ngTemplateOutlet\"]],\n      template: function NzTableFixedRowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"td\", 0, 1);\n          i0.ɵɵtemplate(2, NzTableFixedRowComponent_div_2_Template, 3, 5, \"div\", 2);\n          i0.ɵɵpipe(3, \"async\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, NzTableFixedRowComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r2 = i0.ɵɵreference(5);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 2, ctx.enableAutoMeasure$))(\"ngIfElse\", _r2);\n        }\n      },\n      dependencies: [i2$2.NgIf, i2$2.NgTemplateOutlet, i2$2.AsyncPipe],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTableFixedRowComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableInnerDefaultComponent = /*#__PURE__*/(() => {\n  class NzTableInnerDefaultComponent {\n    constructor() {\n      this.tableLayout = 'auto';\n      this.listOfColWidth = [];\n      this.theadTemplate = null;\n      this.contentTemplate = null;\n    }\n    static #_ = this.ɵfac = function NzTableInnerDefaultComponent_Factory(t) {\n      return new (t || NzTableInnerDefaultComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableInnerDefaultComponent,\n      selectors: [[\"nz-table-inner-default\"]],\n      hostAttrs: [1, \"ant-table-container\"],\n      inputs: {\n        tableLayout: \"tableLayout\",\n        listOfColWidth: \"listOfColWidth\",\n        theadTemplate: \"theadTemplate\",\n        contentTemplate: \"contentTemplate\"\n      },\n      decls: 2,\n      vars: 4,\n      consts: [[1, \"ant-table-content\"], [\"nz-table-content\", \"\", 3, \"contentTemplate\", \"tableLayout\", \"listOfColWidth\", \"theadTemplate\"]],\n      template: function NzTableInnerDefaultComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"table\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"contentTemplate\", ctx.contentTemplate)(\"tableLayout\", ctx.tableLayout)(\"listOfColWidth\", ctx.listOfColWidth)(\"theadTemplate\", ctx.theadTemplate);\n        }\n      },\n      dependencies: [NzTableContentComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTableInnerDefaultComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* eslint-disable @angular-eslint/component-selector */\nlet NzTrMeasureComponent = /*#__PURE__*/(() => {\n  class NzTrMeasureComponent {\n    constructor(nzResizeObserver, ngZone) {\n      this.nzResizeObserver = nzResizeObserver;\n      this.ngZone = ngZone;\n      this.listOfMeasureColumn = [];\n      this.listOfAutoWidth = new EventEmitter();\n      this.destroy$ = new Subject();\n    }\n    trackByFunc(_, key) {\n      return key;\n    }\n    ngAfterViewInit() {\n      this.listOfTdElement.changes.pipe(startWith(this.listOfTdElement)).pipe(switchMap(list => combineLatest(list.toArray().map(item => this.nzResizeObserver.observe(item).pipe(map(([entry]) => {\n        const {\n          width\n        } = entry.target.getBoundingClientRect();\n        return Math.floor(width);\n      }))))), debounceTime(16), takeUntil(this.destroy$)).subscribe(data => {\n        // Caretaker note: we don't have to re-enter the Angular zone each time the stream emits.\n        // The below check is necessary to be sure that zone is not nooped through `BootstrapOptions`\n        // (`bootstrapModule(AppModule, { ngZone: 'noop' }))`. The `ngZone instanceof NgZone` may return\n        // `false` if zone is nooped, since `ngZone` will be an instance of the `NoopNgZone`.\n        // The `ResizeObserver` might be also patched through `zone.js/dist/zone-patch-resize-observer`,\n        // thus calling `ngZone.run` again will cause another change detection.\n        if (this.ngZone instanceof NgZone && NgZone.isInAngularZone()) {\n          this.listOfAutoWidth.next(data);\n        } else {\n          this.ngZone.run(() => this.listOfAutoWidth.next(data));\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzTrMeasureComponent_Factory(t) {\n      return new (t || NzTrMeasureComponent)(i0.ɵɵdirectiveInject(i1$2.NzResizeObserver), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTrMeasureComponent,\n      selectors: [[\"tr\", \"nz-table-measure-row\", \"\"]],\n      viewQuery: function NzTrMeasureComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c7, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfTdElement = _t);\n        }\n      },\n      hostAttrs: [1, \"ant-table-measure-now\"],\n      inputs: {\n        listOfMeasureColumn: \"listOfMeasureColumn\"\n      },\n      outputs: {\n        listOfAutoWidth: \"listOfAutoWidth\"\n      },\n      attrs: _c9,\n      decls: 1,\n      vars: 2,\n      consts: [[\"class\", \"nz-disable-td\", \"style\", \"padding: 0px; border: 0px; height: 0px;\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"nz-disable-td\", 2, \"padding\", \"0px\", \"border\", \"0px\", \"height\", \"0px\"], [\"tdElement\", \"\"]],\n      template: function NzTrMeasureComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTrMeasureComponent_td_0_Template, 2, 0, \"td\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.listOfMeasureColumn)(\"ngForTrackBy\", ctx.trackByFunc);\n        }\n      },\n      dependencies: [i2$2.NgForOf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTrMeasureComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* eslint-disable @angular-eslint/component-selector */\nlet NzTbodyComponent = /*#__PURE__*/(() => {\n  class NzTbodyComponent {\n    constructor(nzTableStyleService) {\n      this.nzTableStyleService = nzTableStyleService;\n      this.isInsideTable = false;\n      this.showEmpty$ = new BehaviorSubject(false);\n      this.noResult$ = new BehaviorSubject(undefined);\n      this.listOfMeasureColumn$ = new BehaviorSubject([]);\n      this.destroy$ = new Subject();\n      this.isInsideTable = !!this.nzTableStyleService;\n      if (this.nzTableStyleService) {\n        const {\n          showEmpty$,\n          noResult$,\n          listOfMeasureColumn$\n        } = this.nzTableStyleService;\n        noResult$.pipe(takeUntil(this.destroy$)).subscribe(this.noResult$);\n        listOfMeasureColumn$.pipe(takeUntil(this.destroy$)).subscribe(this.listOfMeasureColumn$);\n        showEmpty$.pipe(takeUntil(this.destroy$)).subscribe(this.showEmpty$);\n      }\n    }\n    onListOfAutoWidthChange(listOfAutoWidth) {\n      this.nzTableStyleService.setListOfAutoWidth(listOfAutoWidth);\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzTbodyComponent_Factory(t) {\n      return new (t || NzTbodyComponent)(i0.ɵɵdirectiveInject(NzTableStyleService, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTbodyComponent,\n      selectors: [[\"tbody\"]],\n      hostVars: 2,\n      hostBindings: function NzTbodyComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-table-tbody\", ctx.isInsideTable);\n        }\n      },\n      ngContentSelectors: _c0,\n      decls: 5,\n      vars: 6,\n      consts: [[4, \"ngIf\"], [\"class\", \"ant-table-placeholder\", \"nz-table-fixed-row\", \"\", 4, \"ngIf\"], [\"nz-table-measure-row\", \"\", 3, \"listOfMeasureColumn\", \"listOfAutoWidth\", 4, \"ngIf\"], [\"nz-table-measure-row\", \"\", 3, \"listOfMeasureColumn\", \"listOfAutoWidth\"], [\"nz-table-fixed-row\", \"\", 1, \"ant-table-placeholder\"], [\"nzComponentName\", \"table\", 3, \"specificContent\"]],\n      template: function NzTbodyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzTbodyComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵprojection(2);\n          i0.ɵɵtemplate(3, NzTbodyComponent_tr_3_Template, 3, 3, \"tr\", 1);\n          i0.ɵɵpipe(4, \"async\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.listOfMeasureColumn$));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 4, ctx.showEmpty$));\n        }\n      },\n      dependencies: [i2$2.NgIf, i3$1.NzEmbedEmptyComponent, NzTrMeasureComponent, NzTableFixedRowComponent, i2$2.AsyncPipe],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTbodyComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzTableInnerScrollComponent = /*#__PURE__*/(() => {\n  class NzTableInnerScrollComponent {\n    setScrollPositionClassName(clear = false) {\n      const {\n        scrollWidth,\n        scrollLeft,\n        clientWidth\n      } = this.tableBodyElement.nativeElement;\n      const leftClassName = 'ant-table-ping-left';\n      const rightClassName = 'ant-table-ping-right';\n      if (scrollWidth === clientWidth && scrollWidth !== 0 || clear) {\n        this.renderer.removeClass(this.tableMainElement, leftClassName);\n        this.renderer.removeClass(this.tableMainElement, rightClassName);\n      } else if (scrollLeft === 0) {\n        this.renderer.removeClass(this.tableMainElement, leftClassName);\n        this.renderer.addClass(this.tableMainElement, rightClassName);\n      } else if (scrollWidth === scrollLeft + clientWidth) {\n        this.renderer.removeClass(this.tableMainElement, rightClassName);\n        this.renderer.addClass(this.tableMainElement, leftClassName);\n      } else {\n        this.renderer.addClass(this.tableMainElement, leftClassName);\n        this.renderer.addClass(this.tableMainElement, rightClassName);\n      }\n    }\n    constructor(renderer, ngZone, platform, resizeService) {\n      this.renderer = renderer;\n      this.ngZone = ngZone;\n      this.platform = platform;\n      this.resizeService = resizeService;\n      this.data = [];\n      this.scrollX = null;\n      this.scrollY = null;\n      this.contentTemplate = null;\n      this.widthConfig = [];\n      this.listOfColWidth = [];\n      this.theadTemplate = null;\n      this.virtualTemplate = null;\n      this.virtualItemSize = 0;\n      this.virtualMaxBufferPx = 200;\n      this.virtualMinBufferPx = 100;\n      this.virtualForTrackBy = index => index;\n      this.headerStyleMap = {};\n      this.bodyStyleMap = {};\n      this.verticalScrollBarWidth = 0;\n      this.noDateVirtualHeight = '182px';\n      this.data$ = new Subject();\n      this.scroll$ = new Subject();\n      this.destroy$ = new Subject();\n    }\n    ngOnChanges(changes) {\n      const {\n        scrollX,\n        scrollY,\n        data\n      } = changes;\n      if (scrollX || scrollY) {\n        const hasVerticalScrollBar = this.verticalScrollBarWidth !== 0;\n        this.headerStyleMap = {\n          overflowX: 'hidden',\n          overflowY: this.scrollY && hasVerticalScrollBar ? 'scroll' : 'hidden'\n        };\n        this.bodyStyleMap = {\n          overflowY: this.scrollY ? 'scroll' : 'hidden',\n          overflowX: this.scrollX ? 'auto' : null,\n          maxHeight: this.scrollY\n        };\n        // Caretaker note: we have to emit the value outside of the Angular zone, thus DOM timer (`delay(0)`) and `scroll`\n        // event listener will be also added outside of the Angular zone.\n        this.ngZone.runOutsideAngular(() => this.scroll$.next());\n      }\n      if (data) {\n        // See the comment above.\n        this.ngZone.runOutsideAngular(() => this.data$.next());\n      }\n    }\n    ngAfterViewInit() {\n      if (this.platform.isBrowser) {\n        this.ngZone.runOutsideAngular(() => {\n          const scrollEvent$ = this.scroll$.pipe(startWith(null), delay(0), switchMap(() => fromEvent(this.tableBodyElement.nativeElement, 'scroll').pipe(startWith(true))), takeUntil(this.destroy$));\n          const resize$ = this.resizeService.subscribe().pipe(takeUntil(this.destroy$));\n          const data$ = this.data$.pipe(takeUntil(this.destroy$));\n          const setClassName$ = merge(scrollEvent$, resize$, data$, this.scroll$).pipe(startWith(true), delay(0), takeUntil(this.destroy$));\n          setClassName$.subscribe(() => this.setScrollPositionClassName());\n          scrollEvent$.pipe(filter(() => !!this.scrollY)).subscribe(() => this.tableHeaderElement.nativeElement.scrollLeft = this.tableBodyElement.nativeElement.scrollLeft);\n        });\n      }\n    }\n    ngOnDestroy() {\n      this.setScrollPositionClassName(true);\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzTableInnerScrollComponent_Factory(t) {\n      return new (t || NzTableInnerScrollComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$3.Platform), i0.ɵɵdirectiveInject(i2.NzResizeService));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableInnerScrollComponent,\n      selectors: [[\"nz-table-inner-scroll\"]],\n      viewQuery: function NzTableInnerScrollComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c10, 5, ElementRef);\n          i0.ɵɵviewQuery(_c11, 5, ElementRef);\n          i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5, CdkVirtualScrollViewport);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableHeaderElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableBodyElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkVirtualScrollViewport = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ant-table-container\"],\n      inputs: {\n        data: \"data\",\n        scrollX: \"scrollX\",\n        scrollY: \"scrollY\",\n        contentTemplate: \"contentTemplate\",\n        widthConfig: \"widthConfig\",\n        listOfColWidth: \"listOfColWidth\",\n        theadTemplate: \"theadTemplate\",\n        virtualTemplate: \"virtualTemplate\",\n        virtualItemSize: \"virtualItemSize\",\n        virtualMaxBufferPx: \"virtualMaxBufferPx\",\n        virtualMinBufferPx: \"virtualMinBufferPx\",\n        tableMainElement: \"tableMainElement\",\n        virtualForTrackBy: \"virtualForTrackBy\",\n        verticalScrollBarWidth: \"verticalScrollBarWidth\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 2,\n      consts: [[4, \"ngIf\"], [\"class\", \"ant-table-content\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"ant-table-header\", \"nz-table-hide-scrollbar\", 3, \"ngStyle\"], [\"tableHeaderElement\", \"\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"theadTemplate\"], [\"class\", \"ant-table-body\", 3, \"ngStyle\", 4, \"ngIf\"], [3, \"itemSize\", \"maxBufferPx\", \"minBufferPx\", \"height\", 4, \"ngIf\"], [1, \"ant-table-body\", 3, \"ngStyle\"], [\"tableBodyElement\", \"\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"contentTemplate\"], [3, \"itemSize\", \"maxBufferPx\", \"minBufferPx\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-table-content\", 3, \"ngStyle\"], [\"nz-table-content\", \"\", \"tableLayout\", \"fixed\", 3, \"scrollX\", \"listOfColWidth\", \"theadTemplate\", \"contentTemplate\"]],\n      template: function NzTableInnerScrollComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTableInnerScrollComponent_ng_container_0_Template, 6, 6, \"ng-container\", 0);\n          i0.ɵɵtemplate(1, NzTableInnerScrollComponent_div_1_Template, 3, 5, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.scrollY);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.scrollY);\n        }\n      },\n      dependencies: [i2$2.NgIf, i2$2.NgTemplateOutlet, i2$2.NgStyle, i4$2.CdkFixedSizeVirtualScroll, i4$2.CdkVirtualForOf, i4$2.CdkVirtualScrollViewport, NzTbodyComponent, NzTableContentComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTableInnerScrollComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableVirtualScrollDirective = /*#__PURE__*/(() => {\n  class NzTableVirtualScrollDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n    static ngTemplateContextGuard(_dir, _ctx) {\n      return true;\n    }\n    static #_ = this.ɵfac = function NzTableVirtualScrollDirective_Factory(t) {\n      return new (t || NzTableVirtualScrollDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzTableVirtualScrollDirective,\n      selectors: [[\"\", \"nz-virtual-scroll\", \"\"]],\n      exportAs: [\"nzVirtualScroll\"]\n    });\n  }\n  return NzTableVirtualScrollDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableDataService = /*#__PURE__*/(() => {\n  class NzTableDataService {\n    updatePageSize(size) {\n      this.pageSize$.next(size);\n    }\n    updateFrontPagination(pagination) {\n      this.frontPagination$.next(pagination);\n    }\n    updatePageIndex(index) {\n      this.pageIndex$.next(index);\n    }\n    updateListOfData(list) {\n      this.listOfData$.next(list);\n    }\n    constructor() {\n      this.destroy$ = new Subject();\n      this.pageIndex$ = new BehaviorSubject(1);\n      this.frontPagination$ = new BehaviorSubject(true);\n      this.pageSize$ = new BehaviorSubject(10);\n      this.listOfData$ = new BehaviorSubject([]);\n      this.pageIndexDistinct$ = this.pageIndex$.pipe(distinctUntilChanged());\n      this.pageSizeDistinct$ = this.pageSize$.pipe(distinctUntilChanged());\n      this.listOfCalcOperator$ = new BehaviorSubject([]);\n      this.queryParams$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfCalcOperator$]).pipe(debounceTime(0), skip(1), map(([pageIndex, pageSize, listOfCalc]) => ({\n        pageIndex,\n        pageSize,\n        sort: listOfCalc.filter(item => item.sortFn).map(item => ({\n          key: item.key,\n          value: item.sortOrder\n        })),\n        filter: listOfCalc.filter(item => item.filterFn).map(item => ({\n          key: item.key,\n          value: item.filterValue\n        }))\n      })));\n      this.listOfDataAfterCalc$ = combineLatest([this.listOfData$, this.listOfCalcOperator$]).pipe(map(([listOfData, listOfCalcOperator]) => {\n        let listOfDataAfterCalc = [...listOfData];\n        const listOfFilterOperator = listOfCalcOperator.filter(item => {\n          const {\n            filterValue,\n            filterFn\n          } = item;\n          const isReset = filterValue === null || filterValue === undefined || Array.isArray(filterValue) && filterValue.length === 0;\n          return !isReset && typeof filterFn === 'function';\n        });\n        for (const item of listOfFilterOperator) {\n          const {\n            filterFn,\n            filterValue\n          } = item;\n          listOfDataAfterCalc = listOfDataAfterCalc.filter(data => filterFn(filterValue, data));\n        }\n        const listOfSortOperator = listOfCalcOperator.filter(item => item.sortOrder !== null && typeof item.sortFn === 'function').sort((a, b) => +b.sortPriority - +a.sortPriority);\n        if (listOfCalcOperator.length) {\n          listOfDataAfterCalc.sort((record1, record2) => {\n            for (const item of listOfSortOperator) {\n              const {\n                sortFn,\n                sortOrder\n              } = item;\n              if (sortFn && sortOrder) {\n                const compareResult = sortFn(record1, record2, sortOrder);\n                if (compareResult !== 0) {\n                  return sortOrder === 'ascend' ? compareResult : -compareResult;\n                }\n              }\n            }\n            return 0;\n          });\n        }\n        return listOfDataAfterCalc;\n      }));\n      this.listOfFrontEndCurrentPageData$ = combineLatest([this.pageIndexDistinct$, this.pageSizeDistinct$, this.listOfDataAfterCalc$]).pipe(takeUntil(this.destroy$), filter(value => {\n        const [pageIndex, pageSize, listOfData] = value;\n        const maxPageIndex = Math.ceil(listOfData.length / pageSize) || 1;\n        return pageIndex <= maxPageIndex;\n      }), map(([pageIndex, pageSize, listOfData]) => listOfData.slice((pageIndex - 1) * pageSize, pageIndex * pageSize)));\n      this.listOfCurrentPageData$ = this.frontPagination$.pipe(switchMap(pagination => pagination ? this.listOfFrontEndCurrentPageData$ : this.listOfDataAfterCalc$));\n      this.total$ = this.frontPagination$.pipe(switchMap(pagination => pagination ? this.listOfDataAfterCalc$ : this.listOfData$), map(list => list.length), distinctUntilChanged());\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzTableDataService_Factory(t) {\n      return new (t || NzTableDataService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzTableDataService,\n      factory: NzTableDataService.ɵfac\n    });\n  }\n  return NzTableDataService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableTitleFooterComponent = /*#__PURE__*/(() => {\n  class NzTableTitleFooterComponent {\n    constructor() {\n      this.title = null;\n      this.footer = null;\n    }\n    static #_ = this.ɵfac = function NzTableTitleFooterComponent_Factory(t) {\n      return new (t || NzTableTitleFooterComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableTitleFooterComponent,\n      selectors: [[\"nz-table-title-footer\"]],\n      hostVars: 4,\n      hostBindings: function NzTableTitleFooterComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-table-title\", ctx.title !== null)(\"ant-table-footer\", ctx.footer !== null);\n        }\n      },\n      inputs: {\n        title: \"title\",\n        footer: \"footer\"\n      },\n      decls: 2,\n      vars: 2,\n      consts: [[4, \"nzStringTemplateOutlet\"]],\n      template: function NzTableTitleFooterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzTableTitleFooterComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n          i0.ɵɵtemplate(1, NzTableTitleFooterComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.title);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.footer);\n        }\n      },\n      dependencies: [i1$4.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTableTitleFooterComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NZ_CONFIG_MODULE_NAME = 'table';\nlet NzTableComponent = /*#__PURE__*/(() => {\n  class NzTableComponent {\n    onPageSizeChange(size) {\n      this.nzTableDataService.updatePageSize(size);\n    }\n    onPageIndexChange(index) {\n      this.nzTableDataService.updatePageIndex(index);\n    }\n    constructor(elementRef, nzResizeObserver, nzConfigService, cdr, nzTableStyleService, nzTableDataService, directionality) {\n      this.elementRef = elementRef;\n      this.nzResizeObserver = nzResizeObserver;\n      this.nzConfigService = nzConfigService;\n      this.cdr = cdr;\n      this.nzTableStyleService = nzTableStyleService;\n      this.nzTableDataService = nzTableDataService;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzTableLayout = 'auto';\n      this.nzShowTotal = null;\n      this.nzItemRender = null;\n      this.nzTitle = null;\n      this.nzFooter = null;\n      this.nzNoResult = undefined;\n      this.nzPageSizeOptions = [10, 20, 30, 40, 50];\n      this.nzVirtualItemSize = 0;\n      this.nzVirtualMaxBufferPx = 200;\n      this.nzVirtualMinBufferPx = 100;\n      this.nzVirtualForTrackBy = index => index;\n      this.nzLoadingDelay = 0;\n      this.nzPageIndex = 1;\n      this.nzPageSize = 10;\n      this.nzTotal = 0;\n      this.nzWidthConfig = [];\n      this.nzData = [];\n      this.nzPaginationPosition = 'bottom';\n      this.nzScroll = {\n        x: null,\n        y: null\n      };\n      this.nzPaginationType = 'default';\n      this.nzFrontPagination = true;\n      this.nzTemplateMode = false;\n      this.nzShowPagination = true;\n      this.nzLoading = false;\n      this.nzOuterBordered = false;\n      this.nzLoadingIndicator = null;\n      this.nzBordered = false;\n      this.nzSize = 'default';\n      this.nzShowSizeChanger = false;\n      this.nzHideOnSinglePage = false;\n      this.nzShowQuickJumper = false;\n      this.nzSimple = false;\n      this.nzPageSizeChange = new EventEmitter();\n      this.nzPageIndexChange = new EventEmitter();\n      this.nzQueryParams = new EventEmitter();\n      this.nzCurrentPageDataChange = new EventEmitter();\n      /** public data for ngFor tr */\n      this.data = [];\n      this.scrollX = null;\n      this.scrollY = null;\n      this.theadTemplate = null;\n      this.listOfAutoColWidth = [];\n      this.listOfManualColWidth = [];\n      this.hasFixLeft = false;\n      this.hasFixRight = false;\n      this.showPagination = true;\n      this.destroy$ = new Subject();\n      this.templateMode$ = new BehaviorSubject(false);\n      this.dir = 'ltr';\n      this.verticalScrollBarWidth = 0;\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.cdr.markForCheck();\n      });\n    }\n    ngOnInit() {\n      const {\n        pageIndexDistinct$,\n        pageSizeDistinct$,\n        listOfCurrentPageData$,\n        total$,\n        queryParams$\n      } = this.nzTableDataService;\n      const {\n        theadTemplate$,\n        hasFixLeft$,\n        hasFixRight$\n      } = this.nzTableStyleService;\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      queryParams$.pipe(takeUntil(this.destroy$)).subscribe(this.nzQueryParams);\n      pageIndexDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageIndex => {\n        if (pageIndex !== this.nzPageIndex) {\n          this.nzPageIndex = pageIndex;\n          this.nzPageIndexChange.next(pageIndex);\n        }\n      });\n      pageSizeDistinct$.pipe(takeUntil(this.destroy$)).subscribe(pageSize => {\n        if (pageSize !== this.nzPageSize) {\n          this.nzPageSize = pageSize;\n          this.nzPageSizeChange.next(pageSize);\n        }\n      });\n      total$.pipe(takeUntil(this.destroy$), filter(() => this.nzFrontPagination)).subscribe(total => {\n        if (total !== this.nzTotal) {\n          this.nzTotal = total;\n          this.cdr.markForCheck();\n        }\n      });\n      listOfCurrentPageData$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n        this.data = data;\n        this.nzCurrentPageDataChange.next(data);\n        this.cdr.markForCheck();\n      });\n      theadTemplate$.pipe(takeUntil(this.destroy$)).subscribe(theadTemplate => {\n        this.theadTemplate = theadTemplate;\n        this.cdr.markForCheck();\n      });\n      hasFixLeft$.pipe(takeUntil(this.destroy$)).subscribe(hasFixLeft => {\n        this.hasFixLeft = hasFixLeft;\n        this.cdr.markForCheck();\n      });\n      hasFixRight$.pipe(takeUntil(this.destroy$)).subscribe(hasFixRight => {\n        this.hasFixRight = hasFixRight;\n        this.cdr.markForCheck();\n      });\n      combineLatest([total$, this.templateMode$]).pipe(map(([total, templateMode]) => total === 0 && !templateMode), takeUntil(this.destroy$)).subscribe(empty => {\n        this.nzTableStyleService.setShowEmpty(empty);\n      });\n      this.verticalScrollBarWidth = measureScrollbar('vertical');\n      this.nzTableStyleService.listOfListOfThWidthPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n        this.listOfAutoColWidth = listOfWidth;\n        this.cdr.markForCheck();\n      });\n      this.nzTableStyleService.manualWidthConfigPx$.pipe(takeUntil(this.destroy$)).subscribe(listOfWidth => {\n        this.listOfManualColWidth = listOfWidth;\n        this.cdr.markForCheck();\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        nzScroll,\n        nzPageIndex,\n        nzPageSize,\n        nzFrontPagination,\n        nzData,\n        nzWidthConfig,\n        nzNoResult,\n        nzTemplateMode\n      } = changes;\n      if (nzPageIndex) {\n        this.nzTableDataService.updatePageIndex(this.nzPageIndex);\n      }\n      if (nzPageSize) {\n        this.nzTableDataService.updatePageSize(this.nzPageSize);\n      }\n      if (nzData) {\n        this.nzData = this.nzData || [];\n        this.nzTableDataService.updateListOfData(this.nzData);\n      }\n      if (nzFrontPagination) {\n        this.nzTableDataService.updateFrontPagination(this.nzFrontPagination);\n      }\n      if (nzScroll) {\n        this.setScrollOnChanges();\n      }\n      if (nzWidthConfig) {\n        this.nzTableStyleService.setTableWidthConfig(this.nzWidthConfig);\n      }\n      if (nzTemplateMode) {\n        this.templateMode$.next(this.nzTemplateMode);\n      }\n      if (nzNoResult) {\n        this.nzTableStyleService.setNoResult(this.nzNoResult);\n      }\n      this.updateShowPagination();\n    }\n    ngAfterViewInit() {\n      this.nzResizeObserver.observe(this.elementRef).pipe(map(([entry]) => {\n        const {\n          width\n        } = entry.target.getBoundingClientRect();\n        const scrollBarWidth = this.scrollY ? this.verticalScrollBarWidth : 0;\n        return Math.floor(width - scrollBarWidth);\n      }), takeUntil(this.destroy$)).subscribe(this.nzTableStyleService.hostWidth$);\n      if (this.nzTableInnerScrollComponent && this.nzTableInnerScrollComponent.cdkVirtualScrollViewport) {\n        this.cdkVirtualScrollViewport = this.nzTableInnerScrollComponent.cdkVirtualScrollViewport;\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    setScrollOnChanges() {\n      this.scrollX = this.nzScroll && this.nzScroll.x || null;\n      this.scrollY = this.nzScroll && this.nzScroll.y || null;\n      this.nzTableStyleService.setScroll(this.scrollX, this.scrollY);\n    }\n    updateShowPagination() {\n      this.showPagination = this.nzHideOnSinglePage && this.nzData.length > this.nzPageSize || this.nzData.length > 0 && !this.nzHideOnSinglePage || !this.nzFrontPagination && this.nzTotal > this.nzPageSize;\n    }\n    static #_ = this.ɵfac = function NzTableComponent_Factory(t) {\n      return new (t || NzTableComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$2.NzResizeObserver), i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzTableStyleService), i0.ɵɵdirectiveInject(NzTableDataService), i0.ɵɵdirectiveInject(i5$1.Directionality, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTableComponent,\n      selectors: [[\"nz-table\"]],\n      contentQueries: function NzTableComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzTableVirtualScrollDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzVirtualScrollDirective = _t.first);\n        }\n      },\n      viewQuery: function NzTableComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(NzTableInnerScrollComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzTableInnerScrollComponent = _t.first);\n        }\n      },\n      hostAttrs: [1, \"ant-table-wrapper\"],\n      hostVars: 2,\n      hostBindings: function NzTableComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-table-wrapper-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        nzTableLayout: \"nzTableLayout\",\n        nzShowTotal: \"nzShowTotal\",\n        nzItemRender: \"nzItemRender\",\n        nzTitle: \"nzTitle\",\n        nzFooter: \"nzFooter\",\n        nzNoResult: \"nzNoResult\",\n        nzPageSizeOptions: \"nzPageSizeOptions\",\n        nzVirtualItemSize: \"nzVirtualItemSize\",\n        nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\",\n        nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\",\n        nzVirtualForTrackBy: \"nzVirtualForTrackBy\",\n        nzLoadingDelay: \"nzLoadingDelay\",\n        nzPageIndex: \"nzPageIndex\",\n        nzPageSize: \"nzPageSize\",\n        nzTotal: \"nzTotal\",\n        nzWidthConfig: \"nzWidthConfig\",\n        nzData: \"nzData\",\n        nzPaginationPosition: \"nzPaginationPosition\",\n        nzScroll: \"nzScroll\",\n        nzPaginationType: \"nzPaginationType\",\n        nzFrontPagination: \"nzFrontPagination\",\n        nzTemplateMode: \"nzTemplateMode\",\n        nzShowPagination: \"nzShowPagination\",\n        nzLoading: \"nzLoading\",\n        nzOuterBordered: \"nzOuterBordered\",\n        nzLoadingIndicator: \"nzLoadingIndicator\",\n        nzBordered: \"nzBordered\",\n        nzSize: \"nzSize\",\n        nzShowSizeChanger: \"nzShowSizeChanger\",\n        nzHideOnSinglePage: \"nzHideOnSinglePage\",\n        nzShowQuickJumper: \"nzShowQuickJumper\",\n        nzSimple: \"nzSimple\"\n      },\n      outputs: {\n        nzPageSizeChange: \"nzPageSizeChange\",\n        nzPageIndexChange: \"nzPageIndexChange\",\n        nzQueryParams: \"nzQueryParams\",\n        nzCurrentPageDataChange: \"nzCurrentPageDataChange\"\n      },\n      exportAs: [\"nzTable\"],\n      features: [i0.ɵɵProvidersFeature([NzTableStyleService, NzTableDataService]), i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 14,\n      vars: 27,\n      consts: [[3, \"nzDelay\", \"nzSpinning\", \"nzIndicator\"], [4, \"ngIf\"], [1, \"ant-table\"], [\"tableMainElement\", \"\"], [3, \"title\", 4, \"ngIf\"], [3, \"data\", \"scrollX\", \"scrollY\", \"contentTemplate\", \"listOfColWidth\", \"theadTemplate\", \"verticalScrollBarWidth\", \"virtualTemplate\", \"virtualItemSize\", \"virtualMaxBufferPx\", \"virtualMinBufferPx\", \"tableMainElement\", \"virtualForTrackBy\", 4, \"ngIf\", \"ngIfElse\"], [\"defaultTemplate\", \"\"], [3, \"footer\", 4, \"ngIf\"], [\"paginationTemplate\", \"\"], [\"contentTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [3, \"title\"], [3, \"data\", \"scrollX\", \"scrollY\", \"contentTemplate\", \"listOfColWidth\", \"theadTemplate\", \"verticalScrollBarWidth\", \"virtualTemplate\", \"virtualItemSize\", \"virtualMaxBufferPx\", \"virtualMinBufferPx\", \"tableMainElement\", \"virtualForTrackBy\"], [3, \"tableLayout\", \"listOfColWidth\", \"theadTemplate\", \"contentTemplate\"], [3, \"footer\"], [\"class\", \"ant-table-pagination ant-table-pagination-right\", 3, \"hidden\", \"nzShowSizeChanger\", \"nzPageSizeOptions\", \"nzItemRender\", \"nzShowQuickJumper\", \"nzHideOnSinglePage\", \"nzShowTotal\", \"nzSize\", \"nzPageSize\", \"nzTotal\", \"nzSimple\", \"nzPageIndex\", \"nzPageSizeChange\", \"nzPageIndexChange\", 4, \"ngIf\"], [1, \"ant-table-pagination\", \"ant-table-pagination-right\", 3, \"hidden\", \"nzShowSizeChanger\", \"nzPageSizeOptions\", \"nzItemRender\", \"nzShowQuickJumper\", \"nzHideOnSinglePage\", \"nzShowTotal\", \"nzSize\", \"nzPageSize\", \"nzTotal\", \"nzSimple\", \"nzPageIndex\", \"nzPageSizeChange\", \"nzPageIndexChange\"]],\n      template: function NzTableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"nz-spin\", 0);\n          i0.ɵɵtemplate(1, NzTableComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2, 3);\n          i0.ɵɵtemplate(4, NzTableComponent_nz_table_title_footer_4_Template, 1, 1, \"nz-table-title-footer\", 4);\n          i0.ɵɵtemplate(5, NzTableComponent_nz_table_inner_scroll_5_Template, 1, 13, \"nz-table-inner-scroll\", 5);\n          i0.ɵɵtemplate(6, NzTableComponent_ng_template_6_Template, 1, 4, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(8, NzTableComponent_nz_table_title_footer_8_Template, 1, 1, \"nz-table-title-footer\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, NzTableComponent_ng_container_9_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, NzTableComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(12, NzTableComponent_ng_template_12_Template, 1, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r4 = i0.ɵɵreference(7);\n          i0.ɵɵproperty(\"nzDelay\", ctx.nzLoadingDelay)(\"nzSpinning\", ctx.nzLoading)(\"nzIndicator\", ctx.nzLoadingIndicator);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzPaginationPosition === \"both\" || ctx.nzPaginationPosition === \"top\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"ant-table-rtl\", ctx.dir === \"rtl\")(\"ant-table-fixed-header\", ctx.nzData.length && ctx.scrollY)(\"ant-table-fixed-column\", ctx.scrollX)(\"ant-table-has-fix-left\", ctx.hasFixLeft)(\"ant-table-has-fix-right\", ctx.hasFixRight)(\"ant-table-bordered\", ctx.nzBordered)(\"nz-table-out-bordered\", ctx.nzOuterBordered && !ctx.nzBordered)(\"ant-table-middle\", ctx.nzSize === \"middle\")(\"ant-table-small\", ctx.nzSize === \"small\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzTitle);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.scrollY || ctx.scrollX)(\"ngIfElse\", _r4);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzFooter);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzPaginationPosition === \"both\" || ctx.nzPaginationPosition === \"bottom\");\n        }\n      },\n      dependencies: [i2$2.NgIf, i2$2.NgTemplateOutlet, i7$1.NzPaginationComponent, i8$1.NzSpinComponent, NzTableTitleFooterComponent, NzTableInnerDefaultComponent, NzTableInnerScrollComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzTableComponent.prototype, \"nzFrontPagination\", void 0);\n  __decorate([InputBoolean()], NzTableComponent.prototype, \"nzTemplateMode\", void 0);\n  __decorate([InputBoolean()], NzTableComponent.prototype, \"nzShowPagination\", void 0);\n  __decorate([InputBoolean()], NzTableComponent.prototype, \"nzLoading\", void 0);\n  __decorate([InputBoolean()], NzTableComponent.prototype, \"nzOuterBordered\", void 0);\n  __decorate([WithConfig()], NzTableComponent.prototype, \"nzLoadingIndicator\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzBordered\", void 0);\n  __decorate([WithConfig()], NzTableComponent.prototype, \"nzSize\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzShowSizeChanger\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzHideOnSinglePage\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzShowQuickJumper\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzTableComponent.prototype, \"nzSimple\", void 0);\n  return NzTableComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTrDirective = /*#__PURE__*/(() => {\n  class NzTrDirective {\n    constructor(nzTableStyleService) {\n      this.nzTableStyleService = nzTableStyleService;\n      this.destroy$ = new Subject();\n      this.listOfFixedColumns$ = new ReplaySubject(1);\n      this.listOfColumns$ = new ReplaySubject(1);\n      this.listOfFixedColumnsChanges$ = this.listOfFixedColumns$.pipe(switchMap(list => merge(...[this.listOfFixedColumns$, ...list.map(c => c.changes$)]).pipe(mergeMap(() => this.listOfFixedColumns$))), takeUntil(this.destroy$));\n      this.listOfFixedLeftColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzLeft !== false)));\n      this.listOfFixedRightColumnChanges$ = this.listOfFixedColumnsChanges$.pipe(map(list => list.filter(item => item.nzRight !== false)));\n      this.listOfColumnsChanges$ = this.listOfColumns$.pipe(switchMap(list => merge(...[this.listOfColumns$, ...list.map(c => c.changes$)]).pipe(mergeMap(() => this.listOfColumns$))), takeUntil(this.destroy$));\n      this.isInsideTable = false;\n      this.isInsideTable = !!nzTableStyleService;\n    }\n    ngAfterContentInit() {\n      if (this.nzTableStyleService) {\n        this.listOfCellFixedDirective.changes.pipe(startWith(this.listOfCellFixedDirective), takeUntil(this.destroy$)).subscribe(this.listOfFixedColumns$);\n        this.listOfNzThDirective.changes.pipe(startWith(this.listOfNzThDirective), takeUntil(this.destroy$)).subscribe(this.listOfColumns$);\n        /** set last left and first right **/\n        this.listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeft => {\n          listOfFixedLeft.forEach(cell => cell.setIsLastLeft(cell === listOfFixedLeft[listOfFixedLeft.length - 1]));\n        });\n        this.listOfFixedRightColumnChanges$.subscribe(listOfFixedRight => {\n          listOfFixedRight.forEach(cell => cell.setIsFirstRight(cell === listOfFixedRight[0]));\n        });\n        /** calculate fixed nzLeft and nzRight **/\n        combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedLeftColumnChanges$]).pipe(takeUntil(this.destroy$)).subscribe(([listOfAutoWidth, listOfLeftCell]) => {\n          listOfLeftCell.forEach((cell, index) => {\n            if (cell.isAutoLeft) {\n              const currentArray = listOfLeftCell.slice(0, index);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth.slice(0, count).reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoLeftWidth(`${width}px`);\n            }\n          });\n        });\n        combineLatest([this.nzTableStyleService.listOfListOfThWidth$, this.listOfFixedRightColumnChanges$]).pipe(takeUntil(this.destroy$)).subscribe(([listOfAutoWidth, listOfRightCell]) => {\n          listOfRightCell.forEach((_, index) => {\n            const cell = listOfRightCell[listOfRightCell.length - index - 1];\n            if (cell.isAutoRight) {\n              const currentArray = listOfRightCell.slice(listOfRightCell.length - index, listOfRightCell.length);\n              const count = currentArray.reduce((pre, cur) => pre + (cur.colspan || cur.colSpan || 1), 0);\n              const width = listOfAutoWidth.slice(listOfAutoWidth.length - count, listOfAutoWidth.length).reduce((pre, cur) => pre + cur, 0);\n              cell.setAutoRightWidth(`${width}px`);\n            }\n          });\n        });\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzTrDirective_Factory(t) {\n      return new (t || NzTrDirective)(i0.ɵɵdirectiveInject(NzTableStyleService, 8));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzTrDirective,\n      selectors: [[\"tr\", 3, \"mat-row\", \"\", 3, \"mat-header-row\", \"\", 3, \"nz-table-measure-row\", \"\", 3, \"nzExpand\", \"\", 3, \"nz-table-fixed-row\", \"\"]],\n      contentQueries: function NzTrDirective_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzThMeasureDirective, 4);\n          i0.ɵɵcontentQuery(dirIndex, NzCellFixedDirective, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzThDirective = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfCellFixedDirective = _t);\n        }\n      },\n      hostVars: 2,\n      hostBindings: function NzTrDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-table-row\", ctx.isInsideTable);\n        }\n      }\n    });\n  }\n  return NzTrDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/* eslint-disable @angular-eslint/component-selector */\nlet NzTheadComponent = /*#__PURE__*/(() => {\n  class NzTheadComponent {\n    constructor(elementRef, renderer, nzTableStyleService, nzTableDataService) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.nzTableStyleService = nzTableStyleService;\n      this.nzTableDataService = nzTableDataService;\n      this.destroy$ = new Subject();\n      this.isInsideTable = false;\n      this.nzSortOrderChange = new EventEmitter();\n      this.isInsideTable = !!this.nzTableStyleService;\n    }\n    ngOnInit() {\n      if (this.nzTableStyleService) {\n        this.nzTableStyleService.setTheadTemplate(this.templateRef);\n      }\n    }\n    ngAfterContentInit() {\n      if (this.nzTableStyleService) {\n        const firstTableRow$ = this.listOfNzTrDirective.changes.pipe(startWith(this.listOfNzTrDirective), map(item => item && item.first));\n        const listOfColumnsChanges$ = firstTableRow$.pipe(switchMap(firstTableRow => firstTableRow ? firstTableRow.listOfColumnsChanges$ : EMPTY), takeUntil(this.destroy$));\n        listOfColumnsChanges$.subscribe(data => this.nzTableStyleService.setListOfTh(data));\n        /** TODO: need reset the measure row when scrollX change **/\n        this.nzTableStyleService.enableAutoMeasure$.pipe(switchMap(enable => enable ? listOfColumnsChanges$ : of([]))).pipe(takeUntil(this.destroy$)).subscribe(data => this.nzTableStyleService.setListOfMeasureColumn(data));\n        const listOfFixedLeftColumnChanges$ = firstTableRow$.pipe(switchMap(firstTr => firstTr ? firstTr.listOfFixedLeftColumnChanges$ : EMPTY), takeUntil(this.destroy$));\n        const listOfFixedRightColumnChanges$ = firstTableRow$.pipe(switchMap(firstTr => firstTr ? firstTr.listOfFixedRightColumnChanges$ : EMPTY), takeUntil(this.destroy$));\n        listOfFixedLeftColumnChanges$.subscribe(listOfFixedLeftColumn => {\n          this.nzTableStyleService.setHasFixLeft(listOfFixedLeftColumn.length !== 0);\n        });\n        listOfFixedRightColumnChanges$.subscribe(listOfFixedRightColumn => {\n          this.nzTableStyleService.setHasFixRight(listOfFixedRightColumn.length !== 0);\n        });\n      }\n      if (this.nzTableDataService) {\n        const listOfColumn$ = this.listOfNzThAddOnComponent.changes.pipe(startWith(this.listOfNzThAddOnComponent));\n        const manualSort$ = listOfColumn$.pipe(switchMap(() => merge(...this.listOfNzThAddOnComponent.map(th => th.manualClickOrder$))), takeUntil(this.destroy$));\n        manualSort$.subscribe(data => {\n          const emitValue = {\n            key: data.nzColumnKey,\n            value: data.sortOrder\n          };\n          this.nzSortOrderChange.emit(emitValue);\n          if (data.nzSortFn && data.nzSortPriority === false) {\n            this.listOfNzThAddOnComponent.filter(th => th !== data).forEach(th => th.clearSortOrder());\n          }\n        });\n        const listOfCalcOperator$ = listOfColumn$.pipe(switchMap(list => merge(...[listOfColumn$, ...list.map(c => c.calcOperatorChange$)]).pipe(mergeMap(() => listOfColumn$))), map(list => list.filter(item => !!item.nzSortFn || !!item.nzFilterFn).map(item => {\n          const {\n            nzSortFn,\n            sortOrder,\n            nzFilterFn,\n            nzFilterValue,\n            nzSortPriority,\n            nzColumnKey\n          } = item;\n          return {\n            key: nzColumnKey,\n            sortFn: nzSortFn,\n            sortPriority: nzSortPriority,\n            sortOrder: sortOrder,\n            filterFn: nzFilterFn,\n            filterValue: nzFilterValue\n          };\n        })),\n        // TODO: after checked error here\n        delay(0), takeUntil(this.destroy$));\n        listOfCalcOperator$.subscribe(list => {\n          this.nzTableDataService.listOfCalcOperator$.next(list);\n        });\n      }\n    }\n    ngAfterViewInit() {\n      if (this.nzTableStyleService) {\n        this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzTheadComponent_Factory(t) {\n      return new (t || NzTheadComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NzTableStyleService, 8), i0.ɵɵdirectiveInject(NzTableDataService, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzTheadComponent,\n      selectors: [[\"thead\", 9, \"ant-table-thead\"]],\n      contentQueries: function NzTheadComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzTrDirective, 5);\n          i0.ɵɵcontentQuery(dirIndex, NzThAddOnComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzTrDirective = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzThAddOnComponent = _t);\n        }\n      },\n      viewQuery: function NzTheadComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c13, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n        }\n      },\n      outputs: {\n        nzSortOrderChange: \"nzSortOrderChange\"\n      },\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 1,\n      consts: [[\"contentTemplate\", \"\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n      template: function NzTheadComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzTheadComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(2, NzTheadComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isInsideTable);\n        }\n      },\n      dependencies: [i2$2.NgIf, i2$2.NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzTheadComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTrExpandDirective = /*#__PURE__*/(() => {\n  class NzTrExpandDirective {\n    constructor() {\n      this.nzExpand = true;\n    }\n    static #_ = this.ɵfac = function NzTrExpandDirective_Factory(t) {\n      return new (t || NzTrExpandDirective)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzTrExpandDirective,\n      selectors: [[\"tr\", \"nzExpand\", \"\"]],\n      hostAttrs: [1, \"ant-table-expanded-row\"],\n      hostVars: 1,\n      hostBindings: function NzTrExpandDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"hidden\", !ctx.nzExpand);\n        }\n      },\n      inputs: {\n        nzExpand: \"nzExpand\"\n      }\n    });\n  }\n  return NzTrExpandDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTableModule = /*#__PURE__*/(() => {\n  class NzTableModule {\n    static #_ = this.ɵfac = function NzTableModule_Factory(t) {\n      return new (t || NzTableModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzTableModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BidiModule, NzMenuModule, FormsModule, NzOutletModule, NzRadioModule, NzCheckboxModule, NzDropDownModule, NzButtonModule, CommonModule, PlatformModule, NzPaginationModule, NzResizeObserverModule, NzSpinModule, NzI18nModule, NzIconModule, NzEmptyModule, ScrollingModule]\n    });\n  }\n  return NzTableModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCellAlignDirective, NzCellBreakWordDirective, NzCellEllipsisDirective, NzCellFixedDirective, NzFilterTriggerComponent, NzRowExpandButtonDirective, NzRowIndentDirective, NzTableCellDirective, NzTableComponent, NzTableContentComponent, NzTableDataService, NzTableFilterComponent, NzTableFixedRowComponent, NzTableInnerDefaultComponent, NzTableInnerScrollComponent, NzTableModule, NzTableSelectionComponent, NzTableSortersComponent, NzTableStyleService, NzTableTitleFooterComponent, NzTableVirtualScrollDirective, NzTbodyComponent, NzTdAddOnComponent, NzThAddOnComponent, NzThMeasureDirective, NzThSelectionComponent, NzTheadComponent, NzTrDirective, NzTrExpandDirective, NzTrMeasureComponent };\n//# sourceMappingURL=ng-zorro-antd-table.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}