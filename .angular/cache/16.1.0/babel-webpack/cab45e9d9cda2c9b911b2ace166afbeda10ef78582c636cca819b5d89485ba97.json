{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class CostTypeService {\n  constructor(costTypeService) {\n    this.costTypeService = costTypeService;\n  }\n  getAllCostTypes() {\n    return this.costTypeService.getAll('costtype', 'getAll');\n  }\n  getAllCostTypesPaginated(data) {\n    return this.costTypeService.search('costtype', 'getAllPaginated', data);\n  }\n  getByCostType(costType) {\n    return this.costTypeService.getSingleById(\"costtype\", \"getByCostType\", costType);\n  }\n  saveCostType(data) {\n    return this.costTypeService.add('costtype', 'save', data);\n  }\n  checkExist(costType) {\n    return this.costTypeService.getSingleById('costtype', 'checkExist', costType);\n  }\n  deleteByCostType(costType) {\n    return this.costTypeService.deleteById(\"costtype\", \"deleteByCostType\", costType);\n  }\n  static #_ = this.ɵfac = function CostTypeService_Factory(t) {\n    return new (t || CostTypeService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CostTypeService,\n    factory: CostTypeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CostTypeService","constructor","costTypeService","getAllCostTypes","getAll","getAllCostTypesPaginated","data","search","getByCostType","costType","getSingleById","saveCostType","add","checkExist","deleteByCostType","deleteById","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/costtype/services/costtype.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CostTypeService {\n\n    constructor(\n        private costTypeService: DataService<any>,\n\n    ) { }\n\n    public getAllCostTypes() {\n        return this.costTypeService.getAll('costtype', 'getAll');\n    }\n\n    public getAllCostTypesPaginated(data:any) {\n        return this.costTypeService.search('costtype', 'getAllPaginated',data);\n    }\n\n    public getByCostType(costType: any) {\n        return this.costTypeService.getSingleById(\"costtype\", \"getByCostType\", costType);\n    }\n\n    public saveCostType(data: any): Observable<any> {\n        return this.costTypeService.add('costtype', 'save', data);\n    }\n\n    public checkExist(costType: any) {\n        return this.costTypeService.getSingleById('costtype', 'checkExist', costType);\n    }\n\n    public deleteByCostType(costType: any) {\n        return this.costTypeService.deleteById(\"costtype\", \"deleteByCostType\", costType);\n    }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAExBC,YACYC,eAAiC;IAAjC,KAAAA,eAAe,GAAfA,eAAe;EAEvB;EAEGC,eAAeA,CAAA;IAClB,OAAO,IAAI,CAACD,eAAe,CAACE,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC;EAC5D;EAEOC,wBAAwBA,CAACC,IAAQ;IACpC,OAAO,IAAI,CAACJ,eAAe,CAACK,MAAM,CAAC,UAAU,EAAE,iBAAiB,EAACD,IAAI,CAAC;EAC1E;EAEOE,aAAaA,CAACC,QAAa;IAC9B,OAAO,IAAI,CAACP,eAAe,CAACQ,aAAa,CAAC,UAAU,EAAE,eAAe,EAAED,QAAQ,CAAC;EACpF;EAEOE,YAAYA,CAACL,IAAS;IACzB,OAAO,IAAI,CAACJ,eAAe,CAACU,GAAG,CAAC,UAAU,EAAE,MAAM,EAAEN,IAAI,CAAC;EAC7D;EAEOO,UAAUA,CAACJ,QAAa;IAC3B,OAAO,IAAI,CAACP,eAAe,CAACQ,aAAa,CAAC,UAAU,EAAE,YAAY,EAAED,QAAQ,CAAC;EACjF;EAEOK,gBAAgBA,CAACL,QAAa;IACjC,OAAO,IAAI,CAACP,eAAe,CAACa,UAAU,CAAC,UAAU,EAAE,kBAAkB,EAAEN,QAAQ,CAAC;EACpF;EAAC,QAAAO,CAAA,G;qBA7BQhB,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrB,eAAe;IAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}