{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../services/request-documents.service\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"ng-zorro-antd/table\";\nimport * as i11 from \"ng-zorro-antd/input\";\nfunction AddRequestDocumentsComponent_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"p\");\n    i0.ɵɵtext(2, \"Selected file exceeds the size limit of 1MB.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 22)(4, \"div\", 23)(5, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AddRequestDocumentsComponent_ng_template_28_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClickOk());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nconst _c1 = function () {\n  return {\n    width: \"25vw\"\n  };\n};\nexport let AddRequestDocumentsComponent = /*#__PURE__*/(() => {\n  class AddRequestDocumentsComponent {\n    constructor(data, confirmationService, dialog, dialogRef, formBuilder, datePipe, requestDocumentService, messageService) {\n      this.data = data;\n      this.confirmationService = confirmationService;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.formBuilder = formBuilder;\n      this.datePipe = datePipe;\n      this.requestDocumentService = requestDocumentService;\n      this.messageService = messageService;\n      this.fileName = \"No file chosen\";\n      this.errorMsg = '';\n      this.fileSelected = false;\n      this.subscriptions = [];\n      this.showWarning = false;\n      this.documentsForm = this.formBuilder.group({\n        requestDocId: 0,\n        requestId: null,\n        documentName: null,\n        docType: null,\n        documentContent: null,\n        dateAdded: null,\n        docDescription: null\n      });\n    }\n    ngOnInit() {\n      if (this.data !== null) {\n        this.documentsForm.patchValue({\n          requestId: parseInt(this.data.requestId)\n        });\n      }\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close(false);\n        }\n      });\n    }\n    fileChangeEvent(event) {\n      var file = event.target.files[0];\n      const maxFileSize = 1 * 1024 * 1024; // 1MB in bytes\n      if (file.size > maxFileSize) {\n        this.showWarning = true; // Show warning message for file size exceeding the limit\n      } else {\n        this.showWarning = false;\n        this.fileSelected = true;\n        let fileReader = new FileReader();\n        this.selectedFile = file;\n        this.fileName = this.selectedFile.name;\n        fileReader.onload = e => {\n          const content = fileReader.result; // Retrieve the file content from the result property\n          const extension = this.getFileExtension(this.selectedFile.name); // Extract the file extension\n          this.documentsForm.patchValue({\n            documentName: this.selectedFile.name,\n            docType: extension,\n            documentContent: content\n          });\n        };\n        fileReader.readAsDataURL(file);\n      }\n    }\n    getFileExtension(fileName) {\n      const regex = /(?:\\.([^.]+))?$/;\n      const result = regex.exec(fileName);\n      if (result && result[1]) {\n        return result[1];\n      } else {\n        return ''; // Return an empty string or handle the situation according to your requirements\n      }\n    }\n\n    onSaveDocuments() {\n      const data = this.documentsForm.value;\n      const uploadData = new FormData();\n      uploadData.set('document', this.selectedFile, data.documentName);\n      uploadData.set(\"requestId\", data.requestId);\n      uploadData.set(\"requestDocId\", data.requestDocId);\n      uploadData.set(\"documemtType\", data.docType);\n      uploadData.set(\"documentName\", data.documentName);\n      uploadData.set(\"docDescription\", data.docDescription);\n      this.requestDocumentService.saveDocuments(uploadData).subscribe(res => {\n        if (res.status === 200) {\n          this.dialogRef.close(res);\n        }\n      });\n    }\n    onClickOk() {\n      this.showWarning = false;\n      this.fileSelected = false;\n    }\n    static #_ = this.ɵfac = function AddRequestDocumentsComponent_Factory(t) {\n      return new (t || AddRequestDocumentsComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i5.RequestDocumentsService), i0.ɵɵdirectiveInject(i1.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddRequestDocumentsComponent,\n      selectors: [[\"app-add-request-documents\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 29,\n      vars: 13,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [\"id\", \"documents\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"display\", \"flex\", \"align-items\", \"center\"], [\"pButton\", \"\", \"label\", \"Select File \", \"type\", \"button\", \"icon\", \"pi pi-image\", \"iconPos\", \"left\", 1, \"p-button\", 2, \"margin-right\", \"5px\", 3, \"click\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"width\", \"60%\"], [1, \"filename\", 3, \"title\"], [\"type\", \"file\", \"hidden\", \"\", \"accept\", \".jpg, .jpeg, .png, .pdf,.doc,.docx, .xlsx\", 2, \"margin-bottom\", \"3px\", 3, \"change\"], [\"_fileInput\", \"\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [3, \"nzMaxCharacterCount\"], [\"name\", \"description\", \"rows\", \"4\", \"nz-input\", \"\", \"maxlength\", \"512\", \"formControlName\", \"docDescription\", 1, \"form-control\", \"note-border\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Warning\", 3, \"visible\", \"closable\", \"visibleChange\"], [\"pTemplate\", \"caption\"], [1, \"m-2\"], [1, \"d-flex\", \"flex-row\", \"justify-content-end\"], [2, \"display\", \"flex\", \"padding-left\", \"6px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Ok\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"8px\", 3, \"click\"]],\n      template: function AddRequestDocumentsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r4 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Add Documents\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"mat-card\")(4, \"mat-card-content\", 2)(5, \"form\", 3)(6, \"table\", 4)(7, \"tr\")(8, \"td\")(9, \"div\", 5)(10, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function AddRequestDocumentsComponent_Template_button_click_10_listener() {\n            i0.ɵɵrestoreView(_r4);\n            const _r0 = i0.ɵɵreference(15);\n            return i0.ɵɵresetView(_r0.click());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 7)(12, \"p\", 8);\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"input\", 9, 10);\n          i0.ɵɵlistener(\"change\", function AddRequestDocumentsComponent_Template_input_change_14_listener($event) {\n            return ctx.fileChangeEvent($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(16, \"tr\")(17, \"td\")(18, \"div\", 11)(19, \"label\", 12);\n          i0.ɵɵtext(20, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"nz-textarea-count\", 13);\n          i0.ɵɵelement(22, \"textarea\", 14);\n          i0.ɵɵelementEnd()()()()()()()()();\n          i0.ɵɵelementStart(23, \"mat-dialog-actions\", 15)(24, \"p-button\", 16);\n          i0.ɵɵlistener(\"click\", function AddRequestDocumentsComponent_Template_p_button_click_24_listener() {\n            return ctx.onSaveDocuments();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"p-button\", 17);\n          i0.ɵɵlistener(\"click\", function AddRequestDocumentsComponent_Template_p_button_click_25_listener() {\n            return ctx.confirmDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(26, \"p-confirmDialog\", 18);\n          i0.ɵɵelementStart(27, \"p-dialog\", 19);\n          i0.ɵɵlistener(\"visibleChange\", function AddRequestDocumentsComponent_Template_p_dialog_visibleChange_27_listener($event) {\n            return ctx.showWarning = $event;\n          });\n          i0.ɵɵtemplate(28, AddRequestDocumentsComponent_ng_template_28_Template, 6, 0, \"ng-template\", 20);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.documentsForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵpropertyInterpolate(\"title\", ctx.fileName);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(ctx.fileName);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"nzMaxCharacterCount\", 512);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", !ctx.fileSelected);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(11, _c0));\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c1));\n          i0.ɵɵproperty(\"visible\", ctx.showWarning)(\"closable\", false);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MaxLengthValidator, i3.FormGroupDirective, i3.FormControlName, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i6.MatLegacyCard, i6.MatLegacyCardContent, i1.PrimeTemplate, i7.ButtonDirective, i7.Button, i8.Dialog, i9.ConfirmDialog, i10.NzTableCellDirective, i10.NzTrDirective, i11.NzTextareaCountComponent, i11.NzInputDirective],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;margin-right:15px}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}  .mat-typography p{margin:0}\"]\n    });\n  }\n  return AddRequestDocumentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}