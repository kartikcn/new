{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/data.service\";\nexport class ToolsService {\n  constructor(service) {\n    this.service = service;\n  }\n  getAllTools() {\n    return this.service.getAll('tools', 'getList');\n  }\n  getAllToolsPaginated(data) {\n    return this.service.search('tools', 'getListPaginated', data);\n  }\n  getToolById(id) {\n    return this.service.getSingleById(\"tools\", \"getById\", id);\n  }\n  saveTool(toolType) {\n    return this.service.add('tools', 'save', toolType);\n  }\n  deleteById(id) {\n    return this.service.getSingleById(\"tools\", \"delete\", id);\n  }\n  checkExists(id) {\n    return this.service.getSingleById(\"tools\", \"check\", id);\n  }\n  static #_ = this.ɵfac = function ToolsService_Factory(t) {\n    return new (t || ToolsService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ToolsService,\n    factory: ToolsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ToolsService","constructor","service","getAllTools","getAll","getAllToolsPaginated","data","search","getToolById","id","getSingleById","saveTool","toolType","add","deleteById","checkExists","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/tools/services/tools.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from '../../../../services/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolsService {\n\n  constructor(\n    private service: DataService<any>,\n\n  ) { }\n\n\n  public getAllTools() {\n    return this.service.getAll('tools', 'getList');\n  }\n\n  public getAllToolsPaginated(data:any) {\n    return this.service.search('tools', 'getListPaginated',data);\n  }\n\n  public getToolById(id: any) {\n    return this.service.getSingleById(\"tools\", \"getById\", id);\n  }\n\n  public saveTool(toolType: any): Observable<any> {\n    return this.service.add('tools', 'save', toolType);\n  }\n\n  public deleteById(id: any) {\n    return this.service.getSingleById(\"tools\", \"delete\", id);\n  }\n  public checkExists(id: any) {\n    return this.service.getSingleById(\"tools\", \"check\", id);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YACUC,OAAyB;IAAzB,KAAAA,OAAO,GAAPA,OAAO;EAEb;EAGGC,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACD,OAAO,CAACE,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC;EAChD;EAEOC,oBAAoBA,CAACC,IAAQ;IAClC,OAAO,IAAI,CAACJ,OAAO,CAACK,MAAM,CAAC,OAAO,EAAE,kBAAkB,EAACD,IAAI,CAAC;EAC9D;EAEOE,WAAWA,CAACC,EAAO;IACxB,OAAO,IAAI,CAACP,OAAO,CAACQ,aAAa,CAAC,OAAO,EAAE,SAAS,EAAED,EAAE,CAAC;EAC3D;EAEOE,QAAQA,CAACC,QAAa;IAC3B,OAAO,IAAI,CAACV,OAAO,CAACW,GAAG,CAAC,OAAO,EAAE,MAAM,EAAED,QAAQ,CAAC;EACpD;EAEOE,UAAUA,CAACL,EAAO;IACvB,OAAO,IAAI,CAACP,OAAO,CAACQ,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAED,EAAE,CAAC;EAC1D;EACOM,WAAWA,CAACN,EAAO;IACxB,OAAO,IAAI,CAACP,OAAO,CAACQ,aAAa,CAAC,OAAO,EAAE,OAAO,EAAED,EAAE,CAAC;EACzD;EAAC,QAAAO,CAAA,G;qBA7BUhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}