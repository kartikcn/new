{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../provider/rm-resources.provider\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"primeng/table\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/toast\";\nfunction ResourceAssignScreenComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"h4\");\n    i0.ɵɵtext(3, \"Available Resources \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ResourceAssignScreenComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 9);\n    i0.ɵɵelementStart(2, \"th\", 10)(3, \"div\", 11)(4, \"div\", 12)(5, \"p\", 13);\n    i0.ɵɵtext(6, \"Resource Title\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 14);\n    i0.ɵɵelement(8, \"p-sortIcon\", 15)(9, \"p-columnFilter\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 17)(11, \"div\", 11)(12, \"div\", 12)(13, \"p\", 13);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 14);\n    i0.ɵɵelement(16, \"p-sortIcon\", 18)(17, \"p-columnFilter\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 20)(19, \"div\", 11)(20, \"div\", 12)(21, \"p\", 13);\n    i0.ɵɵtext(22, \"Quantity\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 14);\n    i0.ɵɵelement(24, \"p-sortIcon\", 21)(25, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ResourceAssignScreenComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 9)(2, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ResourceAssignScreenComponent_ng_template_4_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const resource_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAdd(resource_r4));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const resource_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(resource_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resource_r4.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resource_r4.quanity);\n  }\n}\nfunction ResourceAssignScreenComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let ResourceAssignScreenComponent = /*#__PURE__*/(() => {\n  class ResourceAssignScreenComponent {\n    constructor(rmResourceProvider, messageService) {\n      this.rmResourceProvider = rmResourceProvider;\n      this.messageService = messageService;\n      this.selectedScreens = [];\n      this.loading = false;\n      this.unAssignedResources = [];\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumUsers = [];\n      this.enummTypeData = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.allScreenProcsPanels = new EventEmitter();\n    }\n    ngOnInit() {}\n    onAdd(resource) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        blId: this.blId,\n        flId: this.flId,\n        rmId: this.rmId,\n        resourcesId: resource.resourcesId,\n        costPerUnit: resource.costPerUnit,\n        title: resource.title,\n        quantity: resource.quanity,\n        rmResourcesId: 0\n      };\n      this.rmResourceProvider.openDialog(dialogConfig);\n      this.rmResourceProvider.onDialogueClosed.subscribe(result => {\n        if (result != null) {\n          this.messageService.clear();\n          this.messageService.add({\n            key: 'rmResource',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          setTimeout(() => {\n            this.allScreenProcsPanels.emit(\"true\");\n          }, 1000);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function ResourceAssignScreenComponent_Factory(t) {\n      return new (t || ResourceAssignScreenComponent)(i0.ɵɵdirectiveInject(i1.RmResourcesDialogueProvider), i0.ɵɵdirectiveInject(i2.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResourceAssignScreenComponent,\n      selectors: [[\"app-resource-assign-screen\"]],\n      outputs: {\n        allScreenProcsPanels: \"allScreenProcsPanels\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 7,\n      vars: 9,\n      consts: [[1, \"card\"], [\"dataKey\", \"userScreensNum\", \"styleClass\", \"p-datatable-customers\", \"scrollHeight\", \"250px\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"value\", \"selection\", \"scrollable\", \"loading\", \"showCurrentPageReport\", \"paginator\", \"rows\", \"rowsPerPageOptions\", \"selectionChange\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"key\", \"rmResource\", \"position\", \"top-right\"], [1, \"d-flex\", \"flex-row\"], [2, \"flex\", \"auto\"], [2, \"width\", \"3rem\"], [\"pSortableColumn\", \"title\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"title\"], [\"type\", \"text\", \"field\", \"title\", \"display\", \"menu\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [\"pSortableColumn\", \"quanity\"], [\"field\", \"quanity\"], [\"type\", \"text\", \"field\", \"quanity\", \"display\", \"menu\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-plus\", \"hower\", \"true\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"]],\n      template: function ResourceAssignScreenComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-table\", 1);\n          i0.ɵɵlistener(\"selectionChange\", function ResourceAssignScreenComponent_Template_p_table_selectionChange_1_listener($event) {\n            return ctx.selectedScreens = $event;\n          });\n          i0.ɵɵtemplate(2, ResourceAssignScreenComponent_ng_template_2_Template, 4, 0, \"ng-template\", 2);\n          i0.ɵɵtemplate(3, ResourceAssignScreenComponent_ng_template_3_Template, 26, 0, \"ng-template\", 3);\n          i0.ɵɵtemplate(4, ResourceAssignScreenComponent_ng_template_4_Template, 9, 3, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, ResourceAssignScreenComponent_ng_template_5_Template, 3, 1, \"ng-template\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(6, \"p-toast\", 6);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.unAssignedResources)(\"selection\", ctx.selectedScreens)(\"scrollable\", true)(\"loading\", ctx.loading)(\"showCurrentPageReport\", true)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(8, _c0));\n        }\n      },\n      dependencies: [i2.PrimeTemplate, i3.Table, i3.SortableColumn, i3.SortIcon, i3.ColumnFilter, i4.ButtonDirective, i5.Toast]\n    });\n  }\n  return ResourceAssignScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}