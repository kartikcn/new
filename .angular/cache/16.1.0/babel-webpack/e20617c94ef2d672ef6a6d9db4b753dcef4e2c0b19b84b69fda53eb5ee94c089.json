{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class TradesService {\n  constructor(tradesService) {\n    this.tradesService = tradesService;\n  }\n  getAllTrades() {\n    return this.tradesService.getAll('trade', 'getAll');\n  }\n  getAllTradesPaginated(data) {\n    return this.tradesService.search('trade', 'getAllPaginated', data);\n  }\n  getTradeById(tradeId) {\n    return this.tradesService.getSingleById(\"trade\", \"getTradeById\", tradeId);\n  }\n  saveTrade(data) {\n    return this.tradesService.add('trade', 'save', data);\n  }\n  deleteById(tradeId) {\n    return this.tradesService.deleteById(\"trade\", \"deleteTradeById\", tradeId);\n  }\n  checkTradeExists(tradeId) {\n    return this.tradesService.getSingleById(\"trade\", \"check\", tradeId);\n  }\n  static #_ = this.ɵfac = function TradesService_Factory(t) {\n    return new (t || TradesService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TradesService,\n    factory: TradesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TradesService","constructor","tradesService","getAllTrades","getAll","getAllTradesPaginated","data","search","getTradeById","tradeId","getSingleById","saveTrade","add","deleteById","checkTradeExists","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\trades\\services\\trades.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TradesService {\n\n  constructor(\n    private tradesService: DataService<any>,\n\n  ) { }\n\n\n  public getAllTrades() {\n    return this.tradesService.getAll('trade', 'getAll');\n  }\n\n  public getAllTradesPaginated(data:any) {\n    return this.tradesService.search('trade', 'getAllPaginated',data);\n  }\n\n\n  public getTradeById(tradeId: any) {\n    return this.tradesService.getSingleById(\"trade\", \"getTradeById\", tradeId);\n  }\n\n  public saveTrade(data: any): Observable<any> {\n    return this.tradesService.add('trade', 'save', data);\n  }\n\n  public deleteById(tradeId: any) {\n    return this.tradesService.deleteById(\"trade\", \"deleteTradeById\", tradeId);\n  }\n\n  public checkTradeExists(tradeId: any) {\n    return this.tradesService.getSingleById(\"trade\", \"check\", tradeId);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAExBC,YACUC,aAA+B;IAA/B,KAAAA,aAAa,GAAbA,aAAa;EAEnB;EAGGC,YAAYA,CAAA;IACjB,OAAO,IAAI,CAACD,aAAa,CAACE,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC;EACrD;EAEOC,qBAAqBA,CAACC,IAAQ;IACnC,OAAO,IAAI,CAACJ,aAAa,CAACK,MAAM,CAAC,OAAO,EAAE,iBAAiB,EAACD,IAAI,CAAC;EACnE;EAGOE,YAAYA,CAACC,OAAY;IAC9B,OAAO,IAAI,CAACP,aAAa,CAACQ,aAAa,CAAC,OAAO,EAAE,cAAc,EAAED,OAAO,CAAC;EAC3E;EAEOE,SAASA,CAACL,IAAS;IACxB,OAAO,IAAI,CAACJ,aAAa,CAACU,GAAG,CAAC,OAAO,EAAE,MAAM,EAAEN,IAAI,CAAC;EACtD;EAEOO,UAAUA,CAACJ,OAAY;IAC5B,OAAO,IAAI,CAACP,aAAa,CAACW,UAAU,CAAC,OAAO,EAAE,iBAAiB,EAAEJ,OAAO,CAAC;EAC3E;EAEOK,gBAAgBA,CAACL,OAAY;IAClC,OAAO,IAAI,CAACP,aAAa,CAACQ,aAAa,CAAC,OAAO,EAAE,OAAO,EAAED,OAAO,CAAC;EACpE;EAAC,QAAAM,CAAA,G;qBA/BUf,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbpB,aAAa;IAAAqB,OAAA,EAAbrB,aAAa,CAAAsB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}