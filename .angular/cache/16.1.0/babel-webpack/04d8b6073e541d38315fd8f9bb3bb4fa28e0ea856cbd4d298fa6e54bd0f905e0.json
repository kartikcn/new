{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class DocumentListService {\n  constructor(documentListService) {\n    this.documentListService = documentListService;\n  }\n  saveDocuments(data) {\n    return this.documentListService.upload('documents', 'upload', data);\n  }\n  getDocument(docBucketItemsId) {\n    return this.documentListService.getSingleById('documents', 'download', docBucketItemsId);\n  }\n  deleteDocument(docDetails) {\n    return this.documentListService.add('documents', 'delete', docDetails);\n  }\n  getListOfDocuments(docBucketId) {\n    return this.documentListService.getAllById('documents', 'getAll', docBucketId);\n  }\n  getListOfDocumentsByRequestId(requestId, docBucketId) {\n    return this.documentListService.getAllByIds('documents', 'getAll', requestId, docBucketId);\n  }\n  static #_ = this.ɵfac = function DocumentListService_Factory(t) {\n    return new (t || DocumentListService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DocumentListService,\n    factory: DocumentListService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DocumentListService","constructor","documentListService","saveDocuments","data","upload","getDocument","docBucketItemsId","getSingleById","deleteDocument","docDetails","add","getListOfDocuments","docBucketId","getAllById","getListOfDocumentsByRequestId","requestId","getAllByIds","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\documents-list\\services\\document-list-services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentListService {\n\n  constructor(\n    private documentListService: DataService<any>,\n\n  ) { }\n\n  public saveDocuments(data: any): Observable<any> {\n    return this.documentListService.upload('documents', 'upload', data);\n  }\n\n  public getDocument(docBucketItemsId: any) {\n    return this.documentListService.getSingleById('documents', 'download', docBucketItemsId);\n  }\n\n  public deleteDocument(docDetails: any) {\n    return this.documentListService.add('documents', 'delete', docDetails);\n  }\n\n  public getListOfDocuments(docBucketId: any) {\n    return this.documentListService.getAllById('documents', 'getAll', docBucketId);\n  }\n\n  public getListOfDocumentsByRequestId(requestId:any,docBucketId: any) {\n    return this.documentListService.getAllByIds('documents', 'getAll',requestId, docBucketId);\n  }\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAE9BC,YACUC,mBAAqC;IAArC,KAAAA,mBAAmB,GAAnBA,mBAAmB;EAEzB;EAEGC,aAAaA,CAACC,IAAS;IAC5B,OAAO,IAAI,CAACF,mBAAmB,CAACG,MAAM,CAAC,WAAW,EAAE,QAAQ,EAAED,IAAI,CAAC;EACrE;EAEOE,WAAWA,CAACC,gBAAqB;IACtC,OAAO,IAAI,CAACL,mBAAmB,CAACM,aAAa,CAAC,WAAW,EAAE,UAAU,EAAED,gBAAgB,CAAC;EAC1F;EAEOE,cAAcA,CAACC,UAAe;IACnC,OAAO,IAAI,CAACR,mBAAmB,CAACS,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAED,UAAU,CAAC;EACxE;EAEOE,kBAAkBA,CAACC,WAAgB;IACxC,OAAO,IAAI,CAACX,mBAAmB,CAACY,UAAU,CAAC,WAAW,EAAE,QAAQ,EAAED,WAAW,CAAC;EAChF;EAEOE,6BAA6BA,CAACC,SAAa,EAACH,WAAgB;IACjE,OAAO,IAAI,CAACX,mBAAmB,CAACe,WAAW,CAAC,WAAW,EAAE,QAAQ,EAACD,SAAS,EAAEH,WAAW,CAAC;EAC3F;EAAC,QAAAK,CAAA,G;qBAzBUlB,mBAAmB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBvB,mBAAmB;IAAAwB,OAAA,EAAnBxB,mBAAmB,CAAAyB,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}