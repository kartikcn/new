{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class RequestTradeService {\n  constructor(requestTradeService) {\n    this.requestTradeService = requestTradeService;\n  }\n  saveRequestTrade(data) {\n    return this.requestTradeService.add('requestTrade', 'save', data);\n  }\n  getAllRequestTrades(id) {\n    return this.requestTradeService.getAllById('requestTrade', 'getAllByRequestId', id);\n  }\n  getByrequestTradeId(requestTradeId) {\n    return this.requestTradeService.getSingleById(\"requestTrade\", \"getById\", requestTradeId);\n  }\n  deleteByRequestTrade(requestTradeId) {\n    return this.requestTradeService.deleteById(\"requestTrade\", \"delete\", requestTradeId);\n  }\n  checkTradeExist(requestId, toolId) {\n    return this.requestTradeService.getAllByIds(\"requestTrade\", \"checkExist\", requestId, toolId);\n  }\n  static #_ = this.ɵfac = function RequestTradeService_Factory(t) {\n    return new (t || RequestTradeService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestTradeService,\n    factory: RequestTradeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RequestTradeService","constructor","requestTradeService","saveRequestTrade","data","add","getAllRequestTrades","id","getAllById","getByrequestTradeId","requestTradeId","getSingleById","deleteByRequestTrade","deleteById","checkTradeExist","requestId","toolId","getAllByIds","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\work-request-details\\widgets\\request-trades\\services\\request-trade-services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RequestTradeService {\n\n    constructor(\n        private requestTradeService: DataService<any>,\n\n    ) { }\n\n    public saveRequestTrade(data: any) {\n        return this.requestTradeService.add('requestTrade', 'save', data);\n    }\n\n    public getAllRequestTrades(id: any) {\n        return this.requestTradeService.getAllById('requestTrade', 'getAllByRequestId', id);\n\n    }\n\n    public getByrequestTradeId(requestTradeId: any) {\n        return this.requestTradeService.getSingleById(\"requestTrade\", \"getById\", requestTradeId);\n    }\n\n    public deleteByRequestTrade(requestTradeId: any) {\n        return this.requestTradeService.deleteById(\"requestTrade\", \"delete\", requestTradeId);\n    }\n    public checkTradeExist(requestId:any,toolId:any) {\n        return this.requestTradeService.getAllByIds(\"requestTrade\", \"checkExist\", requestId,toolId);\n      }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,mBAAmB;EAE5BC,YACYC,mBAAqC;IAArC,KAAAA,mBAAmB,GAAnBA,mBAAmB;EAE3B;EAEGC,gBAAgBA,CAACC,IAAS;IAC7B,OAAO,IAAI,CAACF,mBAAmB,CAACG,GAAG,CAAC,cAAc,EAAE,MAAM,EAAED,IAAI,CAAC;EACrE;EAEOE,mBAAmBA,CAACC,EAAO;IAC9B,OAAO,IAAI,CAACL,mBAAmB,CAACM,UAAU,CAAC,cAAc,EAAE,mBAAmB,EAAED,EAAE,CAAC;EAEvF;EAEOE,mBAAmBA,CAACC,cAAmB;IAC1C,OAAO,IAAI,CAACR,mBAAmB,CAACS,aAAa,CAAC,cAAc,EAAE,SAAS,EAAED,cAAc,CAAC;EAC5F;EAEOE,oBAAoBA,CAACF,cAAmB;IAC3C,OAAO,IAAI,CAACR,mBAAmB,CAACW,UAAU,CAAC,cAAc,EAAE,QAAQ,EAAEH,cAAc,CAAC;EACxF;EACOI,eAAeA,CAACC,SAAa,EAACC,MAAU;IAC3C,OAAO,IAAI,CAACd,mBAAmB,CAACe,WAAW,CAAC,cAAc,EAAE,YAAY,EAAEF,SAAS,EAACC,MAAM,CAAC;EAC7F;EAAC,QAAAE,CAAA,G;qBAzBMlB,mBAAmB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBvB,mBAAmB;IAAAwB,OAAA,EAAnBxB,mBAAmB,CAAAyB,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}