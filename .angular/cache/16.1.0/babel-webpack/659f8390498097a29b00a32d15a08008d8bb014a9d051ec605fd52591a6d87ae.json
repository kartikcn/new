{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"primeng/calendar\";\nimport * as i3 from \"../../../../../directive/directive/two-digit-decimal-number\";\nimport * as i4 from \"../../../../../directive/directive/trim-input.directive\";\nexport class AssetInsuranceComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.subscriptions = [];\n    this.isNew = true;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.eqInsurance = this.formBuilder.group({\n      insuranceNum: [null],\n      insuranceFromDate: [null],\n      insuranceCost: [null],\n      insuranceToDate: [null]\n    });\n    this.subscriptions.push(this.eqInsurance.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const me = this;\n    const validationErros = [];\n    return validationErros;\n  }\n  get value() {\n    const eqLocationDetails = {\n      insuranceNum: this.eqInsurance.controls.insuranceNum.value,\n      insuranceFromDate: this.eqInsurance.controls.insuranceFromDate.value,\n      insuranceCost: this.eqInsurance.controls.insuranceCost.value,\n      insuranceToDate: this.eqInsurance.controls.insuranceToDate.value\n    };\n    return eqLocationDetails;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.eqInsurance.patchValue({\n        insuranceNum: value.insuranceNum,\n        insuranceFromDate: value.insuranceFromDate ? this.formatDate(value.insuranceFromDate) : null,\n        insuranceCost: value.insuranceCost,\n        insuranceToDate: value.insuranceToDate ? this.formatDate(value.insuranceToDate) : null\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.eqInsurance.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate(_) {\n    return this.eqInsurance.valid ? null : {\n      eqFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  formatDate(date) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n  static #_ = this.ɵfac = function AssetInsuranceComponent_Factory(t) {\n    return new (t || AssetInsuranceComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AssetInsuranceComponent,\n    selectors: [[\"app-asset-insurance\"]],\n    inputs: {\n      isNew: \"isNew\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AssetInsuranceComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AssetInsuranceComponent),\n      multi: true\n    }])],\n    decls: 28,\n    vars: 3,\n    consts: [[3, \"formGroup\"], [\"width\", \"50%\"], [1, \"input-label-custom\", 2, \"width\", \"90%\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"insuranceNum\", \"formControlName\", \"insuranceNum\", \"maxlength\", \"32\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"TwoDigitDecimalNumber\", \"\", \"name\", \"insuranceCost\", \"formControlName\", \"insuranceCost\", \"appTrimInput\", \"\", 1, \"form-control\"], [1, \"p-fluid\"], [1, \"p-field\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"insuranceFromDate\", \"formControlName\", \"insuranceFromDate\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"insuranceToDate\", \"formControlName\", \"insuranceToDate\", \"inputId\", \"icon\", 3, \"showIcon\"]],\n    template: function AssetInsuranceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\")(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Insurance Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"td\")(9, \"div\", 2)(10, \"label\", 3);\n        i0.ɵɵtext(11, \"Insurance Cost\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"tr\")(14, \"td\")(15, \"div\", 2)(16, \"div\", 6)(17, \"div\", 7)(18, \"label\", 3);\n        i0.ɵɵtext(19, \"Insurance From Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"p-calendar\", 8);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(21, \"td\")(22, \"div\", 2)(23, \"div\", 6)(24, \"div\", 7)(25, \"label\", 3);\n        i0.ɵɵtext(26, \"Insurance To Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"p-calendar\", 9);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.eqInsurance);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"showIcon\", false);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"showIcon\", false);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i2.Calendar, i3.TwoDigitDecimalNumberDirective, i4.TrimInputDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALUE_ACCESSOR","NG_VALIDATORS","AssetInsuranceComponent","constructor","formBuilder","subscriptions","isNew","onChange","onTouched","eqInsurance","group","insuranceNum","insuranceFromDate","insuranceCost","insuranceToDate","push","valueChanges","subscribe","value","isValid","getValidationErrors","length","me","validationErros","eqLocationDetails","controls","setTimeout","patchValue","formatDate","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","eqFormPanel","ngOnDestroy","forEach","s","unsubscribe","date","dateCreated","Date","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","inputs","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AssetInsuranceComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\equipment\\widgets\\asset-insurance\\asset-insurance.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\equipment\\widgets\\asset-insurance\\asset-insurance.component.html"],"sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\n\n@Component({\n  selector: 'app-asset-insurance',\n  templateUrl: './asset-insurance.component.html',\n  styleUrls: ['./asset-insurance.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AssetInsuranceComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AssetInsuranceComponent),\n      multi: true\n    }\n  ]\n})\nexport class AssetInsuranceComponent {\n\n  eqInsurance: FormGroup;\n  subscriptions: Subscription[] = [];\n\n  @Input() isNew: boolean = true;\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {\n    this.eqInsurance = this.formBuilder.group({\n       insuranceNum: [null],\n       insuranceFromDate: [null],\n       insuranceCost: [null],\n       insuranceToDate:[null],\n    \n    });\n    this.subscriptions.push(\n      this.eqInsurance.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const me = this;\n    const validationErros: VaildationError[] = [];\n    return validationErros;\n  }\n\n  get value(): any {\n    const eqLocationDetails: any = {\n       insuranceNum: this.eqInsurance.controls.insuranceNum.value,\n       insuranceFromDate: this.eqInsurance.controls.insuranceFromDate.value,\n       insuranceCost: this.eqInsurance.controls.insuranceCost.value,\n       insuranceToDate: this.eqInsurance.controls.insuranceToDate.value,\n    };\n    return eqLocationDetails;\n  }\n  \n  set value(value: any) {\n    setTimeout(() => {\n      this.eqInsurance.patchValue({\n         insuranceNum: value.insuranceNum,\n         insuranceFromDate: value.insuranceFromDate ? this.formatDate(value.insuranceFromDate):null,\n         insuranceCost: value.insuranceCost,\n         insuranceToDate: value.insuranceToDate? this.formatDate(value.insuranceToDate):null,\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  \n  writeValue(value: any) {\n\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.eqInsurance.reset();\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n  onChange: any = () => {};\n  onTouched: any = () => {}   \n\n  validate(_: FormControl) {\n    return this.eqInsurance.valid ? null : { eqFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  formatDate(date: any) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n\n}\n","<form [formGroup]=\"eqInsurance\">\n    <table width=\"50%\">\n        <tr>\n            <td >\n                <div class=\"input-label-custom \" style=\"width: 90%;\">\n                    <label class='form-field-lable'>Insurance Number</label>\n                    <input type=\"text\" class=\"form-control\" name=\"insuranceNum\" formControlName=\"insuranceNum\" maxlength=\"32\" appTrimInput>\n                </div>\n            </td>\n            <td >\n                <div class=\"input-label-custom \" style=\"width: 90%;\">\n                    <label class='form-field-lable '>Insurance Cost</label>\n                    <input type=\"text\" class=\"form-control\" TwoDigitDecimalNumber name=\"insuranceCost\" formControlName=\"insuranceCost\"\n                        appTrimInput>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td >\n                <div class=\"input-label-custom\" style=\"width: 90%;\">\n                    <div class=\"p-fluid\">\n                        <div class=\"p-field\">\n                            <label class='form-field-lable'>Insurance From Date</label>\n                            <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"insuranceFromDate\"\n                                formControlName=\"insuranceFromDate\" [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n                        </div>\n                    </div>\n                </div>\n            <td >\n                <div class=\"input-label-custom\" style=\"width: 90%;\">\n                    <div class=\"p-fluid\">\n                        <div class=\"p-field\">\n                            <label class='form-field-lable'>Insurance To Date</label>\n                            <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"insuranceToDate\"\n                                formControlName=\"insuranceToDate\" [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </tr>\n    </table>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}