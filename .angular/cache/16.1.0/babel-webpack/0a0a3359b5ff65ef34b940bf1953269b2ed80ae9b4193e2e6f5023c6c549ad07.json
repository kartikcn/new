{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { ToolTypeDTO } from '../../../tool-type/model/toolTypeDTO';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../tool-type/services/tool-type.service\";\nimport * as i3 from \"../../../tool-type/providers/tool-type.oroviders\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"ng-zorro-antd/table\";\nimport * as i7 from \"ng-zorro-antd/input\";\nimport * as i8 from \"../../../../../directive/numbers-only.directive\";\nimport * as i9 from \"../../../../../directive/directive/two-digit-decimal-number\";\nimport * as i10 from \"../../../../../directive/directive/trim-input.directive\";\nimport * as i11 from \"@angular/material/tooltip\";\nimport * as i12 from \"primeng/button\";\nfunction AddToolsComponent_tr_16_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 21);\n    i0.ɵɵtext(1, \"Tool is already exists\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddToolsComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 19);\n    i0.ɵɵtemplate(2, AddToolsComponent_tr_16_label_2_Template, 2, 0, \"label\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.toolsFormPanel.controls[\"tool\"] == null ? null : ctx_r0.toolsFormPanel.controls[\"tool\"].errors) && !(ctx_r0.toolsFormPanel.controls[\"tool\"] == null ? null : ctx_r0.toolsFormPanel.controls[\"tool\"].errors.required));\n  }\n}\nexport class AddToolsComponent {\n  constructor(formBuilder, toolTypeSrv, toolTypeProvider) {\n    this.formBuilder = formBuilder;\n    this.toolTypeSrv = toolTypeSrv;\n    this.toolTypeProvider = toolTypeProvider;\n    this.subscriptions = [];\n    this.newRecord = true;\n    this.presentTool = '';\n    this.toolTypeData = [];\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.toolsFormPanel = this.formBuilder.group({\n      toolsId: [null],\n      tool: [null, [Validators.required]],\n      toolTypeId: [null, [Validators.required]],\n      hourlyRate: [null, [Validators.required]],\n      overTimeRate: [null, [Validators.required]],\n      standardAvalTime: [null, [Validators.required]],\n      doubleRate: [null, [Validators.required]],\n      description: ['']\n    });\n    this.subscriptions.push(\n    // any time the inner form changes update the parent of any change\n    this.toolsFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadToolTypes();\n  }\n  loadToolTypes() {\n    this.toolTypeSrv.getAllToolTypes().subscribe(res => {\n      this.toolTypeData = res;\n      this.toolTypeData = res.map(t => {\n        t.displayName = t.description != null ? t.toolType + \" - \" + t.description : t.toolType;\n        return t;\n      });\n      this.toolTypeData.unshift(new ToolTypeDTO(\"Make a Selection\", '', '', 0));\n    });\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const me = this;\n    const validationErros = [];\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n  get value() {\n    const toolsDetails = {\n      tool: this.toolsFormPanel.controls.tool.value,\n      toolsId: this.toolsFormPanel.controls.toolsId.value,\n      toolTypeId: this.toolsFormPanel.controls.toolTypeId.value,\n      hourlyRate: this.toolsFormPanel.controls.hourlyRate.value,\n      overTimeRate: this.toolsFormPanel.controls.overTimeRate.value,\n      standardAvalTime: this.toolsFormPanel.controls.standardAvalTime.value,\n      doubleRate: this.toolsFormPanel.controls.standardAvalTime.value,\n      description: this.toolsFormPanel.controls.description.value\n    };\n    return toolsDetails;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.toolsFormPanel.patchValue({\n        tool: value.tool,\n        toolsId: value.toolsId,\n        toolTypeId: parseInt(value.toolTypeId),\n        hourlyRate: value.hourlyRate,\n        overTimeRate: value.overTimeRate,\n        standardAvalTime: value.standardAvalTime,\n        doubleRate: value.doubleRate,\n        description: value.description\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.toolsFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  // communicate the inner form validation to the parent form\n  validate(_) {\n    return this.toolsFormPanel.valid ? null : {\n      toolsFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  onAddToolType() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      toolTypeId: null,\n      isEdit: true,\n      newRecord: true\n    };\n    this.toolTypeProvider.openDialog(dialogConfig);\n    this.toolTypeProvider.onDialogueClosed.subscribe(result => {\n      if (result) {\n        this.loadToolTypes();\n        this.setLatestToolType(result);\n      }\n    });\n  }\n  setLatestToolType(toolTypeId) {\n    setTimeout(() => {\n      this.toolsFormPanel.patchValue({\n        toolTypeId: toolTypeId\n      });\n    }, 100);\n  }\n  static #_ = this.ɵfac = function AddToolsComponent_Factory(t) {\n    return new (t || AddToolsComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ToolTypeService), i0.ɵɵdirectiveInject(i3.ToolTypeDialogueProvider));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddToolsComponent,\n    selectors: [[\"app-add-tools\"]],\n    inputs: {\n      isNew: \"isNew\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddToolsComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddToolsComponent),\n      multi: true\n    }])],\n    decls: 45,\n    vars: 5,\n    consts: [[\"autocomplete\", \"off\", 3, \"formGroup\"], [\"width\", \"100%\"], [\"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"tool\", \"formControlName\", \"tool\", \"maxlength\", \"80\", \"appTrimInput\", \"\", 1, \"form-control\"], [2, \"display\", \"flex\"], [1, \"input-label-custom\", 2, \"width\", \"90%\"], [\"appendTo\", \"body\", \"formControlName\", \"toolTypeId\", \"bindLabel\", \"displayName\", \"bindValue\", \"toolTypeId\", \"placeholder\", \"Make a Selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"margin\", \"16px 0px 0px -5px\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Tool type\", 1, \"pull-right\", \"m-3\", 3, \"click\"], [4, \"ngIf\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"name\", \"hourlyRate\", \"formControlName\", \"hourlyRate\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"name\", \"overTimeRate\", \"formControlName\", \"overTimeRate\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"name\", \"doubleRate\", \"formControlName\", \"doubleRate\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"name\", \"standardAvalTime\", \"formControlName\", \"standardAvalTime\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"colspan\", \"2\"], [1, \"form-field-lable\"], [\"name\", \"description\", \"formControlName\", \"description\", \"rows\", \"2\", \"nz-input\", \"\", \"maxlength\", \"256\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [2, \"width\", \"50%\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"]],\n    template: function AddToolsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Tool \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"td\", 2)(9, \"div\", 6)(10, \"div\", 7)(11, \"label\", 4);\n        i0.ɵɵtext(12, \"Tool type \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"ng-select\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9)(15, \"p-button\", 10);\n        i0.ɵɵlistener(\"click\", function AddToolsComponent_Template_p_button_click_15_listener() {\n          return ctx.onAddToolType();\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(16, AddToolsComponent_tr_16_Template, 4, 1, \"tr\", 11);\n        i0.ɵɵelementStart(17, \"tr\")(18, \"td\", 2)(19, \"div\", 3)(20, \"label\", 4);\n        i0.ɵɵtext(21, \"Hourly Rate \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"td\", 2)(24, \"div\", 3)(25, \"label\", 4);\n        i0.ɵɵtext(26, \"Overtime Rate \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"tr\")(29, \"td\", 2)(30, \"div\", 3)(31, \"label\", 4);\n        i0.ɵɵtext(32, \"Doubletime Rate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"td\", 2)(35, \"div\", 3)(36, \"label\", 4);\n        i0.ɵɵtext(37, \"Standard Available Time (Hours/Day)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"tr\")(40, \"td\", 16)(41, \"div\", 3)(42, \"label\", 17);\n        i0.ɵɵtext(43, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"textarea\", 18);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.toolsFormPanel);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.toolTypeData)(\"searchable\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.toolsFormPanel.controls[\"tool\"] == null ? null : ctx.toolsFormPanel.controls[\"tool\"].errors) && ((ctx.toolsFormPanel.controls[\"tool\"] == null ? null : ctx.toolsFormPanel.controls[\"tool\"].dirty) || (ctx.toolsFormPanel.controls[\"tool\"] == null ? null : ctx.toolsFormPanel.controls[\"tool\"].touched)));\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i5.NgSelectComponent, i6.NzTableCellDirective, i6.NzTrDirective, i7.NzInputDirective, i8.NumbersOnlyDirective, i9.TwoDigitDecimalNumberDirective, i10.TrimInputDirective, i11.MatTooltip, i12.Button],\n    styles: [\".ng-select.ng-select-single .ng-select-container .ng-value-container, .ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]   .ng-value-container[_ngcontent-%COMP%]   .ng-value[_ngcontent-%COMP%] {\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  white-space: nowrap !important;\\n  max-width: 300px !important;\\n}\\n\\n[_nghost-%COMP%]     #add-btn .p-button {\\n  background-color: white !important;\\n  border-radius: 50%;\\n  border: 2px solid #2196F3;\\n  color: #2196F3;\\n  height: 20px !important;\\n  width: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svdG9vbHMvd2lkZ2V0cy9hZGQtdG9vbHMvYWRkLXRvb2xzLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vTWFuYXYlMjBHdXB0YS9Eb3dubG9hZHMvZm1zL2Ztcy9mcm9udGVuZC9mbXNfZnJvbnRlbmQvc3JjL2FwcC91aS9IZWxwZGVzay90b29scy93aWRnZXRzL2FkZC10b29scy9hZGQtdG9vbHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBQTtFQUNBLGtDQUFBO0VBQ0EsOEJBQUE7RUFDQSwyQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0NBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0EsY0FBQTtFQUNBLHVCQUFBO0VBQ0EsV0FBQTtBQ0NKIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC5uZy1zZWxlY3Qubmctc2VsZWN0LXNpbmdsZSAubmctc2VsZWN0LWNvbnRhaW5lciAubmctdmFsdWUtY29udGFpbmVyLCAubmctc2VsZWN0Lm5nLXNlbGVjdC1zaW5nbGUgLm5nLXNlbGVjdC1jb250YWluZXIgLm5nLXZhbHVlLWNvbnRhaW5lciAubmctdmFsdWV7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzICFpbXBvcnRhbnQ7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuICAgIG1heC13aWR0aDogMzAwcHggIWltcG9ydGFudDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwICNhZGQtYnRuIC5wLWJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAycHggc29saWQgIzIxOTZGMztcbiAgICBjb2xvcjogIzIxOTZGMztcbiAgICBoZWlnaHQ6IDIwcHggIWltcG9ydGFudDtcbiAgICB3aWR0aDogMjBweDtcbn0iLCI6Om5nLWRlZXAgLm5nLXNlbGVjdC5uZy1zZWxlY3Qtc2luZ2xlIC5uZy1zZWxlY3QtY29udGFpbmVyIC5uZy12YWx1ZS1jb250YWluZXIsIC5uZy1zZWxlY3Qubmctc2VsZWN0LXNpbmdsZSAubmctc2VsZWN0LWNvbnRhaW5lciAubmctdmFsdWUtY29udGFpbmVyIC5uZy12YWx1ZSB7XG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXMgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuICBtYXgtd2lkdGg6IDMwMHB4ICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAjYWRkLWJ0biAucC1idXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogMnB4IHNvbGlkICMyMTk2RjM7XG4gIGNvbG9yOiAjMjE5NkYzO1xuICBoZWlnaHQ6IDIwcHggIWltcG9ydGFudDtcbiAgd2lkdGg6IDIwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALUE_ACCESSOR","NG_VALIDATORS","Validators","ToolTypeDTO","MatDialogConfig","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddToolsComponent_tr_16_label_2_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","toolsFormPanel","controls","errors","required","AddToolsComponent","constructor","formBuilder","toolTypeSrv","toolTypeProvider","subscriptions","newRecord","presentTool","toolTypeData","onChange","onTouched","group","toolsId","tool","toolTypeId","hourlyRate","overTimeRate","standardAvalTime","doubleRate","description","push","valueChanges","subscribe","value","ngOnInit","loadToolTypes","getAllToolTypes","res","map","t","displayName","toolType","unshift","isValid","getValidationErrors","length","me","validationErros","toolsDetails","setTimeout","patchValue","parseInt","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","forEach","s","unsubscribe","onAddToolType","dialogConfig","disableClose","autoFocus","width","data","isEdit","openDialog","onDialogueClosed","result","setLatestToolType","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","ToolTypeService","i3","ToolTypeDialogueProvider","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddToolsComponent_Template","rf","ctx","ɵɵlistener","AddToolsComponent_Template_p_button_click_15_listener","AddToolsComponent_tr_16_Template","dirty","touched"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\tools\\widgets\\add-tools\\add-tools.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\tools\\widgets\\add-tools\\add-tools.component.html"],"sourcesContent":["import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, UntypedFormGroup, UntypedFormBuilder, Validators, UntypedFormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { ToolTypeDTO } from '../../../tool-type/model/toolTypeDTO';\nimport { ToolTypeService } from '../../../tool-type/services/tool-type.service';\nimport { ToolsService } from '../../services/tools.services';\nimport { ToolTypeDialogueProvider } from '../../../tool-type/providers/tool-type.oroviders';\nimport { MatDialogConfig } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-add-tools',\n  templateUrl: './add-tools.component.html',\n  styleUrls: ['./add-tools.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddToolsComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddToolsComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddToolsComponent implements OnInit {\n\n  toolsFormPanel: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  newRecord: boolean = true;\n  presentTool: string = '';\n  toolTypeData: any[] = [];\n  @Input() isNew!: boolean;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private toolTypeSrv: ToolTypeService,\n    private toolTypeProvider: ToolTypeDialogueProvider,\n\n  ) {\n    this.toolsFormPanel = this.formBuilder.group({\n      toolsId: [null],\n      tool: [null, [Validators.required]],\n      toolTypeId: [null, [Validators.required]],\n      hourlyRate: [null, [Validators.required]],\n      overTimeRate: [null, [Validators.required]],\n      standardAvalTime: [null, [Validators.required]],\n      doubleRate:[null, [Validators.required]],\n      description: ['',],\n    });\n\n    this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.toolsFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadToolTypes()\n  }\n\n  loadToolTypes() {\n    this.toolTypeSrv.getAllToolTypes().subscribe((res: any) => {\n      this.toolTypeData = res;\n      this.toolTypeData = res.map((t: any) => { t.displayName = t.description != null ? t.toolType + \" - \" + t.description : t.toolType; return t })\n      this.toolTypeData.unshift(new ToolTypeDTO(\"Make a Selection\", '', '', 0))\n    });\n  }\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const me = this;\n    const validationErros: VaildationError[] = [];\n\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n  get value(): any {\n    const toolsDetails: any = {\n      tool: this.toolsFormPanel.controls.tool.value,\n      toolsId:  this.toolsFormPanel.controls.toolsId.value,\n      toolTypeId: this.toolsFormPanel.controls.toolTypeId.value,\n      hourlyRate: this.toolsFormPanel.controls.hourlyRate.value,\n      overTimeRate: this.toolsFormPanel.controls.overTimeRate.value,\n      standardAvalTime: this.toolsFormPanel.controls.standardAvalTime.value,\n      doubleRate: this.toolsFormPanel.controls.standardAvalTime.value,\n      description: this.toolsFormPanel.controls.description.value,\n\n    };\n    return toolsDetails;\n  }\n\n  set value(value: any) {\n    setTimeout(() => {\n      this.toolsFormPanel.patchValue({\n        tool: value.tool,\n        toolsId: value.toolsId,\n        toolTypeId: parseInt(value.toolTypeId),\n        hourlyRate: value.hourlyRate,\n        overTimeRate: value.overTimeRate,\n        standardAvalTime: value.standardAvalTime,\n        doubleRate:value.doubleRate,\n        description: value.description,\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.toolsFormPanel.reset();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  // communicate the inner form validation to the parent form\n  validate(_: UntypedFormControl) {\n    return this.toolsFormPanel.valid ? null : { toolsFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  onAddToolType() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      toolTypeId: null,\n      isEdit: true,\n      newRecord: true\n    };\n    this.toolTypeProvider.openDialog(dialogConfig);\n    this.toolTypeProvider.onDialogueClosed.subscribe((result: any) => {\n      if(result) {\n        this.loadToolTypes();\n        this.setLatestToolType(result);\n      }  \n    });\n  }\n\n  setLatestToolType(toolTypeId: any) {\n    setTimeout(() => {\n      this.toolsFormPanel.patchValue({\n        toolTypeId: toolTypeId\n      })\n    }, 100)\n  }\n\n \n}\n","<form [formGroup]=\"toolsFormPanel\" autocomplete=\"off\">\n    <table width=\"100%\">\n        <tr>\n            <td width=\"50%\">\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Tool </label>\n                    <input type=\"text\" class=\"form-control\" name=\"tool\" formControlName=\"tool\" maxlength=\"80\" appTrimInput>\n                </div>\n            </td>\n            <td width=\"50%\">\n                <div  style=\"display: flex;\">\n                    <div class=\"input-label-custom \" style=\"width: 90%;\">\n                        <label class='form-field-lable control-label'>Tool type </label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"toolTypeData\" formControlName=\"toolTypeId\"\n                            [searchable]=\"true\" bindLabel=\"displayName\" bindValue=\"toolTypeId\" class=\"ng-select-dropdown\"\n                            placeholder=\"Make a Selection\">\n                        </ng-select>\n                    </div>\n                    <div style=\"margin: 16px 0px 0px -5px;\">\n                        <p-button id=\"add-btn\" (click)=\"onAddToolType()\" class=\"pull-right m-3\" icon=\"pi pi-plus\"\n                            matTooltip=\"Add Tool type\">\n                        </p-button>\n                    </div>\n                </div>\n            </td>\n        </tr>\n        <tr\n            *ngIf=\"(toolsFormPanel.controls['tool']?.errors && (toolsFormPanel.controls['tool']?.dirty || toolsFormPanel.controls['tool']?.touched))\">\n            <td style=\"width: 50%\">\n                <label\n                    *ngIf=\"toolsFormPanel.controls['tool']?.errors && !toolsFormPanel.controls['tool']?.errors.required\"\n                    class='form-field-lable' style=\"color:red;\">Tool is already exists</label>\n            </td>\n            <td style=\"width: 50%\"></td>\n        </tr>\n        <tr>\n            <td width=\"50%\">\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Hourly Rate </label>\n                    <input type=\"text\" NumbersOnly TwoDigitDecimalNumber class=\"form-control\" name=\"hourlyRate\" formControlName=\"hourlyRate\" appTrimInput>\n                </div>\n            </td>\n            <td width=\"50%\">\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Overtime Rate </label>\n                    <input type=\"text\" NumbersOnly TwoDigitDecimalNumber class=\"form-control\" name=\"overTimeRate\"\n                        formControlName=\"overTimeRate\" appTrimInput>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td width=\"50%\">\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Doubletime Rate</label>\n                    <input type=\"text\" NumbersOnly TwoDigitDecimalNumber class=\"form-control\" name=\"doubleRate\"\n                        formControlName=\"doubleRate\" appTrimInput>\n                </div>\n            </td>\n            <td width=\"50%\">\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Standard Available Time (Hours/Day)</label>\n                    <input type=\"text\" NumbersOnly class=\"form-control\" name=\"standardAvalTime\"\n                        formControlName=\"standardAvalTime\" appTrimInput>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable'>Description</label>\n                    <textarea class=\"form-control note-border\" name=\"description\" formControlName=\"description\" rows=\"2\"\n                        nz-input maxlength=\"256\" appTrimInput></textarea>\n                </div>\n            </td>\n        </tr>\n    </table>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}