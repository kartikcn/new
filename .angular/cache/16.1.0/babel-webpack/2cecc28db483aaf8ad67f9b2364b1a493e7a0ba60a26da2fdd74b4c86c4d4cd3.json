{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { CountryFilterInput } from '../../modal/countryFilterInput.model';\nimport { RegnFilterInput } from '../region-list/regnFilterInput.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../services/country.service\";\nimport * as i3 from \"../../services/regn.service\";\nimport * as i4 from \"../../services/state.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ng-select/ng-select\";\nimport * as i7 from \"../../../../directive/directive/trim-input.directive\";\nfunction AddStateFormComponent_tr_13_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 13);\n    i0.ɵɵtext(1, \"State Code already exists \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddStateFormComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 11);\n    i0.ɵɵtemplate(2, AddStateFormComponent_tr_13_label_2_Template, 2, 0, \"label\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r0.stateFormPanel.controls[\"stateCode\"] == null ? null : ctx_r0.stateFormPanel.controls[\"stateCode\"].errors.required));\n  }\n}\nexport class AddStateFormComponent {\n  constructor(formBuilder, cntrySrv, regnSrv, stateSrv) {\n    this.formBuilder = formBuilder;\n    this.cntrySrv = cntrySrv;\n    this.regnSrv = regnSrv;\n    this.stateSrv = stateSrv;\n    this.subscriptions = [];\n    this.newRecord = true;\n    this.enumList = [];\n    this.enumCntry = [];\n    this.enumRegn = [];\n    this.enumAllRegn = [];\n    this.previousState = '';\n    this.previousRegn = 0;\n    this.previousCtry = 0;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.stateFormPanel = this.formBuilder.group({\n      stateId: [null],\n      stateCode: ['', [Validators.required]],\n      stateName: [''],\n      ctryId: ['', [Validators.required]],\n      regnId: ['', [Validators.required]]\n    });\n    // End Of Building Form\n    this.subscriptions.push(\n    // any time the inner form changes update the parent of any change\n    this.stateFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadCntry();\n    this.loadRegn();\n  }\n  loadCntry() {\n    this.cntrySrv.getALLCountry().subscribe(res => {\n      this.enumCntry = res;\n      this.enumCntry = res.map(i => {\n        i.name = i.ctryCode + ' - ' + i.name;\n        return i;\n      });\n      this.enumCntry.unshift(new CountryFilterInput('', 'Make a selection'));\n    });\n  }\n  loadRegn() {\n    this.regnSrv.getALLRegn().subscribe(res => {\n      this.enumAllRegn = res;\n      this.enumAllRegn = res.map(i => {\n        i.name = i.code + ' - ' + i.name;\n        return i;\n      });\n      this.enumAllRegn.unshift(new RegnFilterInput('', 'Make a selection', ''));\n      this.enumRegn = this.enumAllRegn;\n    });\n  }\n  onSelectCountry($event) {\n    setTimeout(() => {\n      this.stateFormPanel.patchValue({\n        regnId: null\n      });\n    }, 10);\n    if ($event.id != null && $event.id != \"\") {\n      this.loadRegionCode($event.id);\n    } else {\n      this.enumRegn = this.enumAllRegn;\n      //this.enumRegn.unshift(new RegnFilterInput('', 'Make a selection', ''));\n    }\n  }\n\n  loadRegionCode(ctry_id) {\n    if (ctry_id != null) {\n      this.enumRegn = [];\n      this.enumRegn = this.enumAllRegn.filter(t => t.cntryId == ctry_id).map(i => {\n        if (!i.name.includes(i.code + ' - ')) {\n          i.name = i.ctryCode + ' - ' + i.name;\n        }\n        return i;\n      });\n      this.enumRegn.unshift(new RegnFilterInput('', 'Make a selection', ''));\n    }\n  }\n  onSelectRegion($event) {\n    if ($event.id != null && $event.id != \"\") {\n      setTimeout(() => {\n        this.stateFormPanel.patchValue({\n          ctryId: $event.cntryId\n        });\n      }, 10);\n    } else {}\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const me = this;\n    const validationErros = [];\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n  get value() {\n    const stateDetails = {\n      stateId: this.stateFormPanel.controls.stateId.value,\n      stateCode: this.stateFormPanel.controls.stateCode.value,\n      stateName: this.stateFormPanel.controls.stateName.value,\n      ctryId: this.stateFormPanel.controls.ctryId.value,\n      regnId: this.stateFormPanel.controls.regnId.value\n    };\n    return stateDetails;\n  }\n  set value(value) {\n    this.previousState = value.stateCode;\n    this.previousCtry = value.ctryId;\n    this.previousRegn = value.regnId;\n    setTimeout(() => {\n      this.stateFormPanel.patchValue({\n        stateId: value.stateId,\n        stateCode: value.stateCode,\n        stateName: value.stateName,\n        ctryId: value.ctryId,\n        regnId: value.regnId\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.stateFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  // communicate the inner form validation to the parent form\n  validate(_) {\n    return this.stateFormPanel.valid ? null : {\n      stateFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  static #_ = this.ɵfac = function AddStateFormComponent_Factory(t) {\n    return new (t || AddStateFormComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.CountryService), i0.ɵɵdirectiveInject(i3.RegnService), i0.ɵɵdirectiveInject(i4.StateService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddStateFormComponent,\n    selectors: [[\"app-add-state-form\"]],\n    inputs: {\n      isNew: \"isNew\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddStateFormComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddStateFormComponent),\n      multi: true\n    }])],\n    decls: 26,\n    vars: 8,\n    consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"stateCode\", \"formControlName\", \"stateCode\", \"maxlength\", \"32\", \"appTrimInput\", \"\", 1, \"form-control\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"stateName\", \"formControlName\", \"stateName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [\"appendTo\", \"body\", \"formControlName\", \"ctryId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"regnId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"width\", \"25%\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"]],\n    template: function AddStateFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"State Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"td\", 2)(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"State Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, AddStateFormComponent_tr_13_Template, 3, 1, \"tr\", 8);\n        i0.ɵɵelement(14, \"tr\");\n        i0.ɵɵelementStart(15, \"tr\")(16, \"td\", 2)(17, \"div\", 3)(18, \"label\", 4);\n        i0.ɵɵtext(19, \"Country Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ng-select\", 9);\n        i0.ɵɵlistener(\"change\", function AddStateFormComponent_Template_ng_select_change_20_listener($event) {\n          return ctx.onSelectCountry($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"td\", 2)(22, \"div\", 3)(23, \"label\", 4);\n        i0.ɵɵtext(24, \"Region Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"ng-select\", 10);\n        i0.ɵɵlistener(\"change\", function AddStateFormComponent_Template_ng_select_change_25_listener($event) {\n          return ctx.onSelectRegion($event);\n        });\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.stateFormPanel);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", (ctx.stateFormPanel.controls[\"stateCode\"] == null ? null : ctx.stateFormPanel.controls[\"stateCode\"].errors) && ctx.stateFormPanel.controls[\"stateCode\"].dirty);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumCntry)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumRegn)(\"searchable\", true);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i6.NgSelectComponent, i7.TrimInputDirective],\n    styles: [\".form-field-lable[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  margin-bottom: 0px;\\n  font-weight: 500;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  margin-top: -3px;\\n  padding-left: 5px;\\n}\\n\\n\\n[_ngcontent-%COMP%]::placeholder { \\n\\n  color: #555;\\n  opacity: 1; \\n\\n}\\n\\n[_ngcontent-%COMP%]:-ms-input-placeholder { \\n\\n  color: #555;\\n}\\n\\n[_ngcontent-%COMP%]::-ms-input-placeholder { \\n\\n  color: #555;\\n}\\n\\n\\n\\n\\n.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%] {\\n  border-radius: 0px !important;\\n}\\n\\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n}\\n\\n.mat-card[_ngcontent-%COMP%] {\\n  padding: 0px;\\n  border: thin double rgb(181, 155, 90);\\n}\\n\\n.mat-card-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n  font-size: 13px;\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header-text[_ngcontent-%COMP%] {\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header[_ngcontent-%COMP%] {\\n  padding: 5px !important;\\n  margin-left: -15px;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 70px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvbG9jYXRpb24vd2lkZ2V0cy9hZGQtc3RhdGUtZm9ybS9hZGQtc3RhdGUtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25COzs7QUFHQSxnQkFBZ0IseUNBQXlDO0VBQ3ZELFdBQVc7RUFDWCxVQUFVLEVBQUUsWUFBWTtBQUMxQjs7QUFFQSx5QkFBeUIsNEJBQTRCO0VBQ25ELFdBQVc7QUFDYjs7QUFFQSwwQkFBMEIsbUJBQW1CO0VBQzNDLFdBQVc7QUFDYjs7Ozs7QUFLQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0VBQ1oscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2Ysc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1maWVsZC1sYWJsZSB7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG4uZm9ybS1jb250cm9sIHtcbiAgbWFyZ2luLXRvcDogLTNweDtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG59XG5cblxuOjpwbGFjZWhvbGRlciB7IC8qIENocm9tZSwgRmlyZWZveCwgT3BlcmEsIFNhZmFyaSAxMC4xKyAqL1xuICBjb2xvcjogIzU1NTtcbiAgb3BhY2l0eTogMTsgLyogRmlyZWZveCAqL1xufVxuXG46LW1zLWlucHV0LXBsYWNlaG9sZGVyIHsgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTAtMTEgKi9cbiAgY29sb3I6ICM1NTU7XG59XG5cbjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHsgLyogTWljcm9zb2Z0IEVkZ2UgKi9cbiAgY29sb3I6ICM1NTU7XG59XG5cblxuXG5cbi5uZy1zZWxlY3Qubmctc2VsZWN0LXNpbmdsZSAubmctc2VsZWN0LWNvbnRhaW5lciB7XG4gIGJvcmRlci1yYWRpdXM6IDBweCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGUge1xuICBjb2xvcjogd2hpdGU7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG5cbi5tYXQtY2FyZCB7XG4gIHBhZGRpbmc6IDBweDtcbiAgYm9yZGVyOiB0aGluIGRvdWJsZSByZ2IoMTgxLCAxNTUsIDkwKTtcbn1cblxuLm1hdC1jYXJkLXRpdGxlIHtcbiAgY29sb3I6IHdoaXRlO1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICBmb250LXNpemU6IDEzcHg7XG4gIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY2FyZC1oZWFkZXIge1xuICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDtcbiAgbWFyZ2luLWxlZnQ6IC0xNXB4O1xufVxuXG4uYWN0aW9uLWJ1dHRvbnMge1xuICBoZWlnaHQ6IDMwcHg7XG4gIHdpZHRoOiA3MHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","Validators","NG_VALUE_ACCESSOR","NG_VALIDATORS","CountryFilterInput","RegnFilterInput","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddStateFormComponent_tr_13_label_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","stateFormPanel","controls","errors","required","AddStateFormComponent","constructor","formBuilder","cntrySrv","regnSrv","stateSrv","subscriptions","newRecord","enumList","enumCntry","enumRegn","enumAllRegn","previousState","previousRegn","previousCtry","onChange","onTouched","group","stateId","stateCode","stateName","ctryId","regnId","push","valueChanges","subscribe","value","ngOnInit","loadCntry","loadRegn","getALLCountry","res","map","i","name","ctryCode","unshift","getALLRegn","code","onSelectCountry","$event","setTimeout","patchValue","id","loadRegionCode","ctry_id","filter","t","cntryId","includes","onSelectRegion","isValid","getValidationErrors","length","me","validationErros","stateDetails","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","forEach","s","unsubscribe","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","CountryService","i3","RegnService","i4","StateService","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddStateFormComponent_Template","rf","ctx","ɵɵelement","AddStateFormComponent_tr_13_Template","ɵɵlistener","AddStateFormComponent_Template_ng_select_change_20_listener","AddStateFormComponent_Template_ng_select_change_25_listener","dirty"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\location\\widgets\\add-state-form\\add-state-form.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\location\\widgets\\add-state-form\\add-state-form.component.html"],"sourcesContent":["import { Component, forwardRef, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, UntypedFormControl, NG_VALIDATORS } from '@angular/forms';\nimport { Enums } from 'src/app/model/enums.model';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { CountryService } from '../../../../services/country.service';\nimport { RegnService } from '../../services/regn.service';\nimport { CountryFilterInput } from '../../modal/countryFilterInput.model';\nimport { RegnFilterInput } from '../region-list/regnFilterInput.model';\nimport { StateService } from '../../services/state.service';\n\ndeclare var $: any;\n@Component({\n  selector: 'app-add-state-form',\n  templateUrl: './add-state-form.component.html',\n  styleUrls: ['./add-state-form.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddStateFormComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddStateFormComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddStateFormComponent implements ControlValueAccessor, OnDestroy {\n\n  stateFormPanel: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  newRecord: boolean = true;\n  enumList: Enums[] = [];\n  enumCntry: CountryFilterInput[] = [];\n  enumRegn: any[] = [];\n  enumAllRegn: any[] = [];\n  previousState:string = '';\n  previousRegn:number = 0;\n  previousCtry:number = 0;\n  @Input() isNew!: boolean;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private cntrySrv: CountryService,\n    private regnSrv: RegnService,\n    private stateSrv:StateService\n  ) {\n    this.stateFormPanel = this.formBuilder.group({\n      stateId: [null],\n      stateCode: ['', [Validators.required]],\n      stateName: [''],\n      ctryId: ['', [Validators.required]],\n      regnId: ['', [Validators.required]],\n    });\n\n    // End Of Building Form\n    this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.stateFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadCntry();\n    this.loadRegn();\n  }\n\n  loadCntry() {\n    this.cntrySrv.getALLCountry().subscribe((res: any) => {\n      this.enumCntry = res;\n      this.enumCntry = res.map((i: any) => { i.name = i.ctryCode + ' - ' + i.name; return i; });\n      this.enumCntry.unshift(new CountryFilterInput('', 'Make a selection'));\n    });\n  }\n\n  loadRegn() {\n    this.regnSrv.getALLRegn().subscribe((res: any) => {\n      this.enumAllRegn = res;\n      this.enumAllRegn = res.map((i: any) => { i.name = i.code + ' - ' + i.name; return i; });\n      this.enumAllRegn.unshift(new RegnFilterInput('', 'Make a selection', ''));\n      this.enumRegn = this.enumAllRegn;\n    });\n  }\n\n  onSelectCountry($event: any) {\n    setTimeout(() => {\n      this.stateFormPanel.patchValue({\n        regnId: null,\n      });\n      \n    }, 10);\n    if ($event.id != null && $event.id != \"\") {\n      this.loadRegionCode($event.id);\n    }\n    else {\n      this.enumRegn = this.enumAllRegn;\n      //this.enumRegn.unshift(new RegnFilterInput('', 'Make a selection', ''));\n    }\n\n  }\n\n  loadRegionCode(ctry_id: any) {\n    if (ctry_id != null) {\n      this.enumRegn = [];\n      this.enumRegn = this.enumAllRegn.filter(t => t.cntryId == ctry_id)\n        .map((i) => {\n          if (!i.name.includes(i.code + ' - ')) { i.name = i.ctryCode + ' - ' + i.name; }\n          return i;\n        });\n      this.enumRegn.unshift(new RegnFilterInput('', 'Make a selection', ''));\n    }\n  }\n\n  onSelectRegion($event: any) {\n    if ($event.id != null && $event.id != \"\") {\n      setTimeout(() => {\n        this.stateFormPanel.patchValue({\n          ctryId: $event.cntryId,\n        });\n      }, 10);\n\n    }\n    else {\n    }\n  }\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const me = this;\n    const validationErros: VaildationError[] = [];\n\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n\n  get value(): any {\n    const stateDetails: any = {\n      stateId: this.stateFormPanel.controls.stateId.value,\n      stateCode : this.stateFormPanel.controls.stateCode.value,\n      stateName: this.stateFormPanel.controls.stateName.value,\n      ctryId: this.stateFormPanel.controls.ctryId.value,\n      regnId: this.stateFormPanel.controls.regnId.value,\n    };\n    return stateDetails;\n  }\n\n  set value(value: any) {\n    this.previousState = value.stateCode;\n    this.previousCtry = value.ctryId;\n    this.previousRegn = value.regnId;\n    setTimeout(() => {\n      this.stateFormPanel.patchValue({\n        stateId: value.stateId,\n        stateCode: value.stateCode,\n        stateName: value.stateName,\n        ctryId: value.ctryId,\n        regnId: value.regnId,\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  writeValue(value: any) {\n\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.stateFormPanel.reset();\n    }\n  }\n\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  // communicate the inner form validation to the parent form\n  validate(_: UntypedFormControl) {\n    return this.stateFormPanel.valid ? null : { stateFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n","<form [formGroup]=\"stateFormPanel\">\n  <table width=\"100%\">\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>State Code</label>\n          <input type=\"text\" class=\"form-control\" name=\"stateCode\" formControlName=\"stateCode\" maxlength=\"32\" appTrimInput>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable'>State Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"stateName\" formControlName=\"stateName\" maxlength=\"64\" appTrimInput>\n        </div>\n      </td>\n    </tr>\n    <tr *ngIf=\"(stateFormPanel.controls['stateCode']?.errors && stateFormPanel.controls['stateCode'].dirty)\">\n\n      <td style=\"width:25%\">\n        <label *ngIf=\"!stateFormPanel.controls['stateCode']?.errors.required\" class='form-field-lable'\n          style=\"color:red;\">State Code already exists </label>\n\n      </td>\n    <tr>\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>Country Name</label>\n          <ng-select appendTo=\"body\"  [clearable]=\"false\" (change)=\"onSelectCountry($event)\" [items]=\"enumCntry\" formControlName=\"ctryId\"\n                     [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\"\n                     class=\"ng-select-dropdown\">\n          </ng-select>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>Region Name</label>\n          <ng-select appendTo=\"body\"  [clearable]=\"false\" (change)=\"onSelectRegion($event)\" [items]=\"enumRegn\" formControlName=\"regnId\"\n                     [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\"\n                     class=\"ng-select-dropdown\"  >\n          </ng-select>\n        </div>\n      </td>\n    </tr>\n  </table>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}