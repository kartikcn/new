{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class DivisionService {\n  constructor(divisionService) {\n    this.divisionService = divisionService;\n  }\n  getAllDivisions() {\n    return this.divisionService.getAll('division', 'getAll');\n  }\n  getById(divId) {\n    return this.divisionService.getSingleById(\"division\", \"getById\", divId);\n  }\n  saveDivision(data) {\n    return this.divisionService.add('division', 'save', data);\n  }\n  deleteById(divId) {\n    return this.divisionService.deleteById(\"division\", \"deleteById\", divId);\n  }\n  checkDivisonExists(divId) {\n    return this.divisionService.getSingleById(\"division\", \"check\", divId);\n  }\n  getDivisionList(data) {\n    return this.divisionService.search('division', 'list', data);\n  }\n  getAllDivisionTreeList() {\n    return this.divisionService.getAll('division', 'gettreelist');\n  }\n  getDivisionAreaByFloor(data) {\n    return this.divisionService.search('division', 'getareabyfloor', data);\n  }\n  getDivisionWithAllocatedArea(data) {\n    return this.divisionService.search(\"division\", \"getallocatedarea\", data);\n  }\n  static #_ = this.ɵfac = function DivisionService_Factory(t) {\n    return new (t || DivisionService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DivisionService,\n    factory: DivisionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DivisionService","constructor","divisionService","getAllDivisions","getAll","getById","divId","getSingleById","saveDivision","data","add","deleteById","checkDivisonExists","getDivisionList","search","getAllDivisionTreeList","getDivisionAreaByFloor","getDivisionWithAllocatedArea","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/division-department/services/division.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DivisionService {\n\n  constructor(\n    private divisionService: DataService<any>,\n\n  ) { }\n\n  public getAllDivisions() {\n    return this.divisionService.getAll('division', 'getAll');\n  }\n\n  public getById(divId: any) {\n    return this.divisionService.getSingleById(\"division\", \"getById\", divId);\n  }\n\n  public saveDivision(data: any): Observable<any> {\n    return this.divisionService.add('division', 'save', data);\n  }\n\n  public deleteById(divId: any) {\n    return this.divisionService.deleteById(\"division\", \"deleteById\", divId);\n  }\n\n  public checkDivisonExists(divId: any) {\n    return this.divisionService.getSingleById(\"division\", \"check\", divId);\n  }\n\n  public getDivisionList(data:any){\n    return this.divisionService.search('division', 'list', data);\n  }\n\n  public getAllDivisionTreeList(){\n    return this.divisionService.getAll('division', 'gettreelist');\n  }\n\n  public getDivisionAreaByFloor(data:any){\n    return this.divisionService.search('division', 'getareabyfloor', data);\n  }\n\n  public getDivisionWithAllocatedArea(data:any){\n    return this.divisionService.search(\"division\", \"getallocatedarea\", data);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAE1BC,YACUC,eAAiC;IAAjC,KAAAA,eAAe,GAAfA,eAAe;EAErB;EAEGC,eAAeA,CAAA;IACpB,OAAO,IAAI,CAACD,eAAe,CAACE,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC;EAC1D;EAEOC,OAAOA,CAACC,KAAU;IACvB,OAAO,IAAI,CAACJ,eAAe,CAACK,aAAa,CAAC,UAAU,EAAE,SAAS,EAAED,KAAK,CAAC;EACzE;EAEOE,YAAYA,CAACC,IAAS;IAC3B,OAAO,IAAI,CAACP,eAAe,CAACQ,GAAG,CAAC,UAAU,EAAE,MAAM,EAAED,IAAI,CAAC;EAC3D;EAEOE,UAAUA,CAACL,KAAU;IAC1B,OAAO,IAAI,CAACJ,eAAe,CAACS,UAAU,CAAC,UAAU,EAAE,YAAY,EAAEL,KAAK,CAAC;EACzE;EAEOM,kBAAkBA,CAACN,KAAU;IAClC,OAAO,IAAI,CAACJ,eAAe,CAACK,aAAa,CAAC,UAAU,EAAE,OAAO,EAAED,KAAK,CAAC;EACvE;EAEOO,eAAeA,CAACJ,IAAQ;IAC7B,OAAO,IAAI,CAACP,eAAe,CAACY,MAAM,CAAC,UAAU,EAAE,MAAM,EAAEL,IAAI,CAAC;EAC9D;EAEOM,sBAAsBA,CAAA;IAC3B,OAAO,IAAI,CAACb,eAAe,CAACE,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC;EAC/D;EAEOY,sBAAsBA,CAACP,IAAQ;IACpC,OAAO,IAAI,CAACP,eAAe,CAACY,MAAM,CAAC,UAAU,EAAE,gBAAgB,EAAEL,IAAI,CAAC;EACxE;EAEOQ,4BAA4BA,CAACR,IAAQ;IAC1C,OAAO,IAAI,CAACP,eAAe,CAACY,MAAM,CAAC,UAAU,EAAE,kBAAkB,EAAEL,IAAI,CAAC;EAC1E;EAAC,QAAAS,CAAA,G;qBAzCUlB,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfvB,eAAe;IAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}