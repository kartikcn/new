{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { forkJoin, of } from 'rxjs';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { AddPlanFormComponent } from '../add-plan/add-plan-form.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../../services/ppm-plan-services\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/toast\";\nimport * as i6 from \"primeng/confirmdialog\";\nimport * as i7 from \"@angular/material/legacy-card\";\nimport * as i8 from \"../add-plan/add-plan-form.component\";\nexport let AddEditPlanComponent = /*#__PURE__*/(() => {\n  class AddEditPlanComponent {\n    constructor(formBuilder, confirmationService, ppmPlanService, messageService) {\n      this.formBuilder = formBuilder;\n      this.confirmationService = confirmationService;\n      this.ppmPlanService = ppmPlanService;\n      this.messageService = messageService;\n      this.subscriptions = [];\n      this.isNew = true;\n      this.isEdit = true;\n      this.opertation_title = \"\";\n      this.parentFun = new EventEmitter();\n      this.formPPmDetail = this.formBuilder.group({\n        planFormPanel: [[Validators.required]]\n      });\n    }\n    ngOnInit() {}\n    isNewRecord() {\n      if (this.data.newRecord != null) {\n        this.isNew = this.data.newRecord;\n      }\n    }\n    loadData(planId) {\n      const calls = [];\n      if (planId != null) {\n        calls.push(this.ppmPlanService.getPlanById(planId));\n      } else {\n        calls.push(of(null));\n      }\n      forkJoin(...calls).subscribe(results => {\n        if (results[0] == null) {\n          let planData = {\n            planId: 0,\n            planName: null,\n            planType: null,\n            description: null,\n            planDocument: null\n          };\n          setTimeout(() => {\n            this.formPPmDetail.patchValue({\n              planFormPanel: planData\n            });\n          }, 0);\n        } else {\n          setTimeout(() => {\n            this.addPlanFormComponent.prevPlanName = results[0].planName;\n            this.formPPmDetail.patchValue({\n              planFormPanel: results[0]\n            });\n          }, 0);\n        }\n      });\n    }\n    saveRecords() {\n      if (this.formPPmDetail.valid) {\n        const planData = this.formPPmDetail.controls.planFormPanel.value;\n        this.ppmPlanService.savePlan(planData).subscribe(res => {\n          if (res.planName) {\n            this.setPlanId(res.planId);\n          } else {\n            this.messageService.add({\n              key: 'error',\n              severity: 'error',\n              summary: 'error',\n              detail: res.text\n            });\n          }\n        }, error => {});\n      }\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {}\n      });\n    }\n    setPlanId(planId) {\n      this.parentFun.emit(planId);\n    }\n    static #_ = this.ɵfac = function AddEditPlanComponent_Factory(t) {\n      return new (t || AddEditPlanComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.PpmPlanService), i0.ɵɵdirectiveInject(i2.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditPlanComponent,\n      selectors: [[\"app-add-edit-plan\"]],\n      viewQuery: function AddEditPlanComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(AddPlanFormComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addPlanFormComponent = _t.first);\n        }\n      },\n      inputs: {\n        data: \"data\"\n      },\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 9,\n      vars: 3,\n      consts: [[1, \"card\"], [3, \"formGroup\"], [\"id\", \"Frm\"], [\"formControlName\", \"planFormPanel\", 3, \"isNew\"], [2, \"display\", \"flex\", \"justify-content\", \"end\", \"margin-top\", \"5px\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"key\", \"error\", \"position\", \"top-right\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"]],\n      template: function AddEditPlanComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"mat-card\")(3, \"mat-card-content\", 2);\n          i0.ɵɵelement(4, \"app-add-plan-form\", 3);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"p-button\", 5);\n          i0.ɵɵlistener(\"click\", function AddEditPlanComponent_Template_p_button_click_6_listener() {\n            return ctx.saveRecords();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(7, \"p-toast\", 6)(8, \"p-confirmDialog\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.formPPmDetail);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"isNew\", ctx.isNew);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.formPPmDetail.valid);\n        }\n      },\n      dependencies: [i4.Button, i5.Toast, i6.ConfirmDialog, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i7.MatLegacyCard, i7.MatLegacyCardContent, i8.AddPlanFormComponent]\n    });\n  }\n  return AddEditPlanComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}