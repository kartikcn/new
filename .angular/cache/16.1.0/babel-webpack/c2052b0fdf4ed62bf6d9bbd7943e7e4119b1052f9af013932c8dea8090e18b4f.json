{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/messages.service\";\nimport * as i2 from \"../provider/messages.provider\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/panel\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"primeng/paginator\";\nfunction MessagesComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MessagesComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addRecord());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MessagesComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 11);\n    i0.ɵɵelementStart(2, \"th\", 12)(3, \"div\", 13)(4, \"div\", 14)(5, \"p\", 15);\n    i0.ɵɵtext(6, \"Process Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 16);\n    i0.ɵɵelement(8, \"p-sortIcon\", 17)(9, \"p-columnFilter\", 18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 19)(11, \"div\", 13)(12, \"div\", 14)(13, \"p\", 15);\n    i0.ɵɵtext(14, \"Message Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 16);\n    i0.ɵɵelement(16, \"p-sortIcon\", 20)(17, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 22)(19, \"div\", 13)(20, \"div\", 14)(21, \"p\", 15);\n    i0.ɵɵtext(22, \"Message Text\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 16);\n    i0.ɵɵelement(24, \"p-sortIcon\", 23)(25, \"p-columnFilter\", 24);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction MessagesComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 25)(1, \"td\", 11)(2, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function MessagesComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const msg_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.openEditItem(msg_r6));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 27);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const msg_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", msg_r6);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(msg_r6.fmprocessesProcessCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(msg_r6.msgCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", msg_r6.msgText);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(msg_r6.msgText);\n  }\n}\nfunction MessagesComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let MessagesComponent = /*#__PURE__*/(() => {\n  class MessagesComponent {\n    constructor(msgSrv, msgDialogue) {\n      this.msgSrv = msgSrv;\n      this.msgDialogue = msgDialogue;\n      this.messagesRecords = [];\n      this.loadingRec = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"msgId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n    }\n    ngOnInit() {\n      this.loadRecords();\n    }\n    loadRecords() {\n      this.loadingRec = true;\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.msgSrv.getAllMessagesPaginated(data).subscribe(res => {\n        if (res) {\n          this.loadingRec = false;\n          this.isFiltered = false;\n          this.messagesRecords = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.loadingRec = true;\n          this.messagesRecords = [];\n        }\n      }, error => {\n        this.loadingRec = false;\n      });\n    }\n    addRecord() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        msgId: 0,\n        processId: null,\n        msgCode: \"\",\n        msgText: \"\",\n        isEdit: true,\n        newRecord: true,\n        title: \"Add\"\n      };\n      this.msgDialogue.openDialog(dialogConfig);\n      this.msgDialogue.onDialogueClosed.subscribe(result => {\n        if (result == true) {\n          this.loadRecords();\n        }\n      });\n    }\n    openEditItem(msg) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        msgId: msg.msgId,\n        processId: msg.processId,\n        msgText: msg.msgText,\n        msgCode: msg.msgCode,\n        isEdit: true,\n        newRecord: false,\n        title: \"Edit\"\n      };\n      this.msgDialogue.openDialog(dialogConfig);\n      this.msgDialogue.onDialogueClosed.subscribe(result => {\n        if (result == true) {\n          this.loadRecords();\n        }\n      });\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        this.filterCriteria = {};\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {};\n            if (field == \"fmprocessesProcessCode\") {\n              filterCriteria = {\n                fieldName: \"fmprocesses.processCode\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function MessagesComponent_Factory(t) {\n      return new (t || MessagesComponent)(i0.ɵɵdirectiveInject(i1.MessagesService), i0.ɵɵdirectiveInject(i2.MessagesDialogueProvider));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MessagesComponent,\n      selectors: [[\"app-messages\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 10,\n      vars: 11,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Messages\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"dataKey\", \"msgId\", 3, \"value\", \"paginator\", \"rows\", \"scrollable\", \"rowHover\", \"onFilter\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"fmprocessesProcessCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"processId\"], [\"type\", \"text\", \"field\", \"fmprocessesProcessCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"msgCode\"], [\"field\", \"msgCode\"], [\"type\", \"text\", \"field\", \"msgCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"msgText\"], [\"field\", \"msgText\"], [\"type\", \"text\", \"field\", \"msgText\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"]],\n      template: function MessagesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, MessagesComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4);\n          i0.ɵɵlistener(\"onFilter\", function MessagesComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(5, MessagesComponent_ng_template_5_Template, 26, 0, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, MessagesComponent_ng_template_6_Template, 9, 5, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, MessagesComponent_ng_template_7_Template, 3, 1, \"ng-template\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 8)(9, \"p-paginator\", 9);\n          i0.ɵɵlistener(\"onPageChange\", function MessagesComponent_Template_p_paginator_onPageChange_9_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.messagesRecords)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"scrollable\", true)(\"rowHover\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i3.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i4.SortIcon, i4.ColumnFilter, i5.ButtonDirective, i6.Panel, i7.MatTooltip, i8.Paginator],\n      styles: [\".ellipsis[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]     .p-datatable-table{table-layout:fixed}\"]\n    });\n  }\n  return MessagesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}