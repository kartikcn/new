{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class AssetClassificationService {\n  constructor(service) {\n    this.service = service;\n  }\n  getAll() {\n    return this.service.getAll('assetClassification', 'getList');\n  }\n  getById(id) {\n    return this.service.getSingleById(\"assetClassification\", \"getById\", id);\n  }\n  save(data) {\n    return this.service.add('assetClassification', 'save', data);\n  }\n  static #_ = this.ɵfac = function AssetClassificationService_Factory(t) {\n    return new (t || AssetClassificationService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AssetClassificationService,\n    factory: AssetClassificationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AssetClassificationService","constructor","service","getAll","getById","id","getSingleById","save","data","add","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Asset-Management\\asset-classification\\services\\asset-classification-services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssetClassificationService {\n\n  constructor(\n    private service: DataService<any>,\n  ) { }\n\n\n  public getAll() {\n    return this.service.getAll('assetClassification', 'getList');\n  }\n\n  public getById(id: any) {\n    return this.service.getSingleById(\"assetClassification\", \"getById\", id);\n  }\n\n  public save(data: any): Observable<any> {\n    return this.service.add('assetClassification', 'save', data);\n  }\n \n}\n"],"mappings":";;AASA,OAAM,MAAOA,0BAA0B;EAErCC,YACUC,OAAyB;IAAzB,KAAAA,OAAO,GAAPA,OAAO;EACb;EAGGC,MAAMA,CAAA;IACX,OAAO,IAAI,CAACD,OAAO,CAACC,MAAM,CAAC,qBAAqB,EAAE,SAAS,CAAC;EAC9D;EAEOC,OAAOA,CAACC,EAAO;IACpB,OAAO,IAAI,CAACH,OAAO,CAACI,aAAa,CAAC,qBAAqB,EAAE,SAAS,EAAED,EAAE,CAAC;EACzE;EAEOE,IAAIA,CAACC,IAAS;IACnB,OAAO,IAAI,CAACN,OAAO,CAACO,GAAG,CAAC,qBAAqB,EAAE,MAAM,EAAED,IAAI,CAAC;EAC9D;EAAC,QAAAE,CAAA,G;qBAjBUV,0BAA0B,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAA1Bf,0BAA0B;IAAAgB,OAAA,EAA1BhB,0BAA0B,CAAAiB,IAAA;IAAAC,UAAA,EAFzB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}