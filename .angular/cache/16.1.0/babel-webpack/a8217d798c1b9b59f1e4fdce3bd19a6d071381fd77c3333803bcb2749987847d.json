{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/data.service\";\nexport class ToolTypeService {\n  constructor(service) {\n    this.service = service;\n  }\n  getAllToolTypes() {\n    return this.service.getAll('toolType', 'getList');\n  }\n  getAllToolTypesPaginated(data) {\n    return this.service.search('toolType', 'getListPaginated', data);\n  }\n  getToolTypeById(id) {\n    return this.service.getSingleById(\"toolType\", \"getById\", id);\n  }\n  saveToolType(toolType) {\n    return this.service.add('toolType', 'save', toolType);\n  }\n  deleteById(id) {\n    return this.service.getSingleById(\"toolType\", \"delete\", id);\n  }\n  checkExists(id) {\n    return this.service.getSingleById(\"toolType\", \"check\", id);\n  }\n  static #_ = this.ɵfac = function ToolTypeService_Factory(t) {\n    return new (t || ToolTypeService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ToolTypeService,\n    factory: ToolTypeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ToolTypeService","constructor","service","getAllToolTypes","getAll","getAllToolTypesPaginated","data","search","getToolTypeById","id","getSingleById","saveToolType","toolType","add","deleteById","checkExists","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\tool-type\\services\\tool-type.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from '../../../../services/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolTypeService {\n\n  constructor(\n    private service: DataService<any>,\n    \n  ) { }\n\n  \n  public getAllToolTypes(){\n    return this.service.getAll('toolType', 'getList');\n  }\n  public getAllToolTypesPaginated(data:any){\n    return this.service.search('toolType', 'getListPaginated',data);\n  }\n  public getToolTypeById(id: any) {\n    return this.service.getSingleById(\"toolType\", \"getById\",id);\n  }\n\n  public saveToolType(toolType: any): Observable<any> {\n    return this.service.add('toolType', 'save', toolType);\n  }\n\n  public deleteById(id: any) {\n    return this.service.getSingleById(\"toolType\", \"delete\", id);\n  }\n  public checkExists(id:any){\n    return this.service.getSingleById(\"toolType\",\"check\",id);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAE1BC,YACUC,OAAyB;IAAzB,KAAAA,OAAO,GAAPA,OAAO;EAEb;EAGGC,eAAeA,CAAA;IACpB,OAAO,IAAI,CAACD,OAAO,CAACE,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC;EACnD;EACOC,wBAAwBA,CAACC,IAAQ;IACtC,OAAO,IAAI,CAACJ,OAAO,CAACK,MAAM,CAAC,UAAU,EAAE,kBAAkB,EAACD,IAAI,CAAC;EACjE;EACOE,eAAeA,CAACC,EAAO;IAC5B,OAAO,IAAI,CAACP,OAAO,CAACQ,aAAa,CAAC,UAAU,EAAE,SAAS,EAACD,EAAE,CAAC;EAC7D;EAEOE,YAAYA,CAACC,QAAa;IAC/B,OAAO,IAAI,CAACV,OAAO,CAACW,GAAG,CAAC,UAAU,EAAE,MAAM,EAAED,QAAQ,CAAC;EACvD;EAEOE,UAAUA,CAACL,EAAO;IACvB,OAAO,IAAI,CAACP,OAAO,CAACQ,aAAa,CAAC,UAAU,EAAE,QAAQ,EAAED,EAAE,CAAC;EAC7D;EACOM,WAAWA,CAACN,EAAM;IACvB,OAAO,IAAI,CAACP,OAAO,CAACQ,aAAa,CAAC,UAAU,EAAC,OAAO,EAACD,EAAE,CAAC;EAC1D;EAAC,QAAAO,CAAA,G;qBA3BUhB,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrB,eAAe;IAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}