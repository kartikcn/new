{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"../svg-view/services/svg-view.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"../division-department/services/division.services\";\nimport * as i8 from \"../division-department/services/department.services\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@ng-select/ng-select\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/button\";\nimport * as i13 from \"primeng/toast\";\nimport * as i14 from \"primeng/confirmdialog\";\nimport * as i15 from \"../svg-view/svg-view.component\";\nfunction DivDeptSvgComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DivDeptSvgComponent_div_21_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 30);\n    i0.ɵɵtext(2, \" Division Id \");\n    i0.ɵɵelement(3, \"p-sortIcon\", 31)(4, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DivDeptSvgComponent_div_21_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 33)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"div\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const div_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", div_r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(div_r9.divId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", div_r9.highlightColor);\n  }\n}\nfunction DivDeptSvgComponent_div_21_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 35);\n    i0.ɵɵtext(2, \" Department Id \");\n    i0.ɵɵelement(3, \"p-sortIcon\", 36)(4, \"p-columnFilter\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_8_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 33)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"div\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dept_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", dept_r14);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dept_r14.depId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", dept_r14.highlightColor);\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_8_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nfunction DivDeptSvgComponent_div_21_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-table\", 20);\n    i0.ɵɵlistener(\"onRowSelect\", function DivDeptSvgComponent_div_21_div_8_Template_p_table_onRowSelect_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.ondeptrowselect($event));\n    });\n    i0.ɵɵtemplate(2, DivDeptSvgComponent_div_21_div_8_ng_template_2_Template, 7, 0, \"ng-template\", 21);\n    i0.ɵɵtemplate(3, DivDeptSvgComponent_div_21_div_8_ng_template_3_Template, 5, 4, \"ng-template\", 22);\n    i0.ɵɵtemplate(4, DivDeptSvgComponent_div_21_div_8_ng_template_4_Template, 3, 1, \"ng-template\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r6.deptdata)(\"paginator\", true)(\"rows\", ctx_r6.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(7, _c0))(\"scrollable\", true)(\"rowHover\", true);\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedRoomsMessage);\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"app-svg-view\", 39);\n    i0.ɵɵlistener(\"onRoomClick\", function DivDeptSvgComponent_div_21_div_18_Template_app_svg_view_onRoomClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.roomOnClickListener($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DivDeptSvgComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 17)(2, \"div\", 18)(3, \"div\", 19)(4, \"p-table\", 20);\n    i0.ɵɵlistener(\"onRowSelect\", function DivDeptSvgComponent_div_21_Template_p_table_onRowSelect_4_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.ondivrowselect($event));\n    });\n    i0.ɵɵtemplate(5, DivDeptSvgComponent_div_21_ng_template_5_Template, 7, 0, \"ng-template\", 21);\n    i0.ɵɵtemplate(6, DivDeptSvgComponent_div_21_ng_template_6_Template, 5, 4, \"ng-template\", 22);\n    i0.ɵɵtemplate(7, DivDeptSvgComponent_div_21_ng_template_7_Template, 3, 1, \"ng-template\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DivDeptSvgComponent_div_21_div_8_Template, 5, 8, \"div\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 25)(10, \"div\", 26)(11, \"div\")(12, \"div\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, DivDeptSvgComponent_div_21_div_14_Template, 2, 1, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\")(16, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function DivDeptSvgComponent_div_21_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onAssigntoRooms());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function DivDeptSvgComponent_div_21_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onCancelSelection());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(18, DivDeptSvgComponent_div_21_div_18_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", ctx_r1.divdata)(\"paginator\", true)(\"rows\", ctx_r1.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(13, _c0))(\"scrollable\", true)(\"rowHover\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showdepttable);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.selectionMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedSvgElementIds.length > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.selectedSvgElementIds.length > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.selectedSvgElementIds.length > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.viewSvg);\n  }\n}\nfunction DivDeptSvgComponent_ngx_spinner_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 40)(1, \"p\", 41);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport let DivDeptSvgComponent = /*#__PURE__*/(() => {\n  class DivDeptSvgComponent {\n    constructor(blServ, authSrv, svgViewSrv, formBuilder, cdr, spinner, messageService, divisionservice, departmentservice) {\n      this.blServ = blServ;\n      this.authSrv = authSrv;\n      this.svgViewSrv = svgViewSrv;\n      this.formBuilder = formBuilder;\n      this.cdr = cdr;\n      this.spinner = spinner;\n      this.messageService = messageService;\n      this.divisionservice = divisionservice;\n      this.departmentservice = departmentservice;\n      this.allBl = [];\n      this.enumBL = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.rowCount = 5;\n      this.viewSvg = false;\n      this.fileString = '';\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = false;\n      this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n      this.showdepttable = false;\n      this.selectedDivision = '';\n      this.selectedDepartment = '';\n      this.selectedSvgElementIds = [];\n      this.allSVGRoomsData = [];\n      this.allowSave = false;\n      this.divdata = [];\n      this.deptdata = [];\n      this.selectionMessage = '';\n      this.selectionHighlightColor = '';\n      this.selectedRoomsMessage = '';\n      this.filterPanel = this.formBuilder.group({\n        blId: [null, [Validators.required]],\n        flId: [null, [Validators.required]]\n      });\n    }\n    ngOnInit() {\n      this.compId = this.authSrv.getLoggedInUserCompId();\n      this.loadAllBuilding();\n      this.loadAllFloor();\n      this.loadAllDivision();\n    }\n    loadAllBuilding() {\n      this.blServ.getALLBuilding().subscribe(res => {\n        this.enumBL = res;\n        this.enumBL = res.map(i => {\n          i.name = i.id + ' - ' + i.name;\n          return i;\n        });\n        this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n      });\n    }\n    loadAllFloor() {\n      this.blServ.getALLFloor().subscribe(res => {\n        this.enumAllFL = res;\n        this.enumAllFL = res.map(i => {\n          i.name = i.blId + '-' + i.id + ' - ' + i.name;\n          return i;\n        });\n        this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n        this.enumFL = this.enumAllFL;\n      });\n    }\n    onSelectBlCode($event) {\n      if ($event.id != null) {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            flId: null\n          });\n          this.loadFloorCode($event.id);\n        }, 10);\n      } else {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            flId: null\n          });\n        }, 10);\n        this.enumFL = this.enumAllFL;\n      }\n    }\n    loadFloorCode(bl_id) {\n      if (bl_id != null) {\n        this.enumFL = [];\n        this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n        this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      }\n    }\n    onSelectFlCode(event) {\n      if (event.id != null) {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: event.blId\n          });\n        }, 10);\n      } else {\n        this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      }\n    }\n    loadAllDivision() {\n      this.divisionservice.getAllDivisions().subscribe(res => {\n        if (res) {\n          this.divdata = res;\n        }\n      });\n    }\n    onSearch() {\n      let blId = this.filterPanel.controls.blId.value;\n      let flId = this.filterPanel.controls.flId.value;\n      this.selectedSvgElementIds = [];\n      this.selectionMessage = '';\n      this.selectionHighlightColor = '';\n      this.selectedRoomsMessage = '';\n      this.displayNoFloorPlanInfo = false;\n      this.allowSave = false;\n      this.showdepttable = false;\n      this.selectedDivision = '';\n      this.selectedDepartment = '';\n      this.viewSvg = false;\n      this.showSpinner = true;\n      this.spinner.show();\n      this.getAllRoomsOfSvg(blId, flId);\n      let flData = this.enumFL.filter(i => i.blId == blId && i.id == flId);\n      //@ts-ignore\n      if (flData[0].svgName != null) {\n        let data = {\n          id: flId,\n          blId: blId,\n          name: '',\n          compId: this.compId,\n          svgName: '',\n          flInfo: '',\n          units: ''\n        };\n        this.svgViewSrv.getSVGFile(data).subscribe(res => {\n          if (res.code != 409) {\n            setTimeout(() => {\n              this.fileString = res.fileContent;\n              this.viewSvg = true;\n              this.cdr.detectChanges();\n              this.spinner.hide();\n              this.showSpinner = false;\n              this.selectionMessage = \"Please select Division/Department\";\n            }, 0);\n          } else {\n            this.spinner.hide();\n            this.showSpinner = false;\n            this.displayNoFloorPlanInfo = true;\n          }\n        });\n      } else {\n        this.spinner.hide();\n        this.showSpinner = false;\n        this.displayNoFloorPlanInfo = true;\n      }\n    }\n    getAllRoomsOfSvg(blId, flId) {\n      this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n      this.allSVGRoomsData = [];\n      let data = {\n        id: '',\n        name: '',\n        blId: blId,\n        flId: flId,\n        svgElementId: '',\n        compId: this.compId\n      };\n      this.blServ.getrmwithdivordepcolor(data).subscribe(res => {\n        if (res) {\n          this.allSVGRoomsData = res.filter(each => each.svgElementId != null);\n          this.allSVGRoomsData.forEach(rm => {\n            let labeldata = [];\n            if (rm.depId != null && rm.depId != '') {\n              // labeldata.push(`Department:${rm.depId}`);\n              labeldata.push(rm.depId);\n            }\n            if (rm.divId != null && rm.divId != '') {\n              // labeldata.push(`Division:${rm.divId}`);\n              labeldata.push(rm.divId);\n            }\n            // labeldata.push(`RoomId:${rm.rmId}`);\n            labeldata.push(rm.rmId);\n            let idObj = {\n              roomElementId: rm.svgElementId,\n              assetElementId: null\n            };\n            let colorObj = {\n              roomColor: rm.highlightColor,\n              assetColor: null\n            };\n            let contentData = {\n              blId: parseInt(blId),\n              flId: parseInt(flId),\n              rmId: rm.rmId,\n              label: [...labeldata],\n              showLabel: true,\n              highlightRoom: rm.highlightColor != null ? true : false,\n              svgElementId: idObj,\n              color: colorObj,\n              rmCode: '',\n              zoomAtRoom: false\n            };\n            this.svgRoomData.content.push(contentData);\n          });\n          this.svgRoomData.blId = parseInt(blId);\n          this.svgRoomData.flId = parseInt(flId);\n          this.svgRoomData.locate = \"room\";\n        }\n      });\n    }\n    onClear() {\n      this.viewSvg = false;\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = false;\n      this.selectedSvgElementIds = [];\n      this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n      this.showdepttable = false;\n      this.selectedDivision = '';\n      this.selectedDepartment = '';\n      this.allSVGRoomsData = [];\n      this.allowSave = false;\n      this.filterPanel.patchValue({\n        blId: null,\n        flId: null\n      });\n      this.selectionMessage = '';\n      this.selectionHighlightColor = '';\n      this.selectedRoomsMessage = '';\n    }\n    onAssigntoRooms() {\n      this.messageService.clear();\n      let saveRoomData = [];\n      const saveRequests = [];\n      this.selectedSvgElementIds.forEach(id => {\n        const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId == id);\n        if (matchingObj) {\n          saveRoomData.push(matchingObj);\n        }\n      });\n      saveRoomData.forEach(room => {\n        if (this.selectedDivision != '') {\n          room.divId = this.selectedDivision;\n        }\n        if (this.selectedDepartment != '') {\n          room.depId = this.selectedDepartment;\n        } else {\n          room.depId = null;\n        }\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      });\n      forkJoin(saveRequests).subscribe(res => {\n        this.messageService.add({\n          key: 'divdeptsvgMsg',\n          severity: 'success',\n          summary: 'Record updated',\n          detail: 'Room updated successfully'\n        });\n        this.onSearch();\n      }, error => {\n        console.error('Failed to save records:', error);\n      });\n    }\n    // userConfirm(){\n    //   let msg ='';\n    //   if(this.selectedDivision!='' && this.selectedDepartment!=''){\n    //     msg = 'Are you sure that you want to assign Division: '+this.selectedDivision+' and Department: '+\n    //     this.selectedDepartment +' to the selected rooms?'\n    //   }\n    //   else if (this.selectedDivision!='' && this.selectedDepartment==''){\n    //     msg = 'Are you sure that you want to assign Division: '+this.selectedDivision+' to the selected rooms?'\n    //   }\n    //   this.confirmationService.confirm({\n    //     message: msg,\n    //     header: 'Confirmation',\n    //     icon: 'pi pi-exclamation-triangle',\n    //     accept: () => {\n    //       this.onAssigntoRooms();\n    //     },\n    //     key: \"divdeptsvgGrid\"\n    //   });\n    // }\n    roomOnClickListener(elementN) {\n      if (this.allowSave) {\n        this.selectedRoomsMessage = '';\n        let svgelid = '';\n        if (elementN.startsWith(\"label\")) {\n          svgelid = elementN.substring(\"label_\".length);\n        } else {\n          svgelid = elementN;\n        }\n        if (!this.selectedSvgElementIds.includes(svgelid)) {\n          this.selectedSvgElementIds.push(svgelid);\n        }\n        this.selectedSvgElementIds.forEach(id => {\n          this.svgRoomData.content.forEach(svgData => {\n            if (svgData.svgElementId.roomElementId == id) {\n              svgData.highlightRoom = true;\n              svgData.color.roomColor = this.selectionHighlightColor;\n              if (this.selectedRoomsMessage.length == 0) {\n                this.selectedRoomsMessage += \"Selected Rooms : \" + svgData.rmId;\n              } else {\n                this.selectedRoomsMessage += \", \" + svgData.rmId;\n              }\n            }\n          });\n        });\n        this.cdr.detectChanges();\n        this.svgViewComp.loadByDetails();\n      }\n    }\n    ondivrowselect(event) {\n      this.deptdata = [];\n      this.showdepttable = true;\n      this.allowSave = true;\n      this.selectedDivision = event.data.divId;\n      this.selectionHighlightColor = event.data.highlightColor;\n      this.selectionMessage = \"Please select a room assign to : \" + this.selectedDivision;\n      let data = {\n        depId: '',\n        description: '',\n        depHead: '',\n        divId: event.data.divId\n      };\n      this.departmentservice.getDepartmentList(data).subscribe(res => {\n        if (res) {\n          this.deptdata = res;\n        }\n      });\n    }\n    ondeptrowselect(event) {\n      this.selectedDepartment = event.data.depId;\n      this.allowSave = true;\n      this.selectionHighlightColor = event.data.highlightColor;\n      this.selectionMessage = \"Please select a room  assign to \" + this.selectedDivision + \" | \" + this.selectedDepartment;\n      if (this.selectedSvgElementIds.length > 0) {\n        this.selectedSvgElementIds.forEach(id => {\n          this.svgRoomData.content.forEach(svgData => {\n            if (svgData.svgElementId.roomElementId == id) {\n              svgData.highlightRoom = true;\n              svgData.color.roomColor = this.selectionHighlightColor;\n            }\n          });\n        });\n        this.cdr.detectChanges();\n        this.svgViewComp.loadByDetails();\n      }\n    }\n    onCancelSelection() {\n      this.onSearch();\n    }\n    static #_ = this.ɵfac = function DivDeptSvgComponent_Factory(t) {\n      return new (t || DivDeptSvgComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.SvgViewService), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i5.NgxSpinnerService), i0.ɵɵdirectiveInject(i6.MessageService), i0.ɵɵdirectiveInject(i7.DivisionService), i0.ɵɵdirectiveInject(i8.DepartmentService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DivDeptSvgComponent,\n      selectors: [[\"app-div-dept-svg\"]],\n      viewQuery: function DivDeptSvgComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(SvgViewComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 25,\n      vars: 11,\n      consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"margin\", \"5px 0 0 5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [\"key\", \"divdeptsvgMsg\", \"position\", \"top-center\"], [\"key\", \"divdeptsvgGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"card\", \"no-file-found\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"600px\"], [2, \"width\", \"22%\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"selectionMode\", \"single\", \"scrollHeight\", \"95%\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"scrollable\", \"rowHover\", \"onRowSelect\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [4, \"ngIf\"], [2, \"width\", \"77%\", \"margin\", \"5px\", \"height\", \"550px\"], [2, \"height\", \"50px\", \"display\", \"flex\", \"justify-content\", \"space-between\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"style\", \"height:500px;\", 4, \"ngIf\"], [\"pSortableColumn\", \"divId\"], [\"field\", \"divId\"], [\"type\", \"text\", \"field\", \"divId\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [1, \"td-class\"], [\"pSortableColumn\", \"depId\"], [\"field\", \"depId\"], [\"type\", \"text\", \"field\", \"depId\", \"display\", \"menu\"], [2, \"height\", \"500px\"], [3, \"onRoomClick\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n      template: function DivDeptSvgComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Building \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"ng-select\", 6);\n          i0.ɵɵlistener(\"change\", function DivDeptSvgComponent_Template_ng_select_change_8_listener($event) {\n            return ctx.onSelectBlCode($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n          i0.ɵɵtext(12, \"Floor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"ng-select\", 7);\n          i0.ɵɵlistener(\"change\", function DivDeptSvgComponent_Template_ng_select_change_13_listener($event) {\n            return ctx.onSelectFlCode($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(14, \"td\", 3)(15, \"td\", 3);\n          i0.ɵɵelementStart(16, \"td\", 3)(17, \"div\", 8)(18, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function DivDeptSvgComponent_Template_button_click_18_listener() {\n            return ctx.onSearch();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function DivDeptSvgComponent_Template_button_click_19_listener() {\n            return ctx.onClear();\n          });\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵtemplate(20, DivDeptSvgComponent_div_20_Template, 3, 0, \"div\", 11);\n          i0.ɵɵtemplate(21, DivDeptSvgComponent_div_21_Template, 19, 14, \"div\", 12);\n          i0.ɵɵtemplate(22, DivDeptSvgComponent_ngx_spinner_22_Template, 3, 1, \"ngx-spinner\", 13);\n          i0.ɵɵelement(23, \"p-toast\", 14)(24, \"p-confirmDialog\", 15);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.displayNoFloorPlanInfo);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n        }\n      },\n      dependencies: [i9.NgIf, i10.NgSelectComponent, i6.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.ColumnFilter, i12.ButtonDirective, i13.Toast, i14.ConfirmDialog, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.NgxSpinnerComponent, i15.SvgViewComponent],\n      styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header{background-color:#879cc9;color:#000;padding-left:10px;font-weight:400;margin-bottom:0;height:10px!important}.no-file-found[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:500px}.td-class[_ngcontent-%COMP%]{background-color:inherit;display:flex;align-items:center;justify-content:center;width:40px;height:20px;margin:10px auto auto;border:1px solid black}[_nghost-%COMP%]     .p-datatable-scrollable-body{overflow-y:auto!important}[_nghost-%COMP%]     .p-datatable-scrollable-header-box{padding:0!important}\"]\n    });\n  }\n  return DivDeptSvgComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}