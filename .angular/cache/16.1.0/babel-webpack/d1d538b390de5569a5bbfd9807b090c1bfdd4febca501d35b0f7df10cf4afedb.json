{"ast":null,"code":"import { EventEmitter, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { Craftsperson } from '../../../craftsperson/model/craftsperson.model';\nimport { Team } from '../../../team/model/team.model';\nimport { WrStatusCardsComponent } from '../wr-status-cards/wr-status-cards.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/enum.service\";\nimport * as i3 from \"../../services/sla-request-parameters.service\";\nimport * as i4 from \"../../../craftsperson/services/craftsperson.service\";\nimport * as i5 from \"../../../team/services/team.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@ng-select/ng-select\";\nimport * as i8 from \"primeng/api\";\nimport * as i9 from \"primeng/calendar\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/dialog\";\nimport * as i12 from \"primeng/confirmdialog\";\nimport * as i13 from \"primeng/checkbox\";\nimport * as i14 from \"primeng/inputswitch\";\nimport * as i15 from \"../../../../../directive/directive/two-digit-decimal-number\";\nimport * as i16 from \"../../../../../directive/directive/positive-integer.directive\";\nfunction AddSlaResponseComponent_tr_18_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 60);\n    i0.ɵɵtext(1, \" Day start can not be greater than day end. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddSlaResponseComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtemplate(2, AddSlaResponseComponent_tr_18_label_2_Template, 2, 0, \"label\", 59);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.slaResponseFormPanel.controls[\"dayStartTime\"] == null ? null : ctx_r0.slaResponseFormPanel.controls[\"dayStartTime\"].errors) && !(ctx_r0.slaResponseFormPanel.controls[\"dayStartTime\"] == null ? null : ctx_r0.slaResponseFormPanel.controls[\"dayStartTime\"].errors.required));\n  }\n}\nfunction AddSlaResponseComponent_ng_template_118_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function AddSlaResponseComponent_ng_template_118_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.handleCancel());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddSlaResponseComponent_ng_template_118_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 68);\n    i0.ɵɵlistener(\"click\", function AddSlaResponseComponent_ng_template_118_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.clickDisplayWarningYes());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddSlaResponseComponent_ng_template_118_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 69);\n    i0.ɵɵlistener(\"click\", function AddSlaResponseComponent_ng_template_118_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.clickDisplayWarningNo());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddSlaResponseComponent_ng_template_118_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 61)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 62)(4, \"div\", 63);\n    i0.ɵɵtemplate(5, AddSlaResponseComponent_ng_template_118_button_5_Template, 1, 0, \"button\", 64);\n    i0.ɵɵtemplate(6, AddSlaResponseComponent_ng_template_118_button_6_Template, 1, 0, \"button\", 65);\n    i0.ɵɵtemplate(7, AddSlaResponseComponent_ng_template_118_button_7_Template, 1, 0, \"button\", 66);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.displayWarningMsg);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.displayWarningNo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.displayWarningYes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.displayWarningYes);\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"25vw\"\n  };\n};\nexport class AddSlaResponseComponent {\n  constructor(formBuilder, enumsrv, slaReqSrv, technicianService, teamService) {\n    this.formBuilder = formBuilder;\n    this.enumsrv = enumsrv;\n    this.slaReqSrv = slaReqSrv;\n    this.technicianService = technicianService;\n    this.teamService = teamService;\n    this.subscriptions = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumPriority = [];\n    this.selectedDays = [];\n    this.previousPriorities = [];\n    this.wrStatus = [];\n    this.stepsData = [];\n    this.slaStepsData = [];\n    this.enumIsDefault = [];\n    this.enumAutoIssue = [];\n    this.enumAutoApproval = [];\n    this.idForAutoIssueYes = 0;\n    this.idForAutoApprovalYes = 0;\n    this.allowOnWorkOnHolidays = [{\n      label: 'Yes',\n      value: 1\n    }, {\n      label: 'No',\n      value: 0\n    }];\n    this.displayStepsScreen = false;\n    this.displayWarningYes = false;\n    this.displayWarningNo = false;\n    this.dataBySlaRequestId = [];\n    this.displayWarningMsg = '';\n    this.enumNotifyRequestor = [];\n    this.makeReadOnly = true;\n    this.autoAproveReadOnly = false;\n    this.technicianData = [];\n    this.teamsHavingtechnician = [];\n    this.notifyAutoApprove = new EventEmitter();\n    this.notifyAutoIssue = new EventEmitter();\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.slaResponseFormPanel = this.formBuilder.group({\n      slaRequestParametersId: [''],\n      slaResponseParametersId: [''],\n      timeToResponseDays: [null],\n      timeToResponseHours: [null],\n      timeToCompleteDays: [null],\n      timeToCompleteHours: [null],\n      priority: [''],\n      canWorkOnHoliday: [''],\n      workingDays: [''],\n      dayStartTime: ['', [Validators.required, this.checkTimeValidator()]],\n      dayEndTime: ['', [Validators.required, this.checkTimeValidator()]],\n      sun: [''],\n      mon: [''],\n      tue: [''],\n      wed: [''],\n      thus: [''],\n      fri: [''],\n      sat: [''],\n      isDefault: [],\n      autoIssue: [],\n      autoApproval: [],\n      notifyRequestor: [],\n      technicianId: [null],\n      teamId: [null]\n    });\n    this.stepsForm = this.formBuilder.group({\n      stepId: [null, [Validators.required]]\n    });\n    this.subscriptions.push(this.slaResponseFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadEnums();\n    // this.loadWrStatus();\n    // this.loadWrSteps();\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      this.enumClonedList = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase());\n      this.enumIsDefault = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'is_default'.toLocaleUpperCase());\n      this.enumIsDefault = this.enumIsDefault.map(t => {\n        return {\n          ...t,\n          disabled: false\n        };\n      });\n      this.enumIsDefault.forEach(t => {\n        if (t.enumValue === \"Yes\") {\n          this.enumIsDefaultYes = t.enumKey;\n        } else {\n          this.enumIsDefaultNo = t.enumKey;\n        }\n      });\n      this.enumAutoIssue = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'auto_issue'.toLocaleUpperCase());\n      this.enumAutoIssue = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'auto_issue'.toLocaleUpperCase());\n      this.enumAutoIssue.forEach(t => {\n        if (t.enumValue === \"Yes\") {\n          this.idForAutoIssueYes = t.enumKey;\n        }\n      });\n      this.enumAutoApproval = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'auto_approval'.toLocaleUpperCase());\n      this.enumAutoApproval.forEach(t => {\n        if (t.enumValue === \"Yes\") {\n          this.idForAutoApprovalYes = t.enumKey;\n        }\n      });\n      this.enumNotifyRequestor = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'notify_requestor'.toLocaleUpperCase());\n    }, error => {});\n  }\n  loadWrStatus() {\n    this.slaReqSrv.getAllWrStatus().subscribe(res => {\n      this.wrStatus = res;\n    });\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const me = this;\n    const validationErros = [];\n    return validationErros;\n  }\n  get value() {\n    const slaDetails = {\n      slaRequestParametersId: this.slaResponseFormPanel.controls.slaRequestParametersId.value,\n      slaResponseParametersId: this.slaResponseFormPanel.controls.slaResponseParametersId.value,\n      timeToComplete: this.slaResponseFormPanel.controls.timeToComplete.value,\n      timeToResponseDays: this.slaResponseFormPanel.controls.timeToResponseDays.value,\n      timeToResponseHours: this.slaResponseFormPanel.controls.timeToResponseHours.value,\n      timeToCompleteDays: this.slaResponseFormPanel.controls.timeToCompleteDays.value,\n      timeToCompleteHours: this.slaResponseFormPanel.controls.timeToCompleteHours.value,\n      priority: this.slaResponseFormPanel.controls.priority.value,\n      canWorkOnHoliday: this.slaResponseFormPanel.controls.canWorkOnHoliday.value,\n      workingDays: this.slaResponseFormPanel.controls.workingDays.value,\n      dayStartTime: this.slaResponseFormPanel.controls.dayStartTime.value,\n      dayEndTime: this.slaResponseFormPanel.controls.dayEndTime.value,\n      isDefault: this.slaResponseFormPanel.controls.isDefault.value,\n      autoIssue: this.slaResponseFormPanel.controls.autoIssue.value,\n      autoApproval: this.slaResponseFormPanel.controls.autoApproval.value,\n      notifyRequestor: this.slaResponseFormPanel.controls.notifyRequestor.value,\n      technicianId: this.slaResponseFormPanel.controls.technicianId.value,\n      teamId: this.slaResponseFormPanel.controls.teamId.value\n    };\n    return slaDetails;\n  }\n  set value(value) {\n    if (value.autoIssue && value.autoIssue === this.idForAutoIssueYes && this.idForAutoIssueYes) {\n      this.autoAproveReadOnly = true;\n      this.makeReadOnly = false;\n      this.loadAllTechnicians();\n      this.loadTeamsHavingTechnicians();\n    } else {\n      this.autoAproveReadOnly = false;\n      this.makeReadOnly = true;\n    }\n    setTimeout(() => {\n      this.slaResponseFormPanel.patchValue({\n        slaRequestParametersId: value.slaRequestParametersId,\n        slaResponseParametersId: value.slaResponseParametersId,\n        timeToResponseDays: value.timeToResponseDays,\n        timeToResponseHours: value.timeToResponseHours,\n        timeToCompleteDays: value.timeToCompleteDays,\n        timeToCompleteHours: value.timeToCompleteHours,\n        priority: value.priority,\n        canWorkOnHoliday: value.canWorkOnHoliday === 1 ? true : false,\n        workingDays: value.workingDays,\n        dayStartTime: this.convertToTime(value.dayStartTime),\n        dayEndTime: this.convertToTime(value.dayEndTime),\n        isDefault: value.isDefault.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase() ? true : false,\n        autoIssue: value.autoIssue.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase() ? true : false,\n        autoApproval: value.autoApproval.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase() ? true : false,\n        notifyRequestor: value.notifyRequestor.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase() ? true : false,\n        technicianId: value.technicianId,\n        teamId: value.teamId\n      });\n      if (value.workingDays != null) {\n        this.setCheckBoxValues(value.workingDays, value.canWorkOnHoliday);\n      } else {\n        this.setCheckBoxValues(\"0,0,0,0,0,0,0\", '0');\n      }\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  convertToTime(value) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      return currDate;\n    } else {\n      return null;\n    }\n  }\n  setCheckBoxValues(data, allowOnWork) {\n    var checkBoxValue = data.split(',');\n    setTimeout(() => {\n      this.slaResponseFormPanel.patchValue({\n        sun: checkBoxValue[0] == '1' ? true : false,\n        mon: checkBoxValue[1] == '1' ? true : false,\n        tue: checkBoxValue[2] == '1' ? true : false,\n        wed: checkBoxValue[3] == '1' ? true : false,\n        thus: checkBoxValue[4] == '1' ? true : false,\n        fri: checkBoxValue[5] == '1' ? true : false,\n        sat: checkBoxValue[6] == '1' ? true : false\n      });\n    });\n  }\n  checkTimeValidator() {\n    return control => {\n      if (control.value !== undefined && control.value != null && control.value !== \"\") {\n        this.slaResponseFormPanel.controls['dayStartTime'].setErrors(null);\n        this.slaResponseFormPanel.clearAsyncValidators();\n        this.slaResponseFormPanel.updateValueAndValidity();\n        var startTime = this.slaResponseFormPanel.controls['dayStartTime'].value;\n        var endTime = this.slaResponseFormPanel.controls['dayEndTime'].value;\n        if (startTime != null && endTime != null) {\n          if (startTime > endTime) {\n            this.slaResponseFormPanel.controls['dayStartTime'].setErrors({\n              'incorrect': true\n            });\n            this.slaResponseFormPanel.updateValueAndValidity();\n            return {\n              'incorrect': true\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.slaResponseFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate(_) {\n    return this.slaResponseFormPanel.valid ? null : {\n      slaResponseFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  changeAutoIssue(event) {\n    if (event.checked === true) {\n      this.makeReadOnly = false;\n      this.autoAproveReadOnly = true;\n      this.loadAllTechnicians();\n      this.loadTeamsHavingTechnicians();\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          autoApproval: true\n        });\n      });\n    } else {\n      this.makeReadOnly = true;\n      this.autoAproveReadOnly = false;\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          teamId: null,\n          technicianId: null\n        });\n      });\n    }\n    this.callAutoIssueParent(event);\n  }\n  checkAutoApprove(event) {\n    this.callAutoApproveParent(event);\n  }\n  getEnumValueById(id) {\n    return this.enumIsDefault.find(t => t.id === id)?.enumValue;\n  }\n  getIsDefaultEnumIdByValue(value) {\n    return this.enumIsDefault.find(t => t.enumValue.toLocaleUpperCase() === value.toLocaleUpperCase())?.enumKey;\n  }\n  getNotifyRequestorById(id) {\n    return this.enumNotifyRequestor.find(t => t.id === id)?.enumValue;\n  }\n  getAutoIssueById(id) {\n    return this.enumAutoIssue.find(t => t.id === id)?.enumValue;\n  }\n  getAutoApprovalById(id) {\n    return this.enumAutoApproval.find(t => t.id === id)?.enumValue;\n  }\n  onClickIsDefault(event) {\n    this.slaReqSrv.getAllSLAResponseBySlaRequestId(this.slaResponseFormPanel.value.slaRequestParametersId).subscribe(res => {\n      if (res) {\n        this.dataBySlaRequestId = res;\n      }\n      setTimeout(() => {\n        if (event.checked === true) {\n          const isDefaultYes = this.dataBySlaRequestId.some(eachRecord => eachRecord.slaResponseParametersId === this.slaResponseFormPanel.value.slaResponseParametersId && eachRecord.isDefault === this.slaResponseFormPanel.value.isDefault);\n          if (!isDefaultYes) {\n            this.checkAnyDefaultPriorityByYes(res, this.slaResponseFormPanel.value.isDefault);\n          }\n        } else {\n          let isDefaultNoData = false;\n          const data = this.dataBySlaRequestId.filter(each => each.slaResponseParametersId !== this.slaResponseFormPanel.controls.slaResponseParametersId.value);\n          if (data) {\n            isDefaultNoData = data.some(eachRecord => this.getEnumValueById(eachRecord.isDefault)?.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase());\n            if (!isDefaultNoData) {\n              this.displayWarningNo = true;\n              this.displayWarningMsg = \"At least one priority should be set as the default.\";\n              setTimeout(() => {\n                this.slaResponseFormPanel.patchValue({\n                  isDefault: false\n                });\n              });\n            }\n          }\n        }\n      });\n    });\n  }\n  checkAnyDefaultPriorityByYes(res, isDefaultYes) {\n    let isDefaultCheck;\n    if (isDefaultYes) {\n      isDefaultCheck = this.getIsDefaultEnumIdByValue('Yes');\n    } else {\n      isDefaultCheck = this.getIsDefaultEnumIdByValue('No');\n    }\n    const data = res.filter(eachResponse => eachResponse.isDefault === isDefaultCheck);\n    if (data.length > 0) {\n      this.displayWarningYes = true;\n      this.displayWarningMsg = \"Would you like to proceed? Note that one priority has already been set as the default\";\n    }\n  }\n  clickDisplayWarningYes() {\n    if (this.displayWarningYes) {\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          isDefault: true\n        });\n      });\n      this.displayWarningYes = false;\n    } else if (this.displayWarningNo) {\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          isDefault: false\n        });\n      });\n      this.displayWarningNo = false;\n      this.displayWarningYes = false;\n    }\n  }\n  clickDisplayWarningNo() {\n    if (this.displayWarningYes) {\n      this.displayWarningYes = false;\n      this.displayWarningNo = false;\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          isDefault: false\n        });\n      });\n    } else if (this.displayWarningNo) {\n      this.displayWarningYes = false;\n      this.displayWarningNo = false;\n    }\n  }\n  handleCancel() {\n    setTimeout(() => {\n      this.slaResponseFormPanel.patchValue({\n        isDefault: true\n      });\n    });\n    this.displayWarningNo = false;\n    this.displayWarningYes = false;\n  }\n  loadAllTechnicians() {\n    this.technicianService.getAllCraftsperson().subscribe(res => {\n      if (res) {\n        this.technicianData = res;\n        this.technicianData.unshift(new Craftsperson(null, \"Make a selection\", \"\", \"\", 0, 0, 0, \"\", 0, 0, 0, 0, 0, \"\"));\n      } else {\n        this.technicianData = [];\n      }\n    });\n  }\n  loadTeamsHavingTechnicians() {\n    this.teamService.getTeamsHavingTechnician().subscribe(res => {\n      if (res.length > 0) {\n        this.teamsHavingtechnician = res;\n        this.teamsHavingtechnician.unshift(new Team(null, '', '', 'Make a selection'));\n      } else {\n        this.teamsHavingtechnician = [];\n      }\n    });\n  }\n  onSelectTechnician(event) {\n    if (event.cfId !== null && event.cfId !== '') {\n      this.slaResponseFormPanel.patchValue({\n        teamId: null\n      });\n    }\n  }\n  onSelectTeam(event) {\n    if (event.teamId !== null && event.teamId.toLocaleUpperCase() !== 'Make a selection'.toLocaleUpperCase() && event.teamId !== '') {\n      this.slaResponseFormPanel.patchValue({\n        technicianId: null\n      });\n    }\n  }\n  callAutoApproveParent(event) {\n    this.notifyAutoApprove.emit(event); // Emit the event with the data\n  }\n\n  callAutoIssueParent(event) {\n    this.notifyAutoIssue.emit(event);\n  }\n  static #_ = this.ɵfac = function AddSlaResponseComponent_Factory(t) {\n    return new (t || AddSlaResponseComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.EnumService), i0.ɵɵdirectiveInject(i3.SLARequestServices), i0.ɵɵdirectiveInject(i4.CraftspersonService), i0.ɵɵdirectiveInject(i5.TeamService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddSlaResponseComponent,\n    selectors: [[\"app-add-sla-response\"]],\n    viewQuery: function AddSlaResponseComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(WrStatusCardsComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrStatusCardspanel = _t.first);\n      }\n    },\n    inputs: {\n      isNew: \"isNew\",\n      enableAutoApprove: \"enableAutoApprove\"\n    },\n    outputs: {\n      notifyAutoApprove: \"notifyAutoApprove\",\n      notifyAutoIssue: \"notifyAutoIssue\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddSlaResponseComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddSlaResponseComponent),\n      multi: true\n    }])],\n    decls: 119,\n    vars: 25,\n    consts: [[\"nz-form\", \"\", 3, \"formGroup\"], [1, \"first-table\"], [\"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\", 2, \"width\", \"154px\"], [1, \"form-field-lable\", \"control-label\"], [\"name\", \"dayStartTime\", \"formControlName\", \"dayStartTime\", 3, \"timeOnly\"], [\"name\", \"dayEndTime\", \"formControlName\", \"dayEndTime\", 3, \"timeOnly\"], [4, \"ngIf\"], [\"colspan\", \"2\"], [\"width\", \"100%\", 2, \"margin-top\", \"5px\"], [\"width\", \"50%\"], [1, \"form-field-lable\", 2, \"width\", \"90px\", \"margin-left\", \"3px\"], [2, \"display\", \"flex\", \"align-items\", \"center\"], [\"name\", \"timeToResponseDays\", \"formControlName\", \"timeToResponseDays\", \"maxlength\", \"9\", \"appPositiveInteger\", \"\", 1, \"form-control\", 2, \"height\", \"24px\", \"width\", \"60px\", \"margin-left\", \"5px\"], [1, \"form-field-lable\", 2, \"margin-left\", \"5px\"], [\"name\", \"timeToResponseHours\", \"formControlName\", \"timeToResponseHours\", \"maxlength\", \"9\", \"appPositiveInteger\", \"\", \"TwoDigitDecimalNumber\", \"\", 1, \"form-control\", 2, \"height\", \"24px\", \"width\", \"60px\", \"margin-left\", \"5px\"], [1, \"form-field-lable\", 2, \"width\", \"95px\", \"margin-left\", \"3px\"], [\"name\", \"timeToCompleteDays\", \"formControlName\", \"timeToCompleteDays\", \"maxlength\", \"9\", \"appPositiveInteger\", \"\", 1, \"form-control\", 2, \"height\", \"24px\", \"width\", \"60px\", \"margin-left\", \"5px\"], [\"name\", \"timeToCompleteHours\", \"formControlName\", \"timeToCompleteHours\", \"maxlength\", \"9\", \"appPositiveInteger\", \"\", \"TwoDigitDecimalNumber\", \"\", 1, \"form-control\", 2, \"height\", \"24px\", \"width\", \"60px\", \"margin-left\", \"5px\"], [2, \"display\", \"flex\", \"margin-top\", \"5px\"], [1, \"switch-table\", 2, \"width\", \"100%\"], [1, \"input-label-custom\", \"switch-container\"], [1, \"form-field-lable\", 2, \"width\", \"100px\"], [\"formControlName\", \"isDefault\", 3, \"onChange\"], [\"formControlName\", \"notifyRequestor\"], [\"formControlName\", \"autoApproval\", 3, \"disabled\", \"onChange\"], [\"formControlName\", \"autoIssue\", 3, \"onChange\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"name\", \"technicianId\", \"formControlName\", \"technicianId\", \"bindLabel\", \"name\", \"bindValue\", \"cfId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"appendTo\", \"body\", \"name\", \"teamId\", \"formControlName\", \"teamId\", \"bindLabel\", \"teamCode\", \"bindValue\", \"teamId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [1, \"holidays-table\", 2, \"width\", \"100%\", \"margin-left\", \"10px\"], [1, \"holidays-container\"], [1, \"switch-container\"], [1, \"form-field-lable\", 2, \"width\", \"150px\"], [\"formControlName\", \"canWorkOnHoliday\"], [1, \"form-field-lable\", 2, \"padding\", \"6px 0 6px 0\"], [2, \"display\", \"flex\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [\"width\", \"14%\", 2, \"display\", \"flex\", \"align-items\", \"center\", \"padding-bottom\", \"12px\"], [\"name\", \"mon\", \"formControlName\", \"mon\", \"inputId\", \"Mon\", 3, \"binary\"], [\"for\", \"Mon\", 1, \"form-field-lable\"], [\"name\", \"tue\", \"formControlName\", \"tue\", \"inputId\", \"Tue\", 3, \"binary\"], [\"for\", \"Tue\", 1, \"form-field-lable\"], [\"name\", \"wed\", \"formControlName\", \"wed\", \"inputId\", \"Wed\", 3, \"binary\"], [\"for\", \"Wed\", 1, \"form-field-lable\"], [\"name\", \"thus\", \"formControlName\", \"thus\", \"inputId\", \"Thus\", 3, \"binary\"], [\"for\", \"Thus\", 1, \"form-field-lable\"], [\"name\", \"fri\", \"formControlName\", \"fri\", \"inputId\", \"Fri\", 3, \"binary\"], [\"for\", \"Fri\", 1, \"form-field-lable\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\", \"margin-left\", \"40px\"], [\"name\", \"sat\", \"formControlName\", \"sat\", \"inputId\", \"Sat\", 3, \"binary\"], [\"for\", \"sat\", 1, \"form-field-lable\"], [\"name\", \"sun\", \"formControlName\", \"sun\", \"inputId\", \"sun\", 3, \"binary\"], [\"for\", \"sun\", 1, \"form-field-lable\"], [\"key\", \"warning\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Confirmation\", 3, \"visible\", \"closable\", \"visibleChange\"], [\"pTemplate\", \"caption\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [1, \"m-2\"], [1, \"d-flex\", \"flex-row\", \"justify-content-end\"], [2, \"display\", \"flex\", \"padding-left\", \"6px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", \"class\", \"p-button-primary p-button-sm\", \"style\", \"margin-left:8px\", 3, \"click\", 4, \"ngIf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Yes\", \"icon\", \"pi pi-check\", \"class\", \"p-button-primary p-button-sm\", 3, \"click\", 4, \"ngIf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"No\", \"class\", \"p-button-primary p-button-sm\", \"style\", \"margin-left:8px\", 3, \"click\", 4, \"ngIf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"8px\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Yes\", \"icon\", \"pi pi-check\", 1, \"p-button-primary\", \"p-button-sm\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"No\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"8px\", 3, \"click\"]],\n    template: function AddSlaResponseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\")(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Day Start\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"p-calendar\", 7);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(11, \"td\")(12, \"div\", 3)(13, \"div\", 4)(14, \"div\", 5)(15, \"label\", 6);\n        i0.ɵɵtext(16, \"Day End\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"p-calendar\", 8);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(18, AddSlaResponseComponent_tr_18_Template, 3, 1, \"tr\", 9);\n        i0.ɵɵelementStart(19, \"tr\")(20, \"td\", 10)(21, \"table\", 11)(22, \"tr\", 2)(23, \"td\", 12)(24, \"label\", 13);\n        i0.ɵɵtext(25, \"Time To Respond\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 14);\n        i0.ɵɵelement(27, \"input\", 15);\n        i0.ɵɵelementStart(28, \"label\", 16);\n        i0.ɵɵtext(29, \"Days\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 17);\n        i0.ɵɵelementStart(31, \"label\", 16);\n        i0.ɵɵtext(32, \"Hours\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"td\", 12)(34, \"label\", 18);\n        i0.ɵɵtext(35, \"Time To Complete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 14);\n        i0.ɵɵelement(37, \"input\", 19);\n        i0.ɵɵelementStart(38, \"label\", 16);\n        i0.ɵɵtext(39, \"Days\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 20);\n        i0.ɵɵelementStart(41, \"label\", 16);\n        i0.ɵɵtext(42, \"Hours\");\n        i0.ɵɵelementEnd()()()()()()()();\n        i0.ɵɵelementStart(43, \"div\", 21)(44, \"div\", 22)(45, \"table\", 2)(46, \"tr\")(47, \"td\")(48, \"div\")(49, \"div\", 23)(50, \"label\", 24);\n        i0.ɵɵtext(51, \"Is Default\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"p-inputSwitch\", 25);\n        i0.ɵɵlistener(\"onChange\", function AddSlaResponseComponent_Template_p_inputSwitch_onChange_52_listener($event) {\n          return ctx.onClickIsDefault($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(53, \"div\", 23)(54, \"label\", 24);\n        i0.ɵɵtext(55, \"Notify Requestor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(56, \"p-inputSwitch\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"div\", 23)(58, \"label\", 24);\n        i0.ɵɵtext(59, \"Auto Approve\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"p-inputSwitch\", 27);\n        i0.ɵɵlistener(\"onChange\", function AddSlaResponseComponent_Template_p_inputSwitch_onChange_60_listener($event) {\n          return ctx.checkAutoApprove($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"div\", 23)(62, \"label\", 24);\n        i0.ɵɵtext(63, \"Auto Issue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"p-inputSwitch\", 28);\n        i0.ɵɵlistener(\"onChange\", function AddSlaResponseComponent_Template_p_inputSwitch_onChange_64_listener($event) {\n          return ctx.changeAutoIssue($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(65, \"div\", 3)(66, \"label\", 29);\n        i0.ɵɵtext(67, \"Technician\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"ng-select\", 30);\n        i0.ɵɵlistener(\"change\", function AddSlaResponseComponent_Template_ng_select_change_68_listener($event) {\n          return ctx.onSelectTechnician($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(69, \"div\", 3)(70, \"label\", 29);\n        i0.ɵɵtext(71, \"Team\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"ng-select\", 31);\n        i0.ɵɵlistener(\"change\", function AddSlaResponseComponent_Template_ng_select_change_72_listener($event) {\n          return ctx.onSelectTeam($event);\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(73, \"div\", 32)(74, \"table\", 2)(75, \"tr\")(76, \"td\")(77, \"div\", 33)(78, \"div\", 34)(79, \"label\", 35);\n        i0.ɵɵtext(80, \"Allow Work On Holiday\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(81, \"p-inputSwitch\", 36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"label\", 37);\n        i0.ɵɵtext(83, \"Working Days\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"table\", 2)(85, \"tr\", 38)(86, \"div\", 39)(87, \"td\", 40);\n        i0.ɵɵelement(88, \"p-checkbox\", 41);\n        i0.ɵɵelementStart(89, \"label\", 42);\n        i0.ɵɵtext(90, \"\\u00A0Monday\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(91, \"td\", 40);\n        i0.ɵɵelement(92, \"p-checkbox\", 43);\n        i0.ɵɵelementStart(93, \"label\", 44);\n        i0.ɵɵtext(94, \"\\u00A0Tuesday\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(95, \"td\", 40);\n        i0.ɵɵelement(96, \"p-checkbox\", 45);\n        i0.ɵɵelementStart(97, \"label\", 46);\n        i0.ɵɵtext(98, \"\\u00A0Wednesday\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(99, \"td\", 40);\n        i0.ɵɵelement(100, \"p-checkbox\", 47);\n        i0.ɵɵelementStart(101, \"label\", 48);\n        i0.ɵɵtext(102, \"\\u00A0Thursday\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(103, \"td\", 40);\n        i0.ɵɵelement(104, \"p-checkbox\", 49);\n        i0.ɵɵelementStart(105, \"label\", 50);\n        i0.ɵɵtext(106, \"\\u00A0Friday\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(107, \"div\", 51)(108, \"td\", 40);\n        i0.ɵɵelement(109, \"p-checkbox\", 52);\n        i0.ɵɵelementStart(110, \"label\", 53);\n        i0.ɵɵtext(111, \"\\u00A0Saturday\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(112, \"td\", 40);\n        i0.ɵɵelement(113, \"p-checkbox\", 54);\n        i0.ɵɵelementStart(114, \"label\", 55);\n        i0.ɵɵtext(115, \"\\u00A0Sunday\");\n        i0.ɵɵelementEnd()()()()()()()()()()()()();\n        i0.ɵɵelement(116, \"p-confirmDialog\", 56);\n        i0.ɵɵelementStart(117, \"p-dialog\", 57);\n        i0.ɵɵlistener(\"visibleChange\", function AddSlaResponseComponent_Template_p_dialog_visibleChange_117_listener($event) {\n          return ctx.displayWarningYes || (ctx.displayWarningNo = $event);\n        });\n        i0.ɵɵtemplate(118, AddSlaResponseComponent_ng_template_118_Template, 8, 4, \"ng-template\", 58);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.slaResponseFormPanel);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"timeOnly\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"timeOnly\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.slaResponseFormPanel.controls[\"dayStartTime\"] == null ? null : ctx.slaResponseFormPanel.controls[\"dayStartTime\"].errors) && ((ctx.slaResponseFormPanel.controls[\"dayStartTime\"] == null ? null : ctx.slaResponseFormPanel.controls[\"dayStartTime\"].dirty) || (ctx.slaResponseFormPanel.controls[\"dayStartTime\"] == null ? null : ctx.slaResponseFormPanel.controls[\"dayStartTime\"].touched)));\n        i0.ɵɵadvance(42);\n        i0.ɵɵproperty(\"disabled\", ctx.autoAproveReadOnly || !ctx.enableAutoApprove);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.technicianData)(\"searchable\", true)(\"readonly\", ctx.makeReadOnly);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.teamsHavingtechnician)(\"searchable\", true)(\"readonly\", ctx.makeReadOnly);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"binary\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"binary\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"binary\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"binary\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"binary\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"binary\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"binary\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c0));\n        i0.ɵɵproperty(\"visible\", ctx.displayWarningYes || ctx.displayWarningNo)(\"closable\", false);\n      }\n    },\n    dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i7.NgSelectComponent, i8.PrimeTemplate, i9.Calendar, i10.ButtonDirective, i11.Dialog, i12.ConfirmDialog, i13.Checkbox, i14.InputSwitch, i15.TwoDigitDecimalNumberDirective, i16.PositiveIntegerDirective],\n    styles: [\".switch-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.holidays-container[_ngcontent-%COMP%] {\\n  margin-top: 4px;\\n  padding: 10px;\\n  border: 1px solid #cccdef;\\n  padding-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svc2xhLXJlcXVlc3QtcGFyYW1ldGVycy93aWRnZXRzL2FkZC1zbGEtcmVzcG9uc2UvYWRkLXNsYS1yZXNwb25zZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuc3dpdGNoLWNvbnRhaW5lcntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5ob2xpZGF5cy1jb250YWluZXJ7XG4gICAgbWFyZ2luLXRvcDogNHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjY2RlZjtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","forwardRef","NG_VALUE_ACCESSOR","NG_VALIDATORS","Validators","Craftsperson","Team","WrStatusCardsComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddSlaResponseComponent_tr_18_label_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","slaResponseFormPanel","controls","errors","required","ɵɵlistener","AddSlaResponseComponent_ng_template_118_button_5_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","handleCancel","AddSlaResponseComponent_ng_template_118_button_6_Template_button_click_0_listener","_r9","ctx_r8","clickDisplayWarningYes","AddSlaResponseComponent_ng_template_118_button_7_Template_button_click_0_listener","_r11","ctx_r10","clickDisplayWarningNo","AddSlaResponseComponent_ng_template_118_button_5_Template","AddSlaResponseComponent_ng_template_118_button_6_Template","AddSlaResponseComponent_ng_template_118_button_7_Template","ɵɵtextInterpolate","ctx_r1","displayWarningMsg","displayWarningNo","displayWarningYes","AddSlaResponseComponent","constructor","formBuilder","enumsrv","slaReqSrv","technicianService","teamService","subscriptions","enumList","enumClonedList","enumPriority","selectedDays","previousPriorities","wrStatus","stepsData","slaStepsData","enumIsDefault","enumAutoIssue","enumAutoApproval","idForAutoIssueYes","idForAutoApprovalYes","allowOnWorkOnHolidays","label","value","displayStepsScreen","dataBySlaRequestId","enumNotifyRequestor","makeReadOnly","autoAproveReadOnly","technicianData","teamsHavingtechnician","notifyAutoApprove","notifyAutoIssue","onChange","onTouched","group","slaRequestParametersId","slaResponseParametersId","timeToResponseDays","timeToResponseHours","timeToCompleteDays","timeToCompleteHours","priority","canWorkOnHoliday","workingDays","dayStartTime","checkTimeValidator","dayEndTime","sun","mon","tue","wed","thus","fri","sat","isDefault","autoIssue","autoApproval","notifyRequestor","technicianId","teamId","stepsForm","stepId","push","valueChanges","subscribe","ngOnInit","loadEnums","getEnums","res","map","x","Object","assign","filter","t","tableName","toLocaleUpperCase","fieldName","disabled","forEach","enumValue","enumIsDefaultYes","enumKey","enumIsDefaultNo","error","loadWrStatus","getAllWrStatus","isValid","getValidationErrors","length","me","validationErros","slaDetails","timeToComplete","loadAllTechnicians","loadTeamsHavingTechnicians","setTimeout","patchValue","convertToTime","setCheckBoxValues","currDate","Date","data","split","time","setHours","setMinutes","allowOnWork","checkBoxValue","control","undefined","setErrors","clearAsyncValidators","updateValueAndValidity","startTime","endTime","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","s","unsubscribe","changeAutoIssue","event","checked","callAutoIssueParent","checkAutoApprove","callAutoApproveParent","getEnumValueById","id","find","getIsDefaultEnumIdByValue","getNotifyRequestorById","getAutoIssueById","getAutoApprovalById","onClickIsDefault","getAllSLAResponseBySlaRequestId","isDefaultYes","some","eachRecord","checkAnyDefaultPriorityByYes","isDefaultNoData","each","isDefaultCheck","eachResponse","getAllCraftsperson","unshift","getTeamsHavingTechnician","onSelectTechnician","cfId","onSelectTeam","emit","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","EnumService","i3","SLARequestServices","i4","CraftspersonService","i5","TeamService","_2","selectors","viewQuery","AddSlaResponseComponent_Query","rf","ctx","provide","useExisting","multi","decls","vars","consts","template","AddSlaResponseComponent_Template","ɵɵelement","AddSlaResponseComponent_tr_18_Template","AddSlaResponseComponent_Template_p_inputSwitch_onChange_52_listener","$event","AddSlaResponseComponent_Template_p_inputSwitch_onChange_60_listener","AddSlaResponseComponent_Template_p_inputSwitch_onChange_64_listener","AddSlaResponseComponent_Template_ng_select_change_68_listener","AddSlaResponseComponent_Template_ng_select_change_72_listener","AddSlaResponseComponent_Template_p_dialog_visibleChange_117_listener","AddSlaResponseComponent_ng_template_118_Template","dirty","touched","enableAutoApprove","ɵɵstyleMap","ɵɵpureFunction0","_c0"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/sla-request-parameters/widgets/add-sla-response/add-sla-response.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/sla-request-parameters/widgets/add-sla-response/add-sla-response.component.html"],"sourcesContent":["import { Component, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, UntypedFormGroup, UntypedFormBuilder, Validators, UntypedFormControl, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { SLARequestServices } from '../../services/sla-request-parameters.service';\nimport { CraftspersonService } from '../../../craftsperson/services/craftsperson.service';\nimport { Craftsperson } from '../../../craftsperson/model/craftsperson.model';\nimport { TeamService } from '../../../team/services/team.service';\nimport { Team } from '../../../team/model/team.model';\nimport { WrStatusCardsComponent } from '../wr-status-cards/wr-status-cards.component';\nimport { EnumList } from 'src/app/model/enum-list.model';\n\n@Component({\n  selector: 'app-add-sla-response',\n  templateUrl: './add-sla-response.component.html',\n  styleUrls: ['./add-sla-response.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddSlaResponseComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddSlaResponseComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddSlaResponseComponent implements OnInit {\n  subscriptions: Subscription[] = [];\n  enumList: EnumList[] = [];\n  enumClonedList: EnumList[] = [];\n  enumPriority: EnumList[] = [];\n  selectedDays: string[] = [];\n  previousPriorities: any[] = [];\n  wrStatus: any[] = [];\n  stepsData: any[] = [];\n  slaStepsData: any[] = [];\n  enumIsDefault: EnumList[] = [];\n  enumIsDefaultYes: any;\n  enumIsDefaultNo: any;\n  enumAutoIssue: EnumList[] = [];\n  enumAutoApproval: EnumList[] = [];\n  idForAutoIssueYes: any = 0;\n  idForAutoApprovalYes: any = 0;\n  allowOnWorkOnHolidays:any[] = [{label: 'Yes', value: 1}, {label: 'No', value: 0}];\n  displayStepsScreen: boolean = false;\n  stepsForm!: UntypedFormGroup;\n  slaResponseFormPanel: UntypedFormGroup;\n  displayWarningYes: boolean = false;\n  displayWarningNo: boolean = false;\n  dataBySlaRequestId: any[] = [];\n  displayWarningMsg: string = '';\n  enumNotifyRequestor:EnumList[] = [];\n  @Input() isNew!: boolean;\n  makeReadOnly: boolean = true;\n  autoAproveReadOnly: boolean = false;\n  technicianData : any[]=[];\n  teamsHavingtechnician: any[]=[];\n  @Input() enableAutoApprove!: boolean;\n  @ViewChild(WrStatusCardsComponent, { static: false }) wrStatusCardspanel!: WrStatusCardsComponent;\n  @Output() notifyAutoApprove: EventEmitter<any> = new EventEmitter<any>();\n  @Output() notifyAutoIssue: EventEmitter<any> = new EventEmitter<any>();\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private enumsrv: EnumService,\n    private slaReqSrv: SLARequestServices,\n    private technicianService: CraftspersonService,\n    private teamService: TeamService\n  ) {\n    this.slaResponseFormPanel = this.formBuilder.group({\n      slaRequestParametersId: [''],\n      slaResponseParametersId: [''],\n      timeToResponseDays: [null],\n      timeToResponseHours: [null],\n      timeToCompleteDays : [null],\n      timeToCompleteHours : [null],\n      priority: ['',],\n      canWorkOnHoliday: [''],\n      workingDays: [''],\n      dayStartTime: ['', [Validators.required, this.checkTimeValidator()]],\n      dayEndTime: ['', [Validators.required, this.checkTimeValidator()]],\n      sun: [''],\n      mon: [''],\n      tue: [''],\n      wed: [''],\n      thus: [''],\n      fri: [''],\n      sat: [''],\n      isDefault: [],\n      autoIssue: [],\n      autoApproval: [],\n      notifyRequestor:[],\n      technicianId: [null],\n      teamId : [null]\n    });\n\n    this.stepsForm = this.formBuilder.group({\n      stepId: [null, [Validators.required]],\n    })\n\n    this.subscriptions.push(\n      this.slaResponseFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadEnums();\n    // this.loadWrStatus();\n    // this.loadWrSteps();\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: EnumList[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumClonedList = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase());\n        this.enumIsDefault = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'is_default'.toLocaleUpperCase());\n        this.enumIsDefault = this.enumIsDefault.map(t => {\n          return {\n            ...t,\n            disabled: false,\n          }\n        });\n        this.enumIsDefault.forEach(t => {\n          if (t.enumValue === \"Yes\") {\n            this.enumIsDefaultYes = t.enumKey;\n          } else {\n            this.enumIsDefaultNo = t.enumKey;\n          }\n        })\n        this.enumAutoIssue = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'auto_issue'.toLocaleUpperCase());\n        this.enumAutoIssue = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'auto_issue'.toLocaleUpperCase());\n        this.enumAutoIssue.forEach(t => {\n          if (t.enumValue === \"Yes\") {\n            this.idForAutoIssueYes = t.enumKey;\n          }\n        })\n        this.enumAutoApproval = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'auto_approval'.toLocaleUpperCase());\n        this.enumAutoApproval.forEach(t => {\n          if (t.enumValue === \"Yes\") {\n            this.idForAutoApprovalYes = t.enumKey;\n          }\n        })\n\n        this.enumNotifyRequestor = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'notify_requestor'.toLocaleUpperCase());\n      },\n      error => {\n      }\n    );\n  }\n\n  loadWrStatus() {\n    this.slaReqSrv.getAllWrStatus().subscribe((res: any) => {\n      this.wrStatus = res;\n    })\n  }\n\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const me = this;\n    const validationErros: VaildationError[] = [];\n\n    return validationErros;\n  }\n\n  get value(): any {\n    const slaDetails: any = {\n      slaRequestParametersId: this.slaResponseFormPanel.controls.slaRequestParametersId.value,\n      slaResponseParametersId: this.slaResponseFormPanel.controls.slaResponseParametersId.value,\n      timeToComplete: this.slaResponseFormPanel.controls.timeToComplete.value,\n      timeToResponseDays : this.slaResponseFormPanel.controls.timeToResponseDays.value,\n      timeToResponseHours : this.slaResponseFormPanel.controls.timeToResponseHours.value,\n      timeToCompleteDays :  this.slaResponseFormPanel.controls.timeToCompleteDays.value,\n      timeToCompleteHours :  this.slaResponseFormPanel.controls.timeToCompleteHours.value,\n      priority: this.slaResponseFormPanel.controls.priority.value,\n      canWorkOnHoliday: this.slaResponseFormPanel.controls.canWorkOnHoliday.value,\n      workingDays: this.slaResponseFormPanel.controls.workingDays.value,\n      dayStartTime: this.slaResponseFormPanel.controls.dayStartTime.value,\n      dayEndTime: this.slaResponseFormPanel.controls.dayEndTime.value,\n      isDefault: this.slaResponseFormPanel.controls.isDefault.value,\n      autoIssue: this.slaResponseFormPanel.controls.autoIssue.value,\n      autoApproval: this.slaResponseFormPanel.controls.autoApproval.value,\n      notifyRequestor: this.slaResponseFormPanel.controls.notifyRequestor.value, \n      technicianId: this.slaResponseFormPanel.controls.technicianId.value,\n      teamId: this.slaResponseFormPanel.controls.teamId.value,\n    };\n    return slaDetails;\n  }\n\n  set value(value: any) {\n    if ((value.autoIssue && value.autoIssue === this.idForAutoIssueYes && this.idForAutoIssueYes)){\n      this.autoAproveReadOnly = true;\n      this.makeReadOnly = false;\n      this.loadAllTechnicians();\n      this.loadTeamsHavingTechnicians();\n    }else{\n      this.autoAproveReadOnly = false;\n      this.makeReadOnly = true; \n    }\n    setTimeout(() => {\n      this.slaResponseFormPanel.patchValue({\n        slaRequestParametersId: value.slaRequestParametersId,\n        slaResponseParametersId: value.slaResponseParametersId,\n        timeToResponseDays  : value.timeToResponseDays,\n        timeToResponseHours : value.timeToResponseHours,\n        timeToCompleteDays : value.timeToCompleteDays,\n        timeToCompleteHours : value.timeToCompleteHours,\n        priority: value.priority,\n        canWorkOnHoliday: value.canWorkOnHoliday === 1 ? true : false,\n        workingDays: value.workingDays,\n        dayStartTime: this.convertToTime(value.dayStartTime),\n        dayEndTime: this.convertToTime(value.dayEndTime),\n        isDefault: value.isDefault.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase() ? true : false,\n        autoIssue: value.autoIssue.toLocaleUpperCase()==='Yes'.toLocaleUpperCase() ? true : false,\n        autoApproval: value.autoApproval.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase() ? true : false,\n        notifyRequestor: value.notifyRequestor.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase() ? true : false,\n        technicianId: value.technicianId,\n        teamId: value.teamId,\n      });\n      if (value.workingDays != null) {\n        this.setCheckBoxValues(value.workingDays, value.canWorkOnHoliday);\n      } else {\n        this.setCheckBoxValues(\"0,0,0,0,0,0,0\", '0');\n      }\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  convertToTime(value: any) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      return currDate;\n    } else {\n      return null;\n    }\n\n  }\n\n  setCheckBoxValues(data: any, allowOnWork: any) {\n    var checkBoxValue = data.split(',');\n    setTimeout(() => {\n      this.slaResponseFormPanel.patchValue({\n        sun: checkBoxValue[0] == '1' ? true : false,\n        mon: checkBoxValue[1] == '1' ? true : false,\n        tue: checkBoxValue[2] == '1' ? true : false,\n        wed: checkBoxValue[3] == '1' ? true : false,\n        thus: checkBoxValue[4] == '1' ? true : false,\n        fri: checkBoxValue[5] == '1' ? true : false,\n        sat: checkBoxValue[6] == '1' ? true : false,\n      });\n    });\n  }\n\n  checkTimeValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined && control.value != null && control.value !== \"\") {\n        this.slaResponseFormPanel.controls['dayStartTime'].setErrors(null);\n        this.slaResponseFormPanel.clearAsyncValidators();\n        this.slaResponseFormPanel.updateValueAndValidity();\n        var startTime = this.slaResponseFormPanel.controls['dayStartTime'].value;\n        var endTime = this.slaResponseFormPanel.controls['dayEndTime'].value;\n        if (startTime != null && endTime != null) {\n          if (startTime > endTime) {\n            this.slaResponseFormPanel.controls['dayStartTime'].setErrors({ 'incorrect': true });\n            this.slaResponseFormPanel.updateValueAndValidity();\n            return { 'incorrect': true };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n\n  writeValue(value: any) {\n\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.slaResponseFormPanel.reset();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  validate(_: UntypedFormControl) {\n    return this.slaResponseFormPanel.valid ? null : { slaResponseFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  changeAutoIssue(event: any) {\n    if (event.checked === true) {\n      this.makeReadOnly = false;\n      this.autoAproveReadOnly = true\n      this.loadAllTechnicians();\n      this.loadTeamsHavingTechnicians()\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          autoApproval: true\n        });\n      });\n    }else{\n      this.makeReadOnly = true;\n      this.autoAproveReadOnly = false;\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          teamId: null,\n          technicianId: null\n        });\n      });\n    }\n    this.callAutoIssueParent(event);\n  }\n\n  checkAutoApprove(event: any){\n    this.callAutoApproveParent(event);\n  }\n\n  getEnumValueById(id: any) {\n    return this.enumIsDefault.find((t: any) => t.id === id)?.enumValue\n  }\n\n  getIsDefaultEnumIdByValue(value: any){\n    return this.enumIsDefault.find((t: any) => t.enumValue.toLocaleUpperCase() === value.toLocaleUpperCase())?.enumKey;\n  }\n\n  getNotifyRequestorById(id : any){\n    return this.enumNotifyRequestor.find((t: any) => t.id === id)?.enumValue;\n  }\n\n  getAutoIssueById(id: any){\n    return this.enumAutoIssue.find((t: any) => t.id === id)?.enumValue;\n  }\n\n  getAutoApprovalById(id: any){\n    return this.enumAutoApproval.find((t: any) => t.id === id)?.enumValue;\n  }\n\n  onClickIsDefault(event: any) {\n    this.slaReqSrv.getAllSLAResponseBySlaRequestId(this.slaResponseFormPanel.value.slaRequestParametersId).subscribe((res: any) => {\n      if (res) {\n        this.dataBySlaRequestId = res;\n      }\n      setTimeout(() => {\n        if(event.checked === true){\n          const  isDefaultYes =  this.dataBySlaRequestId.some(eachRecord => eachRecord.slaResponseParametersId === this.slaResponseFormPanel.value.slaResponseParametersId && eachRecord.isDefault ===  this.slaResponseFormPanel.value.isDefault)\n          if(!isDefaultYes){\n            this.checkAnyDefaultPriorityByYes(res, this.slaResponseFormPanel.value.isDefault);\n          }\n        }\n        else {\n          let isDefaultNoData: boolean = false;\n          const data = this.dataBySlaRequestId.filter(each => each.slaResponseParametersId !== this.slaResponseFormPanel.controls.slaResponseParametersId.value)\n          if (data) {\n            isDefaultNoData = data.some(eachRecord => this.getEnumValueById(eachRecord.isDefault)?.toLocaleUpperCase() === 'Yes'.toLocaleUpperCase())\n            if (!isDefaultNoData) {\n              this.displayWarningNo = true;\n              this.displayWarningMsg = \"At least one priority should be set as the default.\";\n              setTimeout(() => {\n                this.slaResponseFormPanel.patchValue({\n                  isDefault: false,\n                });\n              });\n            }\n          }\n        }\n      });\n\n    })\n  }\n\n  checkAnyDefaultPriorityByYes(res: any[], isDefaultYes: any) {\n    let isDefaultCheck : any;\n    if(isDefaultYes){\n      isDefaultCheck = this.getIsDefaultEnumIdByValue('Yes')\n    }else{\n      isDefaultCheck = this.getIsDefaultEnumIdByValue('No')\n    }\n    const data = res.filter(eachResponse => eachResponse.isDefault === isDefaultCheck);\n    if (data.length > 0) {\n      this.displayWarningYes = true;\n      this.displayWarningMsg = \"Would you like to proceed? Note that one priority has already been set as the default\"\n    }\n  }\n\n\n  clickDisplayWarningYes() {\n    if (this.displayWarningYes) {\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          isDefault: true,\n        });\n      });\n      this.displayWarningYes = false;\n    } else if (this.displayWarningNo) {\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          isDefault: false,\n        });\n      });\n      this.displayWarningNo = false\n      this.displayWarningYes = false;\n    }\n\n  }\n\n  clickDisplayWarningNo() {\n    if (this.displayWarningYes) {\n      this.displayWarningYes = false;\n      this.displayWarningNo = false;\n      setTimeout(() => {\n        this.slaResponseFormPanel.patchValue({\n          isDefault: false,\n        });\n      });\n    }else if(this.displayWarningNo){\n      this.displayWarningYes = false;\n      this.displayWarningNo = false;\n    }\n  }\n\n  handleCancel(){\n    setTimeout(() => {\n      this.slaResponseFormPanel.patchValue({\n        isDefault: true,\n      });\n    });\n    this.displayWarningNo = false;\n    this.displayWarningYes = false;\n  }\n\n  loadAllTechnicians(){\n    this.technicianService.getAllCraftsperson().subscribe((res: any) => {\n      if (res) {\n        this.technicianData = res;\n        this.technicianData.unshift(new Craftsperson(null, \"Make a selection\", \"\", \"\", 0, 0, 0, \"\", 0, 0, 0, 0, 0,\"\"));\n      }\n      else {\n        this.technicianData = [];\n      }\n  })\n}\n\nloadTeamsHavingTechnicians(){\n  this.teamService.getTeamsHavingTechnician().subscribe((res)=>{\n    if(res.length > 0){\n      this.teamsHavingtechnician = res;\n      this.teamsHavingtechnician.unshift(new Team(null,'','','Make a selection'));\n    }else{\n      this.teamsHavingtechnician = [];\n    }\n  })\n}\n\nonSelectTechnician(event: any){\n  if(event.cfId !== null && event.cfId !== ''){\n    this.slaResponseFormPanel.patchValue({\n      teamId: null,\n    })\n  }\n  \n}\n\nonSelectTeam(event: any){\n  if(event.teamId !== null && event.teamId.toLocaleUpperCase() !== 'Make a selection'.toLocaleUpperCase() && event.teamId !== ''){\n    this.slaResponseFormPanel.patchValue({\n      technicianId: null\n    })\n  }\n}\n\ncallAutoApproveParent(event : any) {\n  this.notifyAutoApprove.emit(event); // Emit the event with the data\n}\n\ncallAutoIssueParent(event : any){\n  this.notifyAutoIssue.emit(event)\n}\n\n}\n","<form nz-form [formGroup]=\"slaResponseFormPanel\">\n    <div class=\"first-table\">\n        <table width=\"100%\">\n            <tr>\n                <td>\n                    <div class=\"input-label-custom\">\n                        <div class=\"p-fluid\">\n                            <div class=\"p-field\" style=\"width:154px\">\n                                <label class='form-field-lable control-label'>Day Start</label>\n                                <p-calendar name=\"dayStartTime\" formControlName=\"dayStartTime\"\n                                    [timeOnly]=\"true\"></p-calendar>\n                            </div>\n                        </div>\n                    </div>\n                </td>\n                <td>\n                    <div class=\"input-label-custom\">\n                        <div class=\"p-fluid\">\n                            <div class=\"p-field\" style=\"width:154px\">\n                                <label class='form-field-lable control-label'>Day End</label>\n                                <p-calendar name=\"dayEndTime\" formControlName=\"dayEndTime\"\n                                    [timeOnly]=\"true\"></p-calendar>\n                            </div>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n            <tr\n                *ngIf=\"(slaResponseFormPanel.controls['dayStartTime']?.errors && (slaResponseFormPanel.controls['dayStartTime']?.dirty || slaResponseFormPanel.controls['dayStartTime']?.touched))\">\n                <td>\n                    <label\n                        *ngIf=\"slaResponseFormPanel.controls['dayStartTime']?.errors && !slaResponseFormPanel.controls['dayStartTime']?.errors.required\"\n                        class='form-field-lable' style=\"color:red;\">\n                        Day start can not be greater than day end.\n                    </label>\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"2\">\n                    <table style=\"margin-top: 5px;\" width=\"100%\">\n                        <tr width=\"100%\">\n                            <td width=\"50%\">\n                                <label class='form-field-lable' style=\"width: 90px; margin-left: 3px; \">Time To\n                                    Respond</label>\n                                <div style=\"display: flex; align-items: center;\">\n                                    <input style=\"height:24px; width: 60px; margin-left: 5px;\" class=\"form-control\"\n                                        name=\"timeToResponseDays\" formControlName=\"timeToResponseDays\" maxlength=\"9\"\n                                        appPositiveInteger>\n                                    <label class='form-field-lable' style=\"margin-left: 5px;\">Days</label>\n                                    <input class=\"form-control\" style=\"height:24px; width: 60px; margin-left: 5px;\"\n                                        name=\"timeToResponseHours\" formControlName=\"timeToResponseHours\" maxlength=\"9\"\n                                        appPositiveInteger TwoDigitDecimalNumber>\n                                    <label class='form-field-lable' style=\"margin-left: 5px;\">Hours</label>\n                                </div>\n                            </td>\n                            <td width=\"50%\">\n                                <label class='form-field-lable' style=\"width: 95px; margin-left: 3px; \">Time To\n                                    Complete</label>\n                                <div style=\"display: flex; align-items: center;\">\n                                    <input style=\"height:24px; width: 60px; margin-left: 5px;\" class=\"form-control\"\n                                        name=\"timeToCompleteDays\" formControlName=\"timeToCompleteDays\" maxlength=\"9\"\n                                        appPositiveInteger>\n                                    <label class='form-field-lable' style=\"margin-left: 5px;\">Days</label>\n                                    <input class=\"form-control\" style=\"height:24px; width: 60px; margin-left: 5px;\"\n                                        name=\"timeToCompleteHours\" formControlName=\"timeToCompleteHours\" maxlength=\"9\"\n                                        appPositiveInteger TwoDigitDecimalNumber>\n                                    <label class='form-field-lable' style=\"margin-left: 5px;\">Hours</label>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n        <!--                      for two childrens     -->\n        <div style=\"display: flex;margin-top: 5px;\">\n            <div class=\"switch-table\" style=\"width: 100%;\">\n                <table width=\"100%\">\n                    <tr>\n                        <td>\n                            <div>\n                                <div class=\"input-label-custom switch-container\">\n                                    <label class='form-field-lable' style=\"width: 100px;\">Is\n                                        Default</label>\n                                    <p-inputSwitch formControlName=\"isDefault\"\n                                        (onChange)=\"onClickIsDefault($event)\"></p-inputSwitch>\n                                </div>\n                                <div class=\"input-label-custom switch-container\">\n                                    <label class='form-field-lable' style=\"width: 100px;\">Notify\n                                        Requestor</label>\n                                    <p-inputSwitch formControlName=\"notifyRequestor\"></p-inputSwitch>\n\n                                </div>\n                                <div class=\"input-label-custom switch-container\">\n                                    <label class='form-field-lable' style=\"width: 100px;\">Auto Approve</label>\n                                    <p-inputSwitch formControlName=\"autoApproval\"\n                                        [disabled]=\"autoAproveReadOnly || !enableAutoApprove\" (onChange)=\"checkAutoApprove($event)\"></p-inputSwitch>\n                                </div>\n                                <div class=\"input-label-custom switch-container\">\n                                    <label class='form-field-lable' style=\"width: 100px;\">Auto\n                                        Issue</label>\n                                    <p-inputSwitch formControlName=\"autoIssue\"\n                                        (onChange)=\"changeAutoIssue($event)\"></p-inputSwitch>\n                                </div>\n\n                                <div class=\"input-label-custom \">\n                                    <label class='form-field-lable'>Technician</label>\n                                    <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"technicianData\"\n                                        name=\"technicianId\" formControlName=\"technicianId\" [searchable]=\"true\"\n                                        bindLabel=\"name\" bindValue=\"cfId\" placeholder=\"Make a selection\"\n                                        class=\"ng-select-dropdown\" (change)=\"onSelectTechnician($event)\"\n                                        [readonly]=\"makeReadOnly\">\n                                    </ng-select>\n                                </div>\n                                <div class=\"input-label-custom \">\n                                    <label class='form-field-lable'>Team</label>\n                                    <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"teamsHavingtechnician\"\n                                        name=\"teamId\" formControlName=\"teamId\" [searchable]=\"true\" bindLabel=\"teamCode\"\n                                        bindValue=\"teamId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                                        (change)=\"onSelectTeam($event)\" [readonly]=\"makeReadOnly\">\n                                    </ng-select>\n                                </div>\n\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n            <div class=\"holidays-table\" style=\"width:100%;margin-left: 10px;\">\n                <table width=\"100%\">\n                    <tr>\n                        <td>\n                            <div class=\"holidays-container\">\n                                <div class=\"switch-container\">\n                                    <label class='form-field-lable' style=\"width: 150px;\">Allow Work On\n                                        Holiday</label>\n                                    <p-inputSwitch formControlName=\"canWorkOnHoliday\"></p-inputSwitch>\n                                </div>\n                                <label class='form-field-lable' style=\"padding: 6px 0 6px 0;\">Working\n                                    Days</label>\n                                <table width=\"100%\">\n                                    <tr style=\"display: flex;\">\n                                        <div style=\"display: flex; flex-direction: column;\">\n                                            <td width=\"14%\"\n                                                style=\"display: flex; align-items: center; padding-bottom: 12px;\">\n                                                <p-checkbox name=\"mon\" formControlName=\"mon\" [binary]=\"true\"\n                                                    inputId=\"Mon\"></p-checkbox>\n                                                <label class='form-field-lable' for=\"Mon\">&nbsp;Monday</label>\n                                            </td>\n                                            <td width=\"14%\"\n                                                style=\"display: flex; align-items: center; padding-bottom: 12px;\">\n                                                <p-checkbox name=\"tue\" formControlName=\"tue\" [binary]=\"true\"\n                                                    inputId=\"Tue\"></p-checkbox>\n                                                <label class='form-field-lable' for=\"Tue\">&nbsp;Tuesday</label>\n                                            </td>\n                                            <td width=\"14%\"\n                                                style=\"display: flex; align-items: center; padding-bottom: 12px;\">\n                                                <p-checkbox name=\"wed\" formControlName=\"wed\" [binary]=\"true\"\n                                                    inputId=\"Wed\"></p-checkbox>\n                                                <label class='form-field-lable' for=\"Wed\">&nbsp;Wednesday</label>\n                                            </td>\n                                            <td width=\"14%\"\n                                                style=\"display: flex; align-items: center; padding-bottom: 12px;\">\n                                                <p-checkbox name=\"thus\" formControlName=\"thus\" [binary]=\"true\"\n                                                    inputId=\"Thus\"></p-checkbox>\n                                                <label class='form-field-lable' for=\"Thus\">&nbsp;Thursday</label>\n                                            </td>\n                                            <td width=\"14%\"\n                                                style=\"display: flex; align-items: center; padding-bottom: 12px;\">\n                                                <p-checkbox name=\"fri\" formControlName=\"fri\" [binary]=\"true\"\n                                                    inputId=\"Fri\"></p-checkbox>\n                                                <label class='form-field-lable' for=\"Fri\">&nbsp;Friday</label>\n                                            </td>\n                                        </div>\n                                        <div style=\"display: flex; flex-direction: column; margin-left: 40px;\">\n                                            <td width=\"14%\"\n                                                style=\"display: flex; align-items: center; padding-bottom: 12px;\">\n                                                <p-checkbox name=\"sat\" formControlName=\"sat\" [binary]=\"true\"\n                                                    inputId=\"Sat\"></p-checkbox>\n                                                <label class='form-field-lable' for=\"sat\">&nbsp;Saturday</label>\n                                            </td>\n                                            <td width=\"14%\"\n                                                style=\"display: flex; align-items: center; padding-bottom: 12px;\">\n                                                <p-checkbox name=\"sun\" formControlName=\"sun\" [binary]=\"true\"\n                                                    inputId=\"sun\"></p-checkbox>\n                                                <label class='form-field-lable' for=\"sun\">&nbsp;Sunday</label>\n                                            </td>\n                                        </div>\n                                    </tr>\n                                </table>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</form>\n<p-confirmDialog key=\"warning\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n<p-dialog header=\"Confirmation\" [(visible)]=\" displayWarningYes || displayWarningNo\" [style]=\"{width: '25vw'}\"\n    [closable]=\"false\">\n    <ng-template pTemplate=\"caption\">\n        <div class=\"m-2\">\n            <p>{{displayWarningMsg}}</p>\n        </div>\n        <div class=\"d-flex flex-row justify-content-end\">\n            <div style=\"display: flex; padding-left: 6px;\">\n                <button *ngIf=\"displayWarningNo\" pButton pRipple label=\"Cancel\" class=\"p-button-primary p-button-sm\"\n                    style=\"margin-left:8px\" (click)=\"handleCancel()\"></button>\n                <button *ngIf=\"displayWarningYes\" pButton pRipple label=\"Yes\" icon=\"pi pi-check\"\n                    class=\"p-button-primary p-button-sm\" (click)='clickDisplayWarningYes()'></button>\n                <button *ngIf=\"displayWarningYes\" pButton pRipple label=\"No\" class=\"p-button-primary p-button-sm\"\n                    style=\"margin-left:8px\" (click)=\"clickDisplayWarningNo()\"></button>\n            </div>\n        </div>\n    </ng-template>\n</p-dialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}