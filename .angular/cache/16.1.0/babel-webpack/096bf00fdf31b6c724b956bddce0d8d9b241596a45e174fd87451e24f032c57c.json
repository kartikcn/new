{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../booking/services/booking.services\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"src/app/services/enum.service\";\nimport * as i7 from \"primeng/table\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/dialog\";\nimport * as i10 from \"primeng/dropdown\";\nimport * as i11 from \"primeng/toast\";\nimport * as i12 from \"primeng/panel\";\nimport * as i13 from \"primeng/confirmdialog\";\nimport * as i14 from \"../../../directive/directive/trim-input.directive\";\nimport * as i15 from \"primeng/radiobutton\";\nimport * as i16 from \"@angular/material/tooltip\";\nimport * as i17 from \"primeng/paginator\";\nfunction ApproveBookingComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"h4\", 22);\n    i0.ɵɵtext(2, \"Select a Reservation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_5_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.ApproveReservation());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_5_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.RejectReservation());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r1.selectedScreens.length > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r1.selectedScreens.length > 0));\n  }\n}\nfunction ApproveBookingComponent_ng_template_6_ng_template_74_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 61);\n    i0.ɵɵlistener(\"onChange\", function ApproveBookingComponent_ng_template_6_ng_template_74_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const filter_r14 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r14($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r13)(\"options\", ctx_r12.enumStatusData)(\"showClear\", true);\n  }\n}\nfunction ApproveBookingComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 25);\n    i0.ɵɵtext(2, \"Approve\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 25);\n    i0.ɵɵtext(4, \"Reject\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 26)(6, \"div\", 27)(7, \"div\", 28)(8, \"p\", 29);\n    i0.ɵɵtext(9, \"Booking Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 30);\n    i0.ɵɵelement(11, \"p-sortIcon\", 31)(12, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"th\", 33)(14, \"div\", 27)(15, \"div\", 28)(16, \"p\", 29);\n    i0.ɵɵtext(17, \"Meeting Id \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 30);\n    i0.ɵɵelement(19, \"p-sortIcon\", 34)(20, \"p-columnFilter\", 35);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"th\", 36)(22, \"div\", 27)(23, \"div\", 28)(24, \"p\", 29);\n    i0.ɵɵtext(25, \"Building\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 30);\n    i0.ɵɵelement(27, \"p-sortIcon\", 37)(28, \"p-columnFilter\", 38);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(29, \"th\", 39)(30, \"div\", 27)(31, \"div\", 28)(32, \"p\", 29);\n    i0.ɵɵtext(33, \"Floor\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 30);\n    i0.ɵɵelement(35, \"p-sortIcon\", 40)(36, \"p-columnFilter\", 41);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(37, \"th\", 42)(38, \"div\", 27)(39, \"div\", 28)(40, \"p\", 29);\n    i0.ɵɵtext(41, \"Room\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(42, \"div\", 30);\n    i0.ɵɵelement(43, \"p-sortIcon\", 43)(44, \"p-columnFilter\", 44);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(45, \"th\", 45)(46, \"div\", 27)(47, \"div\", 28)(48, \"p\", 29);\n    i0.ɵɵtext(49, \"Date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(50, \"div\", 30);\n    i0.ɵɵelement(51, \"p-sortIcon\", 46);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(52, \"th\", 47)(53, \"div\", 27)(54, \"div\", 28)(55, \"p\", 29);\n    i0.ɵɵtext(56, \"From Time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(57, \"div\", 30);\n    i0.ɵɵelement(58, \"p-sortIcon\", 48);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(59, \"th\", 49)(60, \"div\", 27)(61, \"div\", 28)(62, \"p\", 29);\n    i0.ɵɵtext(63, \"To Time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(64, \"div\", 30);\n    i0.ɵɵelement(65, \"p-sortIcon\", 50);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(66, \"th\", 51)(67, \"div\", 27)(68, \"div\", 28)(69, \"p\", 29);\n    i0.ɵɵtext(70, \"Status\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(71, \"div\", 30);\n    i0.ɵɵelement(72, \"p-sortIcon\", 52);\n    i0.ɵɵelementStart(73, \"p-columnFilter\", 53);\n    i0.ɵɵtemplate(74, ApproveBookingComponent_ng_template_6_ng_template_74_Template, 1, 3, \"ng-template\", 54);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(75, \"th\", 55)(76, \"div\", 27)(77, \"div\", 28)(78, \"p\", 29);\n    i0.ɵɵtext(79, \" Meeting Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(80, \"div\", 30);\n    i0.ɵɵelement(81, \"p-sortIcon\", 56)(82, \"p-columnFilter\", 57);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(83, \"th\", 58)(84, \"div\", 27)(85, \"div\", 28)(86, \"p\", 29);\n    i0.ɵɵtext(87, \"Requested By\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(88, \"div\", 30);\n    i0.ɵɵelement(89, \"p-sortIcon\", 59)(90, \"p-columnFilter\", 60);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ApproveBookingComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 62)(1, \"td\", 25)(2, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_7_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const book_r17 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.appReserv(book_r17));\n    });\n    i0.ɵɵtext(3, \" Approve\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\", 25)(5, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_7_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const book_r17 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.rejReserv(book_r17));\n    });\n    i0.ɵɵtext(6, \" Reject\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"td\", 64);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"td\");\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const book_r17 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", book_r17);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(book_r17.bookingType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.reserveId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.blDataBlCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.flDataFlCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.rmDataRmCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(19, 13, book_r17.dateStart, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.convertToDisplayTime(book_r17.timeStart));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.convertToDisplayTime(book_r17.timeEnd));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", book_r17.meetingName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(book_r17.meetingName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.requestedByUserUserName);\n  }\n}\nfunction ApproveBookingComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nfunction ApproveBookingComponent_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 65)(1, \"div\", 66)(2, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_22_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.saveRejectionReason());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 68);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_22_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.cancelRejectionReason());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r5.rejectBook.valid);\n  }\n}\nfunction ApproveBookingComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 69);\n    i0.ɵɵtext(1, \"Confirmation\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApproveBookingComponent_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 14)(1, \"div\", 70)(2, \"div\", 71)(3, \"label\", 72);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 71);\n    i0.ɵɵelement(6, \"p-radioButton\", 73);\n    i0.ɵɵelementStart(7, \"label\", 72);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 71);\n    i0.ɵɵelement(10, \"p-radioButton\", 74);\n    i0.ɵɵelementStart(11, \"label\", 72);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r7.editDialog);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Do you want \", ctx_r7.action, \" all occurrences of the recurring reservation or just this one ?\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.action, \" this occurence only.\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.action, \" this reservation and all future occurrences.\");\n  }\n}\nfunction ApproveBookingComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 75);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.closeUpdateRecurrence());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 76);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_26_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.confirmUpdateResevation());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"width\": \"1800px\"\n  };\n};\nconst _c1 = function () {\n  return [25, 50, 100];\n};\nconst _c2 = function () {\n  return {\n    width: \"35vw\"\n  };\n};\nconst _c3 = function () {\n  return {\n    width: \"30vw\"\n  };\n};\nexport let ApproveBookingComponent = /*#__PURE__*/(() => {\n  class ApproveBookingComponent {\n    constructor(bookingSrv, confirmationService, authSrv, messageService, formBuilder, datePipe, enumsrv) {\n      this.bookingSrv = bookingSrv;\n      this.confirmationService = confirmationService;\n      this.authSrv = authSrv;\n      this.messageService = messageService;\n      this.formBuilder = formBuilder;\n      this.datePipe = datePipe;\n      this.enumsrv = enumsrv;\n      this.reqReservationData = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.selectedScreens = [];\n      this.isApproved = false;\n      this.isRejected = false;\n      this.displayRejectScreen = false;\n      this.rejectReason = '';\n      this.rejectionData = [];\n      this.upDateAll = false;\n      this.reserveDataToUpdate = [];\n      this.displayUpdateScreen = false;\n      this.reservationInputDTOList = [];\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumStatusData = [];\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"reserveId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteriaList = [];\n      this.isFiltered = false;\n      this.rejectBook = this.formBuilder.group({\n        rejectionReason: [null, [Validators.required]]\n      });\n      this.editDialog = this.formBuilder.group({\n        edit: ['updateOne']\n      });\n    }\n    ngOnInit() {\n      this.loggedInUser = this.authSrv.getLoggedInUserId();\n      this.loadEnums();\n    }\n    loadReservationData() {\n      let enumWaitForAprvl = this.getIdByStatus(\"Waiting for Approval\");\n      let data = {\n        filterDto: {\n          paginationDTO: this.paginationObj,\n          filterCriteria: this.filterCriteriaList\n        },\n        status: enumWaitForAprvl\n      };\n      this.isFiltered = false;\n      this.bookingSrv.getStatusReservationsPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFiltered = false;\n          this.reqReservationData = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        }\n      });\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumStatusData = this.enumClonedList.filter(t => t.tableName.toLowerCase() === 'reserve' && t.fieldName.toLowerCase() === 'status');\n        //  this.enumStatusData.unshift(new Enums(0, \"\", \"\", 'Make a selection'));\n        this.loadReservationData();\n      });\n    }\n    ApproveReservation() {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to approve the selected reservations?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.updateReservation(this.selectedScreens, \"Approved\");\n        },\n        key: \"approveBookingGrid\"\n      });\n    }\n    RejectReservation() {\n      this.rejectionData = this.selectedScreens;\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to reject the selected reservations?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.displayRejectScreen = true;\n        },\n        key: \"approveBookingGrid\"\n      });\n    }\n    appReserv(data) {\n      this.selectedReservation = data;\n      this.action = 'Approve';\n      if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n        this.displayUpdateScreen = true;\n      } else {\n        this.confirmDialog([this.selectedReservation], this.action);\n      }\n    }\n    rejReserv(data) {\n      this.selectedReservation = data;\n      this.action = 'Reject';\n      setTimeout(() => {\n        this.rejectBook.patchValue({\n          rejectionReason: null\n        });\n      }, 10);\n      this.displayRejectScreen = true;\n    }\n    saveRejectionReason() {\n      this.rejectReason = this.rejectBook.controls.rejectionReason.value;\n      this.displayRejectScreen = true;\n      if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n        this.displayUpdateScreen = true;\n      } else {\n        this.confirmDialog([this.selectedReservation], this.action);\n      }\n    }\n    cancelRejectionReason() {\n      this.rejectReason = '';\n      this.displayRejectScreen = false;\n    }\n    updateReservation(screen, statusText) {\n      statusText = statusText == 'Approve' ? 'Approved' : \"Rejected\";\n      let statusId = this.getIdByStatus(statusText);\n      this.isApproved = false;\n      this.isRejected = false;\n      this.reservationInputDTOList = [];\n      screen.forEach(each => {\n        var reserveDTO = {\n          reserveId: each.reserveId,\n          loggedBy: this.loggedInUser,\n          requestedBy: each.requestedBy,\n          requestedFor: this.loggedInUser,\n          status: statusId,\n          meetingName: each.meetingName,\n          comments: each.comments,\n          bookingType: each.bookingType,\n          recurringRule: each.recurringRule,\n          dateStart: this.datePipe.transform(each.dateStart, \"yyyy-MM-dd HH:mm:ss\"),\n          dateEnd: this.datePipe.transform(each.dateEnd, \"yyyy-MM-dd HH:mm:ss\"),\n          timeStart: this.convertToTime(each.timeStart),\n          timeEnd: this.convertToTime(each.timeEnd),\n          blId: each.blId,\n          flId: each.flId,\n          rmId: each.rmId,\n          configId: each.configId,\n          rejectionReason: statusText == \"Rejected\" ? this.rejectReason : null,\n          rejectedBy: statusText == \"Rejected\" ? this.loggedInUser : null,\n          dateRejected: statusText == \"Rejected\" ? this.datePipe.transform(new Date(), \"yyyy-MM-dd HH:mm:ss\") : null,\n          approvedBy: statusText == \"Approved\" ? this.loggedInUser : null,\n          dateApproved: statusText == \"Approved\" ? this.datePipe.transform(new Date(), \"yyyy-MM-dd HH:mm:ss\") : null,\n          parentId: each.parentId,\n          dateCreated: this.datePipe.transform(each.dateCreated, \"yyyy-MM-dd HH:mm:ss\"),\n          timeCreated: this.convertToTime(each.timeCreated),\n          isDateOrTimeChanged: false,\n          checkInNotifyCount: each.checkInNotifyCount\n        };\n        var reserveAttendeesDTO = each.reserveAttendees.slice(0);\n        ;\n        var reserveResourcesDTO = [];\n        var bookingData = {\n          reserveDTO: reserveDTO,\n          reserveAttendeesDTO: reserveAttendeesDTO,\n          reserveResourcesDTO: reserveResourcesDTO\n        };\n        this.reservationInputDTOList.push(bookingData);\n      });\n      this.bookingSrv.updateRecurrenceBookings(this.reservationInputDTOList).subscribe(res => {\n        this.loadReservationData();\n        setTimeout(() => {\n          this.messageService.clear();\n          this.messageService.add({\n            key: 'approveBookingMsg',\n            severity: 'success',\n            summary: 'Record updated',\n            detail: 'The reservation is ' + statusText\n          });\n        }, 1000);\n      });\n    }\n    formatDate(date) {\n      if (date != null) {\n        var dateCreated = new Date(date);\n        return dateCreated;\n      } else {\n        return null;\n      }\n    }\n    convertToTime(value) {\n      if (value != null) {\n        var currDate = new Date();\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        currDate.setHours(data[0]);\n        currDate.setMinutes(data[1]);\n        currDate.setSeconds(0);\n        currDate.setMilliseconds(0);\n        return this.datePipe.transform(currDate, \"HH:mm:ss\");\n      } else {\n        return this.datePipe.transform(new Date(), \"HH:mm:ss\");\n      }\n    }\n    convertTimeCreated(value) {\n      if (value != null) {\n        var currDate = new Date();\n        var data = value.split(':');\n        currDate.setHours(data[0]);\n        currDate.setMinutes(data[1]);\n        currDate.setSeconds(data[2]);\n        currDate.setMilliseconds(0);\n        return currDate;\n      } else {\n        return null;\n      }\n    }\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    getDataToUpdate(reservation) {\n      this.upDateAll = this.editDialog.controls.edit.value === 'updateAll';\n      if (this.upDateAll) {\n        this.reserveDataToUpdate = this.reqReservationData.filter(res => res.reserveId >= reservation.reserveId && res.parentId === reservation.parentId);\n      } else {\n        this.reserveDataToUpdate = this.reqReservationData.filter(res => res.reserveId === reservation.reserveId);\n      }\n      return this.reserveDataToUpdate;\n    }\n    confirmUpdateResevation() {\n      this.displayUpdateScreen = false;\n      var appData = [];\n      if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n        appData = this.getDataToUpdate(this.selectedReservation);\n      } else {\n        appData.push(this.selectedReservation);\n      }\n      this.confirmDialog(appData, this.action);\n    }\n    confirmDialog(data, action) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to ' + action + ' this reservation?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.displayRejectScreen = false;\n          this.updateReservation(data, action);\n        },\n        reject: () => {\n          if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n            this.displayUpdateScreen = true;\n          }\n        },\n        key: \"approveBookingGrid\"\n      });\n    }\n    closeUpdateRecurrence() {\n      this.displayUpdateScreen = false;\n    }\n    getEnumByid(id) {\n      return this.enumStatusData.find(t => t.enumKey === id)?.enumValue;\n    }\n    getIdByStatus(status) {\n      return this.enumStatusData.find(t => t.enumValue === status)?.enumKey;\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadReservationData();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {};\n            if (field == \"blDataBlCode\") {\n              filterCriteria = {\n                fieldName: \"blData.blCode\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"flDataFlCode\") {\n              filterCriteria = {\n                fieldName: \"flData.flCode\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"rmDataRmCode\") {\n              filterCriteria = {\n                fieldName: \"rmData.rmCode\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"requestedByUserUserName\") {\n              filterCriteria = {\n                fieldName: \"requestedByUser.userName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadReservationData();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function ApproveBookingComponent_Factory(t) {\n      return new (t || ApproveBookingComponent)(i0.ɵɵdirectiveInject(i1.BookingService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i5.DatePipe), i0.ɵɵdirectiveInject(i6.EnumService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ApproveBookingComponent,\n      selectors: [[\"app-approve-booking\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 27,\n      vars: 29,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Manage Bookings Approval\"], [1, \"card\"], [\"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"scrollHeight\", \"450px\", 3, \"value\", \"paginator\", \"selection\", \"tableStyle\", \"scrollable\", \"selectionChange\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"approveBookingMsg\", \"position\", \"top-right\"], [\"header\", \"Confirmation\", \"key\", \"approveBookingGrid\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Rejection\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [3, \"formGroup\"], [2, \"margin-top\", \"10px\", \"width\", \"80%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"rejectionReason\", \"formControlName\", \"rejectionReason\", \"colspa\", \"\", \"maxlength\", \"256\", \"appTrimInput\", \"\", 1, \"form-control\"], [3, \"visible\", \"closable\", \"draggable\", \"resizable\", \"modal\", \"visibleChange\"], [\"pTemplate\", \"footer\"], [1, \"d-flex\", \"flex-row\", \"justify-content-between\"], [2, \"font-size\", \"13px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Approve\", 1, \"p-button-primary\", \"p-button\", 2, \"margin-right\", \"1rem\", 3, \"hidden\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Reject\", 1, \"p-button-primary\", \"p-button\", 2, \"margin-right\", \"1rem\", 3, \"hidden\", \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"bookingType\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"bookingType\"], [\"type\", \"text\", \"field\", \"bookingType\", \"display\", \"menu\"], [\"pSortableColumn\", \"reserveId\"], [\"field\", \"reserveId\"], [\"type\", \"numeric\", \"field\", \"reserveId\", \"display\", \"menu\"], [\"pSortableColumn\", \"blDataBlCode\"], [\"field\", \"blDataBlCode\"], [\"type\", \"text\", \"field\", \"blDataBlCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"flDataFlCode\"], [\"field\", \"flDataFlCode\"], [\"type\", \"text\", \"field\", \"flDataFlCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmDataRmCode\"], [\"field\", \"rmDataRmCode\"], [\"type\", \"text\", \"field\", \"rmDataRmCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"dateStart\"], [\"field\", \"dateStart\"], [\"pSortableColumn\", \"timeStart\"], [\"field\", \"timeStart\"], [\"pSortableColumn\", \"timeEnd\"], [\"field\", \"timeEnd\"], [\"pSortableColumn\", \"status\"], [\"field\", \"status\"], [\"field\", \"status\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"pSortableColumn\", \"meetingName\"], [\"field\", \"meetingName\"], [\"type\", \"text\", \"field\", \"meetingName\", \"display\", \"menu\"], [\"pSortableColumn\", \"requestedByUserUserName\"], [\"field\", \"requestedByUserUserName\"], [\"type\", \"text\", \"field\", \"requestedByUserUserName\", \"display\", \"menu\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Type\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [3, \"pSelectableRow\"], [\"type\", \"button\", \"pButton\", \"\", 1, \"p-button-primary\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"], [1, \"d-flex\", \"flex-row\"], [2, \"display\", \"flex\", \"padding-left\", \"6px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-primary\", \"p-button-sm\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"8px\", 3, \"click\"], [2, \"margin-top\", \"20px !important\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [1, \"input-label-custom\", 2, \"margin-top\", \"10px\"], [1, \"form-field-lable\", 2, \"margin-left\", \"5px\"], [\"name\", \"edit\", \"value\", \"updateOne\", \"formControlName\", \"edit\"], [\"name\", \"edit\", \"value\", \"updateAll\", \"formControlName\", \"edit\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"label\", \"Close\", \"styleClass\", \"p-button-text\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-check\", \"label\", \"Ok\", 3, \"click\"]],\n      template: function ApproveBookingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"div\", 2)(3, \"p-table\", 3, 4);\n          i0.ɵɵlistener(\"selectionChange\", function ApproveBookingComponent_Template_p_table_selectionChange_3_listener($event) {\n            return ctx.selectedScreens = $event;\n          })(\"onFilter\", function ApproveBookingComponent_Template_p_table_onFilter_3_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(5, ApproveBookingComponent_ng_template_5_Template, 6, 2, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, ApproveBookingComponent_ng_template_6_Template, 91, 0, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, ApproveBookingComponent_ng_template_7_Template, 30, 16, \"ng-template\", 7);\n          i0.ɵɵtemplate(8, ApproveBookingComponent_ng_template_8_Template, 3, 1, \"ng-template\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 9)(10, \"p-paginator\", 10);\n          i0.ɵɵlistener(\"onPageChange\", function ApproveBookingComponent_Template_p_paginator_onPageChange_10_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(11, \"p-toast\", 11)(12, \"p-confirmDialog\", 12);\n          i0.ɵɵelementStart(13, \"p-dialog\", 13);\n          i0.ɵɵlistener(\"visibleChange\", function ApproveBookingComponent_Template_p_dialog_visibleChange_13_listener($event) {\n            return ctx.displayRejectScreen = $event;\n          });\n          i0.ɵɵelementStart(14, \"form\", 14)(15, \"table\", 15)(16, \"tr\")(17, \"td\")(18, \"div\", 16)(19, \"label\", 17);\n          i0.ɵɵtext(20, \"Rejection Reason\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 18);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(22, ApproveBookingComponent_ng_template_22_Template, 4, 1, \"ng-template\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"p-dialog\", 19);\n          i0.ɵɵlistener(\"visibleChange\", function ApproveBookingComponent_Template_p_dialog_visibleChange_23_listener($event) {\n            return ctx.displayUpdateScreen = $event;\n          });\n          i0.ɵɵtemplate(24, ApproveBookingComponent_ng_template_24_Template, 2, 0, \"ng-template\", 6);\n          i0.ɵɵtemplate(25, ApproveBookingComponent_ng_template_25_Template, 13, 4, \"ng-template\", 7);\n          i0.ɵɵtemplate(26, ApproveBookingComponent_ng_template_26_Template, 2, 0, \"ng-template\", 20);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"value\", ctx.reqReservationData)(\"paginator\", false)(\"selection\", ctx.selectedScreens)(\"tableStyle\", i0.ɵɵpureFunction0(25, _c0))(\"scrollable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(26, _c1));\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c2));\n          i0.ɵɵproperty(\"visible\", ctx.displayRejectScreen)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.rejectBook);\n          i0.ɵɵadvance(9);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(28, _c3));\n          i0.ɵɵproperty(\"visible\", ctx.displayUpdateScreen)(\"closable\", false)(\"draggable\", false)(\"resizable\", false)(\"modal\", true);\n        }\n      },\n      dependencies: [i2.PrimeTemplate, i7.Table, i7.SortableColumn, i7.SelectableRow, i7.SortIcon, i7.ColumnFilter, i8.ButtonDirective, i9.Dialog, i10.Dropdown, i11.Toast, i12.Panel, i13.ConfirmDialog, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MaxLengthValidator, i4.NgModel, i4.FormGroupDirective, i4.FormControlName, i14.TrimInputDirective, i15.RadioButton, i16.MatTooltip, i17.Paginator, i5.DatePipe],\n      styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header{background-color:#879cc9;color:#000;padding-left:10px;font-weight:400;margin-bottom:0;height:10px!important}[_nghost-%COMP%]     .p-confirm-dialog .p-dialog-header .p-dialog-content{align-items:center;background-color:#f9fcfc;display:flex;padding:10px}[_nghost-%COMP%]     .p-confirm-dialog .p-dialog-header{align-items:center;background-color:#f9fcfc}.ellipsis[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]     .p-datatable-table{table-layout:fixed}\"]\n    });\n  }\n  return ApproveBookingComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}