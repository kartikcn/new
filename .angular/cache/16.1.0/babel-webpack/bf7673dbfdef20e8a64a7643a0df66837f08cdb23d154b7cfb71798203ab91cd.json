{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class EquipmentService {\n  constructor(equipmentService, resourceDetailService) {\n    this.equipmentService = equipmentService;\n    this.resourceDetailService = resourceDetailService;\n  }\n  getAllEquipments() {\n    return this.equipmentService.getAll('equipment', 'getAll');\n  }\n  getAllEquipmentsPaginated(data) {\n    return this.equipmentService.search('equipment', 'getAllPaginated', data);\n  }\n  getEquipmentById(id) {\n    return this.equipmentService.getSingleById(\"equipment\", \"getEquipmentById\", id);\n  }\n  saveEquipment(data) {\n    return this.equipmentService.add('equipment', 'save', data);\n  }\n  validateEquipmentId(title) {\n    return this.equipmentService.getSingleById('equipment', 'check', title);\n  }\n  deleteById(eqId) {\n    return this.equipmentService.deleteById(\"equipment\", \"deleteById\", eqId);\n  }\n  getLinkedEquipmentPlanId(planId) {\n    return this.equipmentService.getSingleById(\"equipment\", \"getLinked\", planId);\n  }\n  getUnLinkedEquipmentPlanId(planId) {\n    return this.equipmentService.getSingleById(\"equipment\", \"getUnLinked\", planId);\n  }\n  getAllLogsById(eqId) {\n    return this.equipmentService.getAllById(\"equipment\", \"getAllLogs\", eqId);\n  }\n  static #_ = this.ɵfac = function EquipmentService_Factory(t) {\n    return new (t || EquipmentService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EquipmentService,\n    factory: EquipmentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EquipmentService","constructor","equipmentService","resourceDetailService","getAllEquipments","getAll","getAllEquipmentsPaginated","data","search","getEquipmentById","id","getSingleById","saveEquipment","add","validateEquipmentId","title","deleteById","eqId","getLinkedEquipmentPlanId","planId","getUnLinkedEquipmentPlanId","getAllLogsById","getAllById","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/equipment/services/equipment.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\nimport { EquipmentComponent } from '../modal/equipment.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EquipmentService {\n\n  constructor(\n    private equipmentService: DataService<any>,\n    private resourceDetailService: DataService<EquipmentComponent>\n\n  ) { }\n\n\n  public getAllEquipments() {\n    return this.equipmentService.getAll('equipment', 'getAll');\n  }\n\n  public getAllEquipmentsPaginated(data:any) {\n    return this.equipmentService.search('equipment', 'getAllPaginated',data);\n  }\n\n  public getEquipmentById(id: any) {\n    return this.equipmentService.getSingleById(\"equipment\", \"getEquipmentById\", id);\n  }\n\n  public saveEquipment(data: any): Observable<any> {\n    return this.equipmentService.add('equipment', 'save', data);\n  }\n  public validateEquipmentId(title: any) {\n    return this.equipmentService.getSingleById('equipment', 'check', title);\n  }\n  \n  public deleteById(eqId: any) {\n    return this.equipmentService.deleteById(\"equipment\", \"deleteById\", eqId);\n  }\n\n  public getLinkedEquipmentPlanId(planId: any) {\n    return this.equipmentService.getSingleById(\"equipment\", \"getLinked\", planId);\n  }\n\n  public getUnLinkedEquipmentPlanId(planId: any) {\n    return this.equipmentService.getSingleById(\"equipment\", \"getUnLinked\", planId);\n  }\n\n  public getAllLogsById(eqId:any) {\n    return this.equipmentService.getAllById(\"equipment\", \"getAllLogs\", eqId)\n  }\n\n}\n"],"mappings":";;AASA,OAAM,MAAOA,gBAAgB;EAE3BC,YACUC,gBAAkC,EAClCC,qBAAsD;IADtD,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,qBAAqB,GAArBA,qBAAqB;EAE3B;EAGGC,gBAAgBA,CAAA;IACrB,OAAO,IAAI,CAACF,gBAAgB,CAACG,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC;EAC5D;EAEOC,yBAAyBA,CAACC,IAAQ;IACvC,OAAO,IAAI,CAACL,gBAAgB,CAACM,MAAM,CAAC,WAAW,EAAE,iBAAiB,EAACD,IAAI,CAAC;EAC1E;EAEOE,gBAAgBA,CAACC,EAAO;IAC7B,OAAO,IAAI,CAACR,gBAAgB,CAACS,aAAa,CAAC,WAAW,EAAE,kBAAkB,EAAED,EAAE,CAAC;EACjF;EAEOE,aAAaA,CAACL,IAAS;IAC5B,OAAO,IAAI,CAACL,gBAAgB,CAACW,GAAG,CAAC,WAAW,EAAE,MAAM,EAAEN,IAAI,CAAC;EAC7D;EACOO,mBAAmBA,CAACC,KAAU;IACnC,OAAO,IAAI,CAACb,gBAAgB,CAACS,aAAa,CAAC,WAAW,EAAE,OAAO,EAAEI,KAAK,CAAC;EACzE;EAEOC,UAAUA,CAACC,IAAS;IACzB,OAAO,IAAI,CAACf,gBAAgB,CAACc,UAAU,CAAC,WAAW,EAAE,YAAY,EAAEC,IAAI,CAAC;EAC1E;EAEOC,wBAAwBA,CAACC,MAAW;IACzC,OAAO,IAAI,CAACjB,gBAAgB,CAACS,aAAa,CAAC,WAAW,EAAE,WAAW,EAAEQ,MAAM,CAAC;EAC9E;EAEOC,0BAA0BA,CAACD,MAAW;IAC3C,OAAO,IAAI,CAACjB,gBAAgB,CAACS,aAAa,CAAC,WAAW,EAAE,aAAa,EAAEQ,MAAM,CAAC;EAChF;EAEOE,cAAcA,CAACJ,IAAQ;IAC5B,OAAO,IAAI,CAACf,gBAAgB,CAACoB,UAAU,CAAC,WAAW,EAAE,YAAY,EAAEL,IAAI,CAAC;EAC1E;EAAC,QAAAM,CAAA,G;qBA1CUvB,gBAAgB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB5B,gBAAgB;IAAA6B,OAAA,EAAhB7B,gBAAgB,CAAA8B,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}