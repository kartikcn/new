{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class TermsService {\n  constructor(termsService) {\n    this.termsService = termsService;\n  }\n  getAllTerms() {\n    return this.termsService.getAll('terms', 'all');\n  }\n  getAllTermsPaginated(data) {\n    return this.termsService.search('terms', 'allPaginated', data);\n  }\n  saveTerm(data) {\n    return this.termsService.add('terms', 'save', data);\n  }\n  deleteTerm(data) {\n    return this.termsService.delete('terms', 'delete', data);\n  }\n  checkTermExists(term) {\n    return this.termsService.getSingleById('terms', 'check', term);\n  }\n  static #_ = this.ɵfac = function TermsService_Factory(t) {\n    return new (t || TermsService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TermsService,\n    factory: TermsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TermsService","constructor","termsService","getAllTerms","getAll","getAllTermsPaginated","data","search","saveTerm","add","deleteTerm","delete","checkTermExists","term","getSingleById","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\terms\\services\\terms.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { DataService } from \"src/app/services/data.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class TermsService{\n    constructor(\n        private termsService: DataService<any>,\n    ) { }\n\n    public getAllTerms(){\n        return this.termsService.getAll('terms','all');\n    }\n\n    public getAllTermsPaginated(data:any){\n        return this.termsService.search('terms','allPaginated',data);\n    }\n\n    public saveTerm(data:any){\n        return this.termsService.add('terms','save',data);\n    }\n\n    public deleteTerm(data:any){\n        return this.termsService.delete('terms','delete',data);\n    }\n\n    public checkTermExists(term:string){\n        return this.termsService.getSingleById('terms','check',term);\n    }\n\n\n}"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EACrBC,YACYC,YAA8B;IAA9B,KAAAA,YAAY,GAAZA,YAAY;EACpB;EAEGC,WAAWA,CAAA;IACd,OAAO,IAAI,CAACD,YAAY,CAACE,MAAM,CAAC,OAAO,EAAC,KAAK,CAAC;EAClD;EAEOC,oBAAoBA,CAACC,IAAQ;IAChC,OAAO,IAAI,CAACJ,YAAY,CAACK,MAAM,CAAC,OAAO,EAAC,cAAc,EAACD,IAAI,CAAC;EAChE;EAEOE,QAAQA,CAACF,IAAQ;IACpB,OAAO,IAAI,CAACJ,YAAY,CAACO,GAAG,CAAC,OAAO,EAAC,MAAM,EAACH,IAAI,CAAC;EACrD;EAEOI,UAAUA,CAACJ,IAAQ;IACtB,OAAO,IAAI,CAACJ,YAAY,CAACS,MAAM,CAAC,OAAO,EAAC,QAAQ,EAACL,IAAI,CAAC;EAC1D;EAEOM,eAAeA,CAACC,IAAW;IAC9B,OAAO,IAAI,CAACX,YAAY,CAACY,aAAa,CAAC,OAAO,EAAC,OAAO,EAACD,IAAI,CAAC;EAChE;EAAC,QAAAE,CAAA,G;qBAvBQf,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZpB,YAAY;IAAAqB,OAAA,EAAZrB,YAAY,CAAAsB,IAAA;IAAAC,UAAA,EAHT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}