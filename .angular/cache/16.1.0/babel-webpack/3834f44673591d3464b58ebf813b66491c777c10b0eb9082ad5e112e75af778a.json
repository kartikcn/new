{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nexport let UsersService = /*#__PURE__*/(() => {\n  class UsersService {\n    constructor(userService, userDetailService) {\n      this.userService = userService;\n      this.userDetailService = userDetailService;\n    }\n    getUserList(data) {\n      return this.userService.search('user', 'users', data);\n    }\n    getUserListPaginated(data) {\n      return this.userService.search('user', 'usersPaginated', data);\n    }\n    getUserById(id) {\n      return this.userDetailService.getSingleById('user', 'id', id);\n    }\n    getALLUsers() {\n      return this.userService.getAll(\"user\", \"list\");\n    }\n    getALLUsersPaginated(data) {\n      return this.userService.search(\"user\", \"listPaginated\", data);\n    }\n    getUserRole() {\n      return this.userService.getAll(\"userRole\", \"getList\");\n    }\n    saveUsers(item) {\n      return this.userService.add(\"user\", \"save\", item);\n    }\n    validateUserName(userName) {\n      return this.userDetailService.getSingleById('user', 'check', userName);\n    }\n    updateUserCrendentials(items) {\n      return this.userService.update('auth', 'pwd', items);\n    }\n    resetUserCrendentials(items) {\n      return this.userService.getSingleByItem('auth', 'forgetpwd', items);\n    }\n    getUserProfile(userName) {\n      return this.userService.getSingleById('user', 'profile/get', userName);\n    }\n    uploadProfilePhto(data) {\n      return this.userService.upload('doc', 'upload', data);\n    }\n    getDocumentsById(data) {\n      return this.userService.getSingleByItem(\"doc\", \"getDocumentsByRequest\", data);\n    }\n    deleteDocumentById(id) {\n      return this.userService.getAllById(\"doc\", \"deleteDocById\", id);\n    }\n    uploadDocument(data) {\n      return this.userService.upload('doc', 'uploadDocument', data);\n    }\n    static #_ = this.ɵfac = function UsersService_Factory(t) {\n      return new (t || UsersService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsersService,\n      factory: UsersService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UsersService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}