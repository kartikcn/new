{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sla-request-parameters.service\";\nimport * as i2 from \"../../providers/add-sla-request-steps-provider\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/enum.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"primeng/card\";\nimport * as i10 from \"primeng/confirmdialog\";\nfunction WrStatusCardsComponent_div_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 13);\n    i0.ɵɵlistener(\"click\", function WrStatusCardsComponent_div_1_ng_template_3_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const item_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.addSteps(item_r1.status.enumKey));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrStatusCardsComponent_div_1_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 14)(1, \"td\", 15)(2, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function WrStatusCardsComponent_div_1_ng_template_7_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const step_r10 = restoredCtx.$implicit;\n      const item_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onEdit(step_r10, item_r1.status.enumKey));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\", 15)(4, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function WrStatusCardsComponent_div_1_ng_template_7_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const step_r10 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDelete(step_r10));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const step_r10 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"pSelectableRow\", step_r10);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r4.getStepTypeEnumById(step_r10.stepType));\n  }\n}\nfunction WrStatusCardsComponent_div_1_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nfunction WrStatusCardsComponent_div_1_ng_template_9_Template(rf, ctx) {}\nconst _c0 = function (a0) {\n  return {\n    \"readonly-panel\": a0\n  };\n};\nfunction WrStatusCardsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"p-card\", 6);\n    i0.ɵɵtemplate(3, WrStatusCardsComponent_div_1_ng_template_3_Template, 1, 0, \"ng-template\", 7);\n    i0.ɵɵelementStart(4, \"p\")(5, \"p-table\", 8, 9);\n    i0.ɵɵtemplate(7, WrStatusCardsComponent_div_1_ng_template_7_Template, 7, 2, \"ng-template\", 10);\n    i0.ɵɵtemplate(8, WrStatusCardsComponent_div_1_ng_template_8_Template, 3, 1, \"ng-template\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, WrStatusCardsComponent_div_1_ng_template_9_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"header\", item_r1.status.enumValue);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, item_r1.hide));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", item_r1.steps);\n  }\n}\nexport class WrStatusCardsComponent {\n  constructor(slaReqSrv, addSlaRequestDialogueProvider, zone, messageService, confirmationService, enumsrv) {\n    this.slaReqSrv = slaReqSrv;\n    this.addSlaRequestDialogueProvider = addSlaRequestDialogueProvider;\n    this.zone = zone;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.enumsrv = enumsrv;\n    this.wrStatus = [];\n    this.slaStepsData = [];\n    this.stepsWithStatusData = [];\n    this.slaResponseParametersId = 0;\n    this.wrStepsData = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumAutoIssue = [];\n    this.enumAutoApproval = [];\n    this.idForAutoIssueYes = 0;\n    this.idForAutoApprovalYes = 0;\n    this.enumWr = [];\n    this.enumWrSteps = [];\n    this.enumStepType = [];\n  }\n  ngOnInit() {\n    this.stepsWithStatusData = [];\n    this.loadEnums();\n  }\n  loadWrStatus() {\n    this.wrStatus = [];\n    this.stepsWithStatusData = [];\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n      this.wrStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n      // this.enumWrSteps = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr_steps'.toLocaleUpperCase());\n      this.enumStepType = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr_steps'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'step_type'.toLocaleUpperCase());\n      this.getCombinedData();\n    });\n  }\n  loadStepsBySlaResponseParamId(data) {\n    this.slaStepsData = [];\n    if (data) {\n      this.slaResponseParametersId = data.slaResponseParametersId;\n      this.slaReqSrv.getSlaStepsList(data.slaResponseParametersId).subscribe(res => {\n        this.slaStepsData = res;\n        this.loadWrStatus();\n      });\n    } else {\n      this.slaResponseParametersId = 0;\n      this.wrStatus = [];\n      this.slaStepsData = [];\n      this.getCombinedData();\n    }\n  }\n  getCombinedData() {\n    this.zone.run(() => {\n      this.stepsWithStatusData = [];\n      if (this.wrStatus.length > 0) {\n        const combinedArray = this.wrStatus.map(wrStatus => {\n          const stepsForStatus = this.slaStepsData.filter(step => step.wrStatus === wrStatus.enumKey);\n          const isHidden = this.shouldMakeReadOnly(wrStatus);\n          return {\n            status: wrStatus,\n            steps: stepsForStatus,\n            hide: isHidden\n          };\n        });\n        this.stepsWithStatusData = combinedArray;\n      }\n    });\n  }\n  getStepNameByStepId(stepId) {\n    return this.wrStepsData.find(t => t.stepId === stepId)?.step;\n  }\n  addSteps(status) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = false;\n    dialogConfig.width = '700px';\n    dialogConfig.data = {\n      wrStatus: status,\n      slaResponseParametersId: this.slaResponseParametersId,\n      isEdit: false,\n      newRecord: true\n    };\n    this.addSlaRequestDialogueProvider.openDialog(dialogConfig);\n    this.addSlaRequestDialogueProvider.onDialogueClosed.subscribe(result => {\n      this.messageService.clear();\n      if (result && result.slaRequestStepsId && result.slaRequestStepsId > 0) {\n        this.messageService.add({\n          key: 'saveStep',\n          severity: 'success',\n          summary: 'Record saved successfully',\n          detail: 'Record saved successfully'\n        });\n        this.loadStepsBySlaResponseParamId(result);\n      } else if (result && result.text && result.text.length > 0) {\n        this.messageService.add({\n          key: 'saveStep',\n          severity: 'warn',\n          summary: 'Warning',\n          detail: 'SLA Steps already exists'\n        });\n      }\n    });\n  }\n  onEdit(step, status) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = false;\n    dialogConfig.width = '700px';\n    dialogConfig.data = {\n      step: step,\n      wrStatus: status,\n      slaResponseParametersId: this.slaResponseParametersId,\n      isEdit: true,\n      newRecord: false\n    };\n    this.addSlaRequestDialogueProvider.openDialog(dialogConfig);\n    this.addSlaRequestDialogueProvider.onDialogueClosed.subscribe(result => {\n      this.messageService.clear();\n      if (result && result.slaRequestStepsId && result.slaRequestStepsId > 0) {\n        this.messageService.add({\n          key: 'saveStep',\n          severity: 'success',\n          summary: 'Record saved successfully',\n          detail: 'Record saved successfully'\n        });\n        this.loadStepsBySlaResponseParamId(result);\n      } else if (result.text.length > 0) {\n        this.messageService.add({\n          key: 'saveStep',\n          severity: 'warn',\n          summary: 'Warning',\n          detail: 'SLA Steps already exists'\n        });\n      }\n    });\n  }\n  onDelete(slaRequestStep) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete ?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.delete(slaRequestStep);\n      },\n      key: \"mygrid\"\n    });\n  }\n  delete(slaRequestStep) {\n    this.slaReqSrv.deleteSlaRequestStep(slaRequestStep.slaRequestStepsId).subscribe(res => {\n      if (res.text === \"Record Deleted\") {\n        //this.messageService.add({ key: 'saveStep', severity: 'success', summary: 'Record deleted successfully', detail: 'Record deleted successfully' });\n        this.loadStepsBySlaResponseParamId(slaRequestStep);\n      }\n    });\n  }\n  shouldMakeReadOnly(wrStatus) {\n    if (this.slaResponseParameters.autoIssue === this.idForAutoIssueYes) {\n      if (wrStatus.enumValue === \"Requested\" || wrStatus.enumValue === \"Approved\" || wrStatus.enumValue === \"Rejected\") {\n        this.deleteSteps(wrStatus.wrStatusId);\n        return true;\n      } else {\n        return false;\n      }\n    } else if (this.slaResponseParameters.autoApproval === this.idForAutoApprovalYes && this.slaResponseParameters.autoIssue != this.idForAutoIssueYes) {\n      if (wrStatus.enumValue === \"Requested\" || wrStatus.enumValue === \"Rejected\") {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n      this.wrStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n      // this.enumClonedList = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase());\n      this.enumAutoIssue = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'auto_issue'.toLocaleUpperCase());\n      this.enumAutoIssue.forEach(t => {\n        if (t.enumValue === \"Yes\") {\n          this.idForAutoIssueYes = t.enumKey;\n        }\n      });\n      this.enumAutoApproval = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'auto_approval'.toLocaleUpperCase());\n      this.enumAutoApproval.forEach(t => {\n        if (t.enumValue === \"Yes\") {\n          this.idForAutoApprovalYes = t.enumKey;\n        }\n      });\n      //this.loadWrSteps();\n    }, error => {});\n  }\n  deleteSteps(wrStatusId) {\n    this.slaStepsData.forEach(t => {\n      if (t.wrStatus === wrStatusId) {\n        this.delete(t);\n      }\n    });\n  }\n  getStepTypeEnumById(enumKey) {\n    return this.enumStepType.find(t => t.enumKey === enumKey)?.enumValue;\n  }\n  static #_ = this.ɵfac = function WrStatusCardsComponent_Factory(t) {\n    return new (t || WrStatusCardsComponent)(i0.ɵɵdirectiveInject(i1.SLARequestServices), i0.ɵɵdirectiveInject(i2.AddSlaRequestDialogueProvider), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.EnumService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WrStatusCardsComponent,\n    selectors: [[\"app-wr-status-cards\"]],\n    inputs: {\n      refresh: \"refresh\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 4,\n    vars: 1,\n    consts: [[\"id\", \"wrStatusCardComponent\", 1, \"p-d-flex\", \"p-flex-column\"], [\"class\", \"ng-value\", \"style\", \"margin-bottom:1%;\", 4, \"ngFor\", \"ngForOf\"], [\"key\", \"saveStep\", \"position\", \"top-right\"], [\"key\", \"mygrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"ng-value\", 2, \"margin-bottom\", \"1%\"], [1, \"p-mb-2\"], [\"styleClass\", \"p-card-shadow\", 3, \"header\", \"ngClass\"], [\"pTemplate\", \"header\"], [3, \"value\"], [\"dt1\", \"\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"pTemplate\", \"footer\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add\", \"matTooltipPosition\", \"above\", 1, \"pull-right\", \"m-3\", 3, \"click\"], [3, \"pSelectableRow\"], [2, \"width\", \"4rem\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"]],\n    template: function WrStatusCardsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, WrStatusCardsComponent_div_1_Template, 10, 5, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"p-toast\", 2)(3, \"p-confirmDialog\", 3);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.stepsWithStatusData);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgForOf, i3.PrimeTemplate, i6.Table, i6.SelectableRow, i7.ButtonDirective, i7.Button, i8.Toast, i9.Card, i10.ConfirmDialog],\n    styles: [\"[_nghost-%COMP%]     .p-card .p-card-title {\\n  font-size: 1rem !important;\\n  font-weight: 700 !important;\\n}\\n\\n.p-card[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%] {\\n  margin-top: 8px;\\n  margin-right: 0;\\n  padding-left: 12px;\\n  padding-right: 12px;\\n}\\n\\n.readonly-panel[_ngcontent-%COMP%] {\\n  opacity: 0.5; \\n\\n  pointer-events: none; \\n\\n}\\n\\n[_nghost-%COMP%]     #add-btn .p-button {\\n  background-color: white !important;\\n  border-radius: 50%;\\n  border: 2px solid #2196F3;\\n}\\n\\n[_nghost-%COMP%]     .pi.pi-plus {\\n  color: #2196F3;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svc2xhLXJlcXVlc3QtcGFyYW1ldGVycy93aWRnZXRzL3dyLXN0YXR1cy1jYXJkcy93ci1zdGF0dXMtY2FyZHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwwQkFBQTtFQUNBLDJCQUFBO0FBQ0o7O0FBRUU7RUFDRSxlQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7QUFDSjs7QUFFRTtFQUNFLFlBQUEsRUFBQSwrREFBQTtFQUNBLG9CQUFBLEVBQUEsNkNBQUE7QUFDSjs7QUFFRTtFQUNFLGtDQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtBQUNKOztBQUVFO0VBQ0UsY0FBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLWNhcmQgLnAtY2FyZC10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxcmVtICFpbXBvcnRhbnQ7XG4gICAgZm9udC13ZWlnaHQ6IDcwMCAhaW1wb3J0YW50O1xuICB9XG4gIFxuICAucC1jYXJkIC5wLWJ1dHRvbiB7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEycHg7XG4gICAgcGFkZGluZy1yaWdodDogMTJweDtcbiAgfVxuICBcbiAgLnJlYWRvbmx5LXBhbmVsIHtcbiAgICBvcGFjaXR5OiAwLjU7IC8qIFJlZHVjZSBvcGFjaXR5IHRvIHZpc3VhbGx5IGluZGljYXRlIHRoYXQgcGFuZWwgaXMgZGlzYWJsZWQgKi9cbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgLyogUHJldmVudCB1c2VyIGludGVyYWN0aW9ucyB3aXRoIHRoZSBwYW5lbCAqL1xuICB9XG5cbiAgOmhvc3QgOjpuZy1kZWVwICNhZGQtYnRuIC5wLWJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYm9yZGVyOiAycHggc29saWQgIzIxOTZGMztcbiAgfVxuXG4gIDpob3N0IDo6bmctZGVlcCAucGkucGktcGx1cyB7XG4gICAgY29sb3I6ICMyMTk2RjM7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["MatDialogConfig","MessageService","i0","ɵɵelementStart","ɵɵlistener","WrStatusCardsComponent_div_1_ng_template_3_Template_p_button_click_0_listener","ɵɵrestoreView","_r9","item_r1","ɵɵnextContext","$implicit","ctx_r7","ɵɵresetView","addSteps","status","enumKey","ɵɵelementEnd","WrStatusCardsComponent_div_1_ng_template_7_Template_button_click_2_listener","restoredCtx","_r12","step_r10","ctx_r11","onEdit","WrStatusCardsComponent_div_1_ng_template_7_Template_button_click_4_listener","ctx_r14","onDelete","ɵɵtext","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ctx_r4","getStepTypeEnumById","stepType","ɵɵattribute","ɵɵtemplate","WrStatusCardsComponent_div_1_ng_template_3_Template","WrStatusCardsComponent_div_1_ng_template_7_Template","WrStatusCardsComponent_div_1_ng_template_8_Template","WrStatusCardsComponent_div_1_ng_template_9_Template","ɵɵpropertyInterpolate","enumValue","ɵɵpureFunction1","_c0","hide","steps","WrStatusCardsComponent","constructor","slaReqSrv","addSlaRequestDialogueProvider","zone","messageService","confirmationService","enumsrv","wrStatus","slaStepsData","stepsWithStatusData","slaResponseParametersId","wrStepsData","enumList","enumClonedList","enumAutoIssue","enumAutoApproval","idForAutoIssueYes","idForAutoApprovalYes","enumWr","enumWrSteps","enumStepType","ngOnInit","loadEnums","loadWrStatus","getEnums","subscribe","res","map","x","Object","assign","filter","t","tableName","toLocaleUpperCase","fieldName","getCombinedData","loadStepsBySlaResponseParamId","data","getSlaStepsList","run","length","combinedArray","stepsForStatus","step","isHidden","shouldMakeReadOnly","getStepNameByStepId","stepId","find","dialogConfig","disableClose","autoFocus","width","isEdit","newRecord","openDialog","onDialogueClosed","result","clear","slaRequestStepsId","add","key","severity","summary","detail","text","slaRequestStep","confirm","message","header","icon","accept","delete","deleteSlaRequestStep","slaResponseParameters","autoIssue","deleteSteps","wrStatusId","autoApproval","forEach","error","_","ɵɵdirectiveInject","i1","SLARequestServices","i2","AddSlaRequestDialogueProvider","NgZone","i3","ConfirmationService","i4","EnumService","_2","selectors","inputs","refresh","features","ɵɵProvidersFeature","decls","vars","consts","template","WrStatusCardsComponent_Template","rf","ctx","WrStatusCardsComponent_div_1_Template","ɵɵelement"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/sla-request-parameters/widgets/wr-status-cards/wr-status-cards.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/sla-request-parameters/widgets/wr-status-cards/wr-status-cards.component.html"],"sourcesContent":["import { Component, Input, NgZone, OnInit } from '@angular/core';\nimport { SLARequestServices } from '../../services/sla-request-parameters.service';\nimport { AddSlaRequestDialogueProvider } from '../../providers/add-sla-request-steps-provider';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { EnumList } from 'src/app/model/enum-list.model';\n\n@Component({\n  selector: 'app-wr-status-cards',\n  templateUrl: './wr-status-cards.component.html',\n  styleUrls: ['./wr-status-cards.component.scss'],\n  providers: [MessageService]\n})\nexport class WrStatusCardsComponent implements OnInit {\n  wrStatus: EnumList[] = [];\n  slaStepsData: any[] = [];\n  stepsWithStatusData: any[] = [];\n  slaResponseParametersId: number = 0;\n  wrStepsData: any[] = [];\n  slaResponseParameters!: any;\n  enumList: EnumList[] = [];\n  enumClonedList: EnumList[] = [];\n  enumAutoIssue: EnumList[] = [];\n  enumAutoApproval: EnumList[] = [];\n  idForAutoIssueYes: any = 0;\n  idForAutoApprovalYes: any = 0;\n  enumWr:EnumList[] =[];\n  enumWrSteps: EnumList[] = [];\n  enumStepType:EnumList[] = [];\n  @Input() refresh: any;\n  constructor(\n    private slaReqSrv: SLARequestServices,\n    private addSlaRequestDialogueProvider: AddSlaRequestDialogueProvider,\n    private zone: NgZone,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private enumsrv: EnumService,\n  ) { }\n\n  ngOnInit(): void {\n    this.stepsWithStatusData = [];\n    this.loadEnums();\n  }\n\n  loadWrStatus() {\n    this.wrStatus = [];\n    this.stepsWithStatusData = [];\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: EnumList[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.wrStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n        // this.enumWrSteps = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr_steps'.toLocaleUpperCase());\n        this.enumStepType = this.enumClonedList.filter(t =>t.tableName.toLocaleUpperCase() === 'wr_steps'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'step_type'.toLocaleUpperCase());\n        this.getCombinedData();\n      }\n    )\n  }\n\n  loadStepsBySlaResponseParamId(data: any) {\n    this.slaStepsData = [];\n    if (data) {\n      this.slaResponseParametersId = data.slaResponseParametersId;\n      this.slaReqSrv.getSlaStepsList(data.slaResponseParametersId).subscribe((res: any) => {\n        this.slaStepsData = res;\n        this.loadWrStatus();\n      })\n    } else {\n      this.slaResponseParametersId = 0;\n      this.wrStatus = [];\n      this.slaStepsData = [];\n      this.getCombinedData();\n    }\n  }\n\n  getCombinedData() {\n    this.zone.run(() => {\n      this.stepsWithStatusData = [];\n      if (this.wrStatus.length > 0) {\n        const combinedArray = this.wrStatus.map((wrStatus) => {\n          const stepsForStatus = this.slaStepsData.filter((step) => step.wrStatus === wrStatus.enumKey);\n          const isHidden = this.shouldMakeReadOnly(wrStatus)\n          return { status: wrStatus, steps: stepsForStatus, hide: isHidden };\n        });\n        this.stepsWithStatusData = combinedArray;\n      }\n    });\n  }\n\n  getStepNameByStepId(stepId: any) {\n    return this.wrStepsData.find((t: any) => t.stepId === stepId)?.step;\n  }\n\n  addSteps(status: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = false;\n    dialogConfig.width = '700px';\n    dialogConfig.data = {\n      wrStatus: status,\n      slaResponseParametersId: this.slaResponseParametersId,\n      isEdit: false,\n      newRecord: true\n    };\n    this.addSlaRequestDialogueProvider.openDialog(dialogConfig);\n    this.addSlaRequestDialogueProvider.onDialogueClosed.subscribe((result: any) => {\n      this.messageService.clear();\n      if (result && result.slaRequestStepsId && result.slaRequestStepsId > 0) {\n        this.messageService.add({ key: 'saveStep', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n        this.loadStepsBySlaResponseParamId(result);\n      }else if(result && result.text && result.text.length > 0){\n        this.messageService.add({ key: 'saveStep', severity: 'warn', summary: 'Warning', detail: 'SLA Steps already exists' });\n      }\n    });\n  }\n\n  onEdit(step: any,status:any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = false;\n    dialogConfig.width = '700px';\n    dialogConfig.data = {\n      step: step,\n      wrStatus: status,\n      slaResponseParametersId: this.slaResponseParametersId,\n      isEdit: true,\n      newRecord: false\n    };\n    this.addSlaRequestDialogueProvider.openDialog(dialogConfig);\n    this.addSlaRequestDialogueProvider.onDialogueClosed.subscribe((result: any) => {\n      this.messageService.clear();\n      if (result && result.slaRequestStepsId && result.slaRequestStepsId > 0) {\n        this.messageService.add({ key: 'saveStep', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n        this.loadStepsBySlaResponseParamId(result);\n      }else if(result.text.length > 0){\n        this.messageService.add({ key: 'saveStep', severity: 'warn', summary: 'Warning', detail: 'SLA Steps already exists' });\n      }\n    });\n  }\n\n\n  onDelete(slaRequestStep: any) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete ?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.delete(slaRequestStep);\n      },\n      key: \"mygrid\"\n    });\n  }\n\n  delete(slaRequestStep: any) {\n    this.slaReqSrv.deleteSlaRequestStep(slaRequestStep.slaRequestStepsId).subscribe((res: any) => {\n      if (res.text === \"Record Deleted\") {\n        //this.messageService.add({ key: 'saveStep', severity: 'success', summary: 'Record deleted successfully', detail: 'Record deleted successfully' });\n        this.loadStepsBySlaResponseParamId(slaRequestStep);\n      }\n    });\n  }\n\n  shouldMakeReadOnly(wrStatus: any) {\n\n    if (this.slaResponseParameters.autoIssue === this.idForAutoIssueYes) {\n      if (wrStatus.enumValue === \"Requested\" || wrStatus.enumValue === \"Approved\" || wrStatus.enumValue === \"Rejected\") {\n        this.deleteSteps(wrStatus.wrStatusId)\n        return true;\n      } else {\n        return false;\n      }\n    } else if (this.slaResponseParameters.autoApproval === this.idForAutoApprovalYes && this.slaResponseParameters.autoIssue != this.idForAutoIssueYes) {\n      if (wrStatus.enumValue === \"Requested\" || wrStatus.enumValue === \"Rejected\") {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: EnumList[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.wrStatus = this.enumClonedList.filter(t =>t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n        // this.enumClonedList = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase());\n        this.enumAutoIssue = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'auto_issue'.toLocaleUpperCase());\n        this.enumAutoIssue.forEach(t => {\n          if (t.enumValue === \"Yes\") {\n            this.idForAutoIssueYes = t.enumKey;\n          }\n        })\n        this.enumAutoApproval = this.enumClonedList.filter(t =>t.tableName.toLocaleUpperCase() === 'sla_response_parameters'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'auto_approval'.toLocaleUpperCase());\n        this.enumAutoApproval.forEach(t => {\n          if (t.enumValue === \"Yes\") {\n            this.idForAutoApprovalYes = t.enumKey;\n          }\n        })\n        //this.loadWrSteps();\n      },\n      error => {\n      }\n    );\n  }\n  deleteSteps(wrStatusId:any) {\n    this.slaStepsData.forEach(t => {\n        if(t.wrStatus === wrStatusId) {\n          this.delete(t)\n        }\n    })\n  }\n\n   getStepTypeEnumById(enumKey: any) {\n    return this.enumStepType.find((t: any) => t.enumKey === enumKey)?.enumValue;\n  }\n}\n","<div class=\"p-d-flex p-flex-column\" id=\"wrStatusCardComponent\">\n    <div class=\"ng-value\" *ngFor=\"let item of stepsWithStatusData\" style=\"margin-bottom:1%;\">\n        <div class=\"p-mb-2\">\n            <p-card  header={{item.status.enumValue}} [ngClass]=\"{ 'readonly-panel': item.hide  }\" styleClass=\"p-card-shadow\">\n                <ng-template pTemplate=\"header\">\n                    <p-button id=\"add-btn\" (click)=\"addSteps(item.status.enumKey)\" class=\"pull-right m-3\"\n                        icon=\"pi pi-plus\"   matTooltip=\"Add\" matTooltipPosition=\"above\">\n                    </p-button>\n                </ng-template>\n                <p>\n                    <p-table #dt1 [value]=\"item.steps\">\n                        <ng-template pTemplate=\"body\" let-step>\n                            <tr [pSelectableRow]=\"step\">\n                                <td style=\"width:4rem\">\n                                    <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-text\"\n                                        (click)=\"onEdit(step,item.status.enumKey)\">\n                                    </button>\n                                </td>\n                                <td style=\"width:4rem\">\n                                    <button pButton pRipple icon=\"pi pi-times\" type=\"button\" (click)=\"onDelete(step)\"\n                                        class=\"p-button-text pull-right\" style=\"font-size: 5rem; color: red;\">\n                                    </button>\n                                </td>\n                                <td>{{getStepTypeEnumById(step.stepType)}}</td>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"emptymessage\" let-columns>\n                            <tr>\n                                <td [attr.colspan]=\"3\">\n                                    No records found\n                                </td>\n                            </tr>\n                        </ng-template>\n                    </p-table>\n                </p>\n                <ng-template pTemplate=\"footer\">\n                </ng-template>\n            </p-card>\n        </div>\n    </div>\n</div>\n<p-toast key=\"saveStep\" position=\"top-right\"></p-toast>\n<p-confirmDialog key=\"mygrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>"],"mappings":"AAGA,SAASA,eAAe,QAAQ,0BAA0B;AAC1D,SAA8BC,cAAc,QAAQ,aAAa;;;;;;;;;;;;;;;ICC7CC,EAAA,CAAAC,cAAA,mBACoE;IAD7CD,EAAA,CAAAE,UAAA,mBAAAC,8EAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAN,EAAA,CAAAO,aAAA,GAAAC,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAU,WAAA,CAAAD,MAAA,CAAAE,QAAA,CAAAL,OAAA,CAAAM,MAAA,CAAAC,OAAA,CAA6B;IAAA,EAAC;IAE9Db,EAAA,CAAAc,YAAA,EAAW;;;;;;IAKHd,EAAA,CAAAC,cAAA,aAA4B;IAGhBD,EAAA,CAAAE,UAAA,mBAAAa,4EAAA;MAAA,MAAAC,WAAA,GAAAhB,EAAA,CAAAI,aAAA,CAAAa,IAAA;MAAA,MAAAC,QAAA,GAAAF,WAAA,CAAAR,SAAA;MAAA,MAAAF,OAAA,GAAAN,EAAA,CAAAO,aAAA,GAAAC,SAAA;MAAA,MAAAW,OAAA,GAAAnB,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAU,WAAA,CAAAS,OAAA,CAAAC,MAAA,CAAAF,QAAA,EAAAZ,OAAA,CAAAM,MAAA,CAAAC,OAAA,CAAgC;IAAA,EAAC;IAC9Cb,EAAA,CAAAc,YAAA,EAAS;IAEbd,EAAA,CAAAC,cAAA,aAAuB;IACsCD,EAAA,CAAAE,UAAA,mBAAAmB,4EAAA;MAAA,MAAAL,WAAA,GAAAhB,EAAA,CAAAI,aAAA,CAAAa,IAAA;MAAA,MAAAC,QAAA,GAAAF,WAAA,CAAAR,SAAA;MAAA,MAAAc,OAAA,GAAAtB,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAU,WAAA,CAAAY,OAAA,CAAAC,QAAA,CAAAL,QAAA,CAAc;IAAA,EAAC;IAEjFlB,EAAA,CAAAc,YAAA,EAAS;IAEbd,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAwB,MAAA,GAAsC;IAAAxB,EAAA,CAAAc,YAAA,EAAK;;;;;IAX/Cd,EAAA,CAAAyB,UAAA,mBAAAP,QAAA,CAAuB;IAWnBlB,EAAA,CAAA0B,SAAA,GAAsC;IAAtC1B,EAAA,CAAA2B,iBAAA,CAAAC,MAAA,CAAAC,mBAAA,CAAAX,QAAA,CAAAY,QAAA,EAAsC;;;;;IAI9C9B,EAAA,CAAAC,cAAA,SAAI;IAEID,EAAA,CAAAwB,MAAA,yBACJ;IAAAxB,EAAA,CAAAc,YAAA,EAAK;;;IAFDd,EAAA,CAAA0B,SAAA,GAAkB;IAAlB1B,EAAA,CAAA+B,WAAA,cAAkB;;;;;;;;;;;IA3BlD/B,EAAA,CAAAC,cAAA,aAAyF;IAG7ED,EAAA,CAAAgC,UAAA,IAAAC,mDAAA,yBAIc;IACdjC,EAAA,CAAAC,cAAA,QAAG;IAEKD,EAAA,CAAAgC,UAAA,IAAAE,mDAAA,0BAcc;IACdlC,EAAA,CAAAgC,UAAA,IAAAG,mDAAA,0BAMc;IAClBnC,EAAA,CAAAc,YAAA,EAAU;IAEdd,EAAA,CAAAgC,UAAA,IAAAI,mDAAA,0BACc;IAClBpC,EAAA,CAAAc,YAAA,EAAS;;;;IAlCAd,EAAA,CAAA0B,SAAA,GAAgC;IAAhC1B,EAAA,CAAAqC,qBAAA,WAAA/B,OAAA,CAAAM,MAAA,CAAA0B,SAAA,CAAgC;IAACtC,EAAA,CAAAyB,UAAA,YAAAzB,EAAA,CAAAuC,eAAA,IAAAC,GAAA,EAAAlC,OAAA,CAAAmC,IAAA,EAA4C;IAOhEzC,EAAA,CAAA0B,SAAA,GAAoB;IAApB1B,EAAA,CAAAyB,UAAA,UAAAnB,OAAA,CAAAoC,KAAA,CAAoB;;;ADItD,OAAM,MAAOC,sBAAsB;EAiBjCC,YACUC,SAA6B,EAC7BC,6BAA4D,EAC5DC,IAAY,EACZC,cAA8B,EAC9BC,mBAAwC,EACxCC,OAAoB;IALpB,KAAAL,SAAS,GAATA,SAAS;IACT,KAAAC,6BAA6B,GAA7BA,6BAA6B;IAC7B,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,OAAO,GAAPA,OAAO;IAtBjB,KAAAC,QAAQ,GAAe,EAAE;IACzB,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,mBAAmB,GAAU,EAAE;IAC/B,KAAAC,uBAAuB,GAAW,CAAC;IACnC,KAAAC,WAAW,GAAU,EAAE;IAEvB,KAAAC,QAAQ,GAAe,EAAE;IACzB,KAAAC,cAAc,GAAe,EAAE;IAC/B,KAAAC,aAAa,GAAe,EAAE;IAC9B,KAAAC,gBAAgB,GAAe,EAAE;IACjC,KAAAC,iBAAiB,GAAQ,CAAC;IAC1B,KAAAC,oBAAoB,GAAQ,CAAC;IAC7B,KAAAC,MAAM,GAAa,EAAE;IACrB,KAAAC,WAAW,GAAe,EAAE;IAC5B,KAAAC,YAAY,GAAc,EAAE;EASxB;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACZ,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACa,SAAS,EAAE;EAClB;EAEAC,YAAYA,CAAA;IACV,IAAI,CAAChB,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACE,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACG,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACN,OAAO,CAACkB,QAAQ,EAAE,CAACC,SAAS,CAC9BC,GAAe,IAAI;MAClB,IAAI,CAACd,QAAQ,GAAGc,GAAG;MACnB,IAAI,CAACb,cAAc,GAAG,IAAI,CAACD,QAAQ,CAACe,GAAG,CAACC,CAAC,IAAIC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEF,CAAC,CAAC,CAAC;MAClE;MACA,IAAI,CAACrB,QAAQ,GAAG,IAAI,CAACM,cAAc,CAACkB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,IAAI,CAACA,iBAAiB,EAAE,IAAIF,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,QAAQ,CAACA,iBAAiB,EAAE,CAAC;MACjL;MACA,IAAI,CAACd,YAAY,GAAG,IAAI,CAACP,cAAc,CAACkB,MAAM,CAACC,CAAC,IAAGA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,UAAU,CAACA,iBAAiB,EAAE,IAAIF,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,WAAW,CAACA,iBAAiB,EAAE,CAAC;MAC7L,IAAI,CAACE,eAAe,EAAE;IACxB,CAAC,CACF;EACH;EAEAC,6BAA6BA,CAACC,IAAS;IACrC,IAAI,CAAC9B,YAAY,GAAG,EAAE;IACtB,IAAI8B,IAAI,EAAE;MACR,IAAI,CAAC5B,uBAAuB,GAAG4B,IAAI,CAAC5B,uBAAuB;MAC3D,IAAI,CAACT,SAAS,CAACsC,eAAe,CAACD,IAAI,CAAC5B,uBAAuB,CAAC,CAACe,SAAS,CAAEC,GAAQ,IAAI;QAClF,IAAI,CAAClB,YAAY,GAAGkB,GAAG;QACvB,IAAI,CAACH,YAAY,EAAE;MACrB,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACb,uBAAuB,GAAG,CAAC;MAChC,IAAI,CAACH,QAAQ,GAAG,EAAE;MAClB,IAAI,CAACC,YAAY,GAAG,EAAE;MACtB,IAAI,CAAC4B,eAAe,EAAE;;EAE1B;EAEAA,eAAeA,CAAA;IACb,IAAI,CAACjC,IAAI,CAACqC,GAAG,CAAC,MAAK;MACjB,IAAI,CAAC/B,mBAAmB,GAAG,EAAE;MAC7B,IAAI,IAAI,CAACF,QAAQ,CAACkC,MAAM,GAAG,CAAC,EAAE;QAC5B,MAAMC,aAAa,GAAG,IAAI,CAACnC,QAAQ,CAACoB,GAAG,CAAEpB,QAAQ,IAAI;UACnD,MAAMoC,cAAc,GAAG,IAAI,CAACnC,YAAY,CAACuB,MAAM,CAAEa,IAAI,IAAKA,IAAI,CAACrC,QAAQ,KAAKA,QAAQ,CAACtC,OAAO,CAAC;UAC7F,MAAM4E,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACvC,QAAQ,CAAC;UAClD,OAAO;YAAEvC,MAAM,EAAEuC,QAAQ;YAAET,KAAK,EAAE6C,cAAc;YAAE9C,IAAI,EAAEgD;UAAQ,CAAE;QACpE,CAAC,CAAC;QACF,IAAI,CAACpC,mBAAmB,GAAGiC,aAAa;;IAE5C,CAAC,CAAC;EACJ;EAEAK,mBAAmBA,CAACC,MAAW;IAC7B,OAAO,IAAI,CAACrC,WAAW,CAACsC,IAAI,CAAEjB,CAAM,IAAKA,CAAC,CAACgB,MAAM,KAAKA,MAAM,CAAC,EAAEJ,IAAI;EACrE;EAEA7E,QAAQA,CAACC,MAAW;IAClB,MAAMkF,YAAY,GAAG,IAAIhG,eAAe,EAAE;IAC1CgG,YAAY,CAACC,YAAY,GAAG,IAAI;IAChCD,YAAY,CAACE,SAAS,GAAG,KAAK;IAC9BF,YAAY,CAACG,KAAK,GAAG,OAAO;IAC5BH,YAAY,CAACZ,IAAI,GAAG;MAClB/B,QAAQ,EAAEvC,MAAM;MAChB0C,uBAAuB,EAAE,IAAI,CAACA,uBAAuB;MACrD4C,MAAM,EAAE,KAAK;MACbC,SAAS,EAAE;KACZ;IACD,IAAI,CAACrD,6BAA6B,CAACsD,UAAU,CAACN,YAAY,CAAC;IAC3D,IAAI,CAAChD,6BAA6B,CAACuD,gBAAgB,CAAChC,SAAS,CAAEiC,MAAW,IAAI;MAC5E,IAAI,CAACtD,cAAc,CAACuD,KAAK,EAAE;MAC3B,IAAID,MAAM,IAAIA,MAAM,CAACE,iBAAiB,IAAIF,MAAM,CAACE,iBAAiB,GAAG,CAAC,EAAE;QACtE,IAAI,CAACxD,cAAc,CAACyD,GAAG,CAAC;UAAEC,GAAG,EAAE,UAAU;UAAEC,QAAQ,EAAE,SAAS;UAAEC,OAAO,EAAE,2BAA2B;UAAEC,MAAM,EAAE;QAA2B,CAAE,CAAC;QAC5I,IAAI,CAAC5B,6BAA6B,CAACqB,MAAM,CAAC;OAC3C,MAAK,IAAGA,MAAM,IAAIA,MAAM,CAACQ,IAAI,IAAIR,MAAM,CAACQ,IAAI,CAACzB,MAAM,GAAG,CAAC,EAAC;QACvD,IAAI,CAACrC,cAAc,CAACyD,GAAG,CAAC;UAAEC,GAAG,EAAE,UAAU;UAAEC,QAAQ,EAAE,MAAM;UAAEC,OAAO,EAAE,SAAS;UAAEC,MAAM,EAAE;QAA0B,CAAE,CAAC;;IAE1H,CAAC,CAAC;EACJ;EAEAzF,MAAMA,CAACoE,IAAS,EAAC5E,MAAU;IACzB,MAAMkF,YAAY,GAAG,IAAIhG,eAAe,EAAE;IAC1CgG,YAAY,CAACC,YAAY,GAAG,IAAI;IAChCD,YAAY,CAACE,SAAS,GAAG,KAAK;IAC9BF,YAAY,CAACG,KAAK,GAAG,OAAO;IAC5BH,YAAY,CAACZ,IAAI,GAAG;MAClBM,IAAI,EAAEA,IAAI;MACVrC,QAAQ,EAAEvC,MAAM;MAChB0C,uBAAuB,EAAE,IAAI,CAACA,uBAAuB;MACrD4C,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;KACZ;IACD,IAAI,CAACrD,6BAA6B,CAACsD,UAAU,CAACN,YAAY,CAAC;IAC3D,IAAI,CAAChD,6BAA6B,CAACuD,gBAAgB,CAAChC,SAAS,CAAEiC,MAAW,IAAI;MAC5E,IAAI,CAACtD,cAAc,CAACuD,KAAK,EAAE;MAC3B,IAAID,MAAM,IAAIA,MAAM,CAACE,iBAAiB,IAAIF,MAAM,CAACE,iBAAiB,GAAG,CAAC,EAAE;QACtE,IAAI,CAACxD,cAAc,CAACyD,GAAG,CAAC;UAAEC,GAAG,EAAE,UAAU;UAAEC,QAAQ,EAAE,SAAS;UAAEC,OAAO,EAAE,2BAA2B;UAAEC,MAAM,EAAE;QAA2B,CAAE,CAAC;QAC5I,IAAI,CAAC5B,6BAA6B,CAACqB,MAAM,CAAC;OAC3C,MAAK,IAAGA,MAAM,CAACQ,IAAI,CAACzB,MAAM,GAAG,CAAC,EAAC;QAC9B,IAAI,CAACrC,cAAc,CAACyD,GAAG,CAAC;UAAEC,GAAG,EAAE,UAAU;UAAEC,QAAQ,EAAE,MAAM;UAAEC,OAAO,EAAE,SAAS;UAAEC,MAAM,EAAE;QAA0B,CAAE,CAAC;;IAE1H,CAAC,CAAC;EACJ;EAGAtF,QAAQA,CAACwF,cAAmB;IAC1B,IAAI,CAAC9D,mBAAmB,CAAC+D,OAAO,CAAC;MAC/BC,OAAO,EAAE,wCAAwC;MACjDC,MAAM,EAAE,cAAc;MACtBC,IAAI,EAAE,4BAA4B;MAClCC,MAAM,EAAEA,CAAA,KAAK;QACX,IAAI,CAACC,MAAM,CAACN,cAAc,CAAC;MAC7B,CAAC;MACDL,GAAG,EAAE;KACN,CAAC;EACJ;EAEAW,MAAMA,CAACN,cAAmB;IACxB,IAAI,CAAClE,SAAS,CAACyE,oBAAoB,CAACP,cAAc,CAACP,iBAAiB,CAAC,CAACnC,SAAS,CAAEC,GAAQ,IAAI;MAC3F,IAAIA,GAAG,CAACwC,IAAI,KAAK,gBAAgB,EAAE;QACjC;QACA,IAAI,CAAC7B,6BAA6B,CAAC8B,cAAc,CAAC;;IAEtD,CAAC,CAAC;EACJ;EAEArB,kBAAkBA,CAACvC,QAAa;IAE9B,IAAI,IAAI,CAACoE,qBAAqB,CAACC,SAAS,KAAK,IAAI,CAAC5D,iBAAiB,EAAE;MACnE,IAAIT,QAAQ,CAACb,SAAS,KAAK,WAAW,IAAIa,QAAQ,CAACb,SAAS,KAAK,UAAU,IAAIa,QAAQ,CAACb,SAAS,KAAK,UAAU,EAAE;QAChH,IAAI,CAACmF,WAAW,CAACtE,QAAQ,CAACuE,UAAU,CAAC;QACrC,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,KAAK;;KAEf,MAAM,IAAI,IAAI,CAACH,qBAAqB,CAACI,YAAY,KAAK,IAAI,CAAC9D,oBAAoB,IAAI,IAAI,CAAC0D,qBAAqB,CAACC,SAAS,IAAI,IAAI,CAAC5D,iBAAiB,EAAE;MAClJ,IAAIT,QAAQ,CAACb,SAAS,KAAK,WAAW,IAAIa,QAAQ,CAACb,SAAS,KAAK,UAAU,EAAE;QAC3E,OAAO,IAAI;OACZ,MAAM;QACL,OAAO,KAAK;;;IAGhB,OAAO,KAAK;EACd;EAEA4B,SAASA,CAAA;IACP,IAAI,CAACV,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACN,OAAO,CAACkB,QAAQ,EAAE,CAACC,SAAS,CAC9BC,GAAe,IAAI;MAClB,IAAI,CAACd,QAAQ,GAAGc,GAAG;MACnB,IAAI,CAACb,cAAc,GAAG,IAAI,CAACD,QAAQ,CAACe,GAAG,CAACC,CAAC,IAAIC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEF,CAAC,CAAC,CAAC;MAClE;MACA,IAAI,CAACrB,QAAQ,GAAG,IAAI,CAACM,cAAc,CAACkB,MAAM,CAACC,CAAC,IAAGA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,IAAI,CAACA,iBAAiB,EAAE,IAAIF,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,QAAQ,CAACA,iBAAiB,EAAE,CAAC;MAChL;MACA,IAAI,CAACpB,aAAa,GAAG,IAAI,CAACD,cAAc,CAACkB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,yBAAyB,CAACA,iBAAiB,EAAE,IAAIF,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,YAAY,CAACA,iBAAiB,EAAE,CAAC;MAC/M,IAAI,CAACpB,aAAa,CAACkE,OAAO,CAAChD,CAAC,IAAG;QAC7B,IAAIA,CAAC,CAACtC,SAAS,KAAK,KAAK,EAAE;UACzB,IAAI,CAACsB,iBAAiB,GAAGgB,CAAC,CAAC/D,OAAO;;MAEtC,CAAC,CAAC;MACF,IAAI,CAAC8C,gBAAgB,GAAG,IAAI,CAACF,cAAc,CAACkB,MAAM,CAACC,CAAC,IAAGA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,yBAAyB,CAACA,iBAAiB,EAAE,IAAIF,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,eAAe,CAACA,iBAAiB,EAAE,CAAC;MACpN,IAAI,CAACnB,gBAAgB,CAACiE,OAAO,CAAChD,CAAC,IAAG;QAChC,IAAIA,CAAC,CAACtC,SAAS,KAAK,KAAK,EAAE;UACzB,IAAI,CAACuB,oBAAoB,GAAGe,CAAC,CAAC/D,OAAO;;MAEzC,CAAC,CAAC;MACF;IACF,CAAC,EACDgH,KAAK,IAAG,CACR,CAAC,CACF;EACH;EACAJ,WAAWA,CAACC,UAAc;IACxB,IAAI,CAACtE,YAAY,CAACwE,OAAO,CAAChD,CAAC,IAAG;MAC1B,IAAGA,CAAC,CAACzB,QAAQ,KAAKuE,UAAU,EAAE;QAC5B,IAAI,CAACL,MAAM,CAACzC,CAAC,CAAC;;IAEpB,CAAC,CAAC;EACJ;EAEC/C,mBAAmBA,CAAChB,OAAY;IAC/B,OAAO,IAAI,CAACmD,YAAY,CAAC6B,IAAI,CAAEjB,CAAM,IAAKA,CAAC,CAAC/D,OAAO,KAAKA,OAAO,CAAC,EAAEyB,SAAS;EAC7E;EAAC,QAAAwF,CAAA,G;qBA/MUnF,sBAAsB,EAAA3C,EAAA,CAAA+H,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAjI,EAAA,CAAA+H,iBAAA,CAAAG,EAAA,CAAAC,6BAAA,GAAAnI,EAAA,CAAA+H,iBAAA,CAAA/H,EAAA,CAAAoI,MAAA,GAAApI,EAAA,CAAA+H,iBAAA,CAAAM,EAAA,CAAAtI,cAAA,GAAAC,EAAA,CAAA+H,iBAAA,CAAAM,EAAA,CAAAC,mBAAA,GAAAtI,EAAA,CAAA+H,iBAAA,CAAAQ,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtB9F,sBAAsB;IAAA+F,SAAA;IAAAC,MAAA;MAAAC,OAAA;IAAA;IAAAC,QAAA,GAAA7I,EAAA,CAAA8I,kBAAA,CAFtB,CAAC/I,cAAc,CAAC;IAAAgJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ7BpJ,EAAA,CAAAC,cAAA,aAA+D;QAC3DD,EAAA,CAAAgC,UAAA,IAAAsH,qCAAA,kBAsCM;QACVtJ,EAAA,CAAAc,YAAA,EAAM;QACNd,EAAA,CAAAuJ,SAAA,iBAAuD;;;QAxCZvJ,EAAA,CAAA0B,SAAA,GAAsB;QAAtB1B,EAAA,CAAAyB,UAAA,YAAA4H,GAAA,CAAAhG,mBAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}