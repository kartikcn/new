{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../provider/visitors.provider\";\nimport * as i2 from \"../services/visitors.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/panel\";\nimport * as i8 from \"primeng/confirmdialog\";\nimport * as i9 from \"primeng/paginator\";\nfunction VisitorsComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function VisitorsComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onAdd());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VisitorsComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 12);\n    i0.ɵɵelementStart(2, \"th\", 13)(3, \"div\", 14)(4, \"div\", 15)(5, \"p\", 16);\n    i0.ɵɵtext(6, \"First Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 17);\n    i0.ɵɵelement(8, \"p-sortIcon\", 18)(9, \"p-columnFilter\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 20)(11, \"div\", 14)(12, \"div\", 15)(13, \"p\", 16);\n    i0.ɵɵtext(14, \"Last Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 17);\n    i0.ɵɵelement(16, \"p-sortIcon\", 21)(17, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 23)(19, \"div\", 14)(20, \"div\", 15)(21, \"p\", 16);\n    i0.ɵɵtext(22, \"Email\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 17);\n    i0.ɵɵelement(24, \"p-sortIcon\", 24)(25, \"p-columnFilter\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\", 26)(27, \"div\", 14)(28, \"div\", 15)(29, \"p\", 16);\n    i0.ɵɵtext(30, \"Autorized By\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 17);\n    i0.ɵɵelement(32, \"p-sortIcon\", 27)(33, \"p-columnFilter\", 28);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"th\", 29)(35, \"div\", 14)(36, \"div\", 15)(37, \"p\", 16);\n    i0.ɵɵtext(38, \"Phone Number \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 17);\n    i0.ɵɵelement(40, \"p-sortIcon\", 30)(41, \"p-columnFilter\", 31);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(42, \"th\", 32)(43, \"div\", 14)(44, \"div\", 15)(45, \"p\", 16);\n    i0.ɵɵtext(46, \"Building Code \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(47, \"div\", 17);\n    i0.ɵɵelement(48, \"p-sortIcon\", 33)(49, \"p-columnFilter\", 34);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(50, \"th\", 35)(51, \"div\", 14)(52, \"div\", 15)(53, \"p\", 16);\n    i0.ɵɵtext(54, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(55, \"div\", 17);\n    i0.ɵɵelement(56, \"p-sortIcon\", 36)(57, \"p-columnFilter\", 37);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(58, \"th\", 38)(59, \"div\", 14)(60, \"div\", 15)(61, \"p\", 16);\n    i0.ɵɵtext(62, \"Comments\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(63, \"div\", 17);\n    i0.ɵɵelement(64, \"p-sortIcon\", 39)(65, \"p-columnFilter\", 40);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction VisitorsComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 41)(1, \"td\", 12)(2, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function VisitorsComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const visitor_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onEdit(visitor_r5.visitorsId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function VisitorsComponent_ng_template_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const visitor_r5 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onView(visitor_r5.visitorsId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const visitor_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", visitor_r5);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(visitor_r5.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(visitor_r5.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(visitor_r5.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(visitor_r5.userUserName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(visitor_r5.phoneNum);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(visitor_r5.blBlCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(visitor_r5.flFlCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(visitor_r5.comments);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let VisitorsComponent = /*#__PURE__*/(() => {\n  class VisitorsComponent {\n    constructor(visitorsProvider, service, messageService) {\n      this.visitorsProvider = visitorsProvider;\n      this.service = service;\n      this.messageService = messageService;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.visitorsData = [];\n      this.loading = false;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"visitorsId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n    }\n    ngOnInit() {\n      this.loadRecords();\n    }\n    loadRecords() {\n      this.loading = true;\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.service.getAllVisitorsPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFiltered = false;\n          this.visitorsData = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.visitorsData = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    onAdd() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '800px';\n      dialogConfig.data = {\n        holidayDate: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.visitorsProvider.openDialog(dialogConfig);\n      this.visitorsProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result != null) {\n          this.messageService.add({\n            key: 'visitorsGrid',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onEdit(id) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '800px';\n      dialogConfig.data = {\n        visitorsId: id,\n        isEdit: true,\n        newRecord: false\n      };\n      this.visitorsProvider.openDialog(dialogConfig);\n      this.visitorsProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result != null) {\n          this.messageService.add({\n            key: 'visitorsGrid',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onView(id) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '800px';\n      dialogConfig.data = {\n        visitorsId: id,\n        isView: true,\n        newRecord: false\n      };\n      this.visitorsProvider.openDialog(dialogConfig);\n      this.visitorsProvider.onDialogueClosed.subscribe(result => {});\n    }\n    formatDate(date) {\n      if (date != null) {\n        var date = new Date(date);\n        var userTimezoneOffset = date.getTimezoneOffset() * 60000;\n        var a = new Date(date.getTime() - userTimezoneOffset);\n        return a;\n      } else {\n        return null;\n      }\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        this.filterCriteria = {};\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {};\n            if (field == \"userUserName\") {\n              filterCriteria = {\n                fieldName: \"user.userName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"blBlCode\") {\n              filterCriteria = {\n                fieldName: \"bl.blCode\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"flFlCode\") {\n              filterCriteria = {\n                fieldName: \"fl.flCode\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function VisitorsComponent_Factory(t) {\n      return new (t || VisitorsComponent)(i0.ɵɵdirectiveInject(i1.visitorsDialogueProvider), i0.ɵɵdirectiveInject(i2.VisitorsService), i0.ɵɵdirectiveInject(i3.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VisitorsComponent,\n      selectors: [[\"app-visitors\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 11,\n      vars: 11,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Visitors Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"scrollable\", \"onFilter\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"visitorsGrid\", \"position\", \"top-right\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"firstName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"firstName\"], [\"type\", \"text\", \"field\", \"firstName\", \"display\", \"menu\"], [\"pSortableColumn\", \"lastName\"], [\"field\", \"lastName\"], [\"type\", \"text\", \"field\", \"lastName\", \"display\", \"menu\"], [\"pSortableColumn\", \"email\"], [\"field\", \"email\"], [\"type\", \"text\", \"field\", \"email\", \"display\", \"menu\"], [\"pSortableColumn\", \"userUserName\"], [\"field\", \"userUserName\"], [\"type\", \"text\", \"field\", \"userUserName\", \"display\", \"menu\"], [\"pSortableColumn\", \"phoneNum\"], [\"field\", \"phoneNum\"], [\"type\", \"text\", \"field\", \"phoneNum\", \"display\", \"menu\"], [\"pSortableColumn\", \"blBlCode\"], [\"field\", \"blBlCode\"], [\"type\", \"text\", \"field\", \"blBlCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"flFlCode\"], [\"field\", \"flFlCode\"], [\"type\", \"text\", \"field\", \"flFlCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"comments\"], [\"field\", \"comments\"], [\"type\", \"text\", \"field\", \"comments\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-eye\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", 3, \"click\"]],\n      template: function VisitorsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, VisitorsComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4);\n          i0.ɵɵlistener(\"onFilter\", function VisitorsComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(5, VisitorsComponent_ng_template_5_Template, 66, 0, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, VisitorsComponent_ng_template_6_Template, 20, 9, \"ng-template\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 7)(8, \"p-paginator\", 8);\n          i0.ɵɵlistener(\"onPageChange\", function VisitorsComponent_Template_p_paginator_onPageChange_8_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(9, \"p-toast\", 9)(10, \"p-confirmDialog\", 10);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.visitorsData)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"rowHover\", false)(\"scrollable\", true);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i3.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i4.SortIcon, i4.ColumnFilter, i5.ButtonDirective, i6.Toast, i7.Panel, i8.ConfirmDialog, i9.Paginator]\n    });\n  }\n  return VisitorsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}