{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class TeamService {\n  constructor(teamService) {\n    this.teamService = teamService;\n  }\n  getAllTeams() {\n    return this.teamService.getAll('team', 'getAll');\n  }\n  getAllTeamsPaginated(data) {\n    return this.teamService.search('team', 'getAllPaginated', data);\n  }\n  getTeamById(teamId) {\n    return this.teamService.getSingleById(\"team\", \"getById\", teamId);\n  }\n  saveTeam(data) {\n    return this.teamService.add('team', 'save', data);\n  }\n  validateTeam(teamId) {\n    return this.teamService.getSingleById('team', 'check', teamId);\n  }\n  deleteById(teamId) {\n    return this.teamService.getSingleById(\"team\", \"delete\", teamId);\n  }\n  getAssignedTeams(data) {\n    return this.teamService.search('team', 'getAssignedTeams', data);\n  }\n  getUnAssignedTeams(data) {\n    return this.teamService.search('team', 'getUnAssignedTeams', data);\n  }\n  saveWorkTeams(data) {\n    return this.teamService.add('wt', 'save', data);\n  }\n  deleteWorkTeams(data) {\n    return this.teamService.add('wt', 'delete', data);\n  }\n  getTeamsHavingTechnician() {\n    return this.teamService.getAll('team', 'getTeamsHavingtechnician');\n  }\n  getTeamsHavingEmployee() {\n    return this.teamService.getAll('team', 'getTeamsHavingemployee');\n  }\n  static #_ = this.ɵfac = function TeamService_Factory(t) {\n    return new (t || TeamService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TeamService,\n    factory: TeamService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TeamService","constructor","teamService","getAllTeams","getAll","getAllTeamsPaginated","data","search","getTeamById","teamId","getSingleById","saveTeam","add","validateTeam","deleteById","getAssignedTeams","getUnAssignedTeams","saveWorkTeams","deleteWorkTeams","getTeamsHavingTechnician","getTeamsHavingEmployee","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/team/services/team.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  constructor(\n    private teamService: DataService<any>,\n\n  ) { }\n\n\n  public getAllTeams() {\n    return this.teamService.getAll('team', 'getAll');\n  }\n\n  public getAllTeamsPaginated(data:any) {\n    return this.teamService.search('team', 'getAllPaginated',data);\n  }\n\n  public getTeamById(teamId: any) {\n    return this.teamService.getSingleById(\"team\", \"getById\", teamId);\n  }\n\n  public saveTeam(data: any): Observable<any> {\n    return this.teamService.add('team', 'save', data);\n  }\n\n  public validateTeam(teamId: any) {\n    return this.teamService.getSingleById('team', 'check', teamId);\n  }\n\n  public deleteById(teamId: any) {\n    return this.teamService.getSingleById(\"team\", \"delete\", teamId);\n  }\n\n  public getAssignedTeams(data: any): Observable<any> {\n    return this.teamService.search('team', 'getAssignedTeams', data);\n  }\n\n  public getUnAssignedTeams(data: any): Observable<any> {\n    return this.teamService.search('team', 'getUnAssignedTeams', data);\n  }\n\n  public saveWorkTeams(data: any): Observable<any> {\n    return this.teamService.add('wt', 'save', data);\n  }\n\n  public deleteWorkTeams(data: any): Observable<any> {\n    return this.teamService.add('wt', 'delete', data);\n  }\n\n  public getTeamsHavingTechnician() : Observable<any> {\n   return this.teamService.getAll('team', 'getTeamsHavingtechnician');\n  }\n\n  public getTeamsHavingEmployee() : Observable<any> {\n    return this.teamService.getAll('team', 'getTeamsHavingemployee');\n   }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YACUC,WAA6B;IAA7B,KAAAA,WAAW,GAAXA,WAAW;EAEjB;EAGGC,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACD,WAAW,CAACE,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC;EAClD;EAEOC,oBAAoBA,CAACC,IAAQ;IAClC,OAAO,IAAI,CAACJ,WAAW,CAACK,MAAM,CAAC,MAAM,EAAE,iBAAiB,EAACD,IAAI,CAAC;EAChE;EAEOE,WAAWA,CAACC,MAAW;IAC5B,OAAO,IAAI,CAACP,WAAW,CAACQ,aAAa,CAAC,MAAM,EAAE,SAAS,EAAED,MAAM,CAAC;EAClE;EAEOE,QAAQA,CAACL,IAAS;IACvB,OAAO,IAAI,CAACJ,WAAW,CAACU,GAAG,CAAC,MAAM,EAAE,MAAM,EAAEN,IAAI,CAAC;EACnD;EAEOO,YAAYA,CAACJ,MAAW;IAC7B,OAAO,IAAI,CAACP,WAAW,CAACQ,aAAa,CAAC,MAAM,EAAE,OAAO,EAAED,MAAM,CAAC;EAChE;EAEOK,UAAUA,CAACL,MAAW;IAC3B,OAAO,IAAI,CAACP,WAAW,CAACQ,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAED,MAAM,CAAC;EACjE;EAEOM,gBAAgBA,CAACT,IAAS;IAC/B,OAAO,IAAI,CAACJ,WAAW,CAACK,MAAM,CAAC,MAAM,EAAE,kBAAkB,EAAED,IAAI,CAAC;EAClE;EAEOU,kBAAkBA,CAACV,IAAS;IACjC,OAAO,IAAI,CAACJ,WAAW,CAACK,MAAM,CAAC,MAAM,EAAE,oBAAoB,EAAED,IAAI,CAAC;EACpE;EAEOW,aAAaA,CAACX,IAAS;IAC5B,OAAO,IAAI,CAACJ,WAAW,CAACU,GAAG,CAAC,IAAI,EAAE,MAAM,EAAEN,IAAI,CAAC;EACjD;EAEOY,eAAeA,CAACZ,IAAS;IAC9B,OAAO,IAAI,CAACJ,WAAW,CAACU,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAEN,IAAI,CAAC;EACnD;EAEOa,wBAAwBA,CAAA;IAC9B,OAAO,IAAI,CAACjB,WAAW,CAACE,MAAM,CAAC,MAAM,EAAE,0BAA0B,CAAC;EACnE;EAEOgB,sBAAsBA,CAAA;IAC3B,OAAO,IAAI,CAAClB,WAAW,CAACE,MAAM,CAAC,MAAM,EAAE,wBAAwB,CAAC;EACjE;EAAC,QAAAiB,CAAA,G;qBAtDSrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX1B,WAAW;IAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}