{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/arrangement.service\";\nimport * as i2 from \"../provider/arrangement.provider\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/panel\";\nimport * as i7 from \"primeng/paginator\";\nfunction ArrangementComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ArrangementComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addRecord());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ArrangementComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 11);\n    i0.ɵɵelementStart(2, \"th\", 12)(3, \"div\", 13)(4, \"div\", 14)(5, \"p\", 15);\n    i0.ɵɵtext(6, \"Arrangement Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 16);\n    i0.ɵɵelement(8, \"p-sortIcon\", 17)(9, \"p-columnFilter\", 18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 19)(11, \"div\", 13)(12, \"div\", 14)(13, \"p\", 15);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 16);\n    i0.ɵɵelement(16, \"p-sortIcon\", 20)(17, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ArrangementComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 22)(1, \"td\", 11)(2, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ArrangementComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const arrange_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.openEditItem(arrange_r6));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelement(8, \"div\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arrange_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", arrange_r6);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(arrange_r6.arrangementType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(arrange_r6.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", arrange_r6.highlightColor);\n  }\n}\nfunction ArrangementComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let ArrangementComponent = /*#__PURE__*/(() => {\n  class ArrangementComponent {\n    constructor(arrangeSrv, arrangementProvider) {\n      this.arrangeSrv = arrangeSrv;\n      this.arrangementProvider = arrangementProvider;\n      this.arrangementRecords = [];\n      this.loadingRec = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"arrangementId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n    }\n    ngOnInit() {\n      this.loadRecords();\n    }\n    loadRecords() {\n      this.loadingRec = true;\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.arrangeSrv.getAllArrangementsPaginated(data).subscribe(res => {\n        if (res) {\n          this.loadingRec = false;\n          this.isFiltered = false;\n          this.arrangementRecords = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.loadingRec = true;\n          this.arrangementRecords = [];\n        }\n      }, error => {\n        this.loadingRec = false;\n      });\n    }\n    addRecord() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        arrangementId: 0,\n        arrangementType: \"\",\n        description: \"\",\n        isEdit: true,\n        newRecord: true,\n        title: \"Add\"\n      };\n      this.arrangementProvider.openDialog(dialogConfig);\n      this.arrangementProvider.onDialogueClosed.subscribe(result => {\n        if (result == true) {\n          this.loadRecords();\n        }\n      });\n    }\n    openEditItem(arrange) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        arrangementId: arrange.arrangementId,\n        arrangementType: arrange.arrangementType,\n        description: arrange.description,\n        isEdit: true,\n        newRecord: false,\n        title: \"Edit\"\n      };\n      this.arrangementProvider.openDialog(dialogConfig);\n      this.arrangementProvider.onDialogueClosed.subscribe(result => {\n        if (result == true) {\n          this.loadRecords();\n        }\n      });\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {\n              fieldName: field,\n              value: filterValue,\n              matchMode: matchMode\n            };\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function ArrangementComponent_Factory(t) {\n      return new (t || ArrangementComponent)(i0.ɵɵdirectiveInject(i1.ArrangementService), i0.ɵɵdirectiveInject(i2.ArrangementDialogueProvider));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ArrangementComponent,\n      selectors: [[\"app-arrangement\"]],\n      decls: 10,\n      vars: 11,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Arrangements\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"dataKey\", \"arrangementId\", 3, \"value\", \"paginator\", \"loading\", \"scrollable\", \"rowHover\", \"onFilter\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"arrangementType\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"arrangementType\"], [\"type\", \"text\", \"field\", \"arrangementType\", \"display\", \"menu\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [1, \"td-class\"]],\n      template: function ArrangementComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, ArrangementComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4);\n          i0.ɵɵlistener(\"onFilter\", function ArrangementComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(5, ArrangementComponent_ng_template_5_Template, 20, 0, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, ArrangementComponent_ng_template_6_Template, 9, 5, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, ArrangementComponent_ng_template_7_Template, 3, 1, \"ng-template\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 8)(9, \"p-paginator\", 9);\n          i0.ɵɵlistener(\"onPageChange\", function ArrangementComponent_Template_p_paginator_onPageChange_9_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.arrangementRecords)(\"paginator\", false)(\"loading\", ctx.loadingRec)(\"scrollable\", true)(\"rowHover\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i3.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i4.SortIcon, i4.ColumnFilter, i5.ButtonDirective, i6.Panel, i7.Paginator],\n      styles: [\".td-class[_ngcontent-%COMP%]{background-color:inherit;display:flex;align-items:center;justify-content:center;width:40px;height:20px;margin:10px auto auto;border:1px solid black}\"]\n    });\n  }\n  return ArrangementComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}