{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../craftsperson/services/craftsperson.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/services/enum.service\";\nimport * as i5 from \"../services/technician-time-usage-analysis.services\";\nimport * as i6 from \"src/app/services/breakpoint.service\";\nimport * as i7 from \"primeng/api\";\nimport * as i8 from \"primeng/table\";\nimport * as i9 from \"primeng/calendar\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/dialog\";\nimport * as i12 from \"primeng/dropdown\";\nimport * as i13 from \"primeng/panel\";\nimport * as i14 from \"@ng-select/ng-select\";\nfunction TechnicianTimeUsageAnalysisComponent_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 9)(1, \"tr\")(2, \"td\", 10)(3, \"div\", 11)(4, \"label\", 12);\n    i0.ɵɵtext(5, \"Technician\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"ng-select\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 10)(8, \"div\", 11)(9, \"div\", 14)(10, \"div\", 15)(11, \"label\", 16);\n    i0.ɵɵtext(12, \"Scheduled From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"p-calendar\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(14, \"td\", 10)(15, \"div\", 11)(16, \"div\", 14)(17, \"div\", 15)(18, \"label\", 16);\n    i0.ɵɵtext(19, \"Scheduled To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"p-calendar\", 18);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"td\", 10)(22, \"div\", 11)(23, \"label\", 16);\n    i0.ɵɵtext(24, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"ng-select\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"td\", 10)(27, \"div\", 20)(28, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TechnicianTimeUsageAnalysisComponent_table_2_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TechnicianTimeUsageAnalysisComponent_table_2_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onClear());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.technicianData)(\"searchable\", true);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.filterPanel.valid);\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 9)(1, \"tr\")(2, \"td\", 23)(3, \"div\", 11)(4, \"label\", 12);\n    i0.ɵɵtext(5, \"Technician\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"ng-select\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 23)(8, \"div\", 11)(9, \"div\", 14)(10, \"div\", 15)(11, \"label\", 16);\n    i0.ɵɵtext(12, \"Scheduled From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"p-calendar\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(14, \"td\", 23)(15, \"div\", 11)(16, \"div\", 14)(17, \"div\", 15)(18, \"label\", 16);\n    i0.ɵɵtext(19, \"Scheduled To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"p-calendar\", 18);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(21, \"tr\")(22, \"td\", 23)(23, \"div\", 11)(24, \"label\", 16);\n    i0.ɵɵtext(25, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"ng-select\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"td\", 23)(28, \"div\", 20)(29, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TechnicianTimeUsageAnalysisComponent_table_3_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function TechnicianTimeUsageAnalysisComponent_table_3_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onClear());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.technicianData)(\"searchable\", true);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.filterPanel.valid);\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function TechnicianTimeUsageAnalysisComponent_ng_template_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.exportExcel());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r2.technicanTimeUsageanalysisData.length > 0));\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 26)(2, \"div\", 27)(3, \"div\", 28)(4, \"p\", 29);\n    i0.ɵɵtext(5, \"Scheduled Date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 30);\n    i0.ɵɵelement(7, \"p-sortIcon\", 31)(8, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 33)(10, \"div\", 27)(11, \"div\", 28)(12, \"p\", 29);\n    i0.ɵɵtext(13, \"Scheduled Time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 30);\n    i0.ɵɵelement(15, \"p-sortIcon\", 34)(16, \"p-columnFilter\", 35);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 36)(18, \"div\", 27)(19, \"div\", 28)(20, \"p\", 29);\n    i0.ɵɵtext(21, \"Estimated Hours\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 30);\n    i0.ɵɵelement(23, \"p-sortIcon\", 37)(24, \"p-columnFilter\", 38);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"th\", 39)(26, \"div\", 27)(27, \"div\", 28)(28, \"p\", 29);\n    i0.ɵɵtext(29, \"Actual Hours\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 30);\n    i0.ɵɵelement(31, \"p-sortIcon\", 40)(32, \"p-columnFilter\", 41);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"th\", 42)(34, \"div\", 27)(35, \"div\", 28)(36, \"p\", 29);\n    i0.ɵɵtext(37, \"Request Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"div\", 30);\n    i0.ɵɵelement(39, \"p-sortIcon\", 43)(40, \"p-columnFilter\", 44);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TechnicianTimeUsageAnalysisComponent_ng_template_9_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const techTime_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.getWorkingHoursByTechnicianIdAndRequestId(techTime_r15.requestId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const techTime_r15 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 5, techTime_r15.dateAssign, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.convertToDisplayTime(techTime_r15.timeAssign));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(techTime_r15.hoursRequired);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", techTime_r15.actualHoursStd + techTime_r15.actualHoursDouble + techTime_r15.actualHoursOvertime, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(techTime_r15.requestId);\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 5);\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_2_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 60);\n    i0.ɵɵlistener(\"onChange\", function TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_2_ng_template_5_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const filter_r24 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r24($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r23 = ctx.$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngModel\", value_r23)(\"options\", ctx_r22.enumWorkType)(\"showClear\", true);\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 47);\n    i0.ɵɵtext(2, \" Work Type\");\n    i0.ɵɵelement(3, \"p-sortIcon\", 48);\n    i0.ɵɵelementStart(4, \"p-columnFilter\", 49);\n    i0.ɵɵtemplate(5, TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_2_ng_template_5_Template, 1, 3, \"ng-template\", 50);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"th\", 51);\n    i0.ɵɵtext(7, \" Standard Hours\");\n    i0.ɵɵelement(8, \"p-sortIcon\", 52)(9, \"p-columnFilter\", 53);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 54);\n    i0.ɵɵtext(11, \" Double Hours\");\n    i0.ɵɵelement(12, \"p-sortIcon\", 55)(13, \"p-columnFilter\", 56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\", 57);\n    i0.ɵɵtext(15, \" Overtime Hours\");\n    i0.ɵɵelement(16, \"p-sortIcon\", 58)(17, \"p-columnFilter\", 59);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const techTime_r27 = ctx.$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r20.getEnumById(techTime_r27.workType));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(techTime_r27.actualHoursStd);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(techTime_r27.actualHoursDouble);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(techTime_r27.actualHoursOvertime);\n  }\n}\nfunction TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No Records. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r21.technicanData.length);\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nfunction TechnicianTimeUsageAnalysisComponent_p_dialog_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 46);\n    i0.ɵɵlistener(\"visibleChange\", function TechnicianTimeUsageAnalysisComponent_p_dialog_11_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.showDetails = $event);\n    });\n    i0.ɵɵelementStart(1, \"p-table\", 5);\n    i0.ɵɵtemplate(2, TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_2_Template, 18, 0, \"ng-template\", 3);\n    i0.ɵɵtemplate(3, TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_3_Template, 9, 4, \"ng-template\", 6);\n    i0.ɵɵtemplate(4, TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_4_Template, 3, 1, \"ng-template\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(9, _c0));\n    i0.ɵɵproperty(\"visible\", ctx_r6.showDetails)(\"draggable\", false)(\"modal\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"rows\", ctx_r6.rowCount)(\"value\", ctx_r6.technicanData)(\"paginator\", false)(\"loading\", ctx_r6.loading);\n  }\n}\nexport class TechnicianTimeUsageAnalysisComponent {\n  constructor(cfSrv, datePipe, formBuilder, enumsrv, technicianTimeUsageanalysisService, bps) {\n    this.cfSrv = cfSrv;\n    this.datePipe = datePipe;\n    this.formBuilder = formBuilder;\n    this.enumsrv = enumsrv;\n    this.technicianTimeUsageanalysisService = technicianTimeUsageanalysisService;\n    this.bps = bps;\n    this.loading = false;\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.technicianData = [];\n    this.technicanTimeUsageanalysisData = [];\n    this.technicanData = [];\n    this.enumWorkType = [];\n    this.enumList = [];\n    this.req_array = [];\n    this.enableDetailsBtn = false;\n    this.enumTechRequLogData = [];\n    this.enumClonedList = [];\n    this.isTableRecordLoading = false;\n    this.isErr = false;\n    this.errorMsg = '';\n    this.isShow = false;\n    this.totalActualHr = [];\n    this.showDetails = false;\n    this.showRequestsTypeList = [{\n      label: \"Preventive Maintenance\",\n      value: \"ppm\"\n    }, {\n      label: \"Facilities Helpdesk\",\n      value: \"facilities\"\n    }, {\n      label: \"All\",\n      value: \"all\"\n    }];\n    this.showType = \"facilities\";\n    this.useTabletProtrait = false;\n    this.filterPanel = this.formBuilder.group({\n      technicianId: [null, [Validators.required]],\n      dateFrom: [null],\n      dateTo: [null],\n      showType: [this.showType]\n    });\n  }\n  ngOnInit() {\n    this.bps.register(this);\n    this.loadTechinician();\n    // this.loadRecords();\n    this.loadEnums();\n    var date = new Date();\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        dateFrom: firstDay,\n        dateTo: lastDay,\n        showType: this.showType\n      });\n    });\n  }\n  notify() {\n    this.useTabletProtrait = BreakpointService.useTabletProtrait;\n  }\n  loadRecords() {\n    const filterData = this.getFilterData();\n    this.getRequestByTechnicianTime(filterData);\n  }\n  getFilterData() {\n    var fromDate = this.filterPanel.controls.dateFrom.value;\n    var toDate = this.filterPanel.controls.dateTo.value;\n    var technicianId = this.filterPanel.controls.technicianId.value;\n    var filterData = {\n      \"fromDate\": this.datePipe.transform(fromDate, \"yyyy-MM-dd\"),\n      \"toDate\": this.datePipe.transform(toDate, \"yyyy-MM-dd\"),\n      \"technicianId\": technicianId,\n      \"showRequestType\": this.filterPanel.controls.showType.value\n    };\n    return filterData;\n  }\n  getRequestByTechnicianTime(filter) {\n    this.loading = true;\n    this.technicianTimeUsageanalysisService.getRequestByTechnicianTime(filter).subscribe(res => {\n      this.loading = false;\n      this.technicanTimeUsageanalysisData = res.map(each => {\n        return {\n          ...each,\n          formatedScheduledDate: this.datePipe.transform(each.dateAssign, 'dd MMM yyyy')\n        };\n      });\n    }, error => {\n      this.loading = false;\n      this.technicanTimeUsageanalysisData = [];\n    });\n  }\n  onSearch() {\n    const filterData = this.getFilterData();\n    this.getRequestByTechnicianTime(filterData);\n  }\n  loadTechinician() {\n    this.cfSrv.getAllCraftsperson().subscribe(res => {\n      if (res) {\n        this.technicianData = res;\n      } else {\n        this.technicianData = [];\n      }\n    });\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      // this.enumTechRequLogData = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'request_technician_log'.toLocaleUpperCase());\n      this.enumWorkType = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'request_technician_log'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'work_type'.toLocaleUpperCase());\n    }, error => {});\n  }\n  getEnumById(enumKey) {\n    return this.enumWorkType.find(t => t.enumKey === enumKey)?.enumValue;\n  }\n  convertToDisplayTime(value) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n  onClick(technicianId) {\n    var fromDate = this.filterPanel.controls.dateFrom.value;\n    var toDate = this.filterPanel.controls.dateTo.value;\n    var technicianId = this.filterPanel.controls.technicianId.value;\n    var filterData = {\n      \"fromDate\": this.datePipe.transform(fromDate, \"yyyy-MM-dd\"),\n      \"toDate\": this.datePipe.transform(toDate, \"yyyy-MM-dd\"),\n      \"technicianId\": technicianId\n    };\n    this.onRowClick(filterData);\n  }\n  onRowClick(event) {\n    this.isShow = this.isTableRecordLoading = true;\n    let postData = {\n      ...event\n    };\n    this.getRequestByTechnicianTime(postData);\n  }\n  getWorkingHoursByTechnicianIdAndRequestId(requestId) {\n    let filterdata = {\n      requestId: requestId,\n      technicianId: this.filterPanel.controls.technicianId.value\n    };\n    this.technicianTimeUsageanalysisService.getWorkingHoursByTechnicianIdAndRequestId(filterdata).subscribe(res => {\n      this.showDetails = true;\n      this.technicanData = res;\n    }, error => {\n      this.loading = false;\n      this.technicanData = [];\n    });\n  }\n  exportExcel() {\n    if (this.technicanTimeUsageanalysisData.length === 0) {\n      // Data is not present, only print the headings\n      var excelHeaders = [\"Technician Id\", \"Technician Name\", \"Scheduled Date\", \"Scheduled Time\", \"Estimated Hours\", \"Work Type\", \"Actual Hours\", \"Request Code\"];\n      let options = {\n        header: excelHeaders\n      };\n      const worksheet = XLSX.utils.json_to_sheet([], options); // Provide empty data array\n      worksheet['!cols'] = [{\n        wch: 20\n      }, {\n        wch: 20\n      }, {\n        wch: 20\n      }, {\n        wch: 20\n      }, {\n        wch: 20\n      }, {\n        wch: 20\n      }];\n      const workbook = {\n        Sheets: {\n          'data': worksheet\n        },\n        SheetNames: ['data']\n      };\n      const excelBuffer = XLSX.write(workbook, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      this.saveAsExcelFile(excelBuffer, \"TechnicianTimeUsageAnalysisReports\");\n    } else {\n      this.getDestructuredData(() => {\n        var excelHeaders = [\"Technician Id\", \"Technician Name\", \"Scheduled Date\", \"Scheduled Time\", \"Estimated Hours\", \"Work Type\", \"Actual Hours\", \"Request Code\"];\n        let options = {\n          header: excelHeaders\n        };\n        const worksheet = XLSX.utils.json_to_sheet(this.req_array);\n        worksheet['!cols'] = [{\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }];\n        const workbook = {\n          Sheets: {\n            'data': worksheet\n          },\n          SheetNames: ['data']\n        };\n        const excelBuffer = XLSX.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array'\n        });\n        this.saveAsExcelFile(excelBuffer, \"TechnicianTimeUsageAnalysisReports\");\n      });\n    }\n  }\n  getDestructuredData(callback) {\n    if (!this.technicanTimeUsageanalysisData || this.technicanTimeUsageanalysisData.length === 0) {\n      this.req_array = [];\n      callback();\n      return;\n    }\n    this.req_array = this.technicanTimeUsageanalysisData.map(item => ({\n      \"Technician Id\": item.technicianId,\n      \"Technician Name\": this.getTechnicianName(item.technicianId),\n      \"Scheduled Date\": this.datePipe.transform(item.dateAssign, \"dd MMM yyyy\"),\n      \"Scheduled Time\": item.timeAssign,\n      \"Estimated Hours\": item.hoursRequired,\n      \"Work Type\": this.getEnumById(item.workType),\n      \"Actual Hours\": item.actualHoursStd + item.actualHoursDouble + item.actualHoursOvertime,\n      \"Request Code\": item.requestId\n    }));\n    callback();\n  }\n  saveAsExcelFile(buffer, fileName) {\n    const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const EXCEL_EXTENSION = '.xlsx';\n    const data = new Blob([buffer], {\n      type: EXCEL_TYPE\n    });\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n  }\n  getTechnicianName(id) {\n    const data = this.technicianData.filter(each => each.cfId === id);\n    return data[0].name;\n  }\n  onClear() {\n    this.filterPanel.reset();\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        showType: this.showType\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.bps.unregister(this);\n  }\n  static #_ = this.ɵfac = function TechnicianTimeUsageAnalysisComponent_Factory(t) {\n    return new (t || TechnicianTimeUsageAnalysisComponent)(i0.ɵɵdirectiveInject(i1.CraftspersonService), i0.ɵɵdirectiveInject(i2.DatePipe), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.EnumService), i0.ɵɵdirectiveInject(i5.TechnicianTimeUsageanalysisService), i0.ɵɵdirectiveInject(i6.BreakpointService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TechnicianTimeUsageAnalysisComponent,\n    selectors: [[\"app-technician-time-usage-analysis\"]],\n    inputs: {\n      showType: \"showType\"\n    },\n    decls: 12,\n    vars: 9,\n    consts: [[\"header\", \"Technician Time Usage\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [\"pTemplate\", \"header\"], [1, \"card\"], [\"styleClass\", \"p-datatable-customers p-datatable-gridlines\", 3, \"rows\", \"value\", \"paginator\", \"loading\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"header\", \"Work Log Details\", 3, \"visible\", \"draggable\", \"modal\", \"style\", \"visibleChange\", 4, \"ngIf\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"technicianId\", \"bindLabel\", \"name\", \"bindValue\", \"cfId\", \"placeholder\", \"Make a Selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateFrom\", \"formControlName\", \"dateFrom\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateTo\", \"formControlName\", \"dateTo\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"showType\", \"bindLabel\", \"label\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"justify-content\", \"center\", \"margin-top\", \"12.5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"filter-search-button\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull-right\", \"filter-clear-button\", 3, \"click\"], [2, \"width\", \"30%\"], [1, \"xls-container\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-excel\", \"matTooltip\", \"XLS\", \"matTooltipPosition\", \"below\", 1, \"p-button-success\", \"p-mr-2\", \"pull-right\", 2, \"margin-left\", \"auto\", 3, \"disabled\", \"click\"], [\"pSortableColumn\", \"formatedScheduledDate\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"formatedScheduledDate\"], [\"type\", \"text\", \"field\", \"formatedScheduledDate\", \"display\", \"menu\"], [\"pSortableColumn\", \"timeAssign\"], [\"field\", \"timeAssign\"], [\"type\", \"text\", \"field\", \"timeAssign\", \"display\", \"menu\"], [\"pSortableColumn\", \"hoursRequired\"], [\"field\", \"hoursRequired\"], [\"type\", \"text\", \"field\", \"hoursRequired\", \"display\", \"menu\"], [\"pSortableColumn\", \"actualHours\"], [\"field\", \"actualHours\"], [\"type\", \"text\", \"field\", \"actualHours\", \"display\", \"menu\"], [\"pSortableColumn\", \"requestId\"], [\"field\", \"requestId\"], [\"type\", \"text\", \"field\", \"requestId\", \"display\", \"menu\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-info-circle\", \"matTooltip\", \"View Detailed Log\", 1, \"p-button-rounded\", \"pull-right\", 2, \"height\", \"16px !important\", \"width\", \"16px\", 3, \"click\"], [\"header\", \"Work Log Details\", 3, \"visible\", \"draggable\", \"modal\", \"visibleChange\"], [\"pSortableColumn\", \"workType\"], [\"field\", \"workType\"], [\"field\", \"workType\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"pSortableColumn\", \"actualHoursStd\"], [\"field\", \"actualHoursStd\"], [\"type\", \"text\", \"field\", \"actualHoursStd\", \"display\", \"menu\"], [\"pSortableColumn\", \"actualHoursDouble\"], [\"field\", \"actualHoursDouble\"], [\"type\", \"text\", \"field\", \"actualHoursDouble\", \"display\", \"menu\"], [\"pSortableColumn\", \"actualHoursOvertime\"], [\"field\", \"actualHoursOvertime\"], [\"type\", \"text\", \"field\", \"actualHoursOvertime\", \"display\", \"menu\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a work type\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"]],\n    template: function TechnicianTimeUsageAnalysisComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-panel\", 0)(1, \"form\", 1);\n        i0.ɵɵtemplate(2, TechnicianTimeUsageAnalysisComponent_table_2_Template, 30, 10, \"table\", 2);\n        i0.ɵɵtemplate(3, TechnicianTimeUsageAnalysisComponent_table_3_Template, 31, 10, \"table\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"p-panel\");\n        i0.ɵɵtemplate(5, TechnicianTimeUsageAnalysisComponent_ng_template_5_Template, 2, 1, \"ng-template\", 3);\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"p-table\", 5);\n        i0.ɵɵtemplate(8, TechnicianTimeUsageAnalysisComponent_ng_template_8_Template, 41, 0, \"ng-template\", 3);\n        i0.ɵɵtemplate(9, TechnicianTimeUsageAnalysisComponent_ng_template_9_Template, 13, 8, \"ng-template\", 6);\n        i0.ɵɵtemplate(10, TechnicianTimeUsageAnalysisComponent_ng_template_10_Template, 3, 1, \"ng-template\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(11, TechnicianTimeUsageAnalysisComponent_p_dialog_11_Template, 5, 10, \"p-dialog\", 8);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"toggleable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"value\", ctx.technicanTimeUsageanalysisData)(\"paginator\", false)(\"loading\", ctx.loading);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDetails);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i7.PrimeTemplate, i8.Table, i8.SortableColumn, i8.SortIcon, i8.ColumnFilter, i9.Calendar, i10.ButtonDirective, i11.Dialog, i12.Dropdown, i13.Panel, i3.FormGroupDirective, i3.FormControlName, i14.NgSelectComponent, i2.DatePipe],\n    styles: [\"@charset \\\"UTF-8\\\";\\n.ellipsis[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n  p-datatable-scrollable-header-box {\\n  padding: 0px;\\n}\\n\\n  .p-panel .p-panel-content {\\n  border: none !important;\\n  padding: 0px !important;\\n}\\n\\n  .ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value {\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  white-space: nowrap !important;\\n  max-width: 280px !important;\\n}\\n\\n[_nghost-%COMP%]     .pi-chevron-down:before {\\n  content: \\\"\\u2212\\\" !important;\\n  font-size: 1.5rem;\\n  font-weight: bold;\\n  color: #0d89ec;\\n}\\n\\n[_nghost-%COMP%]     .pi-chevron-right:before {\\n  content: \\\"+\\\" !important;\\n  font-size: 1.5rem;\\n  font-weight: bold;\\n  color: #0d89ec;\\n}\\n\\n.hold-dialog-header[_ngcontent-%COMP%] {\\n  margin-left: 5px;\\n  font-weight: bold;\\n  font-size: 14px;\\n}\\n\\n[_nghost-%COMP%]     .p-dialog .p-dialog-content {\\n  padding: 0 1.5rem 0rem 1.5rem;\\n}\\n\\n.xls-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.filter-search-button[_ngcontent-%COMP%] {\\n  width: 80px;\\n  margin: 0px 20px 0px 0px;\\n}\\n\\n.filter-clear-button[_ngcontent-%COMP%] {\\n  width: 80px;\\n  margin-left: -5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svdGVjaG5pY2lhbi10aW1lLXVzYWdlLWFuYWx5c2lzL21vZGVsL3RlY2huaWNpYW4tdGltZS11c2FnZS1hbmFseXNpcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUFDaEI7RUFDSSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsdUJBQUE7QUFDSjs7QUFFQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLHVCQUFBO0VBQ0EsdUJBQUE7QUFDRjs7QUFFQTtFQUNFLDJCQUFBO0VBQ0Esa0NBQUE7RUFDQSw4QkFBQTtFQUNBLDJCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx1QkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSx1QkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBRUUsNkJBQUE7QUFBRjs7QUFHQTtFQUNFLFdBQUE7QUFBRjs7QUFHQTtFQUNFLFdBQUE7RUFDQSx3QkFBQTtBQUFGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGlCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcvc3JjL3Njc3MvdmFyaWFibGVzJztcbi5lbGxpcHNpc3tcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyBcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyBcbiAgfVxuXG46Om5nLWRlZXAgcC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1oZWFkZXItYm94IHtcbiAgcGFkZGluZzogMHB4O1xufVxuXG46Om5nLWRlZXAgLnAtcGFuZWwgLnAtcGFuZWwtY29udGVudCB7XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5uZy1zZWxlY3Qubmctc2VsZWN0LXNpbmdsZSAubmctc2VsZWN0LWNvbnRhaW5lciAubmctdmFsdWUtY29udGFpbmVyIC5uZy12YWx1ZSB7XG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXMgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuICBtYXgtd2lkdGg6IDI4MHB4ICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucGktY2hldnJvbi1kb3duOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFwyMjEyXCIgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzBkODllYztcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5waS1jaGV2cm9uLXJpZ2h0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFwwMDJCXCIgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzBkODllYztcbn1cblxuLmhvbGQtZGlhbG9nLWhlYWRlciB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG4gIGZvbnQtd2VpZ2h0OmJvbGQ7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRpYWxvZyAucC1kaWFsb2ctY29udGVudCB7XG4gXG4gIHBhZGRpbmc6IDAgMS41cmVtIDByZW0gMS41cmVtO1xufVxuXG4ueGxzLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZmlsdGVyLXNlYXJjaC1idXR0b257XG4gIHdpZHRoOiA4MHB4OyBcbiAgbWFyZ2luOiAwcHggMjBweCAwcHggMHB4O1xufVxuLmZpbHRlci1jbGVhci1idXR0b257XG4gIHdpZHRoOiA4MHB4O1xuICBtYXJnaW4tbGVmdDogLTA1cHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","UtilConstant","FileSaver","XLSX","BreakpointService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","TechnicianTimeUsageAnalysisComponent_table_2_Template_button_click_28_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","onSearch","TechnicianTimeUsageAnalysisComponent_table_2_Template_button_click_29_listener","ctx_r9","onClear","ɵɵadvance","ɵɵproperty","ctx_r0","technicianData","showRequestsTypeList","filterPanel","valid","TechnicianTimeUsageAnalysisComponent_table_3_Template_button_click_29_listener","_r11","ctx_r10","TechnicianTimeUsageAnalysisComponent_table_3_Template_button_click_30_listener","ctx_r12","ctx_r1","TechnicianTimeUsageAnalysisComponent_ng_template_5_Template_button_click_1_listener","_r14","ctx_r13","exportExcel","ctx_r2","technicanTimeUsageanalysisData","length","TechnicianTimeUsageAnalysisComponent_ng_template_9_Template_button_click_9_listener","restoredCtx","_r17","techTime_r15","$implicit","ctx_r16","getWorkingHoursByTechnicianIdAndRequestId","requestId","ɵɵtextInterpolate","ɵɵpipeBind2","dateAssign","ctx_r4","convertToDisplayTime","timeAssign","hoursRequired","ɵɵtextInterpolate1","actualHoursStd","actualHoursDouble","actualHoursOvertime","ɵɵattribute","TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_2_ng_template_5_Template_p_dropdown_onChange_0_listener","$event","_r26","filter_r24","filterCallback","value","value_r23","ctx_r22","enumWorkType","ɵɵtemplate","TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_2_ng_template_5_Template","ctx_r20","getEnumById","techTime_r27","workType","ctx_r21","technicanData","TechnicianTimeUsageAnalysisComponent_p_dialog_11_Template_p_dialog_visibleChange_0_listener","_r30","ctx_r29","showDetails","TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_2_Template","TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_3_Template","TechnicianTimeUsageAnalysisComponent_p_dialog_11_ng_template_4_Template","ɵɵstyleMap","ɵɵpureFunction0","_c0","ctx_r6","rowCount","loading","TechnicianTimeUsageAnalysisComponent","constructor","cfSrv","datePipe","formBuilder","enumsrv","technicianTimeUsageanalysisService","bps","ROW_COUNT","enumList","req_array","enableDetailsBtn","enumTechRequLogData","enumClonedList","isTableRecordLoading","isErr","errorMsg","isShow","totalActualHr","label","showType","useTabletProtrait","group","technicianId","required","dateFrom","dateTo","ngOnInit","register","loadTechinician","loadEnums","date","Date","firstDay","getFullYear","getMonth","lastDay","setTimeout","patchValue","notify","loadRecords","filterData","getFilterData","getRequestByTechnicianTime","fromDate","controls","toDate","transform","filter","subscribe","res","map","each","formatedScheduledDate","error","getAllCraftsperson","getEnums","x","Object","assign","t","tableName","toLocaleUpperCase","fieldName","enumKey","find","enumValue","data","split","time","onClick","onRowClick","event","postData","filterdata","excelHeaders","options","header","worksheet","utils","json_to_sheet","wch","workbook","Sheets","SheetNames","excelBuffer","write","bookType","type","saveAsExcelFile","getDestructuredData","callback","item","getTechnicianName","buffer","fileName","EXCEL_TYPE","EXCEL_EXTENSION","Blob","saveAs","getTime","id","cfId","name","reset","ngOnDestroy","unregister","_","ɵɵdirectiveInject","i1","CraftspersonService","i2","DatePipe","i3","UntypedFormBuilder","i4","EnumService","i5","TechnicianTimeUsageanalysisService","i6","_2","selectors","inputs","decls","vars","consts","template","TechnicianTimeUsageAnalysisComponent_Template","rf","ctx","TechnicianTimeUsageAnalysisComponent_table_2_Template","TechnicianTimeUsageAnalysisComponent_table_3_Template","TechnicianTimeUsageAnalysisComponent_ng_template_5_Template","TechnicianTimeUsageAnalysisComponent_ng_template_8_Template","TechnicianTimeUsageAnalysisComponent_ng_template_9_Template","TechnicianTimeUsageAnalysisComponent_ng_template_10_Template","TechnicianTimeUsageAnalysisComponent_p_dialog_11_Template"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/technician-time-usage-analysis/model/technician-time-usage-analysis.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/technician-time-usage-analysis/model/technician-time-usage-analysis.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { CraftspersonService } from '../../craftsperson/services/craftsperson.service';\nimport { DatePipe } from '@angular/common';\nimport { TechnicianTimeUsageanalysisService } from '../services/technician-time-usage-analysis.services';\nimport { EnumService } from 'src/app/services/enum.service';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\n\n@Component({\n  selector: 'app-technician-time-usage-analysis',\n  templateUrl: './technician-time-usage-analysis.component.html',\n  styleUrls: ['./technician-time-usage-analysis.component.scss']\n})\nexport class TechnicianTimeUsageAnalysisComponent implements OnInit {\n  filterPanel!: UntypedFormGroup;\n  loading: boolean = false;\n  rowCount: number = UtilConstant.ROW_COUNT;\n  technicianData: any[] = [];\n  technicanTimeUsageanalysisData:any[]=[];\n  technicanData:any[]=[];\n  enumWorkType: any[] = [];\n  enumList: EnumList[] = [];\n  req_array: any[] = [];\n  enableDetailsBtn:boolean = false;\n  enumTechRequLogData: EnumList[] = [];\n  enumClonedList: EnumList[] = [];\n  isTableRecordLoading = false;\n  isErr: boolean = false;\n  errorMsg: string = '';\n  isShow = false;\n  totalActualHr:any[]=[];\n  showDetails:boolean = false;\n  showRequestsTypeList:any[] = [{label:\"Preventive Maintenance\",value:\"ppm\"},\n  {label:\"Facilities Helpdesk\",value:\"facilities\"},\n  {label:\"All\",value:\"all\"}]\n  @Input()showType:string = \"facilities\";\n  useTabletProtrait = false;\n  constructor(\n    private cfSrv: CraftspersonService,\n    private datePipe: DatePipe,\n    private formBuilder: UntypedFormBuilder,\n    private enumsrv: EnumService,\n    private technicianTimeUsageanalysisService:TechnicianTimeUsageanalysisService,\n    private bps : BreakpointService\n  ) {\n    this.filterPanel = this.formBuilder.group({\n      technicianId: [null,[Validators.required]],\n      dateFrom: [null],\n      dateTo: [null],\n      showType : [this.showType]\n     });\n   }\n\n  ngOnInit(): void {\n    this.bps.register(this);\n    this.loadTechinician();\n    // this.loadRecords();\n    this.loadEnums();\n    var date = new Date();\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    setTimeout(() => {\n     this.filterPanel.patchValue({\n       dateFrom: firstDay,\n       dateTo: lastDay,\n       showType: this.showType\n     });\n \n   });\n  }\n\n  notify(): void {\n    this.useTabletProtrait = BreakpointService.useTabletProtrait;\n  }\n  loadRecords() {\n    const filterData = this.getFilterData();\n    this.getRequestByTechnicianTime(filterData);\n  }\n  \n  getFilterData(){\n    var fromDate = this.filterPanel.controls.dateFrom.value;\n    var toDate = this.filterPanel.controls.dateTo.value;\n    var   technicianId= this.filterPanel.controls.technicianId.value;\n\n    var filterData = {\n    \n      \"fromDate\": this.datePipe.transform(fromDate, \"yyyy-MM-dd\"),\n      \"toDate\": this.datePipe.transform(toDate, \"yyyy-MM-dd\"),\n      \"technicianId\": technicianId,\n      \"showRequestType\": this.filterPanel.controls.showType.value\n    \n    };\n    return filterData;\n  }\n  getRequestByTechnicianTime(filter:any) {\n  \n    this.loading = true\n    this.technicianTimeUsageanalysisService.getRequestByTechnicianTime(filter).subscribe((res: any[]) => {\n      this.loading = false;\n     this.technicanTimeUsageanalysisData=res.map((each: any)=>{\n      return {\n        ...each,\n        formatedScheduledDate : this.datePipe.transform(each.dateAssign, 'dd MMM yyyy')\n      }\n     })\n    }, error => {\n      this.loading = false\n      this.technicanTimeUsageanalysisData=[];\n    \n    });\n  }\n\n  onSearch()\n  {\n    const filterData = this.getFilterData();\n    this.getRequestByTechnicianTime(filterData);\n  }\n  loadTechinician() {\n    this.cfSrv.getAllCraftsperson().subscribe((res: any) => {\n      if (res) {\n        this.technicianData = res;\n      } else {\n        this.technicianData = []\n      }\n    })\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: EnumList[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumTechRequLogData = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'request_technician_log'.toLocaleUpperCase());\n        this.enumWorkType = this.enumClonedList.filter(t =>t.tableName.toLocaleUpperCase() === 'request_technician_log'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'work_type'.toLocaleUpperCase());\n      \n      },\n      error => {\n      }\n    );\n  }\n  getEnumById(enumKey: any) {\n    return this.enumWorkType.find((t: any) => t.enumKey === enumKey)?.enumValue\n  }\n\n  convertToDisplayTime(value: any) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n onClick(technicianId:any)\n  {\n    var fromDate = this.filterPanel.controls.dateFrom.value;\n    var toDate = this.filterPanel.controls.dateTo.value;\n    var technicianId= this.filterPanel.controls.technicianId.value;\n    var filterData = {\n  \n      \"fromDate\": this.datePipe.transform(fromDate, \"yyyy-MM-dd\"),\n      \"toDate\": this.datePipe.transform(toDate, \"yyyy-MM-dd\"),\n     \"technicianId\":technicianId\n    };\n    this.onRowClick(filterData);\n  }\n  onRowClick(event: any) {\n    this.isShow = this.isTableRecordLoading = true;\n    let postData = {\n      ...event\n    }\n  this.getRequestByTechnicianTime(postData);\n  }\n  getWorkingHoursByTechnicianIdAndRequestId(requestId:any)\n  {\n    \n    let filterdata= {\n      requestId:requestId,\n      technicianId:this.filterPanel.controls.technicianId.value\n    }\n    this.technicianTimeUsageanalysisService.getWorkingHoursByTechnicianIdAndRequestId(filterdata).subscribe((res:any) => {\n      this.showDetails = true;\n\n      this.technicanData=res;\n    }, error => {\n      this.loading = false\n      this.technicanData=[];\n    \n\n     })\n    }\n    exportExcel() {\n      if (this.technicanTimeUsageanalysisData.length === 0) {\n        // Data is not present, only print the headings\n        var excelHeaders: string[] = [\"Technician Id\",  \"Technician Name\", \"Scheduled Date\", \"Scheduled Time\", \"Estimated Hours\", \"Work Type\", \"Actual Hours\", \"Request Code\"];\n        let options: XLSX.JSON2SheetOpts = { header: excelHeaders };\n        const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet([], options); // Provide empty data array\n    \n        worksheet['!cols'] = [\n          { wch: 20 },\n          { wch: 20 },\n          { wch: 20 },\n          { wch: 20 },\n          { wch: 20 },\n          { wch: 20 }\n        ];\n    \n        const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n        const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n        this.saveAsExcelFile(excelBuffer, \"TechnicianTimeUsageAnalysisReports\");\n      } else {\n        this.getDestructuredData(() => {\n          var excelHeaders: string[] = [\"Technician Id\", \"Technician Name\", \"Scheduled Date\", \"Scheduled Time\", \"Estimated Hours\", \"Work Type\", \"Actual Hours\", \"Request Code\"];\n          let options: XLSX.JSON2SheetOpts = { header: excelHeaders };\n          const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.req_array);\n    \n          worksheet['!cols'] = [\n            { wch: 20 },\n            { wch: 20 },\n            { wch: 20 },\n            { wch: 20 },\n            { wch: 20 },\n            { wch: 20 },\n            { wch: 20 },\n            { wch: 20 }\n          ];\n    \n          const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n          const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n          this.saveAsExcelFile(excelBuffer, \"TechnicianTimeUsageAnalysisReports\");\n        });\n      }\n    }\n    getDestructuredData(callback: () => void) {\n      if (!this.technicanTimeUsageanalysisData || this.technicanTimeUsageanalysisData.length === 0) {\n        this.req_array = [];\n        callback();\n        return;\n      }\n    \n      this.req_array = this.technicanTimeUsageanalysisData.map((item: any) => ({\n        \"Technician Id\" : item.technicianId,\n        \"Technician Name\" : this.getTechnicianName(item.technicianId),\n        \"Scheduled Date\": this.datePipe.transform(item.dateAssign, \"dd MMM yyyy\"),\n        \"Scheduled Time\": item.timeAssign,\n        \"Estimated Hours\": item.hoursRequired,\n        \"Work Type\": this.getEnumById(item.workType),\n        \"Actual Hours\": item.actualHoursStd + item.actualHoursDouble + item.actualHoursOvertime,\n        \"Request Code\": item.requestId\n      }));\n    \n      callback();\n    }\n    saveAsExcelFile(buffer: any, fileName: string): void {\n      const EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n      const EXCEL_EXTENSION = '.xlsx';\n      const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\n      FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n    }\n\n  getTechnicianName(id: any) {\n    const data = this.technicianData.filter((each: any) => (each.cfId === id));\n    return data[0].name;\n  }\n\n  onClear() {\n    this.filterPanel.reset();\n    setTimeout(() => {\n     this.filterPanel.patchValue({\n       showType: this.showType\n     });\n   });\n  }\n\n  ngOnDestroy() {\n    this.bps.unregister(this);\n  }\n\n}","<p-panel header=\"Technician Time Usage\" [toggleable]=\"true\">\n  <form [formGroup]=\"filterPanel\">\n    <table width=\"100%\" *ngIf=\"!useTabletProtrait\">\n      <tr>\n        <td style=\"width: 20%\">\n          <div class=\"input-label-custom \">\n            <label class='form-field-lable control-label'>Technician</label>\n            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"technicianData\" formControlName=\"technicianId\"\n              [searchable]=\"true\" bindLabel=\"name\" bindValue=\"cfId\" class=\"ng-select-dropdown\"\n              placeholder=\"Make a Selection\">\n            </ng-select>\n          </div>\n        </td>\n        <td style=\"width:20%\">\n          <div class=\"input-label-custom\">\n            <div class=\"p-fluid\">\n              <div class=\"p-field\">\n                <label class='form-field-lable'>Scheduled From</label>\n                <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateFrom\" formControlName=\"dateFrom\"\n                  [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td style=\"width:20%\">\n          <div class=\"input-label-custom\">\n            <div class=\"p-fluid\">\n              <div class=\"p-field\">\n                <label class='form-field-lable'>Scheduled To</label>\n                <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateTo\" formControlName=\"dateTo\"\n                  [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td style=\"width:20%\">\n          <div class=\"input-label-custom \">\n              <label class='form-field-lable'>Requests Type </label>\n              <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                  placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"showRequestsTypeList\"\n                  formControlName=\"showType\"  [searchable]=\"true\"\n                  bindLabel=\"label\" bindValue=\"value\">\n              </ng-select>\n          </div>\n      </td>\n        <td style=\"width:20%;\">\n          <div style=\"display: flex; flex-direction: row;justify-content: center; margin-top:12.5px;\">\n            <button pButton pRipple label=\"Search\" (click)=\"onSearch()\" \n              class=\"p-button-primary p-button-sm filter-search-button\" [disabled]=\"!filterPanel.valid\"></button>\n            <button pButton (click)=\"onClear()\" pRipple label=\"Clear\" \n              class=\"p-button-primary p-button-sm pull-right filter-clear-button\"></button>\n          </div>\n        </td>\n      </tr>\n    </table>\n    <table width=\"100%\" *ngIf=\"useTabletProtrait\">\n      <tr>\n        <td style=\"width: 30%\">\n          <div class=\"input-label-custom \">\n            <label class='form-field-lable control-label'>Technician</label>\n            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"technicianData\" formControlName=\"technicianId\"\n              [searchable]=\"true\" bindLabel=\"name\" bindValue=\"cfId\" class=\"ng-select-dropdown\"\n              placeholder=\"Make a Selection\">\n            </ng-select>\n          </div>\n        </td>\n        <td style=\"width:30%\">\n          <div class=\"input-label-custom\">\n            <div class=\"p-fluid\">\n              <div class=\"p-field\">\n                <label class='form-field-lable'>Scheduled From</label>\n                <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateFrom\" formControlName=\"dateFrom\"\n                  [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td style=\"width:30%\">\n          <div class=\"input-label-custom\">\n            <div class=\"p-fluid\">\n              <div class=\"p-field\">\n                <label class='form-field-lable'>Scheduled To</label>\n                <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateTo\" formControlName=\"dateTo\"\n                  [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td style=\"width:30%\">\n          <div class=\"input-label-custom \">\n              <label class='form-field-lable'>Requests Type </label>\n              <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                  placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"showRequestsTypeList\"\n                  formControlName=\"showType\"  [searchable]=\"true\"\n                  bindLabel=\"label\" bindValue=\"value\">\n              </ng-select>\n          </div>\n        </td>\n        <td style=\"width:30%;\">\n          <div style=\"display: flex; flex-direction: row;justify-content: center; margin-top:12.5px;\">\n            <button pButton pRipple label=\"Search\" (click)=\"onSearch()\" \n              class=\"p-button-primary p-button-sm filter-search-button\" [disabled]=\"!filterPanel.valid\"></button>\n            <button pButton (click)=\"onClear()\" pRipple label=\"Clear\" \n              class=\"p-button-primary p-button-sm pull-right filter-clear-button\"></button>\n          </div>\n        </td>\n      </tr>\n    </table>\n  </form>\n</p-panel>\n<p-panel>\n  <ng-template pTemplate=\"header\">\n      <div class=\"xls-container\">\n        <button type=\"button\" (click)=\"exportExcel()\" pButton pRipple icon=\"pi pi-file-excel\"\n          class=\"p-button-success p-mr-2 pull-right\" style=\"margin-left: auto;\" matTooltip=\"XLS\" matTooltipPosition=\"below\"\n          [disabled]=\"!(technicanTimeUsageanalysisData.length > 0)\"></button>\n      </div>\n  </ng-template>\n  <div class=\"card\">\n    <p-table [rows]=\"rowCount\" [value]=\"technicanTimeUsageanalysisData\"\n      styleClass=\"p-datatable-customers p-datatable-gridlines\" [paginator]=\"false\" \n      [loading]=\"loading\">\n      <ng-template pTemplate=\"header\">\n        <tr>\n          <th pSortableColumn=\"formatedScheduledDate\">\n            <div class=\"grid-header-column\">\n              <div class=\"grid-header-label\">\n                <p class=\"grid-label-paragraph\">Scheduled Date</p>\n              </div>\n              <div class=\"grid-sort-icon\">\n                <p-sortIcon field=\"formatedScheduledDate\"></p-sortIcon>\n                <p-columnFilter type=\"text\" field=\"formatedScheduledDate\" display=\"menu\"></p-columnFilter>\n              </div>\n            </div>\n          </th>\n          <th pSortableColumn=\"timeAssign\">\n            <div class=\"grid-header-column\">\n              <div class=\"grid-header-label\">\n                <p class=\"grid-label-paragraph\">Scheduled Time</p>\n              </div>\n              <div class=\"grid-sort-icon\">\n                <p-sortIcon field=\"timeAssign\"></p-sortIcon>\n                <p-columnFilter type=\"text\" field=\"timeAssign\" display=\"menu\"></p-columnFilter>\n              </div>\n            </div>\n          </th>\n          <th pSortableColumn=\"hoursRequired\">\n            <div class=\"grid-header-column\">\n              <div class=\"grid-header-label\">\n                <p class=\"grid-label-paragraph\">Estimated Hours</p>\n              </div>\n              <div class=\"grid-sort-icon\">\n                <p-sortIcon field=\"hoursRequired\"></p-sortIcon>\n                <p-columnFilter type=\"text\" field=\"hoursRequired\" display=\"menu\"></p-columnFilter>\n              </div>\n            </div>\n          </th>\n          <th pSortableColumn=\"actualHours\">\n            <div class=\"grid-header-column\">\n              <div class=\"grid-header-label\">\n                <p class=\"grid-label-paragraph\">Actual Hours</p>\n              </div>\n              <div class=\"grid-sort-icon\">\n                <p-sortIcon field=\"actualHours\"></p-sortIcon>\n                <p-columnFilter type=\"text\" field=\"actualHours\" display=\"menu\"></p-columnFilter>\n              </div>\n            </div>\n          </th>\n          <th pSortableColumn=\"requestId\">\n            <div class=\"grid-header-column\">\n              <div class=\"grid-header-label\">\n                <p class=\"grid-label-paragraph\">Request Code</p>\n              </div>\n              <div class=\"grid-sort-icon\">\n                <p-sortIcon field=\"requestId\"></p-sortIcon>\n                <p-columnFilter type=\"text\" field=\"requestId\" display=\"menu\"></p-columnFilter>\n              </div>\n            </div>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-techTime>\n        <tr>\n          <td>{{techTime.dateAssign | date :\"dd MMM yyyy\"}}</td>\n          <td>{{convertToDisplayTime(techTime.timeAssign)}}</td>\n          <td>{{techTime.hoursRequired }}</td>\n          <td>\n            <button pButton pRipple icon=\"pi pi-info-circle\"\n              (click)=\"getWorkingHoursByTechnicianIdAndRequestId(techTime.requestId)\" matTooltip=\"View Detailed Log\"\n              class=\"p-button-rounded pull-right\" style=\"height: 16px !important; width: 16px;\"></button>\n            {{techTime.actualHoursStd + techTime.actualHoursDouble + techTime.actualHoursOvertime}}\n          </td>\n          <td>{{techTime.requestId}}</td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\" let-columns>\n        <tr>\n          <td [attr.colspan]=\"5\">\n            No records found.\n          </td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </div>\n</p-panel>\n<p-dialog header=\"Work Log Details\" [(visible)]=\"showDetails\" [draggable]=\"false\" [modal]=\"true\" *ngIf=\"showDetails\"\n  [style]=\"{width: '50vw'}\">\n\n  <p-table [rows]=\"rowCount\" [value]=\"technicanData\" styleClass=\"p-datatable-customers p-datatable-gridlines\"\n    [paginator]=\"false\"  [loading]=\"loading\">\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th pSortableColumn=\"workType\">\n          Work Type<p-sortIcon field=\"workType\"></p-sortIcon>\n          <p-columnFilter field=\"workType\" matchMode=\"equals\" display=\"menu\">\n            <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n              <p-dropdown [ngModel]=\"value\" [options]=\"enumWorkType\" optionLabel=\"enumValue\" optionValue=\"enumKey\"\n                (onChange)=\"filter($event.value)\" placeholder=\"Select a work type\" [showClear]=\"true\"></p-dropdown>\n            </ng-template>\n          </p-columnFilter>\n        </th>\n        <th pSortableColumn=\"actualHoursStd\">\n          Standard Hours<p-sortIcon field=\"actualHoursStd\"></p-sortIcon>\n          <p-columnFilter type=\"text\" field=\"actualHoursStd\" display=\"menu\"></p-columnFilter>\n        </th>\n        <th pSortableColumn=\"actualHoursDouble\">\n          Double Hours<p-sortIcon field=\"actualHoursDouble\"></p-sortIcon>\n          <p-columnFilter type=\"text\" field=\"actualHoursDouble\" display=\"menu\"></p-columnFilter>\n        </th>\n        <th pSortableColumn=\"actualHoursOvertime\">\n          Overtime Hours<p-sortIcon field=\"actualHoursOvertime\"></p-sortIcon>\n          <p-columnFilter type=\"text\" field=\"actualHoursOvertime\" display=\"menu\"></p-columnFilter>\n        </th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-techTime>\n      <tr>\n        <td>{{getEnumById(techTime.workType)}}</td>\n        <td>{{techTime.actualHoursStd}}</td>\n        <td>{{techTime.actualHoursDouble}}</td>\n        <td>{{techTime.actualHoursOvertime}}</td>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\" let-columns>\n      <tr>\n        <td [attr.colspan]=\"technicanData.length\">\n          No Records.\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n</p-dialog>"],"mappings":"AACA,SAA+CA,UAAU,QAAQ,gBAAgB;AACjF,SAASC,YAAY,QAAQ,yBAAyB;AAKtD,OAAO,KAAKC,SAAS,MAAM,YAAY;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAE5B,SAASC,iBAAiB,QAAQ,qCAAqC;;;;;;;;;;;;;;;;;;;ICRnEC,EAAA,CAAAC,cAAA,eAA+C;IAIOD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAChEH,EAAA,CAAAI,SAAA,oBAGY;IACdJ,EAAA,CAAAG,YAAA,EAAM;IAERH,EAAA,CAAAC,cAAA,aAAsB;IAIkBD,EAAA,CAAAE,MAAA,sBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACtDH,EAAA,CAAAI,SAAA,sBACiD;IACnDJ,EAAA,CAAAG,YAAA,EAAM;IAIZH,EAAA,CAAAC,cAAA,cAAsB;IAIkBD,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACpDH,EAAA,CAAAI,SAAA,sBACiD;IACnDJ,EAAA,CAAAG,YAAA,EAAM;IAIZH,EAAA,CAAAC,cAAA,cAAsB;IAEgBD,EAAA,CAAAE,MAAA,sBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACtDH,EAAA,CAAAI,SAAA,qBAIY;IAChBJ,EAAA,CAAAG,YAAA,EAAM;IAERH,EAAA,CAAAC,cAAA,cAAuB;IAEoBD,EAAA,CAAAK,UAAA,mBAAAC,+EAAA;MAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC;IACiCZ,EAAA,CAAAG,YAAA,EAAS;IACrGH,EAAA,CAAAC,cAAA,kBACsE;IADtDD,EAAA,CAAAK,UAAA,mBAAAQ,+EAAA;MAAAb,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAM,MAAA,GAAAd,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAG,MAAA,CAAAC,OAAA,EAAS;IAAA,EAAC;IACmCf,EAAA,CAAAG,YAAA,EAAS;;;;IA3CpDH,EAAA,CAAAgB,SAAA,GAAmB;IAAnBhB,EAAA,CAAAiB,UAAA,oBAAmB,UAAAC,MAAA,CAAAC,cAAA;IAYxCnB,EAAA,CAAAgB,SAAA,GAAkB;IAAlBhB,EAAA,CAAAiB,UAAA,mBAAkB;IAWlBjB,EAAA,CAAAgB,SAAA,GAAkB;IAAlBhB,EAAA,CAAAiB,UAAA,mBAAkB;IAQKjB,EAAA,CAAAgB,SAAA,GAAmB;IAAnBhB,EAAA,CAAAiB,UAAA,oBAAmB,8BAAAC,MAAA,CAAAE,oBAAA;IAUYpB,EAAA,CAAAgB,SAAA,GAA+B;IAA/BhB,EAAA,CAAAiB,UAAA,cAAAC,MAAA,CAAAG,WAAA,CAAAC,KAAA,CAA+B;;;;;;IAOnGtB,EAAA,CAAAC,cAAA,eAA8C;IAIQD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAChEH,EAAA,CAAAI,SAAA,oBAGY;IACdJ,EAAA,CAAAG,YAAA,EAAM;IAERH,EAAA,CAAAC,cAAA,aAAsB;IAIkBD,EAAA,CAAAE,MAAA,sBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACtDH,EAAA,CAAAI,SAAA,sBACiD;IACnDJ,EAAA,CAAAG,YAAA,EAAM;IAIZH,EAAA,CAAAC,cAAA,cAAsB;IAIkBD,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACpDH,EAAA,CAAAI,SAAA,sBACiD;IACnDJ,EAAA,CAAAG,YAAA,EAAM;IAKdH,EAAA,CAAAC,cAAA,UAAI;IAGoCD,EAAA,CAAAE,MAAA,sBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IACtDH,EAAA,CAAAI,SAAA,qBAIY;IAChBJ,EAAA,CAAAG,YAAA,EAAM;IAERH,EAAA,CAAAC,cAAA,cAAuB;IAEoBD,EAAA,CAAAK,UAAA,mBAAAkB,+EAAA;MAAAvB,EAAA,CAAAO,aAAA,CAAAiB,IAAA;MAAA,MAAAC,OAAA,GAAAzB,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAc,OAAA,CAAAb,QAAA,EAAU;IAAA,EAAC;IACiCZ,EAAA,CAAAG,YAAA,EAAS;IACrGH,EAAA,CAAAC,cAAA,kBACsE;IADtDD,EAAA,CAAAK,UAAA,mBAAAqB,+EAAA;MAAA1B,EAAA,CAAAO,aAAA,CAAAiB,IAAA;MAAA,MAAAG,OAAA,GAAA3B,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAgB,OAAA,CAAAZ,OAAA,EAAS;IAAA,EAAC;IACmCf,EAAA,CAAAG,YAAA,EAAS;;;;IA7CpDH,EAAA,CAAAgB,SAAA,GAAmB;IAAnBhB,EAAA,CAAAiB,UAAA,oBAAmB,UAAAW,MAAA,CAAAT,cAAA;IAYxCnB,EAAA,CAAAgB,SAAA,GAAkB;IAAlBhB,EAAA,CAAAiB,UAAA,mBAAkB;IAWlBjB,EAAA,CAAAgB,SAAA,GAAkB;IAAlBhB,EAAA,CAAAiB,UAAA,mBAAkB;IAUKjB,EAAA,CAAAgB,SAAA,GAAmB;IAAnBhB,EAAA,CAAAiB,UAAA,oBAAmB,8BAAAW,MAAA,CAAAR,oBAAA;IAUYpB,EAAA,CAAAgB,SAAA,GAA+B;IAA/BhB,EAAA,CAAAiB,UAAA,cAAAW,MAAA,CAAAP,WAAA,CAAAC,KAAA,CAA+B;;;;;;IAWjGtB,EAAA,CAAAC,cAAA,cAA2B;IACHD,EAAA,CAAAK,UAAA,mBAAAwB,oFAAA;MAAA7B,EAAA,CAAAO,aAAA,CAAAuB,IAAA;MAAA,MAAAC,OAAA,GAAA/B,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAoB,OAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAEehC,EAAA,CAAAG,YAAA,EAAS;;;;IAAnEH,EAAA,CAAAgB,SAAA,GAAyD;IAAzDhB,EAAA,CAAAiB,UAAA,eAAAgB,MAAA,CAAAC,8BAAA,CAAAC,MAAA,MAAyD;;;;;IAQ3DnC,EAAA,CAAAC,cAAA,SAAI;IAIoCD,EAAA,CAAAE,MAAA,qBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEpDH,EAAA,CAAAC,cAAA,cAA4B;IAC1BD,EAAA,CAAAI,SAAA,qBAAuD;IAEzDJ,EAAA,CAAAG,YAAA,EAAM;IAGVH,EAAA,CAAAC,cAAA,aAAiC;IAGKD,EAAA,CAAAE,MAAA,sBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEpDH,EAAA,CAAAC,cAAA,eAA4B;IAC1BD,EAAA,CAAAI,SAAA,sBAA4C;IAE9CJ,EAAA,CAAAG,YAAA,EAAM;IAGVH,EAAA,CAAAC,cAAA,cAAoC;IAGED,EAAA,CAAAE,MAAA,uBAAe;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAErDH,EAAA,CAAAC,cAAA,eAA4B;IAC1BD,EAAA,CAAAI,SAAA,sBAA+C;IAEjDJ,EAAA,CAAAG,YAAA,EAAM;IAGVH,EAAA,CAAAC,cAAA,cAAkC;IAGID,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAElDH,EAAA,CAAAC,cAAA,eAA4B;IAC1BD,EAAA,CAAAI,SAAA,sBAA6C;IAE/CJ,EAAA,CAAAG,YAAA,EAAM;IAGVH,EAAA,CAAAC,cAAA,cAAgC;IAGMD,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAElDH,EAAA,CAAAC,cAAA,eAA4B;IAC1BD,EAAA,CAAAI,SAAA,sBAA2C;IAE7CJ,EAAA,CAAAG,YAAA,EAAM;;;;;;IAMZH,EAAA,CAAAC,cAAA,SAAI;IACED,EAAA,CAAAE,MAAA,GAA6C;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACtDH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA6C;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACtDH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACpCH,EAAA,CAAAC,cAAA,SAAI;IAEAD,EAAA,CAAAK,UAAA,mBAAA+B,oFAAA;MAAA,MAAAC,WAAA,GAAArC,EAAA,CAAAO,aAAA,CAAA+B,IAAA;MAAA,MAAAC,YAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,OAAA,GAAAzC,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAA8B,OAAA,CAAAC,yCAAA,CAAAH,YAAA,CAAAI,SAAA,CAA6D;IAAA,EAAC;IACW3C,EAAA,CAAAG,YAAA,EAAS;IAC7FH,EAAA,CAAAE,MAAA,IACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IAT3BH,EAAA,CAAAgB,SAAA,GAA6C;IAA7ChB,EAAA,CAAA4C,iBAAA,CAAA5C,EAAA,CAAA6C,WAAA,OAAAN,YAAA,CAAAO,UAAA,iBAA6C;IAC7C9C,EAAA,CAAAgB,SAAA,GAA6C;IAA7ChB,EAAA,CAAA4C,iBAAA,CAAAG,MAAA,CAAAC,oBAAA,CAAAT,YAAA,CAAAU,UAAA,EAA6C;IAC7CjD,EAAA,CAAAgB,SAAA,GAA2B;IAA3BhB,EAAA,CAAA4C,iBAAA,CAAAL,YAAA,CAAAW,aAAA,CAA2B;IAK7BlD,EAAA,CAAAgB,SAAA,GACF;IADEhB,EAAA,CAAAmD,kBAAA,MAAAZ,YAAA,CAAAa,cAAA,GAAAb,YAAA,CAAAc,iBAAA,GAAAd,YAAA,CAAAe,mBAAA,MACF;IACItD,EAAA,CAAAgB,SAAA,GAAsB;IAAtBhB,EAAA,CAAA4C,iBAAA,CAAAL,YAAA,CAAAI,SAAA,CAAsB;;;;;IAI5B3C,EAAA,CAAAC,cAAA,SAAI;IAEAD,EAAA,CAAAE,MAAA,0BACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;IAFDH,EAAA,CAAAgB,SAAA,GAAkB;IAAlBhB,EAAA,CAAAuD,WAAA,cAAkB;;;;;;IAmBlBvD,EAAA,CAAAC,cAAA,qBACwF;IAAtFD,EAAA,CAAAK,UAAA,sBAAAmD,qHAAAC,MAAA;MAAA,MAAApB,WAAA,GAAArC,EAAA,CAAAO,aAAA,CAAAmD,IAAA;MAAA,MAAAC,UAAA,GAAAtB,WAAA,CAAAuB,cAAA;MAAA,OAAY5D,EAAA,CAAAW,WAAA,CAAAgD,UAAA,CAAAF,MAAA,CAAAI,KAAA,CAAoB;IAAA,EAAC;IAAqD7D,EAAA,CAAAG,YAAA,EAAa;;;;;IADzFH,EAAA,CAAAiB,UAAA,YAAA6C,SAAA,CAAiB,YAAAC,OAAA,CAAAC,YAAA;;;;;IALrChE,EAAA,CAAAC,cAAA,SAAI;IAEAD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAI,SAAA,qBAA0C;IACnDJ,EAAA,CAAAC,cAAA,yBAAmE;IACjED,EAAA,CAAAiE,UAAA,IAAAC,qFAAA,0BAGc;IAChBlE,EAAA,CAAAG,YAAA,EAAiB;IAEnBH,EAAA,CAAAC,cAAA,aAAqC;IACnCD,EAAA,CAAAE,MAAA,sBAAc;IAAAF,EAAA,CAAAI,SAAA,qBAAgD;IAEhEJ,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,cAAwC;IACtCD,EAAA,CAAAE,MAAA,qBAAY;IAAAF,EAAA,CAAAI,SAAA,sBAAmD;IAEjEJ,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,cAA0C;IACxCD,EAAA,CAAAE,MAAA,uBAAc;IAAAF,EAAA,CAAAI,SAAA,sBAAqD;IAErEJ,EAAA,CAAAG,YAAA,EAAK;;;;;IAIPH,EAAA,CAAAC,cAAA,SAAI;IACED,EAAA,CAAAE,MAAA,GAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3CH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACpCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA8B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAgC;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IAHrCH,EAAA,CAAAgB,SAAA,GAAkC;IAAlChB,EAAA,CAAA4C,iBAAA,CAAAuB,OAAA,CAAAC,WAAA,CAAAC,YAAA,CAAAC,QAAA,EAAkC;IAClCtE,EAAA,CAAAgB,SAAA,GAA2B;IAA3BhB,EAAA,CAAA4C,iBAAA,CAAAyB,YAAA,CAAAjB,cAAA,CAA2B;IAC3BpD,EAAA,CAAAgB,SAAA,GAA8B;IAA9BhB,EAAA,CAAA4C,iBAAA,CAAAyB,YAAA,CAAAhB,iBAAA,CAA8B;IAC9BrD,EAAA,CAAAgB,SAAA,GAAgC;IAAhChB,EAAA,CAAA4C,iBAAA,CAAAyB,YAAA,CAAAf,mBAAA,CAAgC;;;;;IAItCtD,EAAA,CAAAC,cAAA,SAAI;IAEAD,EAAA,CAAAE,MAAA,oBACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAFDH,EAAA,CAAAgB,SAAA,GAAqC;IAArChB,EAAA,CAAAuD,WAAA,YAAAgB,OAAA,CAAAC,aAAA,CAAArC,MAAA,CAAqC;;;;;;;;;;;IAxCjDnC,EAAA,CAAAC,cAAA,mBAC4B;IADQD,EAAA,CAAAK,UAAA,2BAAAoE,4FAAAhB,MAAA;MAAAzD,EAAA,CAAAO,aAAA,CAAAmE,IAAA;MAAA,MAAAC,OAAA,GAAA3E,EAAA,CAAAU,aAAA;MAAA,OAAAV,EAAA,CAAAW,WAAA,CAAAgE,OAAA,CAAAC,WAAA,GAAAnB,MAAA;IAAA,EAAyB;IAG3DzD,EAAA,CAAAC,cAAA,iBAC2C;IACzCD,EAAA,CAAAiE,UAAA,IAAAY,uEAAA,0BAwBc;IACd7E,EAAA,CAAAiE,UAAA,IAAAa,uEAAA,yBAOc;IACd9E,EAAA,CAAAiE,UAAA,IAAAc,uEAAA,yBAMc;IAChB/E,EAAA,CAAAG,YAAA,EAAU;;;;IA5CVH,EAAA,CAAAgF,UAAA,CAAAhF,EAAA,CAAAiF,eAAA,IAAAC,GAAA,EAAyB;IADSlF,EAAA,CAAAiB,UAAA,YAAAkE,MAAA,CAAAP,WAAA,CAAyB;IAGlD5E,EAAA,CAAAgB,SAAA,GAAiB;IAAjBhB,EAAA,CAAAiB,UAAA,SAAAkE,MAAA,CAAAC,QAAA,CAAiB,UAAAD,MAAA,CAAAX,aAAA,iCAAAW,MAAA,CAAAE,OAAA;;;ADjM5B,OAAM,MAAOC,oCAAoC;EAwB/CC,YACUC,KAA0B,EAC1BC,QAAkB,EAClBC,WAA+B,EAC/BC,OAAoB,EACpBC,kCAAqE,EACrEC,GAAuB;IALvB,KAAAL,KAAK,GAALA,KAAK;IACL,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,kCAAkC,GAAlCA,kCAAkC;IAClC,KAAAC,GAAG,GAAHA,GAAG;IA5Bb,KAAAR,OAAO,GAAY,KAAK;IACxB,KAAAD,QAAQ,GAAWxF,YAAY,CAACkG,SAAS;IACzC,KAAA3E,cAAc,GAAU,EAAE;IAC1B,KAAAe,8BAA8B,GAAO,EAAE;IACvC,KAAAsC,aAAa,GAAO,EAAE;IACtB,KAAAR,YAAY,GAAU,EAAE;IACxB,KAAA+B,QAAQ,GAAe,EAAE;IACzB,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAC,gBAAgB,GAAW,KAAK;IAChC,KAAAC,mBAAmB,GAAe,EAAE;IACpC,KAAAC,cAAc,GAAe,EAAE;IAC/B,KAAAC,oBAAoB,GAAG,KAAK;IAC5B,KAAAC,KAAK,GAAY,KAAK;IACtB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,MAAM,GAAG,KAAK;IACd,KAAAC,aAAa,GAAO,EAAE;IACtB,KAAA5B,WAAW,GAAW,KAAK;IAC3B,KAAAxD,oBAAoB,GAAS,CAAC;MAACqF,KAAK,EAAC,wBAAwB;MAAC5C,KAAK,EAAC;IAAK,CAAC,EAC1E;MAAC4C,KAAK,EAAC,qBAAqB;MAAC5C,KAAK,EAAC;IAAY,CAAC,EAChD;MAAC4C,KAAK,EAAC,KAAK;MAAC5C,KAAK,EAAC;IAAK,CAAC,CAAC;IAClB,KAAA6C,QAAQ,GAAU,YAAY;IACtC,KAAAC,iBAAiB,GAAG,KAAK;IASvB,IAAI,CAACtF,WAAW,GAAG,IAAI,CAACqE,WAAW,CAACkB,KAAK,CAAC;MACxCC,YAAY,EAAE,CAAC,IAAI,EAAC,CAAClH,UAAU,CAACmH,QAAQ,CAAC,CAAC;MAC1CC,QAAQ,EAAE,CAAC,IAAI,CAAC;MAChBC,MAAM,EAAE,CAAC,IAAI,CAAC;MACdN,QAAQ,EAAG,CAAC,IAAI,CAACA,QAAQ;KACzB,CAAC;EACJ;EAEDO,QAAQA,CAAA;IACN,IAAI,CAACpB,GAAG,CAACqB,QAAQ,CAAC,IAAI,CAAC;IACvB,IAAI,CAACC,eAAe,EAAE;IACtB;IACA,IAAI,CAACC,SAAS,EAAE;IAChB,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACrB,IAAIC,QAAQ,GAAG,IAAID,IAAI,CAACD,IAAI,CAACG,WAAW,EAAE,EAAEH,IAAI,CAACI,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC/D,IAAIC,OAAO,GAAG,IAAIJ,IAAI,CAACD,IAAI,CAACG,WAAW,EAAE,EAAEH,IAAI,CAACI,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IAClEE,UAAU,CAAC,MAAK;MACf,IAAI,CAACtG,WAAW,CAACuG,UAAU,CAAC;QAC1Bb,QAAQ,EAAEQ,QAAQ;QAClBP,MAAM,EAAEU,OAAO;QACfhB,QAAQ,EAAE,IAAI,CAACA;OAChB,CAAC;IAEJ,CAAC,CAAC;EACH;EAEAmB,MAAMA,CAAA;IACJ,IAAI,CAAClB,iBAAiB,GAAG5G,iBAAiB,CAAC4G,iBAAiB;EAC9D;EACAmB,WAAWA,CAAA;IACT,MAAMC,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE;IACvC,IAAI,CAACC,0BAA0B,CAACF,UAAU,CAAC;EAC7C;EAEAC,aAAaA,CAAA;IACX,IAAIE,QAAQ,GAAG,IAAI,CAAC7G,WAAW,CAAC8G,QAAQ,CAACpB,QAAQ,CAAClD,KAAK;IACvD,IAAIuE,MAAM,GAAG,IAAI,CAAC/G,WAAW,CAAC8G,QAAQ,CAACnB,MAAM,CAACnD,KAAK;IACnD,IAAMgD,YAAY,GAAE,IAAI,CAACxF,WAAW,CAAC8G,QAAQ,CAACtB,YAAY,CAAChD,KAAK;IAEhE,IAAIkE,UAAU,GAAG;MAEf,UAAU,EAAE,IAAI,CAACtC,QAAQ,CAAC4C,SAAS,CAACH,QAAQ,EAAE,YAAY,CAAC;MAC3D,QAAQ,EAAE,IAAI,CAACzC,QAAQ,CAAC4C,SAAS,CAACD,MAAM,EAAE,YAAY,CAAC;MACvD,cAAc,EAAEvB,YAAY;MAC5B,iBAAiB,EAAE,IAAI,CAACxF,WAAW,CAAC8G,QAAQ,CAACzB,QAAQ,CAAC7C;KAEvD;IACD,OAAOkE,UAAU;EACnB;EACAE,0BAA0BA,CAACK,MAAU;IAEnC,IAAI,CAACjD,OAAO,GAAG,IAAI;IACnB,IAAI,CAACO,kCAAkC,CAACqC,0BAA0B,CAACK,MAAM,CAAC,CAACC,SAAS,CAAEC,GAAU,IAAI;MAClG,IAAI,CAACnD,OAAO,GAAG,KAAK;MACrB,IAAI,CAACnD,8BAA8B,GAACsG,GAAG,CAACC,GAAG,CAAEC,IAAS,IAAG;QACxD,OAAO;UACL,GAAGA,IAAI;UACPC,qBAAqB,EAAG,IAAI,CAAClD,QAAQ,CAAC4C,SAAS,CAACK,IAAI,CAAC5F,UAAU,EAAE,aAAa;SAC/E;MACF,CAAC,CAAC;IACH,CAAC,EAAE8F,KAAK,IAAG;MACT,IAAI,CAACvD,OAAO,GAAG,KAAK;MACpB,IAAI,CAACnD,8BAA8B,GAAC,EAAE;IAExC,CAAC,CAAC;EACJ;EAEAtB,QAAQA,CAAA;IAEN,MAAMmH,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE;IACvC,IAAI,CAACC,0BAA0B,CAACF,UAAU,CAAC;EAC7C;EACAZ,eAAeA,CAAA;IACb,IAAI,CAAC3B,KAAK,CAACqD,kBAAkB,EAAE,CAACN,SAAS,CAAEC,GAAQ,IAAI;MACrD,IAAIA,GAAG,EAAE;QACP,IAAI,CAACrH,cAAc,GAAGqH,GAAG;OAC1B,MAAM;QACL,IAAI,CAACrH,cAAc,GAAG,EAAE;;IAE5B,CAAC,CAAC;EACJ;EACAiG,SAASA,CAAA;IACP,IAAI,CAACrB,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACJ,OAAO,CAACmD,QAAQ,EAAE,CAACP,SAAS,CAC9BC,GAAe,IAAI;MAClB,IAAI,CAACzC,QAAQ,GAAGyC,GAAG;MACnB,IAAI,CAACrC,cAAc,GAAG,IAAI,CAACJ,QAAQ,CAAC0C,GAAG,CAACM,CAAC,IAAIC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEF,CAAC,CAAC,CAAC;MAClE;MACA,IAAI,CAAC/E,YAAY,GAAG,IAAI,CAACmC,cAAc,CAACmC,MAAM,CAACY,CAAC,IAAGA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,wBAAwB,CAACA,iBAAiB,EAAE,IAAIF,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,WAAW,CAACA,iBAAiB,EAAE,CAAC;IAE7M,CAAC,EACDR,KAAK,IAAG,CACR,CAAC,CACF;EACH;EACAxE,WAAWA,CAACkF,OAAY;IACtB,OAAO,IAAI,CAACtF,YAAY,CAACuF,IAAI,CAAEL,CAAM,IAAKA,CAAC,CAACI,OAAO,KAAKA,OAAO,CAAC,EAAEE,SAAS;EAC7E;EAEAxG,oBAAoBA,CAACa,KAAU;IAC7B,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,IAAI4F,IAAI,GAAG5F,KAAK,CAAC6F,KAAK,CAAC,GAAG,CAAC;MAC3B,IAAIC,IAAI,GAAGF,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,IAAI,CAAC,CAAC,CAAC;MAClC,OAAOE,IAAI;KACZ,MAAM;MACL,OAAO,EAAE;;EAEb;EACDC,OAAOA,CAAC/C,YAAgB;IAErB,IAAIqB,QAAQ,GAAG,IAAI,CAAC7G,WAAW,CAAC8G,QAAQ,CAACpB,QAAQ,CAAClD,KAAK;IACvD,IAAIuE,MAAM,GAAG,IAAI,CAAC/G,WAAW,CAAC8G,QAAQ,CAACnB,MAAM,CAACnD,KAAK;IACnD,IAAIgD,YAAY,GAAE,IAAI,CAACxF,WAAW,CAAC8G,QAAQ,CAACtB,YAAY,CAAChD,KAAK;IAC9D,IAAIkE,UAAU,GAAG;MAEf,UAAU,EAAE,IAAI,CAACtC,QAAQ,CAAC4C,SAAS,CAACH,QAAQ,EAAE,YAAY,CAAC;MAC3D,QAAQ,EAAE,IAAI,CAACzC,QAAQ,CAAC4C,SAAS,CAACD,MAAM,EAAE,YAAY,CAAC;MACxD,cAAc,EAACvB;KACf;IACD,IAAI,CAACgD,UAAU,CAAC9B,UAAU,CAAC;EAC7B;EACA8B,UAAUA,CAACC,KAAU;IACnB,IAAI,CAACvD,MAAM,GAAG,IAAI,CAACH,oBAAoB,GAAG,IAAI;IAC9C,IAAI2D,QAAQ,GAAG;MACb,GAAGD;KACJ;IACH,IAAI,CAAC7B,0BAA0B,CAAC8B,QAAQ,CAAC;EACzC;EACArH,yCAAyCA,CAACC,SAAa;IAGrD,IAAIqH,UAAU,GAAE;MACdrH,SAAS,EAACA,SAAS;MACnBkE,YAAY,EAAC,IAAI,CAACxF,WAAW,CAAC8G,QAAQ,CAACtB,YAAY,CAAChD;KACrD;IACD,IAAI,CAAC+B,kCAAkC,CAAClD,yCAAyC,CAACsH,UAAU,CAAC,CAACzB,SAAS,CAAEC,GAAO,IAAI;MAClH,IAAI,CAAC5D,WAAW,GAAG,IAAI;MAEvB,IAAI,CAACJ,aAAa,GAACgE,GAAG;IACxB,CAAC,EAAEI,KAAK,IAAG;MACT,IAAI,CAACvD,OAAO,GAAG,KAAK;MACpB,IAAI,CAACb,aAAa,GAAC,EAAE;IAGtB,CAAC,CAAC;EACH;EACAxC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACE,8BAA8B,CAACC,MAAM,KAAK,CAAC,EAAE;MACpD;MACA,IAAI8H,YAAY,GAAa,CAAC,eAAe,EAAG,iBAAiB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc,CAAC;MACtK,IAAIC,OAAO,GAAwB;QAAEC,MAAM,EAAEF;MAAY,CAAE;MAC3D,MAAMG,SAAS,GAAmBtK,IAAI,CAACuK,KAAK,CAACC,aAAa,CAAC,EAAE,EAAEJ,OAAO,CAAC,CAAC,CAAC;MAEzEE,SAAS,CAAC,OAAO,CAAC,GAAG,CACnB;QAAEG,GAAG,EAAE;MAAE,CAAE,EACX;QAAEA,GAAG,EAAE;MAAE,CAAE,EACX;QAAEA,GAAG,EAAE;MAAE,CAAE,EACX;QAAEA,GAAG,EAAE;MAAE,CAAE,EACX;QAAEA,GAAG,EAAE;MAAE,CAAE,EACX;QAAEA,GAAG,EAAE;MAAE,CAAE,CACZ;MAED,MAAMC,QAAQ,GAAkB;QAAEC,MAAM,EAAE;UAAE,MAAM,EAAEL;QAAS,CAAE;QAAEM,UAAU,EAAE,CAAC,MAAM;MAAC,CAAE;MACvF,MAAMC,WAAW,GAAQ7K,IAAI,CAAC8K,KAAK,CAACJ,QAAQ,EAAE;QAAEK,QAAQ,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAO,CAAE,CAAC;MAClF,IAAI,CAACC,eAAe,CAACJ,WAAW,EAAE,oCAAoC,CAAC;KACxE,MAAM;MACL,IAAI,CAACK,mBAAmB,CAAC,MAAK;QAC5B,IAAIf,YAAY,GAAa,CAAC,eAAe,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc,CAAC;QACrK,IAAIC,OAAO,GAAwB;UAAEC,MAAM,EAAEF;QAAY,CAAE;QAC3D,MAAMG,SAAS,GAAmBtK,IAAI,CAACuK,KAAK,CAACC,aAAa,CAAC,IAAI,CAACtE,SAAS,CAAC;QAE1EoE,SAAS,CAAC,OAAO,CAAC,GAAG,CACnB;UAAEG,GAAG,EAAE;QAAE,CAAE,EACX;UAAEA,GAAG,EAAE;QAAE,CAAE,EACX;UAAEA,GAAG,EAAE;QAAE,CAAE,EACX;UAAEA,GAAG,EAAE;QAAE,CAAE,EACX;UAAEA,GAAG,EAAE;QAAE,CAAE,EACX;UAAEA,GAAG,EAAE;QAAE,CAAE,EACX;UAAEA,GAAG,EAAE;QAAE,CAAE,EACX;UAAEA,GAAG,EAAE;QAAE,CAAE,CACZ;QAED,MAAMC,QAAQ,GAAkB;UAAEC,MAAM,EAAE;YAAE,MAAM,EAAEL;UAAS,CAAE;UAAEM,UAAU,EAAE,CAAC,MAAM;QAAC,CAAE;QACvF,MAAMC,WAAW,GAAQ7K,IAAI,CAAC8K,KAAK,CAACJ,QAAQ,EAAE;UAAEK,QAAQ,EAAE,MAAM;UAAEC,IAAI,EAAE;QAAO,CAAE,CAAC;QAClF,IAAI,CAACC,eAAe,CAACJ,WAAW,EAAE,oCAAoC,CAAC;MACzE,CAAC,CAAC;;EAEN;EACAK,mBAAmBA,CAACC,QAAoB;IACtC,IAAI,CAAC,IAAI,CAAC/I,8BAA8B,IAAI,IAAI,CAACA,8BAA8B,CAACC,MAAM,KAAK,CAAC,EAAE;MAC5F,IAAI,CAAC6D,SAAS,GAAG,EAAE;MACnBiF,QAAQ,EAAE;MACV;;IAGF,IAAI,CAACjF,SAAS,GAAG,IAAI,CAAC9D,8BAA8B,CAACuG,GAAG,CAAEyC,IAAS,KAAM;MACvE,eAAe,EAAGA,IAAI,CAACrE,YAAY;MACnC,iBAAiB,EAAG,IAAI,CAACsE,iBAAiB,CAACD,IAAI,CAACrE,YAAY,CAAC;MAC7D,gBAAgB,EAAE,IAAI,CAACpB,QAAQ,CAAC4C,SAAS,CAAC6C,IAAI,CAACpI,UAAU,EAAE,aAAa,CAAC;MACzE,gBAAgB,EAAEoI,IAAI,CAACjI,UAAU;MACjC,iBAAiB,EAAEiI,IAAI,CAAChI,aAAa;MACrC,WAAW,EAAE,IAAI,CAACkB,WAAW,CAAC8G,IAAI,CAAC5G,QAAQ,CAAC;MAC5C,cAAc,EAAE4G,IAAI,CAAC9H,cAAc,GAAG8H,IAAI,CAAC7H,iBAAiB,GAAG6H,IAAI,CAAC5H,mBAAmB;MACvF,cAAc,EAAE4H,IAAI,CAACvI;KACtB,CAAC,CAAC;IAEHsI,QAAQ,EAAE;EACZ;EACAF,eAAeA,CAACK,MAAW,EAAEC,QAAgB;IAC3C,MAAMC,UAAU,GAAG,iFAAiF;IACpG,MAAMC,eAAe,GAAG,OAAO;IAC/B,MAAM9B,IAAI,GAAS,IAAI+B,IAAI,CAAC,CAACJ,MAAM,CAAC,EAAE;MAAEN,IAAI,EAAEQ;IAAU,CAAE,CAAC;IAC3DzL,SAAS,CAAC4L,MAAM,CAAChC,IAAI,EAAE4B,QAAQ,GAAG,UAAU,GAAG,IAAI/D,IAAI,EAAE,CAACoE,OAAO,EAAE,GAAGH,eAAe,CAAC;EACxF;EAEFJ,iBAAiBA,CAACQ,EAAO;IACvB,MAAMlC,IAAI,GAAG,IAAI,CAACtI,cAAc,CAACmH,MAAM,CAAEI,IAAS,IAAMA,IAAI,CAACkD,IAAI,KAAKD,EAAG,CAAC;IAC1E,OAAOlC,IAAI,CAAC,CAAC,CAAC,CAACoC,IAAI;EACrB;EAEA9K,OAAOA,CAAA;IACL,IAAI,CAACM,WAAW,CAACyK,KAAK,EAAE;IACxBnE,UAAU,CAAC,MAAK;MACf,IAAI,CAACtG,WAAW,CAACuG,UAAU,CAAC;QAC1BlB,QAAQ,EAAE,IAAI,CAACA;OAChB,CAAC;IACJ,CAAC,CAAC;EACH;EAEAqF,WAAWA,CAAA;IACT,IAAI,CAAClG,GAAG,CAACmG,UAAU,CAAC,IAAI,CAAC;EAC3B;EAAC,QAAAC,CAAA,G;qBAvQU3G,oCAAoC,EAAAtF,EAAA,CAAAkM,iBAAA,CAAAC,EAAA,CAAAC,mBAAA,GAAApM,EAAA,CAAAkM,iBAAA,CAAAG,EAAA,CAAAC,QAAA,GAAAtM,EAAA,CAAAkM,iBAAA,CAAAK,EAAA,CAAAC,kBAAA,GAAAxM,EAAA,CAAAkM,iBAAA,CAAAO,EAAA,CAAAC,WAAA,GAAA1M,EAAA,CAAAkM,iBAAA,CAAAS,EAAA,CAAAC,kCAAA,GAAA5M,EAAA,CAAAkM,iBAAA,CAAAW,EAAA,CAAA9M,iBAAA;EAAA;EAAA,QAAA+M,EAAA,G;UAApCxH,oCAAoC;IAAAyH,SAAA;IAAAC,MAAA;MAAAtG,QAAA;IAAA;IAAAuG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8CAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjBjDtN,EAAA,CAAAC,cAAA,iBAA4D;QAExDD,EAAA,CAAAiE,UAAA,IAAAuJ,qDAAA,qBAoDQ;QACRxN,EAAA,CAAAiE,UAAA,IAAAwJ,qDAAA,qBAsDQ;QACVzN,EAAA,CAAAG,YAAA,EAAO;QAETH,EAAA,CAAAC,cAAA,cAAS;QACPD,EAAA,CAAAiE,UAAA,IAAAyJ,2DAAA,yBAMc;QACd1N,EAAA,CAAAC,cAAA,aAAkB;QAIdD,EAAA,CAAAiE,UAAA,IAAA0J,2DAAA,0BA0Dc;QACd3N,EAAA,CAAAiE,UAAA,IAAA2J,2DAAA,0BAac;QACd5N,EAAA,CAAAiE,UAAA,KAAA4J,4DAAA,yBAMc;QAChB7N,EAAA,CAAAG,YAAA,EAAU;QAGdH,EAAA,CAAAiE,UAAA,KAAA6J,yDAAA,uBA8CW;;;QA7P6B9N,EAAA,CAAAiB,UAAA,oBAAmB;QACnDjB,EAAA,CAAAgB,SAAA,GAAyB;QAAzBhB,EAAA,CAAAiB,UAAA,cAAAsM,GAAA,CAAAlM,WAAA,CAAyB;QACRrB,EAAA,CAAAgB,SAAA,GAAwB;QAAxBhB,EAAA,CAAAiB,UAAA,UAAAsM,GAAA,CAAA5G,iBAAA,CAAwB;QAqDxB3G,EAAA,CAAAgB,SAAA,GAAuB;QAAvBhB,EAAA,CAAAiB,UAAA,SAAAsM,GAAA,CAAA5G,iBAAA,CAAuB;QAkEnC3G,EAAA,CAAAgB,SAAA,GAAiB;QAAjBhB,EAAA,CAAAiB,UAAA,SAAAsM,GAAA,CAAAnI,QAAA,CAAiB,UAAAmI,GAAA,CAAArL,8BAAA,iCAAAqL,GAAA,CAAAlI,OAAA;QAsFoErF,EAAA,CAAAgB,SAAA,GAAiB;QAAjBhB,EAAA,CAAAiB,UAAA,SAAAsM,GAAA,CAAA3I,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}