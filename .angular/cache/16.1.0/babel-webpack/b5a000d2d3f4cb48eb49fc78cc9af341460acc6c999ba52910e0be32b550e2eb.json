{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/ui/Helpdesk/equipment/services/equipment.services\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/ui/link-plan-to-location/services/link-plan-to-location.services\";\nimport * as i4 from \"src/app/services/auth.service\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/toast\";\nimport * as i8 from \"primeng/confirmdialog\";\nfunction UnLinkAssetsScreenComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"h4\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 11)(5, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function UnLinkAssetsScreenComponent_ng_template_2_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.confirmDialog());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Linked Assets For \", ctx_r0.selectedPlan, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.selectedScreens.length > 0));\n  }\n}\nfunction UnLinkAssetsScreenComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 13);\n    i0.ɵɵelement(2, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 14)(4, \"div\", 15)(5, \"div\", 16)(6, \"p\", 17);\n    i0.ɵɵtext(7, \"Asset\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 18);\n    i0.ɵɵelement(9, \"p-sortIcon\", 19)(10, \"p-columnFilter\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"th\", 21)(12, \"div\", 15)(13, \"div\", 16)(14, \"p\", 17);\n    i0.ɵɵtext(15, \"Asset Standard \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 18);\n    i0.ɵɵelement(17, \"p-sortIcon\", 22)(18, \"p-columnFilter\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"th\", 24)(20, \"div\", 15)(21, \"div\", 16)(22, \"p\", 17);\n    i0.ɵɵtext(23, \"Building \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 18);\n    i0.ɵɵelement(25, \"p-sortIcon\", 25)(26, \"p-columnFilter\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"th\", 27)(28, \"div\", 15)(29, \"div\", 16)(30, \"p\", 17);\n    i0.ɵɵtext(31, \"Floor\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 18);\n    i0.ɵɵelement(33, \"p-sortIcon\", 28)(34, \"p-columnFilter\", 29);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(35, \"th\", 30)(36, \"div\", 15)(37, \"div\", 16)(38, \"p\", 17);\n    i0.ɵɵtext(39, \"Room\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(40, \"div\", 18);\n    i0.ɵɵelement(41, \"p-sortIcon\", 31)(42, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction UnLinkAssetsScreenComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 33)(1, \"td\", 13);\n    i0.ɵɵelement(2, \"p-tableCheckbox\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const eq_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", eq_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", eq_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r5.eqCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r5.eqStd);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r5.blName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r5.floorName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r5.rmName);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nexport let UnLinkAssetsScreenComponent = /*#__PURE__*/(() => {\n  class UnLinkAssetsScreenComponent {\n    constructor(eqService, messageService, confirmationService, linkPlanToLocationOrAssetService, authSrv) {\n      this.eqService = eqService;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.linkPlanToLocationOrAssetService = linkPlanToLocationOrAssetService;\n      this.authSrv = authSrv;\n      this.eqData = [];\n      this.loading = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.selectedPlan = '';\n      this.selectedScreens = [];\n      this.compId = 0;\n      this.planId = 0;\n      this.parentFun = new EventEmitter();\n    }\n    ngOnInit() {\n      //  this.loadRecords();\n      this.compId = this.authSrv.getLoggedInUserCompId();\n    }\n    loadRecords(planId) {\n      this.loading = true;\n      this.planId = planId;\n      this.eqData = [];\n      this.selectedScreens = [];\n      this.eqService.getLinkedEquipmentPlanId(planId).subscribe(res => {\n        if (res.status != 202) {\n          this.eqData = res;\n        } else {\n          this.eqData = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    onRowSelect(event) {\n      this.parentFun.emit(event);\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.UN_LINK_ASSETS_CONFIRMATION,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.onUnLink();\n        },\n        key: \"unLinkGrid\"\n      });\n    }\n    onUnLink() {\n      let selectedPlansList = [];\n      this.selectedScreens.map(asset => {\n        const data = {\n          planLocEqId: 0,\n          planId: this.planId,\n          blId: asset.blId,\n          flId: asset.flId,\n          rmId: asset.rmId,\n          eqId: asset.eqId,\n          compId: this.compId\n        };\n        selectedPlansList.push(data);\n      });\n      this.linkPlanToLocationOrAssetService.delete(selectedPlansList).subscribe(res => {\n        this.messageService.clear();\n        if (res.length >= 0) {\n          this.messageService.add({\n            key: 'unLinkGrid',\n            severity: 'success',\n            summary: 'Asset(s) Un Linked successfully',\n            detail: 'Assets are successfully unlinked except for those that contain schedules.'\n          });\n          this.refreshPanel();\n          this.selectedScreens = [];\n        }\n      });\n    }\n    refreshPanel() {\n      this.parentFun.emit(true);\n    }\n    static #_ = this.ɵfac = function UnLinkAssetsScreenComponent_Factory(t) {\n      return new (t || UnLinkAssetsScreenComponent)(i0.ɵɵdirectiveInject(i1.EquipmentService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.LinkPlanToLocationOrAssetService), i0.ɵɵdirectiveInject(i4.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UnLinkAssetsScreenComponent,\n      selectors: [[\"app-un-link-assets-screen\"]],\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 8,\n      vars: 8,\n      consts: [[1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"scrollDirection\", \"both\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"dataKey\", \"eqId\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"scrollable\", \"rowsPerPageOptions\", \"selection\", \"selectionChange\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"key\", \"unLinkGrid\", \"position\", \"top-right\"], [\"key\", \"delete\", \"position\", \"top-center\"], [\"key\", \"unLinkGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"d-flex\", \"flex-row\"], [1, \"linked-assets-heading-div\"], [1, \"linked-assets-heading\"], [1, \"linked-assests-button-div\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Un Link\", 1, \"p-button-primary\", \"p-button-sm\", \"p-mr-2\", 3, \"disabled\", \"click\"], [2, \"width\", \"3rem\"], [\"pSortableColumn\", \"eqCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"eqCode\"], [\"type\", \"text\", \"field\", \"eqCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"eqStd\"], [\"field\", \"eqStd\"], [\"type\", \"text\", \"field\", \"eqStd\", \"display\", \"menu\"], [\"pSortableColumn\", \"blName\"], [\"field\", \"blName\"], [\"type\", \"text\", \"field\", \"blName\", \"display\", \"menu\"], [\"pSortableColumn\", \"floorName\"], [\"field\", \"floorName\"], [\"type\", \"text\", \"field\", \"floorName\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmName\"], [\"field\", \"rmName\"], [\"type\", \"text\", \"field\", \"rmName\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [3, \"value\"]],\n      template: function UnLinkAssetsScreenComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-table\", 1);\n          i0.ɵɵlistener(\"selectionChange\", function UnLinkAssetsScreenComponent_Template_p_table_selectionChange_1_listener($event) {\n            return ctx.selectedScreens = $event;\n          });\n          i0.ɵɵtemplate(2, UnLinkAssetsScreenComponent_ng_template_2_Template, 6, 2, \"ng-template\", 2);\n          i0.ɵɵtemplate(3, UnLinkAssetsScreenComponent_ng_template_3_Template, 43, 0, \"ng-template\", 3);\n          i0.ɵɵtemplate(4, UnLinkAssetsScreenComponent_ng_template_4_Template, 13, 7, \"ng-template\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(5, \"p-toast\", 5)(6, \"p-toast\", 6)(7, \"p-confirmDialog\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.eqData)(\"paginator\", true)(\"rows\", 5)(\"showCurrentPageReport\", true)(\"scrollable\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(7, _c0))(\"selection\", ctx.selectedScreens);\n        }\n      },\n      dependencies: [i2.PrimeTemplate, i5.Table, i5.SortableColumn, i5.SelectableRow, i5.SortIcon, i5.TableCheckbox, i5.TableHeaderCheckbox, i5.ColumnFilter, i6.ButtonDirective, i7.Toast, i8.ConfirmDialog],\n      styles: [\".linked-assets-heading-div[_ngcontent-%COMP%]{flex:auto;width:90%}.linked-assests-button-div[_ngcontent-%COMP%]{width:10%}@media screen and (min-width: 600px) and (max-width: 959px){.linked-assets-heading[_ngcontent-%COMP%]{font-size:13px}.p-button[_ngcontent-%COMP%]{height:40px!important}.linked-assets-heading-div[_ngcontent-%COMP%]{width:80%}.linked-assests-button-div[_ngcontent-%COMP%]{width:20%}}@media screen and (min-width: 960px) and (max-width: 1439px){.linked-assets-heading[_ngcontent-%COMP%]{font-size:13px}.p-button[_ngcontent-%COMP%]{height:40px!important}.linked-assets-heading-div[_ngcontent-%COMP%]{width:80%}.linked-assests-button-div[_ngcontent-%COMP%]{width:20%}}\"]\n    });\n  }\n  return UnLinkAssetsScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}