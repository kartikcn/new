{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport class PlanScheduleService {\n  constructor(planScheduleService) {\n    this.planScheduleService = planScheduleService;\n  }\n  getPlanScheduleById(id) {\n    return this.planScheduleService.getAllById('planSchedule', 'getPlanScheduleById', id);\n  }\n  savePlanSchedule(data) {\n    return this.planScheduleService.add('planSchedule', 'save', data);\n  }\n  getCountOfOccurence(data) {\n    return this.planScheduleService.add('planSchedule', 'getListOfOccurances', data);\n  }\n  deletePlanSchedule(id) {\n    return this.planScheduleService.getSingleById('planSchedule', 'delete', id);\n  }\n  getRequestsList(data) {\n    return this.planScheduleService.search('planSchedule', 'scheduleList', data);\n  }\n  generateRequests(data) {\n    return this.planScheduleService.search('planSchedule', 'generateRequest', data);\n  }\n  checkIsScheduleGenerated(id) {\n    return this.planScheduleService.getSingleById('planSchedule', 'checkSchedGenerated', id);\n  }\n  getPmPlannerData(data) {\n    return this.planScheduleService.search('planSchedule', 'planner', data);\n  }\n  getPmPlannerRequestDetails(data) {\n    return this.planScheduleService.search('planSchedule', 'getPlanRequestDetails', data);\n  }\n  getForecastDetails(data) {\n    return this.planScheduleService.search('planSchedule', 'forecast', data);\n  }\n  getForecastPlanDetails(data) {\n    return this.planScheduleService.search('forecast', 'details', data);\n  }\n  getPlannerRequestSelectionInfo(data) {\n    return this.planScheduleService.search('planSchedule', 'getplannerreqselectioninfo', data);\n  }\n  static #_ = this.ɵfac = function PlanScheduleService_Factory(t) {\n    return new (t || PlanScheduleService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlanScheduleService,\n    factory: PlanScheduleService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PlanScheduleService","constructor","planScheduleService","getPlanScheduleById","id","getAllById","savePlanSchedule","data","add","getCountOfOccurence","deletePlanSchedule","getSingleById","getRequestsList","search","generateRequests","checkIsScheduleGenerated","getPmPlannerData","getPmPlannerRequestDetails","getForecastDetails","getForecastPlanDetails","getPlannerRequestSelectionInfo","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/ppm-schedule/services/plan-schedule-services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlanScheduleService {\n\n    constructor(\n        private planScheduleService: DataService<any>,\n    ) { }\n\n    public getPlanScheduleById(id: any) {\n        return this.planScheduleService.getAllById('planSchedule', 'getPlanScheduleById', id);\n    }\n\n    public savePlanSchedule(data: any): Observable<any> {\n        return this.planScheduleService.add('planSchedule', 'save', data);\n    }\n\n    public getCountOfOccurence(data: any): Observable<any> {\n        return this.planScheduleService.add('planSchedule', 'getListOfOccurances', data);\n    }\n\n    public deletePlanSchedule(id:any) {\n        return this.planScheduleService.getSingleById('planSchedule', 'delete', id)\n    }\n\n    public getRequestsList(data:any) {\n        return this.planScheduleService.search('planSchedule','scheduleList',data);\n    }\n\n    public generateRequests(data:any) {\n        return this.planScheduleService.search('planSchedule','generateRequest',data);\n    }\n\n    public checkIsScheduleGenerated(id:any) {\n        return this.planScheduleService.getSingleById('planSchedule', 'checkSchedGenerated', id)\n    }\n\n    public getPmPlannerData(data:any) {\n        return this.planScheduleService.search('planSchedule','planner',data);\n    }\n\n    public getPmPlannerRequestDetails(data:any) {\n        return this.planScheduleService.search('planSchedule','getPlanRequestDetails',data);\n    }\n    public getForecastDetails(data:any) {\n        return this.planScheduleService.search('planSchedule','forecast',data);\n    }\n\n    public getForecastPlanDetails(data:any) {\n        return this.planScheduleService.search('forecast','details',data);\n    }\n\n    public getPlannerRequestSelectionInfo(data:any) {\n        return this.planScheduleService.search('planSchedule','getplannerreqselectioninfo',data);\n    }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,mBAAmB;EAE5BC,YACYC,mBAAqC;IAArC,KAAAA,mBAAmB,GAAnBA,mBAAmB;EAC3B;EAEGC,mBAAmBA,CAACC,EAAO;IAC9B,OAAO,IAAI,CAACF,mBAAmB,CAACG,UAAU,CAAC,cAAc,EAAE,qBAAqB,EAAED,EAAE,CAAC;EACzF;EAEOE,gBAAgBA,CAACC,IAAS;IAC7B,OAAO,IAAI,CAACL,mBAAmB,CAACM,GAAG,CAAC,cAAc,EAAE,MAAM,EAAED,IAAI,CAAC;EACrE;EAEOE,mBAAmBA,CAACF,IAAS;IAChC,OAAO,IAAI,CAACL,mBAAmB,CAACM,GAAG,CAAC,cAAc,EAAE,qBAAqB,EAAED,IAAI,CAAC;EACpF;EAEOG,kBAAkBA,CAACN,EAAM;IAC5B,OAAO,IAAI,CAACF,mBAAmB,CAACS,aAAa,CAAC,cAAc,EAAE,QAAQ,EAAEP,EAAE,CAAC;EAC/E;EAEOQ,eAAeA,CAACL,IAAQ;IAC3B,OAAO,IAAI,CAACL,mBAAmB,CAACW,MAAM,CAAC,cAAc,EAAC,cAAc,EAACN,IAAI,CAAC;EAC9E;EAEOO,gBAAgBA,CAACP,IAAQ;IAC5B,OAAO,IAAI,CAACL,mBAAmB,CAACW,MAAM,CAAC,cAAc,EAAC,iBAAiB,EAACN,IAAI,CAAC;EACjF;EAEOQ,wBAAwBA,CAACX,EAAM;IAClC,OAAO,IAAI,CAACF,mBAAmB,CAACS,aAAa,CAAC,cAAc,EAAE,qBAAqB,EAAEP,EAAE,CAAC;EAC5F;EAEOY,gBAAgBA,CAACT,IAAQ;IAC5B,OAAO,IAAI,CAACL,mBAAmB,CAACW,MAAM,CAAC,cAAc,EAAC,SAAS,EAACN,IAAI,CAAC;EACzE;EAEOU,0BAA0BA,CAACV,IAAQ;IACtC,OAAO,IAAI,CAACL,mBAAmB,CAACW,MAAM,CAAC,cAAc,EAAC,uBAAuB,EAACN,IAAI,CAAC;EACvF;EACOW,kBAAkBA,CAACX,IAAQ;IAC9B,OAAO,IAAI,CAACL,mBAAmB,CAACW,MAAM,CAAC,cAAc,EAAC,UAAU,EAACN,IAAI,CAAC;EAC1E;EAEOY,sBAAsBA,CAACZ,IAAQ;IAClC,OAAO,IAAI,CAACL,mBAAmB,CAACW,MAAM,CAAC,UAAU,EAAC,SAAS,EAACN,IAAI,CAAC;EACrE;EAEOa,8BAA8BA,CAACb,IAAQ;IAC1C,OAAO,IAAI,CAACL,mBAAmB,CAACW,MAAM,CAAC,cAAc,EAAC,4BAA4B,EAACN,IAAI,CAAC;EAC5F;EAAC,QAAAc,CAAA,G;qBAnDQrB,mBAAmB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnB1B,mBAAmB;IAAA2B,OAAA,EAAnB3B,mBAAmB,CAAA4B,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}