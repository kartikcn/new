{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport html2canvas from 'html2canvas';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../work-request/service/add-work-request.services\";\nimport * as i6 from \"src/app/ui/booking/services/booking.services\";\nimport * as i7 from \"src/app/services/enum.service\";\nimport * as i8 from \"src/app/services/breakpoint.service\";\nimport * as i9 from \"primeng/table\";\nimport * as i10 from \"primeng/calendar\";\nimport * as i11 from \"primeng/button\";\nimport * as i12 from \"primeng/dialog\";\nimport * as i13 from \"primeng/panel\";\nimport * as i14 from \"primeng/chart\";\nimport * as i15 from \"@ng-select/ng-select\";\nimport * as i16 from \"../../../requests-by-asset-reports/widgets/add-table/add-table.component\";\nimport * as i17 from \"@swimlane/ngx-charts\";\nconst _c0 = [\"chartContainer\"];\nfunction SlaEscalatedSummaryReportsComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"tr\")(2, \"td\", 11)(3, \"div\", 12)(4, \"div\", 13)(5, \"div\", 14)(6, \"label\", 15);\n    i0.ɵɵtext(7, \"Requested From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 16);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 11)(10, \"div\", 12)(11, \"div\", 13)(12, \"div\", 14)(13, \"label\", 15);\n    i0.ɵɵtext(14, \"Requested To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 18)(17, \"div\", 12)(18, \"label\", 15);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 19);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.scrollToEndBl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.searchBl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"td\", 20)(22, \"div\", 12)(23, \"label\", 15);\n    i0.ɵɵtext(24, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ng-select\", 21);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_25_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_scrollToEnd_25_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.scrollToEndFl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_search_25_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.searchFl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_open_25_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"td\", 20)(27, \"div\", 12)(28, \"label\", 15);\n    i0.ɵɵtext(29, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"ng-select\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"td\", 11)(32, \"div\", 12)(33, \"label\", 15);\n    i0.ɵɵtext(34, \"Display Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"ng-select\", 23);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_3_Template_ng_select_change_35_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onSelectDisplayType($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"td\", 24)(37, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_3_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_3_Template_button_click_38_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onClear());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"p-button\", 27);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_3_Template_p_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx_r0.displayTypeData);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.filterPanel.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isShowGrid);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"tr\")(2, \"td\", 28)(3, \"div\", 12)(4, \"div\", 13)(5, \"div\", 14)(6, \"label\", 15);\n    i0.ɵɵtext(7, \"Requested From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 16);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 28)(10, \"div\", 12)(11, \"div\", 13)(12, \"div\", 14)(13, \"label\", 15);\n    i0.ɵɵtext(14, \"Requested To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 28)(17, \"div\", 12)(18, \"label\", 15);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 19);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.scrollToEndBl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.searchBl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"tr\")(22, \"td\", 28)(23, \"div\", 12)(24, \"label\", 15);\n    i0.ɵɵtext(25, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"ng-select\", 21);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_26_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_scrollToEnd_26_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.scrollToEndFl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_search_26_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.searchFl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_open_26_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"td\", 28)(28, \"div\", 12)(29, \"label\", 15);\n    i0.ɵɵtext(30, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"ng-select\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"td\", 28)(33, \"div\", 12)(34, \"label\", 15);\n    i0.ɵɵtext(35, \"Display Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"ng-select\", 23);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_4_Template_ng_select_change_36_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onSelectDisplayType($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(37, \"tr\")(38, \"td\", 29)(39, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_4_Template_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_4_Template_button_click_40_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.onClear());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"p-button\", 27);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_4_Template_p_button_click_41_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx_r1.displayTypeData);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.filterPanel.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isShowGrid);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 10)(1, \"tr\")(2, \"td\", 32)(3, \"div\", 12)(4, \"div\", 13)(5, \"div\", 14)(6, \"label\", 15);\n    i0.ɵɵtext(7, \"Requested From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 16);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 32)(10, \"div\", 12)(11, \"div\", 13)(12, \"div\", 14)(13, \"label\", 15);\n    i0.ɵɵtext(14, \"Requested To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 32)(17, \"div\", 12)(18, \"label\", 15);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 19);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.scrollToEndBl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.searchBl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"td\", 32)(22, \"div\", 12)(23, \"label\", 15);\n    i0.ɵɵtext(24, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ng-select\", 21);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_25_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_scrollToEnd_25_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.scrollToEndFl());\n    })(\"search\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_search_25_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.searchFl($event));\n    })(\"open\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_open_25_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"td\", 32)(27, \"div\", 12)(28, \"label\", 15);\n    i0.ɵɵtext(29, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"ng-select\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"td\", 32)(32, \"div\", 12)(33, \"label\", 15);\n    i0.ɵɵtext(34, \"Display Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"ng-select\", 23);\n    i0.ɵɵlistener(\"change\", function SlaEscalatedSummaryReportsComponent_table_5_Template_ng_select_change_35_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.onSelectDisplayType($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"td\", 33)(37, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_5_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_5_Template_button_click_38_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.onClear());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"p-button\", 27);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_table_5_Template_p_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r2.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r2.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r2.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx_r2.displayTypeData);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.filterPanel.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isShowGrid);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_7_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const dataItem_r50 = ctx.$implicit;\n    i0.ɵɵtextInterpolate2(\" \", dataItem_r50.label, \" (\", dataItem_r50.value, \") \");\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34, 35)(2, \"p-chart\", 36, 37);\n    i0.ɵɵlistener(\"onDataSelect\", function SlaEscalatedSummaryReportsComponent_div_7_Template_p_chart_onDataSelect_2_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.onClick($event));\n    });\n    i0.ɵɵtemplate(4, SlaEscalatedSummaryReportsComponent_div_7_ng_template_4_Template, 1, 2, \"ng-template\", 38);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"type\", ctx_r3.chartType)(\"height\", 540)(\"data\", ctx_r3.data)(\"options\", ctx_r3.options);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34, 35)(2, \"div\")(3, \"ngx-charts-pie-chart\", 39);\n    i0.ɵɵlistener(\"select\", function SlaEscalatedSummaryReportsComponent_div_8_Template_ngx_charts_pie_chart_select_3_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.selectChartData($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"results\", ctx_r4.pieChartData)(\"view\", ctx_r4.pieChartView)(\"legend\", true)(\"labels\", false)(\"doughnut\", ctx_r4.chartType == \"doughnut\")(\"scheme\", ctx_r4.customScheme)(\"legendTitle\", \"\")(\"tooltipDisabled\", false);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_9_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 43)(2, \"div\", 44)(3, \"div\", 45)(4, \"p\", 46);\n    i0.ɵɵtext(5, \"Escalated For\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 47);\n    i0.ɵɵelement(7, \"p-sortIcon\", 48)(8, \"p-columnFilter\", 49);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 50)(10, \"div\", 44)(11, \"div\", 45)(12, \"p\", 46);\n    i0.ɵɵtext(13, \" Request Count\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 47);\n    i0.ɵɵelement(15, \"p-sortIcon\", 51)(16, \"p-columnFilter\", 52);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_9_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 53);\n    i0.ɵɵlistener(\"click\", function SlaEscalatedSummaryReportsComponent_div_9_ng_template_3_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r61);\n      const record_r59 = restoredCtx.$implicit;\n      const ctx_r60 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r60.onRowSelect(record_r59.label));\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const record_r59 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", record_r59);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r59.label);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(record_r59.reqCount);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_9_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r58 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r58.esctdGridData.length);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"p-table\", 41);\n    i0.ɵɵtemplate(2, SlaEscalatedSummaryReportsComponent_div_9_ng_template_2_Template, 17, 0, \"ng-template\", 8);\n    i0.ɵɵtemplate(3, SlaEscalatedSummaryReportsComponent_div_9_ng_template_3_Template, 5, 3, \"ng-template\", 9);\n    i0.ɵɵtemplate(4, SlaEscalatedSummaryReportsComponent_div_9_ng_template_4_Template, 3, 1, \"ng-template\", 42);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.esctdGridData)(\"paginator\", false);\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \" Requests List\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SlaEscalatedSummaryReportsComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-table\", 54);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r7.displayData)(\"isEscalatedData\", ctx_r7.viewForEscalation);\n  }\n}\nconst _c1 = function () {\n  return {\n    \"max-width\": \"70vw\"\n  };\n};\nexport let SlaEscalatedSummaryReportsComponent = /*#__PURE__*/(() => {\n  class SlaEscalatedSummaryReportsComponent {\n    constructor(messageService, blService, formBuilder, datePipe, wrServ, bookingSrv, enumsrv, bps) {\n      this.messageService = messageService;\n      this.blService = blService;\n      this.formBuilder = formBuilder;\n      this.datePipe = datePipe;\n      this.wrServ = wrServ;\n      this.bookingSrv = bookingSrv;\n      this.enumsrv = enumsrv;\n      this.bps = bps;\n      this.allSitesData = [];\n      this.enumBL = [];\n      this.enumAllBl = [];\n      this.enumFL = [];\n      this.enumRM = [];\n      this.enumAllFL = [];\n      this.allRmDdata = [];\n      this.rm_data = [];\n      this.compId = 1;\n      this.chartType = 'pie';\n      this.allRequestList = [];\n      this.esctdResponseData = [];\n      this.esctdCompleteData = [];\n      this.esctdCompleteAndResponseData = [];\n      this.noEsctdData = [];\n      this.displayData = [];\n      this.labels = ['Escalated For Response', 'Escalated For Complete', 'Escalated For Response and Complete', 'Not Escalated'];\n      this.isShowDialog = false;\n      this.isShowGrid = false;\n      //isShowCharts: boolean = false;\n      this.esctdGridData = [];\n      this.chartData = [];\n      this.chartImg = [];\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumWr = [];\n      this.enumStatus = [];\n      this.viewForEscalation = true;\n      this.displayTypeData = [{\n        \"id\": 1,\n        \"lable\": 'Pie Chart',\n        \"value\": \"pie\"\n      }, {\n        \"id\": 2,\n        \"lable\": 'Bar Chart',\n        \"value\": \"bar\"\n      },\n      // { \"id\": 2, \"lable\": 'Doughnut', \"value\": \"doughnut\" },\n      {\n        \"id\": 4,\n        \"lable\": 'Grid',\n        \"value\": \"grid\"\n      }];\n      this.pieChartData = [];\n      this.dynamicColors = [];\n      this.customScheme = {\n        domain: ['#FF0000', '#00FF00', '#0000FF', '#FFFF00'] // define your custom colors here\n      };\n\n      this.showRequestsTypeList = [{\n        label: \"Preventive Maintenance\",\n        value: \"ppm\"\n      }, {\n        label: \"Facilities Helpdesk\",\n        value: \"facilities\"\n      }, {\n        label: \"All\",\n        value: \"all\"\n      }];\n      this.showType = \"facilities\";\n      this.useTabletProtrait = false;\n      this.useTabletLandscape = false;\n      this.pieChartView = [1000, 500];\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.filterPanel = this.formBuilder.group({\n        siteId: [null],\n        blId: [null],\n        flId: [null],\n        dateRequestedFrom: [null],\n        dateRequestedTo: [null],\n        chartType: ['bar'],\n        showType: [this.showType]\n      });\n    }\n    ngOnInit() {\n      this.bps.register(this);\n      this.viewForEscalation = true;\n      var date = new Date();\n      var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n      var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n      this.loadEnums();\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          dateRequestedFrom: firstDay,\n          dateRequestedTo: lastDay,\n          showType: this.showType\n        });\n        this.onSearch();\n      });\n    }\n    notify() {\n      this.useTabletProtrait = BreakpointService.useTabletProtrait;\n      this.useTabletLandscape = BreakpointService.useTabletLandscape;\n      this.updatePieChartView();\n    }\n    onSearch() {\n      const filterData = {\n        dateRequestedFrom: this.datePipe.transform(this.filterPanel.controls.dateRequestedFrom.value, \"yyyy-MM-dd\"),\n        dateRequestedTo: this.datePipe.transform(this.filterPanel.controls.dateRequestedTo.value, \"yyyy-MM-dd\"),\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        showRequestType: this.filterPanel.controls.showType.value\n      };\n      this.loadRecords(filterData);\n      this.chartType = this.filterPanel.controls.chartType.value;\n      this.updatePieChartView();\n    }\n    loadRecords(filterData) {\n      this.allRequestList = [];\n      this.esctdResponseData = [];\n      this.esctdCompleteData = [];\n      this.esctdCompleteAndResponseData = [];\n      this.noEsctdData = [];\n      this.wrServ.getAllWrByFilter(filterData).subscribe(res => {\n        this.allRequestList = res.map(each => {\n          return {\n            ...each,\n            formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n            fromatedDateToRespond: each.escDateResponded ? this.datePipe.transform(each.escDateResponded, 'dd MMM yyyy') + \" \" + this.convertToDisplayTime(each.escTimeResponded) : '',\n            formatedDateResponded: each.dateResponded ? this.datePipe.transform(each.dateResponded, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeResponded) : '',\n            formatedDateToComplete: each.escDateCompleted ? this.datePipe.transform(each.escDateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.escTimeCompleted) : '',\n            formatedDateCompleted: each.dateCompleted ? this.datePipe.transform(each.dateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeCompleted) : ''\n          };\n        });\n        const currentDate = new Date(); // Assuming the current date is obtained correctly\n        this.allRequestList.forEach(item => {\n          const {\n            dateResponded,\n            escDateResponded,\n            dateCompleted,\n            escDateCompleted,\n            timeResponded,\n            timeCompleted,\n            escTimeResponded,\n            escTimeCompleted,\n            status\n          } = item;\n          const isEscalatedForResponse = dateResponded && new Date(dateResponded + 'T' + timeResponded).getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime() || !dateResponded && currentDate.getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime();\n          const isEscalatedForComplete = dateCompleted && new Date(dateCompleted + 'T' + timeCompleted).getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime() || !dateCompleted && currentDate.getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime();\n          const statusEnum = this.getEnumById(status);\n          if (isEscalatedForResponse && !isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n            this.esctdResponseData.push(item);\n          }\n          if (isEscalatedForComplete && !isEscalatedForResponse && statusEnum !== \"Cancelled\" && statusEnum !== \"Rejected\") {\n            this.esctdCompleteData.push(item);\n          }\n          if (isEscalatedForResponse && isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n            this.esctdCompleteAndResponseData.push(item);\n          }\n          if (!isEscalatedForResponse && !isEscalatedForComplete) {\n            this.noEsctdData.push(item);\n          }\n        });\n        this.chartData = [];\n        this.chartData = [this.esctdResponseData.length, this.esctdCompleteData.length, this.esctdCompleteAndResponseData.length, this.noEsctdData.length];\n        this.setChartData(this.chartData);\n        this.setPieChartData(this.chartData);\n        this.setGridData();\n      });\n    }\n    isWhiteColorShade(color) {\n      // Extract RGB values from the color string\n      const rgbValues = color.match(/\\d+/g);\n      const r = parseInt(rgbValues[0]);\n      const g = parseInt(rgbValues[1]);\n      const b = parseInt(rgbValues[2]);\n      // Check if all RGB values are close to 255 (white)\n      const threshold = 50; // Adjust this threshold as needed\n      const average = (r + g + b) / 3;\n      return average > threshold;\n    }\n    setChartData(data) {\n      const documentStyle = getComputedStyle(document.documentElement);\n      const textColor = documentStyle.getPropertyValue('--text-color');\n      this.dynamicColors = [];\n      for (let i = 0; i < this.labels.length; i++) {\n        let color = '';\n        do {\n          color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n        } while (color === 'rgba(255, 255, 255, 1)' || this.isWhiteColorShade(color));\n        {\n          // Regenerate color if it is white\n          color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n        }\n        ;\n        this.dynamicColors.push(color);\n      }\n      this.customScheme = {\n        domain: [...this.dynamicColors]\n      };\n      this.data = {\n        labels: this.labels,\n        datasets: [{\n          label: 'Requests',\n          data: data,\n          backgroundColor: this.dynamicColors,\n          borderColor: this.dynamicColors,\n          borderWidth: 1\n        }]\n      };\n      if (this.chartType === 'bar') {\n        this.setBarChartOptions();\n      } else {\n        this.options = {\n          legend: {\n            position: 'right',\n            labels: {\n              usePointStyle: true,\n              generateLabels: chart => {\n                const data = chart.data;\n                if (data.labels.length && data.datasets.length) {\n                  return data.labels.map((label, i) => {\n                    const dataset = data.datasets[0];\n                    const meta = chart.getDatasetMeta(0);\n                    const style = meta.controller.getStyle(i);\n                    const count = dataset.data[i];\n                    return {\n                      text: `${label}: ${count}`,\n                      fillStyle: style.backgroundColor,\n                      hidden: isNaN(count) || meta.data[i].hidden,\n                      index: i\n                    };\n                  });\n                }\n                return [];\n              }\n            }\n          },\n          elements: {\n            arc: {\n              borderWidth: 1,\n              borderColor: '#fff'\n            }\n          }\n        };\n      }\n    }\n    onSelectBlCode($event) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n      }, 0);\n      if ($event.blId != null && $event.blId != '') {\n        this.selectedBl = $event;\n        this.selectedFl = {};\n      } else {\n        this.selectedBl = {};\n        this.selectedFl = {};\n      }\n    }\n    onSelectFlCode($event) {\n      if ($event.flId != null && $event.flId != '') {\n        this.selectedFl = $event;\n        const blData = {\n          blId: $event.blId,\n          blNameString: $event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: $event.blId\n          });\n        }, 10);\n      }\n    }\n    onClear() {\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.isShowGrid = false;\n      this.filterPanel.patchValue({\n        siteId: null,\n        blId: null,\n        flId: null,\n        dateRequestedFrom: null,\n        dateRequestedTo: null,\n        chartType: this.displayTypeData[0].value,\n        showType: this.showType\n      });\n    }\n    onClick(event) {\n      this.isShowDialog = false;\n      this.displayData = [];\n      let index = event.element ? event.element.index : null;\n      let label = index >= 0 ? this.labels[index] : event.name;\n      if (label === 'Escalated For Response') {\n        this.displayData = this.esctdResponseData;\n      } else if (label === 'Escalated For Complete') {\n        this.displayData = this.esctdCompleteData;\n      } else if (label === 'Not Escalated') {\n        this.displayData = this.noEsctdData;\n      } else {\n        this.displayData = this.esctdCompleteAndResponseData;\n      }\n      this.isShowDialog = true;\n    }\n    onSelectDisplayType(event) {\n      this.setChartData(this.chartData);\n      this.isShowGrid = false;\n      this.chartType = event.value;\n      if (this.chartType === 'pie' || this.chartType === 'doughnut') {\n        this.setOtherChartOptions();\n      } else if (this.chartType === 'bar') {\n        this.setBarChartOptions();\n      } else {\n        this.setGridData();\n        this.isShowGrid = true;\n      }\n      this.updatePieChartView();\n    }\n    updatePieChartView() {\n      if (this.chartType === 'pie' || this.chartType === 'doughnut') {\n        if (this.useTabletProtrait) {\n          this.pieChartView = [300, 250];\n        } else if (this.useTabletLandscape) {\n          this.pieChartView = [750, 400];\n        } else {\n          this.pieChartView = [1000, 500];\n        }\n      }\n    }\n    setGridData() {\n      this.esctdGridData = [{\n        label: 'Escalated For Response',\n        reqCount: this.esctdResponseData.length\n      }, {\n        label: 'Escalated For Complete',\n        reqCount: this.esctdCompleteData.length\n      }, {\n        label: 'Escalated For Response and Complete',\n        reqCount: this.esctdCompleteAndResponseData.length\n      }, {\n        label: 'Not Escalated',\n        reqCount: this.noEsctdData.length\n      }];\n    }\n    onRowSelect(label) {\n      this.isShowDialog = false;\n      if (label === 'Escalated For Response') {\n        this.displayData = this.esctdResponseData;\n      } else if (label === 'Escalated For Complete') {\n        this.displayData = this.esctdCompleteData;\n      } else if (label === 'Not Escalated') {\n        this.displayData = this.noEsctdData;\n      } else {\n        this.displayData = this.esctdCompleteAndResponseData;\n      }\n      this.isShowDialog = true;\n    }\n    exportChartToPDF() {\n      const htmlRef = this.chartContainer.nativeElement;\n      html2canvas(htmlRef).then(canvas => {\n        const imgData = canvas.toDataURL('image/png');\n        this.chartImg = [];\n        this.chartImg.push(imgData);\n        this.printPDF();\n      });\n    }\n    printPDF() {\n      var reportDetails = {\n        chartImg: this.chartImg,\n        title: 'SLA Escalated Summary Reports'\n      };\n      this.bookingSrv.printPdf(reportDetails).subscribe(res => {\n        if (res != null) {\n          this.messageService.add({\n            key: 'reportBookingSer',\n            severity: 'success',\n            summary: 'PDF Created',\n            detail: 'PDF created successfully'\n          });\n          var file = new Blob([res], {\n            type: 'application/pdf'\n          });\n          var fileURL = URL.createObjectURL(file);\n          window.open(fileURL);\n        }\n      });\n    }\n    setBarChartOptions() {\n      this.options = {\n        title: {\n          display: false,\n          text: 'Bar Chart',\n          fontSize: 18\n        },\n        legend: {\n          display: false\n        },\n        scales: {\n          x: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Escalated Type',\n              fontStyle: 'bold'\n            },\n            grid: {\n              display: false,\n              drawOnChartArea: false\n            }\n          },\n          y: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Request Count',\n              fontStyle: 'bold'\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 5\n            },\n            grid: {\n              display: false,\n              drawOnChartArea: false\n            }\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: 'index',\n          intersect: false,\n          callbacks: {\n            label: function (tooltipItem) {\n              return \"Requests: \" + tooltipItem.formattedValue;\n            }\n          }\n        },\n        responsive: true,\n        animation: {\n          duration: 1000,\n          easing: 'easeOutBounce'\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n      };\n    }\n    setOtherChartOptions() {\n      this.options.scales = {};\n      this.options.legend = {\n        position: 'right',\n        labels: {\n          generateLabels: chart => {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: `${label}: ${data.datasets[0].data[i]}`,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  hidden: isNaN(data.datasets[0].data[i]) || meta.data[i].hidden,\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        }\n      };\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n      });\n    }\n    getEnumById(id) {\n      return this.enumStatus.find(t => t.id === id)?.enumValue;\n    }\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    setPieChartData(chartData) {\n      this.pieChartData = [];\n      this.pieChartData.push({\n        label: this.labels[0],\n        name: this.labels[0] + \" \" + chartData[0],\n        value: chartData[0]\n      });\n      this.pieChartData.push({\n        label: this.labels[1],\n        name: this.labels[1] + \" \" + chartData[1],\n        value: chartData[1]\n      });\n      this.pieChartData.push({\n        label: this.labels[2],\n        name: this.labels[2] + \" \" + chartData[2],\n        value: chartData[2]\n      });\n      this.pieChartData.push({\n        label: this.labels[3],\n        name: this.labels[3] + \" \" + chartData[3],\n        value: chartData[3]\n      });\n    }\n    selectChartData(event) {\n      const isChartSelected = event.hasOwnProperty('name');\n      // Stop event propagation if the legend is selected\n      if (!isChartSelected) {\n        // event.preventDefault();\n        // event.stopPropagation();\n        return;\n      } else {\n        this.isShowDialog = false;\n        this.displayData = [];\n        let label = event.name;\n        if (label === `${this.labels[0]} ${this.chartData[0]}`) {\n          this.displayData = this.esctdResponseData;\n        } else if (label === `${this.labels[1]} ${this.chartData[1]}`) {\n          this.displayData = this.esctdCompleteData;\n        } else if (label === `${this.labels[2]} ${this.chartData[2]}`) {\n          this.displayData = this.esctdCompleteAndResponseData;\n        } else if (label === `${this.labels[3]} ${this.chartData[3]}`) {\n          this.displayData = this.noEsctdData;\n        }\n        this.isShowDialog = true;\n      }\n    }\n    ngOnDestroy() {\n      this.bps.unregister(this);\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blService.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blService.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.updateFlList(this.selectedFl);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      if (flData.flId) {\n        this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n        this.enumFL = this.enumFL.filter(t => t.flId !== null);\n        this.enumFL.unshift(flData);\n      }\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    static #_ = this.ɵfac = function SlaEscalatedSummaryReportsComponent_Factory(t) {\n      return new (t || SlaEscalatedSummaryReportsComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.BuildingService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i5.AddWorkRequestService), i0.ɵɵdirectiveInject(i6.BookingService), i0.ɵɵdirectiveInject(i7.EnumService), i0.ɵɵdirectiveInject(i8.BreakpointService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SlaEscalatedSummaryReportsComponent,\n      selectors: [[\"app-sla-escalated-summary-reports\"]],\n      viewQuery: function SlaEscalatedSummaryReportsComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartContainer = _t.first);\n        }\n      },\n      inputs: {\n        showType: \"showType\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 13,\n      vars: 16,\n      consts: [[1, \"card\", 2, \"height\", \"90vh\"], [\"header\", \"SLA Summary\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [1, \"p-d-flex\"], [\"class\", \"card\", \"style\", \"margin-top:3px\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"styleClass\", \"dark-panel\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"width\", \"100%\"], [2, \"width\", \"10%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedFrom\", \"formControlName\", \"dateRequestedFrom\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedTo\", \"formControlName\", \"dateRequestedTo\", \"inputId\", \"icon\", 3, \"showIcon\"], [2, \"width\", \"15%\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [2, \"width\", \"20%\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"showType\", \"bindLabel\", \"label\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"chartType\", \"bindLabel\", \"lable\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [2, \"width\", \"15%\", \"padding-top\", \"10px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", \"margin-right\", \"5px\", 3, \"click\"], [\"icon\", \"pi pi-file-pdf\", \"matTooltip\", \"Generate PDF\", \"matTooltipPosition\", \"below\", \"styleClass\", \"p-button-raised p-button-danger\", 3, \"disabled\", \"click\"], [2, \"width\", \"30%\"], [2, \"width\", \"30%\", \"padding-top\", \"10px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-panel-button\", 2, \"margin-left\", \"2px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-panel-button\", 2, \"margin-left\", \"2px\", \"margin-right\", \"2px\", 3, \"click\"], [2, \"width\", \"13%\"], [2, \"width\", \"22%\", \"padding-top\", \"10px\"], [1, \"card\", 2, \"margin-top\", \"3px\"], [\"chartContainer\", \"\"], [3, \"type\", \"height\", \"data\", \"options\", \"onDataSelect\"], [\"barChart\", \"\"], [\"pTemplate\", \"dataLabel\"], [3, \"results\", \"view\", \"legend\", \"labels\", \"doughnut\", \"scheme\", \"legendTitle\", \"tooltipDisabled\", \"select\"], [1, \"card\"], [\"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\"], [\"pTemplate\", \"emptymessage\"], [\"pSortableColumn\", \"label\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"label\"], [\"type\", \"text\", \"field\", \"label\", \"display\", \"menu\"], [\"pSortableColumn\", \"reqCount\"], [\"field\", \"reqCount\"], [\"type\", \"text\", \"field\", \"reqCount\", \"display\", \"menu\"], [3, \"pSelectableRow\", \"click\"], [3, \"data\", \"isEscalatedData\"]],\n      template: function SlaEscalatedSummaryReportsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"form\", 2);\n          i0.ɵɵtemplate(3, SlaEscalatedSummaryReportsComponent_table_3_Template, 40, 17, \"table\", 3);\n          i0.ɵɵtemplate(4, SlaEscalatedSummaryReportsComponent_table_4_Template, 42, 17, \"table\", 3);\n          i0.ɵɵtemplate(5, SlaEscalatedSummaryReportsComponent_table_5_Template, 40, 17, \"table\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 4);\n          i0.ɵɵtemplate(7, SlaEscalatedSummaryReportsComponent_div_7_Template, 5, 4, \"div\", 5);\n          i0.ɵɵtemplate(8, SlaEscalatedSummaryReportsComponent_div_8_Template, 4, 8, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, SlaEscalatedSummaryReportsComponent_div_9_Template, 5, 2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"p-dialog\", 7);\n          i0.ɵɵlistener(\"visibleChange\", function SlaEscalatedSummaryReportsComponent_Template_p_dialog_visibleChange_10_listener($event) {\n            return ctx.isShowDialog = $event;\n          });\n          i0.ɵɵtemplate(11, SlaEscalatedSummaryReportsComponent_ng_template_11_Template, 2, 0, \"ng-template\", 8);\n          i0.ɵɵtemplate(12, SlaEscalatedSummaryReportsComponent_ng_template_12_Template, 1, 2, \"ng-template\", 9);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"toggleable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait && !ctx.useTabletLandscape);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.useTabletLandscape);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.chartType == \"bar\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.chartType == \"pie\" || ctx.chartType == \"doughnut\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isShowGrid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(15, _c1));\n          i0.ɵɵproperty(\"visible\", ctx.isShowDialog)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n        }\n      },\n      dependencies: [i4.NgIf, i1.PrimeTemplate, i9.Table, i9.SortableColumn, i9.SelectableRow, i9.SortIcon, i9.ColumnFilter, i10.Calendar, i11.ButtonDirective, i11.Button, i12.Dialog, i13.Panel, i14.UIChart, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i15.NgSelectComponent, i16.AddTableComponent, i17.PieChartComponent],\n      styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header{padding-left:1rem!important;padding:0rem;border-radius:0rem!important}[_nghost-%COMP%]     .chart-legend .legend-labels{width:auto!important}[_nghost-%COMP%]     .ngx-charts-outer{animation:chartFadeIn linear 0!important}.filter-panel-button[_ngcontent-%COMP%]{width:50px}\"]\n    });\n  }\n  return SlaEscalatedSummaryReportsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}