{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { RmTypeFilterInputDTO } from '../../model/DTO/rmTypeFilterInput.model';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from '../../../../../common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/rmcat.service\";\nimport * as i2 from \"../../provider/rmtype.provider\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/panel\";\nimport * as i8 from \"primeng/confirmdialog\";\nfunction RmTypeListComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function RmTypeListComponent_ng_template_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAddRoomType());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RmTypeListComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 15);\n    i0.ɵɵelementStart(2, \"th\", 16);\n    i0.ɵɵtext(3, \" Room Category \");\n    i0.ɵɵelement(4, \"p-sortIcon\", 17)(5, \"p-columnFilter\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 19);\n    i0.ɵɵtext(7, \" Room Type \");\n    i0.ɵɵelement(8, \"p-sortIcon\", 20)(9, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 22);\n    i0.ɵɵtext(11, \" Description \");\n    i0.ɵɵelement(12, \"p-sortIcon\", 23)(13, \"p-columnFilter\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RmTypeListComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 25)(1, \"td\", 15)(2, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function RmTypeListComponent_ng_template_12_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const rmtype_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.openEditItem(rmtype_r7.rmType, rmtype_r7.rmCat));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function RmTypeListComponent_ng_template_12_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const rmtype_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteRoomType(rmtype_r7.rmType, rmtype_r7.rmCat));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵelement(11, \"div\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rmtype_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", rmtype_r7);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(rmtype_r7.rmCat);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rmtype_r7.rmType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rmtype_r7.rmTypeDesc);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", rmtype_r7.highlightColor);\n  }\n}\nfunction RmTypeListComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nexport let RmTypeListComponent = /*#__PURE__*/(() => {\n  class RmTypeListComponent {\n    constructor(service, rmTypeProvider, messageService, confirmationService) {\n      this.service = service;\n      this.rmTypeProvider = rmTypeProvider;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.rmType_data = [];\n      this.subscriptions = [];\n      this.loading = false;\n      this.isRmTypeList = true;\n      this.displayedColumns = ['id', 'rmType', 'rmCat', 'rmTypeDesc'];\n      this.selectedRmStandard = '';\n      this.isHide = true;\n      this.rmCat = '';\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.parentFun = new EventEmitter();\n    }\n    ngOnInit() {}\n    loadRecords(data) {\n      this.loading = true;\n      this.isRmTypeList = true;\n      this.rmType_data = [];\n      this.rmCat = data.rmCat;\n      this.selectedRmStandard = \"Room Standard: \" + data.rmCat;\n      this.service.getRmTypeList(data).subscribe(res => {\n        if (res.status != 202) {\n          this.isRmTypeList = false;\n          this.rmType_data = res;\n        } else {\n          this.isRmTypeList = true;\n          this.rmType_data = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    openEditItem(rmtype, rmcat) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        rmtype: rmtype,\n        rmcat: rmcat,\n        isEdit: true,\n        newRecord: false\n      };\n      this.rmTypeProvider.openDialog(dialogConfig);\n      this.rmTypeProvider.onDialogueClosed.subscribe(result => {\n        //this.loadRecords(new RmTypeFilterInputDTO(\"\", \"\", \"\"));\n        this.isHide = true;\n        if (result == true) {\n          //this.loadRecords(new RmTypeFilterInputDTO(\"\", \"\", this.rmCat));\n          if (this.rmCat != '') {\n            this.isHide = false;\n            this.selectedRmStandard = \"Room Standard: \" + this.rmCat;\n          } else {\n            this.isHide = true;\n          }\n        } else if (result == 'saved') {\n          if (this.rmCat != '') {\n            this.parentFun.emit(this.rmCat);\n          } else {\n            this.loadRecords(new RmTypeFilterInputDTO(\"\", \"\", \"\"));\n          }\n        } else {\n          this.parentFun.emit(this.rmCat);\n        }\n      });\n    }\n    onAddRoomType() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        rmtype: null,\n        rmcat: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.rmTypeProvider.openDialog(dialogConfig);\n      this.rmTypeProvider.onDialogueClosed.subscribe(result => {\n        this.isHide = true;\n        if (result == true) {\n          //this.loadRecords(new RmTypeFilterInputDTO(\"\", \"\", this.rmCat));\n          if (this.rmCat != '') {\n            this.isHide = false;\n            this.selectedRmStandard = \"Room Standard: \" + this.rmCat;\n          } else {\n            this.isHide = true;\n          }\n        } else if (result == 'saved' || 'deleted') {\n          if (this.rmCat != '') {\n            this.parentFun.emit(this.rmCat);\n          } else {\n            this.loadRecords(new RmTypeFilterInputDTO(\"\", \"\", \"\"));\n          }\n        } else {\n          this.parentFun.emit(this.rmCat);\n        }\n      });\n    }\n    onRowSelect(event) {\n      //this.parentFun.emit(event.data);\n    }\n    onClearRmStandard() {\n      this.parentFun.emit(true);\n      this.isHide = true;\n    }\n    deleteRoomType(rm_type, rm_cat) {\n      this.userDeleteConfirm(rm_type, rm_cat);\n    }\n    deleteRecord(rmtype, rm_cat) {\n      let data = new RmTypeFilterInputDTO(rmtype, \"\", rm_cat);\n      this.service.deleteRoomType(data).subscribe(res => {\n        if (res != null) {\n          this.messageService.add({\n            key: 'rmTypeMessage',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          if (this.rmCat != '') {\n            this.parentFun.emit(this.rmCat);\n          } else {\n            this.loadRecords(new RmTypeFilterInputDTO(\"\", \"\", \"\"));\n          }\n        }\n      });\n    }\n    userDeleteConfirm(rm_type, rm_cat) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ' + rm_type + ' ?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deleteRecord(rm_type, rm_cat);\n        },\n        key: \"rmTypeGrid\"\n      });\n    }\n    static #_ = this.ɵfac = function RmTypeListComponent_Factory(t) {\n      return new (t || RmTypeListComponent)(i0.ɵɵdirectiveInject(i1.RmcatService), i0.ɵɵdirectiveInject(i2.RmTypeModalDialogueProvider), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.ConfirmationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RmTypeListComponent,\n      selectors: [[\"app-rm-type-list\"]],\n      viewQuery: function RmTypeListComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatSort, 5);\n          i0.ɵɵviewQuery(MatPaginator, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        }\n      },\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 16,\n      vars: 10,\n      consts: [[\"header\", \" \"], [2, \"width\", \"auto\", 3, \"hidden\"], [2, \"width\", \"auto\"], [\"width\", \"30px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", 1, \"p-button-text\", \"p-button\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"key\", \"rmTypeMessage\"], [\"key\", \"rmTypeGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"rmCat\"], [\"field\", \"rmCat\"], [\"type\", \"text\", \"field\", \"rmCat\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmType\"], [\"field\", \"rmType\"], [\"type\", \"text\", \"field\", \"rmType\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmTypeDesc\"], [\"field\", \"rmTypeDesc\"], [\"type\", \"text\", \"field\", \"rmTypeDesc\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 1, \"p-button-text\", \"p-button\", \"mr5\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", 1, \"p-button-text\", \"p-button\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [1, \"td-class\"]],\n      template: function RmTypeListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2);\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"td\", 3)(6, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function RmTypeListComponent_Template_button_click_6_listener() {\n            return ctx.onClearRmStandard();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(7, RmTypeListComponent_ng_template_7_Template, 1, 0, \"ng-template\", 5);\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"p-table\", 7, 8);\n          i0.ɵɵtemplate(11, RmTypeListComponent_ng_template_11_Template, 16, 0, \"ng-template\", 9);\n          i0.ɵɵtemplate(12, RmTypeListComponent_ng_template_12_Template, 12, 6, \"ng-template\", 10);\n          i0.ɵɵtemplate(13, RmTypeListComponent_ng_template_13_Template, 3, 1, \"ng-template\", 11);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(14, \"p-toast\", 12)(15, \"p-confirmDialog\", 13);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"hidden\", ctx.isHide);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.selectedRmStandard);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"value\", ctx.rmType_data)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0))(\"rowHover\", false)(\"scrollable\", true);\n        }\n      },\n      dependencies: [i3.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i4.SortIcon, i4.ColumnFilter, i5.ButtonDirective, i6.Toast, i7.Panel, i8.ConfirmDialog],\n      styles: [\"span[_ngcontent-%COMP%]{height:24px!important;font-size:10px!important}.trFont[_ngcontent-%COMP%]{font-size:11px!important}.panel-group-custom[_ngcontent-%COMP%]{margin:-12px!important}label[_ngcontent-%COMP%]{font-size:10px;font-weight:500;padding:0 0 0 3px;margin-bottom:-10px!important}.td-calc-2[_ngcontent-%COMP%]{width:50%}.panel-body-custom[_ngcontent-%COMP%]{padding:0}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px}select[_ngcontent-%COMP%], input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{border:thin double rgb(181,155,90)!important;padding-left:5px;background:#fff}.input-group[_ngcontent-%COMP%]   .input-group-addon[_ngcontent-%COMP%]{height:24px}.td-class[_ngcontent-%COMP%]{background-color:inherit;display:flex;align-items:center;justify-content:center;width:40px;height:20px;margin:10px auto auto;border:1px solid black}\"]\n    });\n  }\n  return RmTypeListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}