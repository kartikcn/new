{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { EqStdDTO } from '../../../eq-std/model/eqStdDto';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { take } from 'rxjs/operators';\nimport { SiteFilterInputDTO } from 'src/app/ui/site/modal/SiteFilterInputDTO.model';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/site.service\";\nimport * as i3 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i4 from \"../../../eq-std/services/eq-std.services\";\nimport * as i5 from \"../../../equipment/services/equipment.services\";\nimport * as i6 from \"src/app/services/enum.service\";\nimport * as i7 from \"../../../work-request/provider/add-problem-type.provider\";\nimport * as i8 from \"src/app/services/breakpoint.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@ng-select/ng-select\";\nimport * as i11 from \"primeng/button\";\nfunction AddSlaRequestComponent_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 2)(1, \"tr\")(2, \"td\", 3)(3, \"div\", 4)(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Problem Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7);\n    i0.ɵɵelement(8, \"textarea\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"p-button\", 10);\n    i0.ɵɵlistener(\"click\", function AddSlaRequestComponent_table_1_Template_p_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onAddProblemType());\n    });\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementStart(11, \"tr\")(12, \"td\", 3)(13, \"div\", 4)(14, \"label\", 11);\n    i0.ɵɵtext(15, \"Site\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"ng-select\", 12);\n    i0.ɵɵlistener(\"change\", function AddSlaRequestComponent_table_1_Template_ng_select_change_16_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onChangeSite($event));\n    })(\"scrollToEnd\", function AddSlaRequestComponent_table_1_Template_ng_select_scrollToEnd_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.scrollToEndSite());\n    })(\"search\", function AddSlaRequestComponent_table_1_Template_ng_select_search_16_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.searchSite($event));\n    })(\"open\", function AddSlaRequestComponent_table_1_Template_ng_select_open_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onOpenSite());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(17, \"tr\")(18, \"td\", 3)(19, \"div\", 4)(20, \"label\", 11);\n    i0.ɵɵtext(21, \"Building\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"ng-select\", 13);\n    i0.ɵɵlistener(\"change\", function AddSlaRequestComponent_table_1_Template_ng_select_change_22_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSelectBl($event));\n    })(\"scrollToEnd\", function AddSlaRequestComponent_table_1_Template_ng_select_scrollToEnd_22_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.scrollToEndBl());\n    })(\"search\", function AddSlaRequestComponent_table_1_Template_ng_select_search_22_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.searchBl($event));\n    })(\"open\", function AddSlaRequestComponent_table_1_Template_ng_select_open_22_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(23, \"tr\")(24, \"td\", 3)(25, \"div\", 4)(26, \"label\", 11);\n    i0.ɵɵtext(27, \"Asset Standard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"ng-select\", 14);\n    i0.ɵɵlistener(\"change\", function AddSlaRequestComponent_table_1_Template_ng_select_change_28_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onChangeEqStd($event));\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"readonly\", true);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumSites)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.eqStdData)(\"searchable\", true);\n  }\n}\nfunction AddSlaRequestComponent_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 2)(1, \"tr\")(2, \"td\", 15)(3, \"div\", 4)(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Problem Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7);\n    i0.ɵɵelement(8, \"textarea\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"p-button\", 16);\n    i0.ɵɵlistener(\"click\", function AddSlaRequestComponent_table_2_Template_p_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onAddProblemType());\n    });\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(11, \"td\", 15)(12, \"div\", 4)(13, \"label\", 11);\n    i0.ɵɵtext(14, \"Asset Standard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ng-select\", 14);\n    i0.ɵɵlistener(\"change\", function AddSlaRequestComponent_table_2_Template_ng_select_change_15_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onChangeEqStd($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"tr\")(17, \"td\", 15)(18, \"div\", 4)(19, \"label\", 11);\n    i0.ɵɵtext(20, \"Site\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"ng-select\", 12);\n    i0.ɵɵlistener(\"change\", function AddSlaRequestComponent_table_2_Template_ng_select_change_21_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onChangeSite($event));\n    })(\"scrollToEnd\", function AddSlaRequestComponent_table_2_Template_ng_select_scrollToEnd_21_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.scrollToEndSite());\n    })(\"search\", function AddSlaRequestComponent_table_2_Template_ng_select_search_21_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.searchSite($event));\n    })(\"open\", function AddSlaRequestComponent_table_2_Template_ng_select_open_21_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onOpenSite());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"td\", 15)(23, \"div\", 4)(24, \"label\", 11);\n    i0.ɵɵtext(25, \"Building\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"ng-select\", 13);\n    i0.ɵɵlistener(\"change\", function AddSlaRequestComponent_table_2_Template_ng_select_change_26_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.onSelectBl($event));\n    })(\"scrollToEnd\", function AddSlaRequestComponent_table_2_Template_ng_select_scrollToEnd_26_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.scrollToEndBl());\n    })(\"search\", function AddSlaRequestComponent_table_2_Template_ng_select_search_26_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.searchBl($event));\n    })(\"open\", function AddSlaRequestComponent_table_2_Template_ng_select_open_26_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"readonly\", true);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.eqStdData)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumSites)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumBL)(\"searchable\", true);\n  }\n}\nexport let AddSlaRequestComponent = /*#__PURE__*/(() => {\n  class AddSlaRequestComponent {\n    constructor(formBuilder, siteSrv, blSrv, eqStdService, eqService, enumsrv, addPbTypeProvider, bps) {\n      this.formBuilder = formBuilder;\n      this.siteSrv = siteSrv;\n      this.blSrv = blSrv;\n      this.eqStdService = eqStdService;\n      this.eqService = eqService;\n      this.enumsrv = enumsrv;\n      this.addPbTypeProvider = addPbTypeProvider;\n      this.bps = bps;\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumPriority = [];\n      this.enumProbTypes = [];\n      this.subscriptions = [];\n      this.enumSites = [];\n      this.enumSiteData = [];\n      this.enumAllBL = [];\n      this.enumBL = [];\n      this.eqStdData = [];\n      this.allEqData = [];\n      this.eqData = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.allRmDdata = [];\n      this.rm_data = [];\n      this.displayProblemType = '';\n      this.useTabletProtrait = false;\n      this.limitSite = 0;\n      this.offsetSite = 0;\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedSite = {};\n      this.selectedBl = {};\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.slaRequestFormPanel = this.formBuilder.group({\n        slaRequestParametersId: [''],\n        problemTypeString: ['', [Validators.required]],\n        probTypeId: [null],\n        siteId: [''],\n        blId: [''],\n        flId: [''],\n        rmId: [''],\n        eqStdId: [],\n        eqId: []\n      });\n      this.subscriptions.push(this.slaRequestFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {\n      this.bps.register(this);\n      this.loadEnums();\n      this.loadEqStandard();\n      this.loadequipments();\n    }\n    notify() {\n      this.useTabletProtrait = BreakpointService.useTabletProtrait;\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumClonedList = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla'.toLocaleUpperCase());\n        this.enumPriority = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'sla'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'priority'.toLocaleUpperCase());\n        this.enumPriority.unshift(new EnumList(null, \"\", \"\", 'Make a selection', null));\n      }, error => {});\n    }\n    loadEqStandard() {\n      this.eqStdService.getAllEqStds().subscribe(res => {\n        this.eqStdData = res.map(t => {\n          t.displayName = t.description != null ? t.eqStd + \" - \" + t.description : t.eqStd;\n          return t;\n        });\n        this.eqStdData.unshift(new EqStdDTO(\"Make a Selection\", '', '', 0));\n      });\n    }\n    loadequipments() {\n      this.eqService.getAllEquipments().subscribe(res => {\n        if (res.status != 202) {\n          this.allEqData = res;\n          this.eqData = this.allEqData;\n          this.eqData.unshift(new Object({\n            eqId: \"Make a selection\",\n            description: ''\n          }));\n        }\n      });\n    }\n    onAddProblemType() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '600px';\n      dialogConfig.data = {\n        newRecord: true\n      };\n      this.addPbTypeProvider.openDialog(dialogConfig);\n      this.addPbTypeProvider.onDialogueClosed.pipe(take(1)).subscribe(result => {\n        if (result) {\n          if (result.data) {\n            this.slaRequestFormPanel.patchValue({\n              probTypeId: result.data.problemTypeId\n            });\n            this.displayPbTypeFun(result);\n            this.displayProblemType = \"\";\n          }\n        }\n      });\n    }\n    displayPbTypeFun(pbTypeData) {\n      if (pbTypeData) {\n        this.displayProblemType = this.displayProblemType + pbTypeData.label + \" | \";\n        if (pbTypeData.parent) {\n          this.displayPbTypeFun(pbTypeData.parent);\n        } else {\n          this.displayProblemType = this.displayProblemType.split(\" | \").reverse().join(\" | \").slice(3);\n          this.slaRequestFormPanel.patchValue({\n            problemTypeString: this.displayProblemType\n          });\n        }\n      }\n    }\n    onChangeSite(event) {\n      if (event.siteId !== \"\" && event.siteId !== null) {\n        this.selectedSite = event;\n        this.selectedBl = {};\n        setTimeout(() => {\n          this.slaRequestFormPanel.patchValue({\n            blId: null,\n            flId: null,\n            rmId: null\n          });\n        }, 0);\n      } else {\n        this.selectedSite = {};\n        this.selectedBl = {};\n      }\n    }\n    onSelectBl(event) {\n      if (event.blId != null && event.blId != '') {\n        this.selectedBl = event;\n        const siteData = {\n          siteId: event.siteId,\n          siteName: event.siteNameString\n        };\n        this.selectedSite = siteData;\n        this.updateSiteList(siteData);\n        setTimeout(() => {\n          this.slaRequestFormPanel.patchValue({\n            siteId: event.siteId,\n            flId: null,\n            rmId: null\n          });\n        }, 0);\n      } else {}\n    }\n    onChangeEqStd(event) {\n      if (event.eqStdId) {\n        this.eqData = this.allEqData.filter(t => t.eqStdId === event.eqStdId);\n      } else {\n        setTimeout(() => {\n          this.slaRequestFormPanel.patchValue({\n            eqId: null\n          });\n        }, 0);\n        this.eqData = this.allEqData;\n      }\n    }\n    onSelectEq(event) {\n      if (event.eqId) {\n        setTimeout(() => {\n          this.slaRequestFormPanel.patchValue({\n            eqStd: event.eqStd\n          });\n        }, 0);\n      } else {\n        setTimeout(() => {\n          this.slaRequestFormPanel.patchValue({\n            eqStd: null\n          });\n        }, 0);\n      }\n    }\n    isValid() {\n      return this.getValidationErrors().length === 0;\n    }\n    getValidationErrors() {\n      const me = this;\n      const validationErros = [];\n      return validationErros;\n    }\n    get value() {\n      const slaDetails = {\n        slaRequestParametersId: this.slaRequestFormPanel.controls.slaRequestParametersId.value,\n        probTypeId: this.slaRequestFormPanel.controls.probTypeId.value,\n        problemTypeString: this.slaRequestFormPanel.controls.problemTypeString.value,\n        eqStdId: this.slaRequestFormPanel.controls.eqStdId.value,\n        eqId: this.slaRequestFormPanel.controls.eqId.value,\n        siteId: this.slaRequestFormPanel.controls.siteId.value,\n        blId: this.slaRequestFormPanel.controls.blId.value,\n        flId: this.slaRequestFormPanel.controls.flId.value,\n        rmId: this.slaRequestFormPanel.controls.rmId.value\n      };\n      return slaDetails;\n    }\n    set value(value) {\n      if (value.siteId) {\n        const siteData = {\n          siteId: value.siteId,\n          siteName: value.siteSiteName\n        };\n        this.selectedSite = siteData;\n        this.updateSiteList(siteData);\n      }\n      if (value.blId) {\n        const blData = {\n          blId: value.blId,\n          blNameString: value.blBlName,\n          site: value.siteId\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n      }\n      setTimeout(() => {\n        this.slaRequestFormPanel.patchValue({\n          slaRequestParametersId: value.slaRequestParametersId,\n          probTypeId: value.probTypeId,\n          problemTypeString: value.problemTypeString,\n          eqStdId: value.eqStdId,\n          eqId: value.eqId,\n          siteId: value.siteId,\n          blId: value.blId,\n          flId: value.flId,\n          rmId: value.rmId\n        });\n      });\n      this.onChange(value);\n      this.onTouched();\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.slaRequestFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    validate(_) {\n      return this.slaRequestFormPanel.valid ? null : {\n        slaRequestFormPanel: {\n          valid: false\n        }\n      };\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n      this.bps.unregister(this);\n    }\n    scrollToEndSite() {\n      this.offsetSite = this.limitSite;\n      this.limitSite += this.scrollLimit;\n      this.filterCriteria.limit = this.limitSite;\n      this.filterCriteria.offset = this.offsetSite;\n      this.siteSrv.getAllSiteByScroll(this.filterCriteria).subscribe(res => {\n        this.enumSites = res;\n        this.updateSiteList(this.selectedSite);\n      });\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blSrv.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    searchSite(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"siteName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndSite();\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    updateSiteList(siteData) {\n      if (siteData.siteId) {\n        this.enumSites = this.enumSites.filter(t => t.siteId !== siteData.siteId);\n        this.enumSites = this.enumSites.filter(t => t.siteId !== null);\n        this.enumSites.unshift(siteData);\n      }\n      this.enumSites.unshift(new SiteFilterInputDTO(null, 'Make a selection'));\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    onOpenSite() {\n      this.limitSite = 0;\n      this.offsetSite = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndSite();\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      if (this.selectedSite.siteId) {\n        this.filterCriteria = {\n          fieldName: \"site.siteId\",\n          value: this.selectedSite.siteId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndBl();\n    }\n    static #_ = this.ɵfac = function AddSlaRequestComponent_Factory(t) {\n      return new (t || AddSlaRequestComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.SiteService), i0.ɵɵdirectiveInject(i3.BuildingService), i0.ɵɵdirectiveInject(i4.EqStdService), i0.ɵɵdirectiveInject(i5.EquipmentService), i0.ɵɵdirectiveInject(i6.EnumService), i0.ɵɵdirectiveInject(i7.AddWrProblemTypeProvider), i0.ɵɵdirectiveInject(i8.BreakpointService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddSlaRequestComponent,\n      selectors: [[\"app-add-sla-request\"]],\n      inputs: {\n        isNew: \"isNew\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddSlaRequestComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddSlaRequestComponent),\n        multi: true\n      }])],\n      decls: 3,\n      vars: 3,\n      consts: [[3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [\"width\", \"100%\"], [\"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"align-items\", \"center\"], [2, \"width\", \"85%\"], [\"name\", \"problemTypeString\", \"rows\", \"2\", \"formControlName\", \"problemTypeString\", \"placeholder\", \"Add problem type\", \"nz-input\", \"\", 1, \"form-control\", \"note-border\", 3, \"readonly\"], [2, \"margin-left\", \"10px\"], [\"icon\", \"pi pi-search\", \"matTooltip\", \"Select\", \"matTooltipPosition\", \"below\", 3, \"click\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"siteId\", \"bindLabel\", \"siteName\", \"bindValue\", \"siteId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"eqStdId\", \"bindLabel\", \"displayName\", \"bindValue\", \"eqStdId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"width\", \"50%\"], [\"icon\", \"pi pi-search\", \"matTooltip\", \"Select\", \"matTooltipPosition\", \"top\", 3, \"click\"]],\n      template: function AddSlaRequestComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵtemplate(1, AddSlaRequestComponent_table_1_Template, 29, 10, \"table\", 1);\n          i0.ɵɵtemplate(2, AddSlaRequestComponent_table_2_Template, 27, 10, \"table\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.slaRequestFormPanel);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n        }\n      },\n      dependencies: [i9.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i10.NgSelectComponent, i11.Button],\n      styles: [\"[_nghost-%COMP%]     .p-button{background-color:#fff!important;border-radius:50%;border:2px solid #2196F3}[_nghost-%COMP%]     .pi.pi-plus{color:#2196f3}[_nghost-%COMP%]     .pi.pi-search{color:#2196f3}  .ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{overflow:hidden!important;text-overflow:ellipsis!important;white-space:nowrap!important;max-width:200px!important}\"]\n    });\n  }\n  return AddSlaRequestComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}