{"ast":null,"code":"import { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, TemplateRef, Component, ChangeDetectionStrategy, Input, ContentChildren, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction NzSpaceComponent_ng_template_1_span_2_ng_template_1_Template(rf, ctx) {}\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction NzSpaceComponent_ng_template_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, NzSpaceComponent_ng_template_1_span_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    const last_r2 = ctx_r6.last;\n    const index_r3 = ctx_r6.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"margin-bottom\", ctx_r4.nzDirection === \"vertical\" ? last_r2 ? null : ctx_r4.spaceSize : null, \"px\")(\"margin-right\", ctx_r4.nzDirection === \"horizontal\" ? last_r2 ? null : ctx_r4.spaceSize : null, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.nzSplit)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c0, index_r3));\n  }\n}\nfunction NzSpaceComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementContainer(1, 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NzSpaceComponent_ng_template_1_span_2_Template, 2, 8, \"span\", 3);\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const last_r2 = ctx.last;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"margin-bottom\", ctx_r0.nzDirection === \"vertical\" ? last_r2 ? null : ctx_r0.spaceSize : null, \"px\")(\"margin-right\", ctx_r0.nzDirection === \"horizontal\" ? last_r2 ? null : ctx_r0.spaceSize : null, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", item_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzSplit && !last_r2);\n  }\n}\nconst _c1 = [\"*\"];\nlet NzSpaceItemDirective = /*#__PURE__*/(() => {\n  class NzSpaceItemDirective {\n    constructor() {}\n    static #_ = this.ɵfac = function NzSpaceItemDirective_Factory(t) {\n      return new (t || NzSpaceItemDirective)();\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzSpaceItemDirective,\n      selectors: [[\"\", \"nzSpaceItem\", \"\"]]\n    });\n  }\n  return NzSpaceItemDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NZ_CONFIG_MODULE_NAME = 'space';\nconst SPACE_SIZE = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\nlet NzSpaceComponent = /*#__PURE__*/(() => {\n  class NzSpaceComponent {\n    constructor(nzConfigService, cdr) {\n      this.nzConfigService = nzConfigService;\n      this.cdr = cdr;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzDirection = 'horizontal';\n      this.nzSplit = null;\n      this.nzWrap = false;\n      this.nzSize = 'small';\n      this.spaceSize = SPACE_SIZE.small;\n      this.destroy$ = new Subject();\n    }\n    updateSpaceItems() {\n      const numberSize = typeof this.nzSize === 'string' ? SPACE_SIZE[this.nzSize] : this.nzSize;\n      this.spaceSize = numberSize / (this.nzSplit ? 2 : 1);\n      this.cdr.markForCheck();\n    }\n    ngOnChanges() {\n      this.updateSpaceItems();\n      this.mergedAlign = this.nzAlign === undefined && this.nzDirection === 'horizontal' ? 'center' : this.nzAlign;\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    ngAfterContentInit() {\n      this.updateSpaceItems();\n      this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.cdr.markForCheck();\n      });\n    }\n    static #_ = this.ɵfac = function NzSpaceComponent_Factory(t) {\n      return new (t || NzSpaceComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSpaceComponent,\n      selectors: [[\"nz-space\"], [\"\", \"nz-space\", \"\"]],\n      contentQueries: function NzSpaceComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzSpaceItemDirective, 4, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n        }\n      },\n      hostAttrs: [1, \"ant-space\"],\n      hostVars: 14,\n      hostBindings: function NzSpaceComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"flex-wrap\", ctx.nzWrap ? \"wrap\" : null);\n          i0.ɵɵclassProp(\"ant-space-horizontal\", ctx.nzDirection === \"horizontal\")(\"ant-space-vertical\", ctx.nzDirection === \"vertical\")(\"ant-space-align-start\", ctx.mergedAlign === \"start\")(\"ant-space-align-end\", ctx.mergedAlign === \"end\")(\"ant-space-align-center\", ctx.mergedAlign === \"center\")(\"ant-space-align-baseline\", ctx.mergedAlign === \"baseline\");\n        }\n      },\n      inputs: {\n        nzDirection: \"nzDirection\",\n        nzAlign: \"nzAlign\",\n        nzSplit: \"nzSplit\",\n        nzWrap: \"nzWrap\",\n        nzSize: \"nzSize\"\n      },\n      exportAs: [\"NzSpace\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c1,\n      decls: 2,\n      vars: 1,\n      consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"ant-space-item\"], [3, \"ngTemplateOutlet\"], [\"class\", \"ant-space-split\", 3, \"margin-bottom\", \"margin-right\", 4, \"ngIf\"], [1, \"ant-space-split\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function NzSpaceComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n          i0.ɵɵtemplate(1, NzSpaceComponent_ng_template_1_Template, 3, 6, \"ng-template\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzSpaceComponent.prototype, \"nzWrap\", void 0);\n  __decorate([WithConfig()], NzSpaceComponent.prototype, \"nzSize\", void 0);\n  return NzSpaceComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSpaceModule = /*#__PURE__*/(() => {\n  class NzSpaceModule {\n    static #_ = this.ɵfac = function NzSpaceModule_Factory(t) {\n      return new (t || NzSpaceModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzSpaceModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BidiModule, CommonModule]\n    });\n  }\n  return NzSpaceModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSpaceComponent, NzSpaceItemDirective, NzSpaceModule };\n//# sourceMappingURL=ng-zorro-antd-space.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}