{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"../svg-view/services/svg-view.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"../division-department/services/division.services\";\nimport * as i8 from \"../division-department/services/department.services\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@ng-select/ng-select\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/button\";\nimport * as i13 from \"primeng/toast\";\nimport * as i14 from \"primeng/confirmdialog\";\nimport * as i15 from \"../svg-view/svg-view.component\";\nfunction DivDeptSvgComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DivDeptSvgComponent_div_21_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 30);\n    i0.ɵɵtext(2, \" Division Id \");\n    i0.ɵɵelement(3, \"p-sortIcon\", 31)(4, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DivDeptSvgComponent_div_21_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 33)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"div\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const div_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", div_r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(div_r9.divId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", div_r9.highlightColor);\n  }\n}\nfunction DivDeptSvgComponent_div_21_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 35);\n    i0.ɵɵtext(2, \" Department Id \");\n    i0.ɵɵelement(3, \"p-sortIcon\", 36)(4, \"p-columnFilter\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_8_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 33)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"div\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dept_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", dept_r14);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dept_r14.depId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", dept_r14.highlightColor);\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_8_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nfunction DivDeptSvgComponent_div_21_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-table\", 20);\n    i0.ɵɵlistener(\"onRowSelect\", function DivDeptSvgComponent_div_21_div_8_Template_p_table_onRowSelect_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.ondeptrowselect($event));\n    });\n    i0.ɵɵtemplate(2, DivDeptSvgComponent_div_21_div_8_ng_template_2_Template, 7, 0, \"ng-template\", 21);\n    i0.ɵɵtemplate(3, DivDeptSvgComponent_div_21_div_8_ng_template_3_Template, 5, 4, \"ng-template\", 22);\n    i0.ɵɵtemplate(4, DivDeptSvgComponent_div_21_div_8_ng_template_4_Template, 3, 1, \"ng-template\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r6.deptdata)(\"paginator\", true)(\"rows\", ctx_r6.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(7, _c0))(\"scrollable\", true)(\"rowHover\", true);\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedRoomsMessage);\n  }\n}\nfunction DivDeptSvgComponent_div_21_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"app-svg-view\", 39);\n    i0.ɵɵlistener(\"onRoomClick\", function DivDeptSvgComponent_div_21_div_18_Template_app_svg_view_onRoomClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.roomOnClickListener($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DivDeptSvgComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 17)(2, \"div\", 18)(3, \"div\", 19)(4, \"p-table\", 20);\n    i0.ɵɵlistener(\"onRowSelect\", function DivDeptSvgComponent_div_21_Template_p_table_onRowSelect_4_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.ondivrowselect($event));\n    });\n    i0.ɵɵtemplate(5, DivDeptSvgComponent_div_21_ng_template_5_Template, 7, 0, \"ng-template\", 21);\n    i0.ɵɵtemplate(6, DivDeptSvgComponent_div_21_ng_template_6_Template, 5, 4, \"ng-template\", 22);\n    i0.ɵɵtemplate(7, DivDeptSvgComponent_div_21_ng_template_7_Template, 3, 1, \"ng-template\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DivDeptSvgComponent_div_21_div_8_Template, 5, 8, \"div\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 25)(10, \"div\", 26)(11, \"div\")(12, \"div\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, DivDeptSvgComponent_div_21_div_14_Template, 2, 1, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\")(16, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function DivDeptSvgComponent_div_21_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onAssigntoRooms());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function DivDeptSvgComponent_div_21_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onCancelSelection());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(18, DivDeptSvgComponent_div_21_div_18_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", ctx_r1.divdata)(\"paginator\", true)(\"rows\", ctx_r1.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(13, _c0))(\"scrollable\", true)(\"rowHover\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showdepttable);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.selectionMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedSvgElementIds.length > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.selectedSvgElementIds.length > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.selectedSvgElementIds.length > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.viewSvg);\n  }\n}\nfunction DivDeptSvgComponent_ngx_spinner_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 40)(1, \"p\", 41);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport class DivDeptSvgComponent {\n  constructor(blServ, authSrv, svgViewSrv, formBuilder, cdr, spinner, messageService, divisionservice, departmentservice) {\n    this.blServ = blServ;\n    this.authSrv = authSrv;\n    this.svgViewSrv = svgViewSrv;\n    this.formBuilder = formBuilder;\n    this.cdr = cdr;\n    this.spinner = spinner;\n    this.messageService = messageService;\n    this.divisionservice = divisionservice;\n    this.departmentservice = departmentservice;\n    this.allBl = [];\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.rowCount = 5;\n    this.viewSvg = false;\n    this.fileString = '';\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.showdepttable = false;\n    this.selectedDivision = '';\n    this.selectedDepartment = '';\n    this.selectedSvgElementIds = [];\n    this.allSVGRoomsData = [];\n    this.allowSave = false;\n    this.divdata = [];\n    this.deptdata = [];\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.filterPanel = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllDivision();\n  }\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe(res => {\n      this.enumBL = res;\n      this.enumBL = res.map(i => {\n        i.name = i.id + ' - ' + i.name;\n        return i;\n      });\n      this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe(res => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map(i => {\n        i.name = i.blId + '-' + i.id + ' - ' + i.name;\n        return i;\n      });\n      this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n  onSelectBlCode($event) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n    }\n  }\n  loadFloorCode(bl_id) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n  onSelectFlCode(event) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId\n        });\n      }, 10);\n    } else {\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n  loadAllDivision() {\n    this.divisionservice.getAllDivisions().subscribe(res => {\n      if (res) {\n        this.divdata = res;\n      }\n    });\n  }\n  onSearch() {\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    this.selectedSvgElementIds = [];\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.displayNoFloorPlanInfo = false;\n    this.allowSave = false;\n    this.showdepttable = false;\n    this.selectedDivision = '';\n    this.selectedDepartment = '';\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.getAllRoomsOfSvg(blId, flId);\n    let flData = this.enumFL.filter(i => i.blId == blId && i.id == flId);\n    //@ts-ignore\n    if (flData[0].svgName != null) {\n      let data = {\n        id: flId,\n        blId: blId,\n        name: '',\n        compId: this.compId,\n        svgName: '',\n        flInfo: '',\n        units: ''\n      };\n      this.svgViewSrv.getSVGFile(data).subscribe(res => {\n        if (res.code != 409) {\n          setTimeout(() => {\n            this.fileString = res.fileContent;\n            this.viewSvg = true;\n            this.cdr.detectChanges();\n            this.spinner.hide();\n            this.showSpinner = false;\n            this.selectionMessage = \"Please select Division/Department\";\n          }, 0);\n        } else {\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.displayNoFloorPlanInfo = true;\n        }\n      });\n    } else {\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = true;\n    }\n  }\n  getAllRoomsOfSvg(blId, flId) {\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.allSVGRoomsData = [];\n    let data = {\n      id: '',\n      name: '',\n      blId: blId,\n      flId: flId,\n      svgElementId: '',\n      compId: this.compId\n    };\n    this.blServ.getrmwithdivordepcolor(data).subscribe(res => {\n      if (res) {\n        this.allSVGRoomsData = res.filter(each => each.svgElementId != null);\n        this.allSVGRoomsData.forEach(rm => {\n          let labeldata = [];\n          if (rm.depId != null && rm.depId != '') {\n            // labeldata.push(`Department:${rm.depId}`);\n            labeldata.push(rm.depId);\n          }\n          if (rm.divId != null && rm.divId != '') {\n            // labeldata.push(`Division:${rm.divId}`);\n            labeldata.push(rm.divId);\n          }\n          // labeldata.push(`RoomId:${rm.rmId}`);\n          labeldata.push(rm.rmId);\n          let idObj = {\n            roomElementId: rm.svgElementId,\n            assetElementId: null\n          };\n          let colorObj = {\n            roomColor: rm.highlightColor,\n            assetColor: null\n          };\n          let contentData = {\n            blId: parseInt(blId),\n            flId: parseInt(flId),\n            rmId: rm.rmId,\n            label: [...labeldata],\n            showLabel: true,\n            highlightRoom: rm.highlightColor != null ? true : false,\n            svgElementId: idObj,\n            color: colorObj,\n            rmCode: '',\n            zoomAtRoom: false\n          };\n          this.svgRoomData.content.push(contentData);\n        });\n        this.svgRoomData.blId = parseInt(blId);\n        this.svgRoomData.flId = parseInt(flId);\n        this.svgRoomData.locate = \"room\";\n      }\n    });\n  }\n  onClear() {\n    this.viewSvg = false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.selectedSvgElementIds = [];\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.showdepttable = false;\n    this.selectedDivision = '';\n    this.selectedDepartment = '';\n    this.allSVGRoomsData = [];\n    this.allowSave = false;\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null\n    });\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n  }\n  onAssigntoRooms() {\n    this.messageService.clear();\n    let saveRoomData = [];\n    const saveRequests = [];\n    this.selectedSvgElementIds.forEach(id => {\n      const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId == id);\n      if (matchingObj) {\n        saveRoomData.push(matchingObj);\n      }\n    });\n    saveRoomData.forEach(room => {\n      if (this.selectedDivision != '') {\n        room.divId = this.selectedDivision;\n      }\n      if (this.selectedDepartment != '') {\n        room.depId = this.selectedDepartment;\n      } else {\n        room.depId = null;\n      }\n      saveRequests.push(this.blServ.updateRoomProp(room));\n    });\n    forkJoin(saveRequests).subscribe(res => {\n      this.messageService.add({\n        key: 'divdeptsvgMsg',\n        severity: 'success',\n        summary: 'Record updated',\n        detail: 'Room updated successfully'\n      });\n      this.onSearch();\n    }, error => {\n      console.error('Failed to save records:', error);\n    });\n  }\n  // userConfirm(){\n  //   let msg ='';\n  //   if(this.selectedDivision!='' && this.selectedDepartment!=''){\n  //     msg = 'Are you sure that you want to assign Division: '+this.selectedDivision+' and Department: '+\n  //     this.selectedDepartment +' to the selected rooms?'\n  //   }\n  //   else if (this.selectedDivision!='' && this.selectedDepartment==''){\n  //     msg = 'Are you sure that you want to assign Division: '+this.selectedDivision+' to the selected rooms?'\n  //   }\n  //   this.confirmationService.confirm({\n  //     message: msg,\n  //     header: 'Confirmation',\n  //     icon: 'pi pi-exclamation-triangle',\n  //     accept: () => {\n  //       this.onAssigntoRooms();\n  //     },\n  //     key: \"divdeptsvgGrid\"\n  //   });\n  // }\n  roomOnClickListener(elementN) {\n    if (this.allowSave) {\n      this.selectedRoomsMessage = '';\n      let svgelid = '';\n      if (elementN.startsWith(\"label\")) {\n        svgelid = elementN.substring(\"label_\".length);\n      } else {\n        svgelid = elementN;\n      }\n      if (!this.selectedSvgElementIds.includes(svgelid)) {\n        this.selectedSvgElementIds.push(svgelid);\n      }\n      this.selectedSvgElementIds.forEach(id => {\n        this.svgRoomData.content.forEach(svgData => {\n          if (svgData.svgElementId.roomElementId == id) {\n            svgData.highlightRoom = true;\n            svgData.color.roomColor = this.selectionHighlightColor;\n            if (this.selectedRoomsMessage.length == 0) {\n              this.selectedRoomsMessage += \"Selected Rooms : \" + svgData.rmId;\n            } else {\n              this.selectedRoomsMessage += \", \" + svgData.rmId;\n            }\n          }\n        });\n      });\n      this.cdr.detectChanges();\n      this.svgViewComp.loadByDetails();\n    }\n  }\n  ondivrowselect(event) {\n    this.deptdata = [];\n    this.showdepttable = true;\n    this.allowSave = true;\n    this.selectedDivision = event.data.divId;\n    this.selectionHighlightColor = event.data.highlightColor;\n    this.selectionMessage = \"Please select a room assign to : \" + this.selectedDivision;\n    let data = {\n      depId: '',\n      description: '',\n      depHead: '',\n      divId: event.data.divId\n    };\n    this.departmentservice.getDepartmentList(data).subscribe(res => {\n      if (res) {\n        this.deptdata = res;\n      }\n    });\n  }\n  ondeptrowselect(event) {\n    this.selectedDepartment = event.data.depId;\n    this.allowSave = true;\n    this.selectionHighlightColor = event.data.highlightColor;\n    this.selectionMessage = \"Please select a room  assign to \" + this.selectedDivision + \" | \" + this.selectedDepartment;\n    if (this.selectedSvgElementIds.length > 0) {\n      this.selectedSvgElementIds.forEach(id => {\n        this.svgRoomData.content.forEach(svgData => {\n          if (svgData.svgElementId.roomElementId == id) {\n            svgData.highlightRoom = true;\n            svgData.color.roomColor = this.selectionHighlightColor;\n          }\n        });\n      });\n      this.cdr.detectChanges();\n      this.svgViewComp.loadByDetails();\n    }\n  }\n  onCancelSelection() {\n    this.onSearch();\n  }\n  static #_ = this.ɵfac = function DivDeptSvgComponent_Factory(t) {\n    return new (t || DivDeptSvgComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.SvgViewService), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i5.NgxSpinnerService), i0.ɵɵdirectiveInject(i6.MessageService), i0.ɵɵdirectiveInject(i7.DivisionService), i0.ɵɵdirectiveInject(i8.DepartmentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DivDeptSvgComponent,\n    selectors: [[\"app-div-dept-svg\"]],\n    viewQuery: function DivDeptSvgComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SvgViewComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 25,\n    vars: 11,\n    consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"margin\", \"5px 0 0 5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [\"key\", \"divdeptsvgMsg\", \"position\", \"top-center\"], [\"key\", \"divdeptsvgGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"card\", \"no-file-found\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"600px\"], [2, \"width\", \"22%\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"selectionMode\", \"single\", \"scrollHeight\", \"95%\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"scrollable\", \"rowHover\", \"onRowSelect\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [4, \"ngIf\"], [2, \"width\", \"77%\", \"margin\", \"5px\", \"height\", \"550px\"], [2, \"height\", \"50px\", \"display\", \"flex\", \"justify-content\", \"space-between\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"style\", \"height:500px;\", 4, \"ngIf\"], [\"pSortableColumn\", \"divId\"], [\"field\", \"divId\"], [\"type\", \"text\", \"field\", \"divId\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [1, \"td-class\"], [\"pSortableColumn\", \"depId\"], [\"field\", \"depId\"], [\"type\", \"text\", \"field\", \"depId\", \"display\", \"menu\"], [2, \"height\", \"500px\"], [3, \"onRoomClick\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function DivDeptSvgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 6);\n        i0.ɵɵlistener(\"change\", function DivDeptSvgComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.onSelectBlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ng-select\", 7);\n        i0.ɵɵlistener(\"change\", function DivDeptSvgComponent_Template_ng_select_change_13_listener($event) {\n          return ctx.onSelectFlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"td\", 3)(15, \"td\", 3);\n        i0.ɵɵelementStart(16, \"td\", 3)(17, \"div\", 8)(18, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function DivDeptSvgComponent_Template_button_click_18_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function DivDeptSvgComponent_Template_button_click_19_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵtemplate(20, DivDeptSvgComponent_div_20_Template, 3, 0, \"div\", 11);\n        i0.ɵɵtemplate(21, DivDeptSvgComponent_div_21_Template, 19, 14, \"div\", 12);\n        i0.ɵɵtemplate(22, DivDeptSvgComponent_ngx_spinner_22_Template, 3, 1, \"ngx-spinner\", 13);\n        i0.ɵɵelement(23, \"p-toast\", 14)(24, \"p-confirmDialog\", 15);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayNoFloorPlanInfo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    dependencies: [i9.NgIf, i10.NgSelectComponent, i6.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.ColumnFilter, i12.ButtonDirective, i13.Toast, i14.ConfirmDialog, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.NgxSpinnerComponent, i15.SvgViewComponent],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  background-color: #879cc9;\\n  color: black;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n  height: 10px !important;\\n}\\n\\n.no-file-found[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 500px;\\n}\\n\\n.td-class[_ngcontent-%COMP%] {\\n  background-color: inherit;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 20px;\\n  margin: 10px auto auto auto;\\n  border: 1px solid black;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-scrollable-body {\\n  overflow-y: auto !important;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-scrollable-header-box {\\n  padding: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvZGl2LWRlcHQtc3ZnL2Rpdi1kZXB0LXN2Zy5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9zY3NzL192YXJpYWJsZXMuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLy4uLy4uLy4uL01hbmF2JTIwR3VwdGEvRG93bmxvYWRzL2Ztcy9mbXMvZnJvbnRlbmQvZm1zX2Zyb250ZW5kL3NyYy9hcHAvdWkvZGl2LWRlcHQtc3ZnL2Rpdi1kZXB0LXN2Zy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLHlCQ09LO0VETkwsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLHVCQUFBO0FFREo7O0FGSUE7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7QUVESjs7QUZJQTtFQUNJLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLDJCQUFBO0VBQ0EsdUJBQUE7QUVESjs7QUZJQTtFQUNJLDJCQUFBO0FFREo7O0FGSUE7RUFDSSx1QkFBQTtBRURKIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnL3NyYy9zY3NzL3ZhcmlhYmxlcyc7XG5cbjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRvb2xiYXI7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLm5vLWZpbGUtZm91bmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogNTAwcHg7XG59XG5cbi50ZC1jbGFzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbjogMTBweCBhdXRvIGF1dG8gYXV0bztcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgfVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtYm9keSB7XG4gICAgb3ZlcmZsb3cteTogYXV0byAhaW1wb3J0YW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtaGVhZGVyLWJveHtcbiAgICBwYWRkaW5nOjBweCAhaW1wb3J0YW50O1xufSIsIi8vIFR5cG9ncmFwaHkgdmFyaWFibGVzXG4kZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuJHVybDogJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvJmRpc3BsYXk9c3dhcCc7XG5cblxuLy8gVGhlbWluZyB2YXJpYWJsZVxuJHByaW1hcnktY29sb3I6ICMwYjllNmQ7XG4kd2hpdGU6ICNmZmZmZmY7XG4kbWFpbi1iYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuJHRleHQtc2l6ZToxMnB4O1xuJHRvb2xiYXI6Izg3OWNjOTtcbiRzaWRlLW5hdjojMzQzYTQwO1xuJG1hbmRhdG9yeUZpZWxkOiNlMDE1MTU7XG4kdGFiQmdDb2xvcjogIzg3OWNjOTtcbiR0YWJBY3RpdmVCZ0NvbG9yOiAjZmZmZmZmO1xuJHRhYkhlaWdodDogMi4zNTtcbiR0YWJXaWR0aDogODBweDtcbiR0YWJCb3JkZXJSYWRpdXM6IDZweCA2cHggMCAwO1xuJHRhYkJvcmRlckJvdHRvbTogM3B4IHNvbGlkICM4NzljYzkgIWltcG9ydGFudDtcbiR0YWJGb250Q29sb3I6ICNmZmZmZmY7XG4kdGFiUGFuZUJhY2tncm91bmRDb2xvcjogI0YwRjJGNTtcbiRBY3RpdmVUYWJGb250Q29sb3I6ICMwMDAwMDA7XG5cbiR0YWJsZXRQb3RyYWl0TWluV2lkdGg6NjAwcHggO1xuJHRhYmxldFBvdHJhaXRNYXhXaWR0aDogOTU5cHg7XG4kdGFibGV0TGFuZHNjYXBlTWluV2lkdGg6IDk2MHB4O1xuJHRhYmxldExhbmRzcGFjZU1heFdpZHRoOiAxNDM5cHg7XG4iLCI6aG9zdCA6Om5nLWRlZXAgLnAtZGlhbG9nIC5wLWRpYWxvZy1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODc5Y2M5O1xuICBjb2xvcjogYmxhY2s7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLm5vLWZpbGUtZm91bmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA1MDBweDtcbn1cblxuLnRkLWNsYXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIG1hcmdpbjogMTBweCBhdXRvIGF1dG8gYXV0bztcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1ib2R5IHtcbiAgb3ZlcmZsb3cteTogYXV0byAhaW1wb3J0YW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtaGVhZGVyLWJveCB7XG4gIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","MessageService","SvgRoomData","BuildingFilterInput","FLFilterInputDTO","SvgViewComponent","forkJoin","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","div_r9","ɵɵadvance","ɵɵtextInterpolate","divId","ɵɵstyleProp","highlightColor","ɵɵattribute","dept_r14","depId","ɵɵlistener","DivDeptSvgComponent_div_21_div_8_Template_p_table_onRowSelect_1_listener","$event","ɵɵrestoreView","_r17","ctx_r16","ɵɵnextContext","ɵɵresetView","ondeptrowselect","ɵɵtemplate","DivDeptSvgComponent_div_21_div_8_ng_template_2_Template","DivDeptSvgComponent_div_21_div_8_ng_template_3_Template","DivDeptSvgComponent_div_21_div_8_ng_template_4_Template","ctx_r6","deptdata","rowCount","ɵɵpureFunction0","_c0","ctx_r7","selectedRoomsMessage","DivDeptSvgComponent_div_21_div_18_Template_app_svg_view_onRoomClick_1_listener","_r19","ctx_r18","roomOnClickListener","DivDeptSvgComponent_div_21_Template_p_table_onRowSelect_4_listener","_r21","ctx_r20","ondivrowselect","DivDeptSvgComponent_div_21_ng_template_5_Template","DivDeptSvgComponent_div_21_ng_template_6_Template","DivDeptSvgComponent_div_21_ng_template_7_Template","DivDeptSvgComponent_div_21_div_8_Template","DivDeptSvgComponent_div_21_div_14_Template","DivDeptSvgComponent_div_21_Template_button_click_16_listener","ctx_r22","onAssigntoRooms","DivDeptSvgComponent_div_21_Template_button_click_17_listener","ctx_r23","onCancelSelection","DivDeptSvgComponent_div_21_div_18_Template","ctx_r1","divdata","showdepttable","selectionMessage","selectedSvgElementIds","length","viewSvg","DivDeptSvgComponent","constructor","blServ","authSrv","svgViewSrv","formBuilder","cdr","spinner","messageService","divisionservice","departmentservice","allBl","enumBL","enumFL","enumAllFL","fileString","showSpinner","displayNoFloorPlanInfo","svgRoomData","selectedDivision","selectedDepartment","allSVGRoomsData","allowSave","selectionHighlightColor","filterPanel","group","blId","required","flId","ngOnInit","compId","getLoggedInUserCompId","loadAllBuilding","loadAllFloor","loadAllDivision","getALLBuilding","subscribe","res","map","i","name","id","unshift","getALLFloor","onSelectBlCode","setTimeout","patchValue","loadFloorCode","bl_id","filter","t","onSelectFlCode","event","getAllDivisions","onSearch","controls","value","show","getAllRoomsOfSvg","flData","svgName","data","flInfo","units","getSVGFile","code","fileContent","detectChanges","hide","svgElementId","getrmwithdivordepcolor","each","forEach","rm","labeldata","push","rmId","idObj","roomElementId","assetElementId","colorObj","roomColor","assetColor","contentData","parseInt","label","showLabel","highlightRoom","color","rmCode","zoomAtRoom","content","locate","onClear","clear","saveRoomData","saveRequests","matchingObj","find","room","updateRoomProp","add","key","severity","summary","detail","error","console","elementN","svgelid","startsWith","substring","includes","svgData","svgViewComp","loadByDetails","description","depHead","getDepartmentList","_","ɵɵdirectiveInject","i1","BuildingService","i2","AuthService","i3","SvgViewService","i4","UntypedFormBuilder","ChangeDetectorRef","i5","NgxSpinnerService","i6","i7","DivisionService","i8","DepartmentService","_2","selectors","viewQuery","DivDeptSvgComponent_Query","rf","ctx","decls","vars","consts","template","DivDeptSvgComponent_Template","DivDeptSvgComponent_Template_ng_select_change_8_listener","DivDeptSvgComponent_Template_ng_select_change_13_listener","DivDeptSvgComponent_Template_button_click_18_listener","DivDeptSvgComponent_Template_button_click_19_listener","DivDeptSvgComponent_div_20_Template","DivDeptSvgComponent_div_21_Template","DivDeptSvgComponent_ngx_spinner_22_Template","valid"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\div-dept-svg\\div-dept-svg.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\div-dept-svg\\div-dept-svg.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MessageService } from 'primeng/api';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { DivisionService } from '../division-department/services/division.services';\nimport { SvgViewService } from '../svg-view/services/svg-view.service';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { SvgRoomContentData } from 'src/app/model/svgroomcontentdata.model';\nimport { DepartmentService } from '../division-department/services/department.services';\nimport { forkJoin } from 'rxjs';\nimport { SvgElementIdType } from 'src/app/model/svgelementidtype.model';\nimport { SvgElementColorType } from 'src/app/model/svgelementcolortype.model';\n\n@Component({\n  selector: 'app-div-dept-svg',\n  templateUrl: './div-dept-svg.component.html',\n  styleUrls: ['./div-dept-svg.component.scss'],\n  providers: [MessageService]\n})\nexport class DivDeptSvgComponent implements OnInit {\n  filterPanel!: UntypedFormGroup;\n  compId!: number;\n  allBl: any[] = [];\n  enumBL: BuildingFilterInput[] = [];\n  enumFL: FLFilterInputDTO[] = [];\n  enumAllFL: FLFilterInputDTO[] = [];\n  rowCount: number = 5;\n  viewSvg: boolean = false;\n  fileString: string = '';\n  showSpinner: boolean = false;\n  displayNoFloorPlanInfo:boolean = false;\n  @ViewChild(SvgViewComponent, { static: false }) svgViewComp!: SvgViewComponent;\n  svgRoomData : SvgRoomData = new SvgRoomData(null,null,\"\",[]);\n  showdepttable:boolean = false;\n  selectedDivision:string='';\n  selectedDepartment:string='';\n  selectedSvgElementIds :any[]=[];\n  allSVGRoomsData:any[]=[];\n  allowSave:boolean = false;\n  divdata:any[]=[];\n  deptdata:any[]=[];\n  selectionMessage:string='';\n  selectionHighlightColor:string='';\n  selectedRoomsMessage:string='';\n  constructor(\n    private blServ: BuildingService,\n    private authSrv: AuthService,\n    private svgViewSrv: SvgViewService,\n    private formBuilder: UntypedFormBuilder,\n    private cdr: ChangeDetectorRef,\n    private spinner: NgxSpinnerService,\n    private messageService: MessageService,\n    private divisionservice:DivisionService,\n    private departmentservice:DepartmentService\n  ) { \n    this.filterPanel = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllDivision();\n  }\n\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe((res: any) => {\n      this.enumBL = res;\n      this.enumBL = res.map((i: any) => { i.name = i.id + ' - ' + i.name; return i; });\n      this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe((res: any) => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map((i: any) => { i.name = i.blId + '-' + i.id + ' - ' + i.name; return i; });\n      this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n\n  onSelectBlCode($event: any) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    }\n    else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n    }\n  }\n\n  loadFloorCode(bl_id: any) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id)\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n\n  onSelectFlCode(event: any) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n        });\n      }, 10);\n    }\n    else {\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n\n  loadAllDivision(){\n    this.divisionservice.getAllDivisions().subscribe((res:any)=>{\n      if(res){\n        this.divdata = res;\n      }\n    });\n  }\n\n  onSearch(){\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    this.selectedSvgElementIds=[];\n    this.selectionMessage='';\n    this.selectionHighlightColor='';\n    this.selectedRoomsMessage='';\n    this.displayNoFloorPlanInfo = false;\n    this.allowSave = false;\n    this.showdepttable= false;\n    this.selectedDivision='';\n    this.selectedDepartment='';\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.getAllRoomsOfSvg(blId,flId);\n    let flData = this.enumFL.filter((i: any) => i.blId == blId && i.id == flId);\n    //@ts-ignore\n    if (flData[0].svgName != null) {\n      let data = {\n        id: flId,\n        blId: blId,\n        name: '',\n        compId: this.compId,\n        svgName: '',\n        flInfo: '',\n        units:''\n      }\n      this.svgViewSrv.getSVGFile(data).subscribe((res: any) => {\n        if (res.code != 409) {\n          setTimeout(()=>{\n            this.fileString = res.fileContent;\n            this.viewSvg = true;\n            this.cdr.detectChanges();\n            this.spinner.hide();\n            this.showSpinner = false;\n            this.selectionMessage = \"Please select Division/Department\";\n          },0)\n         \n        }\n        else{\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.displayNoFloorPlanInfo = true;\n        }\n      })\n    } else {\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = true;\n    }\n  }\n\n  getAllRoomsOfSvg(blId:string,flId:string){\n    this.svgRoomData  = new SvgRoomData(null,null,\"\",[]);\n    this.allSVGRoomsData=[];\n    let data={\n      id:'',\n      name:'',\n      blId:blId,\n      flId:flId,\n      svgElementId:'',\n      compId:this.compId\n    }\n    this.blServ.getrmwithdivordepcolor(data).subscribe((res:any)=>{\n      if(res){\n        this.allSVGRoomsData = res.filter( (each:any) => each.svgElementId!=null);\n        this.allSVGRoomsData.forEach((rm:any)=>{\n          let labeldata =[];\n          if(rm.depId!=null && rm.depId!=''){\n            // labeldata.push(`Department:${rm.depId}`);\n            labeldata.push(rm.depId);\n          }\n          if(rm.divId!=null && rm.divId!=''){\n            // labeldata.push(`Division:${rm.divId}`);\n            labeldata.push(rm.divId);\n          }\n          // labeldata.push(`RoomId:${rm.rmId}`);\n          labeldata.push(rm.rmId);\n          let idObj:SvgElementIdType ={\n            roomElementId:rm.svgElementId,\n            assetElementId :null\n          }\n          let colorObj: SvgElementColorType ={\n            roomColor:rm.highlightColor,\n            assetColor: null\n          }\n          let contentData:SvgRoomContentData ={\n            blId:parseInt(blId),\n            flId:parseInt(flId),\n            rmId:rm.rmId,\n            label:[...labeldata],\n            showLabel:true,\n            highlightRoom:rm.highlightColor!=null?true:false,\n            svgElementId : idObj,\n            color:colorObj,\n            rmCode:'',\n            zoomAtRoom:false\n          }\n          this.svgRoomData.content.push(contentData);\n        })\n        this.svgRoomData.blId = parseInt(blId);\n        this.svgRoomData.flId = parseInt(flId);\n        this.svgRoomData.locate = \"room\";\n      }\n    })\n  }\n\n  onClear(){\n    this.viewSvg= false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.selectedSvgElementIds =[];\n    this.svgRoomData  = new SvgRoomData(null,null,\"\",[]);\n    this.showdepttable= false;\n    this.selectedDivision='';\n    this.selectedDepartment='';\n    this.allSVGRoomsData=[];\n    this.allowSave = false;\n    this.filterPanel.patchValue({\n      blId:null,\n      flId: null,\n    });\n    this.selectionMessage='';\n    this.selectionHighlightColor='';\n    this.selectedRoomsMessage='';\n  }\n\n  onAssigntoRooms(){\n    this.messageService.clear();\n    let saveRoomData:any[]=[];\n    const saveRequests:any[] = [];\n    this.selectedSvgElementIds.forEach((id:string)=>{\n      const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId ==id);\n      if(matchingObj){\n        saveRoomData.push(matchingObj);\n      }\n    })\n    saveRoomData.forEach((room:any)=>{\n      if(this.selectedDivision!=''){\n        room.divId = this.selectedDivision;\n      }\n      if(this.selectedDepartment!='')\n      {\n        room.depId = this.selectedDepartment;\n      }else{\n        room.depId = null;\n      }\n      saveRequests.push(this.blServ.updateRoomProp(room));\n    })\n    forkJoin(saveRequests)\n      .subscribe((res: any[]) => {\n        this.messageService.add({ key: 'divdeptsvgMsg', severity: 'success', summary: 'Record updated', detail: 'Room updated successfully' });\n        this.onSearch();\n      }, (error: any) => {\n        console.error('Failed to save records:', error);\n      });\n  }\n\n  // userConfirm(){\n  //   let msg ='';\n  //   if(this.selectedDivision!='' && this.selectedDepartment!=''){\n  //     msg = 'Are you sure that you want to assign Division: '+this.selectedDivision+' and Department: '+\n  //     this.selectedDepartment +' to the selected rooms?'\n  //   }\n  //   else if (this.selectedDivision!='' && this.selectedDepartment==''){\n  //     msg = 'Are you sure that you want to assign Division: '+this.selectedDivision+' to the selected rooms?'\n  //   }\n  //   this.confirmationService.confirm({\n  //     message: msg,\n  //     header: 'Confirmation',\n  //     icon: 'pi pi-exclamation-triangle',\n  //     accept: () => {\n  //       this.onAssigntoRooms();\n  //     },\n  //     key: \"divdeptsvgGrid\"\n  //   });\n  // }\n\n  roomOnClickListener(elementN: any){\n    if(this.allowSave){\n      this.selectedRoomsMessage = '';\n    let svgelid ='';\n    if(elementN.startsWith(\"label\")){\n      svgelid = elementN.substring(\"label_\".length)\n    }else{\n      svgelid = elementN;\n    }\n    if(!this.selectedSvgElementIds.includes(svgelid)){\n      this.selectedSvgElementIds.push(svgelid);\n    }\n    this.selectedSvgElementIds.forEach((id:string)=>{\n      this.svgRoomData.content.forEach((svgData:any)=>{\n        if(svgData.svgElementId.roomElementId==id){\n          svgData.highlightRoom=true;\n          svgData.color.roomColor=this.selectionHighlightColor;\n          if(this.selectedRoomsMessage.length==0){\n            this.selectedRoomsMessage += \"Selected Rooms : \" + svgData.rmId;\n          }else{\n            this.selectedRoomsMessage += \", \"+svgData.rmId;\n          }\n        }\n      })\n    })\n    this.cdr.detectChanges();\n    this.svgViewComp.loadByDetails();\n    }\n  }\n\n  ondivrowselect(event:any){\n    this.deptdata=[];\n    this.showdepttable = true;\n    this.allowSave = true;\n    this.selectedDivision = event.data.divId;\n    this.selectionHighlightColor = event.data.highlightColor;\n    this.selectionMessage =\"Please select a room assign to : \"+this.selectedDivision;\n    let data={\n      depId:'',\n      description:'',\n      depHead:'',\n      divId:event.data.divId,\n    }\n    this.departmentservice.getDepartmentList(data).subscribe((res:any)=>{\n      if(res){\n        this.deptdata = res;\n      }\n    })\n  }\n  ondeptrowselect(event:any){\n    this.selectedDepartment = event.data.depId;\n    this.allowSave = true;\n    this.selectionHighlightColor = event.data.highlightColor;\n    this.selectionMessage =\"Please select a room  assign to \"+this.selectedDivision+\" | \"+ this.selectedDepartment;\n    if(this.selectedSvgElementIds.length>0){\n      this.selectedSvgElementIds.forEach((id:string)=>{\n        this.svgRoomData.content.forEach((svgData:any)=>{\n          if(svgData.svgElementId.roomElementId==id){\n            svgData.highlightRoom=true;\n            svgData.color.roomColor=this.selectionHighlightColor;\n          }\n        })\n      })\n      this.cdr.detectChanges();\n      this.svgViewComp.loadByDetails();\n    }\n  }\n\n  onCancelSelection(){\n    this.onSearch();\n  }\n}\n","<div class=\"card\">\n    <form [formGroup]=\"filterPanel\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Building </label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" (change)=\"onSelectBlCode($event)\"\n                            placeholder=\"Make a selection\" class=\"ng-select-dropdown\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Floor</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\" (change)=\"onSelectFlCode($event)\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\"></td>\n                <td style=\"width: 20%\"></td>\n                <td style=\"width: 20%\">\n                    <div style=\"margin: 5px 0 0 5px \">\n                        <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple label=\"Search\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </form>\n</div>\n<div class=\"card no-file-found\" *ngIf=\"displayNoFloorPlanInfo\">\n    <h1>No Floorplan available</h1>\n</div>\n\n<div class=\"card\" *ngIf=\"viewSvg\">\n    <div style=\"display: flex; justify-content: space-between;height:600px;\">\n        <div style=\"width:22%\">\n            <div style=\"display: flex;flex-direction: column;\">\n                <p-table [value]=\"divdata\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[5,10,25]\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n             [scrollable]=\"true\" scrollDirection=\"both\"  selectionMode=\"single\" [rowHover]=\"true\" (onRowSelect)=\"ondivrowselect($event)\"\n                scrollHeight=\"95%\" >\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pSortableColumn=\"divId\">\n                                Division Id <p-sortIcon field=\"divId\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"divId\" display=\"menu\"></p-columnFilter>\n                            </th>\n                            <!-- <th style=\"width:4rem\"></th> -->\n                            <th>Highlight Color</th>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-div>\n                        <tr [pSelectableRow]=\"div\">\n                            <td>{{div.divId}}</td>\n                            <!-- <td style=\"width:4rem\">\n                                <button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-text\"\n                                (click)=\"assignDivision(div)\"></button>\n                            </td> -->\n                            <td>\n                                <div [style.background-color]=\"div.highlightColor\" class=\"td-class\">\n                                </div>\n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-columns>\n                        <tr>\n                            <td [attr.colspan]=\"9\">\n                                No records found\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n                <div *ngIf=\"showdepttable\">\n                    <p-table [value]=\"deptdata\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                    [rowsPerPageOptions]=\"[5,10,25]\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n                    [scrollable]=\"true\" scrollDirection=\"both\" selectionMode=\"single\" [rowHover]=\"true\" (onRowSelect)=\"ondeptrowselect($event)\"\n                    scrollHeight=\"95%\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pSortableColumn=\"depId\">\n                                Department Id <p-sortIcon field=\"depId\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"depId\" display=\"menu\"></p-columnFilter>\n                            </th>\n                            <!-- <th style=\"width:4rem\"></th> -->\n                            <th>Highlight Color</th>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-dept>\n                        <tr [pSelectableRow]=\"dept\">\n                            <td>{{dept.depId}}</td>\n                            <!-- <td style=\"width:4rem\">\n                                <button type=\"button\" pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-text\"\n                                (click)=\"assignDepartment(dept)\"></button>\n                            </td> -->\n                            <td>\n                                <div [style.background-color]=\"dept.highlightColor\" class=\"td-class\">\n                                </div>\n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-columns>\n                        <tr>\n                            <td [attr.colspan]=\"9\">\n                                No records found\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n                </div>\n            </div>  \n        </div>\n        <div style=\"width:77%;margin:5px;height:550px\">\n            <div style=\"height: 50px; display: flex; justify-content: space-between;\">\n                <div>\n                    <div>{{selectionMessage}}</div>\n                    <div *ngIf=\"selectedSvgElementIds.length>0\">{{selectedRoomsMessage}}</div> \n                </div>\n                <div>\n                    <button (click)=\"onAssigntoRooms()\" pButton pRipple label=\"Save\"\n                            style=\"width: 60px;\" [disabled]=\"!(selectedSvgElementIds.length>0)\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                    <button (click)=\"onCancelSelection()\" pButton pRipple label=\"Cancel\"\n                    style=\"width: 60px;margin-left: 5px;\" [disabled]=\"!(selectedSvgElementIds.length>0)\"\n                    class=\"p-button-primary p-button-sm pull right\"></button>\n                </div>\n            </div>\n            <div *ngIf=\"viewSvg\" style=\"height:500px;\">\n                <app-svg-view   (onRoomClick)=\"roomOnClickListener($event)\"\n                ></app-svg-view>\n            </div>\n            \n        </div>\n    </div>\n</div>\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#879cc9\" class=\"spinner-color\" type=\"ball-spin-clockwise\"\n    *ngIf=\"showSpinner\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n</ngx-spinner>\n\n<p-toast key=\"divdeptsvgMsg\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"divdeptsvgGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}