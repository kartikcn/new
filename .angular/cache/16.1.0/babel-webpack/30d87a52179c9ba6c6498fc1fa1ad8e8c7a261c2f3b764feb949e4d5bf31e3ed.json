{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MessageService } from 'primeng/api';\nimport html2canvas from 'html2canvas';\nimport { SiteFilterInputDTO } from 'src/app/ui/site/modal/SiteFilterInputDTO.model';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i3 from \"src/app/services/site.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../services/summery-request-report.service\";\nimport * as i6 from \"../../work-request/service/add-work-request.services\";\nimport * as i7 from \"primeng/api\";\nimport * as i8 from \"src/app/ui/booking/services/booking.services\";\nimport * as i9 from \"src/app/ui/employee/services/employee.service\";\nimport * as i10 from \"@ng-select/ng-select\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/calendar\";\nimport * as i13 from \"primeng/button\";\nimport * as i14 from \"primeng/dialog\";\nimport * as i15 from \"primeng/panel\";\nimport * as i16 from \"primeng/chart\";\nimport * as i17 from \"../../requests-by-asset-reports/widgets/add-table/add-table.component\";\nconst _c0 = [\"chartContainer\"];\nfunction SummeryRequestReportsComponent_div_49_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 28)(2, \"div\", 29)(3, \"div\", 30)(4, \"p\", 31);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 32);\n    i0.ɵɵelement(7, \"p-sortIcon\", 33)(8, \"p-columnFilter\", 34);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 35)(10, \"div\", 29)(11, \"div\", 30)(12, \"p\", 31);\n    i0.ɵɵtext(13, \"Request Count\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 32);\n    i0.ɵɵelement(15, \"p-sortIcon\", 36)(16, \"p-columnFilter\", 37);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.displayGridLabel, \"\");\n  }\n}\nfunction SummeryRequestReportsComponent_div_49_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 38);\n    i0.ɵɵlistener(\"click\", function SummeryRequestReportsComponent_div_49_ng_template_3_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const report_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onClickCount(report_r7));\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const report_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(report_r7.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(report_r7.count);\n  }\n}\nfunction SummeryRequestReportsComponent_div_49_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c1 = function () {\n  return [5, 10, 25];\n};\nfunction SummeryRequestReportsComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"p-table\", 26);\n    i0.ɵɵtemplate(2, SummeryRequestReportsComponent_div_49_ng_template_2_Template, 17, 1, \"ng-template\", 23);\n    i0.ɵɵtemplate(3, SummeryRequestReportsComponent_div_49_ng_template_3_Template, 5, 2, \"ng-template\", 24);\n    i0.ɵɵtemplate(4, SummeryRequestReportsComponent_div_49_ng_template_4_Template, 3, 1, \"ng-template\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r0.reportData)(\"paginator\", true)(\"rows\", ctx_r0.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(6, _c1))(\"rowHover\", false);\n  }\n}\nfunction SummeryRequestReportsComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", null, 39)(2, \"p-chart\", 40);\n    i0.ɵɵlistener(\"onDataSelect\", function SummeryRequestReportsComponent_div_50_Template_p_chart_onDataSelect_2_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onClickBarChart($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"height\", 510)(\"data\", ctx_r1.chartData)(\"options\", ctx_r1.basicOptions);\n  }\n}\nfunction SummeryRequestReportsComponent_ng_template_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 41);\n    i0.ɵɵtext(1, \"Request List\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SummeryRequestReportsComponent_ng_template_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-table\", 42);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r3.requestData);\n  }\n}\nconst _c2 = function () {\n  return {\n    width: \"66vw\"\n  };\n};\nexport class SummeryRequestReportsComponent {\n  constructor(formBuilder, blSrv, siteServ, datePipe, reportsServ, summeryReportServ, wrServ, messageService, bookingSrv, employeeService) {\n    this.formBuilder = formBuilder;\n    this.blSrv = blSrv;\n    this.siteServ = siteServ;\n    this.datePipe = datePipe;\n    this.reportsServ = reportsServ;\n    this.summeryReportServ = summeryReportServ;\n    this.wrServ = wrServ;\n    this.messageService = messageService;\n    this.bookingSrv = bookingSrv;\n    this.employeeService = employeeService;\n    this.subscriptions = [];\n    this.enumAllSites = [];\n    this.enumAllBl = [];\n    this.enumBL = [];\n    this.isErr = false;\n    this.errorMsg = '';\n    this.reportData = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.showPopUpGrid = false;\n    this.isGridType = false;\n    this.chartData = [];\n    this.chartImg = [];\n    this.requestData = [];\n    this.chartTitle = 'Status';\n    this.allEmployees = [];\n    this.enumEm = [];\n    this.groupByData = [{\n      \"id\": 0,\n      \"lable\": 'Status',\n      \"value\": \"status\"\n    }, {\n      \"id\": 1,\n      \"lable\": 'Problem Type',\n      \"value\": \"prob_type_id\"\n    }, {\n      \"id\": 2,\n      \"lable\": 'Site',\n      \"value\": \"site_id\"\n    }, {\n      \"id\": 3,\n      \"lable\": 'Building',\n      \"value\": \"bl_id\"\n    }, {\n      \"id\": 4,\n      \"lable\": 'Asset',\n      \"value\": \"eq_id\"\n    }, {\n      \"id\": 5,\n      \"lable\": 'Technician',\n      \"value\": \"technician_id\"\n    }, {\n      \"id\": 6,\n      \"lable\": 'Employee',\n      \"value\": \"requested_for\"\n    }, {\n      \"id\": 6,\n      \"lable\": 'Team',\n      \"value\": \"team_id\"\n    }];\n    this.displayTypeData = [{\n      \"id\": 1,\n      \"lable\": 'Grid',\n      \"value\": \"grid\"\n    }, {\n      \"id\": 2,\n      \"lable\": 'Bar Chart',\n      \"value\": \"bar_char\"\n    }];\n    this.basicOptions = {\n      title: {\n        display: false,\n        text: 'Bar Chart',\n        fontSize: 18\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        x: {\n          display: true,\n          title: {\n            display: true,\n            text: this.chartTitle,\n            fontStyle: 'bold'\n          },\n          ticks: {\n            display: true\n          },\n          grid: {\n            display: false\n          }\n        },\n        y: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Request Count',\n            fontStyle: 'bold'\n          },\n          ticks: {\n            beginAtZero: true,\n            stepSize: 5,\n            display: true\n          },\n          grid: {\n            display: false\n          }\n        }\n      },\n      tooltips: {\n        enabled: true,\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (tooltipItem) {\n            return \"Requests: \" + tooltipItem.formattedValue;\n          }\n        }\n      },\n      responsive: true,\n      animation: {\n        duration: 1000,\n        easing: 'easeOutBounce'\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    };\n    this.filterData = {\n      siteId: null,\n      blId: null,\n      flId: null,\n      rmId: null,\n      eqId: null,\n      wrId: null,\n      requestedFor: null,\n      status: null,\n      problemType: null,\n      dateRequestedFrom: null,\n      dateRequestedTo: null,\n      technicianId: null,\n      teamId: null,\n      showRequestType: null\n    };\n    this.showRequestsTypeList = [{\n      label: \"Preventive Maintenance\",\n      value: \"ppm\"\n    }, {\n      label: \"Facilities Helpdesk\",\n      value: \"facilities\"\n    }, {\n      label: \"All\",\n      value: \"all\"\n    }];\n    this.showType = \"facilities\";\n    this.limitSite = 0;\n    this.offsetSite = 0;\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.selectedSite = {};\n    this.selectedBl = {};\n    this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n    this.filterPanel = this.formBuilder.group({\n      dateRequestedFrom: [new Date(new Date().getFullYear(), new Date().getMonth(), 1)],\n      dateRequestedTo: [new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)],\n      blId: [null],\n      siteId: [null],\n      groupBy: [null, [Validators.required]],\n      displayType: [null],\n      showType: [this.showType]\n    });\n  }\n  ngOnInit() {\n    this.chartTitle = this.groupByData[0].lable;\n    this.filterPanel.patchValue({\n      groupBy: this.groupByData[0].value,\n      displayType: this.displayTypeData[1].value,\n      showType: this.showType\n    });\n    this.isGridType = false;\n    this.loadRecords();\n    this.loadAllEmployee();\n  }\n  setShowType() {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        showType: this.showType\n      });\n    });\n  }\n  setChartData() {\n    let initialChartData = {\n      labels: [],\n      datasets: [{\n        label: \"\",\n        data: [],\n        backgroundColor: [],\n        borderColor: [],\n        borderWidth: 1\n      }]\n    };\n    const dynamicColors = [];\n    for (let i = 0; i < this.reportData.length; i++) {\n      let color = '';\n      do {\n        color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      } while (color === 'rgba(255, 255, 255, 1)' || this.isWhiteColorShade(color));\n      {\n        // Regenerate color if it is white\n        color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      }\n      ;\n      dynamicColors.push(color);\n    }\n    this.reportData.length > 0 && this.reportData.forEach((each, index) => {\n      initialChartData.labels.push(each.value);\n      initialChartData.datasets[0].data.push(each.count);\n      initialChartData.datasets[0].backgroundColor.push(dynamicColors[index % dynamicColors.length]);\n      initialChartData.datasets[0].borderColor.push(dynamicColors[index % dynamicColors.length]);\n    });\n    if (initialChartData.datasets[0].data.length < 5) {\n      let empty = '  ';\n      for (let i = 0; i < 5 - initialChartData.datasets[0].data.length; i++) {\n        initialChartData.datasets[0].data.push(0);\n        initialChartData.labels.push(empty.repeat(i + 1));\n        initialChartData.datasets[0].backgroundColor.push('');\n        initialChartData.datasets[0].borderColor.push('');\n      }\n    }\n    const label = this.groupByData.filter(each => each.value === this.filterPanel.controls.groupBy.value);\n    //this.basicOptions.scales.xAxes[0].scaleLabel.labelString = label[0].lable;\n    this.chartData = initialChartData;\n  }\n  isWhiteColorShade(color) {\n    // Extract RGB values from the color string\n    const rgbValues = color.match(/\\d+/g);\n    const r = parseInt(rgbValues[0]);\n    const g = parseInt(rgbValues[1]);\n    const b = parseInt(rgbValues[2]);\n    // Check if all RGB values are close to 255 (white)\n    const threshold = 50; // Adjust this threshold as needed\n    const average = (r + g + b) / 3;\n    return average > threshold;\n  }\n  checkDateValidation() {\n    return control => {\n      if (control.value !== undefined && control.value != null) {\n        this.filterPanel.controls['dateRequestedFrom'].setErrors(null);\n        this.filterPanel.controls['dateRequestedTo'].setErrors(null);\n        this.filterPanel.clearAsyncValidators();\n        this.filterPanel.updateValueAndValidity();\n        var dateFrom = new Date(this.filterPanel.controls['dateRequestedFrom'].value);\n        var dateTo = new Date(this.filterPanel.controls['dateRequestedTo'].value);\n        if (dateFrom.getTime() >= dateTo.getTime() && this.filterPanel.controls['dateRequestedFrom'].value != null) {\n          this.isErr = true;\n          this.filterPanel.controls['dateFrom'].setErrors({\n            'incorrect': true\n          });\n          this.filterPanel.updateValueAndValidity();\n          this.errorMsg = 'Date requested to should be greater than date requested from.';\n          return {\n            'incorrect': true\n          };\n        } else {\n          this.isErr = false;\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n  loadAllEmployee() {\n    this.employeeService.getAllEmployeeList().subscribe(res => {\n      if (res) {\n        this.allEmployees = res;\n      } else {\n        this.allEmployees = [];\n      }\n    });\n  }\n  onSelectSite(event) {\n    this.filterPanel.patchValue({\n      blId: null\n    });\n    if (event.siteId !== null && event.siteId !== '') {\n      this.selectedSite = event;\n      this.selectedBl = {};\n    } else {\n      this.selectedSite = {};\n      this.selectedBl = {};\n    }\n  }\n  onSelectBuilding(event) {\n    if (event.blId !== null && event.blId !== '') {\n      this.selectedBl = event;\n      const siteData = {\n        siteId: event.siteId,\n        siteName: event.siteNameString\n      };\n      this.selectedSite = siteData;\n      this.updateSiteList(siteData);\n      this.filterPanel.patchValue({\n        siteId: event.siteId\n      });\n    } else {}\n  }\n  onSelectDisplayType(event) {\n    if (event.value === 'grid') {\n      this.isGridType = true;\n    } else {\n      this.isGridType = false;\n      this.loadRecords();\n    }\n  }\n  onClickFilter() {\n    this.loadRecords();\n  }\n  loadRecords() {\n    var dateRequestedFrom = this.filterPanel.controls.dateRequestedFrom.value;\n    var dateRequestedTo = this.filterPanel.controls.dateRequestedTo.value;\n    var blId = this.filterPanel.controls.blId.value;\n    var siteId = this.filterPanel.controls.siteId.value;\n    var groupBy = this.filterPanel.controls.groupBy.value;\n    this.basicOptions.scales.x.title.text = this.chartTitle;\n    this.showType = this.filterPanel.controls.showType.value;\n    var filterData = {\n      \"dateRequestedFrom\": this.datePipe.transform(dateRequestedFrom, \"yyyy-MM-dd\"),\n      \"dateRequestedTo\": this.datePipe.transform(dateRequestedTo, \"yyyy-MM-dd\"),\n      \"blId\": blId,\n      \"siteId\": siteId,\n      \"groupBy\": groupBy,\n      \"showRequestType\": this.showType\n    };\n    this.reportsServ.getReportsByFilter(filterData).subscribe(res => {\n      if (res.length > 0) {\n        this.reportData = res;\n        this.displayGridLabel = this.reportData && this.reportData[0].lable;\n        this.setChartData();\n      } else {\n        const label = this.groupByData.filter(each => each.value === this.filterPanel.controls.groupBy.value);\n        this.displayGridLabel = label[0].lable;\n        this.reportData = [];\n        this.setChartData();\n      }\n    });\n  }\n  onClickCount(data) {\n    const dateRequestedFrom = this.filterPanel.controls.dateRequestedFrom.value;\n    const dateRequestedTo = this.filterPanel.controls.dateRequestedTo.value;\n    this.requestData = [];\n    this.filterData = {\n      ...this.filterData,\n      siteId: this.filterPanel.controls.siteId.value,\n      blId: this.filterPanel.controls.blId.value,\n      dateRequestedFrom: this.datePipe.transform(dateRequestedFrom, \"yyyy-MM-dd\"),\n      dateRequestedTo: this.datePipe.transform(dateRequestedTo, \"yyyy-MM-dd\"),\n      showRequestType: this.showType\n    };\n    if (data.lable === \"Problem Type\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        technicianId: null,\n        teamId: null,\n        problemTypeId: data.probType,\n        showRequestType: this.showType\n      };\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Status\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: data.status,\n        technicianId: null,\n        teamId: null,\n        problemTypeId: null,\n        showRequestType: this.showType\n      };\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Site\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        blId: null,\n        technicianId: null,\n        teamId: null,\n        siteId: data.site,\n        showRequestType: this.showType\n      };\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Building\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        technicianId: null,\n        teamId: null,\n        blId: data.bl,\n        showRequestType: this.showType\n      };\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Employee\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        blId: null,\n        technicianId: null,\n        teamId: null,\n        requestedFor: data.emId,\n        showRequestType: this.showType\n      };\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Asset\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        blId: null,\n        technicianId: null,\n        teamId: null,\n        eqId: data.eq,\n        showRequestType: this.showType\n      };\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Technician\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        blId: null,\n        teamId: null,\n        techncianId: data.cfId,\n        showRequestType: this.showType\n      };\n      this.loadRequestTechncianOrTeamReport(this.filterData);\n    } else if (data.lable === \"Team\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        blId: null,\n        techncianId: null,\n        teamId: data.team,\n        showRequestType: this.showType\n      };\n      this.loadRequestTechncianOrTeamReport(this.filterData);\n    }\n  }\n  loadRequestData(filterData) {\n    this.wrServ.getAllWrByFilter(filterData).subscribe(res => {\n      if (res.length > 0) {\n        this.requestData = res.map(each => {\n          return {\n            ...each,\n            formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n            formatedRequestedFor: this.getEmployeeFullName(each.requestedFor)\n          };\n        });\n        this.showPopUpGrid = true;\n      } else {\n        this.requestData = [];\n      }\n    });\n  }\n  loadRequestTechncianOrTeamReport(data) {\n    this.summeryReportServ.getRequestTechncianOrTeamReport(data).subscribe(res => {\n      if (res.length > 0) {\n        this.requestData = res;\n        this.showPopUpGrid = true;\n      } else {\n        this.requestData = [];\n      }\n    });\n  }\n  onClickBarChart(event) {\n    const index = event.element.index;\n    const data = this.reportData[index];\n    this.onClickCount(data);\n  }\n  changeGroupBy(event) {\n    this.chartTitle = event.lable;\n  }\n  exportChartToPDF() {\n    const htmlRef = this.chartContainer.nativeElement.querySelector('canvas');\n    html2canvas(htmlRef).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      this.chartImg = [];\n      this.chartImg.push(imgData);\n      this.printPDF();\n    });\n  }\n  printPDF() {\n    var reportDetails = {\n      chartImg: this.chartImg,\n      title: 'Requests By ' + this.chartTitle\n    };\n    this.bookingSrv.printPdf(reportDetails).subscribe(res => {\n      if (res != null) {\n        this.messageService.add({\n          key: 'reportBookingSer',\n          severity: 'success',\n          summary: 'PDF Created',\n          detail: 'PDF created successfully'\n        });\n        var file = new Blob([res], {\n          type: 'application/pdf'\n        });\n        var fileURL = URL.createObjectURL(file);\n        window.open(fileURL);\n      }\n    });\n  }\n  onClear() {\n    // this.enumBL = [...this.enumAllBl];\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.selectedBl = {};\n    this.selectedSite = {};\n    this.filterPanel.patchValue({\n      groupBy: this.groupByData[0].value,\n      displayType: this.displayTypeData[1].value,\n      dateRequestedFrom: null,\n      dateRequestedTo: null,\n      blId: null,\n      siteId: null,\n      showType: this.showType\n    });\n    this.isGridType = false;\n  }\n  getEmployeeFullName(id) {\n    if (this.allEmployees) {\n      this.enumEm = this.allEmployees.filter(em => em.emId === id);\n      this.fullName = this.enumEm.map(em => {\n        if (em.firstName.length > 0 && em.lastName.length > 0) {\n          return em.firstName + \" \" + em.lastName + ' - ' + em.emCode;\n        } else {\n          return em.firstName + ' - ' + em.emCode;\n        }\n      });\n    }\n    return this.fullName[0];\n  }\n  scrollToEndSite() {\n    this.offsetSite = this.limitSite;\n    this.limitSite += this.scrollLimit;\n    this.filterCriteria.limit = this.limitSite;\n    this.filterCriteria.offset = this.offsetSite;\n    this.siteServ.getAllSiteByScroll(this.filterCriteria).subscribe(res => {\n      this.enumAllSites = res;\n      this.updateSiteList(this.selectedSite);\n    });\n  }\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blSrv.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    });\n  }\n  searchSite(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"siteName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndSite();\n  }\n  searchBl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"blName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndBl();\n  }\n  updateSiteList(siteData) {\n    if (siteData.siteId) {\n      this.enumAllSites = this.enumAllSites.filter(t => t.siteId !== siteData.siteId);\n      this.enumAllSites = this.enumAllSites.filter(t => t.siteId !== null);\n      this.enumAllSites.unshift(siteData);\n    }\n    this.enumAllSites.unshift(new SiteFilterInputDTO(null, 'Make a selection'));\n  }\n  updateBlList(blData) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n  onOpenSite() {\n    this.limitSite = 0;\n    this.offsetSite = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.scrollToEndSite();\n  }\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    if (this.selectedSite.siteId) {\n      this.filterCriteria = {\n        fieldName: \"site.siteId\",\n        value: this.selectedSite.siteId,\n        matchMode: \"equals\",\n        limit: 0,\n        offset: 0\n      };\n    } else {\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n    }\n    this.scrollToEndBl();\n  }\n  static #_ = this.ɵfac = function SummeryRequestReportsComponent_Factory(t) {\n    return new (t || SummeryRequestReportsComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.BuildingService), i0.ɵɵdirectiveInject(i3.SiteService), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i5.SummeryRequestReportsService), i0.ɵɵdirectiveInject(i5.SummeryRequestReportsService), i0.ɵɵdirectiveInject(i6.AddWorkRequestService), i0.ɵɵdirectiveInject(i7.MessageService), i0.ɵɵdirectiveInject(i8.BookingService), i0.ɵɵdirectiveInject(i9.EmployeeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SummeryRequestReportsComponent,\n    selectors: [[\"app-summery-request-report\"]],\n    viewQuery: function SummeryRequestReportsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartContainer = _t.first);\n      }\n    },\n    inputs: {\n      showType: \"showType\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 54,\n    vars: 32,\n    consts: [[1, \"card\", 2, \"height\", \"95vh\"], [\"header\", \"Request Summary\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"25%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedFrom\", \"formControlName\", \"dateRequestedFrom\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedTo\", \"formControlName\", \"dateRequestedTo\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"siteId\", \"bindLabel\", \"siteName\", \"bindValue\", \"siteId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\", \"open\", \"scrollToEnd\", \"search\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"showType\", \"bindLabel\", \"label\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"open\", \"change\", \"scrollToEnd\", \"search\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"groupBy\", \"bindLabel\", \"lable\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"displayType\", \"bindLabel\", \"lable\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-button\", 2, \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-button\", 2, \"margin-left\", \"5px\", \"margin-right\", \"5px\", 3, \"click\"], [\"icon\", \"pi pi-file-pdf\", \"matTooltip\", \"Generate PDF\", \"matTooltipPosition\", \"below\", \"styleClass\", \"p-button-raised p-button-danger\", 3, \"disabled\", \"click\"], [\"class\", \"card\", 4, \"ngIf\"], [4, \"ngIf\"], [\"styleClass\", \"dark-panel\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\"], [\"pTemplate\", \"emptymessage\"], [\"pSortableColumn\", \"value\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"value\"], [\"type\", \"text\", \"field\", \"value\", \"display\", \"menu\"], [\"pSortableColumn\", \"count\"], [\"field\", \"count\"], [\"type\", \"text\", \"field\", \"count\", \"display\", \"menu\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [\"chartContainer\", \"\"], [\"type\", \"bar\", 3, \"height\", \"data\", \"options\", \"onDataSelect\"], [2, \"margin\", \"0px\"], [3, \"data\"]],\n    template: function SummeryRequestReportsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"form\", 2)(3, \"table\", 3)(4, \"tr\")(5, \"td\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Requested From\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"p-calendar\", 9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(12, \"td\", 4)(13, \"div\", 5)(14, \"div\", 6)(15, \"div\", 7)(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Requested To\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"p-calendar\", 10);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(19, \"td\", 4)(20, \"div\", 5)(21, \"label\", 8);\n        i0.ɵɵtext(22, \"Site\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"ng-select\", 11);\n        i0.ɵɵlistener(\"change\", function SummeryRequestReportsComponent_Template_ng_select_change_23_listener($event) {\n          return ctx.onSelectSite($event);\n        })(\"open\", function SummeryRequestReportsComponent_Template_ng_select_open_23_listener() {\n          return ctx.onOpenSite();\n        })(\"scrollToEnd\", function SummeryRequestReportsComponent_Template_ng_select_scrollToEnd_23_listener() {\n          return ctx.scrollToEndSite();\n        })(\"search\", function SummeryRequestReportsComponent_Template_ng_select_search_23_listener($event) {\n          return ctx.searchSite($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"td\", 4)(25, \"div\", 5)(26, \"label\", 8);\n        i0.ɵɵtext(27, \"Requests Type \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"ng-select\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"tr\")(30, \"td\", 4)(31, \"div\", 5)(32, \"label\", 8);\n        i0.ɵɵtext(33, \"Building\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"ng-select\", 13);\n        i0.ɵɵlistener(\"open\", function SummeryRequestReportsComponent_Template_ng_select_open_34_listener() {\n          return ctx.onOpenBl();\n        })(\"change\", function SummeryRequestReportsComponent_Template_ng_select_change_34_listener($event) {\n          return ctx.onSelectBuilding($event);\n        })(\"scrollToEnd\", function SummeryRequestReportsComponent_Template_ng_select_scrollToEnd_34_listener() {\n          return ctx.scrollToEndBl();\n        })(\"search\", function SummeryRequestReportsComponent_Template_ng_select_search_34_listener($event) {\n          return ctx.searchBl($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"td\", 4)(36, \"div\", 5)(37, \"label\", 14);\n        i0.ɵɵtext(38, \"Group By\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"ng-select\", 15);\n        i0.ɵɵlistener(\"change\", function SummeryRequestReportsComponent_Template_ng_select_change_39_listener($event) {\n          return ctx.changeGroupBy($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"td\", 4)(41, \"div\", 5)(42, \"label\", 14);\n        i0.ɵɵtext(43, \"Display Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"ng-select\", 16);\n        i0.ɵɵlistener(\"change\", function SummeryRequestReportsComponent_Template_ng_select_change_44_listener($event) {\n          return ctx.onSelectDisplayType($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(45, \"td\", 4)(46, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function SummeryRequestReportsComponent_Template_button_click_46_listener() {\n          return ctx.onClickFilter();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function SummeryRequestReportsComponent_Template_button_click_47_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"p-button\", 19);\n        i0.ɵɵlistener(\"click\", function SummeryRequestReportsComponent_Template_p_button_click_48_listener() {\n          return ctx.exportChartToPDF();\n        });\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(49, SummeryRequestReportsComponent_div_49_Template, 5, 7, \"div\", 20);\n        i0.ɵɵtemplate(50, SummeryRequestReportsComponent_div_50_Template, 3, 3, \"div\", 21);\n        i0.ɵɵelementStart(51, \"p-dialog\", 22);\n        i0.ɵɵlistener(\"visibleChange\", function SummeryRequestReportsComponent_Template_p_dialog_visibleChange_51_listener($event) {\n          return ctx.showPopUpGrid = $event;\n        });\n        i0.ɵɵtemplate(52, SummeryRequestReportsComponent_ng_template_52_Template, 2, 0, \"ng-template\", 23);\n        i0.ɵɵtemplate(53, SummeryRequestReportsComponent_ng_template_53_Template, 1, 1, \"ng-template\", 24);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"toggleable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"showIcon\", false);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"showIcon\", false);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumAllSites);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.showRequestsTypeList)(\"searchable\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumBL);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.groupByData);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx.displayTypeData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isGridType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isGridType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isGridType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(31, _c2));\n        i0.ɵɵproperty(\"visible\", ctx.showPopUpGrid)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i10.NgSelectComponent, i7.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SortIcon, i11.ColumnFilter, i12.Calendar, i13.ButtonDirective, i13.Button, i14.Dialog, i15.Panel, i16.UIChart, i17.AddTableComponent],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  padding-left: 1rem !important;\\n  padding: 0rem;\\n  border-radius: 0rem !important;\\n}\\n\\n  .ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value {\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  white-space: nowrap !important;\\n  max-width: 180px !important;\\n}\\n\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n    .p-button.p-button-sm {\\n    font-size: 0.7rem;\\n    padding: 0.25rem 0.5rem;\\n  }\\n    .p-button.p-button-icon-only {\\n    width: 2rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svc3VtbWVyeS1yZXF1ZXN0LXJlcG9ydC9tb2RhbC9zdW1tZXJ5LXJlcXVlc3QtcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vTWFuYXYlMjBHdXB0YS9Eb3dubG9hZHMvZm1zL2Ztcy9mcm9udGVuZC9mbXNfZnJvbnRlbmQvc3JjL2FwcC91aS9IZWxwZGVzay9zdW1tZXJ5LXJlcXVlc3QtcmVwb3J0L21vZGFsL3N1bW1lcnktcmVxdWVzdC1yZXBvcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSw2QkFBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtBQ0FKOztBREdBO0VBQ0MsMkJBQUE7RUFDQSxrQ0FBQTtFQUNBLDhCQUFBO0VBQ0EsMkJBQUE7QUNBRDs7QURJQTtFQUNDO0lBQ0MsaUJBQUE7SUFDRyx1QkFBQTtFQ0RIO0VESUQ7SUFDQyxXQUFBO0VDRkE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy9zcmMvc2Nzcy92YXJpYWJsZXMnO1xuOmhvc3QgOjpuZy1kZWVwIC5wLWRpYWxvZyAucC1kaWFsb2ctaGVhZGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDFyZW0gIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOiAwcmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDByZW0gIWltcG9ydGFudDsgXG4gIH1cblxuOjpuZy1kZWVwIC5uZy1zZWxlY3Qubmctc2VsZWN0LXNpbmdsZSAubmctc2VsZWN0LWNvbnRhaW5lciAubmctdmFsdWUtY29udGFpbmVyIC5uZy12YWx1ZSB7XG5cdG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcblx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXMgIWltcG9ydGFudDtcblx0d2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuXHRtYXgtd2lkdGg6IDE4MHB4ICFpbXBvcnRhbnQ7XG5cdH1cblxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkdGFibGV0UG90cmFpdE1pbldpZHRoKSBhbmQgKG1heC13aWR0aDokdGFibGV0UG90cmFpdE1heFdpZHRoICl7XG5cdDo6bmctZGVlcCAucC1idXR0b24ucC1idXR0b24tc217XG5cdFx0Zm9udC1zaXplOiAwLjdyZW07XG4gICAgXHRwYWRkaW5nOiAwLjI1cmVtIDAuNXJlbTtcblx0fVxuXG5cdDo6bmctZGVlcCAucC1idXR0b24ucC1idXR0b24taWNvbi1vbmx5e1xuXHRcdHdpZHRoOjJyZW07XG5cdH1cbn0iLCI6aG9zdCA6Om5nLWRlZXAgLnAtZGlhbG9nIC5wLWRpYWxvZy1oZWFkZXIge1xuICBwYWRkaW5nLWxlZnQ6IDFyZW0gIWltcG9ydGFudDtcbiAgcGFkZGluZzogMHJlbTtcbiAgYm9yZGVyLXJhZGl1czogMHJlbSAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLm5nLXNlbGVjdC5uZy1zZWxlY3Qtc2luZ2xlIC5uZy1zZWxlY3QtY29udGFpbmVyIC5uZy12YWx1ZS1jb250YWluZXIgLm5nLXZhbHVlIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50O1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcyAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwICFpbXBvcnRhbnQ7XG4gIG1heC13aWR0aDogMTgwcHggIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAwcHgpIGFuZCAobWF4LXdpZHRoOiA5NTlweCkge1xuICA6Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLXNtIHtcbiAgICBmb250LXNpemU6IDAuN3JlbTtcbiAgICBwYWRkaW5nOiAwLjI1cmVtIDAuNXJlbTtcbiAgfVxuICA6Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLWljb24tb25seSB7XG4gICAgd2lkdGg6IDJyZW07XG4gIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","UtilConstant","MessageService","html2canvas","SiteFilterInputDTO","BuildingFilterInputDTO","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ctx_r4","displayGridLabel","ɵɵlistener","SummeryRequestReportsComponent_div_49_ng_template_3_Template_tr_click_0_listener","restoredCtx","ɵɵrestoreView","_r9","report_r7","$implicit","ctx_r8","ɵɵnextContext","ɵɵresetView","onClickCount","ɵɵtextInterpolate","value","count","ɵɵattribute","ɵɵtemplate","SummeryRequestReportsComponent_div_49_ng_template_2_Template","SummeryRequestReportsComponent_div_49_ng_template_3_Template","SummeryRequestReportsComponent_div_49_ng_template_4_Template","ɵɵproperty","ctx_r0","reportData","rowCount","ɵɵpureFunction0","_c1","SummeryRequestReportsComponent_div_50_Template_p_chart_onDataSelect_2_listener","$event","_r13","ctx_r12","onClickBarChart","ctx_r1","chartData","basicOptions","ctx_r3","requestData","SummeryRequestReportsComponent","constructor","formBuilder","blSrv","siteServ","datePipe","reportsServ","summeryReportServ","wrServ","messageService","bookingSrv","employeeService","subscriptions","enumAllSites","enumAllBl","enumBL","isErr","errorMsg","ROW_COUNT","showPopUpGrid","isGridType","chartImg","chartTitle","allEmployees","enumEm","groupByData","displayTypeData","title","display","text","fontSize","legend","scales","x","fontStyle","ticks","grid","y","beginAtZero","stepSize","tooltips","enabled","mode","intersect","callbacks","label","tooltipItem","formattedValue","responsive","animation","duration","easing","plugins","filterData","siteId","blId","flId","rmId","eqId","wrId","requestedFor","status","problemType","dateRequestedFrom","dateRequestedTo","technicianId","teamId","showRequestType","showRequestsTypeList","showType","limitSite","offsetSite","limitBl","offsetBl","filterCriteria","fieldName","matchMode","limit","offset","selectedSite","selectedBl","scrollLimit","SCROLL_LIMIT","filterPanel","group","Date","getFullYear","getMonth","groupBy","required","displayType","ngOnInit","lable","patchValue","loadRecords","loadAllEmployee","setShowType","setTimeout","setChartData","initialChartData","labels","datasets","data","backgroundColor","borderColor","borderWidth","dynamicColors","i","length","color","Math","floor","random","isWhiteColorShade","push","forEach","each","index","empty","repeat","filter","controls","rgbValues","match","r","parseInt","g","b","threshold","average","checkDateValidation","control","undefined","setErrors","clearAsyncValidators","updateValueAndValidity","dateFrom","dateTo","getTime","getAllEmployeeList","subscribe","res","onSelectSite","event","onSelectBuilding","siteData","siteName","siteNameString","updateSiteList","onSelectDisplayType","onClickFilter","transform","getReportsByFilter","problemTypeId","probType","loadRequestData","site","bl","emId","eq","techncianId","cfId","loadRequestTechncianOrTeamReport","team","getAllWrByFilter","map","formatedDateRequested","dateRequested","formatedRequestedFor","getEmployeeFullName","getRequestTechncianOrTeamReport","element","changeGroupBy","exportChartToPDF","htmlRef","chartContainer","nativeElement","querySelector","then","canvas","imgData","toDataURL","printPDF","reportDetails","printPdf","add","key","severity","summary","detail","file","Blob","type","fileURL","URL","createObjectURL","window","open","onClear","id","em","fullName","firstName","lastName","emCode","scrollToEndSite","getAllSiteByScroll","scrollToEndBl","getALLBuildingByScroll","updateBlList","searchSite","term","searchBl","t","unshift","blData","onOpenSite","onOpenBl","_","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","BuildingService","i3","SiteService","i4","DatePipe","i5","SummeryRequestReportsService","i6","AddWorkRequestService","i7","i8","BookingService","i9","EmployeeService","_2","selectors","viewQuery","SummeryRequestReportsComponent_Query","rf","ctx","decls","vars","consts","template","SummeryRequestReportsComponent_Template","SummeryRequestReportsComponent_Template_ng_select_change_23_listener","SummeryRequestReportsComponent_Template_ng_select_open_23_listener","SummeryRequestReportsComponent_Template_ng_select_scrollToEnd_23_listener","SummeryRequestReportsComponent_Template_ng_select_search_23_listener","SummeryRequestReportsComponent_Template_ng_select_open_34_listener","SummeryRequestReportsComponent_Template_ng_select_change_34_listener","SummeryRequestReportsComponent_Template_ng_select_scrollToEnd_34_listener","SummeryRequestReportsComponent_Template_ng_select_search_34_listener","SummeryRequestReportsComponent_Template_ng_select_change_39_listener","SummeryRequestReportsComponent_Template_ng_select_change_44_listener","SummeryRequestReportsComponent_Template_button_click_46_listener","SummeryRequestReportsComponent_Template_button_click_47_listener","SummeryRequestReportsComponent_Template_p_button_click_48_listener","SummeryRequestReportsComponent_div_49_Template","SummeryRequestReportsComponent_div_50_Template","SummeryRequestReportsComponent_Template_p_dialog_visibleChange_51_listener","SummeryRequestReportsComponent_ng_template_52_Template","SummeryRequestReportsComponent_ng_template_53_Template","valid","ɵɵstyleMap","_c2"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\summery-request-report\\modal\\summery-request-report.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\summery-request-report\\modal\\summery-request-report.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, UntypedFormBuilder, UntypedFormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { SiteService } from 'src/app/services/site.service';\nimport { BuildingService } from 'src/app/ui/background-loc/services/bl.service';\nimport { SummeryRequestReportsService } from '../services/summery-request-report.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { AddWorkRequestService } from '../../work-request/service/add-work-request.services';\nimport { MessageService } from 'primeng/api';\nimport { BookingService } from 'src/app/ui/booking/services/booking.services';\nimport html2canvas from 'html2canvas';\nimport { EmployeeService } from 'src/app/ui/employee/services/employee.service';\nimport { SiteFilterInputDTO } from 'src/app/ui/site/modal/SiteFilterInputDTO.model';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\n\n@Component({\n  selector: 'app-summery-request-report',\n  templateUrl: './summery-request-report.component.html',\n  styleUrls: ['./summery-request-report.component.scss'],\n  providers: [MessageService]\n})\nexport class SummeryRequestReportsComponent implements OnInit {\n\n  filterPanel: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  enumAllSites: SiteFilterInputDTO[] = [];\n  enumAllBl: BuildingFilterInputDTO[] = [];\n  enumBL: BuildingFilterInputDTO[] = [];\n  isErr: boolean = false;\n  errorMsg: string = '';\n  reportData: any[] = [];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  displayGridLabel: any;\n  showPopUpGrid: boolean = false;\n  isGridType: boolean = false;\n  chartData: any = [];\n  chartImg: any[] = [];\n  title: any;\n  requestTitle: any;\n  requestData: any[] = [];\n  chartTitle: string = 'Status';\n  allEmployees: any[] = []\n  enumEm: any[] = [];\n  fullName: any;\n  groupByData: any[] = [\n    {\n      \"id\": 0,\n      \"lable\": 'Status',\n      \"value\": \"status\"\n    },\n    {\n      \"id\": 1,\n      \"lable\": 'Problem Type',\n      \"value\": \"prob_type_id\"\n    },\n    {\n      \"id\": 2,\n      \"lable\": 'Site',\n      \"value\": \"site_id\"\n    },\n    {\n      \"id\": 3,\n      \"lable\": 'Building',\n      \"value\": \"bl_id\"\n    },\n    {\n      \"id\": 4,\n      \"lable\": 'Asset',\n      \"value\": \"eq_id\"\n    },\n    {\n      \"id\": 5,\n      \"lable\": 'Technician',\n      \"value\": \"technician_id\"\n    },\n    {\n      \"id\": 6,\n      \"lable\": 'Employee',\n      \"value\": \"requested_for\"\n    },\n    {\n      \"id\": 6,\n      \"lable\": 'Team',\n      \"value\": \"team_id\"\n    }\n  ];\n\n  displayTypeData: any = [\n    {\n      \"id\": 1,\n      \"lable\": 'Grid',\n      \"value\": \"grid\"\n    },\n    {\n      \"id\": 2,\n      \"lable\": 'Bar Chart',\n      \"value\": \"bar_char\"\n    },\n  ]\n\n  basicOptions = {\n    title: {\n      display: false,\n      text: 'Bar Chart',\n      fontSize: 18\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: this.chartTitle,\n          fontStyle: 'bold',\n        },\n        ticks: {\n          display: true,\n        },\n        grid: {\n          display: false,\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Request Count',\n          fontStyle: 'bold',\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 5,\n          display: true\n        },\n        grid: {\n          display: false,\n        }\n      },\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem: any) {\n          return \"Requests: \" + tooltipItem.formattedValue;\n        }\n      }\n    },\n    responsive: true,\n    animation: {\n      duration: 1000,\n      easing: 'easeOutBounce'\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    }\n  };\n\n  filterData: any = {\n    siteId: null,\n    blId: null,\n    flId: null,\n    rmId: null,\n    eqId: null,\n    wrId: null,\n    requestedFor: null,\n    status: null,\n    problemType: null,\n    dateRequestedFrom: null,\n    dateRequestedTo: null,\n    technicianId: null,\n    teamId: null,\n    showRequestType: null\n  }\n\n  showRequestsTypeList: any[] = [{ label: \"Preventive Maintenance\", value: \"ppm\" },\n  { label: \"Facilities Helpdesk\", value: \"facilities\" },\n  { label: \"All\", value: \"all\" }]\n\n  @ViewChild('chartContainer', { static: false }) chartContainer!: ElementRef;\n  @Input() showType: string = \"facilities\";\n  limitSite: number = 0;\n  offsetSite: number = 0;\n  limitBl: number = 0;\n  offsetBl: number = 0;\n  filterCriteria: any = {\n    fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n  };\n  selectedSite: any = {};\n  selectedBl: any = {};\n  scrollLimit: number = UtilConstant.SCROLL_LIMIT;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private blSrv: BuildingService,\n    private siteServ: SiteService,\n    private datePipe: DatePipe,\n    private reportsServ: SummeryRequestReportsService,\n    private summeryReportServ: SummeryRequestReportsService,\n    private wrServ: AddWorkRequestService,\n    private messageService: MessageService,\n    private bookingSrv: BookingService,\n    private employeeService: EmployeeService\n  ) {\n\n    this.filterPanel = this.formBuilder.group({\n      dateRequestedFrom: [new Date(new Date().getFullYear(), new Date().getMonth(), 1)],\n      dateRequestedTo: [new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)],\n      blId: [null],\n      siteId: [null],\n      groupBy: [null, [Validators.required]],\n      displayType: [null],\n      showType: [this.showType]\n    })\n\n  }\n\n  ngOnInit(): void {\n    this.chartTitle = this.groupByData[0].lable;\n    this.filterPanel.patchValue({\n      groupBy: this.groupByData[0].value,\n      displayType: this.displayTypeData[1].value,\n      showType: this.showType\n    })\n    this.isGridType = false;\n    this.loadRecords();\n    this.loadAllEmployee();\n  }\n\n  setShowType() {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        showType: this.showType\n      });\n    })\n  }\n\n  setChartData() {\n    let initialChartData: any = {\n      labels: [],\n      datasets: [\n        {\n          label: \"\",\n          data: [],\n          backgroundColor: [],\n          borderColor: [],\n          borderWidth: 1\n        }\n      ]\n    }\n    const dynamicColors: any[] = [];\n    for (let i = 0; i < this.reportData.length; i++) {\n      let color = '';\n      do {\n        color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      } while (color === 'rgba(255, 255, 255, 1)' || this.isWhiteColorShade(color)) { // Regenerate color if it is white\n        color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n      };\n\n      dynamicColors.push(color);\n    }\n\n    this.reportData.length > 0 && this.reportData.forEach((each: any, index: number) => {\n      initialChartData.labels.push(each.value);\n      initialChartData.datasets[0].data.push(each.count);\n      initialChartData.datasets[0].backgroundColor.push(dynamicColors[index % dynamicColors.length]);\n      initialChartData.datasets[0].borderColor.push(dynamicColors[index % dynamicColors.length]);\n    });\n    if (initialChartData.datasets[0].data.length < 5) {\n      let empty = '  ';\n      for (let i = 0; i < 5 - initialChartData.datasets[0].data.length; i++) {\n        initialChartData.datasets[0].data.push(0);\n        initialChartData.labels.push(empty.repeat(i + 1));\n        initialChartData.datasets[0].backgroundColor.push('');\n        initialChartData.datasets[0].borderColor.push('');\n      }\n    }\n    const label = this.groupByData.filter((each: any) => each.value === this.filterPanel.controls.groupBy.value);\n    //this.basicOptions.scales.xAxes[0].scaleLabel.labelString = label[0].lable;\n    this.chartData = initialChartData;\n  }\n\n  isWhiteColorShade(color: any) {\n    // Extract RGB values from the color string\n    const rgbValues = color.match(/\\d+/g);\n    const r = parseInt(rgbValues[0]);\n    const g = parseInt(rgbValues[1]);\n    const b = parseInt(rgbValues[2]);\n\n    // Check if all RGB values are close to 255 (white)\n    const threshold = 50; // Adjust this threshold as needed\n    const average = (r + g + b) / 3;\n    return average > threshold;\n  }\n\n  checkDateValidation(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined && control.value != null) {\n        this.filterPanel.controls['dateRequestedFrom'].setErrors(null);\n        this.filterPanel.controls['dateRequestedTo'].setErrors(null);\n        this.filterPanel.clearAsyncValidators();\n        this.filterPanel.updateValueAndValidity();\n\n        var dateFrom = new Date(this.filterPanel.controls['dateRequestedFrom'].value);\n        var dateTo = new Date(this.filterPanel.controls['dateRequestedTo'].value);\n\n        if (dateFrom.getTime() >= dateTo.getTime() && this.filterPanel.controls['dateRequestedFrom'].value != null) {\n          this.isErr = true;\n          this.filterPanel.controls['dateFrom'].setErrors({ 'incorrect': true });\n          this.filterPanel.updateValueAndValidity();\n          this.errorMsg = 'Date requested to should be greater than date requested from.'\n          return { 'incorrect': true };\n        } else {\n          this.isErr = false\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n\n  loadAllEmployee() {\n    this.employeeService.getAllEmployeeList().subscribe((res: any) => {\n      if (res) {\n        this.allEmployees = res;\n      }\n      else {\n        this.allEmployees = [];\n      }\n    })\n  }\n\n  onSelectSite(event: any) {\n    this.filterPanel.patchValue({\n      blId: null\n    })\n    if (event.siteId !== null && event.siteId !== '') {\n      this.selectedSite = event;\n      this.selectedBl = {};\n    } else {\n      this.selectedSite = {};\n      this.selectedBl = {};\n    }\n  }\n\n  onSelectBuilding(event: any) {\n    if (event.blId !== null && event.blId !== '') {\n      this.selectedBl = event;\n      const siteData = {\n        siteId: event.siteId,\n        siteName: event.siteNameString,\n      }\n      this.selectedSite = siteData;\n      this.updateSiteList(siteData);\n      this.filterPanel.patchValue({\n        siteId: event.siteId\n      })\n    } else {\n\n    }\n  }\n\n  onSelectDisplayType(event: any) {\n    if (event.value === 'grid') {\n      this.isGridType = true;\n    } else {\n      this.isGridType = false;\n      this.loadRecords();\n    }\n  }\n\n  onClickFilter() {\n    this.loadRecords();\n  }\n\n  loadRecords() {\n    var dateRequestedFrom = this.filterPanel.controls.dateRequestedFrom.value;\n    var dateRequestedTo = this.filterPanel.controls.dateRequestedTo.value;\n    var blId = this.filterPanel.controls.blId.value;\n    var siteId = this.filterPanel.controls.siteId.value;\n    var groupBy = this.filterPanel.controls.groupBy.value;\n    this.basicOptions.scales.x.title.text = this.chartTitle;\n    this.showType = this.filterPanel.controls.showType.value;\n    var filterData = {\n      \"dateRequestedFrom\": this.datePipe.transform(dateRequestedFrom, \"yyyy-MM-dd\"),\n      \"dateRequestedTo\": this.datePipe.transform(dateRequestedTo, \"yyyy-MM-dd\"),\n      \"blId\": blId,\n      \"siteId\": siteId,\n      \"groupBy\": groupBy,\n      \"showRequestType\": this.showType\n    };\n\n    this.reportsServ.getReportsByFilter(filterData).subscribe((res: any) => {\n      if (res.length > 0) {\n        this.reportData = res;\n        this.displayGridLabel = this.reportData && this.reportData[0].lable;\n        this.setChartData();\n      } else {\n        const label = this.groupByData.filter((each: any) => each.value === this.filterPanel.controls.groupBy.value);\n        this.displayGridLabel = label[0].lable;\n        this.reportData = []\n        this.setChartData()\n      }\n    })\n  }\n\n  onClickCount(data: any) {\n    const dateRequestedFrom = this.filterPanel.controls.dateRequestedFrom.value;\n    const dateRequestedTo = this.filterPanel.controls.dateRequestedTo.value;\n    this.requestData = [];\n    this.filterData = {\n      ...this.filterData,\n      siteId: this.filterPanel.controls.siteId.value,\n      blId: this.filterPanel.controls.blId.value,\n      dateRequestedFrom: this.datePipe.transform(dateRequestedFrom, \"yyyy-MM-dd\"),\n      dateRequestedTo: this.datePipe.transform(dateRequestedTo, \"yyyy-MM-dd\"),\n      showRequestType: this.showType\n    }\n    if (data.lable === \"Problem Type\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        technicianId: null,\n        teamId: null,\n        problemTypeId: data.probType,\n        showRequestType: this.showType\n      }\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Status\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: data.status,\n        technicianId: null,\n        teamId: null,\n        problemTypeId: null,\n        showRequestType: this.showType\n      }\n      this.loadRequestData(this.filterData);\n    }\n    else if (data.lable === \"Site\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        blId: null,\n        technicianId: null,\n        teamId: null,\n        siteId: data.site,\n        showRequestType: this.showType\n      }\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Building\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        technicianId: null,\n        teamId: null,\n        blId: data.bl,\n        showRequestType: this.showType\n      }\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Employee\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        blId: null,\n        technicianId: null,\n        teamId: null,\n        requestedFor: data.emId,\n        showRequestType: this.showType\n      }\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Asset\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        blId: null,\n        technicianId: null,\n        teamId: null,\n        eqId: data.eq,\n        showRequestType: this.showType\n      }\n      this.loadRequestData(this.filterData);\n    } else if (data.lable === \"Technician\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        blId: null,\n        teamId: null,\n        techncianId: data.cfId,\n        showRequestType: this.showType\n      }\n      this.loadRequestTechncianOrTeamReport(this.filterData);\n    } else if (data.lable === \"Team\") {\n      this.filterData = {\n        ...this.filterData,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        wrId: null,\n        requestedFor: null,\n        status: null,\n        problemTypeId: null,\n        siteId: null,\n        blId: null,\n        techncianId: null,\n        teamId: data.team,\n        showRequestType: this.showType\n      }\n      this.loadRequestTechncianOrTeamReport(this.filterData);\n    }\n  }\n\n  loadRequestData(filterData: any) {\n    this.wrServ.getAllWrByFilter(filterData).subscribe((res: any) => {\n      if (res.length > 0) {\n        this.requestData = res.map((each: any) => {\n          return {\n            ...each,\n            formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n            formatedRequestedFor: this.getEmployeeFullName(each.requestedFor)\n          }\n        })\n        this.showPopUpGrid = true;\n      } else {\n        this.requestData = [];\n      }\n    })\n  }\n\n  loadRequestTechncianOrTeamReport(data: any) {\n    this.summeryReportServ.getRequestTechncianOrTeamReport(data).subscribe((res: any) => {\n      if (res.length > 0) {\n        this.requestData = res;\n        this.showPopUpGrid = true;\n      } else {\n        this.requestData = [];\n      }\n    })\n  }\n\n  onClickBarChart(event: any) {\n    const index = event.element.index;\n    const data = this.reportData[index];\n    this.onClickCount(data);\n  }\n\n  changeGroupBy(event: any) {\n    this.chartTitle = event.lable;\n  }\n\n  exportChartToPDF() {\n    const htmlRef = this.chartContainer.nativeElement.querySelector('canvas');\n    html2canvas(htmlRef).then((canvas: any) => {\n      const imgData = canvas.toDataURL('image/png');\n      this.chartImg = [];\n      this.chartImg.push(imgData);\n      this.printPDF();\n    });\n  }\n\n  printPDF() {\n    var reportDetails: any = {\n\n      chartImg: this.chartImg,\n      title: 'Requests By ' + this.chartTitle,\n    }\n\n    this.bookingSrv.printPdf(reportDetails).subscribe((res: any) => {\n      if (res != null) {\n        this.messageService.add({ key: 'reportBookingSer', severity: 'success', summary: 'PDF Created', detail: 'PDF created successfully' });\n        var file = new Blob([res], { type: 'application/pdf' });\n        var fileURL = URL.createObjectURL(file);\n        window.open(fileURL);\n      }\n    })\n  }\n\n  onClear() {\n    // this.enumBL = [...this.enumAllBl];\n    this.filterCriteria = {\n      fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n    };\n    this.selectedBl = {};\n    this.selectedSite = {};\n    this.filterPanel.patchValue({\n      groupBy: this.groupByData[0].value,\n      displayType: this.displayTypeData[1].value,\n      dateRequestedFrom: null,\n      dateRequestedTo: null,\n      blId: null,\n      siteId: null,\n      showType: this.showType\n    })\n    this.isGridType = false;\n  }\n\n  getEmployeeFullName(id: any) {\n    if (this.allEmployees) {\n      this.enumEm = this.allEmployees.filter(em => em.emId === id);\n      this.fullName = this.enumEm.map(em => {\n        if (em.firstName.length > 0 && em.lastName.length > 0) {\n          return em.firstName + \" \" + em.lastName + ' - ' + em.emCode;\n        } else {\n          return em.firstName + ' - ' + em.emCode;\n        }\n      })\n    }\n    return this.fullName[0];\n  }\n\n  scrollToEndSite() {\n    this.offsetSite = this.limitSite;\n    this.limitSite += this.scrollLimit;\n    this.filterCriteria.limit = this.limitSite;\n    this.filterCriteria.offset = this.offsetSite;\n    this.siteServ.getAllSiteByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumAllSites = res;\n      this.updateSiteList(this.selectedSite);\n    })\n  }\n\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blSrv.getALLBuildingByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    })\n  }\n\n  searchSite(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"siteName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndSite();\n  }\n\n  searchBl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"blName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndBl();\n  }\n\n  updateSiteList(siteData: any) {\n    if (siteData.siteId) {\n      this.enumAllSites = this.enumAllSites.filter(t => t.siteId !== siteData.siteId);\n      this.enumAllSites = this.enumAllSites.filter(t => t.siteId !== null);\n      this.enumAllSites.unshift(siteData);\n\n    }\n    this.enumAllSites.unshift(new SiteFilterInputDTO(null, 'Make a selection'));\n  }\n\n  updateBlList(blData: any) {\n    if(blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n   \n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  onOpenSite() {\n    this.limitSite = 0;\n    this.offsetSite = 0;\n    this.filterCriteria = {\n      fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n    };\n    this.scrollToEndSite();\n  }\n\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    if (this.selectedSite.siteId) {\n      this.filterCriteria = { fieldName: \"site.siteId\", value: this.selectedSite.siteId, matchMode: \"equals\", limit: 0, offset: 0 }\n    } else {\n      this.filterCriteria = {\n        fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n      };\n    }\n\n    this.scrollToEndBl();\n  }\n\n}","<div class=\"card\" style=\"height: 95vh;\">\n    <p-panel header=\"Request Summary\" [toggleable]=\"true\">\n        <form [formGroup]=\"filterPanel\">\n            <table width=\"100%\" >\n                <tr>\n                    <td style=\"width:25%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>Requested From</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedFrom\"\n                                        formControlName=\"dateRequestedFrom\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:25%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>Requested To</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedTo\"\n                                        formControlName=\"dateRequestedTo\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:25%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Site</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"enumAllSites\"\n                                formControlName=\"siteId\" (change)=\"onSelectSite($event)\" bindLabel=\"siteName\"(open)=\"onOpenSite()\"\n                                bindValue=\"siteId\"  (scrollToEnd)=\"scrollToEndSite()\" (search)=\"searchSite($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:25%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Requests Type </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"showRequestsTypeList\"\n                                formControlName=\"showType\"  [searchable]=\"true\"\n                                bindLabel=\"label\" bindValue=\"value\">\n                            </ng-select>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"width:25%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Building</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"enumBL\"\n                                formControlName=\"blId\" bindLabel=\"blNameString\" bindValue=\"blId\"(open)=\"onOpenBl()\"\n                                (change)=\"onSelectBuilding($event)\" (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:25%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable control-label'>Group By</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"groupByData\"\n                                formControlName=\"groupBy\" bindLabel=\"lable\" bindValue=\"value\"\n                                (change)=\"changeGroupBy($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:25%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable control-label'>Display Type</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"false\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"displayTypeData\"\n                                formControlName=\"displayType\" bindLabel=\"lable\" bindValue=\"value\"\n                                (change)=\"onSelectDisplayType($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:25%;\">\n                        <button (click)=\"onClickFilter()\" pButton pRipple label=\"Search\" [disabled]=\"!filterPanel.valid\"\n                            style=\"margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right filter-button\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"margin-left: 5px; margin-right: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right filter-button\"></button>\n                        <p-button icon=\"pi pi-file-pdf\" (click)=\"exportChartToPDF()\" [disabled]=\"isGridType\" matTooltip=\"Generate PDF\"\n                            matTooltipPosition=\"below\" styleClass=\"p-button-raised p-button-danger\">\n                        </p-button>\n                    </td>\n                </tr>\n            </table>\n        </form>\n    </p-panel>\n\n    <div class=\"card\" *ngIf=\"isGridType\">\n        <p-table [value]=\"reportData\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [rowsPerPageOptions]=\"[5,10,25]\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n            [rowHover]=\"false\">\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"value\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\"> {{displayGridLabel}}</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"value\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"value\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"count\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Request Count</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"count\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"count\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-report>\n                <tr (click)=\"onClickCount(report)\" style=\"cursor: pointer;\">\n                    <td>{{report.value}}</td>\n                    <td>{{report.count}}</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-columns>\n                <tr>\n                    <td [attr.colspan]=\"3\">\n                        No records found\n                    </td>\n                </tr>\n            </ng-template>\n        </p-table>\n    </div>\n\n    <div *ngIf=\"!isGridType\" #chartContainer>\n        <p-chart type=\"bar\" [height]=\"510\" [data]=\"chartData\" [options]=\"basicOptions\"\n            (onDataSelect)=\"onClickBarChart($event)\"></p-chart>\n    </div>\n\n    <p-dialog [(visible)]=\"showPopUpGrid\" [modal]=\"true\" [style]=\"{width: '66vw'}\" [maximizable]=\"true\"\n        [draggable]=\"false\" [resizable]=\"false\" styleClass=\"dark-panel\">\n        <ng-template pTemplate=\"header\">\n            <h2 style=\"margin: 0px;\">Request List</h2>\n        </ng-template>\n        <ng-template pTemplate=\"body\">\n            <app-add-table [data]=\"requestData\"></app-add-table>\n        </ng-template>\n    </p-dialog>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}