{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"../services/financial-year.service\";\nimport * as i3 from \"../provider/financial-year.provider\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/panel\";\nfunction FinancialYearComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 6);\n    i0.ɵɵelementStart(2, \"th\", 7)(3, \"div\", 8);\n    i0.ɵɵtext(4, \"From Month \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"th\", 9)(6, \"div\", 8);\n    i0.ɵɵtext(7, \"To Month \");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction FinancialYearComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 10)(1, \"td\", 6)(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function FinancialYearComponent_ng_template_4_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const year_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onEdit(year_r2));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const year_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", year_r2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(year_r2.paramValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getToMonthLable(year_r2.paramValue));\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nexport let FinancialYearComponent = /*#__PURE__*/(() => {\n  class FinancialYearComponent {\n    constructor(messageService, financialYearServ, financialyearProvider) {\n      this.messageService = messageService;\n      this.financialYearServ = financialYearServ;\n      this.financialyearProvider = financialyearProvider;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.subscriptions = [];\n      this.loading = false;\n      this.yearData = [];\n      this.months = [{\n        id: 0,\n        label: 'Make a selection'\n      }, {\n        id: 1,\n        label: \"January\"\n      }, {\n        id: 2,\n        label: \"February\"\n      }, {\n        id: 3,\n        label: \"March\"\n      }, {\n        id: 4,\n        label: \"April\"\n      }, {\n        id: 5,\n        label: \"May\"\n      }, {\n        id: 6,\n        label: \"June\"\n      }, {\n        id: 7,\n        label: \"July\"\n      }, {\n        id: 8,\n        label: \"August\"\n      }, {\n        id: 9,\n        label: \"September\"\n      }, {\n        id: 10,\n        label: \"October\"\n      }, {\n        id: 11,\n        label: \"November\"\n      }, {\n        id: 12,\n        label: \"December\"\n      }];\n    }\n    ngOnInit() {\n      this.loadRecords();\n    }\n    loadRecords() {\n      this.loading = true;\n      this.financialYearServ.getFinancialYearData(\"financial_year\").subscribe(res => {\n        if (res) {\n          this.yearData = [res];\n          this.loading = false;\n        } else {\n          this.yearData = [];\n        }\n      });\n    }\n    onEdit(appParams) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        appParams\n      };\n      this.financialyearProvider.openDialog(dialogConfig);\n      this.financialyearProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.messageService.clear();\n          this.messageService.add({\n            key: 'year',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    calculateFinancialYear(startingMonth) {\n      const today = new Date(); // Get the current date\n      const currentYear = today.getFullYear(); // Get the current year\n      // Create a new date object for the start of the financial year\n      const financialYearStart = new Date(currentYear, startingMonth - 1, 1);\n      // Get the start day of the financial year\n      const startDay = financialYearStart.getDate();\n      // Create a new date object for the end of the financial year\n      const financialYearEnd = new Date(currentYear + 1, startingMonth - 1, 0);\n      // Get the end day of the financial year\n      const endDay = financialYearEnd.getDate();\n      const endMonth = financialYearEnd.getMonth() + 1;\n      const SelectedEndMonthLable = this.months.find(month => month.id === endMonth);\n      const endMonthLable = SelectedEndMonthLable.label;\n      // Format the start and end dates as full dates\n      const startDate = financialYearStart.toLocaleDateString();\n      const endDate = financialYearEnd.toLocaleDateString();\n      // Return the start and end dates\n      return {\n        startDay,\n        startDate,\n        endDay,\n        endDate,\n        endMonthLable\n      };\n    }\n    getToMonthLable(toMonth) {\n      const selectedMonth = this.months.find(month => month.label.toUpperCase() === toMonth.toUpperCase());\n      const selectedMonthId = selectedMonth.id;\n      if (selectedMonthId > 0) {\n        const toMonthData = this.calculateFinancialYear(selectedMonthId);\n        return toMonthData.endMonthLable;\n      }\n    }\n    static #_ = this.ɵfac = function FinancialYearComponent_Factory(t) {\n      return new (t || FinancialYearComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.FinancialYearService), i0.ɵɵdirectiveInject(i3.FinancialYearprovider));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FinancialYearComponent,\n      selectors: [[\"app-financial-year\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 6,\n      vars: 8,\n      consts: [[\"header\", \"Financial Year\"], [1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"dataKey\", \"id\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"loading\", \"scrollable\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"key\", \"year\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"cfId\"], [1, \"p-d-flex\", \"p-jc-between\", \"p-ai-center\"], [\"pSortableColumn\", \"name\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"]],\n      template: function FinancialYearComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0)(1, \"div\", 1)(2, \"p-table\", 2);\n          i0.ɵɵtemplate(3, FinancialYearComponent_ng_template_3_Template, 8, 0, \"ng-template\", 3);\n          i0.ɵɵtemplate(4, FinancialYearComponent_ng_template_4_Template, 7, 3, \"ng-template\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(5, \"p-toast\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ctx.yearData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(7, _c0))(\"loading\", ctx.loading)(\"scrollable\", true);\n        }\n      },\n      dependencies: [i1.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i5.ButtonDirective, i6.Toast, i7.Panel]\n    });\n  }\n  return FinancialYearComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}