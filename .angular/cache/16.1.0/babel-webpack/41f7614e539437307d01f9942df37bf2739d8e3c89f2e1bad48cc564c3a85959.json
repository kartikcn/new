{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/enum.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/ui/employee/services/employee.service\";\nimport * as i4 from \"src/app/ui/emstd/service/emstd.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ng-select/ng-select\";\nimport * as i7 from \"ng-zorro-antd/table\";\nimport * as i8 from \"ng-zorro-antd/form\";\nimport * as i9 from \"../../../../directive/directive/trim-input.directive\";\nfunction AddEmployeeComponent_tr_13_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 20);\n    i0.ɵɵtext(1, \" Employee code is already exists \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEmployeeComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 2);\n    i0.ɵɵtemplate(2, AddEmployeeComponent_tr_13_label_2_Template, 2, 0, \"label\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx_r0.frmEmployeeDetails.controls[\"emCode\"].errors) && !(ctx_r0.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx_r0.frmEmployeeDetails.controls[\"emCode\"].errors.required));\n  }\n}\nfunction AddEmployeeComponent_tr_47_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 20);\n    i0.ɵɵtext(1, \" Please enter valid Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEmployeeComponent_tr_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 2);\n    i0.ɵɵtemplate(2, AddEmployeeComponent_tr_47_label_2_Template, 2, 0, \"label\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx_r1.frmEmployeeDetails.controls[\"email\"].errors) && !(ctx_r1.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx_r1.frmEmployeeDetails.controls[\"email\"].errors.required));\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"control-label\": a0\n  };\n};\nexport class AddEmployeeComponent {\n  constructor(enumsrv, formBuilder, emSrv, emstdSrv) {\n    this.enumsrv = enumsrv;\n    this.formBuilder = formBuilder;\n    this.emSrv = emSrv;\n    this.emstdSrv = emstdSrv;\n    this.subscriptions = [];\n    this.loadedEmcode = null;\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumInitial = [];\n    this.enumGender = [];\n    this.enumEmStandard = [];\n    this.enumEmStatus = [];\n    // enumLineMngr: EmpFilterInput[]=[];\n    this.enumLineMngr = [];\n    this.enumccCode = [];\n    this.isEdit = false;\n    this.isNew = false;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    // this.currentDate = this.datePipe.transform(new Date(), \"yyyy/MM/dd hh:mm:ss\");\n    /// Start Of Building Form \n    this.frmEmployeeDetails = this.formBuilder.group({\n      emId: [null],\n      emCode: [\"\", [Validators.required]],\n      initials: ['', [Validators.required]],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      maidenName: [''],\n      aliasName: [''],\n      email: ['', [Validators.required, Validators.email]],\n      emstdId: [null, [Validators.required]],\n      emStatus: ['', [Validators.required]],\n      idNumber: [''],\n      birthDate: [''],\n      gender: ['', [Validators.required]],\n      compName: [''],\n      dateJoin: [''],\n      dateLeave: Date,\n      lineMngr: [null]\n    });\n    // End Of Building Form\n    this.subscriptions.push(\n    // any time the inner form changes update the parent of any change\n    this.frmEmployeeDetails.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadEnums();\n    this.loadEmstd();\n    this.checkFormMode();\n    this.loadEmployee();\n  }\n  loadEmstd() {\n    this.emstdSrv.getEmStd().subscribe(res => {\n      this.enumEmStandard = res.map(i => {\n        i.emStdDesc = i.emStd + \" - \" + (i.emStdDesc.length > 20 ? i.emStdDesc.substr(0, 18) + \"...\" : i.emStdDesc);\n        return i;\n      });\n      this.enumEmStandard.unshift({\n        emstdId: null,\n        emStdDesc: \"Make a selection\"\n      });\n    });\n  }\n  loadEmployee() {\n    this.emSrv.getAllEmpByComp().subscribe(res => {\n      this.enumLineMngr = res.map(i => {\n        i.firstName = i.emCode + \" - \" + i.firstName;\n        return i;\n      });\n      // this.enumLineMngr.unshift(new EmpFilterInput(null, \"Make a selection\",0 ));\n    });\n  }\n  /// Start Of Form Validation Related Code\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const me = this;\n    const validationErros = [];\n    Object.keys(this.frmEmployeeDetails.controls).forEach(key => {\n      let field = this.frmEmployeeDetails.get(key);\n      const controlErrors = field != null ? field.errors : null;\n      if (controlErrors != null) {\n        Object.keys(controlErrors).forEach(keyError => {\n          validationErros.push(new VaildationError(key, keyError, controlErrors[keyError]));\n        });\n      }\n    });\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n  /// Start Of Reference Data Initiation\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      this.enumClonedList = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'em'.toLocaleUpperCase());\n      this.enumEmStatus = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'em_status'.toLocaleUpperCase());\n      this.enumInitial = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'initials'.toLocaleUpperCase());\n      this.enumGender = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'gender'.toLocaleUpperCase());\n      // this.enumInitial.unshift(new Enums('', '', '', 'Make a selection'));\n      // this.enumEmStatus.unshift(new Enums('', '', '', 'Make a selection'));\n    }, error => {\n      // this.loginError = error.errorDesc;\n    });\n  }\n  /// Start Preparing Entered Data Model\n  get value() {\n    const details = {\n      emId: this.frmEmployeeDetails.controls.emId.value,\n      initials: this.frmEmployeeDetails.controls.initials.value,\n      firstName: this.frmEmployeeDetails.controls.firstName.value,\n      lastName: this.frmEmployeeDetails.controls.lastName.value,\n      maidenName: this.frmEmployeeDetails.controls.maidenName.value,\n      aliasName: this.frmEmployeeDetails.controls.aliasName.value,\n      email: this.frmEmployeeDetails.controls.email.value,\n      emstdId: this.frmEmployeeDetails.controls.emstdId.value,\n      emStatus: this.frmEmployeeDetails.controls.emStatus.value,\n      idNumber: this.frmEmployeeDetails.controls.idNumber.value,\n      birthDate: this.frmEmployeeDetails.controls.birthDate.value,\n      gender: this.frmEmployeeDetails.controls.gender.value,\n      compName: this.frmEmployeeDetails.controls.compName.value,\n      dateJoin: this.frmEmployeeDetails.controls.dateJoin.value,\n      dateLeave: this.frmEmployeeDetails.controls.dateLeave.value,\n      lineMngr: this.frmEmployeeDetails.controls.lineMngr.value,\n      emCode: this.frmEmployeeDetails.controls.emCode.value\n    };\n    return details;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.frmEmployeeDetails.patchValue({\n        emId: value.emId,\n        initials: value.initials,\n        firstName: value.firstName,\n        lastName: value.lastName,\n        maidenName: value.maidenName,\n        aliasName: value.aliasName,\n        email: value.email,\n        emstdId: value.emstdId,\n        emStatus: value.emStatus,\n        idNumber: value.idNumber,\n        birthDate: value.birthDate,\n        gender: value.gender,\n        compName: value.compName,\n        dateJoin: value.dateJoin,\n        dateLeave: value.dateLeave,\n        lineMngr: value.lineMngr,\n        emCode: value.emCode\n      });\n      this.loadedEmcode = value.emCode;\n      this.onChange(value);\n      this.onTouched();\n    }, 0);\n  }\n  checkFormMode() {\n    if (this.isEdit == false) {\n      this.frmEmployeeDetails.disable();\n    } else {\n      this.frmEmployeeDetails.enable();\n    }\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.frmEmployeeDetails.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  // communicate the inner form validation to the parent form\n  validate(_) {\n    return this.frmEmployeeDetails.valid ? null : {\n      frmEmployeeDetails: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  static #_ = this.ɵfac = function AddEmployeeComponent_Factory(t) {\n    return new (t || AddEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EnumService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i4.EmStdService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEmployeeComponent,\n    selectors: [[\"app-add-employee\"]],\n    inputs: {\n      isEdit: \"isEdit\",\n      isNew: \"isNew\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddEmployeeComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddEmployeeComponent),\n      multi: true\n    }])],\n    decls: 59,\n    vars: 21,\n    consts: [[\"nz-form\", \"\", 3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", 3, \"ngClass\"], [\"type\", \"text\", \"name\", \"emCode\", \"formControlName\", \"emCode\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [1, \"form-field-lable\", \"control-label\"], [\"formControlName\", \"initials\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [4, \"ngIf\"], [\"type\", \"text\", \"name\", \"firstName\", \"formControlName\", \"firstName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"maidenName\", \"formControlName\", \"maidenName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"lastName\", \"formControlName\", \"lastName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"formControlName\", \"gender\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"type\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\", \"blue-border\"], [\"formControlName\", \"emstdId\", \"bindLabel\", \"emStdDesc\", \"bindValue\", \"emstdId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"formControlName\", \"emStatus\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"formControlName\", \"lineMngr\", \"bindLabel\", \"firstName\", \"bindValue\", \"emId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [2, \"width\", \"calc(100% / 2)\"], [1, \"form-field-lable\", 2, \"color\", \"red\"]],\n    template: function AddEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Employee Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"td\", 2)(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"ng-select\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, AddEmployeeComponent_tr_13_Template, 4, 1, \"tr\", 8);\n        i0.ɵɵelementStart(14, \"tr\")(15, \"td\", 2)(16, \"div\", 3)(17, \"label\", 6);\n        i0.ɵɵtext(18, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"td\", 2)(21, \"div\", 3)(22, \"label\", 10);\n        i0.ɵɵtext(23, \"Middle Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"tr\")(26, \"td\", 2)(27, \"div\", 3)(28, \"label\", 6);\n        i0.ɵɵtext(29, \"Surname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"td\", 2)(32, \"div\", 3)(33, \"label\", 6);\n        i0.ɵɵtext(34, \"Gender\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"ng-select\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"tr\")(37, \"td\", 2)(38, \"div\", 3)(39, \"label\", 6);\n        i0.ɵɵtext(40, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"td\", 2)(43, \"div\", 3)(44, \"label\", 6);\n        i0.ɵɵtext(45, \"Employee Standard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"ng-select\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(47, AddEmployeeComponent_tr_47_Template, 4, 1, \"tr\", 8);\n        i0.ɵɵelementStart(48, \"tr\")(49, \"td\", 2)(50, \"div\", 3)(51, \"label\", 6);\n        i0.ɵɵtext(52, \"Employee Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(53, \"ng-select\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(54, \"td\", 2)(55, \"div\", 3)(56, \"label\", 10);\n        i0.ɵɵtext(57, \"Line Manager\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(58, \"ng-select\", 17);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.frmEmployeeDetails);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.isNew));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumInitial)(\"searchable\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx.frmEmployeeDetails.controls[\"emCode\"].errors) && ((ctx.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx.frmEmployeeDetails.controls[\"emCode\"].dirty) || (ctx.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx.frmEmployeeDetails.controls[\"emCode\"].touched)));\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumGender)(\"searchable\", false);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumEmStandard)(\"searchable\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx.frmEmployeeDetails.controls[\"email\"].errors) && ((ctx.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx.frmEmployeeDetails.controls[\"email\"].dirty) || (ctx.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx.frmEmployeeDetails.controls[\"email\"].touched)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumEmStatus)(\"searchable\", false);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumLineMngr)(\"searchable\", true);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i6.NgSelectComponent, i7.NzTableCellDirective, i7.NzTrDirective, i8.NzFormDirective, i9.TrimInputDirective],\n    styles: [\".form-field-lable[_ngcontent-%COMP%] {\\n    font-size: 11px;\\n    margin-bottom: 0px;\\n    font-weight: 500;\\n  }\\n  .form-control[_ngcontent-%COMP%] {\\n    margin-top: -3px;\\n    padding-left: 5px;\\n  }\\n\\n  \\n  [_ngcontent-%COMP%]::placeholder { \\n\\n    color: #555;\\n    opacity: 1; \\n\\n  }\\n  \\n  [_ngcontent-%COMP%]:-ms-input-placeholder { \\n\\n    color: #555;\\n  }\\n  \\n  [_ngcontent-%COMP%]::-ms-input-placeholder { \\n\\n    color: #555;\\n  }\\n  \\n  \\n\\n  \\n  .ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%] {\\n  border-radius: 0px !important;\\n  }\\n  \\n  .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\\n    color: white;\\n    letter-spacing: 1px;\\n  }\\n  .mat-card[_ngcontent-%COMP%] {\\n    padding: 0px;\\n    border: thin double rgb(181, 155, 90);\\n  }\\n  .mat-card-title[_ngcontent-%COMP%] {\\n    color: white;\\n    letter-spacing: 1px;\\n    font-size: 13px;\\n    margin: 0px !important;\\n  }\\n  .mat-card-header-text[_ngcontent-%COMP%] {\\n    margin: 0px !important;\\n  }\\n  .mat-card-header[_ngcontent-%COMP%]\\n  {\\n    padding: 5px !important;\\n    margin-left: -15px;\\n  }\\n  \\n  .action-buttons[_ngcontent-%COMP%] {\\n    height: 30px;\\n    width: 70px;\\n  }\\n\\n.blue-border[_ngcontent-%COMP%] {\\n  border-color: #879cc9 !important;\\n  height: 24px !important;\\n  margin-top: 2px !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvdXNlci93aWRnZXRzL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25COzs7RUFHQSxnQkFBZ0IseUNBQXlDO0lBQ3ZELFdBQVc7SUFDWCxVQUFVLEVBQUUsWUFBWTtFQUMxQjs7RUFFQSx5QkFBeUIsNEJBQTRCO0lBQ25ELFdBQVc7RUFDYjs7RUFFQSwwQkFBMEIsbUJBQW1CO0lBQzNDLFdBQVc7RUFDYjs7Ozs7RUFLQTtFQUNBLDZCQUE2QjtFQUM3Qjs7RUFFQTtJQUNFLFlBQVk7SUFDWixtQkFBbUI7RUFDckI7RUFDQTtJQUNFLFlBQVk7SUFDWixxQ0FBcUM7RUFDdkM7RUFDQTtJQUNFLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0Usc0JBQXNCO0VBQ3hCO0VBQ0E7O0lBRUUsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFlBQVk7SUFDWixXQUFXO0VBQ2I7O0FBRUY7RUFDRSxnQ0FBZ0M7RUFDaEMsdUJBQXVCO0VBQ3ZCLDBCQUEwQjtBQUM1QiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWZpZWxkLWxhYmxlIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cbiAgLmZvcm0tY29udHJvbCB7XG4gICAgbWFyZ2luLXRvcDogLTNweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgfVxuXG4gIFxuICA6OnBsYWNlaG9sZGVyIHsgLyogQ2hyb21lLCBGaXJlZm94LCBPcGVyYSwgU2FmYXJpIDEwLjErICovXG4gICAgY29sb3I6ICM1NTU7XG4gICAgb3BhY2l0eTogMTsgLyogRmlyZWZveCAqL1xuICB9XG4gIFxuICA6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHsgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTAtMTEgKi9cbiAgICBjb2xvcjogIzU1NTtcbiAgfVxuICBcbiAgOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBNaWNyb3NvZnQgRWRnZSAqL1xuICAgIGNvbG9yOiAjNTU1O1xuICB9XG4gIFxuICBcblxuICBcbiAgLm5nLXNlbGVjdC5uZy1zZWxlY3Qtc2luZ2xlIC5uZy1zZWxlY3QtY29udGFpbmVyIHtcbiAgYm9yZGVyLXJhZGl1czogMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbiAgXG4gIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIH1cbiAgLm1hdC1jYXJkIHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgYm9yZGVyOiB0aGluIGRvdWJsZSByZ2IoMTgxLCAxNTUsIDkwKTtcbiAgfVxuICAubWF0LWNhcmQtdGl0bGUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBtYXJnaW46IDBweCAhaW1wb3J0YW50O1xuICB9XG4gIC5tYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gICAgbWFyZ2luOiAwcHggIWltcG9ydGFudDtcbiAgfVxuICAubWF0LWNhcmQtaGVhZGVyXG4gIHtcbiAgICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDtcbiAgICBtYXJnaW4tbGVmdDogLTE1cHg7XG4gIH1cbiAgXG4gIC5hY3Rpb24tYnV0dG9ucyB7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiA3MHB4O1xuICB9XG5cbi5ibHVlLWJvcmRlciB7XG4gIGJvcmRlci1jb2xvcjogIzg3OWNjOSAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDI0cHggIWltcG9ydGFudDtcbiAgbWFyZ2luLXRvcDogMnB4ICFpbXBvcnRhbnQ7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","Validators","NG_VALUE_ACCESSOR","NG_VALIDATORS","VaildationError","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddEmployeeComponent_tr_13_label_2_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","frmEmployeeDetails","controls","errors","required","AddEmployeeComponent_tr_47_label_2_Template","ctx_r1","AddEmployeeComponent","constructor","enumsrv","formBuilder","emSrv","emstdSrv","subscriptions","loadedEmcode","enumList","enumClonedList","enumInitial","enumGender","enumEmStandard","enumEmStatus","enumLineMngr","enumccCode","isEdit","isNew","onChange","onTouched","group","emId","emCode","initials","firstName","lastName","maidenName","aliasName","email","emstdId","emStatus","idNumber","birthDate","gender","compName","dateJoin","dateLeave","Date","lineMngr","push","valueChanges","subscribe","value","ngOnInit","loadEnums","loadEmstd","checkFormMode","loadEmployee","getEmStd","res","map","i","emStdDesc","emStd","length","substr","unshift","getAllEmpByComp","isValid","getValidationErrors","me","validationErros","Object","keys","forEach","key","field","get","controlErrors","keyError","getEnums","x","assign","filter","t","tableName","toLocaleUpperCase","fieldName","error","details","setTimeout","patchValue","disable","enable","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","s","unsubscribe","ɵɵdirectiveInject","i1","EnumService","i2","UntypedFormBuilder","i3","EmployeeService","i4","EmStdService","_2","selectors","inputs","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddEmployeeComponent_Template","rf","ctx","AddEmployeeComponent_tr_13_Template","AddEmployeeComponent_tr_47_Template","ɵɵpureFunction1","_c0","dirty","touched"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\user\\widgets\\add-employee\\add-employee.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\user\\widgets\\add-employee\\add-employee.component.html"],"sourcesContent":["import { Component, forwardRef, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators, ValidationErrors } from '@angular/forms';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, UntypedFormControl, NG_VALIDATORS} from '@angular/forms';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { EmployeeService } from 'src/app/ui/employee/services/employee.service';\nimport { EmployeeDetails } from 'src/app/ui/employee/model/employee-details.model';\nimport { EmStdService } from 'src/app/ui/emstd/service/emstd.service';\nimport { EnumsOutput } from 'src/app/model/enums-output.model';\n\ndeclare var $: any;\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddEmployeeComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddEmployeeComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddEmployeeComponent implements ControlValueAccessor, OnDestroy {\n\n  frmEmployeeDetails: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  loadedEmcode:string|null =null;\n  enumList: any[] = [];\n  enumClonedList: any[] = [];\n  enumInitial: any[] = [];\n  enumGender: any[] = [];\n  enumEmStandard: any[] = [];\n  enumEmStatus: any[] = [];\n  currentDate: any;\n  // enumLineMngr: EmpFilterInput[]=[];\n  enumLineMngr: any[]=[];\n  enumccCode:any[]=[];\n  @Input() isEdit: boolean = false;\n \n  \n  compId!: number;\n  @Input() isNew:boolean=false;\n\n  constructor(\n    private enumsrv: EnumService,\n    private formBuilder: UntypedFormBuilder,\n    private emSrv: EmployeeService,\n    private emstdSrv:EmStdService,\n    \n  ) {\n   // this.currentDate = this.datePipe.transform(new Date(), \"yyyy/MM/dd hh:mm:ss\");\n    /// Start Of Building Form \n    this.frmEmployeeDetails = this.formBuilder.group({\n\n      emId: [null],\n      emCode:[\"\", [Validators.required]],\n      initials: ['', [Validators.required]],\n      firstName: ['',[Validators.required]],\n      lastName: ['',[Validators.required]],\n      maidenName: [''],\n      aliasName: [''],\n      email: ['', [Validators.required,Validators.email]],\n      emstdId: [null, [Validators.required]],\n      emStatus: ['', [Validators.required]],\n      idNumber: [''],\n      birthDate: [''],\n      gender: ['', [Validators.required]],\n      compName: [''],\n      dateJoin: [''],\n      dateLeave: Date,\n      lineMngr:[null],\n\n\n    });\n    \n    // End Of Building Form\n    this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.frmEmployeeDetails.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n    \n  }\n\n  ngOnInit() {\n    this.loadEnums();\n    this.loadEmstd();\n    this.checkFormMode();\n    this.loadEmployee();\n    \n  }\n  loadEmstd(){\n    this.emstdSrv.getEmStd().subscribe((res)=>{\n      this.enumEmStandard = res.map((i)=>{\n        i.emStdDesc = i.emStd + \" - \" + (i.emStdDesc.length > 20 ? i.emStdDesc.substr(0,18)+\"...\" : i.emStdDesc);\n        return i;\n    });\n\n      this.enumEmStandard.unshift({ emstdId: null, emStdDesc:\"Make a selection\"});\n    });\n  }\n \n  loadEmployee(){\n    this.emSrv.getAllEmpByComp().subscribe((res: any[])=>{\n      this.enumLineMngr = res.map(i=>{i.firstName = i.emCode + \" - \"+ i.firstName; return i;});\n      // this.enumLineMngr.unshift(new EmpFilterInput(null, \"Make a selection\",0 ));\n    })\n  }\n  /// Start Of Form Validation Related Code\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  \n  public getValidationErrors() {\n    const me = this;\n    const validationErros: VaildationError[] = [];\n    Object.keys(this.frmEmployeeDetails.controls).forEach(key => {\n      let field = this.frmEmployeeDetails.get(key);\n      const controlErrors: ValidationErrors | null = field != null ? field.errors:null;\n      if (controlErrors != null) {\n            Object.keys(controlErrors).forEach(keyError => {\n            validationErros.push(new VaildationError(key, keyError, controlErrors[keyError]));\n          });\n        }\n      });\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n\n  /// Start Of Reference Data Initiation\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: any[]) => {\n        this.enumList = res;\n        this.enumClonedList =  this.enumList.map(x => Object.assign({}, x));\n        this.enumClonedList = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'em'.toLocaleUpperCase());\n        this.enumEmStatus = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'em_status'.toLocaleUpperCase());\n        this.enumInitial = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'initials'.toLocaleUpperCase());\n        this.enumGender = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'gender'.toLocaleUpperCase());\n\n        // this.enumInitial.unshift(new Enums('', '', '', 'Make a selection'));\n        // this.enumEmStatus.unshift(new Enums('', '', '', 'Make a selection'));\n      },\n      error => {\n        // this.loginError = error.errorDesc;\n      }\n    );\n  }\n\n  /// Start Preparing Entered Data Model\n  get value(): EmployeeDetails {\n    const details: EmployeeDetails = {\n      emId: this.frmEmployeeDetails.controls.emId.value,\n      initials: this.frmEmployeeDetails.controls.initials.value,\n      firstName :this.frmEmployeeDetails.controls.firstName.value,\n      lastName :this.frmEmployeeDetails.controls.lastName.value,\n      maidenName :this.frmEmployeeDetails.controls.maidenName.value,\n      aliasName :this.frmEmployeeDetails.controls.aliasName.value,\n      email :this.frmEmployeeDetails.controls.email.value,\n      emstdId :this.frmEmployeeDetails.controls.emstdId.value,\n      emStatus :this.frmEmployeeDetails.controls.emStatus.value,\n      idNumber :this.frmEmployeeDetails.controls.idNumber.value,\n      birthDate :this.frmEmployeeDetails.controls.birthDate.value,\n      gender :this.frmEmployeeDetails.controls.gender.value,\n      compName :this.frmEmployeeDetails.controls.compName.value,\n      dateJoin :this.frmEmployeeDetails.controls.dateJoin.value,\n      dateLeave: this.frmEmployeeDetails.controls.dateLeave.value,\n      lineMngr: this.frmEmployeeDetails.controls.lineMngr.value,\n      emCode:this.frmEmployeeDetails.controls.emCode.value\n      }\n    return details;\n    }\n  \n  set value(value: EmployeeDetails) {\n      setTimeout(() => {\n        this.frmEmployeeDetails.patchValue({\n          emId: value.emId,\n          initials: value.initials,\n          firstName: value.firstName,\n          lastName: value.lastName,\n          maidenName: value.maidenName,\n          aliasName: value.aliasName,\n          email: value.email,\n          emstdId: value.emstdId,\n          emStatus: value.emStatus,\n          idNumber: value.idNumber,\n          birthDate: value.birthDate,\n          gender: value.gender,\n          compName: value.compName,\n          dateJoin: value.dateJoin,\n          dateLeave: value.dateLeave,\n          lineMngr:value.lineMngr,\n          emCode:value.emCode\n        });\n        this.loadedEmcode= value.emCode;\n        this.onChange(value);\n        this.onTouched();\n      }, 0);\n    }\n\n  checkFormMode() {\n    if (this.isEdit == false) {\n      this.frmEmployeeDetails.disable()\n    } else {\n      this.frmEmployeeDetails.enable()\n    }\n  }\n\n  writeValue(value:any) {\n    \n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.frmEmployeeDetails.reset();\n    }\n  }\n  \n\n  registerOnChange(fn:any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  // communicate the inner form validation to the parent form\n  validate(_: UntypedFormControl) {\n    return this.frmEmployeeDetails.valid ? null : { frmEmployeeDetails: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n","<form nz-form [formGroup]=\"frmEmployeeDetails\">\n  <table width=\"100%\">\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable ' [ngClass]=\"{'control-label': isNew}\">Employee Code</label>\n          <input type=\"text\" class=\"form-control\" name=\"emCode\" formControlName=\"emCode\" maxlength=\"64\" appTrimInput>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom\">\n          <label class='form-field-lable control-label'>Title</label>\n          <ng-select  [clearable]=\"false\" [items]=\"enumInitial\" formControlName=\"initials\" [searchable]=\"false\"\n                     bindLabel=\"enumValue\" bindValue=\"enumKey\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \">\n          </ng-select>\n        </div>\n      </td>\n    </tr>\n    <tr *ngIf=\"(frmEmployeeDetails.controls['emCode']?.errors && (frmEmployeeDetails.controls['emCode']?.dirty || frmEmployeeDetails.controls['emCode']?.touched))\">\n      <td style=\"width: 50%\">\n        <label *ngIf=\"frmEmployeeDetails.controls['emCode']?.errors && !frmEmployeeDetails.controls['emCode']?.errors.required\"\n               class='form-field-lable' style=\"color:red;\">\n          Employee code is already exists\n        </label>\n      </td>\n\n      <td style=\"width:calc(100% / 2)\">\n      </td>\n    </tr>\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>First Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"firstName\" formControlName=\"firstName\" maxlength=\"64\" appTrimInput>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable'>Middle Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"maidenName\" formControlName=\"maidenName\" maxlength=\"64\" appTrimInput>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>Surname</label>\n          <input type=\"text\" class=\"form-control\" name=\"lastName\" formControlName=\"lastName\" maxlength=\"64\" appTrimInput>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom\">\n          <label class='form-field-lable control-label'>Gender</label>\n          <ng-select  [clearable]=\"false\" [items]=\"enumGender\" formControlName=\"gender\" [searchable]=\"false\"\n                     bindLabel=\"enumValue\" bindValue=\"enumKey\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \">\n          </ng-select>\n        </div>\n      </td>\n    </tr>\n\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>Email</label>\n          <input type=\"email\" class=\"form-control blue-border\" name=\"email\" formControlName=\"email\" maxlength=\"64\" appTrimInput>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>Employee Standard</label>\n          <!-- <input type=\"text\" class=\"form-control\" name=\"emStd\" formControlName=\"emStd\" maxlength=\"64\"> -->\n          <ng-select  [clearable]=\"false\" [items]=\"enumEmStandard\" formControlName=\"emstdId\" [searchable]=\"false\"\n          bindLabel=\"emStdDesc\" bindValue=\"emstdId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \">\n        </ng-select>\n        </div>\n      </td>\n    </tr>\n    <tr *ngIf=\"(frmEmployeeDetails.controls['email']?.errors && (frmEmployeeDetails.controls['email']?.dirty || frmEmployeeDetails.controls['email']?.touched))\">\n      <td style=\"width: 50%\">\n        <label *ngIf=\"frmEmployeeDetails.controls['email']?.errors && !frmEmployeeDetails.controls['email']?.errors.required\"\n               class='form-field-lable' style=\"color:red;\">\n          Please enter valid Email\n        </label>\n      </td>\n      <td style=\"width:calc(100% / 2)\">\n      </td>\n    </tr>\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>Employee Status</label>\n          <ng-select  [clearable]=\"false\" [items]=\"enumEmStatus\" formControlName=\"emStatus\" [searchable]=\"false\"\n                     bindLabel=\"enumValue\" bindValue=\"enumKey\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \">\n          </ng-select>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable'>Line Manager</label>\n          <ng-select  [clearable]=\"false\" [items]=\"enumLineMngr\" formControlName=\"lineMngr\" [searchable]=\"true\"\n            bindLabel=\"firstName\" bindValue=\"emId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \">\n          </ng-select>\n        </div>\n      </td>\n    </tr>\n  </table>\n</form>\n"],"mappings":"AAAA,SAAoBA,UAAU,QAA0B,eAAe;AAEvE,SAA+CC,UAAU,QAA0B,gBAAgB;AACnG,SAA+BC,iBAAiB,EAAsBC,aAAa,QAAO,gBAAgB;AAC1G,SAASC,eAAe,QAAQ,qCAAqC;;;;;;;;;;;;;ICgB7DC,EAAA,CAAAC,cAAA,gBACmD;IACjDD,EAAA,CAAAE,MAAA,wCACF;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IALZH,EAAA,CAAAC,cAAA,SAAgK;IAE5JD,EAAA,CAAAI,UAAA,IAAAC,2CAAA,oBAGQ;IACVL,EAAA,CAAAG,YAAA,EAAK;IAELH,EAAA,CAAAM,SAAA,aACK;IACPN,EAAA,CAAAG,YAAA,EAAK;;;;IAROH,EAAA,CAAAO,SAAA,GAA8G;IAA9GP,EAAA,CAAAQ,UAAA,UAAAC,MAAA,CAAAC,kBAAA,CAAAC,QAAA,4BAAAF,MAAA,CAAAC,kBAAA,CAAAC,QAAA,WAAAC,MAAA,OAAAH,MAAA,CAAAC,kBAAA,CAAAC,QAAA,4BAAAF,MAAA,CAAAC,kBAAA,CAAAC,QAAA,WAAAC,MAAA,CAAAC,QAAA,EAA8G;;;;;IA2DtHb,EAAA,CAAAC,cAAA,gBACmD;IACjDD,EAAA,CAAAE,MAAA,iCACF;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IALZH,EAAA,CAAAC,cAAA,SAA6J;IAEzJD,EAAA,CAAAI,UAAA,IAAAU,2CAAA,oBAGQ;IACVd,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAM,SAAA,aACK;IACPN,EAAA,CAAAG,YAAA,EAAK;;;;IAPOH,EAAA,CAAAO,SAAA,GAA4G;IAA5GP,EAAA,CAAAQ,UAAA,UAAAO,MAAA,CAAAL,kBAAA,CAAAC,QAAA,2BAAAI,MAAA,CAAAL,kBAAA,CAAAC,QAAA,UAAAC,MAAA,OAAAG,MAAA,CAAAL,kBAAA,CAAAC,QAAA,2BAAAI,MAAA,CAAAL,kBAAA,CAAAC,QAAA,UAAAC,MAAA,CAAAC,QAAA,EAA4G;;;;;;;;ADlD5H,OAAM,MAAOG,oBAAoB;EAqB/BC,YACUC,OAAoB,EACpBC,WAA+B,EAC/BC,KAAsB,EACtBC,QAAqB;IAHrB,KAAAH,OAAO,GAAPA,OAAO;IACP,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,QAAQ,GAARA,QAAQ;IAtBlB,KAAAC,aAAa,GAAmB,EAAE;IAClC,KAAAC,YAAY,GAAc,IAAI;IAC9B,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,cAAc,GAAU,EAAE;IAC1B,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,UAAU,GAAU,EAAE;IACtB,KAAAC,cAAc,GAAU,EAAE;IAC1B,KAAAC,YAAY,GAAU,EAAE;IAExB;IACA,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,UAAU,GAAO,EAAE;IACV,KAAAC,MAAM,GAAY,KAAK;IAIvB,KAAAC,KAAK,GAAS,KAAK;IA2L5B,KAAAC,QAAQ,GAAQ,MAAK,CAAG,CAAC;IACzB,KAAAC,SAAS,GAAQ,MAAK,CAAG,CAAC;IAnLzB;IACC;IACA,IAAI,CAACzB,kBAAkB,GAAG,IAAI,CAACS,WAAW,CAACiB,KAAK,CAAC;MAE/CC,IAAI,EAAE,CAAC,IAAI,CAAC;MACZC,MAAM,EAAC,CAAC,EAAE,EAAE,CAAC1C,UAAU,CAACiB,QAAQ,CAAC,CAAC;MAClC0B,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC3C,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACrC2B,SAAS,EAAE,CAAC,EAAE,EAAC,CAAC5C,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACrC4B,QAAQ,EAAE,CAAC,EAAE,EAAC,CAAC7C,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACpC6B,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAChD,UAAU,CAACiB,QAAQ,EAACjB,UAAU,CAACgD,KAAK,CAAC,CAAC;MACnDC,OAAO,EAAE,CAAC,IAAI,EAAE,CAACjD,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACtCiC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAClD,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACrCkC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACrD,UAAU,CAACiB,QAAQ,CAAC,CAAC;MACnCqC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,SAAS,EAAEC,IAAI;MACfC,QAAQ,EAAC,CAAC,IAAI;KAGf,CAAC;IAEF;IACA,IAAI,CAAChC,aAAa,CAACiC,IAAI;IACrB;IACA,IAAI,CAAC7C,kBAAkB,CAAC8C,YAAY,CAACC,SAAS,CAACC,KAAK,IAAG;MACrD,IAAI,CAACxB,QAAQ,CAACwB,KAAK,CAAC;MACpB,IAAI,CAACvB,SAAS,EAAE;IAClB,CAAC,CAAC,CACH;EAEH;EAEAwB,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,YAAY,EAAE;EAErB;EACAF,SAASA,CAAA;IACP,IAAI,CAACxC,QAAQ,CAAC2C,QAAQ,EAAE,CAACP,SAAS,CAAEQ,GAAG,IAAG;MACxC,IAAI,CAACrC,cAAc,GAAGqC,GAAG,CAACC,GAAG,CAAEC,CAAC,IAAG;QACjCA,CAAC,CAACC,SAAS,GAAGD,CAAC,CAACE,KAAK,GAAG,KAAK,IAAIF,CAAC,CAACC,SAAS,CAACE,MAAM,GAAG,EAAE,GAAGH,CAAC,CAACC,SAAS,CAACG,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC,GAAC,KAAK,GAAGJ,CAAC,CAACC,SAAS,CAAC;QACxG,OAAOD,CAAC;MACZ,CAAC,CAAC;MAEA,IAAI,CAACvC,cAAc,CAAC4C,OAAO,CAAC;QAAE3B,OAAO,EAAE,IAAI;QAAEuB,SAAS,EAAC;MAAkB,CAAC,CAAC;IAC7E,CAAC,CAAC;EACJ;EAEAL,YAAYA,CAAA;IACV,IAAI,CAAC3C,KAAK,CAACqD,eAAe,EAAE,CAAChB,SAAS,CAAEQ,GAAU,IAAG;MACnD,IAAI,CAACnC,YAAY,GAAGmC,GAAG,CAACC,GAAG,CAACC,CAAC,IAAE;QAACA,CAAC,CAAC3B,SAAS,GAAG2B,CAAC,CAAC7B,MAAM,GAAG,KAAK,GAAE6B,CAAC,CAAC3B,SAAS;QAAE,OAAO2B,CAAC;MAAC,CAAC,CAAC;MACxF;IACF,CAAC,CAAC;EACJ;EACA;EACOO,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACC,mBAAmB,EAAE,CAACL,MAAM,KAAK,CAAC;EAChD;EAEOK,mBAAmBA,CAAA;IACxB,MAAMC,EAAE,GAAG,IAAI;IACf,MAAMC,eAAe,GAAsB,EAAE;IAC7CC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACrE,kBAAkB,CAACC,QAAQ,CAAC,CAACqE,OAAO,CAACC,GAAG,IAAG;MAC1D,IAAIC,KAAK,GAAG,IAAI,CAACxE,kBAAkB,CAACyE,GAAG,CAACF,GAAG,CAAC;MAC5C,MAAMG,aAAa,GAA4BF,KAAK,IAAI,IAAI,GAAGA,KAAK,CAACtE,MAAM,GAAC,IAAI;MAChF,IAAIwE,aAAa,IAAI,IAAI,EAAE;QACrBN,MAAM,CAACC,IAAI,CAACK,aAAa,CAAC,CAACJ,OAAO,CAACK,QAAQ,IAAG;UAC9CR,eAAe,CAACtB,IAAI,CAAC,IAAIxD,eAAe,CAACkF,GAAG,EAAEI,QAAQ,EAAED,aAAa,CAACC,QAAQ,CAAC,CAAC,CAAC;QACnF,CAAC,CAAC;;IAEN,CAAC,CAAC;IACJ,OAAOR,eAAe;EACxB;EACA;EAEA;EACAjB,SAASA,CAAA;IACP,IAAI,CAACpC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACN,OAAO,CAACoE,QAAQ,EAAE,CAAC7B,SAAS,CAC9BQ,GAAU,IAAI;MACb,IAAI,CAACzC,QAAQ,GAAGyC,GAAG;MACnB,IAAI,CAACxC,cAAc,GAAI,IAAI,CAACD,QAAQ,CAAC0C,GAAG,CAACqB,CAAC,IAAIT,MAAM,CAACU,MAAM,CAAC,EAAE,EAAED,CAAC,CAAC,CAAC;MACnE,IAAI,CAAC9D,cAAc,GAAG,IAAI,CAACA,cAAc,CAACgE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,IAAI,CAACA,iBAAiB,EAAE,CAAC;MACnH,IAAI,CAAC/D,YAAY,GAAG,IAAI,CAACJ,cAAc,CAACgE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,WAAW,CAACA,iBAAiB,EAAE,CAAC;MACxH,IAAI,CAAClE,WAAW,GAAG,IAAI,CAACD,cAAc,CAACgE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,UAAU,CAACA,iBAAiB,EAAE,CAAC;MACtH,IAAI,CAACjE,UAAU,GAAG,IAAI,CAACF,cAAc,CAACgE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,QAAQ,CAACA,iBAAiB,EAAE,CAAC;MAEnH;MACA;IACF,CAAC,EACDE,KAAK,IAAG;MACN;IAAA,CACD,CACF;EACH;EAEA;EACA,IAAIpC,KAAKA,CAAA;IACP,MAAMqC,OAAO,GAAoB;MAC/B1D,IAAI,EAAE,IAAI,CAAC3B,kBAAkB,CAACC,QAAQ,CAAC0B,IAAI,CAACqB,KAAK;MACjDnB,QAAQ,EAAE,IAAI,CAAC7B,kBAAkB,CAACC,QAAQ,CAAC4B,QAAQ,CAACmB,KAAK;MACzDlB,SAAS,EAAE,IAAI,CAAC9B,kBAAkB,CAACC,QAAQ,CAAC6B,SAAS,CAACkB,KAAK;MAC3DjB,QAAQ,EAAE,IAAI,CAAC/B,kBAAkB,CAACC,QAAQ,CAAC8B,QAAQ,CAACiB,KAAK;MACzDhB,UAAU,EAAE,IAAI,CAAChC,kBAAkB,CAACC,QAAQ,CAAC+B,UAAU,CAACgB,KAAK;MAC7Df,SAAS,EAAE,IAAI,CAACjC,kBAAkB,CAACC,QAAQ,CAACgC,SAAS,CAACe,KAAK;MAC3Dd,KAAK,EAAE,IAAI,CAAClC,kBAAkB,CAACC,QAAQ,CAACiC,KAAK,CAACc,KAAK;MACnDb,OAAO,EAAE,IAAI,CAACnC,kBAAkB,CAACC,QAAQ,CAACkC,OAAO,CAACa,KAAK;MACvDZ,QAAQ,EAAE,IAAI,CAACpC,kBAAkB,CAACC,QAAQ,CAACmC,QAAQ,CAACY,KAAK;MACzDX,QAAQ,EAAE,IAAI,CAACrC,kBAAkB,CAACC,QAAQ,CAACoC,QAAQ,CAACW,KAAK;MACzDV,SAAS,EAAE,IAAI,CAACtC,kBAAkB,CAACC,QAAQ,CAACqC,SAAS,CAACU,KAAK;MAC3DT,MAAM,EAAE,IAAI,CAACvC,kBAAkB,CAACC,QAAQ,CAACsC,MAAM,CAACS,KAAK;MACrDR,QAAQ,EAAE,IAAI,CAACxC,kBAAkB,CAACC,QAAQ,CAACuC,QAAQ,CAACQ,KAAK;MACzDP,QAAQ,EAAE,IAAI,CAACzC,kBAAkB,CAACC,QAAQ,CAACwC,QAAQ,CAACO,KAAK;MACzDN,SAAS,EAAE,IAAI,CAAC1C,kBAAkB,CAACC,QAAQ,CAACyC,SAAS,CAACM,KAAK;MAC3DJ,QAAQ,EAAE,IAAI,CAAC5C,kBAAkB,CAACC,QAAQ,CAAC2C,QAAQ,CAACI,KAAK;MACzDpB,MAAM,EAAC,IAAI,CAAC5B,kBAAkB,CAACC,QAAQ,CAAC2B,MAAM,CAACoB;KAC9C;IACH,OAAOqC,OAAO;EACd;EAEF,IAAIrC,KAAKA,CAACA,KAAsB;IAC5BsC,UAAU,CAAC,MAAK;MACd,IAAI,CAACtF,kBAAkB,CAACuF,UAAU,CAAC;QACjC5D,IAAI,EAAEqB,KAAK,CAACrB,IAAI;QAChBE,QAAQ,EAAEmB,KAAK,CAACnB,QAAQ;QACxBC,SAAS,EAAEkB,KAAK,CAAClB,SAAS;QAC1BC,QAAQ,EAAEiB,KAAK,CAACjB,QAAQ;QACxBC,UAAU,EAAEgB,KAAK,CAAChB,UAAU;QAC5BC,SAAS,EAAEe,KAAK,CAACf,SAAS;QAC1BC,KAAK,EAAEc,KAAK,CAACd,KAAK;QAClBC,OAAO,EAAEa,KAAK,CAACb,OAAO;QACtBC,QAAQ,EAAEY,KAAK,CAACZ,QAAQ;QACxBC,QAAQ,EAAEW,KAAK,CAACX,QAAQ;QACxBC,SAAS,EAAEU,KAAK,CAACV,SAAS;QAC1BC,MAAM,EAAES,KAAK,CAACT,MAAM;QACpBC,QAAQ,EAAEQ,KAAK,CAACR,QAAQ;QACxBC,QAAQ,EAAEO,KAAK,CAACP,QAAQ;QACxBC,SAAS,EAAEM,KAAK,CAACN,SAAS;QAC1BE,QAAQ,EAACI,KAAK,CAACJ,QAAQ;QACvBhB,MAAM,EAACoB,KAAK,CAACpB;OACd,CAAC;MACF,IAAI,CAACf,YAAY,GAAEmC,KAAK,CAACpB,MAAM;MAC/B,IAAI,CAACJ,QAAQ,CAACwB,KAAK,CAAC;MACpB,IAAI,CAACvB,SAAS,EAAE;IAClB,CAAC,EAAE,CAAC,CAAC;EACP;EAEF2B,aAAaA,CAAA;IACX,IAAI,IAAI,CAAC9B,MAAM,IAAI,KAAK,EAAE;MACxB,IAAI,CAACtB,kBAAkB,CAACwF,OAAO,EAAE;KAClC,MAAM;MACL,IAAI,CAACxF,kBAAkB,CAACyF,MAAM,EAAE;;EAEpC;EAEAC,UAAUA,CAAC1C,KAAS;IAElB,IAAIA,KAAK,EAAE;MACT,IAAI,CAACA,KAAK,GAAGA,KAAK;;IAEpB,IAAIA,KAAK,KAAK,IAAI,EAAE;MAClB,IAAI,CAAChD,kBAAkB,CAAC2F,KAAK,EAAE;;EAEnC;EAGAC,gBAAgBA,CAACC,EAAM;IACrB,IAAI,CAACrE,QAAQ,GAAGqE,EAAE;EACpB;EACAC,iBAAiBA,CAACD,EAAO;IACvB,IAAI,CAACpE,SAAS,GAAGoE,EAAE;EACrB;EAIA;EACAE,QAAQA,CAACC,CAAqB;IAC5B,OAAO,IAAI,CAAChG,kBAAkB,CAACiG,KAAK,GAAG,IAAI,GAAG;MAAEjG,kBAAkB,EAAE;QAAEiG,KAAK,EAAE;MAAK;IAAE,CAAE;EACxF;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACtF,aAAa,CAAC0D,OAAO,CAAC6B,CAAC,IAAIA,CAAC,CAACC,WAAW,EAAE,CAAC;EAClD;EAAC,QAAAJ,CAAA,G;qBAxNU1F,oBAAoB,EAAAhB,EAAA,CAAA+G,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAjH,EAAA,CAAA+G,iBAAA,CAAAG,EAAA,CAAAC,kBAAA,GAAAnH,EAAA,CAAA+G,iBAAA,CAAAK,EAAA,CAAAC,eAAA,GAAArH,EAAA,CAAA+G,iBAAA,CAAAO,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBxG,oBAAoB;IAAAyG,SAAA;IAAAC,MAAA;MAAA1F,MAAA;MAAAC,KAAA;IAAA;IAAA0F,QAAA,GAAA3H,EAAA,CAAA4H,kBAAA,CAbpB,CACT;MACEC,OAAO,EAAEhI,iBAAiB;MAC1BiI,WAAW,EAAEnI,UAAU,CAAC,MAAMqB,oBAAoB,CAAC;MACnD+G,KAAK,EAAE;KACR,EACD;MACEF,OAAO,EAAE/H,aAAa;MACtBgI,WAAW,EAAEnI,UAAU,CAAC,MAAMqB,oBAAoB,CAAC;MACnD+G,KAAK,EAAE;KACR,CACF;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC3BHrI,EAAA,CAAAC,cAAA,cAA+C;QAKiCD,EAAA,CAAAE,MAAA,oBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC3FH,EAAA,CAAAM,SAAA,eAA2G;QAC7GN,EAAA,CAAAG,YAAA,EAAM;QAERH,EAAA,CAAAC,cAAA,YAAuB;QAE2BD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC3DH,EAAA,CAAAM,SAAA,oBAEY;QACdN,EAAA,CAAAG,YAAA,EAAM;QAGVH,EAAA,CAAAI,UAAA,KAAAmI,mCAAA,gBAUK;QACLvI,EAAA,CAAAC,cAAA,UAAI;QAGgDD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAChEH,EAAA,CAAAM,SAAA,gBAAiH;QACnHN,EAAA,CAAAG,YAAA,EAAM;QAERH,EAAA,CAAAC,cAAA,aAAuB;QAEaD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACnDH,EAAA,CAAAM,SAAA,iBAAmH;QACrHN,EAAA,CAAAG,YAAA,EAAM;QAGVH,EAAA,CAAAC,cAAA,UAAI;QAGgDD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC7DH,EAAA,CAAAM,SAAA,iBAA+G;QACjHN,EAAA,CAAAG,YAAA,EAAM;QAERH,EAAA,CAAAC,cAAA,aAAuB;QAE2BD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5DH,EAAA,CAAAM,SAAA,qBAEY;QACdN,EAAA,CAAAG,YAAA,EAAM;QAIVH,EAAA,CAAAC,cAAA,UAAI;QAGgDD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC3DH,EAAA,CAAAM,SAAA,iBAAsH;QACxHN,EAAA,CAAAG,YAAA,EAAM;QAERH,EAAA,CAAAC,cAAA,aAAuB;QAE2BD,EAAA,CAAAE,MAAA,yBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAEvEH,EAAA,CAAAM,SAAA,qBAEU;QACZN,EAAA,CAAAG,YAAA,EAAM;QAGVH,EAAA,CAAAI,UAAA,KAAAoI,mCAAA,gBASK;QACLxI,EAAA,CAAAC,cAAA,UAAI;QAGgDD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACrEH,EAAA,CAAAM,SAAA,qBAEY;QACdN,EAAA,CAAAG,YAAA,EAAM;QAERH,EAAA,CAAAC,cAAA,aAAuB;QAEaD,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACpDH,EAAA,CAAAM,SAAA,qBAEY;QACdN,EAAA,CAAAG,YAAA,EAAM;;;QAtGAH,EAAA,CAAAQ,UAAA,cAAA8H,GAAA,CAAA5H,kBAAA,CAAgC;QAKHV,EAAA,CAAAO,SAAA,GAAoC;QAApCP,EAAA,CAAAQ,UAAA,YAAAR,EAAA,CAAAyI,eAAA,KAAAC,GAAA,EAAAJ,GAAA,CAAArG,KAAA,EAAoC;QAOzDjC,EAAA,CAAAO,SAAA,GAAmB;QAAnBP,EAAA,CAAAQ,UAAA,oBAAmB,UAAA8H,GAAA,CAAA5G,WAAA;QAMhC1B,EAAA,CAAAO,SAAA,GAAyJ;QAAzJP,EAAA,CAAAQ,UAAA,UAAA8H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,4BAAA2H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,WAAAC,MAAA,OAAA0H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,4BAAA2H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,WAAAgI,KAAA,MAAAL,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,4BAAA2H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,WAAAiI,OAAA,GAAyJ;QAmC5I5I,EAAA,CAAAO,SAAA,IAAmB;QAAnBP,EAAA,CAAAQ,UAAA,oBAAmB,UAAA8H,GAAA,CAAA3G,UAAA;QAkBnB3B,EAAA,CAAAO,SAAA,IAAmB;QAAnBP,EAAA,CAAAQ,UAAA,oBAAmB,UAAA8H,GAAA,CAAA1G,cAAA;QAMhC5B,EAAA,CAAAO,SAAA,GAAsJ;QAAtJP,EAAA,CAAAQ,UAAA,UAAA8H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,2BAAA2H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,UAAAC,MAAA,OAAA0H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,2BAAA2H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,UAAAgI,KAAA,MAAAL,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,2BAAA2H,GAAA,CAAA5H,kBAAA,CAAAC,QAAA,UAAAiI,OAAA,GAAsJ;QAczI5I,EAAA,CAAAO,SAAA,GAAmB;QAAnBP,EAAA,CAAAQ,UAAA,oBAAmB,UAAA8H,GAAA,CAAAzG,YAAA;QAQnB7B,EAAA,CAAAO,SAAA,GAAmB;QAAnBP,EAAA,CAAAQ,UAAA,oBAAmB,UAAA8H,GAAA,CAAAxG,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}