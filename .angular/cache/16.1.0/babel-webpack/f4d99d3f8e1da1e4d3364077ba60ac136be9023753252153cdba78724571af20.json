{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\nimport { RoomFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/RoomFilterInputDTO.model';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i3 from \"src/app/ui/division-department/services/division.services\";\nimport * as i4 from \"src/app/ui/division-department/services/department.services\";\nimport * as i5 from \"src/app/services/enum.service\";\nimport * as i6 from \"src/app/ui/division-department/services/subDepartment.services\";\nimport * as i7 from \"src/app/ui/background-loc/provider/bl.provider\";\nimport * as i8 from \"src/app/ui/background-loc/provider/fl.provider\";\nimport * as i9 from \"src/app/ui/background-loc/provider/rm.provider\";\nimport * as i10 from \"src/app/ui/division-department/providers/division-provider\";\nimport * as i11 from \"src/app/ui/division-department/providers/department-provider\";\nimport * as i12 from \"src/app/ui/division-department/providers/sub-department-provider\";\nimport * as i13 from \"@ng-select/ng-select\";\nimport * as i14 from \"primeng/button\";\nimport * as i15 from \"ng-zorro-antd/table\";\nimport * as i16 from \"ng-zorro-antd/form\";\nimport * as i17 from \"ng-zorro-antd/radio\";\nimport * as i18 from \"@angular/material/tooltip\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport let EmployeeLocationComponent = /*#__PURE__*/(() => {\n  class EmployeeLocationComponent {\n    constructor(formBuilder, blSrv, divisionservice, departmentservice, enumservice, subDeptService, blProvider, flProvider, rmProvider, divisionProvider, departmentProvider, subDepartmentProvider) {\n      this.formBuilder = formBuilder;\n      this.blSrv = blSrv;\n      this.divisionservice = divisionservice;\n      this.departmentservice = departmentservice;\n      this.enumservice = enumservice;\n      this.subDeptService = subDeptService;\n      this.blProvider = blProvider;\n      this.flProvider = flProvider;\n      this.rmProvider = rmProvider;\n      this.divisionProvider = divisionProvider;\n      this.departmentProvider = departmentProvider;\n      this.subDepartmentProvider = subDepartmentProvider;\n      this.subscriptions = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.enumRm = [];\n      this.enumAllRm = [];\n      this.enumBL = [];\n      this.isNew = false;\n      this.isEdit = false;\n      this.work_type = '';\n      this.enumDivision = [];\n      this.enumAllDepartment = [];\n      this.enumDepartment = [];\n      this.enumAllSubDepartment = [];\n      this.enumSubDepartment = [];\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.btnDisable = false;\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.selectedRm = {};\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      // this.currentDate = this.datePipe.transform(new Date(), \"yyyy/MM/dd hh:mm:ss\");\n      /// Start Of Building Form \n      this.frmEmployeeLocation = this.formBuilder.group({\n        blId: [null],\n        flId: [null],\n        rmId: [null],\n        workType: [null, [Validators.required]],\n        divId: [null],\n        depId: [null],\n        subDepId: [null]\n      });\n      // End Of Building Form\n      this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.frmEmployeeLocation.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {\n      this.loadCommonAreaNoneEnum();\n      this.checkFormMode();\n      this.loadAllDivision();\n      this.loadAllDepartment();\n      this.loadSubDepartment();\n    }\n    onSelectBlCode($event) {\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          flId: null,\n          rmId: null\n        });\n      }, 10);\n      if ($event.blId != null) {\n        this.selectedBl = $event;\n        this.selectedFl = {};\n      } else {\n        this.selectedBl = {};\n        this.selectedFl = {};\n      }\n    }\n    onSelectFlCode(event) {\n      if (event.flId != null) {\n        this.selectedFl = event;\n        const blData = {\n          blId: event.blId,\n          blNameString: event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        setTimeout(() => {\n          this.frmEmployeeLocation.patchValue({\n            blId: event.blId,\n            rmId: null\n          });\n          this.selectedRm = {};\n        }, 10);\n      } else {\n        this.selectedFl = {};\n        this.selectedRm = {};\n      }\n    }\n    onSelectRmCode($event) {\n      if ($event.rmId != null) {\n        this.selectedRm = $event;\n        const blData = {\n          blId: $event.blId,\n          blNameString: $event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        const flData = {\n          flId: $event.flId,\n          flNameString: $event.flNameString,\n          blId: $event.blId,\n          blNameString: $event.blNameString\n        };\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n        setTimeout(() => {\n          this.frmEmployeeLocation.patchValue({\n            blId: $event.blId,\n            flId: $event.flId\n          });\n        }, 10);\n      } else {}\n    }\n    /// Start Preparing Entered Data Model\n    get value() {\n      const details = {\n        blId: this.frmEmployeeLocation.controls.blId.value,\n        flId: this.frmEmployeeLocation.controls.flId.value,\n        rmId: this.frmEmployeeLocation.controls.rmId.value,\n        workType: this.frmEmployeeLocation.controls.workType.value,\n        divId: this.frmEmployeeLocation.controls.divId.value,\n        depId: this.frmEmployeeLocation.controls.depId.value,\n        subDepId: this.frmEmployeeLocation.controls.subDepId.value\n      };\n      return details;\n    }\n    set value(value) {\n      value = value.em;\n      if (value.blId) {\n        const blData = {\n          blId: value.blId,\n          blNameString: value.bl.blName != null ? value.bl.blCode + \" - \" + value.bl.blName : value.bl.blCode,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n      }\n      if (value.flId) {\n        const flData = {\n          flId: value.flId,\n          flNameString: value.fl.flName != null ? value.fl.flCode + \" - \" + value.fl.flName : value.fl.flCode,\n          blId: value.blId,\n          blNameString: value.bl.blName != null ? value.bl.blCode + \" - \" + value.bl.blName : value.bl.blCode\n        };\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n      }\n      if (value.rmId) {\n        const rmData = {\n          rmId: value.rmId,\n          rmNameString: value.rm.rmName != null ? value.rm.rmCode + \" - \" + value.rm.rmName : value.rm.rmCode,\n          flId: value.rm.flId,\n          blId: value.rm.blId\n        };\n        this.selectedRm = rmData;\n        this.updateRmList(rmData);\n      }\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          blId: value.blId,\n          workType: value.workType\n        });\n        // this.loadFloorCode(value.blId);\n        this.frmEmployeeLocation.patchValue({\n          flId: value.flId\n        });\n        let data = {\n          blId: value.blId,\n          id: value.flId\n        };\n        this.frmEmployeeLocation.patchValue({\n          rmId: value.rmId\n        });\n        this.frmEmployeeLocation.patchValue({\n          divId: value.divId\n        });\n        this.loadDepartmentCode(value.divId);\n        this.loadSubDepartmentCode(value.divId, null);\n        this.frmEmployeeLocation.patchValue({\n          depId: value.depId\n        });\n        if (value.depId != null && value.divId != null) {\n          this.loadSubDepartmentCode(value.divId, value.depId);\n        }\n        this.frmEmployeeLocation.patchValue({\n          subDepId: value.subDepId\n        });\n        this.work_type = value.workType != null ? value.workType.trim() : \"\";\n        this.onSelectWorkType(this.work_type);\n        this.onChange(value);\n        this.onTouched();\n      }, 0);\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.frmEmployeeLocation.reset();\n      }\n    }\n    checkFormMode() {\n      if (this.isEdit == false) {\n        this.frmEmployeeLocation.disable();\n        this.btnDisable = true;\n      } else {\n        this.frmEmployeeLocation.enable();\n        this.btnDisable = false;\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    // communicate the inner form validation to the parent form\n    validate(_) {\n      return this.frmEmployeeLocation.valid ? null : {\n        frmEmployeeLocation: {\n          valid: false\n        }\n      };\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    onSelectWorkType(event) {\n      if (event != null && event === \"F\") {\n        for (var control in this.frmEmployeeLocation.controls) {\n          if (control !== \"workType\") this.frmEmployeeLocation.controls[control].disable();\n          this.btnDisable = true;\n          setTimeout(() => {\n            this.frmEmployeeLocation.patchValue({\n              blId: null,\n              flId: null,\n              rmId: null\n            });\n          }, 0);\n        }\n      } else {\n        this.btnDisable = false;\n        for (var control in this.frmEmployeeLocation.controls) {\n          if (control !== \"workType\" && this.isEdit) this.frmEmployeeLocation.controls[control].enable();\n        }\n      }\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          workType: event\n        });\n      }, 0);\n    }\n    loadAllDivision() {\n      this.divisionservice.getAllDivisions().subscribe(res => {\n        this.enumDivision = res;\n        this.enumDivision.unshift({\n          divId: null,\n          divCode: 'Make a selection'\n        });\n      });\n    }\n    loadAllDepartment() {\n      this.departmentservice.getAllDepartments().subscribe(res => {\n        this.enumAllDepartment = res;\n        this.enumAllDepartment.unshift({\n          depId: null,\n          depCode: 'Make a selection',\n          divId: null\n        });\n        this.enumDepartment = this.enumAllDepartment;\n      });\n    }\n    loadSubDepartment() {\n      this.enumAllSubDepartment = [];\n      this.subDeptService.getAllSubDepartments().subscribe(res => {\n        if (res) {\n          this.enumAllSubDepartment = res;\n          this.enumAllSubDepartment.unshift({\n            subDepCode: 'Make a Selection',\n            depId: null,\n            divId: null,\n            subDepId: null\n          });\n          this.enumSubDepartment = [...this.enumAllSubDepartment];\n        }\n      });\n    }\n    onSelectDivision(event) {\n      if (event.divId != null) {\n        setTimeout(() => {\n          this.frmEmployeeLocation.patchValue({\n            depId: null,\n            subDepId: null\n          });\n          this.loadDepartmentCode(event.divId);\n          this.loadSubDepartmentCode(event.divId, null);\n        }, 10);\n      } else {\n        this.enumDepartment = [...this.enumAllDepartment];\n        this.enumSubDepartment = [...this.enumAllSubDepartment];\n      }\n    }\n    onSelectDepartment(event) {\n      if (event.depId != null) {\n        setTimeout(() => {\n          this.frmEmployeeLocation.patchValue({\n            sunDepId: null\n          });\n          this.loadSubDepartmentCode(event.divId, event.depId);\n        }, 10);\n      } else {\n        this.enumSubDepartment = [];\n        this.enumSubDepartment.unshift({\n          subDepCode: 'Make a Selection',\n          depId: null,\n          divId: null,\n          subDepId: null\n        });\n      }\n    }\n    loadDepartmentCode(divId) {\n      if (divId != null) {\n        this.enumDepartment = [];\n        this.enumDepartment = this.enumAllDepartment.filter(t => t.divId == divId);\n      } else {\n        this.enumDepartment = [...this.enumAllDepartment];\n      }\n      this.enumDepartment.unshift({\n        depId: null,\n        depCode: 'Make a selection',\n        divId: null\n      });\n    }\n    loadSubDepartmentCode(divId, depId) {\n      this.enumSubDepartment = [...this.enumAllSubDepartment];\n      if (divId != null) {\n        this.enumSubDepartment = this.enumSubDepartment.filter(t => t.divId == divId);\n      }\n      if (depId != null) {\n        this.enumSubDepartment = this.enumSubDepartment.filter(t => t.depId == depId);\n      }\n      this.enumSubDepartment.unshift({\n        subDepCode: 'Make a Selection',\n        depId: null,\n        divId: null,\n        subDepId: null\n      });\n    }\n    loadCommonAreaNoneEnum() {\n      this.enumservice.getEnums().subscribe(res => {\n        let commonAreaNoneList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase() && t.enumValue.toLocaleUpperCase() === 'None'.toLocaleUpperCase());\n        this.enumCommonAreaTypeNone = commonAreaNoneList[0].enumKey;\n      });\n    }\n    onAddBuilding() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        bl_id: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.blProvider.openDialog(dialogConfig);\n      this.blProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          const blData = this.createBlData(result[1]);\n          this.selectedBl = blData;\n          this.updateBlList(blData);\n          this.onSelectBlCode(result[1]);\n          this.setLatestBl(result[1].blId);\n        }\n      });\n    }\n    setLatestBl(blId) {\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          blId: blId\n        });\n      }, 100);\n    }\n    onAddFloor() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        fl_id: null,\n        bl_id: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.flProvider.openDialog(dialogConfig);\n      this.flProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          const blData = this.createBlData(result.bl);\n          this.updateBlList(blData);\n          const flData = this.createFlData(result);\n          this.selectedFl = flData;\n          this.updateFlList(flData);\n          this.onSelectBlCode(result);\n          this.onSelectFlCode(flData);\n          this.setLatestFl(result.flId);\n        }\n      });\n    }\n    setLatestFl(flId) {\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          flId: flId\n        });\n      }, 100);\n    }\n    onAddRoom() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        bl_id: null,\n        fl_id: null,\n        rm_id: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.rmProvider.openDialog(dialogConfig);\n      this.rmProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          const blData = this.createBlData(result.bl);\n          this.updateBlList(blData);\n          const flData = this.createFlData(result);\n          this.selectedFl = flData;\n          this.updateFlList(flData);\n          const rmData = {\n            rmId: result.rmId,\n            rmNameString: result.rmName != null ? result.rmCode + \" - \" + result.rmName : result.rmCode,\n            flId: result.flId,\n            blId: result.blId\n          };\n          this.selectedRm = rmData;\n          this.updateRmList(rmData);\n          this.setLatestRm(result);\n          this.onSelectBlCode(blData);\n          this.onSelectFlCode(flData);\n        }\n      });\n    }\n    setLatestRm(event) {\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          flId: event.flId,\n          rmId: event.rmId\n        });\n      }, 100);\n    }\n    onddDivision() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        newRecord: true\n      };\n      this.divisionProvider.openDialog(dialogConfig);\n      this.divisionProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.loadAllDivision();\n          this.setLatestDivision(result);\n        }\n      });\n    }\n    setLatestDivision(divId) {\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          divId: divId\n        });\n      }, 100);\n    }\n    onddDepartment() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        newRecord: true\n      };\n      this.departmentProvider.openDialog(dialogConfig);\n      this.departmentProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.loadAllDepartment();\n          this.setLatestDepartment(result);\n        }\n      });\n    }\n    setLatestDepartment(depId) {\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          depId: depId\n        });\n      }, 100);\n    }\n    onddSubDepartment() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        newRecord: true\n      };\n      this.subDepartmentProvider.openDialog(dialogConfig);\n      this.subDepartmentProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.loadSubDepartment();\n          this.setLatestSubDepartment(result);\n        }\n      });\n    }\n    setLatestSubDepartment(subDepId) {\n      setTimeout(() => {\n        this.frmEmployeeLocation.patchValue({\n          subDepId: subDepId\n        });\n      }, 100);\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blSrv.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blSrv.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.updateFlList(this.selectedFl);\n      });\n    }\n    scrollToEndRm() {\n      this.offsetRm = this.limitRm;\n      this.limitRm += this.scrollLimit;\n      this.filterCriteria.limit = this.limitRm;\n      this.filterCriteria.offset = this.offsetRm;\n      this.blSrv.getAllRmByCommonArea(this.filterCriteria).subscribe(res => {\n        //fetch all rooms having commonArea None\n        //employee can assigned to the rooms which have common area \"None\"\n        this.enumRm = res;\n        this.updateRmList(this.selectedRm);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    searchRm(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"rmName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndRm();\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      if (flData.flId) {\n        this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n        this.enumFL = this.enumFL.filter(t => t.flId !== null);\n        this.enumFL.unshift(flData);\n      }\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateRmList(rmData) {\n      if (rmData.rmId) {\n        this.enumRm = this.enumRm.filter(t => t.rmId !== rmData.rmId);\n        this.enumRm = this.enumRm.filter(t => t.rmId !== null);\n        this.enumRm.unshift(rmData);\n      }\n      this.enumRm.unshift(new RoomFilterInputDTO(null, 'Make a selection', null, null));\n    }\n    createBlData(bl) {\n      const blData = {\n        blId: bl.blId,\n        blNameString: bl.blName != null ? bl.blCode + \" - \" + bl.blName : bl.blCode,\n        site: null\n      };\n      return blData;\n    }\n    createFlData(fl) {\n      const flData = {\n        flId: fl.flId,\n        flNameString: fl.flName != null ? fl.flCode + \" - \" + fl.flName : fl.flCode,\n        blId: fl.blId,\n        blNameString: fl.bl.blName != null ? fl.bl.blCode + \" - \" + fl.bl.blName : fl.bl.blCode\n      };\n      return flData;\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    onOpenRm() {\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      if (this.selectedFl.flId) {\n        this.filterCriteria = {\n          fieldName: \"fl.flId\",\n          value: this.selectedFl.flId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndRm();\n    }\n    static #_ = this.ɵfac = function EmployeeLocationComponent_Factory(t) {\n      return new (t || EmployeeLocationComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.BuildingService), i0.ɵɵdirectiveInject(i3.DivisionService), i0.ɵɵdirectiveInject(i4.DepartmentService), i0.ɵɵdirectiveInject(i5.EnumService), i0.ɵɵdirectiveInject(i6.SubDepartmentService), i0.ɵɵdirectiveInject(i7.BLModalDialogueProvider), i0.ɵɵdirectiveInject(i8.FLModalDialogueProvider), i0.ɵɵdirectiveInject(i9.RMModalDialogueProvider), i0.ɵɵdirectiveInject(i10.DivisionDialogueProvider), i0.ɵɵdirectiveInject(i11.DepartmentDialogueProvider), i0.ɵɵdirectiveInject(i12.SubDepartmentDialogueProvider));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EmployeeLocationComponent,\n      selectors: [[\"app-employee-location\"]],\n      inputs: {\n        isNew: \"isNew\",\n        isEdit: \"isEdit\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => EmployeeLocationComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => EmployeeLocationComponent),\n        multi: true\n      }])],\n      decls: 65,\n      vars: 28,\n      consts: [[\"nz-form\", \"\", 3, \"formGroup\"], [2, \"width\", \"100%\"], [\"colspan\", \"2\", 2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\", 2, \"margin-right\", \"10px\"], [3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"nz-radio\", \"\", \"nzValue\", \"F\"], [\"nz-radio\", \"\", \"nzValue\", \"P\"], [\"nz-radio\", \"\", \"nzValue\", \"O\"], [2, \"width\", \"50%\"], [2, \"display\", \"flex\"], [1, \"input-label-custom\", 2, \"width\", \"90%\"], [1, \"form-field-lable\"], [\"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"open\", \"scrollToEnd\", \"search\"], [2, \"margin\", \"12px 0px 0px -5px\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Building\", 1, \"pull-right\", \"m-3\", 3, \"hidden\", \"click\"], [\"formControlName\", \"divId\", \"bindLabel\", \"divCode\", \"bindValue\", \"divId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Division\", 1, \"pull-right\", \"m-3\", 3, \"hidden\", \"click\"], [\"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"open\", \"scrollToEnd\", \"search\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Floor\", 1, \"pull-right\", \"m-3\", 3, \"hidden\", \"click\"], [\"formControlName\", \"depId\", \"bindLabel\", \"depCode\", \"bindValue\", \"depId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Department\", 1, \"pull-right\", \"m-3\", 3, \"hidden\", \"click\"], [\"formControlName\", \"rmId\", \"bindLabel\", \"rmNameString\", \"bindValue\", \"rmId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"open\", \"scrollToEnd\", \"search\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Room\", 1, \"pull-right\", \"m-3\", 3, \"hidden\", \"click\"], [\"formControlName\", \"subDepId\", \"bindLabel\", \"subDepCode\", \"bindValue\", \"subDepId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Sub Department\", 1, \"pull-right\", \"m-3\", 3, \"hidden\", \"click\"]],\n      template: function EmployeeLocationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \" Remote Working \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"nz-radio-group\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function EmployeeLocationComponent_Template_nz_radio_group_ngModelChange_7_listener($event) {\n            return ctx.work_type = $event;\n          })(\"ngModelChange\", function EmployeeLocationComponent_Template_nz_radio_group_ngModelChange_7_listener($event) {\n            return ctx.onSelectWorkType($event);\n          });\n          i0.ɵɵelementStart(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Full\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"label\", 7);\n          i0.ɵɵtext(11, \"Part-time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"label\", 8);\n          i0.ɵɵtext(13, \"Office\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(14, \"tr\")(15, \"td\", 9)(16, \"div\", 10)(17, \"div\", 11)(18, \"label\", 12);\n          i0.ɵɵtext(19, \"Building \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"ng-select\", 13);\n          i0.ɵɵlistener(\"change\", function EmployeeLocationComponent_Template_ng_select_change_20_listener($event) {\n            return ctx.onSelectBlCode($event);\n          })(\"open\", function EmployeeLocationComponent_Template_ng_select_open_20_listener() {\n            return ctx.onOpenBl();\n          })(\"scrollToEnd\", function EmployeeLocationComponent_Template_ng_select_scrollToEnd_20_listener() {\n            return ctx.scrollToEndBl();\n          })(\"search\", function EmployeeLocationComponent_Template_ng_select_search_20_listener($event) {\n            return ctx.searchBl($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 14)(22, \"p-button\", 15);\n          i0.ɵɵlistener(\"click\", function EmployeeLocationComponent_Template_p_button_click_22_listener() {\n            return ctx.onAddBuilding();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(23, \"td\", 9)(24, \"div\", 10)(25, \"div\", 11)(26, \"label\", 12);\n          i0.ɵɵtext(27, \"Division\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"ng-select\", 16);\n          i0.ɵɵlistener(\"change\", function EmployeeLocationComponent_Template_ng_select_change_28_listener($event) {\n            return ctx.onSelectDivision($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"div\", 14)(30, \"p-button\", 17);\n          i0.ɵɵlistener(\"click\", function EmployeeLocationComponent_Template_p_button_click_30_listener() {\n            return ctx.onddDivision();\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(31, \"tr\")(32, \"td\", 9)(33, \"div\", 10)(34, \"div\", 11)(35, \"label\", 12);\n          i0.ɵɵtext(36, \"Floor \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"ng-select\", 18);\n          i0.ɵɵlistener(\"change\", function EmployeeLocationComponent_Template_ng_select_change_37_listener($event) {\n            return ctx.onSelectFlCode($event);\n          })(\"open\", function EmployeeLocationComponent_Template_ng_select_open_37_listener() {\n            return ctx.onOpenFl();\n          })(\"scrollToEnd\", function EmployeeLocationComponent_Template_ng_select_scrollToEnd_37_listener() {\n            return ctx.scrollToEndFl();\n          })(\"search\", function EmployeeLocationComponent_Template_ng_select_search_37_listener($event) {\n            return ctx.searchFl($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"div\", 14)(39, \"p-button\", 19);\n          i0.ɵɵlistener(\"click\", function EmployeeLocationComponent_Template_p_button_click_39_listener() {\n            return ctx.onAddFloor();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(40, \"td\", 9)(41, \"div\", 10)(42, \"div\", 11)(43, \"label\", 12);\n          i0.ɵɵtext(44, \"Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"ng-select\", 20);\n          i0.ɵɵlistener(\"change\", function EmployeeLocationComponent_Template_ng_select_change_45_listener($event) {\n            return ctx.onSelectDepartment($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(46, \"div\", 14)(47, \"p-button\", 21);\n          i0.ɵɵlistener(\"click\", function EmployeeLocationComponent_Template_p_button_click_47_listener() {\n            return ctx.onddDepartment();\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(48, \"tr\")(49, \"td\", 9)(50, \"div\", 10)(51, \"div\", 11)(52, \"label\", 12);\n          i0.ɵɵtext(53, \"Room\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"ng-select\", 22);\n          i0.ɵɵlistener(\"change\", function EmployeeLocationComponent_Template_ng_select_change_54_listener($event) {\n            return ctx.onSelectRmCode($event);\n          })(\"open\", function EmployeeLocationComponent_Template_ng_select_open_54_listener() {\n            return ctx.onOpenRm();\n          })(\"scrollToEnd\", function EmployeeLocationComponent_Template_ng_select_scrollToEnd_54_listener() {\n            return ctx.scrollToEndRm();\n          })(\"search\", function EmployeeLocationComponent_Template_ng_select_search_54_listener($event) {\n            return ctx.searchRm($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(55, \"div\", 14)(56, \"p-button\", 23);\n          i0.ɵɵlistener(\"click\", function EmployeeLocationComponent_Template_p_button_click_56_listener() {\n            return ctx.onAddRoom();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(57, \"td\", 9)(58, \"div\", 10)(59, \"div\", 11)(60, \"label\", 12);\n          i0.ɵɵtext(61, \"Sub Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(62, \"ng-select\", 24);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"div\", 14)(64, \"p-button\", 25);\n          i0.ɵɵlistener(\"click\", function EmployeeLocationComponent_Template_p_button_click_64_listener() {\n            return ctx.onddSubDepartment();\n          });\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.frmEmployeeLocation);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.work_type)(\"ngModelOptions\", i0.ɵɵpureFunction0(27, _c0));\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.isEdit || ctx.btnDisable);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDivision)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.isEdit || ctx.btnDisable);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.isEdit || ctx.btnDisable);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDepartment)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.isEdit || ctx.btnDisable);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumRm)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.isEdit || ctx.btnDisable);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumSubDepartment)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.isEdit || ctx.btnDisable);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.NgModel, i13.NgSelectComponent, i14.Button, i15.NzTableCellDirective, i15.NzTrDirective, i16.NzFormDirective, i17.NzRadioComponent, i17.NzRadioGroupComponent, i18.MatTooltip],\n      styles: [\"[_nghost-%COMP%]     #add-btn .p-button{background-color:#fff!important;border-radius:50%;border:2px solid #2196F3;color:#2196f3;height:20px!important;width:20px}\"]\n    });\n  }\n  return EmployeeLocationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}