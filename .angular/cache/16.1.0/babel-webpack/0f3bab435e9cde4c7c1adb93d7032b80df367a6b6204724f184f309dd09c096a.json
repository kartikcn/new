{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../provider/trades.provider\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../services/trades.services\";\nimport * as i4 from \"ng-zorro-antd/table\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/toast\";\nimport * as i8 from \"primeng/panel\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"@angular/material/tooltip\";\nimport * as i11 from \"primeng/paginator\";\nfunction TradesComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TradesComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAdd());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TradesComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 14);\n    i0.ɵɵelementStart(2, \"th\", 15)(3, \"div\", 16)(4, \"div\", 17)(5, \"p\", 18);\n    i0.ɵɵtext(6, \"Trade Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 19);\n    i0.ɵɵelement(8, \"p-sortIcon\", 20)(9, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 22)(11, \"div\", 16)(12, \"div\", 17)(13, \"p\", 18);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 19);\n    i0.ɵɵelement(16, \"p-sortIcon\", 23)(17, \"p-columnFilter\", 24);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction TradesComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 25)(1, \"td\", 14)(2, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function TradesComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const trade_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onEditTrade(trade_r6.tradeId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function TradesComponent_ng_template_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const trade_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onDelete(trade_r6));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 28);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const trade_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", trade_r6);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(trade_r6.tradeCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", trade_r6.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(trade_r6.description);\n  }\n}\nfunction TradesComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport class TradesComponent {\n  constructor(tradesProvider, messageService, tradesService, confirmationService) {\n    this.tradesProvider = tradesProvider;\n    this.messageService = messageService;\n    this.tradesService = tradesService;\n    this.confirmationService = confirmationService;\n    this.tradesData = [];\n    this.loading = false;\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.totalElements = 0;\n    this.paginationObj = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"tradeId\"],\n      sortOrder: \"ASC\"\n    };\n    this.filterCriteria = {};\n    this.isFiltered = false;\n    this.filterCriteriaList = [];\n  }\n  ngOnInit() {\n    this.loadRecords();\n  }\n  loadRecords() {\n    this.loading = true;\n    let data = {\n      paginationDTO: this.paginationObj,\n      filterCriteria: this.filterCriteriaList\n    };\n    this.tradesService.getAllTradesPaginated(data).subscribe(res => {\n      if (res) {\n        this.isFiltered = false;\n        this.tradesData = res.content ? res.content : [];\n        this.totalElements = res.totalElements ? res.totalElements : 0;\n      } else {\n        this.tradesData = [];\n      }\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n    });\n  }\n  onAdd() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = false;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      isEdit: false,\n      newRecord: true\n    };\n    this.tradesProvider.openDialog(dialogConfig);\n    this.tradesProvider.onDialogueClosed.subscribe(result => {\n      this.messageService.clear();\n      if (result) {\n        this.messageService.add({\n          key: 'tradeSave',\n          severity: 'success',\n          summary: 'Record saved successfully',\n          detail: 'Record saved successfully'\n        });\n        this.loadRecords();\n      }\n    });\n  }\n  onEditTrade(tradeId) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      tradeId: tradeId,\n      isEdit: true,\n      newRecord: false\n    };\n    this.tradesProvider.openDialog(dialogConfig);\n    this.tradesProvider.onDialogueClosed.subscribe(result => {\n      this.messageService.clear();\n      if (result) this.messageService.add({\n        key: 'tradeSave',\n        severity: 'success',\n        summary: 'Record saved successfully',\n        detail: 'Record saved successfully'\n      });\n      this.loadRecords();\n    });\n  }\n  onDelete(trade) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete ' + trade.tradeCode + '?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.deleteTrade(trade.tradeId);\n      },\n      key: \"tradeGrid\"\n    });\n  }\n  deleteTrade(tradeId) {\n    this.tradesService.deleteById(tradeId).subscribe(res => {\n      if (res != null && res.code == 200) {\n        this.messageService.add({\n          key: 'tradeSave',\n          severity: 'success',\n          summary: 'Record deleted successfully',\n          detail: 'Record deleted successfully'\n        });\n        this.loadRecords();\n      } else {\n        this.messageService.add({\n          key: 'tradeSave',\n          severity: 'error',\n          summary: 'error',\n          detail: res.text\n        });\n      }\n    }, error => {});\n  }\n  onPageChange(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadRecords();\n  }\n  onInnerFilter(event) {\n    if (this.isFiltered) {\n      Object.keys(event.filters).forEach(field => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined) {\n          let filterCriteria = {\n            fieldName: field,\n            value: filterValue,\n            matchMode: matchMode\n          };\n          this.updateFilterCriteriaList(filterCriteria);\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadRecords();\n    }\n    this.isFiltered = true;\n  }\n  updateFilterCriteriaList(filterCriteria) {\n    let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaList.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaList[index] = filterCriteria;\n      } else {\n        this.filterCriteriaList.push(filterCriteria);\n      }\n    }\n  }\n  static #_ = this.ɵfac = function TradesComponent_Factory(t) {\n    return new (t || TradesComponent)(i0.ɵɵdirectiveInject(i1.TradesDialogueProvider), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.TradesService), i0.ɵɵdirectiveInject(i2.ConfirmationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TradesComponent,\n    selectors: [[\"app-trades\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 13,\n    vars: 10,\n    consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Trades Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", 3, \"paginator\", \"value\", \"scrollable\", \"rowHover\", \"onFilter\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"tradeSave\", \"position\", \"top-right\"], [\"key\", \"tradeDelete\", \"position\", \"top-center\"], [\"key\", \"tradeGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"tradeCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"tradeCode\"], [\"type\", \"text\", \"field\", \"tradeCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"]],\n    template: function TradesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n        i0.ɵɵtemplate(2, TradesComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4);\n        i0.ɵɵlistener(\"onFilter\", function TradesComponent_Template_p_table_onFilter_4_listener($event) {\n          return ctx.onInnerFilter($event);\n        });\n        i0.ɵɵtemplate(5, TradesComponent_ng_template_5_Template, 18, 0, \"ng-template\", 5);\n        i0.ɵɵtemplate(6, TradesComponent_ng_template_6_Template, 8, 4, \"ng-template\", 6);\n        i0.ɵɵtemplate(7, TradesComponent_ng_template_7_Template, 3, 1, \"ng-template\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 8)(9, \"p-paginator\", 9);\n        i0.ɵɵlistener(\"onPageChange\", function TradesComponent_Template_p_paginator_onPageChange_9_listener($event) {\n          return ctx.onPageChange($event);\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(10, \"p-toast\", 10)(11, \"p-toast\", 11)(12, \"p-confirmDialog\", 12);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"paginator\", false)(\"value\", ctx.tradesData)(\"scrollable\", true)(\"rowHover\", false);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0));\n      }\n    },\n    dependencies: [i4.NzTableCellDirective, i4.NzThMeasureDirective, i4.NzTrDirective, i2.PrimeTemplate, i5.Table, i5.SortableColumn, i5.SelectableRow, i5.SortIcon, i5.ColumnFilter, i6.ButtonDirective, i7.Toast, i8.Panel, i9.ConfirmDialog, i10.MatTooltip, i11.Paginator],\n    styles: [\".ellipsis[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-table {\\n  table-layout: fixed;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svdHJhZGVzL21vZGFsL3RyYWRlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQUNKOztBQUVFO0VBQ0UsbUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5lbGxpcHNpc3tcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyBcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyBcbiAgfVxuXG4gIDpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtdGFibGV7XG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MessageService","UtilConstant","MatDialogConfig","i0","ɵɵelementStart","ɵɵlistener","TradesComponent_ng_template_2_Template_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","onAdd","ɵɵelementEnd","ɵɵelement","ɵɵtext","TradesComponent_ng_template_6_Template_button_click_2_listener","restoredCtx","_r8","trade_r6","$implicit","ctx_r7","onEditTrade","tradeId","TradesComponent_ng_template_6_Template_button_click_3_listener","ctx_r9","onDelete","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","tradeCode","ɵɵpropertyInterpolate","description","ɵɵattribute","TradesComponent","constructor","tradesProvider","messageService","tradesService","confirmationService","tradesData","loading","rowCount","ROW_COUNT","totalElements","paginationObj","pageNo","pageSize","sortBy","sortOrder","filterCriteria","isFiltered","filterCriteriaList","ngOnInit","loadRecords","data","paginationDTO","getAllTradesPaginated","subscribe","res","content","error","dialogConfig","disableClose","autoFocus","width","isEdit","newRecord","openDialog","onDialogueClosed","result","clear","add","key","severity","summary","detail","trade","confirm","message","header","icon","accept","deleteTrade","deleteById","code","text","onPageChange","event","first","rows","onInnerFilter","Object","keys","filters","forEach","field","filterValue","value","matchMode","undefined","fieldName","updateFilterCriteriaList","index","findIndex","item","splice","push","_","ɵɵdirectiveInject","i1","TradesDialogueProvider","i2","i3","TradesService","ConfirmationService","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","TradesComponent_Template","rf","ctx","ɵɵtemplate","TradesComponent_ng_template_2_Template","TradesComponent_Template_p_table_onFilter_4_listener","$event","TradesComponent_ng_template_5_Template","TradesComponent_ng_template_6_Template","TradesComponent_ng_template_7_Template","TradesComponent_Template_p_paginator_onPageChange_9_listener","ɵɵpureFunction0","_c0"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/trades/modal/trades.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/trades/modal/trades.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { TradesDialogueProvider } from '../provider/trades.provider';\nimport { TradesService } from '../services/trades.services';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { PaginationObj } from 'src/app/model/pagination-model';\n\n@Component({\n  selector: 'app-trades',\n  templateUrl: './trades.component.html',\n  styleUrls: ['./trades.component.scss'],\n  providers: [MessageService]\n})\nexport class TradesComponent implements OnInit {\n  tradesData: any[] = [];\n  loading: boolean = false;\n  rowCount: number = UtilConstant.ROW_COUNT;\n  totalElements:number = 0;\n  paginationObj:PaginationObj = {\n    pageNo:0,\n    pageSize:this.rowCount,\n    sortBy:[\"tradeId\"],\n    sortOrder:\"ASC\"\n  }\n  filterCriteria:any = {};\n  isFiltered:boolean = false;\n  filterCriteriaList :any[]=[];\n\n  constructor(\n    private tradesProvider: TradesDialogueProvider,\n    private messageService: MessageService,\n    private tradesService: TradesService,\n    private confirmationService: ConfirmationService,\n  ) { }\n\n  ngOnInit(): void {\n    this.loadRecords();\n  }\n\n  loadRecords() {\n    this.loading = true;\n    let data={paginationDTO:this.paginationObj,filterCriteria:this.filterCriteriaList};\n    this.tradesService.getAllTradesPaginated(data).subscribe((res: any) => {\n      if (res) {\n        this.isFiltered= false;\n        this.tradesData = res.content ? res.content : [];\n        this.totalElements = res.totalElements ? res.totalElements : 0;\n      }\n      else {\n        this.tradesData = [];\n      }\n      this.loading = false;\n    },\n      error => {\n        this.loading = false;\n      }\n    );\n  }\n\n  onAdd() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = false;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      isEdit: false,\n      newRecord: true\n    };\n    this.tradesProvider.openDialog(dialogConfig);\n    this.tradesProvider.onDialogueClosed.subscribe((result: any) => {\n      this.messageService.clear();\n      if (result) {\n        this.messageService.add({ key: 'tradeSave', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n        this.loadRecords();\n      }\n    });\n  }\n\n  onEditTrade(tradeId: string) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      tradeId: tradeId,\n      isEdit: true,\n      newRecord: false\n    };\n    this.tradesProvider.openDialog(dialogConfig);\n    this.tradesProvider.onDialogueClosed.subscribe((result: any) => {\n      this.messageService.clear();\n      if (result)\n      this.messageService.add({ key: 'tradeSave', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n      this.loadRecords();\n    });\n  }\n\n  onDelete(trade: any) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete '+trade.tradeCode+'?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.deleteTrade(trade.tradeId);\n      },\n      key: \"tradeGrid\"\n    });\n  }\n\n  deleteTrade(tradeId: any) {\n    this.tradesService.deleteById(tradeId).subscribe((res: any) => {\n      if (res != null && res.code == 200) {\n        this.messageService.add({ key: 'tradeSave', severity: 'success', summary: 'Record deleted successfully', detail: 'Record deleted successfully' });\n        this.loadRecords();\n      } else {\n        this.messageService.add({ key: 'tradeSave', severity: 'error', summary: 'error', detail: res.text });\n      }\n    },\n      error => {\n\n      }\n    );\n\n  }\n\n  onPageChange(event:any){\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadRecords();\n  }\n\n  onInnerFilter(event: any) {\n    if (this.isFiltered) {\n      Object.keys(event.filters).forEach((field) => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if(filterValue !== undefined){\n          let filterCriteria = { fieldName: field, value: filterValue, matchMode: matchMode };\n          this.updateFilterCriteriaList(filterCriteria);\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadRecords();\n    }\n    this.isFiltered = true;\n  }\n\n  updateFilterCriteriaList(filterCriteria:any){\n    let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if(filterCriteria['value']==null){\n      if(index !==-1){\n        this.filterCriteriaList.splice(index, 1);\n      }\n    }else {\n      if (index !== -1) {\n        this.filterCriteriaList[index] = filterCriteria;\n      } else {\n        this.filterCriteriaList.push(filterCriteria);\n      }\n    }\n  }\n}\n","<div class=\"card\" style=\"height:92vh;\">\n    <p-panel header=\"Trades Details\">\n        <ng-template pTemplate=\"icons\">\n            <button pButton label=\"Add\" (click)=\"onAdd()\" icon=\"pi pi-plus\">\n            </button>\n        </ng-template>\n        <div class=\"card\">\n            <p-table [paginator]=\"false\" [value]=\"tradesData\" [scrollable]=\"true\" (onFilter)=\"onInnerFilter($event)\"\n                scrollDirection=\"both\" scrollHeight=\"550px\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n                [rowHover]=\"false\">\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th style=\"width:8rem\"> </th>\n                        <th pSortableColumn=\"tradeCode\">\n                             <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                  <p class=\"grid-label-paragraph\">Trade Code</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"tradeCode\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"tradeCode\" display=\"menu\"></p-columnFilter>\n                                  </div>\n                               </div>\n                        </th>\n                        <th pSortableColumn=\"description\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                  <p class=\"grid-label-paragraph\">Description</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"description\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"description\" display=\"menu\"></p-columnFilter>\n                                  </div>\n                               </div>\n                        </th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-trade>\n                    <tr [pSelectableRow]=\"trade\">\n                        <td style=\"width:8rem\">\n                            <button pButton pRipple icon=\"pi pi-pencil\" type=\"button\" class=\"p-button-text\"\n                                (click)=\"onEditTrade(trade.tradeId)\">\n                            </button>\n                            <button pButton pRipple icon=\"pi pi-times\" type=\"button\" class=\"p-button-text pull-right\"\n                                (click)=\"onDelete(trade)\" style=\"font-size: 5rem; color: red;\">\n                            </button>\n                        </td>\n                        <td>{{trade.tradeCode}}</td>\n                        <td matTooltip=\"{{trade.description}}\" matTooltipPosition=\"below\" class=\"ellipsis\">{{trade.description}}</td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\" let-columns>\n                    <tr>\n                        <td [attr.colspan]=\"3\">\n                            No records found\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n            <div class=\"paginator\">\n                <p-paginator  [rows]=\"rowCount\" [totalRecords]=\"totalElements\" (onPageChange)=\"onPageChange($event)\"\n                [first]=\"paginationObj.pageNo * paginationObj.pageSize\"\n                  currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\"\n                  [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n            </div>\n        </div>\n    </p-panel>\n</div>\n<p-toast key=\"tradeSave\" position=\"top-right\"></p-toast>\n<p-toast key=\"tradeDelete\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"tradeGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}