{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let SharedService = /*#__PURE__*/(() => {\n  class SharedService {\n    constructor() {\n      this.fire = new EventEmitter();\n      this.sharedData = new BehaviorSubject(false);\n      this.cast = this.sharedData.asObservable();\n      console.log('shared service started');\n    }\n    change(vlaue) {\n      console.log('change started');\n      // alert(vlaue)\n      this.fire.emit(vlaue);\n    }\n    getEmittedValue() {\n      return this.fire;\n    }\n    updateLogin(value) {\n      this.sharedData.next(value);\n    }\n    static #_ = this.ɵfac = function SharedService_Factory(t) {\n      return new (t || SharedService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SharedService,\n      factory: SharedService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SharedService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}