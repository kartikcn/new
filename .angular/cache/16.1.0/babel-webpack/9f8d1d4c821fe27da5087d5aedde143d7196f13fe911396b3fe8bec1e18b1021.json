{"ast":null,"code":"import { forkJoin, of } from 'rxjs';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from '../../../../../common/UtilConstant';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../../services/bl.service\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"../add-fl-form/add-fl-form.component\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"primeng/confirmdialog\";\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nexport let AddEditFlComponent = /*#__PURE__*/(() => {\n  class AddEditFlComponent {\n    constructor(data, formBuilder, dialog, dialogRef, blSrv, confirmationService, messageService) {\n      this.data = data;\n      this.formBuilder = formBuilder;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.blSrv = blSrv;\n      this.confirmationService = confirmationService;\n      this.messageService = messageService;\n      this.subscriptions = [];\n      this.isNew = true;\n      this.isEdit = true;\n      this.isView = false;\n      this.title = 'Add';\n      this.frmFlDetail = this.formBuilder.group({\n        flFormPanel: []\n      });\n    }\n    ngOnInit() {\n      this.isEdit = true;\n      this.isNew = true;\n      if (this.data != null) {\n        this.loadData();\n        this.disableButton();\n        this.isNewRecord();\n      }\n    }\n    disableButton() {\n      if (this.data.isEdit != null && !this.data.isEdit) {\n        this.isEdit = false;\n      }\n    }\n    isNewRecord() {\n      if (this.data.newRecord != null) {\n        this.isNew = this.data.newRecord;\n        if (!this.isNew) this.title = 'Edit';\n      }\n      if (this.data.isView != null) {\n        this.isView = this.data.isView;\n        if (this.isView) this.title = \"\";\n      }\n    }\n    loadData() {\n      const calls = [];\n      if (this.data.fl_id != null) {\n        calls.push(this.blSrv.getFlById(this.data.fl_id));\n      } else {\n        calls.push(of(null));\n      }\n      forkJoin(...calls).subscribe(results => {\n        if (results[0] == null) {\n          var flData = {\n            blId: this.data.bl_id,\n            flId: null,\n            flName: null,\n            flInfo: null,\n            svgName: null,\n            units: null,\n            externalArea: null,\n            internalArea: null\n          };\n          setTimeout(() => {\n            this.frmFlDetail.patchValue({\n              flFormPanel: flData\n            });\n          }, 0);\n        } else {\n          setTimeout(() => {\n            this.frmFlDetail.patchValue({\n              flFormPanel: results[0]\n            });\n          }, 0);\n        }\n      });\n    }\n    saveRecords() {\n      if (this.frmFlDetail.valid) {\n        const flData = this.frmFlDetail.controls.flFormPanel.value;\n        this.blSrv.saveFloor(flData).subscribe(res => {\n          if (res.code == 200) {\n            if (this.isNew) {\n              this.messageService.add({\n                key: 'flSuccessMessage',\n                severity: 'success',\n                summary: 'Record added',\n                detail: res.text\n              });\n            } else {\n              this.messageService.add({\n                key: 'flSuccessMessage',\n                severity: 'success',\n                summary: 'Record updated',\n                detail: res.text\n              });\n            }\n            setTimeout(() => {\n              this.dialogRef.close(res.data);\n            }, 1000);\n          } else {\n            this.messageService.add({\n              key: 'error',\n              severity: 'error',\n              summary: 'error',\n              detail: res.text\n            });\n          }\n        });\n      }\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close(false);\n        },\n        key: 'flDetails'\n      });\n    }\n    clearForm() {\n      this.frmFlDetail.controls.flFormPanel.reset();\n    }\n    deleteRecord() {\n      this.userDeleteConfirm();\n    }\n    deleteSiteRecord(fl_id) {\n      this.blSrv.deleteFloor(fl_id).subscribe(res => {\n        if (res.code == 200) {\n          this.messageService.add({\n            key: 'flSuccessMessage',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: res.text\n          });\n          setTimeout(() => {\n            this.dialogRef.close(true);\n          }, 1000);\n        } else {\n          this.messageService.add({\n            key: 'flFailureMessage',\n            severity: 'warn',\n            summary: 'Delete failed',\n            detail: res.text\n          });\n          setTimeout(() => {\n            this.dialogRef.close(true);\n          }, 1000);\n        }\n      });\n    }\n    userDeleteConfirm() {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ' + this.data.bl_id + ' - ' + this.data.flCode + ' ?',\n        header: 'Delete Confirmation',\n        icon: 'pi pi-info-circle',\n        accept: () => {\n          this.deleteSiteRecord(this.data.fl_id);\n        },\n        key: 'flDetails'\n      });\n    }\n    static #_ = this.ɵfac = function AddEditFlComponent_Factory(t) {\n      return new (t || AddEditFlComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.BuildingService), i0.ɵɵdirectiveInject(i4.ConfirmationService), i0.ɵɵdirectiveInject(i4.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditFlComponent,\n      selectors: [[\"app-add-edit-fl\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 16,\n      vars: 16,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [3, \"formGroup\"], [\"id\", \"flFrm\"], [\"formControlName\", \"flFormPanel\", 3, \"isView\", \"isNew\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Clear\", \"icon\", \"pi pi-times\", 3, \"hidden\", \"click\"], [\"label\", \"Delete\", \"icon\", \"pi pi-trash\", 1, \"mr5\", 3, \"hidden\", \"disabled\", \"click\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"hidden\", \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"key\", \"flSuccessMessage\", \"position\", \"top-right\"], [\"key\", \"flFailureMessage\", \"position\", \"top-center\"], [\"key\", \"error\", \"position\", \"top-right\"], [\"key\", \"flDetails\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"]],\n      template: function AddEditFlComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"form\", 2)(4, \"mat-card\")(5, \"mat-card-content\", 3);\n          i0.ɵɵelement(6, \"app-add-fl-form\", 4);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(7, \"mat-dialog-actions\", 5)(8, \"p-button\", 6);\n          i0.ɵɵlistener(\"click\", function AddEditFlComponent_Template_p_button_click_8_listener() {\n            return ctx.clearForm();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p-button\", 7);\n          i0.ɵɵlistener(\"click\", function AddEditFlComponent_Template_p_button_click_9_listener() {\n            return ctx.deleteRecord();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"p-button\", 8);\n          i0.ɵɵlistener(\"click\", function AddEditFlComponent_Template_p_button_click_10_listener() {\n            return ctx.saveRecords();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"p-button\", 9);\n          i0.ɵɵlistener(\"click\", function AddEditFlComponent_Template_p_button_click_11_listener() {\n            return ctx.confirmDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(12, \"p-toast\", 10)(13, \"p-toast\", 11)(14, \"p-toast\", 12)(15, \"p-confirmDialog\", 13);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"\", ctx.title, \" Floor Details\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.frmFlDetail);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"isView\", ctx.isView)(\"isNew\", ctx.isNew);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.isNew);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"hidden\", ctx.isNew || ctx.isView)(\"disabled\", !ctx.frmFlDetail.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(14, _c0));\n          i0.ɵɵproperty(\"hidden\", ctx.isView)(\"disabled\", !ctx.frmFlDetail.valid)(\"hidden\", ctx.isView);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(15, _c0));\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.AddFlFormComponent, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i6.MatLegacyCard, i6.MatLegacyCardContent, i7.Button, i8.Toast, i9.ConfirmDialog],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px;background-color:#fff!important}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;background-color:#fff!important}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}\"]\n    });\n  }\n  return AddEditFlComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}