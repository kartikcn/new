{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/enum.service\";\nimport * as i3 from \"@angular/material/legacy-card\";\nimport * as i4 from \"ng-zorro-antd/table\";\nimport * as i5 from \"ng-zorro-antd/input\";\nimport * as i6 from \"@ng-select/ng-select\";\nimport * as i7 from \"../../../../directive/numbers-only.directive\";\nimport * as i8 from \"primeng/selectbutton\";\nexport let PartDetailsComponent = /*#__PURE__*/(() => {\n  class PartDetailsComponent {\n    constructor(formBuilder, enumsrv) {\n      this.formBuilder = formBuilder;\n      this.enumsrv = enumsrv;\n      this.partsList = [];\n      this.errorMsg = '';\n      this.showDetails = false;\n      this.enumConsumable = [];\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumPartsData = [];\n      this.enumMeasurment = [];\n      this.frmPartsDetail = this.formBuilder.group({\n        partCode: [''],\n        description: [null],\n        compId: [null],\n        modelNo: [null],\n        qutMinHand: [null],\n        qutOnHand: [null],\n        consumable: [null],\n        qutOnOrder: [null],\n        unitOfMeasurement: [null],\n        ratePerUnit: [null]\n      });\n    }\n    ngOnInit() {\n      this.loadEnums();\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumPartsData = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase());\n        this.enumConsumable = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'consumable'.toLocaleUpperCase());\n        this.enumMeasurment = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'unit_of_measurement'.toLocaleUpperCase());\n        this.setPartForm(this.selectedPart);\n      }, error => {});\n    }\n    setPartForm(value) {\n      setTimeout(() => {\n        this.frmPartsDetail.patchValue({\n          partCode: value.partCode,\n          description: value.description,\n          compId: value.compId,\n          modelNo: value.modelNo,\n          qutMinHand: value.qutMinHand,\n          qutOnHand: value.qutOnHand,\n          consumable: value.consumable,\n          qutOnOrder: value.qutOnOrder,\n          unitOfMeasurement: value.unitOfMeasurement,\n          ratePerUnit: value.ratePerUnit,\n          actualQuantityUsed: value.actualQuantityUsed\n        });\n      });\n    }\n    static #_ = this.ɵfac = function PartDetailsComponent_Factory(t) {\n      return new (t || PartDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EnumService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PartDetailsComponent,\n      selectors: [[\"app-part-details\"]],\n      inputs: {\n        selectedPart: \"selectedPart\"\n      },\n      decls: 55,\n      vars: 6,\n      consts: [[1, \"disabled-form\", 3, \"formGroup\"], [\"id\", \"partsCard\"], [\"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"partCode\", \"formControlName\", \"partCode\", \"maxlength\", \"64\", 1, \"form-control\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"modelNo\", \"formControlName\", \"modelNo\", \"maxlength\", \"128\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"qutMinHand\", \"formControlName\", \"qutMinHand\", \"NumbersOnly\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"qutOnHand\", \"NumbersOnly\", \"\", \"formControlName\", \"qutOnHand\", 1, \"form-control\"], [\"formControlName\", \"consumable\", \"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", 3, \"options\"], [\"type\", \"text\", \"name\", \"qutOnOrder\", \"NumbersOnly\", \"\", \"formControlName\", \"qutOnOrder\", 1, \"form-control\"], [\"appendTo\", \"body\", \"name\", \"unitOfMeasurement\", \"formControlName\", \"unitOfMeasurement\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [\"type\", \"text\", \"name\", \"ratePerUnit\", \"NumbersOnly\", \"\", \"formControlName\", \"ratePerUnit\", 1, \"form-control\"], [\"colspan\", \"2\"], [3, \"nzMaxCharacterCount\"], [\"name\", \"description\", \"formControlName\", \"description\", \"rows\", \"2\", \"nz-input\", \"\", \"maxlength\", \"256\", 1, \"form-control\", \"note-border\"]],\n      template: function PartDetailsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-card\")(2, \"mat-card-content\", 1)(3, \"table\", 2)(4, \"tr\")(5, \"td\")(6, \"div\", 3)(7, \"label\", 4);\n          i0.ɵɵtext(8, \"Part Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"td\")(11, \"div\", 3)(12, \"label\", 6);\n          i0.ɵɵtext(13, \"Model Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"tr\")(16, \"td\")(17, \"div\", 3)(18, \"label\", 6);\n          i0.ɵɵtext(19, \"Minimum to Store\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"td\")(22, \"div\", 3)(23, \"label\", 6);\n          i0.ɵɵtext(24, \"Quantity Available\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(26, \"tr\")(27, \"td\")(28, \"div\", 3)(29, \"label\", 4);\n          i0.ɵɵtext(30, \"Consumable\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(31, \"p-selectButton\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(32, \"td\")(33, \"div\", 3)(34, \"label\", 6);\n          i0.ɵɵtext(35, \"Quantity Reorder\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(36, \"input\", 11);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(37, \"tr\")(38, \"td\")(39, \"div\", 3)(40, \"label\", 6);\n          i0.ɵɵtext(41, \"Unit of Measurement\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(42, \"ng-select\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"td\")(44, \"div\", 3)(45, \"label\", 6);\n          i0.ɵɵtext(46, \"Rate Per Unit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(47, \"input\", 13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(48, \"tr\")(49, \"td\", 14)(50, \"div\", 3)(51, \"label\", 6);\n          i0.ɵɵtext(52, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(53, \"nz-textarea-count\", 15);\n          i0.ɵɵelement(54, \"textarea\", 16);\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.frmPartsDetail);\n          i0.ɵɵadvance(31);\n          i0.ɵɵproperty(\"options\", ctx.enumConsumable);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumMeasurment);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"nzMaxCharacterCount\", 256);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i3.MatLegacyCard, i3.MatLegacyCardContent, i4.NzTableCellDirective, i4.NzTrDirective, i5.NzTextareaCountComponent, i5.NzInputDirective, i6.NgSelectComponent, i7.NumbersOnlyDirective, i8.SelectButton],\n      styles: [\".disabled-form[_ngcontent-%COMP%]{opacity:.8;pointer-events:none}\"]\n    });\n  }\n  return PartDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}