{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { FloorFilterInputDTO } from '../../background-loc/model/DTO/FloorFilterInputDTO.model';\nimport { BuildingFilterInputDTO } from '../../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { RoomFilterInputDTO } from '../../background-loc/model/DTO/RoomFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../background-loc/services/bl.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../Helpdesk/equipment/services/equipment.services\";\nimport * as i4 from \"../../ppm-plan/services/ppm-plan-services\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../ppm-schedule/services/plan-schedule-services\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"primeng/api\";\nimport * as i9 from \"primeng/table\";\nimport * as i10 from \"primeng/calendar\";\nimport * as i11 from \"primeng/button\";\nimport * as i12 from \"primeng/panel\";\nimport * as i13 from \"@ng-select/ng-select\";\nfunction GenerateRequestsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31)(2, \"label\", 14);\n    i0.ɵɵtext(3, \"Generate Request\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction GenerateRequestsComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 32);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMsg);\n  }\n}\nfunction GenerateRequestsComponent_ng_template_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 33)(2, \"div\", 34)(3, \"div\", 35)(4, \"p\", 36);\n    i0.ɵɵtext(5, \"Request Id\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 37);\n    i0.ɵɵelement(7, \"p-sortIcon\", 38)(8, \"p-columnFilter\", 39);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 40)(10, \"div\", 34)(11, \"div\", 35)(12, \"p\", 36);\n    i0.ɵɵtext(13, \"Requested Date \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 37);\n    i0.ɵɵelement(15, \"p-sortIcon\", 41)(16, \"p-columnFilter\", 42);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 40)(18, \"div\", 34)(19, \"div\", 35)(20, \"p\", 36);\n    i0.ɵɵtext(21, \" Date To Perform\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 37);\n    i0.ɵɵelement(23, \"p-sortIcon\", 41)(24, \"p-columnFilter\", 42);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"th\", 43)(26, \"div\", 34)(27, \"div\", 35)(28, \"p\", 36);\n    i0.ɵɵtext(29, \"Date To Respond\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 37);\n    i0.ɵɵelement(31, \"p-sortIcon\", 44)(32, \"p-columnFilter\", 45);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"th\", 46)(34, \"div\", 34)(35, \"div\", 35)(36, \"p\", 36);\n    i0.ɵɵtext(37, \"Date To Complete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"div\", 37);\n    i0.ɵɵelement(39, \"p-sortIcon\", 47)(40, \"p-columnFilter\", 48);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"th\", 49)(42, \"div\", 34)(43, \"div\", 35)(44, \"p\", 36);\n    i0.ɵɵtext(45, \"Building\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(46, \"div\", 37);\n    i0.ɵɵelement(47, \"p-sortIcon\", 50)(48, \"p-columnFilter\", 51);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(49, \"th\", 52)(50, \"div\", 34)(51, \"div\", 35)(52, \"p\", 36);\n    i0.ɵɵtext(53, \"Floor\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(54, \"div\", 37);\n    i0.ɵɵelement(55, \"p-sortIcon\", 53)(56, \"p-columnFilter\", 54);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(57, \"th\", 55)(58, \"div\", 34)(59, \"div\", 35)(60, \"p\", 36);\n    i0.ɵɵtext(61, \"Room \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(62, \"div\", 37);\n    i0.ɵɵelement(63, \"p-sortIcon\", 56)(64, \"p-columnFilter\", 57);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(65, \"th\", 58)(66, \"div\", 34)(67, \"div\", 35)(68, \"p\", 36);\n    i0.ɵɵtext(69, \"Asset \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(70, \"div\", 37);\n    i0.ɵɵelement(71, \"p-sortIcon\", 59)(72, \"p-columnFilter\", 60);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction GenerateRequestsComponent_ng_template_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 61)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const wr_r6 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", wr_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r6.wrId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 12, wr_r6.dateRequested, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 15, wr_r6.dateToPerform, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(11, 18, wr_r6.escDateResponded, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r6.escTimeResponded), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(14, 21, wr_r6.escDateCompleted, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r6.escTimeCompleted), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(wr_r6.building);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r6.floor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r6.room);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r6.eqCode);\n  }\n}\nfunction GenerateRequestsComponent_ng_template_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 8);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nexport let GenerateRequestsComponent = /*#__PURE__*/(() => {\n  class GenerateRequestsComponent {\n    constructor(blService, formBuilder, eqService, ppmPlanService, datePipe, planScheduleSrv, spinner) {\n      this.blService = blService;\n      this.formBuilder = formBuilder;\n      this.eqService = eqService;\n      this.ppmPlanService = ppmPlanService;\n      this.datePipe = datePipe;\n      this.planScheduleSrv = planScheduleSrv;\n      this.spinner = spinner;\n      this.enumBL = [];\n      this.enumAllBl = [];\n      this.enumFL = [];\n      this.enumRM = [];\n      this.enumAllEquipment = [];\n      this.enumEquipment = [];\n      this.enumAllFL = [];\n      this.allRmDdata = [];\n      this.rm_data = [];\n      this.eqData = [];\n      this.planList = [];\n      this.errorMsg = '';\n      this.today = new Date();\n      this.requestsList = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.selectedRm = {};\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.filterPanel = this.formBuilder.group({\n        blId: [null],\n        flId: [null],\n        rmId: [null],\n        eqId: [null],\n        planId: [null],\n        fromDate: [null, [Validators.required, this.checkDateValidation()]],\n        toDate: [null, [Validators.required, this.checkDateValidation()]]\n      });\n    }\n    ngOnInit() {\n      this.loadequipments();\n      this.loadPlansData();\n      let month = new Date().getMonth();\n      this.maxDate = new Date(new Date().setMonth(month + 3));\n      var date = new Date();\n      var nextDate = new Date(new Date().setMonth(month + 1));\n      this.setDefaultDates(date, nextDate);\n    }\n    setDefaultDates(fromDate, toDate) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          fromDate: fromDate,\n          toDate: toDate\n        });\n      }, 0);\n    }\n    onSelectBlCode($event) {\n      if ($event.blId != null && $event.blId != '') {\n        this.selectedBl = $event;\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null\n        });\n        this.selectedFl = {};\n      } else {\n        this.selectedBl = {};\n        this.selectedFl = {};\n      }\n    }\n    onSelectFlCode($event) {\n      if ($event.flId != null && $event.flId != '') {\n        this.selectedFl = $event;\n        const blData = {\n          blId: $event.blId,\n          blNameString: $event.blNameString\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        this.selectedRm = {};\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            rmId: null\n          });\n        }, 0);\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: $event.blId,\n            rmId: null\n          });\n        }, 10);\n      } else {\n        this.selectedFl = {};\n        this.selectedRm = {};\n      }\n    }\n    onSelectRmCode($event) {\n      if ($event.rmId != null && $event.rmId != '') {\n        this.selectedRm = $event;\n        const blData = {\n          blId: $event.blId,\n          blNameString: $event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        const flData = {\n          flId: $event.flId,\n          flNameString: $event.flNameString,\n          blId: $event.blId,\n          blNameString: $event.blNameString\n        };\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: $event.blId,\n            flId: $event.flId\n          });\n        }, 0);\n      } else {}\n    }\n    onSelectAsset($event) {\n      if ($event.eqId != null && $event.eqId != '') {\n        if ($event.blId) {\n          this.getBlById($event.blId);\n          if ($event.flId != null) {\n            this.getFlById($event.flId);\n          }\n          if ($event != null) {\n            this.getRmById($event.rmId);\n          }\n        }\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: $event.blId,\n            flId: $event.flId,\n            rmId: $event.rmId\n          });\n        }, 0);\n      } else {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: null,\n            flId: null,\n            rmId: null\n          });\n        }, 0);\n      }\n    }\n    loadequipments() {\n      this.eqService.getAllEquipments().subscribe(res => {\n        if (res.status != 202) {\n          this.eqData = res;\n          this.eqData.unshift(new Object({\n            eqCode: \"Make a selection\",\n            description: '',\n            eqId: null\n          }));\n        }\n      });\n    }\n    loadPlansData() {\n      this.ppmPlanService.getAllPlans().subscribe(res => {\n        if (res.status != 202) {\n          this.planList = res;\n          this.planList.unshift(new Object({\n            planId: null,\n            planName: \"Make a selection\"\n          }));\n        } else {\n          this.planList = [];\n        }\n      });\n    }\n    checkDateValidation() {\n      return control => {\n        if (control.value !== undefined && control.value != null) {\n          if (this.filterPanel.controls['toDate'].value != null && this.filterPanel.controls['fromDate'].value != null) {\n            this.errorMsg = '';\n            this.filterPanel.controls['fromDate'].setErrors(null);\n            this.filterPanel.controls['toDate'].setErrors(null);\n            this.filterPanel.clearAsyncValidators();\n            this.filterPanel.updateValueAndValidity();\n            var dateFrom = new Date(this.filterPanel.controls['fromDate'].value);\n            var dateTo = new Date(this.filterPanel.controls['toDate'].value);\n            if (dateFrom.getTime() >= dateTo.getTime() && this.filterPanel.controls['toDate'].value != null) {\n              this.filterPanel.controls['fromDate'].setErrors({\n                'incorrect': true\n              });\n              this.filterPanel.updateValueAndValidity();\n              this.errorMsg = ' date end should be greater than date start.';\n              return {\n                'incorrect': true\n              };\n            }\n          }\n          return null;\n        }\n        return null;\n      };\n    }\n    onSearch() {\n      this.spinner.show();\n      this.filterData = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        rmId: this.filterPanel.controls.rmId.value,\n        eqId: this.filterPanel.controls.eqId.value,\n        planId: this.filterPanel.controls.planId.value ? this.filterPanel.controls.planId.value : 0,\n        fromDate: this.datePipe.transform(this.filterPanel.controls.fromDate.value, \"yyyy-MM-dd\"),\n        toDate: this.datePipe.transform(this.filterPanel.controls.toDate.value, \"yyyy-MM-dd\")\n      };\n      this.requestsList = [];\n      this.planScheduleSrv.getRequestsList(this.filterData).subscribe(res => {\n        this.requestsList = res;\n        this.spinner.hide();\n      });\n    }\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    onGenerate() {\n      this.spinner.show();\n      this.requestsList = [];\n      this.filterData = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        rmId: this.filterPanel.controls.rmId.value,\n        eqId: this.filterPanel.controls.eqId.value,\n        planId: this.filterPanel.controls.planId.value ? this.filterPanel.controls.planId.value : 0,\n        fromDate: this.datePipe.transform(this.filterPanel.controls.fromDate.value, \"yyyy-MM-dd\"),\n        toDate: this.datePipe.transform(this.filterPanel.controls.toDate.value, \"yyyy-MM-dd\")\n      };\n      this.planScheduleSrv.generateRequests(this.filterData).subscribe(res => {\n        if (res.length) {\n          this.requestsList = res;\n          this.spinner.hide();\n        } else {\n          this.spinner.hide();\n        }\n      });\n    }\n    onClear() {\n      this.filterPanel.reset();\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.selectedRm = {};\n      this.requestsList = [];\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blService.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blService.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.updateFlList(this.selectedFl);\n      });\n    }\n    scrollToEndRm() {\n      this.offsetRm = this.limitRm;\n      this.limitRm += this.scrollLimit;\n      this.filterCriteria.limit = this.limitRm;\n      this.filterCriteria.offset = this.offsetRm;\n      this.blService.getALLRoomByScroll(this.filterCriteria).subscribe(res => {\n        this.enumRM = res;\n        this.updateRmList(this.selectedRm);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    searchRm(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"rmName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndRm();\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      if (flData.flId) {\n        this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n        this.enumFL = this.enumFL.filter(t => t.flId !== null);\n        this.enumFL.unshift(flData);\n      }\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateRmList(rmData) {\n      if (rmData.rmId) {\n        this.enumRM = this.enumRM.filter(t => t.rmId !== rmData.rmId);\n        this.enumRM = this.enumRM.filter(t => t.rmId !== null);\n        this.enumRM.unshift(rmData);\n      }\n      this.enumRM.unshift(new RoomFilterInputDTO(null, 'Make a selection', null, null));\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    onOpenRm() {\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      if (this.selectedFl.flId) {\n        this.filterCriteria = {\n          fieldName: \"fl.flId\",\n          value: this.selectedFl.flId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndRm();\n    }\n    getBlById(blId) {\n      this.blService.getBlById(blId).subscribe(res => {\n        const blData = this.createBlData(res.bl);\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n      });\n    }\n    getFlById(flId) {\n      this.blService.getFlById(flId).subscribe(res => {\n        const flData = this.createFlData(res);\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n      });\n    }\n    getRmById(rmId) {\n      this.blService.getRmById(rmId).subscribe(res => {\n        const rmData = this.createRmData(res.rm);\n        this.selectedRm = rmData;\n        this.updateRmList(rmData);\n      });\n    }\n    createBlData(bl) {\n      const blData = {\n        blId: bl.blId,\n        blNameString: bl.blName != null ? bl.blCode + \" - \" + bl.blName : bl.blCode,\n        site: null\n      };\n      return blData;\n    }\n    createFlData(fl) {\n      const flData = {\n        flId: fl.flId,\n        flNameString: fl.flName != null ? fl.flCode + \" - \" + fl.flName : fl.flCode,\n        blId: fl.blId,\n        blNameString: fl.bl.blName != null ? fl.bl.blCode + \" - \" + fl.bl.blName : fl.bl.blCode\n      };\n      return flData;\n    }\n    createRmData(rm) {\n      const rmData = {\n        rmId: rm.rmId,\n        rmNameString: rm.rmName != null ? rm.rmCode + \" - \" + rm.rmName : rm.rmCode,\n        flId: rm.flId,\n        blId: rm.blId\n      };\n      return rmData;\n    }\n    static #_ = this.ɵfac = function GenerateRequestsComponent_Factory(t) {\n      return new (t || GenerateRequestsComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.EquipmentService), i0.ɵɵdirectiveInject(i4.PpmPlanService), i0.ɵɵdirectiveInject(i5.DatePipe), i0.ɵɵdirectiveInject(i6.PlanScheduleService), i0.ɵɵdirectiveInject(i7.NgxSpinnerService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GenerateRequestsComponent,\n      selectors: [[\"app-generate-requests\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 69,\n      vars: 32,\n      consts: [[\"pTemplate\", \"header\"], [2, \"display\", \"flex\"], [1, \"card\", \"filter-container\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"25%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"fromDate\", \"inputId\", \"icon\", 3, \"minDate\", \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"toDate\", \"inputId\", \"icon\", 3, \"showIcon\", \"maxDate\"], [4, \"ngIf\"], [\"width\", \"25%\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\", \"open\", \"scrollToEnd\", \"search\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"rmId\", \"bindLabel\", \"rmNameString\", \"bindValue\", \"rmId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"bindLabel\", \"eqCode\", \"bindValue\", \"eqId\", \"formControlName\", \"eqId\", 1, \"ng-select-dropdown\", 3, \"items\", \"clearable\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"planId\", \"bindLabel\", \"planName\", \"bindValue\", \"planId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [1, \"input-label-custom\", 2, \"display\", \"flex\", \"flex-direction\", \"row\", \"justify-content\", \"end\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull-right\", 2, \"width\", \"60px\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Generate\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"width\", \"60px\", \"margin\", \"0px 5px 0px 10px\", 3, \"disabled\", \"click\"], [1, \"card\", \"result-container\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", 3, \"value\", \"paginator\", \"rows\", \"scrollable\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\"], [\"tt\", \"\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"square-jelly-box\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"], [1, \"header-container\"], [1, \"header-label\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [\"pSortableColumn\", \"wrId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"wrId\"], [\"type\", \"text\", \"field\", \"wrId\", \"display\", \"menu\"], [\"pSortableColumn\", \"dateRequested\"], [\"field\", \"dateRequested\"], [\"type\", \"text\", \"field\", \"dateRequested\", \"display\", \"menu\"], [\"pSortableColumn\", \"escDateResponded\"], [\"field\", \"escDateResponded\"], [\"type\", \"text\", \"field\", \"escDateResponded\", \"display\", \"menu\"], [\"pSortableColumn\", \"escDateCompleted\"], [\"field\", \"escDateCompleted\"], [\"type\", \"text\", \"field\", \"escDateCompleted\", \"display\", \"menu\"], [\"pSortableColumn\", \"building\"], [\"field\", \"building\"], [\"type\", \"text\", \"field\", \"building\", \"display\", \"menu\"], [\"pSortableColumn\", \"floor\"], [\"field\", \"floor\"], [\"type\", \"text\", \"field\", \"floor\", \"display\", \"menu\"], [\"pSortableColumn\", \"room\"], [\"field\", \"room\"], [\"type\", \"text\", \"field\", \"room\", \"display\", \"menu\"], [\"pSortableColumn\", \"eqId\"], [\"field\", \"eqId\"], [\"type\", \"text\", \"field\", \"eqId\", \"display\", \"menu\"], [3, \"pSelectableRow\"]],\n      template: function GenerateRequestsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\");\n          i0.ɵɵtemplate(1, GenerateRequestsComponent_ng_template_1_Template, 4, 0, \"ng-template\", 0);\n          i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"form\", 3)(5, \"table\", 4)(6, \"tr\")(7, \"td\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"label\", 9);\n          i0.ɵɵtext(12, \"From Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"p-calendar\", 10);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(14, \"tr\")(15, \"td\", 5)(16, \"div\", 6)(17, \"div\", 7)(18, \"div\", 8)(19, \"label\", 9);\n          i0.ɵɵtext(20, \"To Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"p-calendar\", 11);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(22, \"tr\")(23, \"td\", 5);\n          i0.ɵɵtemplate(24, GenerateRequestsComponent_div_24_Template, 3, 1, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"tr\")(26, \"td\", 13)(27, \"div\", 6)(28, \"label\", 14);\n          i0.ɵɵtext(29, \"Building\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"ng-select\", 15);\n          i0.ɵɵlistener(\"change\", function GenerateRequestsComponent_Template_ng_select_change_30_listener($event) {\n            return ctx.onSelectBlCode($event);\n          })(\"scrollToEnd\", function GenerateRequestsComponent_Template_ng_select_scrollToEnd_30_listener() {\n            return ctx.scrollToEndBl();\n          })(\"search\", function GenerateRequestsComponent_Template_ng_select_search_30_listener($event) {\n            return ctx.searchBl($event);\n          })(\"open\", function GenerateRequestsComponent_Template_ng_select_open_30_listener() {\n            return ctx.onOpenBl();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(31, \"tr\")(32, \"td\", 13)(33, \"div\", 6)(34, \"label\", 14);\n          i0.ɵɵtext(35, \"Floor \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"ng-select\", 16);\n          i0.ɵɵlistener(\"change\", function GenerateRequestsComponent_Template_ng_select_change_36_listener($event) {\n            return ctx.onSelectFlCode($event);\n          })(\"open\", function GenerateRequestsComponent_Template_ng_select_open_36_listener() {\n            return ctx.onOpenFl();\n          })(\"scrollToEnd\", function GenerateRequestsComponent_Template_ng_select_scrollToEnd_36_listener() {\n            return ctx.scrollToEndFl();\n          })(\"search\", function GenerateRequestsComponent_Template_ng_select_search_36_listener($event) {\n            return ctx.searchFl($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(37, \"tr\")(38, \"td\", 13)(39, \"div\", 6)(40, \"label\", 14);\n          i0.ɵɵtext(41, \"Room \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"ng-select\", 17);\n          i0.ɵɵlistener(\"change\", function GenerateRequestsComponent_Template_ng_select_change_42_listener($event) {\n            return ctx.onSelectRmCode($event);\n          })(\"scrollToEnd\", function GenerateRequestsComponent_Template_ng_select_scrollToEnd_42_listener() {\n            return ctx.scrollToEndRm();\n          })(\"search\", function GenerateRequestsComponent_Template_ng_select_search_42_listener($event) {\n            return ctx.searchRm($event);\n          })(\"open\", function GenerateRequestsComponent_Template_ng_select_open_42_listener() {\n            return ctx.onOpenRm();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(43, \"tr\")(44, \"td\", 5)(45, \"div\", 6)(46, \"label\", 14);\n          i0.ɵɵtext(47, \"Asset\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"ng-select\", 18);\n          i0.ɵɵlistener(\"change\", function GenerateRequestsComponent_Template_ng_select_change_48_listener($event) {\n            return ctx.onSelectAsset($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(49, \"tr\")(50, \"td\", 5)(51, \"div\", 6)(52, \"label\", 14);\n          i0.ɵɵtext(53, \"Plan Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(54, \"ng-select\", 19);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(55, \"tr\")(56, \"td\", 5)(57, \"div\", 20)(58, \"button\", 21);\n          i0.ɵɵlistener(\"click\", function GenerateRequestsComponent_Template_button_click_58_listener() {\n            return ctx.onClear();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(59, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function GenerateRequestsComponent_Template_button_click_59_listener() {\n            return ctx.onGenerate();\n          });\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵelementStart(60, \"div\", 23)(61, \"p-table\", 24, 25);\n          i0.ɵɵtemplate(63, GenerateRequestsComponent_ng_template_63_Template, 73, 0, \"ng-template\", 0);\n          i0.ɵɵtemplate(64, GenerateRequestsComponent_ng_template_64_Template, 23, 24, \"ng-template\", 26);\n          i0.ɵɵtemplate(65, GenerateRequestsComponent_ng_template_65_Template, 3, 1, \"ng-template\", 27);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(66, \"ngx-spinner\", 28)(67, \"p\", 29);\n          i0.ɵɵtext(68, \" Loading... \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"minDate\", ctx.today)(\"showIcon\", false);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"showIcon\", false)(\"maxDate\", ctx.maxDate);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMsg.length > 0);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumBL);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumFL);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumRM)(\"searchable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"items\", ctx.eqData)(\"clearable\", false)(\"searchable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.planList)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ctx.requestsList)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"scrollable\", true)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(31, _c0))(\"rowHover\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"fullScreen\", true);\n        }\n      },\n      dependencies: [i5.NgIf, i8.PrimeTemplate, i9.Table, i9.SortableColumn, i9.SelectableRow, i9.SortIcon, i9.ColumnFilter, i10.Calendar, i11.ButtonDirective, i12.Panel, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i13.NgSelectComponent, i7.NgxSpinnerComponent, i5.DatePipe],\n      styles: [\".ng-select.ng-select-single .ng-select-container .ng-value-container, .ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]   .ng-value-container[_ngcontent-%COMP%]   .ng-value[_ngcontent-%COMP%]{overflow:hidden!important;text-overflow:ellipsis!important;white-space:nowrap!important;max-width:250px!important}.header-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%}.header-button[_ngcontent-%COMP%]{margin-left:auto}.filter-container[_ngcontent-%COMP%]{width:20%;overflow:scroll}.result-container[_ngcontent-%COMP%]{width:80%}@media screen and (min-width: 600px) and (max-width: 959px){.filter-container[_ngcontent-%COMP%]{width:40%;overflow:scroll}.result-container[_ngcontent-%COMP%]{width:60%}}\"]\n    });\n  }\n  return GenerateRequestsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}