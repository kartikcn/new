{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport class CityService {\n  constructor(cityService, cityDetailService) {\n    this.cityService = cityService;\n    this.cityDetailService = cityDetailService;\n  }\n  getCityList(data) {\n    return this.cityService.search('city', 'search', data);\n  }\n  getCityById(id) {\n    return this.cityService.getSingleById('city', 'getCity', id);\n  }\n  getALLCity() {\n    return this.cityService.getAll(\"city\", \"list\");\n  }\n  saveCity(city) {\n    return this.cityDetailService.add('city', 'saveCity', city);\n  }\n  validateCity(state) {\n    return this.cityDetailService.add('city', 'check', state);\n  }\n  static #_ = this.ɵfac = function CityService_Factory(t) {\n    return new (t || CityService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CityService,\n    factory: CityService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CityService","constructor","cityService","cityDetailService","getCityList","data","search","getCityById","id","getSingleById","getALLCity","getAll","saveCity","city","add","validateCity","state","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\location\\services\\city.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\nimport { CityList } from '../model/city-list.model';\nimport { CityFilterInput } from '../widgets/city-list/cityFilterInput.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n\n  constructor(\n    private cityService: DataService<any>,\n    private cityDetailService: DataService<CityList>\n    \n  ) { }\n\n  public getCityList(data: any){//CityFilterInput\n    return this.cityService.search('city', 'search', data);\n  }\n  public getCityById(id:any){\n    return this.cityService.getSingleById('city', 'getCity',id);\n  }\n\n  public getALLCity() {\n    return this.cityService.getAll(\"city\", \"list\");\n  }\n\n  public saveCity(city: any): Observable<any> {//CityList\n    return this.cityDetailService.add('city', 'saveCity', city);\n  }\n\n  public validateCity(state: any) {\n    return this.cityDetailService.add('city', 'check', state);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAEtBC,YACUC,WAA6B,EAC7BC,iBAAwC;IADxC,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,iBAAiB,GAAjBA,iBAAiB;EAEvB;EAEGC,WAAWA,CAACC,IAAS;IAC1B,OAAO,IAAI,CAACH,WAAW,CAACI,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAED,IAAI,CAAC;EACxD;EACOE,WAAWA,CAACC,EAAM;IACvB,OAAO,IAAI,CAACN,WAAW,CAACO,aAAa,CAAC,MAAM,EAAE,SAAS,EAACD,EAAE,CAAC;EAC7D;EAEOE,UAAUA,CAAA;IACf,OAAO,IAAI,CAACR,WAAW,CAACS,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC;EAChD;EAEOC,QAAQA,CAACC,IAAS;IACvB,OAAO,IAAI,CAACV,iBAAiB,CAACW,GAAG,CAAC,MAAM,EAAE,UAAU,EAAED,IAAI,CAAC;EAC7D;EAEOE,YAAYA,CAACC,KAAU;IAC5B,OAAO,IAAI,CAACb,iBAAiB,CAACW,GAAG,CAAC,MAAM,EAAE,OAAO,EAAEE,KAAK,CAAC;EAC3D;EAAC,QAAAC,CAAA,G;qBAzBUjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}