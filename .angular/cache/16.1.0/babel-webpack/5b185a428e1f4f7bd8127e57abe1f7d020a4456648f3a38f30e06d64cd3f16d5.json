{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-zorro-antd/table\";\nimport * as i4 from \"ng-zorro-antd/input\";\nimport * as i5 from \"primeng/calendar\";\nimport * as i6 from \"../../../../directive/directive/trim-input.directive\";\nfunction AddHolidayFormComponent_input_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 9);\n  }\n}\nfunction AddHolidayFormComponent_p_calendar_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-calendar\", 10);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"showIcon\", false);\n  }\n}\nexport let AddHolidayFormComponent = /*#__PURE__*/(() => {\n  class AddHolidayFormComponent {\n    constructor(formBuilder, datePipe) {\n      this.formBuilder = formBuilder;\n      this.datePipe = datePipe;\n      this.subscriptions = [];\n      this.newRecord = true;\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.holidayFormPanel = this.formBuilder.group({\n        holidayDate: ['', [Validators.required]],\n        holidaysId: [0],\n        holidayDesc: ['', [Validators.required]]\n      });\n      this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.holidayFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {}\n    isValid() {\n      return this.getValidationErrors().length === 0;\n    }\n    getValidationErrors() {\n      const me = this;\n      const validationErros = [];\n      return validationErros;\n    }\n    /// End Of Form Validation Related Code\n    get value() {\n      const holidayDetails = {\n        holidayDate: this.holidayFormPanel.controls.holidayDate.value,\n        holidaysId: this.holidayFormPanel.controls.holidaysId.value,\n        holidayDesc: this.holidayFormPanel.controls.holidayDesc.value\n      };\n      return holidayDetails;\n    }\n    set value(value) {\n      setTimeout(() => {\n        this.holidayFormPanel.patchValue({\n          holidayDate: value.holidayDate != null ? this.setDate(value.holidayDate) : '',\n          holidaysId: value.holidaysId,\n          holidayDesc: value.holidayDesc\n        });\n      });\n      this.onChange(value);\n      this.onTouched();\n    }\n    setDate(date) {\n      var val = new Date(date);\n      var userTimezoneOffset = val.getTimezoneOffset() * 60000;\n      let fdate = new Date(val.getTime() - userTimezoneOffset);\n      return this.datePipe.transform(fdate, 'dd MMM yyyy');\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.holidayFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    // communicate the inner form validation to the parent form\n    validate(_) {\n      return this.holidayFormPanel.valid ? null : {\n        holidayFormPanel: {\n          valid: false\n        }\n      };\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    static #_ = this.ɵfac = function AddHolidayFormComponent_Factory(t) {\n      return new (t || AddHolidayFormComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.DatePipe));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddHolidayFormComponent,\n      selectors: [[\"app-add-holiday-form\"]],\n      inputs: {\n        isNew: \"isNew\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddHolidayFormComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddHolidayFormComponent),\n        multi: true\n      }])],\n      decls: 17,\n      vars: 3,\n      consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"class\", \"form-control\", \"name\", \"holidayDate\", \"formControlName\", \"holidayDate\", 4, \"ngIf\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"disabled\", \"!isNew\", \"name\", \"holidayDate\", \"formControlName\", \"holidayDate\", \"inputId\", \"icon\", 3, \"showIcon\", 4, \"ngIf\"], [\"name\", \"holidayDesc\", \"formControlName\", \"holidayDesc\", \"rows\", \"2\", \"nz-input\", \"\", \"maxlength\", \"128\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [\"type\", \"text\", \"name\", \"holidayDate\", \"formControlName\", \"holidayDate\", 1, \"form-control\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"disabled\", \"!isNew\", \"name\", \"holidayDate\", \"formControlName\", \"holidayDate\", \"inputId\", \"icon\", 3, \"showIcon\"]],\n      template: function AddHolidayFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\")(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5);\n          i0.ɵɵtext(8, \"Holiday Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, AddHolidayFormComponent_input_9_Template, 1, 0, \"input\", 6);\n          i0.ɵɵtemplate(10, AddHolidayFormComponent_p_calendar_10_Template, 1, 1, \"p-calendar\", 7);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(11, \"tr\")(12, \"td\")(13, \"div\", 2)(14, \"label\", 5);\n          i0.ɵɵtext(15, \"Holiday Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"textarea\", 8);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.holidayFormPanel);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isNew);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isNew);\n        }\n      },\n      dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i3.NzTableCellDirective, i3.NzTrDirective, i4.NzInputDirective, i5.Calendar, i6.TrimInputDirective]\n    });\n  }\n  return AddHolidayFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}