{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nconst _c0 = [\"caretElm\"];\nfunction TooltipContentComponent_span_4_ng_template_1_Template(rf, ctx) {}\nconst _c1 = function (a0) {\n  return {\n    model: a0\n  };\n};\nfunction TooltipContentComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, TooltipContentComponent_span_4_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.context));\n  }\n}\nfunction TooltipContentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.title, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction LegendComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 4)(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\nfunction LegendComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"ngx-charts-legend-entry\", 7);\n    i0.ɵɵlistener(\"select\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.labelClick.emit($event));\n    })(\"activate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate($event));\n    })(\"deactivate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", entry_r2.label)(\"formattedLabel\", entry_r2.formattedLabel)(\"color\", entry_r2.color)(\"isActive\", ctx_r1.isActive(entry_r2));\n  }\n}\nfunction ChartComponent_ngx_charts_scale_legend_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelement(0, \"ngx-charts-scale-legend\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"valueRange\", ctx_r0.legendOptions.domain)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth);\n  }\n}\nfunction ChartComponent_ngx_charts_legend_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"ngx-charts-legend\", 5);\n    i0.ɵɵlistener(\"labelClick\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.legendLabelClick.emit($event));\n    })(\"labelActivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.legendLabelActivate.emit($event));\n    })(\"labelDeactivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.legendLabelDeactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r1.legendOptions && ctx_r1.legendOptions.position === ctx_r1.LegendPosition.Below)(\"data\", ctx_r1.legendOptions.domain)(\"title\", ctx_r1.legendOptions.title)(\"colors\", ctx_r1.legendOptions.colors)(\"height\", ctx_r1.view[1])(\"width\", ctx_r1.legendWidth)(\"activeEntries\", ctx_r1.activeEntries);\n  }\n}\nconst _c2 = [\"*\"];\nconst _c3 = [\"ngx-charts-axis-label\", \"\"];\nconst _c4 = [\"ticksel\"];\nconst _c5 = [\"ngx-charts-x-axis-ticks\", \"\"];\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tickLine_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    i0.ɵɵattribute(\"y\", i_r15 * 12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tickLine_r14, \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template, 2, 2, \"tspan\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r12 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", tickLines_r12);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵtemplate(0, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template, 2, 1, \"ng-container\", 4);\n  }\n  if (rf & 2) {\n    const tick_r3 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.tickChunks(tick_r3));\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tickFormatted_r5 = i0.ɵɵnextContext().ngIf;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.tickTrim(tickFormatted_r5), \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 5);\n    i0.ɵɵtemplate(4, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickFormatted_r5 = ctx.ngIf;\n    const _r7 = i0.ɵɵreference(6);\n    const _r9 = i0.ɵɵreference(8);\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickFormatted_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"text-anchor\", ctx_r4.textAnchor)(\"transform\", ctx_r4.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isWrapTicksSupported)(\"ngIfThen\", _r7)(\"ngIfElse\", _r9);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template, 9, 6, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.tickTransform(tick_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tickFormat(tick_r3));\n  }\n}\nfunction XAxisTicksComponent__svg_g_3__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r19.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", -ctx_r19.gridLineHeight);\n  }\n}\nfunction XAxisTicksComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_3__svg_g_1_Template, 2, 2, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r18 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.tickTransform(tick_r18));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGridLines);\n  }\n}\nconst _c6 = [\"ngx-charts-x-axis\", \"\"];\nfunction XAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function XAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.emitTicksHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"rotateTicks\", ctx_r0.rotateTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.xScale)(\"orient\", ctx_r0.xOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineHeight\", ctx_r0.dims.height)(\"width\", ctx_r0.dims.width)(\"tickValues\", ctx_r0.ticks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction XAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c7 = [\"ngx-charts-y-axis-ticks\", \"\"];\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tickLine_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r16 = i0.ɵɵnextContext(6);\n    i0.ɵɵattribute(\"y\", i_r18 * (8 + ctx_r16.tickSpacing));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tickLine_r17, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template, 2, 2, \"tspan\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r14 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", tickLines_r14);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r14 = ctx.ngIf;\n    i0.ɵɵnextContext(2);\n    const _r11 = i0.ɵɵreference(8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tickLines_r14.length > 1)(\"ngIfElse\", _r11);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵtemplate(0, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template, 2, 2, \"ng-container\", 5);\n  }\n  if (rf & 2) {\n    const tick_r5 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.tickChunks(tick_r5));\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tickFormatted_r7 = i0.ɵɵnextContext().ngIf;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.tickTrim(tickFormatted_r7), \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 6);\n    i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickFormatted_r7 = ctx.ngIf;\n    const _r9 = i0.ɵɵreference(6);\n    const _r11 = i0.ɵɵreference(8);\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickFormatted_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"dy\", ctx_r6.dy)(\"x\", ctx_r6.x1)(\"y\", ctx_r6.y1)(\"text-anchor\", ctx_r6.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.wrapTicks)(\"ngIfThen\", _r9)(\"ngIfElse\", _r11);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template, 9, 10, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transform(tick_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tickFormat(tick_r5));\n  }\n}\nfunction YAxisTicksComponent__svg_path_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"d\", ctx_r2.referenceAreaPath)(\"transform\", ctx_r2.gridLineTransform());\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", ctx_r24.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", -ctx_r25.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template, 1, 1, \"line\", 14);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template, 1, 1, \"line\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r23.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r23.orient === ctx_r23.Orientation.Left);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r23.orient === ctx_r23.Orientation.Right);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1_Template, 3, 3, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r22 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r3.transform(tick_r22));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showGridLines);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const refLine_r26 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r28 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r28.tickTrim(ctx_r28.tickFormat(refLine_r26.value)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"dy\", ctx_r28.dy)(\"y\", -6)(\"x\", ctx_r28.gridLineWidth)(\"text-anchor\", ctx_r28.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", refLine_r26.name, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 16);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template, 5, 6, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const refLine_r26 = i0.ɵɵnextContext().$implicit;\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r27.transform(refLine_r26.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x2\", ctx_r27.gridLineWidth)(\"transform\", ctx_r27.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r27.showRefLabels);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_5__svg_g_1_Template, 3, 4, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showRefLines);\n  }\n}\nconst _c8 = [\"ngx-charts-y-axis\", \"\"];\nfunction YAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.emitTicksWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickValues\", ctx_r0.ticks)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.yScale)(\"orient\", ctx_r0.yOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineWidth\", ctx_r0.dims.width)(\"referenceLines\", ctx_r0.referenceLines)(\"showRefLines\", ctx_r0.showRefLines)(\"showRefLabels\", ctx_r0.showRefLabels)(\"height\", ctx_r0.dims.height)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction YAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.yOrient)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c9 = [\"ngx-charts-svg-linear-gradient\", \"\"];\nfunction SvgLinearGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c10 = [\"ngx-charts-circle\", \"\"];\nconst _c11 = [\"ngx-charts-circle-series\", \"\"];\nfunction CircleSeriesComponent__svg_g_0__svg_rect_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\nfunction CircleSeriesComponent__svg_g_0__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"x\", ctx_r2.circle.cx - ctx_r2.circle.radius)(\"y\", ctx_r2.circle.cy)(\"width\", ctx_r2.circle.radius * 2)(\"height\", ctx_r2.circle.height)(\"fill\", ctx_r2.gradientFill);\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    name: a0\n  };\n};\nfunction CircleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n    i0.ɵɵelement(2, \"g\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CircleSeriesComponent__svg_g_0__svg_rect_3_Template, 1, 6, \"rect\", 2);\n    i0.ɵɵtemplate(4, CircleSeriesComponent__svg_g_0__svg_rect_4_Template, 1, 5, \"rect\", 2);\n    i0.ɵɵelementStart(5, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CircleSeriesComponent__svg_g_0_Template__svg_g_select_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onClick(ctx_r3.circle.data));\n    })(\"activate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_activate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activateCircle());\n    })(\"deactivate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_deactivate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivateCircle());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.circle.gradientStops);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", ctx_r0.isActive(i0.ɵɵpureFunction1(20, _c12, ctx_r0.circle.seriesName)));\n    i0.ɵɵproperty(\"cx\", ctx_r0.circle.cx)(\"cy\", ctx_r0.circle.cy)(\"r\", ctx_r0.circle.radius)(\"fill\", ctx_r0.circle.color)(\"pointerEvents\", ctx_r0.circle.value === 0 ? \"none\" : \"all\")(\"data\", ctx_r0.circle.value)(\"classNames\", ctx_r0.circle.classNames)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(ctx_r0.circle))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", ctx_r0.circle.data);\n  }\n}\nconst _c13 = [\"ngx-charts-grid-panel\", \"\"];\nconst _c14 = [\"ngx-charts-grid-panel-series\", \"\"];\nfunction GridPanelSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 1);\n  }\n  if (rf & 2) {\n    const gridPanel_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"grid-panel\", true)(\"odd\", gridPanel_r1.class === \"odd\")(\"even\", gridPanel_r1.class === \"even\");\n    i0.ɵɵproperty(\"height\", gridPanel_r1.height)(\"width\", gridPanel_r1.width)(\"x\", gridPanel_r1.x)(\"y\", gridPanel_r1.y);\n  }\n}\nconst _c15 = [\"ngx-charts-svg-radial-gradient\", \"\"];\nfunction SvgRadialGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c16 = [\"ngx-charts-area\", \"\"];\nfunction AreaComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c17 = [\"ngx-charts-count-up\", \"\"];\nconst _c18 = [\"tooltipAnchor\"];\nconst _c19 = [\"ngx-charts-tooltip-area\", \"\"];\nfunction TooltipArea__svg_ng_template_2__xhtml_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tooltipItem_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", tooltipItem_r5.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.getToolTipText(tooltipItem_r5), \" \");\n  }\n}\nfunction TooltipArea__svg_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TooltipArea__svg_ng_template_2__xhtml_div_1_Template, 3, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r3 = ctx.model;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", model_r3);\n  }\n}\nconst _c20 = [\"ngx-charts-timeline\", \"\"];\nfunction AdvancedLegendComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", ctx_r0.roundedTotal)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.valueFormatting ? ctx_r1.valueFormatting(ctx_r1.roundedTotal) : ctx_r1.defaultValueFormatting(ctx_r1.roundedTotal), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", legendItem_r3._value)(\"valueFormatting\", ctx_r4.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.valueFormatting ? ctx_r5.valueFormatting(legendItem_r3.value) : ctx_r5.defaultValueFormatting(legendItem_r3.value), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 18);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", legendItem_r3.percentage)(\"countSuffix\", \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", legendItem_r3.percentage.toLocaleString(), \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"mouseenter\", function AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.activate.emit(legendItem_r3.data));\n    })(\"mouseleave\", function AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.deactivate.emit(legendItem_r3.data));\n    })(\"click\", function AdvancedLegendComponent_div_7_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.select.emit(legendItem_r3.data));\n    });\n    i0.ɵɵelement(1, \"div\", 10);\n    i0.ɵɵtemplate(2, AdvancedLegendComponent_div_7_div_2_Template, 1, 2, \"div\", 11);\n    i0.ɵɵtemplate(3, AdvancedLegendComponent_div_7_div_3_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AdvancedLegendComponent_div_7_div_6_Template, 1, 2, \"div\", 14);\n    i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_div_7_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"border-left-color\", legendItem_r3.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(legendItem_r3.displayLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n  }\n}\nconst _c21 = [\"ngx-charts-area-series\", \"\"];\nconst _c22 = [\"tooltipTemplate\"];\nconst _c23 = [\"seriesTooltipTemplate\"];\nfunction AreaChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"baseValue\", ctx_r2.baseValue)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r2.activeEntries)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartComponent__svg_g_9__svg_g_2_Template, 2, 9, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\nfunction AreaChartComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"baseValue\", ctx_r19.baseValue)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nconst _c24 = function (a0, a1) {\n  return [a0, a1];\n};\nfunction AreaChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"activeEntries\", ctx_r2.activeEntries)(\"gradient\", ctx_r2.gradient)(\"normalized\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"showPercentage\", true)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"normalized\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartNormalizedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nconst _c25 = \".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\";\nfunction AreaChartStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"activeEntries\", ctx_r2.activeEntries)(\"stacked\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 12);\n    i0.ɵɵlistener(\"select\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartStackedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"stacked\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 13);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartStackedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartStackedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nconst _c26 = [\"ngx-charts-bar\", \"\"];\nfunction BarComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c27 = [\"ngx-charts-bar-label\", \"\"];\nconst _c28 = [\"ngx-charts-series-horizontal\", \"\"];\nfunction SeriesHorizontal__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesHorizontal__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.click($event));\n    })(\"activate\", function SeriesHorizontal__svg_g_0_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate.emit($event));\n    })(\"deactivate\", function SeriesHorizontal__svg_g_0_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"width\", bar_r2.width)(\"height\", bar_r2.height)(\"x\", bar_r2.x)(\"y\", bar_r2.y)(\"fill\", bar_r2.color)(\"stops\", bar_r2.gradientStops)(\"data\", bar_r2.data)(\"orientation\", ctx_r0.barOrientation.Horizontal)(\"roundEdges\", bar_r2.roundEdges)(\"gradient\", ctx_r0.gradient)(\"isActive\", ctx_r0.isActive(bar_r2.data))(\"ariaLabel\", bar_r2.ariaLabel)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.tooltipPlacement)(\"tooltipType\", ctx_r0.tooltipType)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : bar_r2.tooltipText)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", bar_r2.data)(\"noBarWhenZero\", ctx_r0.noBarWhenZero);\n  }\n}\nfunction SeriesHorizontal__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesHorizontal__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r9 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.dataLabelWidthChanged.emit({\n        size: $event,\n        index: i_r9\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r8.x)(\"barY\", b_r8.y)(\"barWidth\", b_r8.width)(\"barHeight\", b_r8.height)(\"value\", b_r8.total)(\"valueFormatting\", ctx_r7.dataLabelFormatting)(\"orientation\", ctx_r7.barOrientation.Horizontal);\n  }\n}\nfunction SeriesHorizontal__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\nfunction BarHorizontalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarHorizontalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.valueScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxWidthChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.valueScale)(\"activeEntries\", ctx_r8.activeEntries)(\"yScale\", ctx_r8.innerScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_5__svg_g_1_Template, 2, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxWidthChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r16.valueScale)(\"activeEntries\", ctx_r16.activeEntries)(\"yScale\", ctx_r16.innerScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_6__svg_g_1_Template, 2, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event, group_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, group_r15));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event, group_r15));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event, group_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxWidthChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"activeEntries\", ctx_r8.activeEntries)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxWidthChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"activeEntries\", ctx_r16.activeEntries)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c29 = [\"ngx-charts-series-vertical\", \"\"];\nfunction SeriesVerticalComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx_r3.animations)(\"width\", bar_r4.width)(\"height\", bar_r4.height)(\"x\", bar_r4.x)(\"y\", bar_r4.y)(\"fill\", bar_r4.color)(\"stops\", bar_r4.gradientStops)(\"data\", bar_r4.data)(\"orientation\", ctx_r3.barOrientation.Vertical)(\"roundEdges\", bar_r4.roundEdges)(\"gradient\", ctx_r3.gradient)(\"ariaLabel\", bar_r4.ariaLabel)(\"isActive\", ctx_r3.isActive(bar_r4.data))(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.tooltipPlacement)(\"tooltipType\", ctx_r3.tooltipType)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : bar_r4.tooltipText)(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", bar_r4.data)(\"noBarWhenZero\", ctx_r3.noBarWhenZero)(\"animations\", ctx_r3.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_0__svg_g_1_Template, 1, 22, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.bars)(\"ngForTrackBy\", ctx_r0.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", bar_r10.width)(\"height\", bar_r10.height)(\"x\", bar_r10.x)(\"y\", bar_r10.y)(\"fill\", bar_r10.color)(\"stops\", bar_r10.gradientStops)(\"data\", bar_r10.data)(\"orientation\", ctx_r9.barOrientation.Vertical)(\"roundEdges\", bar_r10.roundEdges)(\"gradient\", ctx_r9.gradient)(\"ariaLabel\", bar_r10.ariaLabel)(\"isActive\", ctx_r9.isActive(bar_r10.data))(\"tooltipDisabled\", ctx_r9.tooltipDisabled)(\"tooltipPlacement\", ctx_r9.tooltipPlacement)(\"tooltipType\", ctx_r9.tooltipType)(\"tooltipTitle\", ctx_r9.tooltipTemplate ? undefined : bar_r10.tooltipText)(\"tooltipTemplate\", ctx_r9.tooltipTemplate)(\"tooltipContext\", bar_r10.data)(\"noBarWhenZero\", ctx_r9.noBarWhenZero)(\"animations\", ctx_r9.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1__svg_g_1_Template, 1, 20, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesVerticalComponent__svg_g_2__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const i_r17 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.dataLabelHeightChanged.emit({\n        size: $event,\n        index: i_r17\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r16.x)(\"barY\", b_r16.y)(\"barWidth\", b_r16.width)(\"barHeight\", b_r16.height)(\"value\", b_r16.total)(\"valueFormatting\", ctx_r15.dataLabelFormatting)(\"orientation\", ctx_r15.barOrientation.Vertical);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_2__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.barsForDataLabels)(\"ngForTrackBy\", ctx_r2.trackDataLabelBy);\n  }\n}\nfunction BarVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarVerticalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.groupScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxHeightChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"activeEntries\", ctx_r8.activeEntries)(\"xScale\", ctx_r8.innerScale)(\"yScale\", ctx_r8.valueScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n  }\n}\nfunction BarVertical2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_5__svg_g_1_Template, 1, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVertical2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxHeightChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"activeEntries\", ctx_r16.activeEntries)(\"xScale\", ctx_r16.innerScale)(\"yScale\", ctx_r16.valueScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n  }\n}\nfunction BarVertical2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_6__svg_g_1_Template, 1, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, group_r9));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event, group_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, group_r15));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event, group_r15));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event, group_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxHeightChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxHeightChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"activeEntries\", ctx_r16.activeEntries)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c30 = [\"ngx-charts-box\", \"\"];\nfunction BoxComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.BarOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction BoxComponent__svg_line_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 6);\n  }\n  if (rf & 2) {\n    const line_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r1.hideBar);\n    i0.ɵɵattribute(\"x1\", line_r2.v1.x)(\"y1\", line_r2.v1.y)(\"x2\", line_r2.v2.x)(\"y2\", line_r2.v2.y)(\"stroke\", ctx_r1.strokeColor)(\"stroke-width\", i_r3 === 2 ? ctx_r1.medianLineWidth : ctx_r1.whiskerStrokeWidth)(\"mask\", i_r3 ? undefined : ctx_r1.maskLine);\n  }\n}\nconst _c31 = [\"ngx-charts-box-series\", \"\"];\nfunction BoxChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"activate\", function BoxChartComponent__svg_g_5_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onActivate($event));\n    })(\"deactivate\", function BoxChartComponent__svg_g_5_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onDeactivate($event));\n    })(\"select\", function BoxChartComponent__svg_g_5_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"yScale\", ctx_r0.yScale)(\"colors\", ctx_r0.colors)(\"roundEdges\", ctx_r0.roundEdges)(\"strokeColor\", ctx_r0.strokeColor)(\"strokeWidth\", ctx_r0.strokeWidth)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"series\", result_r1)(\"dims\", ctx_r0.dims)(\"animations\", ctx_r0.animations)(\"gradient\", ctx_r0.gradient);\n  }\n}\nconst _c32 = [\"ngx-charts-bubble-series\", \"\"];\nfunction BubbleSeriesComponent__svg_g_0__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick(circle_r1.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.activateCircle(circle_r1));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deactivateCircle(circle_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onClick(circle_r1.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.activateCircle(circle_r1));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.deactivateCircle(circle_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.placementTypes.Top)(\"tooltipType\", ctx_r3.styleTypes.tooltip)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : ctx_r3.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\");\n    i0.ɵɵtemplate(2, BubbleSeriesComponent__svg_g_0__svg_g_2_Template, 1, 18, \"g\", 1);\n    i0.ɵɵtemplate(3, BubbleSeriesComponent__svg_g_0__svg_g_3_Template, 1, 17, \"g\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const circle_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"transform\", circle_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR);\n  }\n}\nfunction BubbleChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r0.showGridLines)(\"dims\", ctx_r0.dims)(\"xScale\", ctx_r0.xScale)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const series_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, series_r9));\n    })(\"activate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"rScale\", ctx_r8.rScale)(\"xScaleType\", ctx_r8.xScaleType)(\"yScaleType\", ctx_r8.yScaleType)(\"xAxisLabel\", ctx_r8.xAxisLabel)(\"yAxisLabel\", ctx_r8.yAxisLabel)(\"colors\", ctx_r8.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r8.activeEntries)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r2.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.data)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BubbleChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const series_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, series_r15));\n    })(\"activate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"rScale\", ctx_r14.rScale)(\"xScaleType\", ctx_r14.xScaleType)(\"yScaleType\", ctx_r14.yScaleType)(\"xAxisLabel\", ctx_r14.xAxisLabel)(\"yAxisLabel\", ctx_r14.yAxisLabel)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r3.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.data)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c33 = [\"ngx-charts-heat-map-cell\", \"\"];\nfunction HeatMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c34 = [\"ngx-charts-heat-map-cell-series\", \"\"];\nconst _c35 = function (a0, a1, a2) {\n  return {\n    series: a0,\n    name: a1,\n    value: a2\n  };\n};\nfunction HeatCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(c_r1.cell));\n    })(\"activate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_activate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.activate.emit(c_r1.cell));\n    })(\"deactivate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_deactivate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deactivate.emit(c_r1.cell));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"data\", c_r1.data)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", i0.ɵɵpureFunction3(14, _c35, c_r1.series, c_r1.label, c_r1.data));\n  }\n}\nfunction HeatMapComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction HeatMapComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction HeatMapComponent__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\");\n  }\n  if (rf & 2) {\n    const rect_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"x\", rect_r7.x)(\"y\", rect_r7.y)(\"rx\", rect_r7.rx)(\"width\", rect_r7.width)(\"height\", rect_r7.height)(\"fill\", rect_r7.fill);\n  }\n}\nconst _c36 = [\"ngx-charts-line\", \"\"];\nfunction LineComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\nfunction LineComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", ctx_r1.initialPath)(\"fill\", ctx_r1.fill)(\"stroke\", ctx_r1.stroke);\n  }\n}\nconst _c37 = [\"ngx-charts-line-series\", \"\"];\nfunction LineSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction LineSeriesComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r1.isActive(ctx_r1.data))(\"inactive\", ctx_r1.isInactive(ctx_r1.data));\n    i0.ɵɵproperty(\"data\", ctx_r1.data)(\"path\", ctx_r1.outerPath)(\"fill\", ctx_r1.hasGradient ? ctx_r1.gradientUrl : ctx_r1.colors.getColor(ctx_r1.data.name))(\"opacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"wrapTicks\", ctx_r0.wrapTicks);\n  }\n}\nfunction LineChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction LineChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"data\", series_r11)(\"activeEntries\", ctx_r10.activeEntries)(\"scaleType\", ctx_r10.scaleType)(\"curve\", ctx_r10.curve)(\"rangeFillOpacity\", ctx_r10.rangeFillOpacity)(\"hasRange\", ctx_r10.hasRange)(\"animations\", ctx_r10.animations);\n  }\n}\nfunction LineChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_8__svg_g_1_Template, 2, 11, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"hasRange\", ctx_r12.hasRange)(\"animations\", ctx_r12.animations);\n  }\n}\nfunction LineChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_9__svg_g_1_Template, 2, 10, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_10__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 14);\n    i0.ɵɵlistener(\"select\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event));\n    })(\"activate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event));\n    })(\"deactivate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"scaleType\", ctx_r14.scaleType)(\"visibleValue\", ctx_r14.hoveredVertical)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\nfunction LineChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 11);\n    i0.ɵɵlistener(\"mouseleave\", function LineChartComponent__svg_g_10_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 12);\n    i0.ɵɵlistener(\"hover\", function LineChartComponent__svg_g_10_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, LineChartComponent__svg_g_10__svg_g_2_Template, 2, 9, \"g\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r4.dims)(\"xSet\", ctx_r4.xSet)(\"xScale\", ctx_r4.xScale)(\"yScale\", ctx_r4.yScale)(\"results\", ctx_r4.results)(\"colors\", ctx_r4.colors)(\"tooltipDisabled\", ctx_r4.tooltipDisabled)(\"tooltipTemplate\", ctx_r4.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results);\n  }\n}\nfunction LineChartComponent__svg_g_11__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r24 = ctx.$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r23.timelineXScale)(\"yScale\", ctx_r23.timelineYScale)(\"colors\", ctx_r23.colors)(\"data\", series_r24)(\"scaleType\", ctx_r23.scaleType)(\"curve\", ctx_r23.curve)(\"hasRange\", ctx_r23.hasRange)(\"animations\", ctx_r23.animations);\n  }\n}\nfunction LineChartComponent__svg_g_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 15);\n    i0.ɵɵlistener(\"onDomainChange\", function LineChartComponent__svg_g_11_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_11__svg_g_1_Template, 2, 8, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r5.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r5.timelineWidth, ctx_r5.height))(\"height\", ctx_r5.timelineHeight)(\"scheme\", ctx_r5.scheme)(\"customColors\", ctx_r5.customColors)(\"scaleType\", ctx_r5.scaleType)(\"legend\", ctx_r5.legend);\n    i0.ɵɵattribute(\"transform\", ctx_r5.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\nconst _c38 = [\"ngx-charts-pie-label\", \"\"];\nconst _c39 = [\"ngx-charts-polar-series\", \"\"];\nfunction PolarSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.seriesColor)(\"name\", ctx_r0.gradientId)(\"startOpacity\", 0.25)(\"endOpacity\", 1)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction PolarSeriesComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function PolarSeriesComponent__svg_g_4_Template__svg_g_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.select.emit(circle_r2.data));\n    })(\"activate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_activate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate.emit({\n        name: circle_r2.data.series\n      }));\n    })(\"deactivate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_deactivate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate.emit({\n        name: circle_r2.data.series\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", ctx_r1.inactive ? 0.2 : 1);\n    i0.ɵɵproperty(\"cx\", circle_r2.cx)(\"cy\", circle_r2.cy)(\"r\", ctx_r1.circleRadius)(\"fill\", circle_r2.color)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.tooltipText(circle_r2))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\nfunction PolarChartComponent__svg_g_4__svg_circle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\", 7);\n  }\n  if (rf & 2) {\n    const r_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"r\", r_r7);\n  }\n}\nfunction PolarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_4__svg_circle_1_Template, 1, 1, \"circle\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.radiusTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 9);\n  }\n  if (rf & 2) {\n    const tick_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"data\", tick_r9)(\"radius\", ctx_r8.outerRadius)(\"label\", tick_r9.label)(\"max\", ctx_r8.outerRadius)(\"value\", ctx_r8.showGridLines ? 1 : ctx_r8.outerRadius)(\"explodeSlices\", true)(\"animations\", ctx_r8.animations)(\"labelTrim\", ctx_r8.labelTrim)(\"labelTrimSize\", ctx_r8.labelTrimSize);\n  }\n}\nfunction PolarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_5__svg_g_1_Template, 1, 9, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.thetaTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"dimensionsChanged\", function PolarChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r2.yAxisScale)(\"dims\", ctx_r2.yAxisDims)(\"showGridLines\", ctx_r2.showGridLines)(\"showLabel\", ctx_r2.showYAxisLabel)(\"labelText\", ctx_r2.yAxisLabel)(\"trimTicks\", ctx_r2.trimYAxisTicks)(\"maxTickLength\", ctx_r2.maxYAxisTickLength)(\"tickFormatting\", ctx_r2.yAxisTickFormatting)(\"wrapTicks\", ctx_r2.wrapTicks);\n    i0.ɵɵattribute(\"transform\", ctx_r2.transformYAxis);\n  }\n}\nfunction PolarChartComponent__svg_g_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r3.xAxisLabel)(\"offset\", ctx_r3.labelOffset)(\"orient\", ctx_r3.orientation.Bottom)(\"height\", ctx_r3.dims.height)(\"width\", ctx_r3.dims.width);\n  }\n}\nfunction PolarChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r12.gradient)(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"animations\", ctx_r12.animations)(\"tooltipDisabled\", ctx_r12.tooltipDisabled)(\"tooltipTemplate\", ctx_r12.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nfunction PolarChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r19 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r18.gradient)(\"xScale\", ctx_r18.xScale)(\"yScale\", ctx_r18.yScale)(\"colors\", ctx_r18.colors)(\"data\", series_r19)(\"activeEntries\", ctx_r18.activeEntries)(\"scaleType\", ctx_r18.scaleType)(\"curve\", ctx_r18.curve)(\"rangeFillOpacity\", ctx_r18.rangeFillOpacity)(\"animations\", ctx_r18.animations)(\"tooltipDisabled\", ctx_r18.tooltipDisabled)(\"tooltipTemplate\", ctx_r18.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r5.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\nconst _c40 = [\"ngx-charts-pie-arc\", \"\"];\nfunction PieArcComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r0.fill)(\"name\", ctx_r0.radialGradientId)(\"startOpacity\", ctx_r0.startOpacity);\n  }\n}\nconst _c41 = [\"ngx-charts-pie-series\", \"\"];\nfunction PieSeriesComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const arc_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", arc_r1)(\"radius\", ctx_r2.outerRadius)(\"color\", ctx_r2.color(arc_r1))(\"label\", ctx_r2.labelText(arc_r1))(\"labelTrim\", ctx_r2.trimLabels)(\"labelTrimSize\", ctx_r2.maxLabelLength)(\"max\", ctx_r2.max)(\"value\", arc_r1.value)(\"explodeSlices\", ctx_r2.explodeSlices)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction PieSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PieSeriesComponent__svg_g_0__svg_g_1_Template, 1, 10, \"g\", 1);\n    i0.ɵɵelementStart(2, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieSeriesComponent__svg_g_0_Template__svg_g_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    })(\"activate\", function PieSeriesComponent__svg_g_0_Template__svg_g_activate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.activate.emit($event));\n    })(\"deactivate\", function PieSeriesComponent__svg_g_0_Template__svg_g_deactivate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deactivate.emit($event));\n    })(\"dblclick\", function PieSeriesComponent__svg_g_0_Template__svg_g_dblclick_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.dblclick.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arc_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.labelVisible(arc_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"gradient\", ctx_r0.gradient)(\"data\", arc_r1.data)(\"max\", ctx_r0.max)(\"explodeSlices\", ctx_r0.explodeSlices)(\"isActive\", ctx_r0.isActive(arc_r1.data))(\"animate\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.getTooltipTitle(arc_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", arc_r1.data);\n  }\n}\nconst _c42 = \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\";\nconst _c43 = [\"ngx-charts-pie-grid-series\", \"\"];\nfunction PieGridSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    })(\"activate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.activate.emit($event));\n    })(\"deactivate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const arc_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"data\", arc_r1.data)(\"gradient\", false)(\"pointerEvents\", arc_r1.pointerEvents)(\"animate\", arc_r1.animate);\n    i0.ɵɵattribute(\"class\", arc_r1.class);\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 10);\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", series_r1.percent)(\"countSuffix\", \"%\");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.percent.toLocaleString(), \" \");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 12);\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", series_r1.total)(\"countPrefix\", ctx_r4.label + \": \");\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r5.label, \": \", series_r1.total.toLocaleString(), \" \");\n  }\n}\nconst _c44 = function (a0) {\n  return {\n    data: a0\n  };\n};\nfunction PieGridComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3)(1, \"g\", 4);\n    i0.ɵɵlistener(\"select\", function PieGridComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onClick($event));\n    })(\"activate\", function PieGridComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onActivate($event));\n    })(\"deactivate\", function PieGridComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, PieGridComponent__svg_g_2__svg_text_2_Template, 1, 2, \"text\", 5);\n    i0.ɵɵtemplate(3, PieGridComponent__svg_g_2__svg_text_3_Template, 2, 1, \"text\", 6);\n    i0.ɵɵelementStart(4, \"text\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PieGridComponent__svg_g_2__svg_text_6_Template, 1, 3, \"text\", 8);\n    i0.ɵɵtemplate(7, PieGridComponent__svg_g_2__svg_text_7_Template, 2, 3, \"text\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", series_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colors\", series_r1.colors)(\"data\", series_r1.data)(\"innerRadius\", series_r1.innerRadius)(\"outerRadius\", series_r1.outerRadius)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(i0.ɵɵpureFunction1(17, _c44, series_r1)))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", series_r1.data[0].data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\nconst _c45 = [\"textEl\"];\nconst _c46 = [\"ngx-charts-card\", \"\"];\nfunction CardComponent__svg_path_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"fill\", ctx_r0.bandColor)(\"transform\", ctx_r0.transformBand)(\"d\", ctx_r0.bandPath);\n  }\n}\nconst _c47 = [\"ngx-charts-card-series\", \"\"];\nfunction CardSeriesComponent__svg_rect_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 2);\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"fill\", ctx_r0.emptyColor);\n    i0.ɵɵattribute(\"x\", c_r2.x)(\"y\", c_r2.y)(\"width\", c_r2.width)(\"height\", c_r2.height);\n  }\n}\nfunction CardSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CardSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r3.x)(\"y\", c_r3.y)(\"width\", c_r3.width)(\"height\", c_r3.height)(\"color\", c_r3.color)(\"bandColor\", c_r3.bandColor)(\"textColor\", c_r3.textColor)(\"data\", c_r3.data)(\"label\", c_r3.label)(\"medianSize\", ctx_r1.medianSize)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\nconst _c48 = [\"ngx-charts-tree-map-cell\", \"\"];\nfunction TreeMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"countTo\", ctx_r2.value)(\"valueFormatting\", ctx_r2.valueFormatting);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.formattedValue, \" \");\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"foreignObject\", 4);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵelement(2, \"span\", 5)(3, \"br\");\n    i0.ɵɵtemplate(4, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template, 1, 2, \"span\", 6);\n    i0.ɵɵtemplate(5, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"pointer-events\", \"none\");\n    i0.ɵɵattribute(\"x\", ctx_r1.x)(\"y\", ctx_r1.y)(\"width\", ctx_r1.width)(\"height\", ctx_r1.height);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", ctx_r1.getTextColor())(\"height\", ctx_r1.height + \"px\")(\"width\", ctx_r1.width + \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.formattedLabel, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n  }\n}\nconst _c49 = [\"ngx-charts-tree-map-cell-series\", \"\"];\nfunction TreeMapCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function TreeMapCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", c_r1.data)(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"label\", c_r1.label)(\"value\", c_r1.value)(\"valueFormatting\", ctx_r0.valueFormatting)(\"labelFormatting\", ctx_r0.labelFormatting)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", c_r1.data);\n  }\n}\nconst _c50 = [\"valueTextEl\"];\nconst _c51 = [\"unitsTextEl\"];\nfunction LinearGaugeComponent__svg_line_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.transformLine)(\"stroke\", ctx_r0.colors.getColor(ctx_r0.units));\n  }\n}\nfunction LinearGaugeComponent__svg_line_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\nconst _c52 = function () {\n  return {};\n};\nconst _c53 = [\"ngx-charts-gauge-arc\", \"\"];\nconst _c54 = [\"ngx-charts-gauge-axis\", \"\"];\nfunction GaugeAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r3.line);\n  }\n}\nfunction GaugeAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2)(1, \"text\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tick_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-anchor\", tick_r4.textAnchor);\n    i0.ɵɵattribute(\"transform\", tick_r4.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tick_r4.text, \" \");\n  }\n}\nfunction GaugeAxisComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r5.line);\n  }\n}\nfunction GaugeComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function GaugeComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    })(\"activate\", function GaugeComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onActivate($event));\n    })(\"deactivate\", function GaugeComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arc_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.rotation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"backgroundArc\", arc_r3.backgroundArc)(\"valueArc\", arc_r3.valueArc)(\"cornerRadius\", ctx_r0.cornerRadius)(\"colors\", ctx_r0.colors)(\"isActive\", ctx_r0.isActive(arc_r3.valueArc.data))(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"valueFormatting\", ctx_r0.valueFormatting)(\"animations\", ctx_r0.animations);\n  }\n}\nfunction GaugeComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bigSegments\", ctx_r1.bigSegments)(\"smallSegments\", ctx_r1.smallSegments)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"radius\", ctx_r1.outerRadius)(\"angleSpan\", ctx_r1.angleSpan)(\"valueScale\", ctx_r1.valueScale)(\"startAngle\", ctx_r1.startAngle)(\"tickFormatting\", ctx_r1.axisTickFormatting);\n  }\n}\nfunction GaugeComponent__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 7, 8)(2, \"tspan\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"tspan\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n    i0.ɵɵattribute(\"transform\", ctx_r2.textTransform);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.displayValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.units);\n  }\n}\nfunction throttle(func, wait, options) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n  return function () {\n    const now = +new Date();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    context = this;\n    // eslint-disable-next-line prefer-rest-params\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\nvar PlacementTypes;\n(function (PlacementTypes) {\n  PlacementTypes[\"Top\"] = \"top\";\n  PlacementTypes[\"Bottom\"] = \"bottom\";\n  PlacementTypes[\"Left\"] = \"left\";\n  PlacementTypes[\"Right\"] = \"right\";\n  PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Top) {\n    return elDimensions.top - caretOffset;\n  }\n  if (alignment === PlacementTypes.Bottom) {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n  return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Left) {\n    return elDimensions.left - caretOffset;\n  }\n  if (alignment === PlacementTypes.Right) {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n  return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n  /**\n   * Calculate vertical alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n    return result;\n  }\n  /**\n   * Calculate vertical caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Top) {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Left) {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\n    }\n    return result;\n  }\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n    let flip = false;\n    if (placement === PlacementTypes.Right) {\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Left) {\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Top) {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Bottom) {\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n    return flip;\n  }\n  /**\n   * Position caret\n   *\n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Position content\n   *\n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Determine placement based on flip\n   *\n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing) {\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n    if (shouldFlip) {\n      if (placement === PlacementTypes.Right) {\n        return PlacementTypes.Left;\n      } else if (placement === PlacementTypes.Left) {\n        return PlacementTypes.Right;\n      } else if (placement === PlacementTypes.Top) {\n        return PlacementTypes.Bottom;\n      } else if (placement === PlacementTypes.Bottom) {\n        return PlacementTypes.Top;\n      }\n    }\n    return placement;\n  }\n}\nclass TooltipContentComponent {\n  constructor(element, renderer, platformId) {\n    this.element = element;\n    this.renderer = renderer;\n    this.platformId = platformId;\n  }\n  get cssClasses() {\n    let clz = 'ngx-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n  ngAfterViewInit() {\n    setTimeout(this.position.bind(this));\n  }\n  position() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\n    // if no dims were found, never show\n    if (!hostDim.height && !hostDim.width) return;\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n    if (this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    }\n    // animate its entry\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n  positionContent(nativeElm, hostDim, elmDim) {\n    const {\n      top,\n      left\n    } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n  positionCaret(hostDim, elmDim) {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const {\n      top,\n      left\n    } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n  checkFlip(hostDim, elmDim) {\n    this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n  }\n  onWindowResize() {\n    this.position();\n  }\n}\nTooltipContentComponent.ɵfac = function TooltipContentComponent_Factory(t) {\n  return new (t || TooltipContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nTooltipContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipContentComponent,\n  selectors: [[\"ngx-tooltip-content\"]],\n  viewQuery: function TooltipContentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.caretElm = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TooltipContentComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function TooltipContentComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClasses);\n    }\n  },\n  inputs: {\n    host: \"host\",\n    showCaret: \"showCaret\",\n    type: \"type\",\n    placement: \"placement\",\n    alignment: \"alignment\",\n    spacing: \"spacing\",\n    cssClass: \"cssClass\",\n    title: \"title\",\n    template: \"template\",\n    context: \"context\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[3, \"hidden\"], [\"caretElm\", \"\"], [1, \"tooltip-content\"], [4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n  template: function TooltipContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"span\", 0, 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, TooltipContentComponent_span_4_Template, 2, 4, \"span\", 3);\n      i0.ɵɵtemplate(5, TooltipContentComponent_span_5_Template, 1, 1, \"span\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"tooltip-caret position-\", ctx.placement, \"\");\n      i0.ɵɵproperty(\"hidden\", !ctx.showCaret);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"],\n  encapsulation: 2\n});\n__decorate([throttleable(100)], TooltipContentComponent.prototype, \"onWindowResize\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-tooltip-content',\n      template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    host: [{\n      type: Input\n    }],\n    showCaret: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    alignment: [{\n      type: Input\n    }],\n    spacing: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    caretElm: [{\n      type: ViewChild,\n      args: ['caretElm']\n    }],\n    cssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }]\n  });\n})();\nclass InjectionRegisteryService {\n  constructor(injectionService) {\n    this.injectionService = injectionService;\n    this.defaults = {};\n    this.components = new Map();\n  }\n  getByType(type = this.type) {\n    return this.components.get(type);\n  }\n  create(bindings) {\n    return this.createByType(this.type, bindings);\n  }\n  createByType(type, bindings) {\n    bindings = this.assignDefaults(bindings);\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n    return component;\n  }\n  destroy(instance) {\n    const compsByType = this.components.get(instance.componentType);\n    if (compsByType && compsByType.length) {\n      const idx = compsByType.indexOf(instance);\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n  destroyAll() {\n    this.destroyByType(this.type);\n  }\n  destroyByType(type) {\n    const comps = this.components.get(type);\n    if (comps && comps.length) {\n      let i = comps.length - 1;\n      while (i >= 0) {\n        this.destroy(comps[i--]);\n      }\n    }\n  }\n  injectComponent(type, bindings) {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n  assignDefaults(bindings) {\n    const inputs = {\n      ...this.defaults.inputs\n    };\n    const outputs = {\n      ...this.defaults.outputs\n    };\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = {\n        inputs: bindings\n      };\n    }\n    if (inputs) {\n      bindings.inputs = {\n        ...inputs,\n        ...bindings.inputs\n      };\n    }\n    if (outputs) {\n      bindings.outputs = {\n        ...outputs,\n        ...bindings.outputs\n      };\n    }\n    return bindings;\n  }\n  register(type, component) {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n    const types = this.components.get(type);\n    types.push(component);\n  }\n}\nfunction isViewContainerRef(x) {\n  return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n  constructor(applicationRef, componentFactoryResolver, injector) {\n    this.applicationRef = applicationRef;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.injector = injector;\n  }\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n  static setGlobalRootViewContainer(container) {\n    InjectionService.globalRootViewContainer = container;\n  }\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainer() {\n    if (this._container) return this._container;\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n    if (this.applicationRef.components.length) return this.applicationRef.components[0];\n    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n  }\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   *\n   * @memberOf InjectionService\n   */\n  setRootViewContainer(container) {\n    this._container = container;\n  }\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param componentRef\n   *\n   * @memberOf InjectionService\n   */\n  getComponentRootNode(component) {\n    if (isViewContainerRef(component)) {\n      return component.element.nativeElement;\n    }\n    if (component.hostView && component.hostView.rootNodes.length > 0) {\n      return component.hostView.rootNodes[0];\n    }\n    // the top most component root node has no `hostView`\n    return component.location.nativeElement;\n  }\n  /**\n   * Gets the root component container html element.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainerNode(component) {\n    return this.getComponentRootNode(component);\n  }\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param component\n   * @param options\n   *\n   * @memberOf InjectionService\n   */\n  projectComponentBindings(component, bindings) {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n    return component;\n  }\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @param componentClass\n   * @param [options={}]\n   * @param [location]\n   *\n   * @memberOf InjectionService\n   */\n  appendComponent(componentClass, bindings = {}, location) {\n    if (!location) location = this.getRootViewContainer();\n    const appendLocation = this.getComponentRootNode(location);\n    const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n    const portal = new ComponentPortal(componentClass);\n    const componentRef = portalHost.attach(portal);\n    this.projectComponentBindings(componentRef, bindings);\n    return componentRef;\n  }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = function InjectionService_Factory(t) {\n  return new (t || InjectionService)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector));\n};\nInjectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InjectionService,\n  factory: InjectionService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InjectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass TooltipService extends InjectionRegisteryService {\n  constructor(injectionService) {\n    super(injectionService);\n    this.type = TooltipContentComponent;\n  }\n}\nTooltipService.ɵfac = function TooltipService_Factory(t) {\n  return new (t || TooltipService)(i0.ɵɵinject(InjectionService));\n};\nTooltipService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TooltipService,\n  factory: TooltipService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: InjectionService\n    }];\n  }, null);\n})();\nvar LegendPosition;\n(function (LegendPosition) {\n  LegendPosition[\"Right\"] = \"right\";\n  LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n  LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n  LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\nvar ScaleType;\n(function (ScaleType) {\n  ScaleType[\"Time\"] = \"time\";\n  ScaleType[\"Linear\"] = \"linear\";\n  ScaleType[\"Ordinal\"] = \"ordinal\";\n  ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\nclass ScaleLegendComponent {\n  constructor() {\n    this.horizontal = false;\n  }\n  ngOnChanges(changes) {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = this.horizontal ? 'right' : 'bottom';\n    this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n  }\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param colors array of colors\n   * @param splits array of splits on a scale of (0, 1)\n   */\n  gradientString(colors, splits) {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n    return pairs.join(', ');\n  }\n}\nScaleLegendComponent.ɵfac = function ScaleLegendComponent_Factory(t) {\n  return new (t || ScaleLegendComponent)();\n};\nScaleLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScaleLegendComponent,\n  selectors: [[\"ngx-charts-scale-legend\"]],\n  inputs: {\n    valueRange: \"valueRange\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    horizontal: \"horizontal\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 10,\n  consts: [[1, \"scale-legend\"], [1, \"scale-legend-label\"], [1, \"scale-legend-wrap\"]],\n  template: function ScaleLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"span\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.horizontal ? undefined : ctx.height, \"px\")(\"width\", ctx.width, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[1].toLocaleString());\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background\", ctx.gradient);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[0].toLocaleString());\n    }\n  },\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScaleLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-scale-legend',\n      template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"]\n    }]\n  }], null, {\n    valueRange: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n  return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n    return {\n      '&': '&amp;',\n      // tslint:disable-next-line: quotemark\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match];\n  });\n}\nclass LegendEntryComponent {\n  constructor() {\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.toggle = new EventEmitter();\n  }\n  get trimmedLabel() {\n    return this.formattedLabel || '(empty)';\n  }\n  onMouseEnter() {\n    this.activate.emit({\n      name: this.label\n    });\n  }\n  onMouseLeave() {\n    this.deactivate.emit({\n      name: this.label\n    });\n  }\n}\nLegendEntryComponent.ɵfac = function LegendEntryComponent_Factory(t) {\n  return new (t || LegendEntryComponent)();\n};\nLegendEntryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendEntryComponent,\n  selectors: [[\"ngx-charts-legend-entry\"]],\n  hostBindings: function LegendEntryComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function LegendEntryComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function LegendEntryComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    color: \"color\",\n    label: \"label\",\n    formattedLabel: \"formattedLabel\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    toggle: \"toggle\"\n  },\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"-1\", 3, \"title\", \"click\"], [1, \"legend-label-color\", 3, \"click\"], [1, \"legend-label-text\"]],\n  template: function LegendEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_0_listener() {\n        return ctx.select.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_1_listener() {\n        return ctx.toggle.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵproperty(\"title\", ctx.formattedLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background-color\", ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.trimmedLabel, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendEntryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend-entry',\n      template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    formattedLabel: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    toggle: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass LegendComponent {\n  constructor(cd) {\n    this.cd = cd;\n    this.horizontal = false;\n    this.labelClick = new EventEmitter();\n    this.labelActivate = new EventEmitter();\n    this.labelDeactivate = new EventEmitter();\n    this.legendEntries = [];\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n  getLegendEntries() {\n    const items = [];\n    for (const label of this.data) {\n      const formattedLabel = formatLabel(label);\n      const idx = items.findIndex(i => {\n        return i.label === formattedLabel;\n      });\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n    return items;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nLegendComponent.ɵfac = function LegendComponent_Factory(t) {\n  return new (t || LegendComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendComponent,\n  selectors: [[\"ngx-charts-legend\"]],\n  inputs: {\n    data: \"data\",\n    title: \"title\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    activeEntries: \"activeEntries\",\n    horizontal: \"horizontal\"\n  },\n  outputs: {\n    labelClick: \"labelClick\",\n    labelActivate: \"labelActivate\",\n    labelDeactivate: \"labelDeactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 9,\n  consts: [[\"class\", \"legend-title\", 4, \"ngIf\"], [1, \"legend-wrap\"], [1, \"legend-labels\"], [\"class\", \"legend-label\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"legend-title\"], [1, \"legend-title-text\"], [1, \"legend-label\"], [3, \"label\", \"formattedLabel\", \"color\", \"isActive\", \"select\", \"activate\", \"deactivate\"]],\n  template: function LegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, LegendComponent_header_1_Template, 3, 1, \"header\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"ul\", 2);\n      i0.ɵɵtemplate(4, LegendComponent_li_4_Template, 2, 4, \"li\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.length) > 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"max-height\", ctx.height - 45, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendEntries)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [LegendEntryComponent, i2.NgIf, i2.NgForOf],\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend',\n      template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }],\n    labelClick: [{\n      type: Output\n    }],\n    labelActivate: [{\n      type: Output\n    }],\n    labelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass ChartComponent {\n  constructor() {\n    this.showLegend = false;\n    this.animations = true;\n    this.legendLabelClick = new EventEmitter();\n    this.legendLabelActivate = new EventEmitter();\n    this.legendLabelDeactivate = new EventEmitter();\n    this.LegendPosition = LegendPosition;\n    this.LegendType = LegendType;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    let legendColumns = 0;\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n      if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n        if (this.legendType === LegendType.ScaleLegend) {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n    const chartColumns = 12 - legendColumns;\n    this.chartWidth = Math.floor(this.view[0] * chartColumns / 12.0);\n    this.legendWidth = !this.legendOptions || this.legendOptions.position === LegendPosition.Right ? Math.floor(this.view[0] * legendColumns / 12.0) : this.chartWidth;\n  }\n  getLegendType() {\n    return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n  }\n}\nChartComponent.ɵfac = function ChartComponent_Factory(t) {\n  return new (t || ChartComponent)();\n};\nChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartComponent,\n  selectors: [[\"ngx-charts-chart\"]],\n  inputs: {\n    view: \"view\",\n    showLegend: \"showLegend\",\n    legendOptions: \"legendOptions\",\n    legendType: \"legendType\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    legendLabelClick: \"legendLabelClick\",\n    legendLabelActivate: \"legendLabelActivate\",\n    legendLabelDeactivate: \"legendLabelDeactivate\"\n  },\n  features: [i0.ɵɵProvidersFeature([TooltipService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"ngx-charts-outer\"], [1, \"ngx-charts\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\", 4, \"ngIf\"], [1, \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\"], [1, \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\"]],\n  template: function ChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ChartComponent_ngx_charts_scale_legend_3_Template, 1, 5, \"ngx-charts-scale-legend\", 2);\n      i0.ɵɵtemplate(4, ChartComponent_ngx_charts_legend_4_Template, 1, 7, \"ngx-charts-legend\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.view[0], \"px\")(\"height\", ctx.view[1], \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.chartWidth)(\"height\", ctx.view[1]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.ScaleLegend);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.Legend);\n    }\n  },\n  dependencies: [ScaleLegendComponent, LegendComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartComponent, [{\n    type: Component,\n    args: [{\n      providers: [TooltipService],\n      selector: 'ngx-charts-chart',\n      template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    view: [{\n      type: Input\n    }],\n    showLegend: [{\n      type: Input\n    }],\n    legendOptions: [{\n      type: Input\n    }],\n    legendType: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    legendLabelClick: [{\n      type: Output\n    }],\n    legendLabelActivate: [{\n      type: Output\n    }],\n    legendLabelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n  constructor(element, zone) {\n    this.element = element;\n    this.zone = zone;\n    this.visible = new EventEmitter();\n    this.isVisible = false;\n    this.runCheck();\n  }\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n  onVisibilityChange() {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n  runCheck() {\n    const check = () => {\n      if (!this.element) {\n        return;\n      }\n      // https://davidwalsh.name/offsetheight-visibility\n      const {\n        offsetHeight,\n        offsetWidth\n      } = this.element.nativeElement;\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n}\nVisibilityObserver.ɵfac = function VisibilityObserver_Factory(t) {\n  return new (t || VisibilityObserver)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nVisibilityObserver.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VisibilityObserver,\n  selectors: [[\"visibility-observer\"]],\n  outputs: {\n    visible: \"visible\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityObserver, [{\n    type: Directive,\n    args: [{\n      selector: 'visibility-observer'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: Output\n    }]\n  });\n})();\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\nclass BaseChartComponent {\n  constructor(chartElement, zone, cd, platformId) {\n    this.chartElement = chartElement;\n    this.zone = zone;\n    this.cd = cd;\n    this.platformId = platformId;\n    this.scheme = 'cool';\n    this.schemeType = ScaleType.Ordinal;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.animations = false;\n    }\n  }\n  ngAfterViewInit() {\n    this.bindWindowResizeEvent();\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results = [];\n    }\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n    if (!this.height) {\n      this.height = 400;\n    }\n    this.width = Math.floor(this.width);\n    this.height = Math.floor(this.height);\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n  getContainerDims() {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n    if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n    if (width && height) {\n      return {\n        width,\n        height\n      };\n    }\n    return null;\n  }\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates() {\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n      g.label = g.name;\n      if (isDate(g.label)) {\n        g.label = g.label.toLocaleDateString();\n      }\n      if (g.series) {\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          d.label = d.name;\n          if (isDate(d.label)) {\n            d.label = d.label.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n  unbindEvents() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n  bindWindowResizeEvent() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const source = fromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n  /**\n   * Clones the data into a new object\n   *\n   * @memberOf BaseChart\n   */\n  cloneData(data) {\n    const results = [];\n    for (const item of data) {\n      const copy = {\n        name: item['name']\n      };\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n      results.push(copy);\n    }\n    return results;\n  }\n}\nBaseChartComponent.ɵfac = function BaseChartComponent_Factory(t) {\n  return new (t || BaseChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nBaseChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BaseChartComponent,\n  selectors: [[\"base-chart\"]],\n  inputs: {\n    results: \"results\",\n    view: \"view\",\n    scheme: \"scheme\",\n    schemeType: \"schemeType\",\n    customColors: \"customColors\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function BaseChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'base-chart',\n      template: ` <div></div> `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    results: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nvar Orientation;\n(function (Orientation) {\n  Orientation[\"Top\"] = \"top\";\n  Orientation[\"Bottom\"] = \"bottom\";\n  Orientation[\"Left\"] = \"left\";\n  Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\nclass AxisLabelComponent {\n  constructor(element) {\n    this.textHeight = 25;\n    this.margin = 5;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n    switch (this.orient) {\n      case Orientation.Top:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case Orientation.Bottom:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case Orientation.Left:\n        this.y = -(this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      case Orientation.Right:\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      default:\n    }\n  }\n}\nAxisLabelComponent.ɵfac = function AxisLabelComponent_Factory(t) {\n  return new (t || AxisLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nAxisLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AxisLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-axis-label\", \"\"]],\n  inputs: {\n    orient: \"orient\",\n    label: \"label\",\n    offset: \"offset\",\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c3,\n  decls: 2,\n  vars: 6,\n  template: function AxisLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"stroke-width\", ctx.strokeWidth)(\"x\", ctx.x)(\"y\", ctx.y)(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxisLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-axis-label]',\n      template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    orient: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\nfunction trimLabel(s, max = 16) {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n  s = s.trim();\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\nfunction reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n  return ticks;\n}\nfunction getTickLines(label, maxLength, maxLines) {\n  const labelString = (label || '').toString();\n  let totalLines = [];\n  if (/\\s/.test(labelString)) {\n    totalLines = labelString.split(/\\s+/).reduce((lines, line) => {\n      const last = (lines.pop() || '') + ' ';\n      return last.length + line.length > maxLength ? [...lines, last.trim(), line.trim()] : [...lines, last + line];\n    }, []);\n  } else {\n    let startIndex = 0;\n    while (startIndex < labelString.length) {\n      totalLines.push(labelString.substring(startIndex, startIndex + maxLength));\n      startIndex += maxLength;\n    }\n  }\n  if (totalLines.length > maxLines) {\n    totalLines = totalLines.splice(0, maxLines);\n    totalLines[totalLines.length - 1] += '...';\n  }\n  return totalLines;\n}\nvar TextAnchor;\n(function (TextAnchor) {\n  TextAnchor[\"Start\"] = \"start\";\n  TextAnchor[\"Middle\"] = \"middle\";\n  TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\nclass XAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.rotateTicks = true;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.verticalSpacing = 20;\n    this.rotateLabels = false;\n    this.innerTickSize = 6;\n    this.outerTickSize = 6;\n    this.tickPadding = 3;\n    this.textAnchor = TextAnchor.Middle;\n    this.maxTicksLength = 0;\n    this.maxAllowedLength = 16;\n    this.height = 0;\n    this.approxHeight = 10;\n    this.maxPossibleLengthForTickIfWrapped = 16;\n  }\n  get isWrapTicksSupported() {\n    return this.wrapTicks && this.scale.step;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.dimensionsChanged.emit({\n        height: this.approxHeight\n      });\n      return;\n    }\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({\n        height: this.height\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n  update() {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n    this.adjustedScale = this.scale.bandwidth ? function (d) {\n      return this.scale(d) + this.scale.bandwidth() * 0.5;\n    } : this.scale;\n    this.textTransform = '';\n    if (angle && angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = TextAnchor.End;\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = TextAnchor.Middle;\n    }\n    setTimeout(() => this.updateDims());\n  }\n  getRotationAngle(ticks) {\n    let angle = 0;\n    this.maxTicksLength = 0;\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 7; // need to measure this\n    const wordWidth = len * charWidth;\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\n    // calculate optimal angle\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n    let labelHeight = 14;\n    if (this.isWrapTicksSupported) {\n      const longestTick = this.ticks.reduce((earlier, current) => current.length > earlier.length ? current : earlier, '');\n      const tickLines = this.tickChunks(longestTick);\n      labelHeight = 14 * (tickLines.length || 1);\n      this.maxPossibleLengthForTickIfWrapped = this.getMaxPossibleLengthForTick(longestTick);\n    }\n    const requiredHeight = angle !== 0 ? Math.max(Math.abs(Math.sin(angle * Math.PI / 180)) * this.maxTickLength * charWidth, 10) : labelHeight;\n    this.approxHeight = Math.min(requiredHeight, 200);\n    return angle;\n  }\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n  getMaxTicks(tickWidth) {\n    return Math.floor(this.width / tickWidth);\n  }\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n  gridLineTransform() {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n  getMaxPossibleLengthForTick(longestLabel) {\n    if (this.scale.bandwidth) {\n      const averageCharacterWidth = 7; // approximate char width\n      const maxCharacters = Math.floor(this.scale.bandwidth() / averageCharacterWidth);\n      const truncatedText = longestLabel.slice(0, maxCharacters);\n      return Math.max(truncatedText.length, this.maxTickLength);\n    }\n    return this.maxTickLength;\n  }\n  tickChunks(label) {\n    if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n      const maxAllowedLines = 5;\n      let maxLines = this.rotateTicks ? Math.floor(this.scale.step() / 14) : maxAllowedLines;\n      if (maxLines <= 1) {\n        return [this.tickTrim(label)];\n      }\n      let possibleStringLength = Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength);\n      if (!isPlatformBrowser(this.platformId)) {\n        possibleStringLength = Math.floor(Math.min(this.approxHeight / maxAllowedLines, Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength)));\n      }\n      maxLines = Math.min(maxLines, maxAllowedLines);\n      const lines = getTickLines(label, possibleStringLength, maxLines < 1 ? 1 : maxLines);\n      return lines;\n    }\n    return [this.tickTrim(label)];\n  }\n}\nXAxisTicksComponent.ɵfac = function XAxisTicksComponent_Factory(t) {\n  return new (t || XAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nXAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis-ticks\", \"\"]],\n  viewQuery: function XAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineHeight: \"gridLineHeight\",\n    width: \"width\",\n    rotateTicks: \"rotateTicks\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  decls: 4,\n  vars: 2,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [4, \"ngIf\"], [\"stroke-width\", \"0.01\", \"font-size\", \"12px\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"tmplMultilineTick\", \"\"], [\"tmplSinglelineTick\", \"\"], [\"x\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"x\", \"0\"], [\"y2\", \"0\", 1, \"gridline-path\", \"gridline-path-vertical\"]],\n  template: function XAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, XAxisTicksComponent__svg_g_2_Template, 2, 2, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, XAxisTicksComponent__svg_g_3_Template, 2, 2, \"g\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineHeight: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\nclass XAxisComponent {\n  constructor() {\n    this.rotateTicks = true;\n    this.showGridLines = false;\n    this.xOrient = Orientation.Bottom;\n    this.xAxisOffset = 0;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.xAxisClassName = 'x axis';\n    this.labelOffset = 0;\n    this.fill = 'none';\n    this.stroke = 'stroke';\n    this.tickStroke = '#ccc';\n    this.strokeWidth = 'none';\n    this.padding = 5;\n    this.orientation = Orientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n  emitTicksHeight({\n    height\n  }) {\n    const newLabelOffset = height + 25 + 5;\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          height\n        });\n      }, 0);\n    }\n  }\n}\nXAxisComponent.ɵfac = function XAxisComponent_Factory(t) {\n  return new (t || XAxisComponent)();\n};\nXAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis\", \"\"]],\n  viewQuery: function XAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(XAxisTicksComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    xScale: \"xScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    rotateTicks: \"rotateTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    ticks: \"ticks\",\n    xAxisTickCount: \"xAxisTickCount\",\n    xOrient: \"xOrient\",\n    xAxisOffset: \"xAxisOffset\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c6,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function XAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, XAxisComponent__svg_g_1_Template, 1, 13, \"g\", 0);\n      i0.ɵɵtemplate(2, XAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.xAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [XAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis]',\n      template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    xScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    xAxisTickCount: [{\n      type: Input\n    }],\n    xOrient: [{\n      type: Input\n    }],\n    xAxisOffset: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [XAxisTicksComponent]\n    }]\n  });\n})();\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n  let retval = '';\n  w = Math.floor(w);\n  h = Math.floor(h);\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n  retval += `v${h - 2 * r}`;\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n  retval += `h${2 * r - w}`;\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n  retval += `v${2 * r - h}`;\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n  retval += `z`;\n  return retval;\n}\nclass YAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.showRefLabels = false;\n    this.showRefLines = false;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.innerTickSize = 6;\n    this.tickPadding = 3;\n    this.verticalSpacing = 20;\n    this.textAnchor = TextAnchor.Middle;\n    this.width = 0;\n    this.outerTickSize = 6;\n    this.rotateLabels = false;\n    this.referenceLineLength = 0;\n    this.Orientation = Orientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.width = this.getApproximateAxisWidth();\n      this.dimensionsChanged.emit({\n        width: this.width\n      });\n      return;\n    }\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({\n        width\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n  update() {\n    const scale = this.scale;\n    const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n    this.ticks = this.getTicks();\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    this.adjustedScale = scale.bandwidth ? d => {\n      // position the tick to middle considering number of lines of the tick\n      const positionMiddle = scale(d) + scale.bandwidth() * 0.5;\n      if (this.wrapTicks && d.toString().length > this.maxTickLength) {\n        const chunksLength = this.tickChunks(d).length;\n        if (chunksLength === 1) {\n          return positionMiddle;\n        }\n        const bandWidth = scale.bandwidth();\n        const heightOfLines = chunksLength * 8;\n        const availableFreeSpace = bandWidth * 0.5 - heightOfLines * 0.5;\n        return scale(d) + availableFreeSpace;\n      }\n      return positionMiddle;\n    } : scale;\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n    switch (this.orient) {\n      case Orientation.Top:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case Orientation.Bottom:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case Orientation.Left:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = TextAnchor.End;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case Orientation.Right:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = TextAnchor.Start;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n  setReferencelines() {\n    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n    this.referenceLineLength = this.referenceLines.length;\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [false, false, false, false]);\n  }\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n  getMaxTicks(tickHeight) {\n    return Math.floor(this.height / tickHeight);\n  }\n  tickTransform(tick) {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n  gridLineTransform() {\n    return `translate(5,0)`;\n  }\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n  getApproximateAxisWidth() {\n    const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n    const charWidth = 7;\n    return maxChars * charWidth;\n  }\n  tickChunks(label) {\n    if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n      // for y-axis the width of the tick is fixed\n      const preferredWidth = this.maxTickLength;\n      const maxLines = Math.floor(this.scale.bandwidth() / 15);\n      if (maxLines <= 1) {\n        return [this.tickTrim(label)];\n      }\n      return getTickLines(label, preferredWidth, Math.min(maxLines, 5));\n    }\n    return [this.tickFormat(label)];\n  }\n}\nYAxisTicksComponent.ɵfac = function YAxisTicksComponent_Factory(t) {\n  return new (t || YAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nYAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis-ticks\", \"\"]],\n  viewQuery: function YAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineWidth: \"gridLineWidth\",\n    height: \"height\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    showRefLines: \"showRefLines\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c7,\n  decls: 6,\n  vars: 4,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"reference-area\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [4, \"ngIf\"], [\"stroke-width\", \"0.01\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"tmplMultilineTick\", \"\"], [\"tmplSinglelineTick\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"x\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"x\", \"0\"], [1, \"reference-area\"], [\"class\", \"gridline-path gridline-path-horizontal\", \"x1\", \"0\", 4, \"ngIf\"], [\"x1\", \"0\", 1, \"gridline-path\", \"gridline-path-horizontal\"], [\"x1\", \"0\", 1, \"refline-path\", \"gridline-path-horizontal\"], [1, \"refline-label\"]],\n  template: function YAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_2_Template, 2, 2, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, YAxisTicksComponent__svg_path_3_Template, 1, 2, \"path\", 2);\n      i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_4_Template, 2, 2, \"g\", 3);\n      i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.referenceLineLength > 1 && ctx.refMax && ctx.refMin && ctx.showRefLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.referenceLines);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineWidth: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\nclass YAxisComponent {\n  constructor() {\n    this.showGridLines = false;\n    this.yOrient = Orientation.Left;\n    this.yAxisOffset = 0;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.yAxisClassName = 'y axis';\n    this.labelOffset = 15;\n    this.fill = 'none';\n    this.stroke = '#CCC';\n    this.tickStroke = '#CCC';\n    this.strokeWidth = 1;\n    this.padding = 5;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === Orientation.Right) {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n  emitTicksWidth({\n    width\n  }) {\n    if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    }\n  }\n}\nYAxisComponent.ɵfac = function YAxisComponent_Factory(t) {\n  return new (t || YAxisComponent)();\n};\nYAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis\", \"\"]],\n  viewQuery: function YAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(YAxisTicksComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    yScale: \"yScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    ticks: \"ticks\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    yAxisTickCount: \"yAxisTickCount\",\n    yOrient: \"yOrient\",\n    referenceLines: \"referenceLines\",\n    showRefLines: \"showRefLines\",\n    showRefLabels: \"showRefLabels\",\n    yAxisOffset: \"yAxisOffset\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c8,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function YAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, YAxisComponent__svg_g_1_Template, 1, 15, \"g\", 0);\n      i0.ɵɵtemplate(2, YAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.yAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [YAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis]',\n      template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    yScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    yAxisTickCount: [{\n      type: Input\n    }],\n    yOrient: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    yAxisOffset: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [YAxisTicksComponent]\n    }]\n  });\n})();\nclass AxesModule {}\nAxesModule.ɵfac = function AxesModule_Factory(t) {\n  return new (t || AxesModule)();\n};\nAxesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AxesModule\n});\nAxesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n      exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n    }]\n  }], null, null);\n})();\nvar StyleTypes;\n(function (StyleTypes) {\n  StyleTypes[\"popover\"] = \"popover\";\n  StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\nvar ShowTypes;\n(function (ShowTypes) {\n  ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n  ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n  ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\nclass TooltipDirective {\n  constructor(tooltipService, viewContainerRef, renderer) {\n    this.tooltipService = tooltipService;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.tooltipCssClass = '';\n    this.tooltipAppendToBody = true;\n    this.tooltipSpacing = 10;\n    this.tooltipDisabled = false;\n    this.tooltipShowCaret = true;\n    this.tooltipPlacement = PlacementTypes.Top;\n    this.tooltipAlignment = PlacementTypes.Center;\n    this.tooltipType = StyleTypes.popover;\n    this.tooltipCloseOnClickOutside = true;\n    this.tooltipCloseOnMouseLeave = true;\n    this.tooltipHideTimeout = 300;\n    this.tooltipShowTimeout = 100;\n    this.tooltipShowEvent = ShowTypes.all;\n    this.tooltipImmediateExit = false;\n    this.show = new EventEmitter();\n    this.hide = new EventEmitter();\n  }\n  get listensForFocus() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n  }\n  get listensForHover() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n  ngOnDestroy() {\n    this.hideTooltip(true);\n  }\n  onFocus() {\n    if (this.listensForFocus) {\n      this.showTooltip();\n    }\n  }\n  onBlur() {\n    if (this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n  onMouseEnter() {\n    if (this.listensForHover) {\n      this.showTooltip();\n    }\n  }\n  onMouseLeave(target) {\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if (contains) return;\n      }\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n  onMouseClick() {\n    if (this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n  showTooltip(immediate) {\n    if (this.component || this.tooltipDisabled) return;\n    const time = immediate ? 0 : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options);\n      // add a tiny timeout to avoid event re-triggers\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n      this.show.emit(true);\n    }, time);\n  }\n  addHideListeners(tooltip) {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    });\n    // content mouse leave listener\n    if (this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    }\n    // content close on click outside\n    if (this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n        const contains = tooltip.contains(event.target);\n        if (!contains) this.hideTooltip();\n      });\n    }\n  }\n  hideTooltip(immediate = false) {\n    if (!this.component) return;\n    const destroyFn = () => {\n      // remove events\n      if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\n      if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\n      if (this.documentClickEvent) this.documentClickEvent();\n      // emit events\n      this.hide.emit(true);\n      // destroy component\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n    clearTimeout(this.timeout);\n    if (!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n  createBoundOptions() {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n}\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n  return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nTooltipDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TooltipDirective,\n  selectors: [[\"\", \"ngx-tooltip\", \"\"]],\n  hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function TooltipDirective_focusin_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function TooltipDirective_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"mouseenter\", function TooltipDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler($event) {\n        return ctx.onMouseLeave($event.target);\n      })(\"click\", function TooltipDirective_click_HostBindingHandler() {\n        return ctx.onMouseClick();\n      });\n    }\n  },\n  inputs: {\n    tooltipCssClass: \"tooltipCssClass\",\n    tooltipTitle: \"tooltipTitle\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    tooltipSpacing: \"tooltipSpacing\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipShowCaret: \"tooltipShowCaret\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAlignment: \"tooltipAlignment\",\n    tooltipType: \"tooltipType\",\n    tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\",\n    tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\",\n    tooltipHideTimeout: \"tooltipHideTimeout\",\n    tooltipShowTimeout: \"tooltipShowTimeout\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipShowEvent: \"tooltipShowEvent\",\n    tooltipContext: \"tooltipContext\",\n    tooltipImmediateExit: \"tooltipImmediateExit\"\n  },\n  outputs: {\n    show: \"show\",\n    hide: \"hide\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-tooltip]'\n    }]\n  }], function () {\n    return [{\n      type: TooltipService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    tooltipCssClass: [{\n      type: Input\n    }],\n    tooltipTitle: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    tooltipSpacing: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipShowCaret: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAlignment: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    tooltipCloseOnClickOutside: [{\n      type: Input\n    }],\n    tooltipCloseOnMouseLeave: [{\n      type: Input\n    }],\n    tooltipHideTimeout: [{\n      type: Input\n    }],\n    tooltipShowTimeout: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipShowEvent: [{\n      type: Input\n    }],\n    tooltipContext: [{\n      type: Input\n    }],\n    tooltipImmediateExit: [{\n      type: Input\n    }],\n    show: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focusin']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event.target']]\n    }],\n    onMouseClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\nclass TooltipModule {}\nTooltipModule.ɵfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\nTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [InjectionService, TooltipService],\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TooltipContentComponent, TooltipDirective],\n      providers: [InjectionService, TooltipService],\n      exports: [TooltipContentComponent, TooltipDirective],\n      imports: [CommonModule],\n      entryComponents: [TooltipContentComponent]\n    }]\n  }], null, null);\n})();\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n  return id();\n}\nvar BarOrientation;\n(function (BarOrientation) {\n  BarOrientation[\"Vertical\"] = \"vertical\";\n  BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\nclass SvgLinearGradientComponent {\n  constructor() {\n    this.orientation = BarOrientation.Vertical;\n  }\n  ngOnChanges(changes) {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n    if (this.orientation === BarOrientation.Horizontal) {\n      this.x2 = '100%';\n    } else if (this.orientation === BarOrientation.Vertical) {\n      this.y1 = '100%';\n    }\n  }\n}\nSvgLinearGradientComponent.ɵfac = function SvgLinearGradientComponent_Factory(t) {\n  return new (t || SvgLinearGradientComponent)();\n};\nSvgLinearGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgLinearGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-linear-gradient\", \"\"]],\n  inputs: {\n    orientation: \"orientation\",\n    name: \"name\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c9,\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgLinearGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"linearGradient\", 0);\n      i0.ɵɵtemplate(1, SvgLinearGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"x1\", ctx.x1)(\"y1\", ctx.y1)(\"x2\", ctx.x2)(\"y2\", ctx.y2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgLinearGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-linear-gradient]',\n      template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    orientation: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\nclass CircleComponent {\n  constructor() {\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  ngOnChanges(changes) {\n    this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n    this.classNames += 'circle';\n  }\n}\nCircleComponent.ɵfac = function CircleComponent_Factory(t) {\n  return new (t || CircleComponent)();\n};\nCircleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleComponent,\n  selectors: [[\"g\", \"ngx-charts-circle\", \"\"]],\n  hostBindings: function CircleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CircleComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"mouseenter\", function CircleComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function CircleComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    cx: \"cx\",\n    cy: \"cy\",\n    r: \"r\",\n    fill: \"fill\",\n    stroke: \"stroke\",\n    data: \"data\",\n    classNames: \"classNames\",\n    circleOpacity: \"circleOpacity\",\n    pointerEvents: \"pointerEvents\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c10,\n  decls: 1,\n  vars: 8,\n  template: function CircleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"circle\");\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r)(\"fill\", ctx.fill)(\"stroke\", ctx.stroke)(\"opacity\", ctx.circleOpacity)(\"class\", ctx.classNames)(\"pointer-events\", ctx.pointerEvents);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle]',\n      template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    r: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    classNames: [{\n      type: Input\n    }],\n    circleOpacity: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nvar SeriesType;\n(function (SeriesType) {\n  SeriesType[\"Standard\"] = \"standard\";\n  SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = SeriesType.Standard;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barVisible = false;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges() {\n    this.update();\n  }\n  update() {\n    this.circle = this.getActiveCircle();\n  }\n  getActiveCircle() {\n    const indexActiveDataPoint = this.data.series.findIndex(d => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n  mapDataPointToCircle(d, i) {\n    const seriesName = this.data.name;\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n    let cx;\n    if (this.scaleType === ScaleType.Time) {\n      cx = this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n    const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n    let color;\n    if (this.colors.scaleType === ScaleType.Linear) {\n      if (this.type === SeriesType.Standard) {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n    const data = Object.assign({}, d, {\n      series: seriesName,\n      value,\n      name: label\n    });\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n  getTooltipText({\n    tooltipLabel,\n    value,\n    seriesName,\n    min,\n    max\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n  getTooltipMinMaxText(min, max) {\n    if (min !== undefined || max !== undefined) {\n      let result = ' (';\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += '≥';\n        }\n        result += min.toLocaleString();\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += '≤';\n      }\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n  getGradientStops(color) {\n    return [{\n      offset: 0,\n      color,\n      opacity: 0.2\n    }, {\n      offset: 100,\n      color,\n      opacity: 1\n    }];\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  activateCircle() {\n    this.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n  deactivateCircle() {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n}\nCircleSeriesComponent.ɵfac = function CircleSeriesComponent_Factory(t) {\n  return new (t || CircleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nCircleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-circle-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    type: \"type\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c11,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"class\", \"tooltip-bar\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [1, \"tooltip-bar\"]],\n  template: function CircleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CircleSeriesComponent__svg_g_0_Template, 6, 22, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.circle);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CircleComponent, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 1\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle-series]',\n      template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 1\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass GridPanelComponent {}\nGridPanelComponent.ɵfac = function GridPanelComponent_Factory(t) {\n  return new (t || GridPanelComponent)();\n};\nGridPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel\", \"\"]],\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\"\n  },\n  attrs: _c13,\n  decls: 1,\n  vars: 4,\n  consts: [[\"stroke\", \"none\", 1, \"gridpanel\"]],\n  template: function GridPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"rect\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"height\", ctx.height)(\"width\", ctx.width)(\"x\", ctx.x)(\"y\", ctx.y);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel]',\n      template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }]\n  });\n})();\nvar ClassEnum;\n(function (ClassEnum) {\n  ClassEnum[\"Odd\"] = \"odd\";\n  ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.gridPanels = this.getGridPanels();\n  }\n  getGridPanels() {\n    return this.data.map(d => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = ClassEnum.Odd;\n      if (this.orient === BarOrientation.Vertical) {\n        const position = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === BarOrientation.Horizontal) {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n}\nGridPanelSeriesComponent.ɵfac = function GridPanelSeriesComponent_Factory(t) {\n  return new (t || GridPanelSeriesComponent)();\n};\nGridPanelSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    orient: \"orient\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c14,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\", \"grid-panel\", \"odd\", \"even\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\"]],\n  template: function GridPanelSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GridPanelSeriesComponent__svg_g_0_Template, 1, 10, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.gridPanels);\n    }\n  },\n  dependencies: [GridPanelComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel-series]',\n      template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }]\n  });\n})();\nclass SvgRadialGradientComponent {\n  constructor() {\n    this.endOpacity = 1;\n    this.cx = 0;\n    this.cy = 0;\n  }\n  get stops() {\n    return this.stopsInput || this.stopsDefault;\n  }\n  set stops(value) {\n    this.stopsInput = value;\n  }\n  ngOnChanges(changes) {\n    this.r = '30%';\n    if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n      this.stopsDefault = [{\n        offset: 0,\n        color: this.color,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.color,\n        opacity: this.endOpacity\n      }];\n    }\n  }\n}\nSvgRadialGradientComponent.ɵfac = function SvgRadialGradientComponent_Factory(t) {\n  return new (t || SvgRadialGradientComponent)();\n};\nSvgRadialGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgRadialGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-radial-gradient\", \"\"]],\n  inputs: {\n    color: \"color\",\n    name: \"name\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    cx: \"cx\",\n    cy: \"cy\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c15,\n  decls: 2,\n  vars: 5,\n  consts: [[\"gradientUnits\", \"userSpaceOnUse\", 3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgRadialGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"radialGradient\", 0);\n      i0.ɵɵtemplate(1, SvgRadialGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgRadialGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-radial-gradient]',\n      template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\nclass AreaComponent {\n  constructor(element) {\n    this.opacity = 1;\n    this.startOpacity = 0.5;\n    this.endOpacity = 1;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.animationsLoaded = false;\n    this.hasGradient = false;\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges() {\n    this.update();\n    if (!this.animationsLoaded) {\n      this.loadAnimation();\n      this.animationsLoaded = true;\n    }\n  }\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updatePathEl();\n  }\n  loadAnimation() {\n    this.areaPath = this.startingPath;\n    setTimeout(this.updatePathEl.bind(this), 100);\n  }\n  updatePathEl() {\n    const node = select(this.element).select('.area');\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: this.endOpacity\n    }];\n  }\n}\nAreaComponent.ɵfac = function AreaComponent_Factory(t) {\n  return new (t || AreaComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nAreaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaComponent,\n  selectors: [[\"g\", \"ngx-charts-area\", \"\"]],\n  inputs: {\n    data: \"data\",\n    path: \"path\",\n    startingPath: \"startingPath\",\n    fill: \"fill\",\n    opacity: \"opacity\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    gradient: \"gradient\",\n    stops: \"stops\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c16,\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [1, \"area\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function AreaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AreaComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(1, \"path\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"opacity\", ctx.opacity);\n      i0.ɵɵattribute(\"d\", ctx.areaPath)(\"fill\", ctx.gradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area]',\n      template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    startingPath: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n    frameVal = Math.round(frameVal * dec) / dec;\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n  const endVal = Number(countTo);\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n  return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n  constructor(cd, element) {\n    this.cd = cd;\n    this.countDuration = 1;\n    this.countPrefix = '';\n    this.countSuffix = '';\n    this.countChange = new EventEmitter();\n    this.countFinish = new EventEmitter();\n    this.value = '';\n    this._countDecimals = 0;\n    this._countTo = 0;\n    this._countFrom = 0;\n    this.nativeElement = element.nativeElement;\n  }\n  set countDecimals(val) {\n    this._countDecimals = val;\n  }\n  get countDecimals() {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n  get countTo() {\n    return this._countTo;\n  }\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n  get countFrom() {\n    return this._countFrom;\n  }\n  ngOnDestroy() {\n    cancelAnimationFrame(this.animationReq);\n  }\n  start() {\n    cancelAnimationFrame(this.animationReq);\n    const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n    const callback = ({\n      value,\n      progress,\n      finished\n    }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({\n        value: this.value,\n        progress\n      });\n      if (finished) this.countFinish.emit({\n        value: this.value,\n        progress\n      });\n    };\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n}\nCountUpDirective.ɵfac = function CountUpDirective_Factory(t) {\n  return new (t || CountUpDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nCountUpDirective.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CountUpDirective,\n  selectors: [[\"\", \"ngx-charts-count-up\", \"\"]],\n  inputs: {\n    countDuration: \"countDuration\",\n    countPrefix: \"countPrefix\",\n    countSuffix: \"countSuffix\",\n    valueFormatting: \"valueFormatting\",\n    countDecimals: \"countDecimals\",\n    countTo: \"countTo\",\n    countFrom: \"countFrom\"\n  },\n  outputs: {\n    countChange: \"countChange\",\n    countFinish: \"countFinish\"\n  },\n  attrs: _c17,\n  decls: 1,\n  vars: 1,\n  template: function CountUpDirective_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n    }\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountUpDirective, [{\n    type: Component,\n    args: [{\n      selector: '[ngx-charts-count-up]',\n      template: ` {{ value }} `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    countDuration: [{\n      type: Input\n    }],\n    countPrefix: [{\n      type: Input\n    }],\n    countSuffix: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    countDecimals: [{\n      type: Input\n    }],\n    countTo: [{\n      type: Input\n    }],\n    countFrom: [{\n      type: Input\n    }],\n    countChange: [{\n      type: Output\n    }],\n    countFinish: [{\n      type: Output\n    }]\n  });\n})();\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof MouseEvent === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, {\n      bubbles,\n      cancelable\n    });\n  } else {\n    // IE\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\nclass TooltipArea {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.anchorOpacity = 0;\n    this.anchorPos = -1;\n    this.anchorValues = [];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.showPercentage = false;\n    this.tooltipDisabled = false;\n    this.hover = new EventEmitter();\n  }\n  getValues(xVal) {\n    const results = [];\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n          let v = val;\n          if (item.d1) {\n            v = item.d1;\n          }\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n        const data = Object.assign({}, item, {\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n        results.push(data);\n      }\n    }\n    return results;\n  }\n  mouseMove(event) {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n    this.anchorValues = this.getValues(closestPoint);\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n    while (minIndex <= maxIndex) {\n      const currentIndex = (minIndex + maxIndex) / 2 | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n      const curDiff = Math.abs(currentElement - xPos);\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n    return closestIndex;\n  }\n  showTooltip() {\n    const event = createMouseEvent('mouseenter');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n  hideTooltip() {\n    const event = createMouseEvent('mouseleave');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n  getToolTipText(tooltipItem) {\n    let result = '';\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n    result += ': ';\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += '≥';\n        }\n        result += tooltipItem.min.toLocaleString();\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += '≤';\n      }\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n      result += ')';\n    }\n    return result;\n  }\n}\nTooltipArea.ɵfac = function TooltipArea_Factory(t) {\n  return new (t || TooltipArea)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nTooltipArea.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipArea,\n  selectors: [[\"g\", \"ngx-charts-tooltip-area\", \"\"]],\n  viewQuery: function TooltipArea_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c18, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipAnchor = _t.first);\n    }\n  },\n  inputs: {\n    dims: \"dims\",\n    xSet: \"xSet\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    results: \"results\",\n    colors: \"colors\",\n    showPercentage: \"showPercentage\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    hover: \"hover\"\n  },\n  attrs: _c19,\n  decls: 6,\n  vars: 18,\n  consts: [[\"y\", \"0\", 1, \"tooltip-area\", 2, \"opacity\", \"0\", \"cursor\", \"'auto'\", 3, \"mousemove\", \"mouseleave\"], [\"defaultTooltipTemplate\", \"\"], [\"y\", \"0\", \"ngx-tooltip\", \"\", 1, \"tooltip-anchor\", 3, \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipSpacing\", \"tooltipTemplate\", \"tooltipContext\", \"tooltipImmediateExit\"], [\"tooltipAnchor\", \"\"], [1, \"area-tooltip-container\"], [\"class\", \"tooltip-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tooltip-item\"], [1, \"tooltip-item-color\"]],\n  template: function TooltipArea_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"rect\", 0);\n      i0.ɵɵlistener(\"mousemove\", function TooltipArea_Template__svg_rect_mousemove_1_listener($event) {\n        return ctx.mouseMove($event);\n      })(\"mouseleave\", function TooltipArea_Template__svg_rect_mouseleave_1_listener() {\n        return ctx.hideTooltip();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TooltipArea__svg_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(4, \"rect\", 2, 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", 0)(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleProp(\"opacity\", ctx.anchorOpacity)(\"pointer-events\", \"none\");\n      i0.ɵɵproperty(\"@animationState\", ctx.anchorOpacity !== 0 ? \"active\" : \"inactive\")(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Right)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipSpacing\", 15)(\"tooltipTemplate\", ctx.tooltipTemplate ? ctx.tooltipTemplate : _r0)(\"tooltipContext\", ctx.anchorValues)(\"tooltipImmediateExit\", true);\n      i0.ɵɵattribute(\"x\", ctx.anchorPos)(\"width\", 1)(\"height\", ctx.dims.height);\n    }\n  },\n  dependencies: [i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition('inactive => active', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 0.7\n    }))]), transition('active => inactive', [style({\n      opacity: 0.7\n    }), animate(250, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipArea, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tooltip-area]',\n      template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition('inactive => active', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 0.7\n      }))]), transition('active => inactive', [style({\n        opacity: 0.7\n      }), animate(250, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    xSet: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    showPercentage: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    hover: [{\n      type: Output\n    }],\n    tooltipAnchor: [{\n      type: ViewChild,\n      args: ['tooltipAnchor', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass Timeline {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.height = 50;\n    this.select = new EventEmitter();\n    this.onDomainChange = new EventEmitter();\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n  update() {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n    if (this.brush) {\n      this.updateBrush();\n    }\n    this.transform = `translate(0 , ${offsetY})`;\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n    this.cd.markForCheck();\n  }\n  getXDomain() {\n    let values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    let domain = [];\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n  getXScale() {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n    }\n    return scale;\n  }\n  addBrush() {\n    if (this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush = brushX().extent([[0, 0], [width, height]]).on('brush end', ({\n      selection\n    }) => {\n      const newSelection = selection || this.xScale.range();\n      const newDomain = newSelection.map(this.xScale.invert);\n      this.onDomainChange.emit(newDomain);\n      this.cd.markForCheck();\n    });\n    select(this.element).select('.brush').call(this.brush);\n  }\n  updateBrush() {\n    if (!this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush.extent([[0, 0], [width, height]]);\n    select(this.element).select('.brush').call(this.brush);\n    // clear hardcoded properties so they can be defined by CSS\n    select(this.element).select('.selection').attr('fill', undefined).attr('stroke', undefined).attr('fill-opacity', undefined);\n    this.cd.markForCheck();\n  }\n  getDims() {\n    const width = this.view[0];\n    const dims = {\n      width,\n      height: this.height\n    };\n    return dims;\n  }\n}\nTimeline.ɵfac = function Timeline_Factory(t) {\n  return new (t || Timeline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTimeline.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Timeline,\n  selectors: [[\"g\", \"ngx-charts-timeline\", \"\"]],\n  inputs: {\n    view: \"view\",\n    results: \"results\",\n    scheme: \"scheme\",\n    customColors: \"customColors\",\n    legend: \"legend\",\n    autoScale: \"autoScale\",\n    scaleType: \"scaleType\",\n    height: \"height\"\n  },\n  outputs: {\n    select: \"select\",\n    onDomainChange: \"onDomainChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c20,\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"timeline\"], [\"in\", \"SourceGraphic\", \"type\", \"matrix\", \"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"], [1, \"embedded-chart\"], [\"x\", \"0\", \"y\", \"0\", 1, \"brush-background\"], [1, \"brush\"]],\n  template: function Timeline_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"filter\");\n      i0.ɵɵelement(2, \"feColorMatrix\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 2);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"rect\", 3)(6, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.filterId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵattribute(\"width\", ctx.view[0])(\"height\", ctx.height);\n    }\n  },\n  styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Timeline, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-timeline]',\n      template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    view: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    onDomainChange: [{\n      type: Output\n    }]\n  });\n})();\nclass AdvancedLegendComponent {\n  constructor() {\n    this.label = 'Total';\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.legendItems = [];\n    this.labelFormatting = label => label;\n    this.percentageFormatting = percentage => percentage;\n    this.defaultValueFormatting = value => value.toLocaleString();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getTotal() {\n    return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n  }\n  update() {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n    this.legendItems = this.getLegendItems();\n  }\n  getLegendItems() {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? value / this.total * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n      return {\n        _value: value,\n        data: d,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nAdvancedLegendComponent.ɵfac = function AdvancedLegendComponent_Factory(t) {\n  return new (t || AdvancedLegendComponent)();\n};\nAdvancedLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedLegendComponent,\n  selectors: [[\"ngx-charts-advanced-legend\"]],\n  inputs: {\n    width: \"width\",\n    data: \"data\",\n    colors: \"colors\",\n    label: \"label\",\n    animations: \"animations\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 7,\n  consts: [[1, \"advanced-pie-legend\"], [\"class\", \"total-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"total-value\", 4, \"ngIf\"], [1, \"total-label\"], [1, \"legend-items-container\"], [1, \"legend-items\"], [\"tabindex\", \"-1\", \"class\", \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-count-up\", \"\", 1, \"total-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"total-value\"], [\"tabindex\", \"-1\", 1, \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\"], [1, \"item-color\"], [\"class\", \"item-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"item-value\", 4, \"ngIf\"], [1, \"item-label\"], [\"class\", \"item-percent\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"item-percent\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"item-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"item-value\"], [\"ngx-charts-count-up\", \"\", 1, \"item-percent\", 3, \"countTo\", \"countSuffix\"], [1, \"item-percent\"]],\n  template: function AdvancedLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AdvancedLegendComponent_div_1_Template, 1, 2, \"div\", 1);\n      i0.ɵɵtemplate(2, AdvancedLegendComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n      i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_Template, 8, 7, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendItems)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CountUpDirective, i2.NgIf, i2.NgForOf],\n  styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-legend',\n      template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"]\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\nconst COMPONENTS = [AreaComponent, BaseChartComponent, CountUpDirective, TooltipArea, ChartComponent, LegendComponent, LegendEntryComponent, ScaleLegendComponent, CircleComponent, CircleSeriesComponent, GridPanelComponent, GridPanelSeriesComponent, SvgLinearGradientComponent, SvgRadialGradientComponent, Timeline, AdvancedLegendComponent];\nclass ChartCommonModule {}\nChartCommonModule.ɵfac = function ChartCommonModule_Factory(t) {\n  return new (t || ChartCommonModule)();\n};\nChartCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartCommonModule\n});\nChartCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, AxesModule, TooltipModule],\n      declarations: [...COMPONENTS, VisibilityObserver],\n      exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n    }]\n  }], null, null);\n})();\nfunction calculateViewDimensions({\n  width,\n  height,\n  margins,\n  showXAxis = false,\n  showYAxis = false,\n  xAxisHeight = 0,\n  yAxisWidth = 0,\n  showXLabel = false,\n  showYLabel = false,\n  showLegend = false,\n  legendType = ScaleType.Ordinal,\n  legendPosition = LegendPosition.Right,\n  columns = 12\n}) {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n  if (showLegend && legendPosition === LegendPosition.Right) {\n    if (legendType === ScaleType.Ordinal) {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n  chartWidth = chartWidth * columns / 12;\n  chartWidth = chartWidth - margins[1] - margins[3];\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\nconst colorSets = [{\n  name: 'vivid',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514']\n}, {\n  name: 'natural',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3']\n}, {\n  name: 'cool',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886']\n}, {\n  name: 'fire',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n}, {\n  name: 'solar',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00']\n}, {\n  name: 'air',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b']\n}, {\n  name: 'aqua',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064']\n}, {\n  name: 'flame',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n}, {\n  name: 'ocean',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n}, {\n  name: 'forest',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n}, {\n  name: 'horizon',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n}, {\n  name: 'neons',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n}, {\n  name: 'picnic',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n}, {\n  name: 'night',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634', '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D']\n}, {\n  name: 'nightLights',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b', '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3']\n}];\nclass ColorHelper {\n  constructor(scheme, type, domain, customColors) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n  generateColorScheme(scheme, type, domain) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    switch (type) {\n      case ScaleType.Quantile:\n        colorScale = scaleQuantile().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Ordinal:\n        colorScale = scaleOrdinal().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Linear:\n        {\n          const colorDomain = [...scheme.domain];\n          if (colorDomain.length === 1) {\n            colorDomain.push(colorDomain[0]);\n            this.colorDomain = colorDomain;\n          }\n          const points = range(0, 1, 1.0 / colorDomain.length);\n          colorScale = scaleLinear().range(colorDomain).domain(points);\n        }\n        break;\n      default:\n        break;\n    }\n    return colorScale;\n  }\n  getColor(value) {\n    if (value === undefined || value === null) {\n      throw new Error('Value can not be null');\n    }\n    if (this.scaleType === ScaleType.Linear) {\n      const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n      return this.scale(valueScale(value));\n    } else {\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n      const formattedValue = value.toString();\n      let found; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find(mapping => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n    const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n    const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n    const endColor = this.getColor(value);\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = (s.offset - startVal) / (endVal - startVal) * 100;\n        }\n      }\n    }\n    return stops;\n  }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return ScaleType.Time;\n    }\n  }\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n    return ScaleType.Linear;\n  }\n  return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n  const scaleType = getScaleType(values);\n  let xSet = [];\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n  }\n  let min;\n  let max;\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const mappedValues = values.map(v => Number(v));\n    min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n    max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n  }\n  if (scaleType === ScaleType.Time) {\n    domain = [new Date(min), new Date(max)];\n    xSet = [...values].sort((a, b) => {\n      const aDate = a.getTime();\n      const bDate = b.getTime();\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    });\n  } else if (scaleType === ScaleType.Linear) {\n    domain = [min, max];\n    // Use compare function to sort numbers numerically\n    xSet = [...values].sort((a, b) => a - b);\n  } else {\n    domain = values;\n    xSet = values;\n  }\n  return {\n    domain,\n    xSet,\n    scaleType\n  };\n}\nfunction sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\nclass AreaSeriesComponent {\n  constructor() {\n    this.baseValue = 'auto';\n    this.stacked = false;\n    this.normalized = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradient();\n    let currentArea;\n    let startingArea;\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n    if (this.stacked || this.normalized) {\n      currentArea = area().x(xProperty).y0((d, i) => this.yScale(d.d0)).y1((d, i) => this.yScale(d.d1));\n      startingArea = area().x(xProperty).y0(d => this.yScale.range()[0]).y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area().x(xProperty).y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.yScale(d.value));\n      startingArea = area().x(xProperty).y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n    }\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n    this.opacity = 0.8;\n    let data = this.data.series;\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n  updateGradient() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      if (this.stacked || this.normalized) {\n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\nAreaSeriesComponent.ɵfac = function AreaSeriesComponent_Factory(t) {\n  return new (t || AreaSeriesComponent)();\n};\nAreaSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-area-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    baseValue: \"baseValue\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    stacked: \"stacked\",\n    normalized: \"normalized\",\n    gradient: \"gradient\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c21,\n  decls: 1,\n  vars: 12,\n  consts: [[\"ngx-charts-area\", \"\", 1, \"area-series\", 3, \"data\", \"path\", \"fill\", \"stops\", \"startingPath\", \"opacity\", \"gradient\", \"animations\"]],\n  template: function AreaSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"fill\", ctx.colors.getColor(ctx.data.name))(\"stops\", ctx.gradientStops)(\"startingPath\", ctx.startingPath)(\"opacity\", ctx.opacity)(\"gradient\", ctx.gradient || ctx.hasGradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [AreaComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area-series]',\n      template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    stacked: [{\n      type: Input\n    }],\n    normalized: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass AreaChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.baseValue = 'auto';\n    this.autoScale = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getScaleType(values) {\n    let date = true;\n    let num = true;\n    for (const value of values) {\n      if (isDate(value)) {\n        date = false;\n      }\n      if (isNumber(value)) {\n        num = false;\n      }\n    }\n    if (date) {\n      return ScaleType.Time;\n    }\n    if (num) {\n      return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartComponent_BaseFactory;\n  return function AreaChartComponent_Factory(t) {\n    return (ɵAreaChartComponent_BaseFactory || (ɵAreaChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartComponent)))(t || AreaChartComponent);\n  };\n}();\nAreaChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartComponent,\n  selectors: [[\"ngx-charts-area-chart\"]],\n  contentQueries: function AreaChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    baseValue: \"baseValue\",\n    autoScale: \"autoScale\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"gradient\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"curve\", \"animations\"]],\n  template: function AreaChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartComponent__svg_g_9_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showXAxisLabel = false;\n    this.showYAxisLabel = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.yDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.seriesType = SeriesType;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      let total = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n        if (total > 0) {\n          d.d0 = d.d0 * 100 / total;\n          d.d1 = d.d1 * 100 / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartNormalizedComponent_BaseFactory;\n  return function AreaChartNormalizedComponent_Factory(t) {\n    return (ɵAreaChartNormalizedComponent_BaseFactory || (ɵAreaChartNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartNormalizedComponent)))(t || AreaChartNormalizedComponent);\n  };\n}();\nAreaChartNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartNormalizedComponent,\n  selectors: [[\"ngx-charts-area-chart-normalized\"]],\n  contentQueries: function AreaChartNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartNormalizedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"activeEntries\", \"gradient\", \"normalized\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"normalized\", \"curve\", \"animations\"]],\n  template: function AreaChartNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartNormalizedComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartNormalizedComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartNormalizedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartNormalizedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartNormalizedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.seriesType = SeriesType;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          sum += d.value;\n        }\n      }\n      domain.push(sum);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartStackedComponent_BaseFactory;\n  return function AreaChartStackedComponent_Factory(t) {\n    return (ɵAreaChartStackedComponent_BaseFactory || (ɵAreaChartStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartStackedComponent)))(t || AreaChartStackedComponent);\n  };\n}();\nAreaChartStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartStackedComponent,\n  selectors: [[\"ngx-charts-area-chart-stacked\"]],\n  contentQueries: function AreaChartStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartStackedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"activeEntries\", \"stacked\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"stacked\", \"curve\", \"animations\"]],\n  template: function AreaChartStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartStackedComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartStackedComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartStackedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartStackedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartStackedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartModule {}\nAreaChartModule.ɵfac = function AreaChartModule_Factory(t) {\n  return new (t || AreaChartModule)();\n};\nAreaChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AreaChartModule\n});\nAreaChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n      exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass BarComponent {\n  constructor(element) {\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (changes.roundEdges) {\n      this.loadAnimation();\n    }\n    this.update();\n  }\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updatePathEl();\n    this.checkToHideBar();\n  }\n  loadAnimation() {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n  updatePathEl() {\n    const node = select(this.element).select('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      node.transition().duration(500).attr('d', path);\n    } else {\n      node.attr('d', path);\n    }\n  }\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n    let radius = this.getRadius();\n    let path;\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === BarOrientation.Vertical) {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n    return path;\n  }\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n    return path;\n  }\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n    return radius;\n  }\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        if (this.data.value > 0) {\n          edges = [true, true, false, false];\n        } else {\n          edges = [false, false, true, true];\n        }\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        if (this.data.value > 0) {\n          edges = [false, true, false, true];\n        } else {\n          edges = [true, false, true, false];\n        }\n      }\n    }\n    return edges;\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && (this.orientation === BarOrientation.Vertical && this.height === 0 || this.orientation === BarOrientation.Horizontal && this.width === 0);\n  }\n}\nBarComponent.ɵfac = function BarComponent_Factory(t) {\n  return new (t || BarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarComponent,\n  selectors: [[\"g\", \"ngx-charts-bar\", \"\"]],\n  hostBindings: function BarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BarComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BarComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    orientation: \"orientation\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    stops: \"stops\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c26,\n  decls: 2,\n  vars: 8,\n  consts: [[4, \"ngIf\"], [\"stroke\", \"none\", \"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function BarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BarComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"path\", 1);\n      i0.ɵɵlistener(\"click\", function BarComponent_Template__svg_path_click_1_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar]',\n      template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nvar BarChartType;\n(function (BarChartType) {\n  BarChartType[\"Standard\"] = \"standard\";\n  BarChartType[\"Normalized\"] = \"normalized\";\n  BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\nvar D0Types;\n(function (D0Types) {\n  D0Types[\"positive\"] = \"positive\";\n  D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\nclass BarLabelComponent {\n  constructor(element) {\n    this.dimensionsChanged = new EventEmitter();\n    this.horizontalPadding = 2;\n    this.verticalPadding = 5;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getSize() {\n    const h = this.element.getBoundingClientRect().height;\n    const w = this.element.getBoundingClientRect().width;\n    return {\n      height: h,\n      width: w,\n      negative: this.value < 0\n    };\n  }\n  ngAfterViewInit() {\n    this.dimensionsChanged.emit(this.getSize());\n  }\n  update() {\n    if (this.valueFormatting) {\n      this.formatedValue = this.valueFormatting(this.value);\n    } else {\n      this.formatedValue = formatLabel(this.value);\n    }\n    if (this.orientation === 'horizontal') {\n      this.x = this.barX + this.barWidth;\n      // if the value is negative then it's on the left of the x0.\n      // we need to put the data label in front of the bar\n      if (this.value < 0) {\n        this.x = this.x - this.horizontalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.x = this.x + this.horizontalPadding;\n        this.textAnchor = 'start';\n      }\n      this.y = this.barY + this.barHeight / 2;\n    } else {\n      // orientation must be \"vertical\"\n      this.x = this.barX + this.barWidth / 2;\n      this.y = this.barY + this.barHeight;\n      if (this.value < 0) {\n        this.y = this.y + this.verticalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.y = this.y - this.verticalPadding;\n        this.textAnchor = 'start';\n      }\n      this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n    }\n  }\n}\nBarLabelComponent.ɵfac = function BarLabelComponent_Factory(t) {\n  return new (t || BarLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nBarLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-bar-label\", \"\"]],\n  inputs: {\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    barX: \"barX\",\n    barY: \"barY\",\n    barWidth: \"barWidth\",\n    barHeight: \"barHeight\",\n    orientation: \"orientation\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c27,\n  decls: 2,\n  vars: 5,\n  consts: [[\"alignment-baseline\", \"middle\", 1, \"textDataLabel\"]],\n  template: function BarLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.formatedValue, \" \");\n    }\n  },\n  styles: [\".textDataLabel[_ngcontent-%COMP%]{font-size:11px}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar-label]',\n      template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".textDataLabel{font-size:11px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    barX: [{\n      type: Input\n    }],\n    barY: [{\n      type: Input\n    }],\n    barWidth: [{\n      type: Input\n    }],\n    barHeight: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass SeriesHorizontal {\n  constructor() {\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelWidthChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type;\n    d0Type = D0Types.positive;\n    let total;\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n    this.bars = this.series.map(d => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n      bar.height = this.yScale.bandwidth();\n      if (this.type === BarChartType.Standard) {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n        bar.y = this.yScale(label);\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      // if total is positive then we show it on the right, otherwise on the left\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }\n      section.height = this.yScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(0);\n        section.y = this.yScale(d.label);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n  trackBy(index, bar) {\n    return bar.label;\n  }\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n  click(data) {\n    this.select.emit(data);\n  }\n}\nSeriesHorizontal.ɵfac = function SeriesHorizontal_Factory(t) {\n  return new (t || SeriesHorizontal)();\n};\nSeriesHorizontal.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesHorizontal,\n  selectors: [[\"g\", \"ngx-charts-series-horizontal\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelWidthChanged: \"dataLabelWidthChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c28,\n  decls: 2,\n  vars: 3,\n  consts: [[\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesHorizontal_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesHorizontal__svg_g_0_Template, 1, 21, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1_Template, 2, 2, \"g\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.bars)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgForOf, TooltipDirective, i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesHorizontal, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-horizontal]',\n      template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelWidthChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass BarHorizontalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n  }\n  getXDomain() {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n    return [min, max];\n  }\n  getYDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalComponent_BaseFactory;\n  return function BarHorizontalComponent_Factory(t) {\n    return (ɵBarHorizontalComponent_BaseFactory || (ɵBarHorizontalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalComponent)))(t || BarHorizontalComponent);\n  };\n}();\nBarHorizontalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalComponent,\n  selectors: [[\"ngx-charts-bar-horizontal\"]],\n  contentQueries: function BarHorizontalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    xScaleMin: \"xScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"activeEntries\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"]],\n  template: function BarHorizontalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"select\", function BarHorizontalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BarHorizontalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarHorizontalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"dataLabelWidthChanged\", function BarHorizontalComponent_Template__svg_g_dataLabelWidthChanged_4_listener($event) {\n        return ctx.onDataLabelMaxWidthChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontal2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n  getInnerScale() {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n  }\n  getValueScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.label)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontal2DComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontal2DComponent_BaseFactory;\n  return function BarHorizontal2DComponent_Factory(t) {\n    return (ɵBarHorizontal2DComponent_BaseFactory || (ɵBarHorizontal2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontal2DComponent)))(t || BarHorizontal2DComponent);\n  };\n}();\nBarHorizontal2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontal2DComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-2d\"]],\n  contentQueries: function BarHorizontal2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"activeEntries\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontal2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontal2DComponent__svg_g_3_Template, 1, 11, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontal2DComponent__svg_g_4_Template, 1, 10, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontal2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵtemplate(6, BarHorizontal2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.valueScale)(\"yScale\", ctx.groupScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontal2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalNormalizedComponent_BaseFactory;\n  return function BarHorizontalNormalizedComponent_Factory(t) {\n    return (ɵBarHorizontalNormalizedComponent_BaseFactory || (ɵBarHorizontalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalNormalizedComponent)))(t || BarHorizontalNormalizedComponent);\n  };\n}();\nBarHorizontalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-normalized\"]],\n  contentQueries: function BarHorizontalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarHorizontalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalNormalizedComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalNormalizedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalStackedComponent_BaseFactory;\n  return function BarHorizontalStackedComponent_Factory(t) {\n    return (ɵBarHorizontalStackedComponent_BaseFactory || (ɵBarHorizontalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalStackedComponent)))(t || BarHorizontalStackedComponent);\n  };\n}();\nBarHorizontalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalStackedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-stacked\"]],\n  contentQueries: function BarHorizontalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"series\", \"activeEntries\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalStackedComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalStackedComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass SeriesVerticalComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelHeightChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    width = Math.round(width);\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n    let total;\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      if (this.type === BarChartType.Standard) {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(d.label);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n  trackBy(index, bar) {\n    return bar.label;\n  }\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n}\nSeriesVerticalComponent.ɵfac = function SeriesVerticalComponent_Factory(t) {\n  return new (t || SeriesVerticalComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nSeriesVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesVerticalComponent,\n  selectors: [[\"g\", \"ngx-charts-series-vertical\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelHeightChanged: \"dataLabelHeightChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c29,\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesVerticalComponent__svg_g_0_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(2, SeriesVerticalComponent__svg_g_2_Template, 2, 2, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-vertical]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelHeightChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass BarVerticalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n  }\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getXDomain() {\n    return this.results.map(d => d.label);\n  }\n  getYDomain() {\n    const values = this.results.map(d => d.value);\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n    return [min, max];\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalComponent_BaseFactory;\n  return function BarVerticalComponent_Factory(t) {\n    return (ɵBarVerticalComponent_BaseFactory || (ɵBarVerticalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalComponent)))(t || BarVerticalComponent);\n  };\n}();\nBarVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalComponent,\n  selectors: [[\"ngx-charts-bar-vertical\"]],\n  contentQueries: function BarVerticalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-vertical\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"activeEntries\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"activate\", \"deactivate\", \"select\", \"dataLabelHeightChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"]],\n  template: function BarVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalComponent__svg_g_2_Template, 1, 12, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"activate\", function BarVerticalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarVerticalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"select\", function BarVerticalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"dataLabelHeightChanged\", function BarVerticalComponent_Template__svg_g_dataLabelHeightChanged_4_listener($event) {\n        return ctx.onDataLabelMaxHeightChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVertical2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.scaleType = ScaleType.Ordinal;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n  getInnerScale() {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n  }\n  getValueScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.label)}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVertical2DComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVertical2DComponent_BaseFactory;\n  return function BarVertical2DComponent_Factory(t) {\n    return (ɵBarVertical2DComponent_BaseFactory || (ɵBarVertical2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVertical2DComponent)))(t || BarVertical2DComponent);\n  };\n}();\nBarVertical2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVertical2DComponent,\n  selectors: [[\"ngx-charts-bar-vertical-2d\"]],\n  contentQueries: function BarVertical2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    scaleType: \"scaleType\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVertical2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVertical2DComponent__svg_g_3_Template, 1, 11, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVertical2DComponent__svg_g_4_Template, 1, 10, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVertical2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, BarVertical2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.groupScale)(\"yScale\", ctx.valueScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Vertical);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVertical2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalNormalizedComponent_BaseFactory;\n  return function BarVerticalNormalizedComponent_Factory(t) {\n    return (ɵBarVerticalNormalizedComponent_BaseFactory || (ɵBarVerticalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalNormalizedComponent)))(t || BarVerticalNormalizedComponent);\n  };\n}();\nBarVerticalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-normalized\"]],\n  contentQueries: function BarVerticalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarVerticalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalNormalizedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalNormalizedComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVerticalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVerticalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name) || 0}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalStackedComponent_BaseFactory;\n  return function BarVerticalStackedComponent_Factory(t) {\n    return (ɵBarVerticalStackedComponent_BaseFactory || (ɵBarVerticalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalStackedComponent)))(t || BarVerticalStackedComponent);\n  };\n}();\nBarVerticalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalStackedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-stacked\"]],\n  contentQueries: function BarVerticalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVerticalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalStackedComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalStackedComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, BarVerticalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarChartModule {}\nBarChartModule.ɵfac = function BarChartModule_Factory(t) {\n  return new (t || BarChartModule)();\n};\nBarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BarChartModule\n});\nBarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent],\n      exports: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent]\n    }]\n  }], null, null);\n})();\nconst cloneDeep = rfdc();\nclass BoxComponent {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.BarOrientation = BarOrientation;\n    this.initialized = false;\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.nativeElm = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n  update() {\n    this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n    this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n    this.medianLineWidth = 1.5 * this.strokeWidth;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updateLineEl();\n    this.updatePathEl();\n    this.checkToHideBar();\n    this.maskLineId = 'mask' + id().toString();\n    this.maskLine = `url(#${this.maskLineId})`;\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n  loadAnimation() {\n    this.boxPath = this.oldPath = this.getStartingPath();\n    this.oldLineCoordinates = this.getStartingLineCoordinates();\n    setTimeout(this.update.bind(this), 100);\n  }\n  updatePathEl() {\n    const nodeBar = select(this.nativeElm).selectAll('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      nodeBar.attr('d', this.oldPath).transition().ease(easeSinInOut).duration(500).attrTween('d', this.pathTween(path, 4));\n    } else {\n      nodeBar.attr('d', path);\n    }\n    this.oldPath = path;\n  }\n  updateLineEl() {\n    const lineEl = select(this.nativeElm).selectAll('.bar-line');\n    const lineCoordinates = this.lineCoordinates;\n    const oldLineCoordinates = this.oldLineCoordinates;\n    if (this.animations) {\n      lineEl.attr('x1', (_, index) => oldLineCoordinates[index].v1.x).attr('y1', (_, index) => oldLineCoordinates[index].v1.y).attr('x2', (_, index) => oldLineCoordinates[index].v2.x).attr('y2', (_, index) => oldLineCoordinates[index].v2.y).transition().ease(easeSinInOut).duration(500).attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    } else {\n      lineEl.attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    }\n    this.oldLineCoordinates = [...lineCoordinates];\n  }\n  /**\n   * See [D3 Selections](https://www.d3indepth.com/selections/)\n   * @param d The joined data.\n   * @param index The index of the element within the selection\n   * @param node The node element (Line).\n   */\n  lineTween(attr, d, index, node) {\n    const nodeLineEl = node[index];\n    return nodeLineEl[attr].baseVal.value;\n  }\n  // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n  pathTween(d1, precision) {\n    return function () {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const path0 = this;\n      const path1 = this.cloneNode();\n      path1.setAttribute('d', d1);\n      const n0 = path0?.getTotalLength();\n      const n1 = path1?.getTotalLength();\n      // Uniform sampling of distance based on specified precision.\n      const distances = [0];\n      let i = 0;\n      const dt = precision / Math.max(n0, n1);\n      while (i < 1) {\n        distances.push(i);\n        i += dt;\n      }\n      distances.push(1);\n      // Compute point-interpolators at each distance.\n      const points = distances.map(t => {\n        const p0 = path0.getPointAtLength(t * n0);\n        const p1 = path1.getPointAtLength(t * n1);\n        return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n      });\n      // 't': T is the fraction of time (between 0 and 1) since the transition began.\n      return t => {\n        return t < 1 ? 'M' + points.map(p => p(t)).join('L') : d1;\n      };\n    };\n  }\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n    const radius = this.roundEdges ? 1 : 0;\n    const {\n      x,\n      y\n    } = this.lineCoordinates[2].v1;\n    return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n  }\n  getPath() {\n    const radius = this.getRadius();\n    let path = '';\n    path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n    return path;\n  }\n  getStartingLineCoordinates() {\n    if (!this.animations) {\n      return [...this.lineCoordinates];\n    }\n    const lineCoordinates = cloneDeep(this.lineCoordinates);\n    lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y = lineCoordinates[2].v1.y;\n    return lineCoordinates;\n  }\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n    return radius;\n  }\n  getGradient() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      edges = [true, true, true, true];\n    }\n    return edges;\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && this.height === 0;\n  }\n}\nBoxComponent.ɵfac = function BoxComponent_Factory(t) {\n  return new (t || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxComponent,\n  selectors: [[\"g\", \"ngx-charts-box\", \"\"]],\n  hostBindings: function BoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BoxComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BoxComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    lineCoordinates: \"lineCoordinates\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    gradientStops: \"gradientStops\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c30,\n  decls: 9,\n  vars: 13,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"height\", \"100%\", \"width\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"1\"], [\"fill\", \"black\", \"fill-opacity\", \"1\", 1, \"bar\"], [\"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"class\", \"bar-line\", \"fill\", \"none\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"fill\", \"none\", 1, \"bar-line\"]],\n  template: function BoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"defs\");\n      i0.ɵɵtemplate(1, BoxComponent__svg_g_1_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementStart(2, \"mask\")(3, \"g\");\n      i0.ɵɵelement(4, \"rect\", 1)(5, \"path\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"g\")(7, \"path\", 3);\n      i0.ɵɵlistener(\"click\", function BoxComponent_Template__svg_path_click_7_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BoxComponent__svg_line_8_Template, 1, 9, \"line\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.maskLineId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"d\", ctx.boxPath);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.boxPath)(\"stroke\", ctx.strokeColor)(\"stroke-width\", ctx.boxStrokeWidth)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lineCoordinates);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box]',\n      template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    lineCoordinates: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    gradientStops: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass BoxSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  update() {\n    this.updateTooltipSettings();\n    const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n    const seriesName = this.series.name;\n    // Calculate Quantile and Whiskers for each box serie.\n    this.counts = this.series.series;\n    const mappedCounts = this.counts.map(serie => Number(serie.value));\n    this.whiskers = [min(mappedCounts), max(mappedCounts)];\n    // We get the group count and must sort it in order to retrieve quantiles.\n    const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n    this.quartiles = this.getBoxQuantiles(groupCounts);\n    this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n    const value = this.quartiles[1];\n    const formattedLabel = formatLabel(seriesName);\n    const box = {\n      value,\n      data: this.counts,\n      label: seriesName,\n      formattedLabel,\n      width,\n      height: 0,\n      x: 0,\n      y: 0,\n      roundEdges: this.roundEdges,\n      quartiles: this.quartiles,\n      lineCoordinates: this.lineCoordinates\n    };\n    box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n    box.x = this.xScale(seriesName.toString());\n    box.y = this.yScale(this.quartiles[2]);\n    box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n    if (this.colors.scaleType === ScaleType.Ordinal) {\n      box.color = this.colors.getColor(seriesName);\n    } else {\n      box.color = this.colors.getColor(this.quartiles[1]);\n      box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n    }\n    const tooltipLabel = formattedLabel;\n    const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n    box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n    this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n    this.box = box;\n  }\n  getBoxQuantiles(inputData) {\n    return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n  }\n  getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n    // The X value is not being centered, so had to sum half the width to align it.\n    const commonX = this.xScale(seriesName);\n    const offsetX = commonX + barWidth / 2;\n    const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n    const whiskerLineWidth = Math.max(barWidth / 3, 1);\n    const whiskerZero = this.yScale(whiskers[0]);\n    const whiskerOne = this.yScale(whiskers[1]);\n    const median = this.yScale(quartiles[1]);\n    const topLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerZero\n      }\n    };\n    const medianLine = {\n      v1: {\n        x: offsetX + medianLineWidth / 2,\n        y: median\n      },\n      v2: {\n        x: offsetX - medianLineWidth / 2,\n        y: median\n      }\n    };\n    const bottomLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerOne\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerOne\n      }\n    };\n    const verticalLine = {\n      v1: {\n        x: offsetX,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX,\n        y: whiskerOne\n      }\n    };\n    return [verticalLine, topLine, medianLine, bottomLine];\n  }\n  updateTooltipSettings() {\n    if (this.tooltipDisabled) {\n      this.tooltipPlacement = undefined;\n      this.tooltipType = undefined;\n    } else {\n      if (!this.tooltipPlacement) {\n        this.tooltipPlacement = PlacementTypes.Top;\n      }\n      if (!this.tooltipType) {\n        this.tooltipType = StyleTypes.tooltip;\n      }\n    }\n  }\n}\nBoxSeriesComponent.ɵfac = function BoxSeriesComponent_Factory(t) {\n  return new (t || BoxSeriesComponent)();\n};\nBoxSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-box-series\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    animations: \"animations\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipType: \"tooltipType\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c31,\n  decls: 1,\n  vars: 22,\n  consts: [[\"ngx-charts-box\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"roundEdges\", \"fill\", \"gradientStops\", \"strokeColor\", \"strokeWidth\", \"data\", \"lineCoordinates\", \"gradient\", \"ariaLabel\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BoxSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"select\", function BoxSeriesComponent_Template__svg_g_select_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BoxSeriesComponent_Template__svg_g_activate_0_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function BoxSeriesComponent_Template__svg_g_deactivate_0_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx.animations)(\"width\", ctx.box.width)(\"height\", ctx.box.height)(\"x\", ctx.box.x)(\"y\", ctx.box.y)(\"roundEdges\", ctx.box.roundEdges)(\"fill\", ctx.box.color)(\"gradientStops\", ctx.box.gradientStops)(\"strokeColor\", ctx.strokeColor)(\"strokeWidth\", ctx.strokeWidth)(\"data\", ctx.box.data)(\"lineCoordinates\", ctx.box.lineCoordinates)(\"gradient\", ctx.gradient)(\"ariaLabel\", ctx.box.ariaLabel)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.tooltipPlacement)(\"tooltipType\", ctx.tooltipType)(\"tooltipTitle\", ctx.tooltipTitle)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.box.data)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [BoxComponent, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box-series]',\n      template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass BoxChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    /** Show or hide the legend. */\n    this.legend = false;\n    this.legendPosition = LegendPosition.Right;\n    this.legendTitle = 'Legend';\n    this.showGridLines = true;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.showXAxisLabel = true;\n    this.showYAxisLabel = true;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.strokeColor = '#FFFFFF';\n    this.strokeWidth = 2;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    /** Chart Margins (For each side, counterclock wise). */\n    this.margin = [10, 20, 10, 20];\n    /** Chart X axis dimension. */\n    this.xAxisHeight = 0;\n    /** Chart Y axis dimension. */\n    this.yAxisWidth = 0;\n  }\n  trackBy(index, item) {\n    return item.name;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  setColors() {\n    let domain = [];\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  setScales() {\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n  }\n  getXScale(domain, width) {\n    const scale = scaleBand().domain(domain.map(d => d.toString())).rangeRound([0, width]).padding(0.5);\n    return scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().domain(domain).range([height, 0]);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getUniqueBoxChartXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n      valueSet.add(result.name);\n    }\n    return Array.from(valueSet);\n  }\n  getXDomain() {\n    let domain = [];\n    const values = this.getUniqueBoxChartXDomainValues(this.results);\n    let min;\n    let max;\n    if (typeof values[0] === 'string') {\n      domain = values.map(val => val.toString());\n    } else if (typeof values[0] === 'number') {\n      const mappedValues = values.map(v => Number(v));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [min, max];\n    } else {\n      const mappedValues = values.map(v => Number(new Date(v)));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [new Date(min), new Date(max)];\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const values = [...domain];\n    const mappedValues = values.map(v => Number(v));\n    const min = Math.min(...mappedValues);\n    const max = Math.max(...mappedValues);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => `${d.name}`);\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  onActivate(data) {\n    this.activate.emit(data);\n  }\n  onDeactivate(data) {\n    this.deactivate.emit(data);\n  }\n  getLegendOptions() {\n    const legendOpts = {\n      scaleType: this.schemeType,\n      colors: this.colors,\n      domain: [],\n      position: this.legendPosition,\n      title: this.legendTitle\n    };\n    if (this.schemeType === ScaleType.Ordinal) {\n      legendOpts.domain = this.xDomain;\n      legendOpts.colors = this.colors;\n    } else {\n      legendOpts.domain = this.yDomain;\n      legendOpts.colors = this.colors.scale;\n    }\n    return legendOpts;\n  }\n}\nBoxChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBoxChartComponent_BaseFactory;\n  return function BoxChartComponent_Factory(t) {\n    return (ɵBoxChartComponent_BaseFactory || (ɵBoxChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BoxChartComponent)))(t || BoxChartComponent);\n  };\n}();\nBoxChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxChartComponent,\n  selectors: [[\"ngx-charts-box-chart\"]],\n  contentQueries: function BoxChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendPosition: \"legendPosition\",\n    legendTitle: \"legendTitle\",\n    legendOptionsConfig: \"legendOptionsConfig\",\n    showGridLines: \"showGridLines\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    roundDomains: \"roundDomains\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    roundEdges: \"roundEdges\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 23,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"box-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"dims\", \"yScale\", \"showLabel\", \"labelText\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-box-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"roundEdges\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"series\", \"dims\", \"animations\", \"gradient\", \"activate\", \"deactivate\", \"select\"]],\n  template: function BoxChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_2_listener($event) {\n        return ctx.updateXAxisHeight($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 3);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_3_listener($event) {\n        return ctx.updateYAxisWidth($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\");\n      i0.ɵɵtemplate(5, BoxChartComponent__svg_g_5_Template, 2, 12, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(20, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"xScale\", ctx.xScale)(\"showLabel\", ctx.showXAxisLabel)(\"labelText\", ctx.xAxisLabel)(\"wrapTicks\", ctx.wrapTicks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"yScale\", ctx.yScale)(\"showLabel\", ctx.showYAxisLabel)(\"labelText\", ctx.yAxisLabel)(\"wrapTicks\", ctx.wrapTicks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BoxSeriesComponent, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-box-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendOptionsConfig: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass BoxChartModule {}\nBoxChartModule.ɵfac = function BoxChartModule_Factory(t) {\n  return new (t || BoxChartModule)();\n};\nBoxChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BoxChartModule\n});\nBoxChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n      exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n    }]\n  }], null, null);\n})();\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n    if (!autoScale) {\n      values.push(0);\n    }\n  }\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n    const max = maxVal ? maxVal : Math.max(...values);\n    domain = [min, max];\n  } else {\n    domain = values;\n  }\n  return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n  switch (scaleType) {\n    case ScaleType.Time:\n      return scaleTime().range(range).domain(domain);\n    case ScaleType.Linear:\n      {\n        const scale = scaleLinear().range(range).domain(domain);\n        if (roundDomains) {\n          return scale.nice();\n        }\n        return scale;\n      }\n    case ScaleType.Ordinal:\n      return scalePoint().range([range[0], range[1]]).domain(domain.map(r => r.toString()));\n    default:\n      return undefined;\n  }\n}\nclass BubbleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.circles = this.getCircles();\n  }\n  getCircles() {\n    const seriesName = this.data.name;\n    return this.data.series.map((d, i) => {\n      if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n        const y = d.y;\n        const x = d.x;\n        const r = d.r;\n        const radius = this.rScale(r || 1);\n        const tooltipLabel = formatLabel(d.name);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n        const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n        const isActive = !this.activeEntries.length ? true : this.isActive({\n          name: seriesName\n        });\n        const opacity = isActive ? 1 : 0.3;\n        const data = Object.assign({}, d, {\n          series: seriesName,\n          name: d.name,\n          value: d.y,\n          x: d.x,\n          radius: d.r\n        });\n        return {\n          data,\n          x,\n          y,\n          r,\n          classNames: [`circle-data-${i}`],\n          value: y,\n          label: x,\n          cx,\n          cy,\n          radius,\n          tooltipLabel,\n          color,\n          opacity,\n          seriesName,\n          isActive,\n          transform: `translate(${cx},${cy})`\n        };\n      }\n    }).filter(circle => circle !== undefined);\n  }\n  getTooltipText(circle) {\n    const hasRadius = typeof circle.r !== 'undefined';\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n    const x = formatLabel(circle.x);\n    const y = formatLabel(circle.y);\n    const name = hasSeriesName && hasTooltipLabel ? `${circle.seriesName} • ${circle.tooltipLabel}` : circle.seriesName + circle.tooltipLabel;\n    const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n    return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isVisible(circle) {\n    if (this.activeEntries.length > 0) {\n      return this.isActive({\n        name: circle.seriesName\n      });\n    }\n    return circle.opacity !== 0;\n  }\n  activateCircle(circle) {\n    circle.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n  deactivateCircle(circle) {\n    circle.barVisible = false;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n  trackBy(index, circle) {\n    return `${circle.data.series} ${circle.data.name}`;\n  }\n}\nBubbleSeriesComponent.ɵfac = function BubbleSeriesComponent_Factory(t) {\n  return new (t || BubbleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nBubbleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-bubble-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    rScale: \"rScale\",\n    xScaleType: \"xScaleType\",\n    yScaleType: \"yScaleType\",\n    colors: \"colors\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c32,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"active\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BubbleSeriesComponent__svg_g_0_Template, 4, 3, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CircleComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }), animate(250, style({\n      opacity: 1,\n      transform: 'scale(1)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bubble-series]',\n      template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }), animate(250, style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    rScale: [{\n      type: Input\n    }],\n    xScaleType: [{\n      type: Input\n    }],\n    yScaleType: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass BubbleChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.showGridLines = true;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.maxRadius = 10;\n    this.minRadius = 3;\n    this.schemeType = ScaleType.Ordinal;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.scaleType = ScaleType.Linear;\n    this.margin = [10, 20, 10, 20];\n    this.bubblePadding = [0, 0, 0, 0];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.activeEntries = [];\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.seriesDomain = this.results.map(d => d.name);\n    this.rDomain = this.getRDomain();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n    const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n    this.data = this.results;\n    this.minRadius = Math.max(this.minRadius, 1);\n    this.maxRadius = Math.max(this.maxRadius, 1);\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n    this.bubblePadding = [0, 0, 0, 0];\n    this.setScales();\n    this.bubblePadding = this.getBubblePadding();\n    this.setScales();\n    this.legendOptions = this.getLegendOptions();\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  hideCircles() {\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  getBubblePadding() {\n    let yMin = 0;\n    let xMin = 0;\n    let yMax = this.dims.height;\n    let xMax = this.dims.width;\n    for (const s of this.data) {\n      for (const d of s.series) {\n        const r = this.rScale(d.r);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n        xMin = Math.max(r - cx, xMin);\n        yMin = Math.max(r - cy, yMin);\n        yMax = Math.max(cy + r, yMax);\n        xMax = Math.max(cx + r, xMax);\n      }\n    }\n    xMax = Math.max(xMax - this.dims.width, 0);\n    yMax = Math.max(yMax - this.dims.height, 0);\n    return [yMin, xMax, yMax, xMin];\n  }\n  setScales() {\n    let width = this.dims.width;\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n      width = width - this.bubblePadding[1];\n    }\n    let height = this.dims.height;\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n      height = height - this.bubblePadding[2];\n    }\n    this.xScale = this.getXScale(this.xDomain, width);\n    this.yScale = this.getYScale(this.yDomain, height);\n  }\n  getYScale(domain, height) {\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n  }\n  getXScale(domain, width) {\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n  }\n  getRScale(domain, range) {\n    const scale = scaleLinear().range(range).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      position: this.legendPosition,\n      title: undefined\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.rDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  getXDomain() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.x)) {\n          values.push(d.x);\n        }\n      }\n    }\n    this.xScaleType = getScaleType(values);\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n  }\n  getYDomain() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.y)) {\n          values.push(d.y);\n        }\n      }\n    }\n    this.yScaleType = getScaleType(values);\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n  }\n  getRDomain() {\n    let min = Infinity;\n    let max = -Infinity;\n    for (const results of this.results) {\n      for (const d of results.series) {\n        const value = Number(d.r) || 1;\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    }\n    return [min, max];\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n}\nBubbleChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBubbleChartComponent_BaseFactory;\n  return function BubbleChartComponent_Factory(t) {\n    return (ɵBubbleChartComponent_BaseFactory || (ɵBubbleChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BubbleChartComponent)))(t || BubbleChartComponent);\n  };\n}();\nBubbleChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleChartComponent,\n  selectors: [[\"ngx-charts-bubble-chart\"]],\n  contentQueries: function BubbleChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function BubbleChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function BubbleChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    showGridLines: \"showGridLines\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    maxRadius: \"maxRadius\",\n    minRadius: \"minRadius\",\n    autoScale: \"autoScale\",\n    schemeType: \"schemeType\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 19,\n  consts: [[3, \"view\", \"showLegend\", \"activeEntries\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bubble-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"x\", \"0\", \"y\", \"0\", 1, \"bubble-chart-area\", 2, \"fill\", \"rgb(255, 0, 0)\", \"opacity\", \"0\", \"cursor\", \"'auto'\", 3, \"mouseenter\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bubble-series\", \"\", 3, \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"xAxisLabel\", \"yAxisLabel\", \"colors\", \"data\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, BubbleChartComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, BubbleChartComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"rect\", 4);\n      i0.ɵɵlistener(\"mouseenter\", function BubbleChartComponent_Template__svg_rect_mouseenter_7_listener() {\n        return ctx.deactivateAll();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BubbleChartComponent__svg_g_8_Template, 2, 3, \"g\", 5);\n      i0.ɵɵtemplate(9, BubbleChartComponent__svg_g_9_Template, 2, 3, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"activeEntries\", ctx.activeEntries)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BubbleSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bubble-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    showGridLines: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    maxRadius: [{\n      type: Input\n    }],\n    minRadius: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass BubbleChartModule {}\nBubbleChartModule.ɵfac = function BubbleChartModule_Factory(t) {\n  return new (t || BubbleChartModule)();\n};\nBubbleChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BubbleChartModule\n});\nBubbleChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BubbleChartComponent, BubbleSeriesComponent],\n      exports: [BubbleChartComponent, BubbleSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass HeatMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.transform = `translate(${this.x} , ${this.y})`;\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n    if (this.animations) {\n      this.loadAnimation();\n    }\n  }\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0);\n    this.animateToCurrentForm();\n  }\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    node.transition().duration(750).attr('opacity', 1);\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n}\nHeatMapCellComponent.ɵfac = function HeatMapCellComponent_Factory(t) {\n  return new (t || HeatMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nHeatMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell\", \"\"]],\n  hostBindings: function HeatMapCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function HeatMapCellComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function HeatMapCellComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    data: \"data\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c33,\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"cell\"], [4, \"ngIf\"], [\"rx\", \"3\", 1, \"cell\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function HeatMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, HeatMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"rect\", 2);\n      i0.ɵɵlistener(\"click\", function HeatMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass HeatCellSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnInit() {\n    if (!this.tooltipText) {\n      this.tooltipText = this.getTooltipText;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.cells = this.getCells();\n  }\n  getCells() {\n    const cells = [];\n    this.data.map(row => {\n      row.series.map(cell => {\n        const value = cell.value;\n        cell.series = row.name;\n        cells.push({\n          row,\n          cell,\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors.getColor(value),\n          data: value,\n          label: formatLabel(cell.name),\n          series: row.name\n        });\n      });\n    });\n    return cells;\n  }\n  getTooltipText({\n    label,\n    data,\n    series\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n}\nHeatCellSeriesComponent.ɵfac = function HeatCellSeriesComponent_Factory(t) {\n  return new (t || HeatCellSeriesComponent)();\n};\nHeatCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    colors: \"colors\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c34,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function HeatCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HeatCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [HeatMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass HeatMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.innerPadding = 8;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.tooltipDisabled = false;\n    this.activeEntries = [];\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.scaleType = ScaleType.Linear;\n  }\n  update() {\n    super.update();\n    this.formatDates();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n    this.scaleType = getScaleType(this.valueDomain, false);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.scaleType,\n      legendPosition: this.legendPosition\n    });\n    if (this.scaleType === ScaleType.Linear) {\n      let min = this.min;\n      let max = this.max;\n      if (!this.min) {\n        min = Math.min(0, ...this.valueDomain);\n      }\n      if (!this.max) {\n        max = Math.max(...this.valueDomain);\n      }\n      this.valueDomain = [min, max];\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.rects = this.getRects();\n  }\n  getXDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    return domain;\n  }\n  /**\n   * Converts the input to gap paddingInner in fraction\n   * Supports the following inputs:\n   *    Numbers: 8\n   *    Strings: \"8\", \"8px\", \"8%\"\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n   *\n   * @memberOf HeatMapComponent\n   */\n  getDimension(value, index = 0, N, L) {\n    if (typeof value === 'string') {\n      value = value.replace('[', '').replace(']', '').replace('px', '')\n      // tslint:disable-next-line: quotemark\n      .replace(\"'\", '');\n      if (value.includes(',')) {\n        value = value.split(',');\n      }\n    }\n    if (Array.isArray(value) && typeof index === 'number') {\n      return this.getDimension(value[index], null, N, L);\n    }\n    if (typeof value === 'string' && value.includes('%')) {\n      return +value.replace('%', '') / 100;\n    }\n    return N / (L / +value + 1);\n  }\n  getXScale() {\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n    return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n  }\n  getYScale() {\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n    return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n  }\n  getRects() {\n    const rects = [];\n    this.xDomain.map(xVal => {\n      this.yDomain.map(yVal => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n    return rects;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: this.scaleType,\n      domain: this.valueDomain,\n      colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n      title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n      position: this.legendPosition\n    };\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nHeatMapComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵHeatMapComponent_BaseFactory;\n  return function HeatMapComponent_Factory(t) {\n    return (ɵHeatMapComponent_BaseFactory || (ɵHeatMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(HeatMapComponent)))(t || HeatMapComponent);\n  };\n}();\nHeatMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapComponent,\n  selectors: [[\"ngx-charts-heat-map\"]],\n  contentQueries: function HeatMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    gradient: \"gradient\",\n    innerPadding: \"innerPadding\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    min: \"min\",\n    max: \"max\",\n    activeEntries: \"activeEntries\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"legendOptions\", \"legendLabelClick\"], [1, \"heat-map\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-heat-map-cell-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"]],\n  template: function HeatMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, HeatMapComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, HeatMapComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, HeatMapComponent__svg_rect_4_Template, 1, 6, \"rect\", 4);\n      i0.ɵɵelementStart(5, \"g\", 5);\n      i0.ɵɵlistener(\"select\", function HeatMapComponent_Template__svg_g_select_5_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function HeatMapComponent_Template__svg_g_activate_5_listener($event) {\n        return ctx.onActivate($event, undefined);\n      })(\"deactivate\", function HeatMapComponent_Template__svg_g_deactivate_5_listener($event) {\n        return ctx.onDeactivate($event, undefined);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"animations\", ctx.animations)(\"legendOptions\", ctx.legendOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"data\", ctx.results)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, HeatCellSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-heat-map',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass HeatMapModule {}\nHeatMapModule.ɵfac = function HeatMapModule_Factory(t) {\n  return new (t || HeatMapModule)();\n};\nHeatMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HeatMapModule\n});\nHeatMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n      exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n    }]\n  }], null, null);\n})();\nclass LineComponent {\n  constructor(element, platformId) {\n    this.element = element;\n    this.platformId = platformId;\n    this.fill = 'none';\n    this.animations = true;\n    // @Output() select = new EventEmitter();\n    this.initialized = false;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n  updatePathEl() {\n    const node = select(this.element.nativeElement).select('.line');\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n}\nLineComponent.ɵfac = function LineComponent_Factory(t) {\n  return new (t || LineComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nLineComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineComponent,\n  selectors: [[\"g\", \"ngx-charts-line\", \"\"]],\n  inputs: {\n    path: \"path\",\n    stroke: \"stroke\",\n    data: \"data\",\n    fill: \"fill\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c36,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"stroke-width\", \"1.5px\", 1, \"line\"]],\n  template: function LineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LineComponent__svg_g_0_Template, 2, 4, \"g\", 0);\n      i0.ɵɵtemplate(1, LineComponent__svg_g_1_Template, 2, 3, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      strokeDasharray: 2000,\n      strokeDashoffset: 2000\n    }), animate(1000, style({\n      strokeDashoffset: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        strokeDasharray: 2000,\n        strokeDashoffset: 2000\n      }), animate(1000, style({\n        strokeDashoffset: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    path: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\nclass LineSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.barOrientation = BarOrientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradients();\n    const data = this.sortData(this.data.series);\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n  getLineGenerator() {\n    return line().x(d => {\n      const label = d.name;\n      let value;\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n      return value;\n    }).y(d => this.yScale(d.value)).curve(this.curve);\n  }\n  getRangeGenerator() {\n    return area().x(d => {\n      const label = d.name;\n      let value;\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n      return value;\n    }).y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value)).y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value)).curve(this.curve);\n  }\n  getAreaGenerator() {\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n    return area().x(xProperty).y0(() => this.yScale.range()[0]).y1(d => this.yScale(d.value)).curve(this.curve);\n  }\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    return data;\n  }\n  updateGradients() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\nLineSeriesComponent.ɵfac = function LineSeriesComponent_Factory(t) {\n  return new (t || LineSeriesComponent)();\n};\nLineSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-line-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    hasRange: \"hasRange\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c37,\n  decls: 6,\n  vars: 22,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-area\", \"\", 1, \"line-highlight\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"startOpacity\", \"gradient\", \"stops\", \"animations\"], [\"ngx-charts-line\", \"\", 1, \"line-series\", 3, \"data\", \"path\", \"stroke\", \"animations\"], [\"ngx-charts-area\", \"\", \"class\", \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"active\", \"inactive\", \"opacity\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"ngx-charts-area\", \"\", 1, \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"animations\"]],\n  template: function LineSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n      i0.ɵɵtemplate(2, LineSeriesComponent__svg_g_2_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 1)(4, \"g\", 2);\n      i0.ɵɵtemplate(5, LineSeriesComponent__svg_g_5_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.areaPath)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.colors.getColor(ctx.data.name))(\"opacity\", 0.25)(\"startOpacity\", 0)(\"gradient\", true)(\"stops\", ctx.areaGradientStops)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"stroke\", ctx.stroke)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasRange);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, AreaComponent, LineComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line-series]',\n      template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    hasRange: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\nclass LineChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showRefLines = false;\n    this.showRefLabels = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, width]).domain(domain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, width]).domain(domain);\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n    }\n    return scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    this.deactivateAll();\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nLineChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵLineChartComponent_BaseFactory;\n  return function LineChartComponent_Factory(t) {\n    return (ɵLineChartComponent_BaseFactory || (ɵLineChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LineChartComponent)))(t || LineChartComponent);\n  };\n}();\nLineChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineChartComponent,\n  selectors: [[\"ngx-charts-line-chart\"]],\n  contentQueries: function LineChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function LineChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function LineChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showRefLines: \"showRefLines\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 12,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"line-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"wrapTicks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"hasRange\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"curve\", \"hasRange\", \"animations\"]],\n  template: function LineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, LineChartComponent__svg_g_5_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(6, LineChartComponent__svg_g_6_Template, 1, 13, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, LineChartComponent__svg_g_8_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(9, LineChartComponent__svg_g_9_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(10, LineChartComponent__svg_g_10_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LineChartComponent__svg_g_11_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, LineSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-line-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass LineChartModule {}\nLineChartModule.ɵfac = function LineChartModule_Factory(t) {\n  return new (t || LineChartModule)();\n};\nLineChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LineChartModule\n});\nLineChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n      exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass PieLabelComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.animations = true;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.trimLabel = trimLabel;\n  }\n  ngOnChanges(changes) {\n    this.setTransforms();\n    this.update();\n  }\n  setTransforms() {\n    if (isPlatformServer(this.platformId)) {\n      this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = `translate(${this.textX},${this.textY})`;\n      this.textTransition = !this.animations ? null : 'transform 0.75s';\n    } else {\n      const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n      this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n      this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n    }\n  }\n  update() {\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n    const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n    // Calculate innerPos then scale outer position to match label position\n    const innerPos = innerArc.centroid(this.data);\n    let scale = this.data.pos[1] / innerPos[1];\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n  get textX() {\n    return this.data.pos[0];\n  }\n  get textY() {\n    return this.data.pos[1];\n  }\n  textAnchor() {\n    return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n  }\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n}\nPieLabelComponent.ɵfac = function PieLabelComponent_Factory(t) {\n  return new (t || PieLabelComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nPieLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-label\", \"\"]],\n  inputs: {\n    data: \"data\",\n    radius: \"radius\",\n    label: \"label\",\n    color: \"color\",\n    max: \"max\",\n    value: \"value\",\n    explodeSlices: \"explodeSlices\",\n    animations: \"animations\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c38,\n  decls: 6,\n  vars: 17,\n  consts: [[\"dy\", \".35em\", 1, \"pie-label\"], [\"fill\", \"none\", 1, \"pie-label-line\", \"line\"]],\n  template: function PieLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"title\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(2, \"g\")(3, \"text\", 0);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"path\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"transform\", ctx.styleTransform)(\"transition\", ctx.textTransition);\n      i0.ɵɵattribute(\"transform\", ctx.attrTransform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", ctx.textAnchor())(\"shape-rendering\", \"crispEdges\");\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.labelTrim ? ctx.trimLabel(ctx.label, ctx.labelTrimSize) : ctx.label, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵattribute(\"d\", ctx.line)(\"stroke\", ctx.color);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-label]',\n      template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }]\n  });\n})();\nclass PolarSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.circleRadius = 3;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradients();\n    const line = this.getLineGenerator();\n    const data = this.sortData(this.data.series);\n    const seriesName = this.data.name;\n    const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n    const min = this.yScale.domain()[0];\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n    this.path = line(data) || '';\n    this.circles = data.map(d => {\n      const a = this.getAngle(d);\n      const r = this.getRadius(d);\n      const value = d.value;\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n      const cData = Object.assign({}, d, {\n        series: seriesName,\n        value,\n        name: d.name\n      });\n      return {\n        data: cData,\n        cx: r * Math.sin(a),\n        cy: -r * Math.cos(a),\n        value,\n        color,\n        label: d.name\n      };\n    });\n    this.active = this.isActive(this.data);\n    this.inactive = this.isInactive(this.data);\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n  }\n  getAngle(d) {\n    const label = d.name;\n    if (this.scaleType === ScaleType.Time) {\n      return this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      return this.xScale(Number(label));\n    }\n    return this.xScale(label);\n  }\n  getRadius(d) {\n    return this.yScale(d.value);\n  }\n  getLineGenerator() {\n    return lineRadial().angle(d => this.getAngle(d)).radius(d => this.getRadius(d)).curve(this.curve);\n  }\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      return sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      return sortByTime(data, 'name');\n    }\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n  defaultTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n  updateGradients() {\n    this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n    if (!this.hasGradient) {\n      return;\n    }\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    if (this.colors.scaleType === ScaleType.Linear) {\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n    } else {\n      this.gradientStops = undefined;\n    }\n  }\n}\nPolarSeriesComponent.ɵfac = function PolarSeriesComponent_Factory(t) {\n  return new (t || PolarSeriesComponent)();\n};\nPolarSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-polar-series\", \"\"]],\n  inputs: {\n    name: \"name\",\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    gradient: \"gradient\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c39,\n  decls: 5,\n  vars: 11,\n  consts: [[1, \"polar-charts-series\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-line\", \"\", 1, \"polar-series-path\", 3, \"path\", \"stroke\", \"fill\", \"animations\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"defs\");\n      i0.ɵɵtemplate(2, PolarSeriesComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 2);\n      i0.ɵɵtemplate(4, PolarSeriesComponent__svg_g_4_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.active)(\"inactive\", ctx.inactive);\n      i0.ɵɵproperty(\"path\", ctx.path)(\"stroke\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"animations\", ctx.animations);\n      i0.ɵɵattribute(\"fill-opacity\", ctx.rangeFillOpacity);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles);\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, LineComponent, CircleComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-polar-series]',\n      template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveCardinalClosed;\n    this.activeEntries = [];\n    this.rangeFillOpacity = 0.15;\n    this.trimYAxisTicks = true;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showSeriesOnHover = true;\n    this.gradient = false;\n    this.yAxisMinScale = 0;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    // series: any; // ???\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.orientation = Orientation;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.setDims();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.setTicks();\n  }\n  setDims() {\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    const halfWidth = Math.floor(this.dims.width / 2);\n    const halfHeight = Math.floor(this.dims.height / 2);\n    const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n    const yOffset = Math.max(0, halfHeight - outerRadius);\n    this.yAxisDims = {\n      ...this.dims,\n      width: halfWidth\n    };\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.transformYAxis = `translate(0, ${yOffset})`;\n    this.labelOffset = this.dims.height + 40;\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n  }\n  setScales() {\n    const xValues = this.getXValues();\n    this.scaleType = getScaleType(xValues);\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, twoPI);\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n  }\n  setTicks() {\n    let tickFormat;\n    if (this.xAxisTickFormatting) {\n      tickFormat = this.xAxisTickFormatting;\n    } else if (this.xScale.tickFormat) {\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n    } else {\n      tickFormat = d => {\n        if (isDate(d)) {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    const outerRadius = this.outerRadius;\n    const s = 1.1;\n    this.thetaTicks = this.xDomain.map(d => {\n      const startAngle = this.xScale(d);\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n      const label = tickFormat(d);\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n      const pos = [dd, s * startPos[1]];\n      return {\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle: startAngle,\n        value: outerRadius,\n        label,\n        startPos,\n        pos\n      };\n    });\n    const minDistance = 10;\n    /* from pie chart, abstract out -*/\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n      const a = this.thetaTicks[i];\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\n        const b = this.thetaTicks[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n    this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n  }\n  getXValues() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    return values;\n  }\n  getXDomain(values = this.getXValues()) {\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    }\n    return values;\n  }\n  getYValues() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    return domain;\n  }\n  getYDomain(domain = this.getYValues()) {\n    let min = Math.min(...domain);\n    const max = Math.max(this.yAxisMinScale, ...domain);\n    min = Math.max(0, min);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    switch (this.scaleType) {\n      case ScaleType.Time:\n        return scaleTime().range([0, width]).domain(domain);\n      case ScaleType.Linear:\n        {\n          const scale = scaleLinear().range([0, width]).domain(domain);\n          return this.roundDomains ? scale.nice() : scale;\n        }\n      default:\n        return scalePoint().range([0, width - twoPI / domain.length]).padding(0).domain(domain);\n    }\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([0, height]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    if (this.schemeType === ScaleType.Ordinal) {\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: this.seriesDomain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    return {\n      scaleType: this.schemeType,\n      colors: this.colors.scale,\n      domain: this.yDomain,\n      title: undefined,\n      position: this.legendPosition\n    };\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n}\nPolarChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPolarChartComponent_BaseFactory;\n  return function PolarChartComponent_Factory(t) {\n    return (ɵPolarChartComponent_BaseFactory || (ɵPolarChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PolarChartComponent)))(t || PolarChartComponent);\n  };\n}();\nPolarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarChartComponent,\n  selectors: [[\"ngx-charts-polar-chart\"]],\n  contentQueries: function PolarChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showSeriesOnHover: \"showSeriesOnHover\",\n    gradient: \"gradient\",\n    yAxisMinScale: \"yAxisMinScale\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 17,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"polar-chart\", \"chart\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"polar-chart-background\"], [4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"gridline-path radial-gridline-path\", \"cx\", \"0\", \"cy\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"gridline-path\", \"radial-gridline-path\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"wrapTicks\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-polar-series\", \"\", 3, \"gradient\", \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\");\n      i0.ɵɵelement(3, \"circle\", 2);\n      i0.ɵɵtemplate(4, PolarChartComponent__svg_g_4_Template, 2, 1, \"g\", 3);\n      i0.ɵɵtemplate(5, PolarChartComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, PolarChartComponent__svg_g_6_Template, 1, 10, \"g\", 4);\n      i0.ɵɵtemplate(7, PolarChartComponent__svg_g_7_Template, 1, 5, \"g\", 5);\n      i0.ɵɵtemplate(8, PolarChartComponent__svg_g_8_Template, 2, 3, \"g\", 3);\n      i0.ɵɵtemplate(9, PolarChartComponent__svg_g_9_Template, 2, 3, \"g\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(14, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transformPlot);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"r\", ctx.outerRadius);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showGridLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis && ctx.showXAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, PieLabelComponent, YAxisComponent, AxisLabelComponent, PolarSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25, \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-polar-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showSeriesOnHover: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    yAxisMinScale: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass PieArcComponent {\n  constructor(element) {\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.cornerRadius = 0;\n    this.explodeSlices = false;\n    this.gradient = false;\n    this.animate = true;\n    this.pointerEvents = true;\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n  update() {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n  calculateArc() {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = this.outerRadius * this.value / this.max;\n    }\n    return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n  }\n  loadAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().attrTween('d', function (d) {\n      this._current = this._current || d;\n      const copyOfD = Object.assign({}, d);\n      copyOfD.endAngle = copyOfD.startAngle;\n      const interpolater = interpolate(copyOfD, copyOfD);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    }).transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n  updateAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n  onClick() {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n  onDblClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n}\nPieArcComponent.ɵfac = function PieArcComponent_Factory(t) {\n  return new (t || PieArcComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPieArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieArcComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-arc\", \"\"]],\n  inputs: {\n    fill: \"fill\",\n    startAngle: \"startAngle\",\n    endAngle: \"endAngle\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    cornerRadius: \"cornerRadius\",\n    value: \"value\",\n    max: \"max\",\n    data: \"data\",\n    explodeSlices: \"explodeSlices\",\n    gradient: \"gradient\",\n    animate: \"animate\",\n    pointerEvents: \"pointerEvents\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c40,\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"arc-group\"], [4, \"ngIf\"], [1, \"arc\", 3, \"click\", \"dblclick\", \"mouseenter\", \"mouseleave\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\"]],\n  template: function PieArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieArcComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"path\", 2);\n      i0.ɵɵlistener(\"click\", function PieArcComponent_Template__svg_path_click_2_listener() {\n        return ctx.onClick();\n      })(\"dblclick\", function PieArcComponent_Template__svg_path_dblclick_2_listener($event) {\n        return ctx.onDblClick($event);\n      })(\"mouseenter\", function PieArcComponent_Template__svg_path_mouseenter_2_listener() {\n        return ctx.activate.emit(ctx.data);\n      })(\"mouseleave\", function PieArcComponent_Template__svg_path_mouseleave_2_listener() {\n        return ctx.deactivate.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"pointer-events\", ctx.getPointerEvents());\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"fill\", ctx.getGradient());\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-arc]',\n      template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    endAngle: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\nclass PieSeriesComponent {\n  constructor() {\n    this.series = [];\n    this.innerRadius = 60;\n    this.outerRadius = 80;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    const pieGenerator = pie().value(d => d.value).sort(null);\n    const arcData = pieGenerator(this.series);\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n  outerArc() {\n    const factor = 1.5;\n    return arc().innerRadius(this.outerRadius * factor).outerRadius(this.outerRadius * factor);\n  }\n  calculateLabelPositions(pieData) {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n        if (!this.labelVisible(b)) {\n          continue;\n        }\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n    return labelPositions;\n  }\n  labelVisible(myArc) {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n  labelText(myArc) {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n    return this.label(myArc);\n  }\n  label(myArc) {\n    return formatLabel(myArc.data.name);\n  }\n  defaultTooltipText(myArc) {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n  color(myArc) {\n    return this.colors.getColor(this.label(myArc));\n  }\n  trackBy(index, item) {\n    return item.data.name;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n}\nPieSeriesComponent.ɵfac = function PieSeriesComponent_Factory(t) {\n  return new (t || PieSeriesComponent)();\n};\nPieSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    series: \"series\",\n    dims: \"dims\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    explodeSlices: \"explodeSlices\",\n    showLabels: \"showLabels\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c41,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"gradient\", \"data\", \"max\", \"explodeSlices\", \"isActive\", \"animate\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", \"dblclick\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\"]],\n  template: function PieSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PieSeriesComponent__svg_g_0_Template, 3, 19, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieLabelComponent, PieArcComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-series]',\n      template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    colors: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    showLabels: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\nclass AdvancedPieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width * 4 / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nAdvancedPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAdvancedPieChartComponent_BaseFactory;\n  return function AdvancedPieChartComponent_Factory(t) {\n    return (ɵAdvancedPieChartComponent_BaseFactory || (ɵAdvancedPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AdvancedPieChartComponent)))(t || AdvancedPieChartComponent);\n  };\n}();\nAdvancedPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedPieChartComponent,\n  selectors: [[\"ngx-charts-advanced-pie-chart\"]],\n  contentQueries: function AdvancedPieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    valueFormatting: \"valueFormatting\",\n    nameFormatting: \"nameFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 37,\n  consts: [[1, \"advanced-pie\", \"chart\"], [3, \"view\", \"showLegend\", \"animations\"], [1, \"pie\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"innerRadius\", \"activeEntries\", \"outerRadius\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"animations\", \"select\", \"activate\", \"deactivate\"], [1, \"advanced-pie-legend-wrapper\"], [3, \"data\", \"colors\", \"width\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\", \"select\", \"activate\", \"deactivate\"]],\n  template: function AdvancedPieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"ngx-charts-chart\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(3, \"g\", 2)(4, \"g\", 3);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"ngx-charts-advanced-legend\", 5);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.dims.width, \"px\")(\"height\", ctx.dims.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(34, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.results)(\"innerRadius\", ctx.innerRadius)(\"activeEntries\", ctx.activeEntries)(\"outerRadius\", ctx.outerRadius)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.width - ctx.dims.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.results)(\"colors\", ctx.colors)(\"width\", ctx.width - ctx.dims.width - ctx.margin[1])(\"label\", ctx.label)(\"animations\", ctx.animations)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.nameFormatting)(\"percentageFormatting\", ctx.percentageFormatting);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent, AdvancedLegendComponent],\n  styles: [_c25, \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedPieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-pie-chart',\n      template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"]\n    }]\n  }], null, {\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    nameFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\nclass PieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.labels = false;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.explodeSlices = false;\n    this.doughnut = false;\n    this.arcWidth = 0.25;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.dblclick = new EventEmitter();\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  update() {\n    super.update();\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\n      this.margins = [30, 80, 30, 80];\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n      // default value for margins\n      this.margins = [20, 20, 20, 20];\n    }\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margins,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    const xOffset = this.margins[3] + this.dims.width / 2;\n    const yOffset = this.margins[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n    this.domain = this.getDomain();\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  hasNoOptionalMarginsSet() {\n    return !this.margins || this.margins.length <= 0;\n  }\n}\nPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPieChartComponent_BaseFactory;\n  return function PieChartComponent_Factory(t) {\n    return (ɵPieChartComponent_BaseFactory || (ɵPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieChartComponent)))(t || PieChartComponent);\n  };\n}();\nPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieChartComponent,\n  selectors: [[\"ngx-charts-pie-chart\"]],\n  contentQueries: function PieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    labels: \"labels\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    explodeSlices: \"explodeSlices\",\n    doughnut: \"doughnut\",\n    arcWidth: \"arcWidth\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    margins: \"margins\"\n  },\n  outputs: {\n    dblclick: \"dblclick\",\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 24,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"pie-chart\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"showLabels\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"activeEntries\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"dblclick\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      })(\"legendLabelClick\", function PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dblclick\", function PieChartComponent_Template__svg_g_dblclick_2_listener($event) {\n        return ctx.dblclick.emit($event);\n      })(\"select\", function PieChartComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function PieChartComponent_Template__svg_g_activate_2_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function PieChartComponent_Template__svg_g_deactivate_2_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(21, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.translation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.data)(\"showLabels\", ctx.labels)(\"labelFormatting\", ctx.labelFormatting)(\"trimLabels\", ctx.trimLabels)(\"maxLabelLength\", ctx.maxLabelLength)(\"activeEntries\", ctx.activeEntries)(\"innerRadius\", ctx.innerRadius)(\"outerRadius\", ctx.outerRadius)(\"explodeSlices\", ctx.explodeSlices)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent],\n  styles: [_c25, _c42],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"]\n    }]\n  }], null, {\n    labels: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    doughnut: [{\n      type: Input\n    }],\n    arcWidth: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    dblclick: [{\n      type: Output\n    }],\n    margins: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nfunction gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n  return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale = scaleBand();\n  const yScale = scaleBand();\n  const width = dims.width;\n  const height = dims.height;\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n      label: data[i] ? data[i].label : ''\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n  return res;\n}\nfunction getTotal(results) {\n  return results.map(d => d ? d.value : 0).reduce((sum, val) => sum + val, 0);\n}\nclass PieGridSeriesComponent {\n  constructor(element) {\n    this.innerRadius = 70;\n    this.outerRadius = 80;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.layout = pie().value(d => d.data.value).sort(null);\n    this.arcs = this.getArcs();\n  }\n  getArcs() {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n  onClick(data) {\n    this.select.emit(this.data[0].data);\n  }\n  trackBy(index, item) {\n    return item.data.name;\n  }\n  label(arc) {\n    return arc.data.name;\n  }\n  color(arc) {\n    return this.colors(this.label(arc));\n  }\n}\nPieGridSeriesComponent.ɵfac = function PieGridSeriesComponent_Factory(t) {\n  return new (t || PieGridSeriesComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPieGridSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-grid-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    data: \"data\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c43,\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"pie-grid-arcs\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieGridSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieGridSeriesComponent__svg_g_1_Template, 1, 11, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieArcComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-grid-series]',\n      template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    colors: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass PieGridComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.minWidth = 150;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n    this.series = this.getSeries();\n    this.setColors();\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n  defaultTooltipText({\n    data\n  }) {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  getSeries() {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n    return this.data.map(d => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n      const innerRadius = radius * 0.9;\n      let count = 0;\n      const colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: d.data.name\n          }\n        }]\n      };\n    });\n  }\n  getTotal() {\n    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nPieGridComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPieGridComponent_BaseFactory;\n  return function PieGridComponent_Factory(t) {\n    return (ɵPieGridComponent_BaseFactory || (ɵPieGridComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieGridComponent)))(t || PieGridComponent);\n  };\n}();\nPieGridComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridComponent,\n  selectors: [[\"ngx-charts-pie-grid\"]],\n  contentQueries: function PieGridComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    designatedTotal: \"designatedTotal\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    minWidth: \"minWidth\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"pie-grid\", \"chart\"], [\"class\", \"pie-grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"pie-grid-item\"], [\"ngx-charts-pie-grid-series\", \"\", \"ngx-tooltip\", \"\", 3, \"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countPrefix\", 4, \"ngIf\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\", 3, \"countTo\", \"countSuffix\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 1, \"label\", 3, \"countTo\", \"countPrefix\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 1, \"label\"]],\n  template: function PieGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, PieGridComponent__svg_g_2_Template, 8, 19, \"g\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(5, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.series);\n    }\n  },\n  dependencies: [ChartComponent, PieGridSeriesComponent, CountUpDirective, i2.NgForOf, TooltipDirective, i2.NgIf],\n  styles: [_c25, \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-grid',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"]\n    }]\n  }], null, {\n    designatedTotal: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass PieChartModule {}\nPieChartModule.ɵfac = function PieChartModule_Factory(t) {\n  return new (t || PieChartModule)();\n};\nPieChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PieChartModule\n});\nPieChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent],\n      exports: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass PolarChartModule {}\nPolarChartModule.ɵfac = function PolarChartModule_Factory(t) {\n  return new (t || PolarChartModule)();\n};\nPolarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PolarChartModule\n});\nPolarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, LineChartModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, LineChartModule],\n      declarations: [PolarChartComponent, PolarSeriesComponent],\n      exports: [PolarChartComponent, PolarSeriesComponent]\n    }]\n  }], null, null);\n})();\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n  return text.split('').reduce((acc, curr) => {\n    const width = fontFamilyKey[curr] || defaultWidth;\n    return acc + width;\n  }, 0);\n}\nconst VERDANA_FONT_WIDTHS_16_PX = {\n  '0': 10,\n  '1': 10,\n  '2': 10,\n  '3': 10,\n  '4': 10,\n  '5': 10,\n  '6': 10,\n  '7': 10,\n  '8': 10,\n  '9': 10,\n  A: 11,\n  B: 11,\n  C: 11,\n  D: 12,\n  E: 10,\n  F: 9,\n  G: 12,\n  H: 12,\n  I: 7,\n  J: 7,\n  K: 11,\n  L: 9,\n  M: 13,\n  N: 12,\n  O: 13,\n  P: 10,\n  Q: 13,\n  R: 11,\n  S: 11,\n  T: 10,\n  U: 12,\n  V: 11,\n  W: 16,\n  X: 11,\n  Y: 10,\n  Z: 11,\n  a: 10,\n  b: 10,\n  c: 8,\n  d: 10,\n  e: 10,\n  f: 6,\n  g: 10,\n  h: 10,\n  i: 4,\n  j: 6,\n  k: 9,\n  l: 4,\n  m: 16,\n  n: 10,\n  o: 10,\n  p: 10,\n  q: 10,\n  r: 7,\n  s: 8,\n  t: 6,\n  u: 10,\n  v: 9,\n  w: 13,\n  x: 9,\n  y: 9,\n  z: 8,\n  '!': 6,\n  '@': 16,\n  '#': 13,\n  $: 10,\n  '%': 17,\n  '^': 13,\n  '&': 12,\n  '*': 10,\n  '(': 7,\n  ')': 7,\n  _: 10,\n  '-': 7,\n  '+': 13,\n  '=': 13,\n  ',': 6,\n  '.': 6,\n  '/': 7,\n  \"'\": 4,\n  ':': 7,\n  '|': 7,\n  '?': 9,\n  ';': 7,\n  '<': 13,\n  '>': 13\n};\nclass CardComponent {\n  constructor(element, cd, zone, platformId) {\n    this.cd = cd;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.value = '';\n    this.textFontSize = 12;\n    this.textTransform = '';\n    this.initialized = false;\n    this.bandHeight = 10;\n    this.textPadding = [10, 20, 5, 20];\n    this.labelFontSize = 15;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR();\n    }\n  }\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      cancelAnimationFrame(this.animationReq);\n    }\n  }\n  update() {\n    this.zone.run(() => {\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n      this.transform = `translate(${this.x} , ${this.y})`;\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n      this.cardWidth = Math.max(0, this.width);\n      this.cardHeight = Math.max(0, this.height);\n      this.label = this.label ? this.label : this.data.name;\n      const cardData = {\n        label: this.label,\n        data: this.data,\n        value: this.data.value\n      };\n      this.formattedLabel = labelFormatting(cardData);\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n      const value = hasValue ? valueFormatting(cardData) : '';\n      this.value = this.paddedValue(value);\n      this.setPadding();\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n      setTimeout(() => {\n        if (isPlatformBrowser(this.platformId)) {\n          this.scaleText();\n        }\n        this.value = value;\n        if (hasValue && !this.initialized) {\n          setTimeout(() => this.startCount(), 20);\n        }\n      }, 8);\n    });\n  }\n  paddedValue(value) {\n    if (this.medianSize && this.medianSize > value.length) {\n      value += '\\u2007'.repeat(this.medianSize - value.length);\n    }\n    return value;\n  }\n  startCount() {\n    if (!this.initialized && this.animations) {\n      cancelAnimationFrame(this.animationReq);\n      const val = this.data.value;\n      const decs = decimalChecker(val);\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const callback = ({\n        value,\n        finished\n      }) => {\n        this.zone.run(() => {\n          value = finished ? val : value;\n          this.value = valueFormatting({\n            label: this.label,\n            data: this.data,\n            value\n          });\n          if (!finished) {\n            this.value = this.paddedValue(this.value);\n          }\n          this.cd.markForCheck();\n        });\n      };\n      this.animationReq = count(0, val, decs, 1, callback);\n      this.initialized = true;\n    }\n  }\n  scaleText() {\n    this.zone.run(() => {\n      const {\n        width,\n        height\n      } = this.textEl.nativeElement.getBoundingClientRect();\n      if (width === 0 || height === 0) {\n        return;\n      }\n      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n      this.setPadding();\n      this.cd.markForCheck();\n    });\n  }\n  scaleTextSSR() {\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n    const height = 18;\n    const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const availableWidth = this.cardWidth - 2 * textPadding;\n    const availableHeight = this.cardHeight / 3;\n    const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n    this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n    this.labelFontSize = Math.min(this.textFontSize, 15);\n    this.setPadding();\n  }\n  setPadding() {\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const padding = this.cardHeight / 2;\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n    this.textPadding[2] = padding - this.labelFontSize;\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n}\nCardComponent.ɵfac = function CardComponent_Factory(t) {\n  return new (t || CardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardComponent,\n  selectors: [[\"g\", \"ngx-charts-card\", \"\"]],\n  viewQuery: function CardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    bandColor: \"bandColor\",\n    textColor: \"textColor\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    data: \"data\",\n    medianSize: \"medianSize\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c46,\n  decls: 10,\n  vars: 25,\n  consts: [[1, \"cell\", 3, \"click\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card\"], [\"class\", \"card-band\", \"stroke\", \"none\", 4, \"ngIf\"], [\"x\", \"5\", \"alignment-baseline\", \"hanging\", 1, \"trimmed-label\"], [3, \"innerHTML\"], [\"text-anchor\", \"start\", \"alignment-baseline\", \"hanging\", 1, \"value-text\"], [\"textEl\", \"\"], [\"stroke\", \"none\", 1, \"card-band\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"click\", function CardComponent_Template__svg_g_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelement(1, \"rect\", 1);\n      i0.ɵɵtemplate(2, CardComponent__svg_path_2_Template, 1, 3, \"path\", 2);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"foreignObject\", 3);\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(6, \"p\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(7, \"text\", 5, 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.color);\n      i0.ɵɵattribute(\"width\", ctx.cardWidth)(\"height\", ctx.cardHeight);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bandColor && ctx.bandColor !== ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.cardHeight - ctx.textPadding[2])(\"width\", ctx.textWidth)(\"height\", ctx.labelFontSize + ctx.textPadding[2]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"color\", ctx.textColor)(\"font-size\", ctx.labelFontSize, \"px\")(\"line-height\", ctx.labelFontSize, \"px\");\n      i0.ɵɵproperty(\"innerHTML\", ctx.formattedLabel, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.textColor)(\"font-size\", ctx.textFontSize, \"pt\");\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.textPadding[0]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    medianSize: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n  const color = d3_color.rgb(value);\n  const {\n    r,\n    g,\n    b,\n    opacity\n  } = color;\n  if (opacity === 0) {\n    return color.toString();\n  }\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  const depth = yiq >= 128 ? -0.8 : 0.8;\n  return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({\n  r,\n  g,\n  b\n}, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n  r = Math.round((t - r) * p) + r;\n  g = Math.round((t - g) * p) + g;\n  b = Math.round((t - b) * p) + b;\n  return `rgb(${r}, ${g}, ${b})`;\n}\nclass CardSeriesComponent {\n  constructor() {\n    this.innerPadding = 15;\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    if (this.data.length > 2) {\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const sortedLengths = this.data.map(d => {\n        const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n        return hasValue ? valueFormatting({\n          data: d.data,\n          label: d ? d.data.name : '',\n          value: d && d.data ? d.data.value : ''\n        }).length : 0;\n      }).sort((a, b) => b - a);\n      const idx = Math.ceil(this.data.length / 2);\n      this.medianSize = sortedLengths[idx];\n    }\n    const cards = this.getCards();\n    this.cards = cards.filter(d => d.data.value !== null);\n    this.emptySlots = cards.filter(d => d.data.value === null);\n  }\n  getCards() {\n    const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n    const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n    return this.data.map((d, index) => {\n      let label = d.data.name;\n      if (label && label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label ? label.toLocaleString() : label;\n      }\n      const value = d.data.value;\n      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n      const color = this.cardColor || valueColor || '#000';\n      return {\n        x: d.x,\n        y: d.y,\n        width: d.width - xPadding,\n        height: d.height - yPadding,\n        color,\n        bandColor: this.bandColor || valueColor,\n        textColor: this.textColor || invertColor(color),\n        label,\n        data: d.data,\n        tooltipText: `${label}: ${value}`\n      };\n    });\n  }\n  trackBy(index, card) {\n    return card.label;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n}\nCardSeriesComponent.ɵfac = function CardSeriesComponent_Factory(t) {\n  return new (t || CardSeriesComponent)();\n};\nCardSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-card-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    innerPadding: \"innerPadding\",\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c47,\n  decls: 2,\n  vars: 4,\n  consts: [[\"class\", \"card-empty\", \"rx\", \"3\", \"ry\", \"3\", 3, \"fill\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card-empty\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function CardSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CardSeriesComponent__svg_rect_0_Template, 1, 6, \"rect\", 0);\n      i0.ɵɵtemplate(1, CardSeriesComponent__svg_g_1_Template, 1, 13, \"g\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.emptySlots)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CardComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card-series]',\n      template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass NumberCardComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.innerPadding = 15;\n    this.margin = [10, 10, 10, 10];\n  }\n  get clickable() {\n    return !!this.select.observers.length;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    const size = gridSize(this.dims, this.results.length, 150);\n    const N = size[0] * size[1];\n    const data = this.results.slice();\n    while (data.length < N) {\n      data.push({\n        value: null\n      });\n    }\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n}\nNumberCardComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵNumberCardComponent_BaseFactory;\n  return function NumberCardComponent_Factory(t) {\n    return (ɵNumberCardComponent_BaseFactory || (ɵNumberCardComponent_BaseFactory = i0.ɵɵgetInheritedFactory(NumberCardComponent)))(t || NumberCardComponent);\n  };\n}();\nNumberCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumberCardComponent,\n  selectors: [[\"ngx-charts-number-card\"]],\n  inputs: {\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    innerPadding: \"innerPadding\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    designatedTotal: \"designatedTotal\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"number-card\", \"chart\"], [\"ngx-charts-card-series\", \"\", 3, \"colors\", \"cardColor\", \"bandColor\", \"textColor\", \"emptyColor\", \"data\", \"dims\", \"innerPadding\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function NumberCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function NumberCardComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"clickable\", ctx.clickable);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"cardColor\", ctx.cardColor)(\"bandColor\", ctx.bandColor)(\"textColor\", ctx.textColor)(\"emptyColor\", ctx.emptyColor)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"innerPadding\", ctx.innerPadding)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, CardSeriesComponent],\n  styles: [_c25, \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-number-card',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"]\n    }]\n  }], null, {\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    designatedTotal: [{\n      type: Input\n    }]\n  });\n})();\nclass NumberCardModule {}\nNumberCardModule.ɵfac = function NumberCardModule_Factory(t) {\n  return new (t || NumberCardModule)();\n};\nNumberCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NumberCardModule\n});\nNumberCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n      exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n    }]\n  }], null, null);\n})();\nclass TreeMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.initialized = false;\n    this.orientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges() {\n    this.update();\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n    const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n    const cellData = {\n      data: this.data,\n      label: this.label,\n      value: this.value\n    };\n    this.formattedValue = this.valueFormatting(cellData.value);\n    this.formattedLabel = labelFormatting(cellData);\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n  }\n  update() {\n    if (this.initialized) {\n      this.animateToCurrentForm();\n    } else {\n      if (this.animations) {\n        this.loadAnimation();\n      }\n      this.initialized = true;\n    }\n  }\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n    this.animateToCurrentForm();\n  }\n  getTextColor() {\n    return invertColor(this.fill);\n  }\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    if (this.animations) {\n      node.transition().duration(750).attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    } else {\n      node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    }\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: 0.3\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n}\nTreeMapCellComponent.ɵfac = function TreeMapCellComponent_Factory(t) {\n  return new (t || TreeMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nTreeMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell\", \"\"]],\n  inputs: {\n    data: \"data\",\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c48,\n  decls: 4,\n  vars: 7,\n  consts: [[4, \"ngIf\"], [1, \"cell\", 3, \"click\"], [\"class\", \"treemap-label\", 3, \"pointer-events\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [1, \"treemap-label\"], [1, \"treemap-label\", 3, \"innerHTML\"], [\"class\", \"treemap-val\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"treemap-val\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"treemap-val\", 3, \"countTo\", \"valueFormatting\"], [1, \"treemap-val\"]],\n  template: function TreeMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, TreeMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵelementStart(2, \"rect\", 1);\n      i0.ɵɵlistener(\"click\", function TreeMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TreeMapCellComponent__svg_foreignObject_3_Template, 6, 15, \"foreignObject\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.width >= 70 && ctx.height >= 35);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CountUpDirective, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell]',\n      template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass TreeMapCellSeriesComponent {\n  constructor() {\n    this.gradient = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.styleTypes = StyleTypes;\n    this.placementTypes = PlacementTypes;\n  }\n  ngOnChanges(changes) {\n    this.cells = this.getCells();\n  }\n  getCells() {\n    return this.data.children.filter(d => {\n      return d.depth === 1;\n    }).map((d, index) => {\n      const label = d.id;\n      return {\n        data: d.data,\n        x: d.x0,\n        y: d.y0,\n        width: d.x1 - d.x0,\n        height: d.y1 - d.y0,\n        fill: this.colors.getColor(label),\n        label,\n        value: d.value\n      };\n    });\n  }\n  getTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nTreeMapCellSeriesComponent.ɵfac = function TreeMapCellSeriesComponent_Factory(t) {\n  return new (t || TreeMapCellSeriesComponent)();\n};\nTreeMapCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c49,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\"]],\n  template: function TreeMapCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TreeMapCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [TreeMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass TreeMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.margin = [10, 10, 10, 10];\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.domain = this.getDomain();\n    this.treemap = treemap().size([this.dims.width, this.dims.height]);\n    const rootNode = {\n      name: 'root',\n      value: 0,\n      isRoot: true\n    };\n    const root = stratify().id(d => {\n      let label = d.name;\n      if (label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label.toLocaleString();\n      }\n      return label;\n    }).parentId(d => d.isRoot ? null : 'root')([rootNode, ...this.results]).sum(d => d.value);\n    this.data = this.treemap(root);\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n}\nTreeMapComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵTreeMapComponent_BaseFactory;\n  return function TreeMapComponent_Factory(t) {\n    return (ɵTreeMapComponent_BaseFactory || (ɵTreeMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TreeMapComponent)))(t || TreeMapComponent);\n  };\n}();\nTreeMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapComponent,\n  selectors: [[\"ngx-charts-tree-map\"]],\n  contentQueries: function TreeMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    results: \"results\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"tree-map\", \"chart\"], [\"ngx-charts-tree-map-cell-series\", \"\", 3, \"colors\", \"data\", \"dims\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"select\"]],\n  template: function TreeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function TreeMapComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(13, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, TreeMapCellSeriesComponent],\n  styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-tree-map',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"]\n    }]\n  }], null, {\n    results: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass TreeMapModule {}\nTreeMapModule.ɵfac = function TreeMapModule_Factory(t) {\n  return new (t || TreeMapModule)();\n};\nTreeMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TreeMapModule\n});\nTreeMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n      exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n    }]\n  }], null, null);\n})();\nvar ElementType;\n(function (ElementType) {\n  ElementType[\"Value\"] = \"value\";\n  ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.min = 0;\n    this.max = 100;\n    this.value = 0;\n    this.margin = [10, 20, 10, 20];\n    this.valueResizeScale = 1;\n    this.unitsResizeScale = 1;\n    this.valueTextTransform = '';\n    this.valueTranslate = '';\n    this.unitsTextTransform = '';\n    this.unitsTranslate = '';\n    this.barOrientation = BarOrientation;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      this.scaleText(ElementType.Value);\n      this.scaleText(ElementType.Units);\n    });\n  }\n  update() {\n    super.update();\n    this.hasPreviousValue = this.previousValue !== undefined;\n    this.max = Math.max(this.max, this.value);\n    this.min = Math.min(this.min, this.value);\n    if (this.hasPreviousValue) {\n      this.max = Math.max(this.max, this.previousValue);\n      this.min = Math.min(this.min, this.previousValue);\n    }\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.setColors();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n    this.valueTranslate = `translate(0, -15)`;\n    this.unitsTranslate = `translate(0, 15)`;\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR('value');\n      this.scaleTextSSR('units');\n    } else {\n      setTimeout(() => this.scaleText(ElementType.Value), 50);\n      setTimeout(() => this.scaleText(ElementType.Units), 50);\n    }\n  }\n  getValueDomain() {\n    return [this.min, this.max];\n  }\n  getValueScale() {\n    return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n  }\n  getDisplayValue() {\n    if (this.valueFormatting) {\n      return this.valueFormatting(this.value);\n    }\n    return this.value.toLocaleString();\n  }\n  scaleText(element, repeat = true) {\n    let el;\n    let resizeScale;\n    if (element === ElementType.Value) {\n      el = this.valueTextEl;\n      resizeScale = this.valueResizeScale;\n    } else {\n      el = this.unitsTextEl;\n      resizeScale = this.unitsResizeScale;\n    }\n    const {\n      width,\n      height\n    } = el.nativeElement.getBoundingClientRect();\n    if (width === 0 || height === 0) return;\n    const oldScale = resizeScale;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n    if (resizeScale !== oldScale) {\n      if (element === ElementType.Value) {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      }\n      this.cd.markForCheck();\n      if (repeat && isPlatformBrowser(this.platformId)) {\n        setTimeout(() => {\n          this.scaleText(element, false);\n        }, 50);\n      }\n    }\n  }\n  scaleTextSSR(element) {\n    let resizeScale = 1;\n    const value = element === 'value' ? this.displayValue : this.units;\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n    const height = 25;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n    if (element === 'value') {\n      this.valueResizeScale = resizeScale;\n      this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    } else {\n      this.unitsResizeScale = resizeScale;\n      this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    }\n    this.cd.markForCheck();\n  }\n  onClick() {\n    this.select.emit({\n      name: 'Value',\n      value: this.value\n    });\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n  }\n}\nLinearGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵLinearGaugeComponent_BaseFactory;\n  return function LinearGaugeComponent_Factory(t) {\n    return (ɵLinearGaugeComponent_BaseFactory || (ɵLinearGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LinearGaugeComponent)))(t || LinearGaugeComponent);\n  };\n}();\nLinearGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LinearGaugeComponent,\n  selectors: [[\"ngx-charts-linear-gauge\"]],\n  viewQuery: function LinearGaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c50, 5);\n      i0.ɵɵviewQuery(_c51, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTextEl = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.unitsTextEl = _t.first);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    value: \"value\",\n    units: \"units\",\n    previousValue: \"previousValue\",\n    valueFormatting: \"valueFormatting\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 38,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"click\"], [1, \"linear-gauge\", \"chart\"], [\"ngx-charts-bar\", \"\", 1, \"background-bar\", 3, \"width\", \"height\", \"x\", \"y\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"ngx-charts-bar\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\", 4, \"ngIf\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\", 4, \"ngIf\"], [\"alignment-baseline\", \"after-edge\", 1, \"value\"], [\"valueTextEl\", \"\"], [\"alignment-baseline\", \"before-edge\", 1, \"units\"], [\"unitsTextEl\", \"\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\"]],\n  template: function LinearGaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"click\", function LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2)(3, \"g\", 3);\n      i0.ɵɵtemplate(4, LinearGaugeComponent__svg_line_4_Template, 1, 2, \"line\", 4);\n      i0.ɵɵtemplate(5, LinearGaugeComponent__svg_line_5_Template, 1, 2, \"line\", 5);\n      i0.ɵɵelementStart(6, \"g\")(7, \"g\")(8, \"text\", 6, 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"g\")(12, \"text\", 8, 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(33, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"width\", ctx.dims.width)(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"data\", i0.ɵɵpureFunction0(36, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"width\", ctx.valueScale(ctx.value))(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"fill\", ctx.colors.getColor(ctx.units))(\"data\", i0.ɵɵpureFunction0(37, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.valueTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.valueTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayValue, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.unitsTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.unitsTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.units, \" \");\n    }\n  },\n  dependencies: [ChartComponent, BarComponent, i2.NgIf],\n  styles: [_c25, \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinearGaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-linear-gauge',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"]\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    previousValue: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    valueTextEl: [{\n      type: ViewChild,\n      args: ['valueTextEl']\n    }],\n    unitsTextEl: [{\n      type: ViewChild,\n      args: ['unitsTextEl']\n    }]\n  });\n})();\nclass GaugeArcComponent {\n  constructor() {\n    this.isActive = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  tooltipText(arc) {\n    const label = formatLabel(arc.data.name);\n    let val;\n    if (this.valueFormatting) {\n      val = this.valueFormatting(arc.data.value);\n    } else {\n      val = formatLabel(arc.data.value);\n    }\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n}\nGaugeArcComponent.ɵfac = function GaugeArcComponent_Factory(t) {\n  return new (t || GaugeArcComponent)();\n};\nGaugeArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeArcComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-arc\", \"\"]],\n  inputs: {\n    backgroundArc: \"backgroundArc\",\n    valueArc: \"valueArc\",\n    cornerRadius: \"cornerRadius\",\n    colors: \"colors\",\n    isActive: \"isActive\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  attrs: _c53,\n  decls: 2,\n  vars: 23,\n  consts: [[\"ngx-charts-pie-arc\", \"\", 1, \"background-arc\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"data\", \"animate\", \"pointerEvents\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"fill\", \"data\", \"animate\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function GaugeArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵlistener(\"select\", function GaugeArcComponent_Template__svg_g_select_1_listener($event) {\n        return ctx.select.emit($event);\n      })(\"activate\", function GaugeArcComponent_Template__svg_g_activate_1_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function GaugeArcComponent_Template__svg_g_deactivate_1_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.backgroundArc.endAngle)(\"innerRadius\", ctx.backgroundArc.innerRadius)(\"outerRadius\", ctx.backgroundArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"data\", ctx.backgroundArc.data)(\"animate\", false)(\"pointerEvents\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.valueArc.endAngle)(\"innerRadius\", ctx.valueArc.innerRadius)(\"outerRadius\", ctx.valueArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"fill\", ctx.colors.getColor(ctx.valueArc.data.name))(\"data\", ctx.valueArc.data)(\"animate\", ctx.animations)(\"isActive\", ctx.isActive)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Top)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipTitle\", ctx.tooltipTemplate ? undefined : ctx.tooltipText(ctx.valueArc))(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.valueArc.data);\n    }\n  },\n  dependencies: [PieArcComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-arc]',\n      template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    backgroundArc: [{\n      type: Input\n    }],\n    valueArc: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass GaugeAxisComponent {\n  constructor() {\n    this.rotate = '';\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.rotationAngle = -90 + this.startAngle;\n    this.rotate = `rotate(${this.rotationAngle})`;\n    this.ticks = this.getTicks();\n  }\n  getTicks() {\n    const bigTickSegment = this.angleSpan / this.bigSegments;\n    const smallTickSegment = bigTickSegment / this.smallSegments;\n    const tickLength = 20;\n    const ticks = {\n      big: [],\n      small: []\n    };\n    const startDistance = this.radius + 10;\n    const textDist = startDistance + tickLength + 10;\n    for (let i = 0; i <= this.bigSegments; i++) {\n      const angleDeg = i * bigTickSegment;\n      const angle = angleDeg * Math.PI / 180;\n      const textAnchor = this.getTextAnchor(angleDeg);\n      let skip = false;\n      if (i === 0 && this.angleSpan === 360) {\n        skip = true;\n      }\n      if (!skip) {\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n        if (this.tickFormatting) {\n          text = this.tickFormatting(text);\n        }\n        ticks.big.push({\n          line: this.getTickPath(startDistance, tickLength, angle),\n          textAnchor,\n          text,\n          textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n        });\n      }\n      if (i === this.bigSegments) {\n        continue;\n      }\n      for (let j = 1; j <= this.smallSegments; j++) {\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\n        const smallAngle = smallAngleDeg * Math.PI / 180;\n        ticks.small.push({\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n        });\n      }\n    }\n    return ticks;\n  }\n  getTextAnchor(angle) {\n    // [0, 45] = 'middle';\n    // [46, 135] = 'start';\n    // [136, 225] = 'middle';\n    // [226, 315] = 'end';\n    angle = (this.startAngle + angle) % 360;\n    let textAnchor = TextAnchor.Middle;\n    if (angle > 45 && angle <= 135) {\n      textAnchor = TextAnchor.Start;\n    } else if (angle > 225 && angle <= 315) {\n      textAnchor = TextAnchor.End;\n    }\n    return textAnchor;\n  }\n  getTickPath(startDistance, tickLength, angle) {\n    const y1 = startDistance * Math.sin(angle);\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\n    const x1 = startDistance * Math.cos(angle);\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\n    const points = [{\n      x: x1,\n      y: y1\n    }, {\n      x: x2,\n      y: y2\n    }];\n    const lineGenerator = line().x(d => d.x).y(d => d.y);\n    return lineGenerator(points);\n  }\n}\nGaugeAxisComponent.ɵfac = function GaugeAxisComponent_Factory(t) {\n  return new (t || GaugeAxisComponent)();\n};\nGaugeAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-axis\", \"\"]],\n  inputs: {\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    min: \"min\",\n    max: \"max\",\n    angleSpan: \"angleSpan\",\n    startAngle: \"startAngle\",\n    radius: \"radius\",\n    valueScale: \"valueScale\",\n    tickFormatting: \"tickFormatting\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c54,\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"gauge-tick gauge-tick-large\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"gauge-tick gauge-tick-small\", 4, \"ngFor\", \"ngForOf\"], [1, \"gauge-tick\", \"gauge-tick-large\"], [\"alignment-baseline\", \"central\"], [1, \"gauge-tick\", \"gauge-tick-small\"]],\n  template: function GaugeAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, GaugeAxisComponent__svg_g_1_Template, 2, 1, \"g\", 0);\n      i0.ɵɵtemplate(2, GaugeAxisComponent__svg_g_2_Template, 3, 4, \"g\", 0);\n      i0.ɵɵtemplate(3, GaugeAxisComponent__svg_g_3_Template, 2, 1, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.rotate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.small);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-axis]',\n      template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    valueScale: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }]\n  });\n})();\nclass GaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.min = 0;\n    this.max = 100;\n    this.bigSegments = 10;\n    this.smallSegments = 5;\n    this.showAxis = true;\n    this.startAngle = -120;\n    this.angleSpan = 240;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.showText = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.resizeScale = 1;\n    this.rotation = '';\n    this.textTransform = 'scale(1, 1)';\n    this.cornerRadius = 10;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => this.scaleText());\n  }\n  update() {\n    super.update();\n    if (!this.showAxis) {\n      if (!this.margin) {\n        this.margin = [10, 20, 10, 20];\n      }\n    } else {\n      if (!this.margin) {\n        this.margin = [60, 100, 60, 100];\n      }\n    }\n    // make the starting angle positive\n    if (this.startAngle < 0) {\n      this.startAngle = this.startAngle % 360 + 360;\n    }\n    this.angleSpan = Math.min(this.angleSpan, 360);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.domain = this.getDomain();\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n    this.arcs = this.getArcs();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.rotation = `rotate(${this.startAngle})`;\n    setTimeout(() => this.scaleText(), 50);\n  }\n  getArcs() {\n    const arcs = [];\n    const availableRadius = this.outerRadius * 0.7;\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n    const arcWidth = radiusPerArc * 0.7;\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n    this.cornerRadius = Math.floor(arcWidth / 2);\n    let i = 0;\n    for (const d of this.results) {\n      const outerRadius = this.outerRadius - i * radiusPerArc;\n      const innerRadius = outerRadius - arcWidth;\n      const backgroundArc = {\n        endAngle: this.angleSpan * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: this.max,\n          name: d.name\n        }\n      };\n      const valueArc = {\n        endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: d.value,\n          name: d.name\n        }\n      };\n      const arc = {\n        backgroundArc,\n        valueArc\n      };\n      arcs.push(arc);\n      i++;\n    }\n    return arcs;\n  }\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n  getValueDomain() {\n    const values = this.results.map(d => d.value);\n    const dataMin = Math.min(...values);\n    const dataMax = Math.max(...values);\n    if (this.min !== undefined) {\n      this.min = Math.min(this.min, dataMin);\n    } else {\n      this.min = dataMin;\n    }\n    if (this.max !== undefined) {\n      this.max = Math.max(this.max, dataMax);\n    } else {\n      this.max = dataMax;\n    }\n    return [this.min, this.max];\n  }\n  getValueScale() {\n    return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n  }\n  getDisplayValue() {\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n    if (this.textValue && 0 !== this.textValue.length) {\n      return this.textValue.toLocaleString();\n    }\n    if (this.valueFormatting) {\n      return this.valueFormatting(value);\n    }\n    return value.toLocaleString();\n  }\n  scaleText(repeat = true) {\n    if (!this.showText) {\n      return;\n    }\n    const {\n      width\n    } = this.textEl.nativeElement.getBoundingClientRect();\n    const oldScale = this.resizeScale;\n    if (width === 0) {\n      this.resizeScale = 1;\n    } else {\n      const availableSpace = this.textRadius;\n      this.resizeScale = Math.floor(availableSpace / (width / this.resizeScale) * 100) / 100;\n    }\n    if (this.resizeScale !== oldScale) {\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => this.scaleText(false), 50);\n      }\n    }\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      colors: this.colors,\n      domain: this.domain,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n  trackBy(index, item) {\n    return item.valueArc.data.name;\n  }\n}\nGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵGaugeComponent_BaseFactory;\n  return function GaugeComponent_Factory(t) {\n    return (ɵGaugeComponent_BaseFactory || (ɵGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(GaugeComponent)))(t || GaugeComponent);\n  };\n}();\nGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeComponent,\n  selectors: [[\"ngx-charts-gauge\"]],\n  contentQueries: function GaugeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function GaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    min: \"min\",\n    max: \"max\",\n    textValue: \"textValue\",\n    units: \"units\",\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    results: \"results\",\n    showAxis: \"showAxis\",\n    startAngle: \"startAngle\",\n    angleSpan: \"angleSpan\",\n    activeEntries: \"activeEntries\",\n    axisTickFormatting: \"axisTickFormatting\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    showText: \"showText\",\n    margin: \"margin\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"gauge\", \"chart\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\", 4, \"ngIf\"], [\"alignment-baseline\", \"central\", 3, \"textAnchor\", 4, \"ngIf\"], [\"ngx-charts-gauge-arc\", \"\", 3, \"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\"], [\"alignment-baseline\", \"central\"], [\"textEl\", \"\"], [\"x\", \"0\", \"dy\", \"0\"], [\"x\", \"0\", \"dy\", \"1.2em\"]],\n  template: function GaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, GaugeComponent__svg_g_2_Template, 2, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, GaugeComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, GaugeComponent__svg_text_4_Template, 6, 5, \"text\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showText);\n    }\n  },\n  dependencies: [ChartComponent, GaugeArcComponent, GaugeAxisComponent, i2.NgForOf, i2.NgIf],\n  styles: [_c25, \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-gauge',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    textValue: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    showAxis: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    axisTickFormatting: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    showText: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl']\n    }]\n  });\n})();\nclass GaugeModule {}\nGaugeModule.ɵfac = function GaugeModule_Factory(t) {\n  return new (t || GaugeModule)();\n};\nGaugeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GaugeModule\n});\nGaugeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, BarChartModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, BarChartModule],\n      declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n      exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n    }]\n  }], null, null);\n})();\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\nclass NgxChartsModule {\n  constructor() {\n    ngxChartsPolyfills();\n  }\n}\nNgxChartsModule.ɵfac = function NgxChartsModule_Factory(t) {\n  return new (t || NgxChartsModule)();\n};\nNgxChartsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxChartsModule\n});\nNgxChartsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxChartsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction tickFormat(fieldType, groupByType) {\n  return function (label) {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(label);\n    }\n    return label.toString();\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getTickLines, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };","map":{"version":3,"names":["i0","PLATFORM_ID","Component","ViewEncapsulation","Inject","Input","ViewChild","HostBinding","HostListener","Injectable","ChangeDetectionStrategy","EventEmitter","Output","Directive","NgModule","ContentChild","i2","isPlatformBrowser","isPlatformServer","CommonModule","__decorate","DomPortalOutlet","ComponentPortal","fromEvent","debounceTime","trigger","transition","style","animate","select","brushX","scaleTime","scaleLinear","scalePoint","scaleOrdinal","scaleQuantile","scaleBand","area","curveLinear","line","arc","lineRadial","curveCardinalClosed","pie","range","min","max","quantile","interpolate","easeSinInOut","rfdc","format","d3_color","treemap","stratify","timeFormat","_c0","TooltipContentComponent_span_4_ng_template_1_Template","rf","ctx","_c1","a0","model","TooltipContentComponent_span_4_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵproperty","template","ɵɵpureFunction1","context","TooltipContentComponent_span_5_Template","ɵɵelement","ctx_r2","title","ɵɵsanitizeHtml","LegendComponent_header_1_Template","ɵɵtext","ctx_r0","ɵɵtextInterpolate","LegendComponent_li_4_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener","$event","ɵɵrestoreView","ctx_r3","ɵɵresetView","labelClick","emit","LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener","ctx_r5","activate","LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener","ctx_r6","deactivate","entry_r2","$implicit","label","formattedLabel","color","isActive","ChartComponent_ngx_charts_scale_legend_3_Template","ɵɵnamespaceSVG","ɵɵnamespaceHTML","legendOptions","position","LegendPosition","Below","domain","colors","view","legendWidth","ChartComponent_ngx_charts_legend_4_Template","_r3","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener","legendLabelClick","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener","ctx_r4","legendLabelActivate","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener","legendLabelDeactivate","activeEntries","_c2","_c3","_c4","_c5","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template","ɵɵelementContainer","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template","tickLine_r14","i_r15","index","ɵɵattribute","ɵɵtextInterpolate1","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","tickLines_r12","ngIf","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template","tick_r3","ctx_r8","tickChunks","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template","tickFormatted_r5","ctx_r10","tickTrim","XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template","ɵɵtemplateRefExtractor","_r7","ɵɵreference","_r9","textAnchor","textTransform","isWrapTicksSupported","XAxisTicksComponent__svg_g_2_Template","tickTransform","tickFormat","XAxisTicksComponent__svg_g_3__svg_g_1_Template","ctx_r19","gridLineTransform","gridLineHeight","XAxisTicksComponent__svg_g_3_Template","tick_r18","showGridLines","_c6","XAxisComponent__svg_g_1_Template","XAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","emitTicksHeight","trimTicks","rotateTicks","maxTickLength","tickFormatting","tickArguments","tickStroke","xScale","xOrient","dims","height","width","ticks","wrapTicks","XAxisComponent__svg_g_2_Template","labelText","labelOffset","orientation","Bottom","_c7","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template","tickLine_r17","i_r18","ctx_r16","tickSpacing","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template","tickLines_r14","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template","_r11","length","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template","tick_r5","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template","tickFormatted_r7","ctx_r12","YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template","ɵɵstyleProp","dy","x1","y1","YAxisTicksComponent__svg_g_2_Template","transform","YAxisTicksComponent__svg_path_3_Template","referenceAreaPath","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template","ctx_r24","gridLineWidth","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template","ctx_r25","YAxisTicksComponent__svg_g_4__svg_g_1_Template","ctx_r23","orient","Orientation","Left","Right","YAxisTicksComponent__svg_g_4_Template","tick_r22","YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template","refLine_r26","ctx_r28","value","name","YAxisTicksComponent__svg_g_5__svg_g_1_Template","ctx_r27","showRefLabels","YAxisTicksComponent__svg_g_5_Template","showRefLines","_c8","YAxisComponent__svg_g_1_Template","YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","emitTicksWidth","yScale","yOrient","referenceLines","YAxisComponent__svg_g_2_Template","_c9","SvgLinearGradientComponent__svg_stop_1_Template","stop_r1","opacity","offset","_c10","_c11","CircleSeriesComponent__svg_g_0__svg_rect_3_Template","circle","cx","radius","cy","gradientFill","CircleSeriesComponent__svg_g_0__svg_rect_4_Template","_c12","CircleSeriesComponent__svg_g_0_Template","CircleSeriesComponent__svg_g_0_Template__svg_g_select_5_listener","onClick","data","CircleSeriesComponent__svg_g_0_Template__svg_g_activate_5_listener","activateCircle","CircleSeriesComponent__svg_g_0_Template__svg_g_deactivate_5_listener","deactivateCircle","barOrientation","Vertical","gradientId","gradientStops","isSSR","barVisible","type","ɵɵclassProp","seriesName","classNames","tooltipDisabled","placementTypes","Top","styleTypes","tooltip","tooltipTemplate","undefined","getTooltipText","_c13","_c14","GridPanelSeriesComponent__svg_g_0_Template","gridPanel_r1","class","x","y","_c15","SvgRadialGradientComponent__svg_stop_1_Template","_c16","AreaComponent__svg_defs_0_Template","_c17","_c18","_c19","TooltipArea__svg_ng_template_2__xhtml_div_1_Template","tooltipItem_r5","getToolTipText","TooltipArea__svg_ng_template_2_Template","model_r3","_c20","AdvancedLegendComponent_div_1_Template","roundedTotal","valueFormatting","AdvancedLegendComponent_div_2_Template","defaultValueFormatting","AdvancedLegendComponent_div_7_div_2_Template","legendItem_r3","_value","AdvancedLegendComponent_div_7_div_3_Template","AdvancedLegendComponent_div_7_div_6_Template","percentage","AdvancedLegendComponent_div_7_div_7_Template","toLocaleString","AdvancedLegendComponent_div_7_Template","_r13","AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener","restoredCtx","AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener","ctx_r14","AdvancedLegendComponent_div_7_Template_div_click_0_listener","ctx_r15","animations","displayLabel","_c21","_c22","_c23","AreaChartComponent__svg_g_5_Template","_r6","AreaChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","updateXAxisHeight","showXAxisLabel","xAxisLabel","trimXAxisTicks","rotateXAxisTicks","maxXAxisTickLength","xAxisTickFormatting","xAxisTicks","AreaChartComponent__svg_g_6_Template","_r8","AreaChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","ctx_r7","updateYAxisWidth","showYAxisLabel","yAxisLabel","trimYAxisTicks","maxYAxisTickLength","yAxisTickFormatting","yAxisTicks","AreaChartComponent__svg_g_8_Template","series_r9","baseValue","scaleType","gradient","curve","AreaChartComponent__svg_g_9__svg_g_2_Template","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","series_r11","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","onActivate","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","onDeactivate","hoveredVertical","AreaChartComponent__svg_g_9_Template","_r17","AreaChartComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","hideCircles","AreaChartComponent__svg_g_9_Template__svg_g_hover_1_listener","ctx_r18","updateHoveredVertical","xSet","results","seriesTooltipTemplate","AreaChartComponent__svg_g_10__svg_g_1_Template","series_r20","timelineXScale","timelineYScale","_c24","a1","AreaChartComponent__svg_g_10_Template","_r22","AreaChartComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","ctx_r21","updateDomain","ɵɵpureFunction2","timelineWidth","timelineHeight","scheme","customColors","legend","timelineTransform","trackBy","AreaChartNormalizedComponent__svg_g_5_Template","AreaChartNormalizedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","AreaChartNormalizedComponent__svg_g_6_Template","AreaChartNormalizedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","AreaChartNormalizedComponent__svg_g_8_Template","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","seriesType","Stacked","AreaChartNormalizedComponent__svg_g_9_Template","AreaChartNormalizedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","AreaChartNormalizedComponent__svg_g_9_Template__svg_g_hover_1_listener","AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template","AreaChartNormalizedComponent__svg_g_10_Template","AreaChartNormalizedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","_c25","AreaChartStackedComponent__svg_g_5_Template","AreaChartStackedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","AreaChartStackedComponent__svg_g_6_Template","AreaChartStackedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","AreaChartStackedComponent__svg_g_8_Template","AreaChartStackedComponent__svg_g_9__svg_g_2_Template","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","AreaChartStackedComponent__svg_g_9_Template","AreaChartStackedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","AreaChartStackedComponent__svg_g_9_Template__svg_g_hover_1_listener","AreaChartStackedComponent__svg_g_10__svg_g_1_Template","AreaChartStackedComponent__svg_g_10_Template","AreaChartStackedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","_c26","BarComponent__svg_defs_0_Template","_c27","_c28","SeriesHorizontal__svg_g_0_Template","SeriesHorizontal__svg_g_0_Template__svg_g_select_0_listener","click","SeriesHorizontal__svg_g_0_Template__svg_g_activate_0_listener","SeriesHorizontal__svg_g_0_Template__svg_g_deactivate_0_listener","bar_r2","Horizontal","roundEdges","ariaLabel","tooltipPlacement","tooltipType","tooltipText","noBarWhenZero","SeriesHorizontal__svg_g_1__svg_g_1_Template","SeriesHorizontal__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","i_r9","dataLabelWidthChanged","size","b_r8","total","dataLabelFormatting","SeriesHorizontal__svg_g_1_Template","barsForDataLabels","trackDataLabelBy","BarHorizontalComponent__svg_g_2_Template","BarHorizontalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalComponent__svg_g_3_Template","_r5","BarHorizontalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","dataLabelMaxWidth","negative","BarHorizontal2DComponent__svg_g_3_Template","BarHorizontal2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","valueScale","BarHorizontal2DComponent__svg_g_4_Template","BarHorizontal2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener","groupScale","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template","_r12","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","group_r9","ctx_r11","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","ctx_r13","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","index_r10","onDataLabelMaxWidthChanged","groupTransform","innerScale","series","showDataLabel","BarHorizontal2DComponent__svg_g_5_Template","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template","_r20","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_1_listener","group_r17","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_1_listener","ctx_r22","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","index_r18","BarHorizontal2DComponent__svg_g_6_Template","BarHorizontalNormalizedComponent__svg_g_2_Template","BarHorizontalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalNormalizedComponent__svg_g_3_Template","BarHorizontalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","barChartType","Normalized","BarHorizontalNormalizedComponent__svg_g_4_Template","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","group_r15","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalNormalizedComponent__svg_g_5_Template","BarHorizontalStackedComponent__svg_g_2_Template","BarHorizontalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalStackedComponent__svg_g_3_Template","BarHorizontalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","BarHorizontalStackedComponent__svg_g_4_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","BarHorizontalStackedComponent__svg_g_5_Template","_c29","SeriesVerticalComponent__svg_g_0__svg_g_1_Template","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_select_0_listener","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_activate_0_listener","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_deactivate_0_listener","bar_r4","SeriesVerticalComponent__svg_g_0_Template","bars","SeriesVerticalComponent__svg_g_1__svg_g_1_Template","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_select_0_listener","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_activate_0_listener","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_deactivate_0_listener","bar_r10","ctx_r9","SeriesVerticalComponent__svg_g_1_Template","SeriesVerticalComponent__svg_g_2__svg_g_1_Template","_r19","SeriesVerticalComponent__svg_g_2__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","i_r17","dataLabelHeightChanged","b_r16","SeriesVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","dataLabelMaxHeight","BarVerticalComponent__svg_g_3_Template","BarVerticalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_3_Template","BarVertical2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_4_Template","BarVertical2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener","onDataLabelMaxHeightChanged","BarVertical2DComponent__svg_g_5_Template","BarVertical2DComponent__svg_g_6__svg_g_1_Template","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener","BarVertical2DComponent__svg_g_6_Template","BarVerticalNormalizedComponent__svg_g_2_Template","BarVerticalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarVerticalNormalizedComponent__svg_g_3_Template","BarVerticalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalNormalizedComponent__svg_g_4_Template","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalNormalizedComponent__svg_g_5_Template","BarVerticalStackedComponent__svg_g_2_Template","BarVerticalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarVerticalStackedComponent__svg_g_3_Template","BarVerticalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener","BarVerticalStackedComponent__svg_g_4_Template","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener","BarVerticalStackedComponent__svg_g_5_Template","_c30","BoxComponent__svg_g_1_Template","BarOrientation","BoxComponent__svg_line_8_Template","line_r2","i_r3","hideBar","v1","v2","strokeColor","medianLineWidth","whiskerStrokeWidth","maskLine","_c31","BoxChartComponent__svg_g_5_Template","BoxChartComponent__svg_g_5_Template__svg_g_activate_1_listener","BoxChartComponent__svg_g_5_Template__svg_g_deactivate_1_listener","BoxChartComponent__svg_g_5_Template__svg_g_select_1_listener","result_r1","strokeWidth","_c32","BubbleSeriesComponent__svg_g_0__svg_g_2_Template","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_select_0_listener","circle_r1","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_activate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_deactivate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template","_r14","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_select_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_activate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_deactivate_0_listener","ctx_r17","BubbleSeriesComponent__svg_g_0_Template","BubbleChartComponent__svg_g_5_Template","BubbleChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","BubbleChartComponent__svg_g_6_Template","BubbleChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener","rScale","xScaleType","yScaleType","BubbleChartComponent__svg_g_8_Template","clipPath","BubbleChartComponent__svg_g_9__svg_g_1_Template","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener","series_r15","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener","BubbleChartComponent__svg_g_9_Template","_c33","HeatMapCellComponent__svg_defs_1_Template","_c34","_c35","a2","HeatCellSeriesComponent__svg_g_0_Template","HeatCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener","c_r1","cell","HeatCellSeriesComponent__svg_g_0_Template__svg_g_activate_0_listener","HeatCellSeriesComponent__svg_g_0_Template__svg_g_deactivate_0_listener","fill","ɵɵpureFunction3","HeatMapComponent__svg_g_2_Template","HeatMapComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","HeatMapComponent__svg_g_3_Template","HeatMapComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","HeatMapComponent__svg_rect_4_Template","rect_r7","rx","_c36","LineComponent__svg_g_0_Template","initialPath","stroke","LineComponent__svg_g_1_Template","_c37","LineSeriesComponent__svg_g_2_Template","LineSeriesComponent__svg_g_5_Template","isInactive","outerPath","hasGradient","gradientUrl","getColor","rangeFillOpacity","LineChartComponent__svg_g_5_Template","LineChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","LineChartComponent__svg_g_6_Template","LineChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","LineChartComponent__svg_g_8__svg_g_1_Template","hasRange","LineChartComponent__svg_g_8_Template","LineChartComponent__svg_g_9__svg_g_1_Template","series_r13","LineChartComponent__svg_g_9_Template","LineChartComponent__svg_g_10__svg_g_2_Template","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_select_1_listener","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_activate_1_listener","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_deactivate_1_listener","LineChartComponent__svg_g_10_Template","_r21","LineChartComponent__svg_g_10_Template__svg_g_mouseleave_0_listener","ctx_r20","LineChartComponent__svg_g_10_Template__svg_g_hover_1_listener","LineChartComponent__svg_g_11__svg_g_1_Template","series_r24","LineChartComponent__svg_g_11_Template","_r26","LineChartComponent__svg_g_11_Template__svg_g_onDomainChange_0_listener","_c38","_c39","PolarSeriesComponent__svg_g_2_Template","seriesColor","PolarSeriesComponent__svg_g_4_Template","PolarSeriesComponent__svg_g_4_Template__svg_g_select_0_listener","circle_r2","PolarSeriesComponent__svg_g_4_Template__svg_g_activate_0_listener","PolarSeriesComponent__svg_g_4_Template__svg_g_deactivate_0_listener","inactive","circleRadius","PolarChartComponent__svg_g_4__svg_circle_1_Template","r_r7","PolarChartComponent__svg_g_4_Template","radiusTicks","PolarChartComponent__svg_g_5__svg_g_1_Template","tick_r9","outerRadius","labelTrim","labelTrimSize","PolarChartComponent__svg_g_5_Template","thetaTicks","PolarChartComponent__svg_g_6_Template","PolarChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","yAxisScale","yAxisDims","transformYAxis","PolarChartComponent__svg_g_7_Template","PolarChartComponent__svg_g_8__svg_g_1_Template","_r15","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener","PolarChartComponent__svg_g_8_Template","transformPlot","PolarChartComponent__svg_g_9__svg_g_1_Template","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener","series_r19","PolarChartComponent__svg_g_9_Template","_c40","PieArcComponent__svg_defs_1_Template","radialGradientId","startOpacity","_c41","PieSeriesComponent__svg_g_0__svg_g_1_Template","arc_r1","trimLabels","maxLabelLength","explodeSlices","PieSeriesComponent__svg_g_0_Template","PieSeriesComponent__svg_g_0_Template__svg_g_select_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_activate_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_deactivate_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_dblclick_2_listener","dblclick","labelVisible","startAngle","endAngle","innerRadius","getTooltipTitle","_c42","_c43","PieGridSeriesComponent__svg_g_1_Template","PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener","PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener","PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener","pointerEvents","PieGridComponent__svg_g_2__svg_text_2_Template","series_r1","percent","PieGridComponent__svg_g_2__svg_text_3_Template","PieGridComponent__svg_g_2__svg_text_6_Template","PieGridComponent__svg_g_2__svg_text_7_Template","ɵɵtextInterpolate2","_c44","PieGridComponent__svg_g_2_Template","PieGridComponent__svg_g_2_Template__svg_g_select_1_listener","PieGridComponent__svg_g_2_Template__svg_g_activate_1_listener","PieGridComponent__svg_g_2_Template__svg_g_deactivate_1_listener","_c45","_c46","CardComponent__svg_path_2_Template","bandColor","transformBand","bandPath","_c47","CardSeriesComponent__svg_rect_0_Template","c_r2","emptyColor","CardSeriesComponent__svg_g_1_Template","CardSeriesComponent__svg_g_1_Template__svg_g_select_0_listener","c_r3","textColor","medianSize","labelFormatting","_c48","TreeMapCellComponent__svg_defs_1_Template","TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template","TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template","formattedValue","TreeMapCellComponent__svg_foreignObject_3_Template","getTextColor","_c49","TreeMapCellSeriesComponent__svg_g_0_Template","TreeMapCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener","_c50","_c51","LinearGaugeComponent__svg_line_4_Template","transformLine","units","LinearGaugeComponent__svg_line_5_Template","_c52","_c53","_c54","GaugeAxisComponent__svg_g_1_Template","GaugeAxisComponent__svg_g_2_Template","tick_r4","text","GaugeAxisComponent__svg_g_3_Template","GaugeComponent__svg_g_2_Template","GaugeComponent__svg_g_2_Template__svg_g_select_1_listener","GaugeComponent__svg_g_2_Template__svg_g_activate_1_listener","GaugeComponent__svg_g_2_Template__svg_g_deactivate_1_listener","arc_r3","rotation","backgroundArc","valueArc","cornerRadius","GaugeComponent__svg_g_3_Template","bigSegments","smallSegments","angleSpan","axisTickFormatting","GaugeComponent__svg_text_4_Template","displayValue","throttle","func","wait","options","args","result","timeout","previous","later","leading","Date","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","throttleable","duration","innerDecorator","target","key","descriptor","configurable","enumerable","get","getter","Object","defineProperty","PlacementTypes","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","top","Center","horizontalPosition","left","PositionHelper","calculateVerticalAlignment","window","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","positionContent","determinePlacement","TooltipContentComponent","constructor","element","renderer","platformId","cssClasses","clz","cssClass","ngAfterViewInit","bind","nativeElm","nativeElement","host","getBoundingClientRect","checkFlip","showCaret","addClass","setStyle","caretElm","onWindowResize","ɵfac","TooltipContentComponent_Factory","t","ɵɵdirectiveInject","ElementRef","Renderer2","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","TooltipContentComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","TooltipContentComponent_HostBindings","TooltipContentComponent_resize_HostBindingHandler","ɵɵresolveWindow","ɵɵclassMap","inputs","decls","vars","consts","TooltipContentComponent_Template","ɵɵclassMapInterpolate1","dependencies","NgIf","NgTemplateOutlet","styles","encapsulation","prototype","ngDevMode","ɵsetClassMetadata","selector","None","decorators","InjectionRegisteryService","injectionService","defaults","components","Map","getByType","create","bindings","createByType","assignDefaults","component","injectComponent","register","destroy","instance","compsByType","componentType","idx","indexOf","splice","destroyAll","destroyByType","comps","i","appendComponent","outputs","has","set","types","push","isViewContainerRef","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","globalRootViewContainer","getRootViewContainer","_container","Error","setRootViewContainer","getComponentRootNode","hostView","rootNodes","location","getRootViewContainerNode","projectComponentBindings","bindingKeys","getOwnPropertyNames","bindingName","eventKeys","eventName","componentClass","appendLocation","portalHost","portal","componentRef","attach","InjectionService_Factory","ɵɵinject","ApplicationRef","ComponentFactoryResolver","Injector","ɵprov","ɵɵdefineInjectable","token","factory","TooltipService","TooltipService_Factory","LegendType","ScaleType","ScaleLegendComponent","horizontal","ngOnChanges","changes","gradientValues","gradientString","direction","splits","pairs","reverse","forEach","c","Math","round","join","ScaleLegendComponent_Factory","valueRange","features","ɵɵNgOnChangesFeature","ScaleLegendComponent_Template","changeDetection","OnPush","formatLabel","toLocaleDateString","escapeLabel","replace","match","LegendEntryComponent","toggle","trimmedLabel","onMouseEnter","onMouseLeave","LegendEntryComponent_Factory","LegendEntryComponent_HostBindings","LegendEntryComponent_mouseenter_HostBindingHandler","LegendEntryComponent_mouseleave_HostBindingHandler","LegendEntryComponent_Template","LegendEntryComponent_Template_span_click_0_listener","LegendEntryComponent_Template_span_click_1_listener","LegendComponent","cd","labelActivate","labelDeactivate","legendEntries","update","markForCheck","getLegendEntries","items","findIndex","entry","item","find","d","LegendComponent_Factory","ChangeDetectorRef","LegendComponent_Template","NgForOf","ChartComponent","showLegend","legendColumns","legendType","getLegendType","ScaleLegend","chartColumns","chartWidth","floor","Linear","Legend","ChartComponent_Factory","ɵɵProvidersFeature","ngContentSelectors","ChartComponent_Template","ɵɵprojectionDef","ɵɵprojection","providers","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","VisibilityObserver_Factory","NgZone","ɵdir","ɵɵdefineDirective","isDate","toString","call","isNumber","BaseChartComponent","chartElement","schemeType","Ordinal","ngOnInit","bindWindowResizeEvent","visibilityObserver","subscribe","ngOnDestroy","unbindEvents","unsubscribe","cloneData","getContainerDims","hostElem","parentNode","formatDates","g","j","resizeSubscription","source","subscription","pipe","e","copy","seriesItem","seriesItemCopy","assign","JSON","parse","stringify","BaseChartComponent_Factory","BaseChartComponent_Template","AxisLabelComponent","textHeight","margin","AxisLabelComponent_Factory","attrs","AxisLabelComponent_Template","trimLabel","s","trim","slice","reduceTicks","maxTicks","reduced","modulus","getTickLines","maxLength","maxLines","labelString","totalLines","test","split","reduce","lines","last","pop","startIndex","substring","TextAnchor","XAxisTicksComponent","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","Middle","maxTicksLength","maxAllowedLength","approxHeight","maxPossibleLengthForTickIfWrapped","scale","step","updateDims","parseInt","ticksElement","getTicks","angle","getRotationAngle","adjustedScale","bandwidth","End","tick","tickLength","len","charWidth","wordWidth","baseWidth","maxBaseWidth","cos","PI","labelHeight","longestTick","earlier","current","tickLines","getMaxPossibleLengthForTick","requiredHeight","abs","sin","getMaxTicks","maxScaleTicks","tickValues","tickWidth","longestLabel","averageCharacterWidth","maxCharacters","truncatedText","maxAllowedLines","possibleStringLength","XAxisTicksComponent_Factory","XAxisTicksComponent_Query","XAxisTicksComponent_Template","XAxisComponent","xAxisOffset","xAxisClassName","padding","xAxisTickCount","newLabelOffset","XAxisComponent_Factory","XAxisComponent_Query","ticksComponent","showLabel","XAxisComponent_Template","roundedRect","w","h","r","tl","tr","bl","br","retval","YAxisTicksComponent","referenceLineLength","getApproximateAxisWidth","sign","positionMiddle","chunksLength","bandWidth","heightOfLines","availableFreeSpace","setReferencelines","y2","x2","Start","refMin","map","refMax","tickHeight","maxChars","preferredWidth","YAxisTicksComponent_Factory","YAxisTicksComponent_Query","YAxisTicksComponent_Template","YAxisComponent","yAxisOffset","yAxisClassName","yAxisTickCount","YAxisComponent_Factory","YAxisComponent_Query","YAxisComponent_Template","AxesModule","AxesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","StyleTypes","ShowTypes","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipAppendToBody","tooltipSpacing","tooltipShowCaret","tooltipAlignment","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","hide","listensForFocus","focus","listensForHover","mouseover","hideTooltip","onFocus","showTooltip","onBlur","contentDom","contains","onMouseClick","immediate","time","navigator","userAgent","createBoundOptions","addHideListeners","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","event","destroyFn","tooltipTitle","tooltipContext","TooltipDirective_Factory","ViewContainerRef","TooltipDirective_HostBindings","TooltipDirective_focusin_HostBindingHandler","TooltipDirective_blur_HostBindingHandler","TooltipDirective_mouseenter_HostBindingHandler","TooltipDirective_mouseleave_HostBindingHandler","TooltipDirective_click_HostBindingHandler","TooltipModule","TooltipModule_Factory","entryComponents","cache","id","newId","random","pow","SvgLinearGradientComponent","SvgLinearGradientComponent_Factory","stops","SvgLinearGradientComponent_Template","CircleComponent","Array","isArray","CircleComponent_Factory","CircleComponent_HostBindings","CircleComponent_click_HostBindingHandler","CircleComponent_mouseenter_HostBindingHandler","CircleComponent_mouseleave_HostBindingHandler","circleOpacity","CircleComponent_Template","SeriesType","CircleSeriesComponent","Standard","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","tooltipLabel","Time","Number","d1","getGradientStops","getTooltipMinMaxText","CircleSeriesComponent_Factory","CircleSeriesComponent_Template","animation","GridPanelComponent","GridPanelComponent_Factory","GridPanelComponent_Template","ClassEnum","GridPanelSeriesComponent","gridPanels","getGridPanels","className","Odd","positionIndex","Even","paddingInner","GridPanelSeriesComponent_Factory","GridPanelSeriesComponent_Template","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","SvgRadialGradientComponent_Factory","SvgRadialGradientComponent_Template","AreaComponent","animationsLoaded","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","attr","path","AreaComponent_Factory","AreaComponent_Template","easeOutExpo","b","count","countFrom","countTo","countDecimals","countDuration","callback","startVal","endVal","countDown","decimals","dec","startTime","runCount","timestamp","frameVal","progress","finished","requestAnimationFrame","val","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","start","cancelAnimationFrame","animationReq","CountUpDirective_Factory","CountUpDirective_Template","root","global","MouseEvent","createMouseEvent","bubbles","cancelable","document","createEvent","initEvent","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","group","groupName","d0","toFixed","v","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","lastAnchorPos","ev","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","tooltipItem","TooltipArea_Factory","TooltipArea_Query","TooltipArea_Template","TooltipArea_Template__svg_rect_mousemove_1_listener","TooltipArea_Template__svg_rect_mouseleave_1_listener","_r0","static","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","includes","extent","on","selection","newSelection","newDomain","invert","Timeline_Factory","autoScale","Timeline_Template","AdvancedLegendComponent","legendItems","percentageFormatting","getTotal","sum","getLegendItems","origialLabel","AdvancedLegendComponent_Factory","AdvancedLegendComponent_Template","COMPONENTS","ChartCommonModule","ChartCommonModule_Factory","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","showYLabel","legendPosition","columns","xOffset","chartHeight","colorSets","selectable","ColorHelper","cs","colorDomain","generateColorScheme","colorScale","Quantile","points","found","mapping","toLowerCase","getLinearGradientStops","colorValueScale","endColor","startColor","currentVal","originalOffset","getUniqueXDomainValues","valueSet","Set","add","from","getScaleType","checkDateType","allDates","every","allNumbers","getXDomainArray","xScaleMin","xScaleMax","mappedValues","sort","a","aDate","getTime","bDate","sortLinear","property","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","AreaSeriesComponent","stacked","normalized","updateGradient","currentArea","startingArea","xProperty","y0","d0values","d1values","AreaSeriesComponent_Factory","AreaSeriesComponent_Template","AreaChartComponent","legendTitle","xAxis","yAxis","timeline","roundDomains","timelinePadding","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","timelineXDomain","yScaleMin","yScaleMax","nice","date","num","deactivateAll","opts","entries","ɵAreaChartComponent_BaseFactory","AreaChartComponent_Factory","ɵɵgetInheritedFactory","contentQueries","AreaChartComponent_ContentQueries","dirIndex","ɵɵcontentQuery","AreaChartComponent_HostBindings","AreaChartComponent_mouseleave_HostBindingHandler","ɵɵInheritDefinitionFeature","AreaChartComponent_Template","AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartNormalizedComponent","valueOf","ɵAreaChartNormalizedComponent_BaseFactory","AreaChartNormalizedComponent_Factory","AreaChartNormalizedComponent_ContentQueries","AreaChartNormalizedComponent_HostBindings","AreaChartNormalizedComponent_mouseleave_HostBindingHandler","AreaChartNormalizedComponent_Template","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartStackedComponent","ɵAreaChartStackedComponent_BaseFactory","AreaChartStackedComponent_Factory","AreaChartStackedComponent_ContentQueries","AreaChartStackedComponent_HostBindings","AreaChartStackedComponent_mouseleave_HostBindingHandler","AreaChartStackedComponent_Template","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartModule","AreaChartModule_Factory","BarComponent","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","BarComponent_Factory","BarComponent_HostBindings","BarComponent_mouseenter_HostBindingHandler","BarComponent_mouseleave_HostBindingHandler","BarComponent_Template","BarComponent_Template__svg_path_click_1_listener","BarChartType","D0Types","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","BarLabelComponent_Factory","BarLabelComponent_Template","SeriesHorizontal","updateTooltipSettings","positive","d0Type","getLabel","bar","offset0","offset1","updateDataLabels","section","totalPositive","totalNegative","active","dataItem","barLabel","SeriesHorizontal_Factory","SeriesHorizontal_Template","BarHorizontalComponent","barPadding","rangeRound","fromLegend","ɵBarHorizontalComponent_BaseFactory","BarHorizontalComponent_Factory","BarHorizontalComponent_ContentQueries","BarHorizontalComponent_Template","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalComponent_Template__svg_g_select_4_listener","BarHorizontalComponent_Template__svg_g_activate_4_listener","BarHorizontalComponent_Template__svg_g_deactivate_4_listener","BarHorizontalComponent_Template__svg_g_dataLabelWidthChanged_4_listener","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valueDomain","getValueDomain","getGroupScale","getInnerScale","getValueScale","paddingOuter","groupIndex","flat","ɵBarHorizontal2DComponent_BaseFactory","BarHorizontal2DComponent_Factory","BarHorizontal2DComponent_ContentQueries","BarHorizontal2DComponent_Template","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalNormalizedComponent","ɵBarHorizontalNormalizedComponent_BaseFactory","BarHorizontalNormalizedComponent_Factory","BarHorizontalNormalizedComponent_ContentQueries","BarHorizontalNormalizedComponent_Template","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","ɵBarHorizontalStackedComponent_BaseFactory","BarHorizontalStackedComponent_Factory","BarHorizontalStackedComponent_ContentQueries","BarHorizontalStackedComponent_Template","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","SeriesVerticalComponent","SeriesVerticalComponent_Factory","SeriesVerticalComponent_Template","BarVerticalComponent","some","isNaN","ɵBarVerticalComponent_BaseFactory","BarVerticalComponent_Factory","BarVerticalComponent_ContentQueries","BarVerticalComponent_Template","BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalComponent_Template__svg_g_activate_4_listener","BarVerticalComponent_Template__svg_g_deactivate_4_listener","BarVerticalComponent_Template__svg_g_select_4_listener","BarVerticalComponent_Template__svg_g_dataLabelHeightChanged_4_listener","BarVertical2DComponent","ɵBarVertical2DComponent_BaseFactory","BarVertical2DComponent_Factory","BarVertical2DComponent_ContentQueries","BarVertical2DComponent_Template","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalNormalizedComponent","ɵBarVerticalNormalizedComponent_BaseFactory","BarVerticalNormalizedComponent_Factory","BarVerticalNormalizedComponent_ContentQueries","BarVerticalNormalizedComponent_Template","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalStackedComponent","ɵBarVerticalStackedComponent_BaseFactory","BarVerticalStackedComponent_Factory","BarVerticalStackedComponent_ContentQueries","BarVerticalStackedComponent_Template","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarChartModule","BarChartModule_Factory","cloneDeep","BoxComponent","boxStrokeWidth","updateLineEl","maskLineId","boxPath","oldPath","oldLineCoordinates","getStartingLineCoordinates","nodeBar","selectAll","ease","attrTween","pathTween","lineEl","lineCoordinates","_","lineTween","nodeLineEl","baseVal","precision","path0","path1","cloneNode","setAttribute","n0","getTotalLength","n1","distances","dt","p0","getPointAtLength","p1","p","BoxComponent_Factory","BoxComponent_HostBindings","BoxComponent_mouseenter_HostBindingHandler","BoxComponent_mouseleave_HostBindingHandler","BoxComponent_Template","BoxComponent_Template__svg_path_click_7_listener","BoxSeriesComponent","counts","mappedCounts","serie","whiskers","groupCounts","quartiles","getBoxQuantiles","getLinesCoordinates","box","formattedTooltipLabel","inputData","commonX","offsetX","whiskerLineWidth","whiskerZero","whiskerOne","median","topLine","medianLine","bottomLine","verticalLine","BoxSeriesComponent_Factory","BoxSeriesComponent_Template","BoxSeriesComponent_Template__svg_g_select_0_listener","BoxSeriesComponent_Template__svg_g_activate_0_listener","BoxSeriesComponent_Template__svg_g_deactivate_0_listener","BoxChartComponent","setScales","getUniqueBoxChartXDomainValues","legendOpts","ɵBoxChartComponent_BaseFactory","BoxChartComponent_Factory","BoxChartComponent_ContentQueries","legendOptionsConfig","BoxChartComponent_Template","BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BoxChartComponent_Template__svg_g_dimensionsChanged_2_listener","BoxChartComponent_Template__svg_g_dimensionsChanged_3_listener","BoxChartModule","BoxChartModule_Factory","getDomain","minVal","maxVal","getScale","BubbleSeriesComponent","circles","getCircles","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","BubbleSeriesComponent_Factory","BubbleSeriesComponent_Template","BubbleChartComponent","maxRadius","minRadius","bubblePadding","rDomain","getRDomain","getRScale","getBubblePadding","yMin","xMin","yMax","xMax","Infinity","ɵBubbleChartComponent_BaseFactory","BubbleChartComponent_Factory","BubbleChartComponent_ContentQueries","BubbleChartComponent_HostBindings","BubbleChartComponent_mouseleave_HostBindingHandler","BubbleChartComponent_Template","BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BubbleChartComponent_Template__svg_rect_mouseenter_7_listener","BubbleChartModule","BubbleChartModule_Factory","HeatMapCellComponent","animateToCurrentForm","HeatMapCellComponent_Factory","HeatMapCellComponent_HostBindings","HeatMapCellComponent_mouseenter_HostBindingHandler","HeatMapCellComponent_mouseleave_HostBindingHandler","HeatMapCellComponent_Template","HeatMapCellComponent_Template__svg_rect_click_2_listener","HeatCellSeriesComponent","cells","getCells","row","HeatCellSeriesComponent_Factory","HeatCellSeriesComponent_Template","HeatMapComponent","innerPadding","rects","getRects","getDimension","N","L","f","yVal","ɵHeatMapComponent_BaseFactory","HeatMapComponent_Factory","HeatMapComponent_ContentQueries","HeatMapComponent_Template","HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","HeatMapComponent_Template__svg_g_select_5_listener","HeatMapComponent_Template__svg_g_activate_5_listener","HeatMapComponent_Template__svg_g_deactivate_5_listener","HeatMapModule","HeatMapModule_Factory","LineComponent","LineComponent_Factory","LineComponent_Template","strokeDasharray","strokeDashoffset","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","getRangeGenerator","areaGradientStops","LineSeriesComponent_Factory","LineSeriesComponent_Template","LineChartComponent","ɵLineChartComponent_BaseFactory","LineChartComponent_Factory","LineChartComponent_ContentQueries","LineChartComponent_HostBindings","LineChartComponent_mouseleave_HostBindingHandler","LineChartComponent_Template","LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","LineChartModule","LineChartModule_Factory","PieLabelComponent","setTransforms","styleTransform","textX","textY","attrTransform","textTransition","isIE","startRadius","innerArc","innerPos","centroid","pos","outerPos","midAngle","PieLabelComponent_Factory","PieLabelComponent_Template","PolarSeriesComponent","linearScaleType","getAngle","cData","defaultTooltipText","PolarSeriesComponent_Factory","PolarSeriesComponent_Template","twoPI","PolarChartComponent","showSeriesOnHover","yAxisMinScale","setDims","setTicks","halfWidth","halfHeight","yOffset","xValues","getXValues","dd","startPos","minDistance","o","getYValues","ɵPolarChartComponent_BaseFactory","PolarChartComponent_Factory","PolarChartComponent_ContentQueries","PolarChartComponent_Template","PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","PieArcComponent","getPointerEvents","calc","calculateArc","updateAnimation","_current","copyOfD","interpolater","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","PieArcComponent_Factory","PieArcComponent_Template","PieArcComponent_Template__svg_path_click_2_listener","PieArcComponent_Template__svg_path_dblclick_2_listener","PieArcComponent_Template__svg_path_mouseenter_2_listener","PieArcComponent_Template__svg_path_mouseleave_2_listener","PieSeriesComponent","pieGenerator","arcData","calculateLabelPositions","outerArc","factor","pieData","labelPositions","myArc","showLabels","PieSeriesComponent_Factory","PieSeriesComponent_Template","AdvancedPieChartComponent","ɵAdvancedPieChartComponent_BaseFactory","AdvancedPieChartComponent_Factory","AdvancedPieChartComponent_ContentQueries","nameFormatting","AdvancedPieChartComponent_Template","AdvancedPieChartComponent_Template__svg_g_select_4_listener","AdvancedPieChartComponent_Template__svg_g_activate_4_listener","AdvancedPieChartComponent_Template__svg_g_deactivate_4_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener","PieChartComponent","labels","doughnut","arcWidth","hasNoOptionalMarginsSet","translation","ɵPieChartComponent_BaseFactory","PieChartComponent_Factory","PieChartComponent_ContentQueries","PieChartComponent_Template","PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","PieChartComponent_Template__svg_g_dblclick_2_listener","PieChartComponent_Template__svg_g_select_2_listener","PieChartComponent_Template__svg_g_activate_2_listener","PieChartComponent_Template__svg_g_deactivate_2_listener","gridSize","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","PieGridSeriesComponent","layout","arcs","getArcs","other","PieGridSeriesComponent_Factory","PieGridSeriesComponent_Template","PieGridComponent","getSeries","baselineLabelHeight","yPos","ɵPieGridComponent_BaseFactory","PieGridComponent_Factory","PieGridComponent_ContentQueries","PieGridComponent_Template","PieChartModule","PieChartModule_Factory","PolarChartModule","PolarChartModule_Factory","calculateTextWidth","fontFamilyKey","defaultWidth","acc","curr","VERDANA_FONT_WIDTHS_16_PX","A","B","C","D","E","F","G","H","I","J","K","M","O","P","Q","R","S","T","U","V","W","X","Y","Z","k","l","m","n","q","u","z","$","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","scaleTextSSR","hasValue","card","textWidth","cardData","paddedValue","setPadding","scaleText","startCount","repeat","decs","textEl","availableWidth","availableHeight","resizeScale","CardComponent_Factory","CardComponent_Query","CardComponent_Template","CardComponent_Template__svg_g_click_0_listener","hexToRgb","rgb","invertColor","yiq","depth","shadeRGBColor","CardSeriesComponent","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","CardSeriesComponent_Factory","CardSeriesComponent_Template","NumberCardComponent","clickable","observers","ɵNumberCardComponent_BaseFactory","NumberCardComponent_Factory","NumberCardComponent_Template","NumberCardComponent_Template__svg_g_select_2_listener","NumberCardModule","NumberCardModule_Factory","TreeMapCellComponent","cellData","TreeMapCellComponent_Factory","TreeMapCellComponent_Template","TreeMapCellComponent_Template__svg_rect_click_2_listener","TreeMapCellSeriesComponent","children","x0","TreeMapCellSeriesComponent_Factory","TreeMapCellSeriesComponent_Template","TreeMapComponent","rootNode","isRoot","parentId","ɵTreeMapComponent_BaseFactory","TreeMapComponent_Factory","TreeMapComponent_ContentQueries","TreeMapComponent_Template","TreeMapComponent_Template__svg_g_select_2_listener","TreeMapModule","TreeMapModule_Factory","ElementType","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","Value","Units","hasPreviousValue","previousValue","getDisplayValue","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","ɵLinearGaugeComponent_BaseFactory","LinearGaugeComponent_Factory","LinearGaugeComponent_Query","LinearGaugeComponent_Template","LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener","ɵɵpureFunction0","GaugeArcComponent","GaugeArcComponent_Factory","GaugeArcComponent_Template","GaugeArcComponent_Template__svg_g_select_1_listener","GaugeArcComponent_Template__svg_g_activate_1_listener","GaugeArcComponent_Template__svg_g_deactivate_1_listener","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","smallTickSegment","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","getTickPath","smallAngleDeg","smallAngle","lineGenerator","GaugeAxisComponent_Factory","GaugeAxisComponent_Template","GaugeComponent","showAxis","showText","availableRadius","radiusPerArc","textRadius","dataMin","dataMax","textValue","availableSpace","ɵGaugeComponent_BaseFactory","GaugeComponent_Factory","GaugeComponent_ContentQueries","GaugeComponent_Query","GaugeComponent_Template","GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","GaugeModule","GaugeModule_Factory","ngxChartsPolyfills","SVGElement","HTMLDivElement","NgxChartsModule","NgxChartsModule_Factory","fieldType","groupByType","formatter"],"sources":["C:/Users/Manav Gupta/Downloads/fms/fms/frontend/fms_frontend/node_modules/@swimlane/ngx-charts/fesm2020/swimlane-ngx-charts.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    let context;\n    let args;\n    let result;\n    let timeout = null;\n    let previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        context = this;\n        // eslint-disable-next-line prefer-rest-params\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\nvar PlacementTypes;\n(function (PlacementTypes) {\n    PlacementTypes[\"Top\"] = \"top\";\n    PlacementTypes[\"Bottom\"] = \"bottom\";\n    PlacementTypes[\"Left\"] = \"left\";\n    PlacementTypes[\"Right\"] = \"right\";\n    PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Top) {\n        return elDimensions.top - caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n        return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n    }\n    return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Left) {\n        return elDimensions.left - caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n        return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n    }\n    return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n    /**\n     * Calculate vertical alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.height > window.innerHeight) {\n            result = window.innerHeight - popoverDimensions.height;\n        }\n        return result;\n    }\n    /**\n     * Calculate vertical caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Top) {\n            result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Bottom) {\n            result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n        }\n        const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n            result += popoverPosition + popoverDimensions.height - window.innerHeight;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.width > window.innerWidth) {\n            result = window.innerWidth - popoverDimensions.width;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Left) {\n            result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Right) {\n            result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n        }\n        const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n            result += popoverPosition + popoverDimensions.width - window.innerWidth;\n        }\n        return result;\n    }\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @memberOf PositionHelper\n     */\n    static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n        let flip = false;\n        if (placement === PlacementTypes.Right) {\n            if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Left) {\n            if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Top) {\n            if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Bottom) {\n            if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n                flip = true;\n            }\n        }\n        return flip;\n    }\n    /**\n     * Position caret\n     *\n     * @memberOf PositionHelper\n     */\n    static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = -7;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = elmDim.width;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = elmDim.height;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = -7;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Position content\n     *\n     * @memberOf PositionHelper\n     */\n    static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = hostDim.left + hostDim.width + spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = hostDim.left - elmDim.width - spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = hostDim.top - elmDim.height - spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = hostDim.top + hostDim.height + spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Determine placement based on flip\n     *\n     * @memberOf PositionHelper\n     */\n    static determinePlacement(placement, elmDim, hostDim, spacing) {\n        const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n        if (shouldFlip) {\n            if (placement === PlacementTypes.Right) {\n                return PlacementTypes.Left;\n            }\n            else if (placement === PlacementTypes.Left) {\n                return PlacementTypes.Right;\n            }\n            else if (placement === PlacementTypes.Top) {\n                return PlacementTypes.Bottom;\n            }\n            else if (placement === PlacementTypes.Bottom) {\n                return PlacementTypes.Top;\n            }\n        }\n        return placement;\n    }\n}\n\nclass TooltipContentComponent {\n    constructor(element, renderer, platformId) {\n        this.element = element;\n        this.renderer = renderer;\n        this.platformId = platformId;\n    }\n    get cssClasses() {\n        let clz = 'ngx-charts-tooltip-content';\n        clz += ` position-${this.placement}`;\n        clz += ` type-${this.type}`;\n        clz += ` ${this.cssClass}`;\n        return clz;\n    }\n    ngAfterViewInit() {\n        setTimeout(this.position.bind(this));\n    }\n    position() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const nativeElm = this.element.nativeElement;\n        const hostDim = this.host.nativeElement.getBoundingClientRect();\n        // if no dims were found, never show\n        if (!hostDim.height && !hostDim.width)\n            return;\n        const elmDim = nativeElm.getBoundingClientRect();\n        this.checkFlip(hostDim, elmDim);\n        this.positionContent(nativeElm, hostDim, elmDim);\n        if (this.showCaret) {\n            this.positionCaret(hostDim, elmDim);\n        }\n        // animate its entry\n        setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n    }\n    positionContent(nativeElm, hostDim, elmDim) {\n        const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n        this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n        this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n    }\n    positionCaret(hostDim, elmDim) {\n        const caretElm = this.caretElm.nativeElement;\n        const caretDimensions = caretElm.getBoundingClientRect();\n        const { top, left } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n        this.renderer.setStyle(caretElm, 'top', `${top}px`);\n        this.renderer.setStyle(caretElm, 'left', `${left}px`);\n    }\n    checkFlip(hostDim, elmDim) {\n        this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n    onWindowResize() {\n        this.position();\n    }\n}\nTooltipContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipContentComponent, selector: \"ngx-tooltip-content\", inputs: { host: \"host\", showCaret: \"showCaret\", type: \"type\", placement: \"placement\", alignment: \"alignment\", spacing: \"spacing\", cssClass: \"cssClass\", title: \"title\", template: \"template\", context: \"context\" }, host: { listeners: { \"window:resize\": \"onWindowResize()\" }, properties: { \"class\": \"this.cssClasses\" } }, viewQueries: [{ propertyName: \"caretElm\", first: true, predicate: [\"caretElm\"], descendants: true }], ngImport: i0, template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    throttleable(100)\n], TooltipContentComponent.prototype, \"onWindowResize\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-tooltip-content', template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { host: [{\n                type: Input\n            }], showCaret: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], alignment: [{\n                type: Input\n            }], spacing: [{\n                type: Input\n            }], cssClass: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], caretElm: [{\n                type: ViewChild,\n                args: ['caretElm']\n            }], cssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nclass InjectionRegisteryService {\n    constructor(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    getByType(type = this.type) {\n        return this.components.get(type);\n    }\n    create(bindings) {\n        return this.createByType(this.type, bindings);\n    }\n    createByType(type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        const component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    }\n    destroy(instance) {\n        const compsByType = this.components.get(instance.componentType);\n        if (compsByType && compsByType.length) {\n            const idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                const component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    }\n    destroyAll() {\n        this.destroyByType(this.type);\n    }\n    destroyByType(type) {\n        const comps = this.components.get(type);\n        if (comps && comps.length) {\n            let i = comps.length - 1;\n            while (i >= 0) {\n                this.destroy(comps[i--]);\n            }\n        }\n    }\n    injectComponent(type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    }\n    assignDefaults(bindings) {\n        const inputs = { ...this.defaults.inputs };\n        const outputs = { ...this.defaults.outputs };\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = { ...inputs, ...bindings.inputs };\n        }\n        if (outputs) {\n            bindings.outputs = { ...outputs, ...bindings.outputs };\n        }\n        return bindings;\n    }\n    register(type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        const types = this.components.get(type);\n        types.push(component);\n    }\n}\n\nfunction isViewContainerRef(x) {\n    return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n    constructor(applicationRef, componentFactoryResolver, injector) {\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.injector = injector;\n    }\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    static setGlobalRootViewContainer(container) {\n        InjectionService.globalRootViewContainer = container;\n    }\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainer() {\n        if (this._container)\n            return this._container;\n        if (InjectionService.globalRootViewContainer)\n            return InjectionService.globalRootViewContainer;\n        if (this.applicationRef.components.length)\n            return this.applicationRef.components[0];\n        throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n    setRootViewContainer(container) {\n        this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n    getComponentRootNode(component) {\n        if (isViewContainerRef(component)) {\n            return component.element.nativeElement;\n        }\n        if (component.hostView && component.hostView.rootNodes.length > 0) {\n            return component.hostView.rootNodes[0];\n        }\n        // the top most component root node has no `hostView`\n        return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainerNode(component) {\n        return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n    projectComponentBindings(component, bindings) {\n        if (bindings) {\n            if (bindings.inputs !== undefined) {\n                const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n                for (const bindingName of bindingKeys) {\n                    component.instance[bindingName] = bindings.inputs[bindingName];\n                }\n            }\n            if (bindings.outputs !== undefined) {\n                const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n                for (const eventName of eventKeys) {\n                    component.instance[eventName] = bindings.outputs[eventName];\n                }\n            }\n        }\n        return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n    appendComponent(componentClass, bindings = {}, location) {\n        if (!location)\n            location = this.getRootViewContainer();\n        const appendLocation = this.getComponentRootNode(location);\n        const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(componentClass);\n        const componentRef = portalHost.attach(portal);\n        this.projectComponentBindings(componentRef, bindings);\n        return componentRef;\n    }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, deps: [{ token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nInjectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }]; } });\n\nclass TooltipService extends InjectionRegisteryService {\n    constructor(injectionService) {\n        super(injectionService);\n        this.type = TooltipContentComponent;\n    }\n}\nTooltipService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, deps: [{ token: InjectionService }], target: i0.ɵɵFactoryTarget.Injectable });\nTooltipService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: InjectionService }]; } });\n\nvar LegendPosition;\n(function (LegendPosition) {\n    LegendPosition[\"Right\"] = \"right\";\n    LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n    LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n    LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"Time\"] = \"time\";\n    ScaleType[\"Linear\"] = \"linear\";\n    ScaleType[\"Ordinal\"] = \"ordinal\";\n    ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nclass ScaleLegendComponent {\n    constructor() {\n        this.horizontal = false;\n    }\n    ngOnChanges(changes) {\n        const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n        const direction = this.horizontal ? 'right' : 'bottom';\n        this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n    gradientString(colors, splits) {\n        // add the 100%\n        splits.push(1);\n        const pairs = [];\n        colors.reverse().forEach((c, i) => {\n            pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n        });\n        return pairs.join(', ');\n    }\n}\nScaleLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nScaleLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: { valueRange: \"valueRange\", colors: \"colors\", height: \"height\", width: \"width\", horizontal: \"horizontal\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-scale-legend', template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"] }]\n        }], propDecorators: { valueRange: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }] } });\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n    if (label instanceof Date) {\n        label = label.toLocaleDateString();\n    }\n    else {\n        label = label.toLocaleString();\n    }\n    return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n    return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n        return {\n            '&': '&amp;',\n            // tslint:disable-next-line: quotemark\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '\"': '&quot;',\n            '<': '&lt;',\n            '>': '&gt;'\n        }[match];\n    });\n}\n\nclass LegendEntryComponent {\n    constructor() {\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.toggle = new EventEmitter();\n    }\n    get trimmedLabel() {\n        return this.formattedLabel || '(empty)';\n    }\n    onMouseEnter() {\n        this.activate.emit({ name: this.label });\n    }\n    onMouseLeave() {\n        this.deactivate.emit({ name: this.label });\n    }\n}\nLegendEntryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLegendEntryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: { color: \"color\", label: \"label\", formattedLabel: \"formattedLabel\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", toggle: \"toggle\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, ngImport: i0, template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-charts-legend-entry',\n                    template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], formattedLabel: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], toggle: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LegendComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.horizontal = false;\n        this.labelClick = new EventEmitter();\n        this.labelActivate = new EventEmitter();\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n        const items = [];\n        for (const label of this.data) {\n            const formattedLabel = formatLabel(label);\n            const idx = items.findIndex(i => {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label,\n                    formattedLabel,\n                    color: this.colors.getColor(label)\n                });\n            }\n        }\n        return items;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    }\n    activate(item) {\n        this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n        this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendComponent, selector: \"ngx-charts-legend\", inputs: { data: \"data\", title: \"title\", colors: \"colors\", height: \"height\", width: \"width\", activeEntries: \"activeEntries\", horizontal: \"horizontal\" }, outputs: { labelClick: \"labelClick\", labelActivate: \"labelActivate\", labelDeactivate: \"labelDeactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"], components: [{ type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: [\"color\", \"label\", \"formattedLabel\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"toggle\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-legend', template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }], labelClick: [{\n                type: Output\n            }], labelActivate: [{\n                type: Output\n            }], labelDeactivate: [{\n                type: Output\n            }] } });\n\nclass ChartComponent {\n    constructor() {\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.LegendPosition = LegendPosition;\n        this.LegendType = LegendType;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        let legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n                if (this.legendType === LegendType.ScaleLegend) {\n                    legendColumns = 1;\n                }\n                else {\n                    legendColumns = 2;\n                }\n            }\n        }\n        const chartColumns = 12 - legendColumns;\n        this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\n        this.legendWidth =\n            !this.legendOptions || this.legendOptions.position === LegendPosition.Right\n                ? Math.floor((this.view[0] * legendColumns) / 12.0)\n                : this.chartWidth;\n    }\n    getLegendType() {\n        return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n}\nChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ChartComponent, selector: \"ngx-charts-chart\", inputs: { view: \"view\", showLegend: \"showLegend\", legendOptions: \"legendOptions\", legendType: \"legendType\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }, providers: [TooltipService], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `, isInline: true, components: [{ type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: [\"valueRange\", \"colors\", \"height\", \"width\", \"horizontal\"] }, { type: LegendComponent, selector: \"ngx-charts-legend\", inputs: [\"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"horizontal\"], outputs: [\"labelClick\", \"labelActivate\", \"labelDeactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [TooltipService],\n                    selector: 'ngx-charts-chart',\n                    template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { view: [{\n                type: Input\n            }], showLegend: [{\n                type: Input\n            }], legendOptions: [{\n                type: Input\n            }], legendType: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], legendLabelClick: [{\n                type: Output\n            }], legendLabelActivate: [{\n                type: Output\n            }], legendLabelDeactivate: [{\n                type: Output\n            }] } });\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.visible = new EventEmitter();\n        this.isVisible = false;\n        this.runCheck();\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run(() => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        });\n    }\n    runCheck() {\n        const check = () => {\n            if (!this.element) {\n                return;\n            }\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular(() => {\n                    this.timeout = setTimeout(() => check(), 100);\n                });\n            }\n        };\n        this.zone.runOutsideAngular(() => {\n            this.timeout = setTimeout(() => check());\n        });\n    }\n}\nVisibilityObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nVisibilityObserver.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: VisibilityObserver, selector: \"visibility-observer\", outputs: { visible: \"visible\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'visibility-observer'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: Output\n            }] } });\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nclass BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        this.chartElement = chartElement;\n        this.zone = zone;\n        this.cd = cd;\n        this.platformId = platformId;\n        this.scheme = 'cool';\n        this.schemeType = ScaleType.Ordinal;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.animations = false;\n        }\n    }\n    ngAfterViewInit() {\n        this.bindWindowResizeEvent();\n        // listen for visibility of the element for hidden by default scenario\n        this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n        this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        if (this.visibilityObserver) {\n            this.visibilityObserver.visible.unsubscribe();\n            this.visibilityObserver.destroy();\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.results) {\n            this.results = this.cloneData(this.results);\n        }\n        else {\n            this.results = [];\n        }\n        if (this.view) {\n            this.width = this.view[0];\n            this.height = this.view[1];\n        }\n        else {\n            const dims = this.getContainerDims();\n            if (dims) {\n                this.width = dims.width;\n                this.height = dims.height;\n            }\n        }\n        // default values if width or height are 0 or undefined\n        if (!this.width) {\n            this.width = 600;\n        }\n        if (!this.height) {\n            this.height = 400;\n        }\n        this.width = Math.floor(this.width);\n        this.height = Math.floor(this.height);\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    getContainerDims() {\n        let width;\n        let height;\n        const hostElem = this.chartElement.nativeElement;\n        if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n            // Get the container dimensions\n            const dims = hostElem.parentNode.getBoundingClientRect();\n            width = dims.width;\n            height = dims.height;\n        }\n        if (width && height) {\n            return { width, height };\n        }\n        return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    formatDates() {\n        for (let i = 0; i < this.results.length; i++) {\n            const g = this.results[i];\n            g.label = g.name;\n            if (isDate(g.label)) {\n                g.label = g.label.toLocaleDateString();\n            }\n            if (g.series) {\n                for (let j = 0; j < g.series.length; j++) {\n                    const d = g.series[j];\n                    d.label = d.name;\n                    if (isDate(d.label)) {\n                        d.label = d.label.toLocaleDateString();\n                    }\n                }\n            }\n        }\n    }\n    unbindEvents() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    bindWindowResizeEvent() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const source = fromEvent(window, 'resize');\n        const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n            this.update();\n            if (this.cd) {\n                this.cd.markForCheck();\n            }\n        });\n        this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n    cloneData(data) {\n        const results = [];\n        for (const item of data) {\n            const copy = {\n                name: item['name']\n            };\n            if (item['value'] !== undefined) {\n                copy['value'] = item['value'];\n            }\n            if (item['series'] !== undefined) {\n                copy['series'] = [];\n                for (const seriesItem of item['series']) {\n                    const seriesItemCopy = Object.assign({}, seriesItem);\n                    copy['series'].push(seriesItemCopy);\n                }\n            }\n            if (item['extra'] !== undefined) {\n                copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n            }\n            results.push(copy);\n        }\n        return results;\n    }\n}\nBaseChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBaseChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseChartComponent, selector: \"base-chart\", inputs: { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: ` <div></div> `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'base-chart',\n                    template: ` <div></div> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { results: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Orientation;\n(function (Orientation) {\n    Orientation[\"Top\"] = \"top\";\n    Orientation[\"Bottom\"] = \"bottom\";\n    Orientation[\"Left\"] = \"left\";\n    Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nclass AxisLabelComponent {\n    constructor(element) {\n        this.textHeight = 25;\n        this.margin = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.strokeWidth = '0.01';\n        this.textAnchor = 'middle';\n        this.transform = '';\n        switch (this.orient) {\n            case Orientation.Top:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Bottom:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Left:\n                this.y = -(this.offset + this.textHeight + this.margin);\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            case Orientation.Right:\n                this.y = this.offset + this.margin;\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            default:\n        }\n    }\n}\nAxisLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAxisLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: { orient: \"orient\", label: \"label\", offset: \"offset\", width: \"width\", height: \"height\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-axis-label]',\n                    template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { orient: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }] } });\n\nfunction trimLabel(s, max = 16) {\n    if (typeof s !== 'string') {\n        if (typeof s === 'number') {\n            return s + '';\n        }\n        else {\n            return '';\n        }\n    }\n    s = s.trim();\n    if (s.length <= max) {\n        return s;\n    }\n    else {\n        return `${s.slice(0, max)}...`;\n    }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n        const reduced = [];\n        const modulus = Math.floor(ticks.length / maxTicks);\n        for (let i = 0; i < ticks.length; i++) {\n            if (i % modulus === 0) {\n                reduced.push(ticks[i]);\n            }\n        }\n        ticks = reduced;\n    }\n    return ticks;\n}\nfunction getTickLines(label, maxLength, maxLines) {\n    const labelString = (label || '').toString();\n    let totalLines = [];\n    if (/\\s/.test(labelString)) {\n        totalLines = labelString.split(/\\s+/).reduce((lines, line) => {\n            const last = (lines.pop() || '') + ' ';\n            return last.length + line.length > maxLength ? [...lines, last.trim(), line.trim()] : [...lines, last + line];\n        }, []);\n    }\n    else {\n        let startIndex = 0;\n        while (startIndex < labelString.length) {\n            totalLines.push(labelString.substring(startIndex, startIndex + maxLength));\n            startIndex += maxLength;\n        }\n    }\n    if (totalLines.length > maxLines) {\n        totalLines = totalLines.splice(0, maxLines);\n        totalLines[totalLines.length - 1] += '...';\n    }\n    return totalLines;\n}\n\nvar TextAnchor;\n(function (TextAnchor) {\n    TextAnchor[\"Start\"] = \"start\";\n    TextAnchor[\"Middle\"] = \"middle\";\n    TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nclass XAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.rotateTicks = true;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.verticalSpacing = 20;\n        this.rotateLabels = false;\n        this.innerTickSize = 6;\n        this.outerTickSize = 6;\n        this.tickPadding = 3;\n        this.textAnchor = TextAnchor.Middle;\n        this.maxTicksLength = 0;\n        this.maxAllowedLength = 16;\n        this.height = 0;\n        this.approxHeight = 10;\n        this.maxPossibleLengthForTickIfWrapped = 16;\n    }\n    get isWrapTicksSupported() {\n        return this.wrapTicks && this.scale.step;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.dimensionsChanged.emit({ height: this.approxHeight });\n            return;\n        }\n        const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n        if (height !== this.height) {\n            this.height = height;\n            this.dimensionsChanged.emit({ height: this.height });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n        this.adjustedScale = this.scale.bandwidth\n            ? function (d) {\n                return this.scale(d) + this.scale.bandwidth() * 0.5;\n            }\n            : this.scale;\n        this.textTransform = '';\n        if (angle && angle !== 0) {\n            this.textTransform = `rotate(${angle})`;\n            this.textAnchor = TextAnchor.End;\n            this.verticalSpacing = 10;\n        }\n        else {\n            this.textAnchor = TextAnchor.Middle;\n        }\n        setTimeout(() => this.updateDims());\n    }\n    getRotationAngle(ticks) {\n        let angle = 0;\n        this.maxTicksLength = 0;\n        for (let i = 0; i < ticks.length; i++) {\n            const tick = this.tickFormat(ticks[i]).toString();\n            let tickLength = tick.length;\n            if (this.trimTicks) {\n                tickLength = this.tickTrim(tick).length;\n            }\n            if (tickLength > this.maxTicksLength) {\n                this.maxTicksLength = tickLength;\n            }\n        }\n        const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n        const charWidth = 7; // need to measure this\n        const wordWidth = len * charWidth;\n        let baseWidth = wordWidth;\n        const maxBaseWidth = Math.floor(this.width / ticks.length);\n        // calculate optimal angle\n        while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n        }\n        let labelHeight = 14;\n        if (this.isWrapTicksSupported) {\n            const longestTick = this.ticks.reduce((earlier, current) => (current.length > earlier.length ? current : earlier), '');\n            const tickLines = this.tickChunks(longestTick);\n            labelHeight = 14 * (tickLines.length || 1);\n            this.maxPossibleLengthForTickIfWrapped = this.getMaxPossibleLengthForTick(longestTick);\n        }\n        const requiredHeight = angle !== 0\n            ? Math.max(Math.abs(Math.sin((angle * Math.PI) / 180)) * this.maxTickLength * charWidth, 10)\n            : labelHeight;\n        this.approxHeight = Math.min(requiredHeight, 200);\n        return angle;\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(100);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickWidth) {\n        return Math.floor(this.width / tickWidth);\n    }\n    tickTransform(tick) {\n        return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n    gridLineTransform() {\n        return `translate(0,${-this.verticalSpacing - 5})`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getMaxPossibleLengthForTick(longestLabel) {\n        if (this.scale.bandwidth) {\n            const averageCharacterWidth = 7; // approximate char width\n            const maxCharacters = Math.floor(this.scale.bandwidth() / averageCharacterWidth);\n            const truncatedText = longestLabel.slice(0, maxCharacters);\n            return Math.max(truncatedText.length, this.maxTickLength);\n        }\n        return this.maxTickLength;\n    }\n    tickChunks(label) {\n        if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n            const maxAllowedLines = 5;\n            let maxLines = this.rotateTicks ? Math.floor(this.scale.step() / 14) : maxAllowedLines;\n            if (maxLines <= 1) {\n                return [this.tickTrim(label)];\n            }\n            let possibleStringLength = Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength);\n            if (!isPlatformBrowser(this.platformId)) {\n                possibleStringLength = Math.floor(Math.min(this.approxHeight / maxAllowedLines, Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength)));\n            }\n            maxLines = Math.min(maxLines, maxAllowedLines);\n            const lines = getTickLines(label, possibleStringLength, maxLines < 1 ? 1 : maxLines);\n            return lines;\n        }\n        return [this.tickTrim(label)];\n    }\n}\nXAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nXAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineHeight: \"gridLineHeight\", width: \"width\", rotateTicks: \"rotateTicks\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineHeight: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass XAxisComponent {\n    constructor() {\n        this.rotateTicks = true;\n        this.showGridLines = false;\n        this.xOrient = Orientation.Bottom;\n        this.xAxisOffset = 0;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.xAxisClassName = 'x axis';\n        this.labelOffset = 0;\n        this.fill = 'none';\n        this.stroke = 'stroke';\n        this.tickStroke = '#ccc';\n        this.strokeWidth = 'none';\n        this.padding = 5;\n        this.orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n        if (typeof this.xAxisTickCount !== 'undefined') {\n            this.tickArguments = [this.xAxisTickCount];\n        }\n    }\n    emitTicksHeight({ height }) {\n        const newLabelOffset = height + 25 + 5;\n        if (newLabelOffset !== this.labelOffset) {\n            this.labelOffset = newLabelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ height });\n            }, 0);\n        }\n    }\n}\nXAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nXAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: { xScale: \"xScale\", dims: \"dims\", trimTicks: \"trimTicks\", rotateTicks: \"rotateTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", ticks: \"ticks\", xAxisTickCount: \"xAxisTickCount\", xOrient: \"xOrient\", xAxisOffset: \"xAxisOffset\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: XAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineHeight\", \"width\", \"rotateTicks\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis]',\n                    template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { xScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], xAxisTickCount: [{\n                type: Input\n            }], xOrient: [{\n                type: Input\n            }], xAxisOffset: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [XAxisTicksComponent]\n            }] } });\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n    let retval = '';\n    w = Math.floor(w);\n    h = Math.floor(h);\n    w = w === 0 ? 1 : w;\n    h = h === 0 ? 1 : h;\n    retval = `M${[x + r, y]}`;\n    retval += `h${w - 2 * r}`;\n    if (tr) {\n        retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n    }\n    else {\n        retval += `h${r}v${r}`;\n    }\n    retval += `v${h - 2 * r}`;\n    if (br) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n    }\n    else {\n        retval += `v${r}h${-r}`;\n    }\n    retval += `h${2 * r - w}`;\n    if (bl) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n    }\n    else {\n        retval += `h${-r}v${-r}`;\n    }\n    retval += `v${2 * r - h}`;\n    if (tl) {\n        retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n    }\n    else {\n        retval += `v${-r}h${r}`;\n    }\n    retval += `z`;\n    return retval;\n}\n\nclass YAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.showRefLabels = false;\n        this.showRefLines = false;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.innerTickSize = 6;\n        this.tickPadding = 3;\n        this.verticalSpacing = 20;\n        this.textAnchor = TextAnchor.Middle;\n        this.width = 0;\n        this.outerTickSize = 6;\n        this.rotateLabels = false;\n        this.referenceLineLength = 0;\n        this.Orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.width = this.getApproximateAxisWidth();\n            this.dimensionsChanged.emit({ width: this.width });\n            return;\n        }\n        const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n        if (width !== this.width) {\n            this.width = width;\n            this.dimensionsChanged.emit({ width });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n        this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        this.adjustedScale = scale.bandwidth\n            ? d => {\n                // position the tick to middle considering number of lines of the tick\n                const positionMiddle = scale(d) + scale.bandwidth() * 0.5;\n                if (this.wrapTicks && d.toString().length > this.maxTickLength) {\n                    const chunksLength = this.tickChunks(d).length;\n                    if (chunksLength === 1) {\n                        return positionMiddle;\n                    }\n                    const bandWidth = scale.bandwidth();\n                    const heightOfLines = chunksLength * 8;\n                    const availableFreeSpace = bandWidth * 0.5 - heightOfLines * 0.5;\n                    return scale(d) + availableFreeSpace;\n                }\n                return positionMiddle;\n            }\n            : scale;\n        if (this.showRefLines && this.referenceLines) {\n            this.setReferencelines();\n        }\n        switch (this.orient) {\n            case Orientation.Top:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Bottom:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Left:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.End;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            case Orientation.Right:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.Start;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            default:\n        }\n        setTimeout(() => this.updateDims());\n    }\n    setReferencelines() {\n        this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n        this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n        this.referenceLineLength = this.referenceLines.length;\n        this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n            false,\n            false,\n            false,\n            false\n        ]);\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(50);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickHeight) {\n        return Math.floor(this.height / tickHeight);\n    }\n    tickTransform(tick) {\n        return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n    }\n    gridLineTransform() {\n        return `translate(5,0)`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getApproximateAxisWidth() {\n        const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n        const charWidth = 7;\n        return maxChars * charWidth;\n    }\n    tickChunks(label) {\n        if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n            // for y-axis the width of the tick is fixed\n            const preferredWidth = this.maxTickLength;\n            const maxLines = Math.floor(this.scale.bandwidth() / 15);\n            if (maxLines <= 1) {\n                return [this.tickTrim(label)];\n            }\n            return getTickLines(label, preferredWidth, Math.min(maxLines, 5));\n        }\n        return [this.tickFormat(label)];\n    }\n}\nYAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nYAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineWidth: \"gridLineWidth\", height: \"height\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", showRefLines: \"showRefLines\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineWidth: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass YAxisComponent {\n    constructor() {\n        this.showGridLines = false;\n        this.yOrient = Orientation.Left;\n        this.yAxisOffset = 0;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.yAxisClassName = 'y axis';\n        this.labelOffset = 15;\n        this.fill = 'none';\n        this.stroke = '#CCC';\n        this.tickStroke = '#CCC';\n        this.strokeWidth = 1;\n        this.padding = 5;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.offset = -(this.yAxisOffset + this.padding);\n        if (this.yOrient === Orientation.Right) {\n            this.labelOffset = 65;\n            this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n        }\n        else {\n            this.transform = `translate(${this.offset} , 0)`;\n        }\n        if (this.yAxisTickCount !== undefined) {\n            this.tickArguments = [this.yAxisTickCount];\n        }\n    }\n    emitTicksWidth({ width }) {\n        if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n            this.labelOffset = width + this.labelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n        else if (width !== this.labelOffset) {\n            this.labelOffset = width;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n    }\n}\nYAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nYAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: { yScale: \"yScale\", dims: \"dims\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", ticks: \"ticks\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", yAxisTickCount: \"yAxisTickCount\", yOrient: \"yOrient\", referenceLines: \"referenceLines\", showRefLines: \"showRefLines\", showRefLabels: \"showRefLabels\", yAxisOffset: \"yAxisOffset\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: YAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineWidth\", \"height\", \"referenceLines\", \"showRefLabels\", \"showRefLines\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis]',\n                    template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { yScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], yAxisTickCount: [{\n                type: Input\n            }], yOrient: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], yAxisOffset: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [YAxisTicksComponent]\n            }] } });\n\nclass AxesModule {\n}\nAxesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAxesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent], imports: [CommonModule], exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent] });\nAxesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n                    exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n                }]\n        }] });\n\nvar StyleTypes;\n(function (StyleTypes) {\n    StyleTypes[\"popover\"] = \"popover\";\n    StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n(function (ShowTypes) {\n    ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n    ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n    ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nclass TooltipDirective {\n    constructor(tooltipService, viewContainerRef, renderer) {\n        this.tooltipService = tooltipService;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.tooltipCssClass = '';\n        this.tooltipAppendToBody = true;\n        this.tooltipSpacing = 10;\n        this.tooltipDisabled = false;\n        this.tooltipShowCaret = true;\n        this.tooltipPlacement = PlacementTypes.Top;\n        this.tooltipAlignment = PlacementTypes.Center;\n        this.tooltipType = StyleTypes.popover;\n        this.tooltipCloseOnClickOutside = true;\n        this.tooltipCloseOnMouseLeave = true;\n        this.tooltipHideTimeout = 300;\n        this.tooltipShowTimeout = 100;\n        this.tooltipShowEvent = ShowTypes.all;\n        this.tooltipImmediateExit = false;\n        this.show = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    get listensForFocus() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n    get listensForHover() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n    ngOnDestroy() {\n        this.hideTooltip(true);\n    }\n    onFocus() {\n        if (this.listensForFocus) {\n            this.showTooltip();\n        }\n    }\n    onBlur() {\n        if (this.listensForFocus) {\n            this.hideTooltip(true);\n        }\n    }\n    onMouseEnter() {\n        if (this.listensForHover) {\n            this.showTooltip();\n        }\n    }\n    onMouseLeave(target) {\n        if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n            clearTimeout(this.timeout);\n            if (this.component) {\n                const contentDom = this.component.instance.element.nativeElement;\n                const contains = contentDom.contains(target);\n                if (contains)\n                    return;\n            }\n            this.hideTooltip(this.tooltipImmediateExit);\n        }\n    }\n    onMouseClick() {\n        if (this.listensForHover) {\n            this.hideTooltip(true);\n        }\n    }\n    showTooltip(immediate) {\n        if (this.component || this.tooltipDisabled)\n            return;\n        const time = immediate\n            ? 0\n            : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.tooltipService.destroyAll();\n            const options = this.createBoundOptions();\n            this.component = this.tooltipService.create(options);\n            // add a tiny timeout to avoid event re-triggers\n            setTimeout(() => {\n                if (this.component) {\n                    this.addHideListeners(this.component.instance.element.nativeElement);\n                }\n            }, 10);\n            this.show.emit(true);\n        }, time);\n    }\n    addHideListeners(tooltip) {\n        // on mouse enter, cancel the hide triggered by the leave\n        this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n            clearTimeout(this.timeout);\n        });\n        // content mouse leave listener\n        if (this.tooltipCloseOnMouseLeave) {\n            this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n                this.hideTooltip(this.tooltipImmediateExit);\n            });\n        }\n        // content close on click outside\n        if (this.tooltipCloseOnClickOutside) {\n            this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n                const contains = tooltip.contains(event.target);\n                if (!contains)\n                    this.hideTooltip();\n            });\n        }\n    }\n    hideTooltip(immediate = false) {\n        if (!this.component)\n            return;\n        const destroyFn = () => {\n            // remove events\n            if (this.mouseLeaveContentEvent)\n                this.mouseLeaveContentEvent();\n            if (this.mouseEnterContentEvent)\n                this.mouseEnterContentEvent();\n            if (this.documentClickEvent)\n                this.documentClickEvent();\n            // emit events\n            this.hide.emit(true);\n            // destroy component\n            this.tooltipService.destroy(this.component);\n            this.component = undefined;\n        };\n        clearTimeout(this.timeout);\n        if (!immediate) {\n            this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n        }\n        else {\n            destroyFn();\n        }\n    }\n    createBoundOptions() {\n        return {\n            title: this.tooltipTitle,\n            template: this.tooltipTemplate,\n            host: this.viewContainerRef.element,\n            placement: this.tooltipPlacement,\n            alignment: this.tooltipAlignment,\n            type: this.tooltipType,\n            showCaret: this.tooltipShowCaret,\n            cssClass: this.tooltipCssClass,\n            spacing: this.tooltipSpacing,\n            context: this.tooltipContext\n        };\n    }\n}\nTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, deps: [{ token: TooltipService }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: { tooltipCssClass: \"tooltipCssClass\", tooltipTitle: \"tooltipTitle\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipSpacing: \"tooltipSpacing\", tooltipDisabled: \"tooltipDisabled\", tooltipShowCaret: \"tooltipShowCaret\", tooltipPlacement: \"tooltipPlacement\", tooltipAlignment: \"tooltipAlignment\", tooltipType: \"tooltipType\", tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\", tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\", tooltipHideTimeout: \"tooltipHideTimeout\", tooltipShowTimeout: \"tooltipShowTimeout\", tooltipTemplate: \"tooltipTemplate\", tooltipShowEvent: \"tooltipShowEvent\", tooltipContext: \"tooltipContext\", tooltipImmediateExit: \"tooltipImmediateExit\" }, outputs: { show: \"show\", hide: \"hide\" }, host: { listeners: { \"focusin\": \"onFocus()\", \"blur\": \"onBlur()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave($event.target)\", \"click\": \"onMouseClick()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-tooltip]' }]\n        }], ctorParameters: function () { return [{ type: TooltipService }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { tooltipCssClass: [{\n                type: Input\n            }], tooltipTitle: [{\n                type: Input\n            }], tooltipAppendToBody: [{\n                type: Input\n            }], tooltipSpacing: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipShowCaret: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipAlignment: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], tooltipCloseOnClickOutside: [{\n                type: Input\n            }], tooltipCloseOnMouseLeave: [{\n                type: Input\n            }], tooltipHideTimeout: [{\n                type: Input\n            }], tooltipShowTimeout: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipShowEvent: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], tooltipImmediateExit: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focusin']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave', ['$event.target']]\n            }], onMouseClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, declarations: [TooltipContentComponent, TooltipDirective], imports: [CommonModule], exports: [TooltipContentComponent, TooltipDirective] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, providers: [InjectionService, TooltipService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TooltipContentComponent, TooltipDirective],\n                    providers: [InjectionService, TooltipService],\n                    exports: [TooltipContentComponent, TooltipDirective],\n                    imports: [CommonModule],\n                    entryComponents: [TooltipContentComponent]\n                }]\n        }] });\n\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n    let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n    // append a 'a' because neo gets mad\n    newId = `a${newId}`;\n    // ensure not already used\n    if (!cache[newId]) {\n        cache[newId] = true;\n        return newId;\n    }\n    return id();\n}\n\nvar BarOrientation;\n(function (BarOrientation) {\n    BarOrientation[\"Vertical\"] = \"vertical\";\n    BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nclass SvgLinearGradientComponent {\n    constructor() {\n        this.orientation = BarOrientation.Vertical;\n    }\n    ngOnChanges(changes) {\n        this.x1 = '0%';\n        this.x2 = '0%';\n        this.y1 = '0%';\n        this.y2 = '0%';\n        if (this.orientation === BarOrientation.Horizontal) {\n            this.x2 = '100%';\n        }\n        else if (this.orientation === BarOrientation.Vertical) {\n            this.y1 = '100%';\n        }\n    }\n}\nSvgLinearGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgLinearGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: { orientation: \"orientation\", name: \"name\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-linear-gradient]',\n                    template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { orientation: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass CircleComponent {\n    constructor() {\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    ngOnChanges(changes) {\n        this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n        this.classNames += 'circle';\n    }\n}\nCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: { cx: \"cx\", cy: \"cy\", r: \"r\", fill: \"fill\", stroke: \"stroke\", data: \"data\", classNames: \"classNames\", circleOpacity: \"circleOpacity\", pointerEvents: \"pointerEvents\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"click\": \"onClick()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle]',\n                    template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], r: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], classNames: [{\n                type: Input\n            }], circleOpacity: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar SeriesType;\n(function (SeriesType) {\n    SeriesType[\"Standard\"] = \"standard\";\n    SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = SeriesType.Standard;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barVisible = false;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.circle = this.getActiveCircle();\n    }\n    getActiveCircle() {\n        const indexActiveDataPoint = this.data.series.findIndex(d => {\n            const label = d.name;\n            return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n        });\n        if (indexActiveDataPoint === -1) {\n            // No valid point is 'active/hovered over' at this moment.\n            return undefined;\n        }\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n    mapDataPointToCircle(d, i) {\n        const seriesName = this.data.name;\n        const value = d.value;\n        const label = d.name;\n        const tooltipLabel = formatLabel(label);\n        let cx;\n        if (this.scaleType === ScaleType.Time) {\n            cx = this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            cx = this.xScale(Number(label));\n        }\n        else {\n            cx = this.xScale(label);\n        }\n        const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n        const radius = 5;\n        const height = this.yScale.range()[0] - cy;\n        const opacity = 1;\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            if (this.type === SeriesType.Standard) {\n                color = this.colors.getColor(value);\n            }\n            else {\n                color = this.colors.getColor(d.d1);\n            }\n        }\n        else {\n            color = this.colors.getColor(seriesName);\n        }\n        const data = Object.assign({}, d, {\n            series: seriesName,\n            value,\n            name: label\n        });\n        return {\n            classNames: [`circle-data-${i}`],\n            value,\n            label,\n            data,\n            cx,\n            cy,\n            radius,\n            height,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            gradientStops: this.getGradientStops(color),\n            min: d.min,\n            max: d.max\n        };\n    }\n    getTooltipText({ tooltipLabel, value, seriesName, min, max }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n    }\n    getTooltipMinMaxText(min, max) {\n        if (min !== undefined || max !== undefined) {\n            let result = ' (';\n            if (min !== undefined) {\n                if (max === undefined) {\n                    result += '≥';\n                }\n                result += min.toLocaleString();\n                if (max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (max !== undefined) {\n                result += '≤';\n            }\n            if (max !== undefined) {\n                result += max.toLocaleString();\n            }\n            result += ')';\n            return result;\n        }\n        else {\n            return '';\n        }\n    }\n    getGradientStops(color) {\n        return [\n            {\n                offset: 0,\n                color,\n                opacity: 0.2\n            },\n            {\n                offset: 100,\n                color,\n                opacity: 1\n            }\n        ];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    activateCircle() {\n        this.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle() {\n        this.barVisible = false;\n        this.circle.opacity = 0;\n        this.deactivate.emit({ name: this.data.name });\n    }\n}\nCircleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCircleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: { data: \"data\", type: \"type\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 1 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle-series]',\n                    template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 1 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GridPanelComponent {\n}\nGridPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: { width: \"width\", height: \"height\", x: \"x\", y: \"y\" }, ngImport: i0, template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel]',\n                    template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }] } });\n\nvar ClassEnum;\n(function (ClassEnum) {\n    ClassEnum[\"Odd\"] = \"odd\";\n    ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.gridPanels = this.getGridPanels();\n    }\n    getGridPanels() {\n        return this.data.map(d => {\n            let offset;\n            let width;\n            let height;\n            let x;\n            let y;\n            let className = ClassEnum.Odd;\n            if (this.orient === BarOrientation.Vertical) {\n                const position = this.xScale(d.name);\n                const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n                width = this.xScale.bandwidth() + offset;\n                height = this.dims.height;\n                x = this.xScale(d.name) - offset / 2;\n                y = 0;\n            }\n            else if (this.orient === BarOrientation.Horizontal) {\n                const position = this.yScale(d.name);\n                const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n                width = this.dims.width;\n                height = this.yScale.bandwidth() + offset;\n                x = 0;\n                y = this.yScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: className,\n                height,\n                width,\n                x,\n                y\n            };\n        });\n    }\n}\nGridPanelSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\", orient: \"orient\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: [\"width\", \"height\", \"x\", \"y\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel-series]',\n                    template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }] } });\n\nclass SvgRadialGradientComponent {\n    constructor() {\n        this.endOpacity = 1;\n        this.cx = 0;\n        this.cy = 0;\n    }\n    get stops() {\n        return this.stopsInput || this.stopsDefault;\n    }\n    set stops(value) {\n        this.stopsInput = value;\n    }\n    ngOnChanges(changes) {\n        this.r = '30%';\n        if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n            this.stopsDefault = [\n                {\n                    offset: 0,\n                    color: this.color,\n                    opacity: this.startOpacity\n                },\n                {\n                    offset: 100,\n                    color: this.color,\n                    opacity: this.endOpacity\n                }\n            ];\n        }\n    }\n}\nSvgRadialGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgRadialGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: { color: \"color\", name: \"name\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", cx: \"cx\", cy: \"cy\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-radial-gradient]',\n                    template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass AreaComponent {\n    constructor(element) {\n        this.opacity = 1;\n        this.startOpacity = 0.5;\n        this.endOpacity = 1;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.animationsLoaded = false;\n        this.hasGradient = false;\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        if (!this.animationsLoaded) {\n            this.loadAnimation();\n            this.animationsLoaded = true;\n        }\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n    }\n    loadAnimation() {\n        this.areaPath = this.startingPath;\n        setTimeout(this.updatePathEl.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.area');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: this.endOpacity\n            }\n        ];\n    }\n}\nAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: { data: \"data\", path: \"path\", startingPath: \"startingPath\", fill: \"fill\", opacity: \"opacity\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", gradient: \"gradient\", stops: \"stops\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area]',\n                    template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], startingPath: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n    const startVal = Number(countFrom);\n    const endVal = Number(countTo);\n    const countDown = startVal > endVal;\n    const decimals = Math.max(0, countDecimals);\n    const dec = Math.pow(10, decimals);\n    const duration = Number(countDuration) * 1000;\n    let startTime;\n    function runCount(timestamp) {\n        let frameVal;\n        const progress = timestamp - startTime;\n        if (countDown) {\n            frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n        }\n        else {\n            frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n        }\n        if (countDown) {\n            frameVal = frameVal < endVal ? endVal : frameVal;\n        }\n        else {\n            frameVal = frameVal > endVal ? endVal : frameVal;\n        }\n        frameVal = Math.round(frameVal * dec) / dec;\n        const tick = progress < duration;\n        callback({\n            value: frameVal,\n            progress,\n            timestamp,\n            finished: !tick\n        });\n        if (tick) {\n            return requestAnimationFrame(val => runCount(val));\n        }\n    }\n    return requestAnimationFrame(timestamp => {\n        startTime = timestamp;\n        return runCount(timestamp);\n    });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n    const endVal = Number(countTo);\n    if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n        return 2;\n    }\n    return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n    constructor(cd, element) {\n        this.cd = cd;\n        this.countDuration = 1;\n        this.countPrefix = '';\n        this.countSuffix = '';\n        this.countChange = new EventEmitter();\n        this.countFinish = new EventEmitter();\n        this.value = '';\n        this._countDecimals = 0;\n        this._countTo = 0;\n        this._countFrom = 0;\n        this.nativeElement = element.nativeElement;\n    }\n    set countDecimals(val) {\n        this._countDecimals = val;\n    }\n    get countDecimals() {\n        if (this._countDecimals)\n            return this._countDecimals;\n        return decimalChecker(this.countTo);\n    }\n    set countTo(val) {\n        this._countTo = parseFloat(val);\n        this.start();\n    }\n    get countTo() {\n        return this._countTo;\n    }\n    set countFrom(val) {\n        this._countFrom = parseFloat(val);\n        this.start();\n    }\n    get countFrom() {\n        return this._countFrom;\n    }\n    ngOnDestroy() {\n        cancelAnimationFrame(this.animationReq);\n    }\n    start() {\n        cancelAnimationFrame(this.animationReq);\n        const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n        const callback = ({ value, progress, finished }) => {\n            this.value = valueFormatting(value);\n            this.cd.markForCheck();\n            if (!finished)\n                this.countChange.emit({ value: this.value, progress });\n            if (finished)\n                this.countFinish.emit({ value: this.value, progress });\n        };\n        this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCountUpDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: { countDuration: \"countDuration\", countPrefix: \"countPrefix\", countSuffix: \"countSuffix\", valueFormatting: \"valueFormatting\", countDecimals: \"countDecimals\", countTo: \"countTo\", countFrom: \"countFrom\" }, outputs: { countChange: \"countChange\", countFinish: \"countFinish\" }, ngImport: i0, template: ` {{ value }} `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngx-charts-count-up]',\n                    template: ` {{ value }} `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { countDuration: [{\n                type: Input\n            }], countPrefix: [{\n                type: Input\n            }], countSuffix: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], countDecimals: [{\n                type: Input\n            }], countTo: [{\n                type: Input\n            }], countFrom: [{\n                type: Input\n            }], countChange: [{\n                type: Output\n            }], countFinish: [{\n                type: Output\n            }] } });\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n    // Calling new of an event does not work correctly on IE. The following is a tested workaround\n    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n    if (typeof MouseEvent === 'function') {\n        // Sane browsers\n        return new MouseEvent(name, { bubbles, cancelable });\n    }\n    else {\n        // IE\n        const event = document.createEvent('MouseEvent');\n        event.initEvent(name, bubbles, cancelable);\n        return event;\n    }\n}\n\nclass TooltipArea {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.anchorOpacity = 0;\n        this.anchorPos = -1;\n        this.anchorValues = [];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.showPercentage = false;\n        this.tooltipDisabled = false;\n        this.hover = new EventEmitter();\n    }\n    getValues(xVal) {\n        const results = [];\n        for (const group of this.results) {\n            const item = group.series.find(d => d.name.toString() === xVal.toString());\n            let groupName = group.name;\n            if (groupName instanceof Date) {\n                groupName = groupName.toLocaleDateString();\n            }\n            if (item) {\n                const label = item.name;\n                let val = item.value;\n                if (this.showPercentage) {\n                    val = (item.d1 - item.d0).toFixed(2) + '%';\n                }\n                let color;\n                if (this.colors.scaleType === ScaleType.Linear) {\n                    let v = val;\n                    if (item.d1) {\n                        v = item.d1;\n                    }\n                    color = this.colors.getColor(v);\n                }\n                else {\n                    color = this.colors.getColor(group.name);\n                }\n                const data = Object.assign({}, item, {\n                    value: val,\n                    name: label,\n                    series: groupName,\n                    min: item.min,\n                    max: item.max,\n                    color\n                });\n                results.push(data);\n            }\n        }\n        return results;\n    }\n    mouseMove(event) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const xPos = event.pageX - event.target.getBoundingClientRect().left;\n        const closestIndex = this.findClosestPointIndex(xPos);\n        const closestPoint = this.xSet[closestIndex];\n        this.anchorPos = this.xScale(closestPoint);\n        this.anchorPos = Math.max(0, this.anchorPos);\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n        this.anchorValues = this.getValues(closestPoint);\n        if (this.anchorPos !== this.lastAnchorPos) {\n            const ev = createMouseEvent('mouseleave');\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n            this.anchorOpacity = 0.7;\n            this.hover.emit({\n                value: closestPoint\n            });\n            this.showTooltip();\n            this.lastAnchorPos = this.anchorPos;\n        }\n    }\n    findClosestPointIndex(xPos) {\n        let minIndex = 0;\n        let maxIndex = this.xSet.length - 1;\n        let minDiff = Number.MAX_VALUE;\n        let closestIndex = 0;\n        while (minIndex <= maxIndex) {\n            const currentIndex = ((minIndex + maxIndex) / 2) | 0;\n            const currentElement = this.xScale(this.xSet[currentIndex]);\n            const curDiff = Math.abs(currentElement - xPos);\n            if (curDiff < minDiff) {\n                minDiff = curDiff;\n                closestIndex = currentIndex;\n            }\n            if (currentElement < xPos) {\n                minIndex = currentIndex + 1;\n            }\n            else if (currentElement > xPos) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                minDiff = 0;\n                closestIndex = currentIndex;\n                break;\n            }\n        }\n        return closestIndex;\n    }\n    showTooltip() {\n        const event = createMouseEvent('mouseenter');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n    hideTooltip() {\n        const event = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n        this.anchorOpacity = 0;\n        this.lastAnchorPos = -1;\n    }\n    getToolTipText(tooltipItem) {\n        let result = '';\n        if (tooltipItem.series !== undefined) {\n            result += tooltipItem.series;\n        }\n        else {\n            result += '???';\n        }\n        result += ': ';\n        if (tooltipItem.value !== undefined) {\n            result += tooltipItem.value.toLocaleString();\n        }\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n            result += ' (';\n            if (tooltipItem.min !== undefined) {\n                if (tooltipItem.max === undefined) {\n                    result += '≥';\n                }\n                result += tooltipItem.min.toLocaleString();\n                if (tooltipItem.max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (tooltipItem.max !== undefined) {\n                result += '≤';\n            }\n            if (tooltipItem.max !== undefined) {\n                result += tooltipItem.max.toLocaleString();\n            }\n            result += ')';\n        }\n        return result;\n    }\n}\nTooltipArea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipArea.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: { dims: \"dims\", xSet: \"xSet\", xScale: \"xScale\", yScale: \"yScale\", results: \"results\", colors: \"colors\", showPercentage: \"showPercentage\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { hover: \"hover\" }, viewQueries: [{ propertyName: \"tooltipAnchor\", first: true, predicate: [\"tooltipAnchor\"], descendants: true }], ngImport: i0, template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition('inactive => active', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 0.7 }))\n            ]),\n            transition('active => inactive', [\n                style({\n                    opacity: 0.7\n                }),\n                animate(250, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tooltip-area]',\n                    template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition('inactive => active', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 0.7 }))\n                            ]),\n                            transition('active => inactive', [\n                                style({\n                                    opacity: 0.7\n                                }),\n                                animate(250, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], xSet: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], showPercentage: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], tooltipAnchor: [{\n                type: ViewChild,\n                args: ['tooltipAnchor', { static: false }]\n            }] } });\n\nclass Timeline {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.height = 50;\n        this.select = new EventEmitter();\n        this.onDomainChange = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n        if (!this.initialized) {\n            this.addBrush();\n            this.initialized = true;\n        }\n    }\n    update() {\n        this.dims = this.getDims();\n        this.height = this.dims.height;\n        const offsetY = this.view[1] - this.height;\n        this.xDomain = this.getXDomain();\n        this.xScale = this.getXScale();\n        if (this.brush) {\n            this.updateBrush();\n        }\n        this.transform = `translate(0 , ${offsetY})`;\n        this.filterId = 'filter' + id().toString();\n        this.filter = `url(#${this.filterId})`;\n        this.cd.markForCheck();\n    }\n    getXDomain() {\n        let values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else {\n            domain = values;\n        }\n        return domain;\n    }\n    getXScale() {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n        }\n        return scale;\n    }\n    addBrush() {\n        if (this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush = brushX()\n            .extent([\n            [0, 0],\n            [width, height]\n        ])\n            .on('brush end', ({ selection }) => {\n            const newSelection = selection || this.xScale.range();\n            const newDomain = newSelection.map(this.xScale.invert);\n            this.onDomainChange.emit(newDomain);\n            this.cd.markForCheck();\n        });\n        select(this.element).select('.brush').call(this.brush);\n    }\n    updateBrush() {\n        if (!this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush.extent([\n            [0, 0],\n            [width, height]\n        ]);\n        select(this.element).select('.brush').call(this.brush);\n        // clear hardcoded properties so they can be defined by CSS\n        select(this.element)\n            .select('.selection')\n            .attr('fill', undefined)\n            .attr('stroke', undefined)\n            .attr('fill-opacity', undefined);\n        this.cd.markForCheck();\n    }\n    getDims() {\n        const width = this.view[0];\n        const dims = {\n            width,\n            height: this.height\n        };\n        return dims;\n    }\n}\nTimeline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTimeline.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: { view: \"view\", results: \"results\", scheme: \"scheme\", customColors: \"customColors\", legend: \"legend\", autoScale: \"autoScale\", scaleType: \"scaleType\", height: \"height\" }, outputs: { select: \"select\", onDomainChange: \"onDomainChange\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, isInline: true, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-timeline]', template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { view: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], onDomainChange: [{\n                type: Output\n            }] } });\n\nclass AdvancedLegendComponent {\n    constructor() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n        this.labelFormatting = label => label;\n        this.percentageFormatting = percentage => percentage;\n        this.defaultValueFormatting = value => value.toLocaleString();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getTotal() {\n        return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n    }\n    update() {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    }\n    getLegendItems() {\n        return this.data.map(d => {\n            const label = formatLabel(d.name);\n            const value = d.value;\n            const color = this.colors.getColor(label);\n            const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n            const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n            return {\n                _value: value,\n                data: d,\n                value,\n                color,\n                label: formattedLabel,\n                displayLabel: trimLabel(formattedLabel, 20),\n                origialLabel: d.name,\n                percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n            };\n        });\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nAdvancedLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAdvancedLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: { width: \"width\", data: \"data\", colors: \"colors\", label: \"label\", animations: \"animations\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"], components: [{ type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-legend', template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"] }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nconst COMPONENTS = [\n    AreaComponent,\n    BaseChartComponent,\n    CountUpDirective,\n    TooltipArea,\n    ChartComponent,\n    LegendComponent,\n    LegendEntryComponent,\n    ScaleLegendComponent,\n    CircleComponent,\n    CircleSeriesComponent,\n    GridPanelComponent,\n    GridPanelSeriesComponent,\n    SvgLinearGradientComponent,\n    SvgRadialGradientComponent,\n    Timeline,\n    AdvancedLegendComponent\n];\nclass ChartCommonModule {\n}\nChartCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, declarations: [AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver], imports: [CommonModule, AxesModule, TooltipModule], exports: [CommonModule, AxesModule, TooltipModule, AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver] });\nChartCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, AxesModule, TooltipModule],\n                    declarations: [...COMPONENTS, VisibilityObserver],\n                    exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n                }]\n        }] });\n\nfunction calculateViewDimensions({ width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0, yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false, legendType = ScaleType.Ordinal, legendPosition = LegendPosition.Right, columns = 12 }) {\n    let xOffset = margins[3];\n    let chartWidth = width;\n    let chartHeight = height - margins[0] - margins[2];\n    if (showLegend && legendPosition === LegendPosition.Right) {\n        if (legendType === ScaleType.Ordinal) {\n            columns -= 2;\n        }\n        else {\n            columns -= 1;\n        }\n    }\n    chartWidth = (chartWidth * columns) / 12;\n    chartWidth = chartWidth - margins[1] - margins[3];\n    if (showXAxis) {\n        chartHeight -= 5;\n        chartHeight -= xAxisHeight;\n        if (showXLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartHeight -= offset;\n        }\n    }\n    if (showYAxis) {\n        chartWidth -= 5;\n        chartWidth -= yAxisWidth;\n        xOffset += yAxisWidth;\n        xOffset += 10;\n        if (showYLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartWidth -= offset;\n            xOffset += offset;\n        }\n    }\n    chartWidth = Math.max(0, chartWidth);\n    chartHeight = Math.max(0, chartHeight);\n    return {\n        width: Math.floor(chartWidth),\n        height: Math.floor(chartHeight),\n        xOffset: Math.floor(xOffset)\n    };\n}\n\nconst colorSets = [\n    {\n        name: 'vivid',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#647c8a',\n            '#3f51b5',\n            '#2196f3',\n            '#00b862',\n            '#afdf0a',\n            '#a7b61a',\n            '#f3e562',\n            '#ff9800',\n            '#ff5722',\n            '#ff4514'\n        ]\n    },\n    {\n        name: 'natural',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#bf9d76',\n            '#e99450',\n            '#d89f59',\n            '#f2dfa7',\n            '#a5d7c6',\n            '#7794b1',\n            '#afafaf',\n            '#707160',\n            '#ba9383',\n            '#d9d5c3'\n        ]\n    },\n    {\n        name: 'cool',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#a8385d',\n            '#7aa3e5',\n            '#a27ea8',\n            '#aae3f5',\n            '#adcded',\n            '#a95963',\n            '#8796c0',\n            '#7ed3ed',\n            '#50abcc',\n            '#ad6886'\n        ]\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n    },\n    {\n        name: 'solar',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#fff8e1',\n            '#ffecb3',\n            '#ffe082',\n            '#ffd54f',\n            '#ffca28',\n            '#ffc107',\n            '#ffb300',\n            '#ffa000',\n            '#ff8f00',\n            '#ff6f00'\n        ]\n    },\n    {\n        name: 'air',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e1f5fe',\n            '#b3e5fc',\n            '#81d4fa',\n            '#4fc3f7',\n            '#29b6f6',\n            '#03a9f4',\n            '#039be5',\n            '#0288d1',\n            '#0277bd',\n            '#01579b'\n        ]\n    },\n    {\n        name: 'aqua',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e0f7fa',\n            '#b2ebf2',\n            '#80deea',\n            '#4dd0e1',\n            '#26c6da',\n            '#00bcd4',\n            '#00acc1',\n            '#0097a7',\n            '#00838f',\n            '#006064'\n        ]\n    },\n    {\n        name: 'flame',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#A10A28',\n            '#D3342D',\n            '#EF6D49',\n            '#FAAD67',\n            '#FDDE90',\n            '#DBED91',\n            '#A9D770',\n            '#6CBA67',\n            '#2C9653',\n            '#146738'\n        ]\n    },\n    {\n        name: 'ocean',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#1D68FB',\n            '#33C0FC',\n            '#4AFFFE',\n            '#AFFFFF',\n            '#FFFC63',\n            '#FDBD2D',\n            '#FC8A25',\n            '#FA4F1E',\n            '#FA141B',\n            '#BA38D1'\n        ]\n    },\n    {\n        name: 'forest',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#55C22D',\n            '#C1F33D',\n            '#3CC099',\n            '#AFFFFF',\n            '#8CFC9D',\n            '#76CFFA',\n            '#BA60FB',\n            '#EE6490',\n            '#C42A1C',\n            '#FC9F32'\n        ]\n    },\n    {\n        name: 'horizon',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2597FB',\n            '#65EBFD',\n            '#99FDD0',\n            '#FCEE4B',\n            '#FEFCFA',\n            '#FDD6E3',\n            '#FCB1A8',\n            '#EF6F7B',\n            '#CB96E8',\n            '#EFDEE0'\n        ]\n    },\n    {\n        name: 'neons',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FF3333',\n            '#FF33FF',\n            '#CC33FF',\n            '#0000FF',\n            '#33CCFF',\n            '#33FFFF',\n            '#33FF66',\n            '#CCFF33',\n            '#FFCC00',\n            '#FF6600'\n        ]\n    },\n    {\n        name: 'picnic',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FAC51D',\n            '#66BD6D',\n            '#FAA026',\n            '#29BB9C',\n            '#E96B56',\n            '#55ACD2',\n            '#B7332F',\n            '#2C83C9',\n            '#9166B8',\n            '#92E7E8'\n        ]\n    },\n    {\n        name: 'night',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2B1B5A',\n            '#501356',\n            '#183356',\n            '#28203F',\n            '#391B3C',\n            '#1E2B3C',\n            '#120634',\n            '#2D0432',\n            '#051932',\n            '#453080',\n            '#75267D',\n            '#2C507D',\n            '#4B3880',\n            '#752F7D',\n            '#35547D'\n        ]\n    },\n    {\n        name: 'nightLights',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#4e31a5',\n            '#9c25a7',\n            '#3065ab',\n            '#57468b',\n            '#904497',\n            '#46648b',\n            '#32118d',\n            '#a00fb3',\n            '#1052a2',\n            '#6e51bd',\n            '#b63cc3',\n            '#6c97cb',\n            '#8671c1',\n            '#b455be',\n            '#7496c3'\n        ]\n    }\n];\n\nclass ColorHelper {\n    constructor(scheme, type, domain, customColors) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        this.colorDomain = scheme.domain;\n        this.scaleType = type;\n        this.domain = domain;\n        this.customColors = customColors;\n        this.scale = this.generateColorScheme(scheme, type, this.domain);\n    }\n    generateColorScheme(scheme, type, domain) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        let colorScale;\n        switch (type) {\n            case ScaleType.Quantile:\n                colorScale = scaleQuantile()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Ordinal:\n                colorScale = scaleOrdinal()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Linear:\n                {\n                    const colorDomain = [...scheme.domain];\n                    if (colorDomain.length === 1) {\n                        colorDomain.push(colorDomain[0]);\n                        this.colorDomain = colorDomain;\n                    }\n                    const points = range(0, 1, 1.0 / colorDomain.length);\n                    colorScale = scaleLinear()\n                        .range(colorDomain)\n                        .domain(points);\n                }\n                break;\n            default:\n                break;\n        }\n        return colorScale;\n    }\n    getColor(value) {\n        if (value === undefined || value === null) {\n            throw new Error('Value can not be null');\n        }\n        if (this.scaleType === ScaleType.Linear) {\n            const valueScale = scaleLinear()\n                .domain(this.domain)\n                .range([0, 1]);\n            return this.scale(valueScale(value));\n        }\n        else {\n            if (typeof this.customColors === 'function') {\n                return this.customColors(value);\n            }\n            const formattedValue = value.toString();\n            let found; // todo type customColors\n            if (this.customColors && this.customColors.length > 0) {\n                found = this.customColors.find(mapping => {\n                    return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n                });\n            }\n            if (found) {\n                return found.value;\n            }\n            else {\n                return this.scale(value);\n            }\n        }\n    }\n    getLinearGradientStops(value, start) {\n        if (start === undefined) {\n            start = this.domain[0];\n        }\n        const valueScale = scaleLinear()\n            .domain(this.domain)\n            .range([0, 1]);\n        const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n        const endColor = this.getColor(value);\n        // generate the stops\n        const startVal = valueScale(start);\n        const startColor = this.getColor(start);\n        const endVal = valueScale(value);\n        let i = 1;\n        let currentVal = startVal;\n        const stops = [];\n        stops.push({\n            color: startColor,\n            offset: startVal,\n            originalOffset: startVal,\n            opacity: 1\n        });\n        while (currentVal < endVal && i < this.colorDomain.length) {\n            const color = this.colorDomain[i];\n            const offset = colorValueScale(color);\n            if (offset <= startVal) {\n                i++;\n                continue;\n            }\n            if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n                break;\n            }\n            stops.push({\n                color,\n                offset,\n                opacity: 1\n            });\n            currentVal = offset;\n            i++;\n        }\n        if (stops[stops.length - 1].offset < 100) {\n            stops.push({\n                color: endColor,\n                offset: endVal,\n                opacity: 1\n            });\n        }\n        if (endVal === startVal) {\n            stops[0].offset = 0;\n            stops[1].offset = 100;\n        }\n        else {\n            // normalize the offsets into percentages\n            if (stops[stops.length - 1].offset !== 100) {\n                for (const s of stops) {\n                    s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n                }\n            }\n        }\n        return stops;\n    }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n        for (const d of result.series) {\n            valueSet.add(d.name);\n        }\n    }\n    return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n    if (checkDateType) {\n        const allDates = values.every(value => value instanceof Date);\n        if (allDates) {\n            return ScaleType.Time;\n        }\n    }\n    const allNumbers = values.every(value => typeof value === 'number');\n    if (allNumbers) {\n        return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n    const scaleType = getScaleType(values);\n    let xSet = [];\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const mappedValues = values.map(v => Number(v));\n        min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n        max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n    }\n    if (scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        xSet = [...values].sort((a, b) => {\n            const aDate = a.getTime();\n            const bDate = b.getTime();\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        });\n    }\n    else if (scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        xSet = [...values].sort((a, b) => a - b);\n    }\n    else {\n        domain = values;\n        xSet = values;\n    }\n    return { domain, xSet, scaleType };\n}\n\nfunction sortLinear(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        if (direction === 'asc') {\n            return a[property] - b[property];\n        }\n        else {\n            return b[property] - a[property];\n        }\n    });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n    return data.sort((a, b) => {\n        const aVal = a[property];\n        const bVal = b[property];\n        const aIdx = domain.indexOf(aVal);\n        const bIdx = domain.indexOf(bVal);\n        if (direction === 'asc') {\n            return aIdx - bIdx;\n        }\n        else {\n            return bIdx - aIdx;\n        }\n    });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        const aDate = a[property].getTime();\n        const bDate = b[property].getTime();\n        if (direction === 'asc') {\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        }\n        else {\n            if (aDate > bDate)\n                return -1;\n            if (bDate > aDate)\n                return 1;\n            return 0;\n        }\n    });\n}\n\nclass AreaSeriesComponent {\n    constructor() {\n        this.baseValue = 'auto';\n        this.stacked = false;\n        this.normalized = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradient();\n        let currentArea;\n        let startingArea;\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        if (this.stacked || this.normalized) {\n            currentArea = area()\n                .x(xProperty)\n                .y0((d, i) => this.yScale(d.d0))\n                .y1((d, i) => this.yScale(d.d1));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => this.yScale.range()[0])\n                .y1(d => this.yScale.range()[0]);\n        }\n        else {\n            currentArea = area()\n                .x(xProperty)\n                .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => this.yScale(d.value));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\n        }\n        currentArea.curve(this.curve);\n        startingArea.curve(this.curve);\n        this.opacity = 0.8;\n        let data = this.data.series;\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        this.path = currentArea(data);\n        this.startingPath = startingArea(data);\n    }\n    updateGradient() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            if (this.stacked || this.normalized) {\n                const d0values = this.data.series.map(d => d.d0);\n                const d1values = this.data.series.map(d => d.d1);\n                const max = Math.max(...d1values);\n                const min = Math.min(...d0values);\n                this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            }\n            else {\n                const values = this.data.series.map(d => d.value);\n                const max = Math.max(...values);\n                this.gradientStops = this.colors.getLinearGradientStops(max);\n            }\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nAreaSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAreaSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", baseValue: \"baseValue\", colors: \"colors\", scaleType: \"scaleType\", stacked: \"stacked\", normalized: \"normalized\", gradient: \"gradient\", curve: \"curve\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `, isInline: true, components: [{ type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area-series]',\n                    template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], stacked: [{\n                type: Input\n            }], normalized: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass AreaChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.baseValue = 'auto';\n        this.autoScale = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        if (this.baseValue !== 'auto') {\n            values.push(this.baseValue);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getScaleType(values) {\n        let date = true;\n        let num = true;\n        for (const value of values) {\n            if (isDate(value)) {\n                date = false;\n            }\n            if (isNumber(value)) {\n                num = false;\n            }\n        }\n        if (date) {\n            return ScaleType.Time;\n        }\n        if (num) {\n            return ScaleType.Linear;\n        }\n        return ScaleType.Ordinal;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartComponent, selector: \"ngx-charts-area-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", baseValue: \"baseValue\", autoScale: \"autoScale\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showXAxisLabel = false;\n        this.showYAxisLabel = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.yDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.seriesType = SeriesType;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            let total = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    total += d.value;\n                }\n            }\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n                if (total > 0) {\n                    d.d0 = (d.d0 * 100) / total;\n                    d.d1 = (d.d1 * 100) / total;\n                }\n                else {\n                    d.d0 = 0;\n                    d.d1 = 0;\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartNormalizedComponent, selector: \"ngx-charts-area-chart-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.seriesType = SeriesType;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let sum = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    sum += d.value;\n                }\n            }\n            domain.push(sum);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartStackedComponent, selector: \"ngx-charts-area-chart-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartModule {\n}\nAreaChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAreaChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent], imports: [ChartCommonModule], exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent] });\nAreaChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n                    exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n                }]\n        }] });\n\nclass BarComponent {\n    constructor(element) {\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes.roundEdges) {\n            this.loadAnimation();\n        }\n        this.update();\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n        this.checkToHideBar();\n    }\n    loadAnimation() {\n        this.path = this.getStartingPath();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            node.transition().duration(500).attr('d', path);\n        }\n        else {\n            node.attr('d', path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        else {\n            if (this.orientation === BarOrientation.Vertical) {\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        return path;\n    }\n    getPath() {\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n        }\n        else {\n            path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n        return path;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                if (this.data.value > 0) {\n                    edges = [true, true, false, false];\n                }\n                else {\n                    edges = [false, false, true, true];\n                }\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                if (this.data.value > 0) {\n                    edges = [false, true, false, true];\n                }\n                else {\n                    edges = [true, false, true, false];\n                }\n            }\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar =\n            this.noBarWhenZero &&\n                ((this.orientation === BarOrientation.Vertical && this.height === 0) ||\n                    (this.orientation === BarOrientation.Horizontal && this.width === 0));\n    }\n}\nBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: { fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", orientation: \"orientation\", roundEdges: \"roundEdges\", gradient: \"gradient\", offset: \"offset\", isActive: \"isActive\", stops: \"stops\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bar]',\n                    template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar BarChartType;\n(function (BarChartType) {\n    BarChartType[\"Standard\"] = \"standard\";\n    BarChartType[\"Normalized\"] = \"normalized\";\n    BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BarLabelComponent {\n    constructor(element) {\n        this.dimensionsChanged = new EventEmitter();\n        this.horizontalPadding = 2;\n        this.verticalPadding = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getSize() {\n        const h = this.element.getBoundingClientRect().height;\n        const w = this.element.getBoundingClientRect().width;\n        return { height: h, width: w, negative: this.value < 0 };\n    }\n    ngAfterViewInit() {\n        this.dimensionsChanged.emit(this.getSize());\n    }\n    update() {\n        if (this.valueFormatting) {\n            this.formatedValue = this.valueFormatting(this.value);\n        }\n        else {\n            this.formatedValue = formatLabel(this.value);\n        }\n        if (this.orientation === 'horizontal') {\n            this.x = this.barX + this.barWidth;\n            // if the value is negative then it's on the left of the x0.\n            // we need to put the data label in front of the bar\n            if (this.value < 0) {\n                this.x = this.x - this.horizontalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.x = this.x + this.horizontalPadding;\n                this.textAnchor = 'start';\n            }\n            this.y = this.barY + this.barHeight / 2;\n        }\n        else {\n            // orientation must be \"vertical\"\n            this.x = this.barX + this.barWidth / 2;\n            this.y = this.barY + this.barHeight;\n            if (this.value < 0) {\n                this.y = this.y + this.verticalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.y = this.y - this.verticalPadding;\n                this.textAnchor = 'start';\n            }\n            this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n        }\n    }\n}\nBarLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: { value: \"value\", valueFormatting: \"valueFormatting\", barX: \"barX\", barY: \"barY\", barWidth: \"barWidth\", barHeight: \"barHeight\", orientation: \"orientation\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, isInline: true, styles: [\".textDataLabel{font-size:11px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-bar-label]', template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".textDataLabel{font-size:11px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], barX: [{\n                type: Input\n            }], barY: [{\n                type: Input\n            }], barWidth: [{\n                type: Input\n            }], barHeight: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }] } });\n\nclass SeriesHorizontal {\n    constructor() {\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelWidthChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type;\n        d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n        this.bars = this.series.map(d => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                formattedLabel\n            };\n            bar.height = this.yScale.bandwidth();\n            if (this.type === BarChartType.Standard) {\n                bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n                if (value < 0) {\n                    bar.x = this.xScale(value);\n                }\n                else {\n                    bar.x = this.xScale(xScaleMin);\n                }\n                bar.y = this.yScale(label);\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            // if total is positive then we show it on the right, otherwise on the left\n            if (section.total > 0) {\n                section.width = this.xScale(totalPositive);\n            }\n            else {\n                section.width = this.xScale(totalNegative);\n            }\n            section.height = this.yScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(0);\n                section.y = this.yScale(d.label);\n                section.width = this.xScale(section.total) - this.xScale(0);\n                section.height = this.yScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    click(data) {\n        this.select.emit(data);\n    }\n}\nSeriesHorizontal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSeriesHorizontal.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelWidthChanged: \"dataLabelWidthChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-horizontal]',\n                    template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelWidthChanged: [{\n                type: Output\n            }] } });\n\nclass BarHorizontalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n    getXDomain() {\n        const values = this.results.map(d => d.value);\n        const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n        return [min, max];\n    }\n    getYDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.yDomain;\n        }\n        else {\n            domain = this.xDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalComponent, selector: \"ngx-charts-bar-horizontal\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", xScaleMin: \"xScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontal2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const height = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.groupScale(group.label)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontal2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontal2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontal2DComponent, selector: \"ngx-charts-bar-horizontal-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalNormalizedComponent, selector: \"ngx-charts-bar-horizontal-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalStackedComponent, selector: \"ngx-charts-bar-horizontal-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SeriesVerticalComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        let width;\n        if (this.series.length) {\n            width = this.xScale.bandwidth();\n        }\n        width = Math.round(width);\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        this.bars = this.series.map((d, index) => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                width,\n                formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0\n            };\n            if (this.type === BarChartType.Standard) {\n                bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n                bar.x = this.xScale(label);\n                if (value < 0) {\n                    bar.y = this.yScale(0);\n                }\n                else {\n                    bar.y = this.yScale(value);\n                }\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            if (section.total > 0) {\n                section.height = this.yScale(totalPositive);\n            }\n            else {\n                section.height = this.yScale(totalNegative);\n            }\n            section.width = this.xScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(d.label);\n                section.y = this.yScale(0);\n                section.height = this.yScale(section.total) - this.yScale(0);\n                section.width = this.xScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n}\nSeriesVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nSeriesVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-vertical]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelHeightChanged: [{\n                type: Output\n            }] } });\n\nclass BarVerticalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getXDomain() {\n        return this.results.map(d => d.label);\n    }\n    getYDomain() {\n        const values = this.results.map(d => d.value);\n        let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            min = Math.min(min, ...this.yAxisTicks);\n        }\n        let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            max = Math.max(max, ...this.yAxisTicks);\n        }\n        return [min, max];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxHeightChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalComponent, selector: \"ngx-charts-bar-vertical\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", yScaleMin: \"yScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVertical2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.scaleType = ScaleType.Ordinal;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const width = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(${this.groupScale(group.label)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVertical2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVertical2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVertical2DComponent, selector: \"ngx-charts-bar-vertical-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", scaleType: \"scaleType\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalNormalizedComponent, selector: \"ngx-charts-bar-vertical-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name) || 0}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalStackedComponent, selector: \"ngx-charts-bar-vertical-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarChartModule {\n}\nBarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, declarations: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent], imports: [ChartCommonModule], exports: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent] });\nBarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ],\n                    exports: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ]\n                }]\n        }] });\n\nconst cloneDeep = rfdc();\nclass BoxComponent {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.BarOrientation = BarOrientation;\n        this.initialized = false;\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.nativeElm = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    }\n    update() {\n        this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n        this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n        this.medianLineWidth = 1.5 * this.strokeWidth;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updateLineEl();\n        this.updatePathEl();\n        this.checkToHideBar();\n        this.maskLineId = 'mask' + id().toString();\n        this.maskLine = `url(#${this.maskLineId})`;\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    loadAnimation() {\n        this.boxPath = this.oldPath = this.getStartingPath();\n        this.oldLineCoordinates = this.getStartingLineCoordinates();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const nodeBar = select(this.nativeElm).selectAll('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            nodeBar\n                .attr('d', this.oldPath)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attrTween('d', this.pathTween(path, 4));\n        }\n        else {\n            nodeBar.attr('d', path);\n        }\n        this.oldPath = path;\n    }\n    updateLineEl() {\n        const lineEl = select(this.nativeElm).selectAll('.bar-line');\n        const lineCoordinates = this.lineCoordinates;\n        const oldLineCoordinates = this.oldLineCoordinates;\n        if (this.animations) {\n            lineEl\n                .attr('x1', (_, index) => oldLineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => oldLineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => oldLineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => oldLineCoordinates[index].v2.y)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        else {\n            lineEl\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        this.oldLineCoordinates = [...lineCoordinates];\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr, d, index, node) {\n        const nodeLineEl = node[index];\n        return nodeLineEl[attr].baseVal.value;\n    }\n    // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n    pathTween(d1, precision) {\n        return function () {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const path0 = this;\n            const path1 = this.cloneNode();\n            path1.setAttribute('d', d1);\n            const n0 = path0?.getTotalLength();\n            const n1 = path1?.getTotalLength();\n            // Uniform sampling of distance based on specified precision.\n            const distances = [0];\n            let i = 0;\n            const dt = precision / Math.max(n0, n1);\n            while (i < 1) {\n                distances.push(i);\n                i += dt;\n            }\n            distances.push(1);\n            // Compute point-interpolators at each distance.\n            const points = distances.map((t) => {\n                const p0 = path0.getPointAtLength(t * n0);\n                const p1 = path1.getPointAtLength(t * n1);\n                return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n            });\n            // 't': T is the fraction of time (between 0 and 1) since the transition began.\n            return (t) => {\n                return t < 1 ? 'M' + points.map((p) => p(t)).join('L') : d1;\n            };\n        };\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        const radius = this.roundEdges ? 1 : 0;\n        const { x, y } = this.lineCoordinates[2].v1;\n        return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n    getPath() {\n        const radius = this.getRadius();\n        let path = '';\n        path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n        return path;\n    }\n    getStartingLineCoordinates() {\n        if (!this.animations) {\n            return [...this.lineCoordinates];\n        }\n        const lineCoordinates = cloneDeep(this.lineCoordinates);\n        lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y =\n            lineCoordinates[2].v1.y;\n        return lineCoordinates;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getGradient() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            edges = [true, true, true, true];\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n}\nBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: { strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", lineCoordinates: \"lineCoordinates\", roundEdges: \"roundEdges\", gradient: \"gradient\", gradientStops: \"gradientStops\", offset: \"offset\", isActive: \"isActive\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box]',\n                    template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], lineCoordinates: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], gradientStops: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BoxSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    update() {\n        this.updateTooltipSettings();\n        const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n        const seriesName = this.series.name;\n        // Calculate Quantile and Whiskers for each box serie.\n        this.counts = this.series.series;\n        const mappedCounts = this.counts.map(serie => Number(serie.value));\n        this.whiskers = [min(mappedCounts), max(mappedCounts)];\n        // We get the group count and must sort it in order to retrieve quantiles.\n        const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n        this.quartiles = this.getBoxQuantiles(groupCounts);\n        this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n        const value = this.quartiles[1];\n        const formattedLabel = formatLabel(seriesName);\n        const box = {\n            value,\n            data: this.counts,\n            label: seriesName,\n            formattedLabel,\n            width,\n            height: 0,\n            x: 0,\n            y: 0,\n            roundEdges: this.roundEdges,\n            quartiles: this.quartiles,\n            lineCoordinates: this.lineCoordinates\n        };\n        box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n        box.x = this.xScale(seriesName.toString());\n        box.y = this.yScale(this.quartiles[2]);\n        box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n            box.color = this.colors.getColor(seriesName);\n        }\n        else {\n            box.color = this.colors.getColor(this.quartiles[1]);\n            box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n        }\n        const tooltipLabel = formattedLabel;\n        const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n        box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n        this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n        this.box = box;\n    }\n    getBoxQuantiles(inputData) {\n        return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n    getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n        // The X value is not being centered, so had to sum half the width to align it.\n        const commonX = this.xScale(seriesName);\n        const offsetX = commonX + barWidth / 2;\n        const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n        const whiskerLineWidth = Math.max(barWidth / 3, 1);\n        const whiskerZero = this.yScale(whiskers[0]);\n        const whiskerOne = this.yScale(whiskers[1]);\n        const median = this.yScale(quartiles[1]);\n        const topLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerZero },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerZero }\n        };\n        const medianLine = {\n            v1: { x: offsetX + medianLineWidth / 2, y: median },\n            v2: { x: offsetX - medianLineWidth / 2, y: median }\n        };\n        const bottomLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerOne },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerOne }\n        };\n        const verticalLine = {\n            v1: { x: offsetX, y: whiskerZero },\n            v2: { x: offsetX, y: whiskerOne }\n        };\n        return [verticalLine, topLine, medianLine, bottomLine];\n    }\n    updateTooltipSettings() {\n        if (this.tooltipDisabled) {\n            this.tooltipPlacement = undefined;\n            this.tooltipType = undefined;\n        }\n        else {\n            if (!this.tooltipPlacement) {\n                this.tooltipPlacement = PlacementTypes.Top;\n            }\n            if (!this.tooltipType) {\n                this.tooltipType = StyleTypes.tooltip;\n            }\n        }\n    }\n}\nBoxSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBoxSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: { dims: \"dims\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", animations: \"animations\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", tooltipPlacement: \"tooltipPlacement\", tooltipType: \"tooltipType\", roundEdges: \"roundEdges\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: [\"strokeColor\", \"strokeWidth\", \"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"lineCoordinates\", \"roundEdges\", \"gradient\", \"gradientStops\", \"offset\", \"isActive\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box-series]',\n                    template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BoxChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        /** Show or hide the legend. */\n        this.legend = false;\n        this.legendPosition = LegendPosition.Right;\n        this.legendTitle = 'Legend';\n        this.showGridLines = true;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.showXAxisLabel = true;\n        this.showYAxisLabel = true;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.strokeColor = '#FFFFFF';\n        this.strokeWidth = 2;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        /** Chart Margins (For each side, counterclock wise). */\n        this.margin = [10, 20, 10, 20];\n        /** Chart X axis dimension. */\n        this.xAxisHeight = 0;\n        /** Chart Y axis dimension. */\n        this.yAxisWidth = 0;\n    }\n    trackBy(index, item) {\n        return item.name;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    setColors() {\n        let domain = [];\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    setScales() {\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n    getXScale(domain, width) {\n        const scale = scaleBand()\n            .domain(domain.map(d => d.toString()))\n            .rangeRound([0, width])\n            .padding(0.5);\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().domain(domain).range([height, 0]);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getUniqueBoxChartXDomainValues(results) {\n        const valueSet = new Set();\n        for (const result of results) {\n            valueSet.add(result.name);\n        }\n        return Array.from(valueSet);\n    }\n    getXDomain() {\n        let domain = [];\n        const values = this.getUniqueBoxChartXDomainValues(this.results);\n        let min;\n        let max;\n        if (typeof values[0] === 'string') {\n            domain = values.map(val => val.toString());\n        }\n        else if (typeof values[0] === 'number') {\n            const mappedValues = values.map(v => Number(v));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [min, max];\n        }\n        else {\n            const mappedValues = values.map(v => Number(new Date(v)));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [new Date(min), new Date(max)];\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        const mappedValues = values.map(v => Number(v));\n        const min = Math.min(...mappedValues);\n        const max = Math.max(...mappedValues);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => `${d.name}`);\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    onActivate(data) {\n        this.activate.emit(data);\n    }\n    onDeactivate(data) {\n        this.deactivate.emit(data);\n    }\n    getLegendOptions() {\n        const legendOpts = {\n            scaleType: this.schemeType,\n            colors: this.colors,\n            domain: [],\n            position: this.legendPosition,\n            title: this.legendTitle\n        };\n        if (this.schemeType === ScaleType.Ordinal) {\n            legendOpts.domain = this.xDomain;\n            legendOpts.colors = this.colors;\n        }\n        else {\n            legendOpts.domain = this.yDomain;\n            legendOpts.colors = this.colors.scale;\n        }\n        return legendOpts;\n    }\n}\nBoxChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBoxChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxChartComponent, selector: \"ngx-charts-box-chart\", inputs: { legend: \"legend\", legendPosition: \"legendPosition\", legendTitle: \"legendTitle\", legendOptionsConfig: \"legendOptionsConfig\", showGridLines: \"showGridLines\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", roundDomains: \"roundDomains\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", roundEdges: \"roundEdges\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", wrapTicks: \"wrapTicks\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: [\"dims\", \"series\", \"xScale\", \"yScale\", \"colors\", \"animations\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipPlacement\", \"tooltipType\", \"roundEdges\", \"gradient\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-box-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendOptionsConfig: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate', { static: false }]\n            }] } });\n\nclass BoxChartModule {\n}\nBoxChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBoxChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent], imports: [ChartCommonModule], exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent] });\nBoxChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n                    exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n                }]\n        }] });\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        if (!autoScale) {\n            values.push(0);\n        }\n    }\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n        const max = maxVal ? maxVal : Math.max(...values);\n        domain = [min, max];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n    switch (scaleType) {\n        case ScaleType.Time:\n            return scaleTime().range(range).domain(domain);\n        case ScaleType.Linear: {\n            const scale = scaleLinear().range(range).domain(domain);\n            if (roundDomains) {\n                return scale.nice();\n            }\n            return scale;\n        }\n        case ScaleType.Ordinal:\n            return scalePoint()\n                .range([range[0], range[1]])\n                .domain(domain.map(r => r.toString()));\n        default:\n            return undefined;\n    }\n}\n\nclass BubbleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.circles = this.getCircles();\n    }\n    getCircles() {\n        const seriesName = this.data.name;\n        return this.data.series\n            .map((d, i) => {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                const y = d.y;\n                const x = d.x;\n                const r = d.r;\n                const radius = this.rScale(r || 1);\n                const tooltipLabel = formatLabel(d.name);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n                const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n                const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\n                const opacity = isActive ? 1 : 0.3;\n                const data = Object.assign({}, d, {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                });\n                return {\n                    data,\n                    x,\n                    y,\n                    r,\n                    classNames: [`circle-data-${i}`],\n                    value: y,\n                    label: x,\n                    cx,\n                    cy,\n                    radius,\n                    tooltipLabel,\n                    color,\n                    opacity,\n                    seriesName,\n                    isActive,\n                    transform: `translate(${cx},${cy})`\n                };\n            }\n        })\n            .filter(circle => circle !== undefined);\n    }\n    getTooltipText(circle) {\n        const hasRadius = typeof circle.r !== 'undefined';\n        const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        const hasSeriesName = circle.seriesName && circle.seriesName.length;\n        const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n        const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n        const x = formatLabel(circle.x);\n        const y = formatLabel(circle.y);\n        const name = hasSeriesName && hasTooltipLabel\n            ? `${circle.seriesName} • ${circle.tooltipLabel}`\n            : circle.seriesName + circle.tooltipLabel;\n        const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n        return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isVisible(circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    }\n    activateCircle(circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle(circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    }\n    trackBy(index, circle) {\n        return `${circle.data.series} ${circle.data.name}`;\n    }\n}\nBubbleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBubbleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", rScale: \"rScale\", xScaleType: \"xScaleType\", yScaleType: \"yScaleType\", colors: \"colors\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0,\n                    transform: 'scale(0)'\n                }),\n                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bubble-series]',\n                    template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0,\n                                    transform: 'scale(0)'\n                                }),\n                                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], rScale: [{\n                type: Input\n            }], xScaleType: [{\n                type: Input\n            }], yScaleType: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BubbleChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showGridLines = true;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.maxRadius = 10;\n        this.minRadius = 3;\n        this.schemeType = ScaleType.Ordinal;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.scaleType = ScaleType.Linear;\n        this.margin = [10, 20, 10, 20];\n        this.bubblePadding = [0, 0, 0, 0];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.activeEntries = [];\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.results.map(d => d.name);\n        this.rDomain = this.getRDomain();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n        const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n        this.data = this.results;\n        this.minRadius = Math.max(this.minRadius, 1);\n        this.maxRadius = Math.max(this.maxRadius, 1);\n        this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n        this.bubblePadding = [0, 0, 0, 0];\n        this.setScales();\n        this.bubblePadding = this.getBubblePadding();\n        this.setScales();\n        this.legendOptions = this.getLegendOptions();\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    hideCircles() {\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    getBubblePadding() {\n        let yMin = 0;\n        let xMin = 0;\n        let yMax = this.dims.height;\n        let xMax = this.dims.width;\n        for (const s of this.data) {\n            for (const d of s.series) {\n                const r = this.rScale(d.r);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n                xMin = Math.max(r - cx, xMin);\n                yMin = Math.max(r - cy, yMin);\n                yMax = Math.max(cy + r, yMax);\n                xMax = Math.max(cx + r, xMax);\n            }\n        }\n        xMax = Math.max(xMax - this.dims.width, 0);\n        yMax = Math.max(yMax - this.dims.height, 0);\n        return [yMin, xMax, yMax, xMin];\n    }\n    setScales() {\n        let width = this.dims.width;\n        if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n            width = width - this.bubblePadding[1];\n        }\n        let height = this.dims.height;\n        if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n            height = height - this.bubblePadding[2];\n        }\n        this.xScale = this.getXScale(this.xDomain, width);\n        this.yScale = this.getYScale(this.yDomain, height);\n    }\n    getYScale(domain, height) {\n        return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n    getXScale(domain, width) {\n        return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n    getRScale(domain, range) {\n        const scale = scaleLinear().range(range).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            position: this.legendPosition,\n            title: undefined\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.rDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    getXDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.x)) {\n                    values.push(d.x);\n                }\n            }\n        }\n        this.xScaleType = getScaleType(values);\n        return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n    getYDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.y)) {\n                    values.push(d.y);\n                }\n            }\n        }\n        this.yScaleType = getScaleType(values);\n        return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n    getRDomain() {\n        let min = Infinity;\n        let max = -Infinity;\n        for (const results of this.results) {\n            for (const d of results.series) {\n                const value = Number(d.r) || 1;\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n            }\n        }\n        return [min, max];\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nBubbleChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBubbleChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleChartComponent, selector: \"ngx-charts-bubble-chart\", inputs: { showGridLines: \"showGridLines\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", maxRadius: \"maxRadius\", minRadius: \"minRadius\", autoScale: \"autoScale\", schemeType: \"schemeType\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"colors\", \"visibleValue\", \"activeEntries\", \"xAxisLabel\", \"yAxisLabel\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bubble-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showGridLines: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], maxRadius: [{\n                type: Input\n            }], minRadius: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BubbleChartModule {\n}\nBubbleChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBubbleChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, declarations: [BubbleChartComponent, BubbleSeriesComponent], imports: [ChartCommonModule], exports: [BubbleChartComponent, BubbleSeriesComponent] });\nBubbleChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BubbleChartComponent, BubbleSeriesComponent],\n                    exports: [BubbleChartComponent, BubbleSeriesComponent]\n                }]\n        }] });\n\nclass HeatMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.transform = `translate(${this.x} , ${this.y})`;\n        this.startOpacity = 0.3;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n        if (this.animations) {\n            this.loadAnimation();\n        }\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0);\n        this.animateToCurrentForm();\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        node.transition().duration(750).attr('opacity', 1);\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n}\nHeatMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nHeatMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: { fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", data: \"data\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass HeatCellSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnInit() {\n        if (!this.tooltipText) {\n            this.tooltipText = this.getTooltipText;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        const cells = [];\n        this.data.map(row => {\n            row.series.map(cell => {\n                const value = cell.value;\n                cell.series = row.name;\n                cells.push({\n                    row,\n                    cell,\n                    x: this.xScale(row.name),\n                    y: this.yScale(cell.name),\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: this.colors.getColor(value),\n                    data: value,\n                    label: formatLabel(cell.name),\n                    series: row.name\n                });\n            });\n        });\n        return cells;\n    }\n    getTooltipText({ label, data, series }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nHeatCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHeatCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: { data: \"data\", colors: \"colors\", xScale: \"xScale\", yScale: \"yScale\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: [\"fill\", \"x\", \"y\", \"width\", \"height\", \"data\", \"gradient\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass HeatMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.innerPadding = 8;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.scaleType = ScaleType.Linear;\n    }\n    update() {\n        super.update();\n        this.formatDates();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.valueDomain = this.getValueDomain();\n        this.scaleType = getScaleType(this.valueDomain, false);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.scaleType,\n            legendPosition: this.legendPosition\n        });\n        if (this.scaleType === ScaleType.Linear) {\n            let min = this.min;\n            let max = this.max;\n            if (!this.min) {\n                min = Math.min(0, ...this.valueDomain);\n            }\n            if (!this.max) {\n                max = Math.max(...this.valueDomain);\n            }\n            this.valueDomain = [min, max];\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.rects = this.getRects();\n    }\n    getXDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value, index = 0, N, L) {\n        if (typeof value === 'string') {\n            value = value\n                .replace('[', '')\n                .replace(']', '')\n                .replace('px', '')\n                // tslint:disable-next-line: quotemark\n                .replace(\"'\", '');\n            if (value.includes(',')) {\n                value = value.split(',');\n            }\n        }\n        if (Array.isArray(value) && typeof index === 'number') {\n            return this.getDimension(value[index], null, N, L);\n        }\n        if (typeof value === 'string' && value.includes('%')) {\n            return +value.replace('%', '') / 100;\n        }\n        return N / (L / +value + 1);\n    }\n    getXScale() {\n        const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n        return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n    getYScale() {\n        const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n        return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n    getRects() {\n        const rects = [];\n        this.xDomain.map(xVal => {\n            this.yDomain.map(yVal => {\n                rects.push({\n                    x: this.xScale(xVal),\n                    y: this.yScale(yVal),\n                    rx: 3,\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: 'rgba(200,200,200,0.03)'\n                });\n            });\n        });\n        return rects;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: this.scaleType,\n            domain: this.valueDomain,\n            colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n            title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nHeatMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeatMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapComponent, selector: \"ngx-charts-heat-map\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", gradient: \"gradient\", innerPadding: \"innerPadding\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", min: \"min\", max: \"max\", activeEntries: \"activeEntries\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: [\"data\", \"colors\", \"xScale\", \"yScale\", \"gradient\", \"tooltipDisabled\", \"tooltipText\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-heat-map', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass HeatMapModule {\n}\nHeatMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHeatMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent], imports: [ChartCommonModule], exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent] });\nHeatMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n                    exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n                }]\n        }] });\n\nclass LineComponent {\n    constructor(element, platformId) {\n        this.element = element;\n        this.platformId = platformId;\n        this.fill = 'none';\n        this.animations = true;\n        // @Output() select = new EventEmitter();\n        this.initialized = false;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.initialPath = this.path;\n        }\n        else {\n            this.updatePathEl();\n        }\n    }\n    updatePathEl() {\n        const node = select(this.element.nativeElement).select('.line');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n}\nLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: { path: \"path\", stroke: \"stroke\", data: \"data\", fill: \"fill\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    strokeDasharray: 2000,\n                    strokeDashoffset: 2000\n                }),\n                animate(1000, style({\n                    strokeDashoffset: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    strokeDasharray: 2000,\n                                    strokeDashoffset: 2000\n                                }),\n                                animate(1000, style({\n                                    strokeDashoffset: 0\n                                }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { path: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const data = this.sortData(this.data.series);\n        const lineGen = this.getLineGenerator();\n        this.path = lineGen(data) || '';\n        const areaGen = this.getAreaGenerator();\n        this.areaPath = areaGen(data) || '';\n        if (this.hasRange) {\n            const range = this.getRangeGenerator();\n            this.outerPath = range(data) || '';\n        }\n        if (this.hasGradient) {\n            this.stroke = this.gradientUrl;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            if (max === min) {\n                this.stroke = this.colors.getColor(max);\n            }\n        }\n        else {\n            this.stroke = this.colors.getColor(this.data.name);\n        }\n    }\n    getLineGenerator() {\n        return line()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    getRangeGenerator() {\n        return area()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n            .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n            .curve(this.curve);\n    }\n    getAreaGenerator() {\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        return area()\n            .x(xProperty)\n            .y0(() => this.yScale.range()[0])\n            .y1(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        return data;\n    }\n    updateGradients() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            this.gradientId = 'grad' + id().toString();\n            this.gradientUrl = `url(#${this.gradientId})`;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            this.areaGradientStops = this.colors.getLinearGradientStops(max);\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n            this.areaGradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", hasRange: \"hasRange\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line-series]',\n                    template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], hasRange: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showRefLines = false;\n        this.showRefLabels = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, width]).domain(domain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, width]).domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n        }\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        this.deactivateAll();\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nLineChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLineChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineChartComponent, selector: \"ngx-charts-line-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showRefLines: \"showRefLines\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"hasRange\", \"animations\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-line-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LineChartModule {\n}\nLineChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLineChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, declarations: [LineComponent, LineChartComponent, LineSeriesComponent], imports: [ChartCommonModule], exports: [LineComponent, LineChartComponent, LineSeriesComponent] });\nLineChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n                    exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n                }]\n        }] });\n\nclass PieLabelComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.animations = true;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.trimLabel = trimLabel;\n    }\n    ngOnChanges(changes) {\n        this.setTransforms();\n        this.update();\n    }\n    setTransforms() {\n        if (isPlatformServer(this.platformId)) {\n            this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = `translate(${this.textX},${this.textY})`;\n            this.textTransition = !this.animations ? null : 'transform 0.75s';\n        }\n        else {\n            const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n            this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n            this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n        }\n    }\n    update() {\n        let startRadius = this.radius;\n        if (this.explodeSlices) {\n            startRadius = (this.radius * this.value) / this.max;\n        }\n        const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n        // Calculate innerPos then scale outer position to match label position\n        const innerPos = innerArc.centroid(this.data);\n        let scale = this.data.pos[1] / innerPos[1];\n        if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n            scale = 1;\n        }\n        const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n        this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n    }\n    get textX() {\n        return this.data.pos[0];\n    }\n    get textY() {\n        return this.data.pos[1];\n    }\n    textAnchor() {\n        return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n}\nPieLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nPieLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: { data: \"data\", radius: \"radius\", label: \"label\", color: \"color\", max: \"max\", value: \"value\", explodeSlices: \"explodeSlices\", animations: \"animations\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, usesOnChanges: true, ngImport: i0, template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-label]',\n                    template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }] } });\n\nclass PolarSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.circleRadius = 3;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const line = this.getLineGenerator();\n        const data = this.sortData(this.data.series);\n        const seriesName = this.data.name;\n        const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n        const min = this.yScale.domain()[0];\n        this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n        this.path = line(data) || '';\n        this.circles = data.map(d => {\n            const a = this.getAngle(d);\n            const r = this.getRadius(d);\n            const value = d.value;\n            const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n            const cData = Object.assign({}, d, {\n                series: seriesName,\n                value,\n                name: d.name\n            });\n            return {\n                data: cData,\n                cx: r * Math.sin(a),\n                cy: -r * Math.cos(a),\n                value,\n                color,\n                label: d.name\n            };\n        });\n        this.active = this.isActive(this.data);\n        this.inactive = this.isInactive(this.data);\n        this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n    }\n    getAngle(d) {\n        const label = d.name;\n        if (this.scaleType === ScaleType.Time) {\n            return this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            return this.xScale(Number(label));\n        }\n        return this.xScale(label);\n    }\n    getRadius(d) {\n        return this.yScale(d.value);\n    }\n    getLineGenerator() {\n        return lineRadial()\n            .angle(d => this.getAngle(d))\n            .radius(d => this.getRadius(d))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            return sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            return sortByTime(data, 'name');\n        }\n        return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n    defaultTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    updateGradients() {\n        this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n        if (!this.hasGradient) {\n            return;\n        }\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        }\n        else {\n            this.gradientStops = undefined;\n        }\n    }\n}\nPolarSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPolarSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: { name: \"name\", data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", gradient: \"gradient\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-polar-series]',\n                    template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveCardinalClosed;\n        this.activeEntries = [];\n        this.rangeFillOpacity = 0.15;\n        this.trimYAxisTicks = true;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showSeriesOnHover = true;\n        this.gradient = false;\n        this.yAxisMinScale = 0;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        // series: any; // ???\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.orientation = Orientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.setDims();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.setTicks();\n    }\n    setDims() {\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        const halfWidth = Math.floor(this.dims.width / 2);\n        const halfHeight = Math.floor(this.dims.height / 2);\n        const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n        const yOffset = Math.max(0, halfHeight - outerRadius);\n        this.yAxisDims = {\n            ...this.dims,\n            width: halfWidth\n        };\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.transformYAxis = `translate(0, ${yOffset})`;\n        this.labelOffset = this.dims.height + 40;\n        this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n    }\n    setScales() {\n        const xValues = this.getXValues();\n        this.scaleType = getScaleType(xValues);\n        this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, twoPI);\n        this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n        this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n    setTicks() {\n        let tickFormat;\n        if (this.xAxisTickFormatting) {\n            tickFormat = this.xAxisTickFormatting;\n        }\n        else if (this.xScale.tickFormat) {\n            tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n        }\n        else {\n            tickFormat = d => {\n                if (isDate(d)) {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const outerRadius = this.outerRadius;\n        const s = 1.1;\n        this.thetaTicks = this.xDomain.map(d => {\n            const startAngle = this.xScale(d);\n            const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n            const label = tickFormat(d);\n            const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n            const pos = [dd, s * startPos[1]];\n            return {\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle: startAngle,\n                value: outerRadius,\n                label,\n                startPos,\n                pos\n            };\n        });\n        const minDistance = 10;\n        /* from pie chart, abstract out -*/\n        for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n            const a = this.thetaTicks[i];\n            for (let j = i + 1; j < this.thetaTicks.length; j++) {\n                const b = this.thetaTicks[j];\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n    }\n    getXValues() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        return values;\n    }\n    getXDomain(values = this.getXValues()) {\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        return values;\n    }\n    getYValues() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        return domain;\n    }\n    getYDomain(domain = this.getYValues()) {\n        let min = Math.min(...domain);\n        const max = Math.max(this.yAxisMinScale, ...domain);\n        min = Math.max(0, min);\n        if (!this.autoScale) {\n            min = Math.min(0, min);\n        }\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        switch (this.scaleType) {\n            case ScaleType.Time:\n                return scaleTime().range([0, width]).domain(domain);\n            case ScaleType.Linear: {\n                const scale = scaleLinear().range([0, width]).domain(domain);\n                return this.roundDomains ? scale.nice() : scale;\n            }\n            default:\n                return scalePoint()\n                    .range([0, width - twoPI / domain.length])\n                    .padding(0)\n                    .domain(domain);\n        }\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([0, height]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        if (this.schemeType === ScaleType.Ordinal) {\n            return {\n                scaleType: this.schemeType,\n                colors: this.colors,\n                domain: this.seriesDomain,\n                title: this.legendTitle,\n                position: this.legendPosition\n            };\n        }\n        return {\n            scaleType: this.schemeType,\n            colors: this.colors.scale,\n            domain: this.yDomain,\n            title: undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nPolarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPolarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarChartComponent, selector: \"ngx-charts-polar-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimYAxisTicks: \"trimYAxisTicks\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showSeriesOnHover: \"showSeriesOnHover\", gradient: \"gradient\", yAxisMinScale: \"yAxisMinScale\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }, { type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: [\"name\", \"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"tooltipDisabled\", \"tooltipText\", \"gradient\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-polar-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showSeriesOnHover: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], yAxisMinScale: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieArcComponent {\n    constructor(element) {\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.cornerRadius = 0;\n        this.explodeSlices = false;\n        this.gradient = false;\n        this.animate = true;\n        this.pointerEvents = true;\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getGradient() {\n        return this.gradient ? this.gradientFill : this.fill;\n    }\n    getPointerEvents() {\n        return this.pointerEvents ? 'auto' : 'none';\n    }\n    update() {\n        const calc = this.calculateArc();\n        this.startOpacity = 0.5;\n        this.radialGradientId = 'linearGrad' + id().toString();\n        this.gradientFill = `url(#${this.radialGradientId})`;\n        if (this.animate) {\n            if (this.initialized) {\n                this.updateAnimation();\n            }\n            else {\n                this.loadAnimation();\n                this.initialized = true;\n            }\n        }\n        else {\n            this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n        }\n    }\n    calculateArc() {\n        let outerRadius = this.outerRadius;\n        if (this.explodeSlices && this.innerRadius === 0) {\n            outerRadius = (this.outerRadius * this.value) / this.max;\n        }\n        return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n    loadAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const copyOfD = Object.assign({}, d);\n            copyOfD.endAngle = copyOfD.startAngle;\n            const interpolater = interpolate(copyOfD, copyOfD);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        })\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    updateAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    onClick() {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n    }\n    onDblClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        clearTimeout(this._timeout);\n        this.dblclick.emit({\n            data: this.data,\n            nativeEvent: event\n        });\n    }\n}\nPieArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: { fill: \"fill\", startAngle: \"startAngle\", endAngle: \"endAngle\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", cornerRadius: \"cornerRadius\", value: \"value\", max: \"max\", data: \"data\", explodeSlices: \"explodeSlices\", gradient: \"gradient\", animate: \"animate\", pointerEvents: \"pointerEvents\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-arc]',\n                    template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], endAngle: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animate: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass PieSeriesComponent {\n    constructor() {\n        this.series = [];\n        this.innerRadius = 60;\n        this.outerRadius = 80;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        const pieGenerator = pie()\n            .value(d => d.value)\n            .sort(null);\n        const arcData = pieGenerator(this.series);\n        this.max = max(arcData, d => {\n            return d.value;\n        });\n        this.data = this.calculateLabelPositions(arcData);\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    outerArc() {\n        const factor = 1.5;\n        return arc()\n            .innerRadius(this.outerRadius * factor)\n            .outerRadius(this.outerRadius * factor);\n    }\n    calculateLabelPositions(pieData) {\n        const factor = 1.5;\n        const minDistance = 10;\n        const labelPositions = pieData;\n        labelPositions.forEach(d => {\n            d.pos = this.outerArc().centroid(d);\n            d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n        });\n        for (let i = 0; i < labelPositions.length - 1; i++) {\n            const a = labelPositions[i];\n            if (!this.labelVisible(a)) {\n                continue;\n            }\n            for (let j = i + 1; j < labelPositions.length; j++) {\n                const b = labelPositions[j];\n                if (!this.labelVisible(b)) {\n                    continue;\n                }\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        return labelPositions;\n    }\n    labelVisible(myArc) {\n        return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n    getTooltipTitle(a) {\n        return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n    labelText(myArc) {\n        if (this.labelFormatting) {\n            return this.labelFormatting(myArc.data.name);\n        }\n        return this.label(myArc);\n    }\n    label(myArc) {\n        return formatLabel(myArc.data.name);\n    }\n    defaultTooltipText(myArc) {\n        const label = this.label(myArc);\n        const val = formatLabel(myArc.data.value);\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    color(myArc) {\n        return this.colors.getColor(this.label(myArc));\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n}\nPieSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPieSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: { colors: \"colors\", series: \"series\", dims: \"dims\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", explodeSlices: \"explodeSlices\", showLabels: \"showLabels\", gradient: \"gradient\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-series]',\n                    template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass AdvancedPieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: (this.width * 4) / 12.0,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        const xOffset = this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.legendWidth = this.width - this.dims.width - this.margin[1];\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n        this.innerRadius = this.outerRadius * 0.75;\n        this.transform = `translate(${xOffset} , ${yOffset})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nAdvancedPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAdvancedPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedPieChartComponent, selector: \"ngx-charts-advanced-pie-chart\", inputs: { gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", valueFormatting: \"valueFormatting\", nameFormatting: \"nameFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }, { type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: [\"width\", \"data\", \"colors\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-pie-chart', template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"] }]\n        }], propDecorators: { gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], valueFormatting: [{\n                type: Input\n            }], nameFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nclass PieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.labels = false;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.arcWidth = 0.25;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.dblclick = new EventEmitter();\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    update() {\n        super.update();\n        if (this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [30, 80, 30, 80];\n        }\n        else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n            // default value for margins\n            this.margins = [20, 20, 20, 20];\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margins,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        const xOffset = this.margins[3] + this.dims.width / 2;\n        const yOffset = this.margins[0] + this.dims.height / 2;\n        this.translation = `translate(${xOffset}, ${yOffset})`;\n        this.outerRadius = Math.min(this.dims.width, this.dims.height);\n        if (this.labels) {\n            // make room for labels\n            this.outerRadius /= 3;\n        }\n        else {\n            this.outerRadius /= 2;\n        }\n        this.innerRadius = 0;\n        if (this.doughnut) {\n            this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n        }\n        this.domain = this.getDomain();\n        // sort data according to domain\n        this.data = this.results.sort((a, b) => {\n            return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n        });\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            domain: this.domain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    hasNoOptionalMarginsSet() {\n        return !this.margins || this.margins.length <= 0;\n    }\n}\nPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieChartComponent, selector: \"ngx-charts-pie-chart\", inputs: { labels: \"labels\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", explodeSlices: \"explodeSlices\", doughnut: \"doughnut\", arcWidth: \"arcWidth\", gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", margins: \"margins\" }, outputs: { dblclick: \"dblclick\", select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"] }]\n        }], propDecorators: { labels: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], doughnut: [{\n                type: Input\n            }], arcWidth: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], dblclick: [{\n                type: Output\n            }], margins: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nfunction gridSize(dims, len, minWidth) {\n    let rows = 1;\n    let cols = len;\n    const width = dims.width;\n    if (width > minWidth) {\n        while (width / cols < minWidth) {\n            rows += 1;\n            cols = Math.ceil(len / rows);\n        }\n    }\n    return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n    const xScale = scaleBand();\n    const yScale = scaleBand();\n    const width = dims.width;\n    const height = dims.height;\n    const [columns, rows] = gridSize(dims, data.length, minWidth);\n    const xDomain = [];\n    const yDomain = [];\n    for (let i = 0; i < rows; i++) {\n        yDomain.push(i);\n    }\n    for (let i = 0; i < columns; i++) {\n        xDomain.push(i);\n    }\n    xScale.domain(xDomain);\n    yScale.domain(yDomain);\n    xScale.rangeRound([0, width], 0.1);\n    yScale.rangeRound([0, height], 0.1);\n    const res = [];\n    const total = designatedTotal ? designatedTotal : getTotal(data);\n    const cardWidth = xScale.bandwidth();\n    const cardHeight = yScale.bandwidth();\n    for (let i = 0; i < data.length; i++) {\n        res[i] = {};\n        res[i].data = {\n            name: data[i] ? data[i].name : '',\n            value: data[i] ? data[i].value : undefined,\n            extra: data[i] ? data[i].extra : undefined,\n            label: data[i] ? data[i].label : ''\n        };\n        res[i].x = xScale(i % columns);\n        res[i].y = yScale(Math.floor(i / columns));\n        res[i].width = cardWidth;\n        res[i].height = cardHeight;\n        res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n        res[i].data.total = total;\n    }\n    return res;\n}\nfunction getTotal(results) {\n    return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\n}\n\nclass PieGridSeriesComponent {\n    constructor(element) {\n        this.innerRadius = 70;\n        this.outerRadius = 80;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.layout = pie()\n            .value(d => d.data.value)\n            .sort(null);\n        this.arcs = this.getArcs();\n    }\n    getArcs() {\n        return this.layout(this.data).map((arc, index) => {\n            const label = arc.data.data.name;\n            const other = arc.data.data.other;\n            if (index === 0) {\n                arc.startAngle = 0;\n            }\n            const color = this.colors(label);\n            return {\n                data: arc.data.data,\n                class: 'arc ' + 'arc' + index,\n                fill: color,\n                startAngle: other ? 0 : arc.startAngle,\n                endAngle: arc.endAngle,\n                animate: this.animations && !other,\n                pointerEvents: !other\n            };\n        });\n    }\n    onClick(data) {\n        this.select.emit(this.data[0].data);\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    label(arc) {\n        return arc.data.name;\n    }\n    color(arc) {\n        return this.colors(this.label(arc));\n    }\n}\nPieGridSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieGridSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: { colors: \"colors\", data: \"data\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-grid-series]',\n                    template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { colors: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass PieGridComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.minWidth = 150;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n        this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n        this.series = this.getSeries();\n        this.setColors();\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    defaultTooltipText({ data }) {\n        const label = trimLabel(formatLabel(data.name));\n        const val = data.value.toLocaleString();\n        return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    getSeries() {\n        const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n        return this.data.map(d => {\n            const baselineLabelHeight = 20;\n            const padding = 10;\n            const name = d.data.name;\n            const label = formatLabel(name);\n            const value = d.data.value;\n            const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n            const innerRadius = radius * 0.9;\n            let count = 0;\n            const colors = () => {\n                count += 1;\n                if (count === 1) {\n                    return 'rgba(100,100,100,0.3)';\n                }\n                else {\n                    return this.colorScale.getColor(label);\n                }\n            };\n            const xPos = d.x + (d.width - padding) / 2;\n            const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n            return {\n                transform: `translate(${xPos}, ${yPos})`,\n                colors,\n                innerRadius,\n                outerRadius: radius,\n                name,\n                label: trimLabel(label),\n                total: value,\n                value,\n                percent: format('.1%')(d.data.percent),\n                data: [\n                    d,\n                    {\n                        data: {\n                            other: true,\n                            value: total - value,\n                            name: d.data.name\n                        }\n                    }\n                ]\n            };\n        });\n    }\n    getTotal() {\n        return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nPieGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridComponent, selector: \"ngx-charts-pie-grid\", inputs: { designatedTotal: \"designatedTotal\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", minWidth: \"minWidth\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: [\"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-grid', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"] }]\n        }], propDecorators: { designatedTotal: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieChartModule {\n}\nPieChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPieChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, declarations: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent], imports: [ChartCommonModule], exports: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent] });\nPieChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ],\n                    exports: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ]\n                }]\n        }] });\n\nclass PolarChartModule {\n}\nPolarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPolarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, declarations: [PolarChartComponent, PolarSeriesComponent], imports: [ChartCommonModule, PieChartModule, LineChartModule], exports: [PolarChartComponent, PolarSeriesComponent] });\nPolarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, imports: [[ChartCommonModule, PieChartModule, LineChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, LineChartModule],\n                    declarations: [PolarChartComponent, PolarSeriesComponent],\n                    exports: [PolarChartComponent, PolarSeriesComponent]\n                }]\n        }] });\n\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n    return text.split('').reduce((acc, curr) => {\n        const width = fontFamilyKey[curr] || defaultWidth;\n        return acc + width;\n    }, 0);\n}\n\nconst VERDANA_FONT_WIDTHS_16_PX = {\n    '0': 10,\n    '1': 10,\n    '2': 10,\n    '3': 10,\n    '4': 10,\n    '5': 10,\n    '6': 10,\n    '7': 10,\n    '8': 10,\n    '9': 10,\n    A: 11,\n    B: 11,\n    C: 11,\n    D: 12,\n    E: 10,\n    F: 9,\n    G: 12,\n    H: 12,\n    I: 7,\n    J: 7,\n    K: 11,\n    L: 9,\n    M: 13,\n    N: 12,\n    O: 13,\n    P: 10,\n    Q: 13,\n    R: 11,\n    S: 11,\n    T: 10,\n    U: 12,\n    V: 11,\n    W: 16,\n    X: 11,\n    Y: 10,\n    Z: 11,\n    a: 10,\n    b: 10,\n    c: 8,\n    d: 10,\n    e: 10,\n    f: 6,\n    g: 10,\n    h: 10,\n    i: 4,\n    j: 6,\n    k: 9,\n    l: 4,\n    m: 16,\n    n: 10,\n    o: 10,\n    p: 10,\n    q: 10,\n    r: 7,\n    s: 8,\n    t: 6,\n    u: 10,\n    v: 9,\n    w: 13,\n    x: 9,\n    y: 9,\n    z: 8,\n    '!': 6,\n    '@': 16,\n    '#': 13,\n    $: 10,\n    '%': 17,\n    '^': 13,\n    '&': 12,\n    '*': 10,\n    '(': 7,\n    ')': 7,\n    _: 10,\n    '-': 7,\n    '+': 13,\n    '=': 13,\n    ',': 6,\n    '.': 6,\n    '/': 7,\n    \"'\": 4,\n    ':': 7,\n    '|': 7,\n    '?': 9,\n    ';': 7,\n    '<': 13,\n    '>': 13\n};\n\nclass CardComponent {\n    constructor(element, cd, zone, platformId) {\n        this.cd = cd;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.value = '';\n        this.textFontSize = 12;\n        this.textTransform = '';\n        this.initialized = false;\n        this.bandHeight = 10;\n        this.textPadding = [10, 20, 5, 20];\n        this.labelFontSize = 15;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR();\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            cancelAnimationFrame(this.animationReq);\n        }\n    }\n    update() {\n        this.zone.run(() => {\n            const hasValue = this.data && typeof this.data.value !== 'undefined';\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n            this.transform = `translate(${this.x} , ${this.y})`;\n            this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n            this.cardWidth = Math.max(0, this.width);\n            this.cardHeight = Math.max(0, this.height);\n            this.label = this.label ? this.label : this.data.name;\n            const cardData = {\n                label: this.label,\n                data: this.data,\n                value: this.data.value\n            };\n            this.formattedLabel = labelFormatting(cardData);\n            this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n            const value = hasValue ? valueFormatting(cardData) : '';\n            this.value = this.paddedValue(value);\n            this.setPadding();\n            this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n            setTimeout(() => {\n                if (isPlatformBrowser(this.platformId)) {\n                    this.scaleText();\n                }\n                this.value = value;\n                if (hasValue && !this.initialized) {\n                    setTimeout(() => this.startCount(), 20);\n                }\n            }, 8);\n        });\n    }\n    paddedValue(value) {\n        if (this.medianSize && this.medianSize > value.length) {\n            value += '\\u2007'.repeat(this.medianSize - value.length);\n        }\n        return value;\n    }\n    startCount() {\n        if (!this.initialized && this.animations) {\n            cancelAnimationFrame(this.animationReq);\n            const val = this.data.value;\n            const decs = decimalChecker(val);\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const callback = ({ value, finished }) => {\n                this.zone.run(() => {\n                    value = finished ? val : value;\n                    this.value = valueFormatting({ label: this.label, data: this.data, value });\n                    if (!finished) {\n                        this.value = this.paddedValue(this.value);\n                    }\n                    this.cd.markForCheck();\n                });\n            };\n            this.animationReq = count(0, val, decs, 1, callback);\n            this.initialized = true;\n        }\n    }\n    scaleText() {\n        this.zone.run(() => {\n            const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n            if (width === 0 || height === 0) {\n                return;\n            }\n            const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n            const availableWidth = this.cardWidth - 2 * textPadding;\n            const availableHeight = this.cardHeight / 3;\n            const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n            this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n            this.labelFontSize = Math.min(this.textFontSize, 15);\n            this.setPadding();\n            this.cd.markForCheck();\n        });\n    }\n    scaleTextSSR() {\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n        const height = 18;\n        const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n        const availableWidth = this.cardWidth - 2 * textPadding;\n        const availableHeight = this.cardHeight / 3;\n        const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n        this.labelFontSize = Math.min(this.textFontSize, 15);\n        this.setPadding();\n    }\n    setPadding() {\n        this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        const padding = this.cardHeight / 2;\n        this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n        this.textPadding[2] = padding - this.labelFontSize;\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n}\nCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: { color: \"color\", bandColor: \"bandColor\", textColor: \"textColor\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", data: \"data\", medianSize: \"medianSize\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { color: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], medianSize: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n    // deprecated, use d3.color()\n    return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n    const color = d3_color.rgb(value);\n    const { r, g, b, opacity } = color;\n    if (opacity === 0) {\n        return color.toString();\n    }\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    const depth = yiq >= 128 ? -0.8 : 0.8;\n    return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({ r, g, b }, percent) {\n    const t = percent < 0 ? 0 : 255;\n    const p = percent < 0 ? percent * -1 : percent;\n    r = Math.round((t - r) * p) + r;\n    g = Math.round((t - g) * p) + g;\n    b = Math.round((t - b) * p) + b;\n    return `rgb(${r}, ${g}, ${b})`;\n}\n\nclass CardSeriesComponent {\n    constructor() {\n        this.innerPadding = 15;\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.data.length > 2) {\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const sortedLengths = this.data\n                .map(d => {\n                const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n                return hasValue\n                    ? valueFormatting({\n                        data: d.data,\n                        label: d ? d.data.name : '',\n                        value: d && d.data ? d.data.value : ''\n                    }).length\n                    : 0;\n            })\n                .sort((a, b) => b - a);\n            const idx = Math.ceil(this.data.length / 2);\n            this.medianSize = sortedLengths[idx];\n        }\n        const cards = this.getCards();\n        this.cards = cards.filter(d => d.data.value !== null);\n        this.emptySlots = cards.filter(d => d.data.value === null);\n    }\n    getCards() {\n        const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n        const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n        return this.data.map((d, index) => {\n            let label = d.data.name;\n            if (label && label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label ? label.toLocaleString() : label;\n            }\n            const value = d.data.value;\n            const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n            const color = this.cardColor || valueColor || '#000';\n            return {\n                x: d.x,\n                y: d.y,\n                width: d.width - xPadding,\n                height: d.height - yPadding,\n                color,\n                bandColor: this.bandColor || valueColor,\n                textColor: this.textColor || invertColor(color),\n                label,\n                data: d.data,\n                tooltipText: `${label}: ${value}`\n            };\n        });\n    }\n    trackBy(index, card) {\n        return card.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nCardSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCardSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", innerPadding: \"innerPadding\", cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `, isInline: true, components: [{ type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: [\"color\", \"bandColor\", \"textColor\", \"x\", \"y\", \"width\", \"height\", \"label\", \"data\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card-series]',\n                    template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass NumberCardComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.innerPadding = 15;\n        this.margin = [10, 10, 10, 10];\n    }\n    get clickable() {\n        return !!this.select.observers.length;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        const size = gridSize(this.dims, this.results.length, 150);\n        const N = size[0] * size[1];\n        const data = this.results.slice();\n        while (data.length < N) {\n            data.push({ value: null });\n        }\n        this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nNumberCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nNumberCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NumberCardComponent, selector: \"ngx-charts-number-card\", inputs: { cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", innerPadding: \"innerPadding\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", designatedTotal: \"designatedTotal\" }, usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: [\"data\", \"dims\", \"colors\", \"innerPadding\", \"cardColor\", \"bandColor\", \"emptyColor\", \"textColor\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-number-card', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"] }]\n        }], propDecorators: { cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], designatedTotal: [{\n                type: Input\n            }] } });\n\nclass NumberCardModule {\n}\nNumberCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNumberCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, declarations: [CardComponent, CardSeriesComponent, NumberCardComponent], imports: [ChartCommonModule], exports: [CardComponent, CardSeriesComponent, NumberCardComponent] });\nNumberCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n                    exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n                }]\n        }] });\n\nclass TreeMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.orientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n        const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n        const cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedValue = this.valueFormatting(cellData.value);\n        this.formattedLabel = labelFormatting(cellData);\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n    }\n    update() {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            if (this.animations) {\n                this.loadAnimation();\n            }\n            this.initialized = true;\n        }\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n        this.animateToCurrentForm();\n    }\n    getTextColor() {\n        return invertColor(this.fill);\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        if (this.animations) {\n            node\n                .transition()\n                .duration(750)\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n        else {\n            node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n        }\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n}\nTreeMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: { data: \"data\", fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", value: \"value\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell]',\n                    template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapCellSeriesComponent {\n    constructor() {\n        this.gradient = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.styleTypes = StyleTypes;\n        this.placementTypes = PlacementTypes;\n    }\n    ngOnChanges(changes) {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        return this.data.children\n            .filter(d => {\n            return d.depth === 1;\n        })\n            .map((d, index) => {\n            const label = d.id;\n            return {\n                data: d.data,\n                x: d.x0,\n                y: d.y0,\n                width: d.x1 - d.x0,\n                height: d.y1 - d.y0,\n                fill: this.colors.getColor(label),\n                label,\n                value: d.value\n            };\n        });\n    }\n    getTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nTreeMapCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: [\"data\", \"fill\", \"x\", \"y\", \"width\", \"height\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.domain = this.getDomain();\n        this.treemap = treemap().size([this.dims.width, this.dims.height]);\n        const rootNode = {\n            name: 'root',\n            value: 0,\n            isRoot: true\n        };\n        const root = stratify()\n            .id(d => {\n            let label = d.name;\n            if (label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label.toLocaleString();\n            }\n            return label;\n        })\n            .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\n            .sum(d => d.value);\n        this.data = this.treemap(root);\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nTreeMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTreeMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapComponent, selector: \"ngx-charts-tree-map\", inputs: { results: \"results\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\" }, outputs: { select: \"select\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: [\"data\", \"dims\", \"colors\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-tree-map', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"] }]\n        }], propDecorators: { results: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass TreeMapModule {\n}\nTreeMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTreeMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent], imports: [ChartCommonModule], exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent] });\nTreeMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n                    exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n                }]\n        }] });\n\nvar ElementType;\n(function (ElementType) {\n    ElementType[\"Value\"] = \"value\";\n    ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.min = 0;\n        this.max = 100;\n        this.value = 0;\n        this.margin = [10, 20, 10, 20];\n        this.valueResizeScale = 1;\n        this.unitsResizeScale = 1;\n        this.valueTextTransform = '';\n        this.valueTranslate = '';\n        this.unitsTextTransform = '';\n        this.unitsTranslate = '';\n        this.barOrientation = BarOrientation;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => {\n            this.scaleText(ElementType.Value);\n            this.scaleText(ElementType.Units);\n        });\n    }\n    update() {\n        super.update();\n        this.hasPreviousValue = this.previousValue !== undefined;\n        this.max = Math.max(this.max, this.value);\n        this.min = Math.min(this.min, this.value);\n        if (this.hasPreviousValue) {\n            this.max = Math.max(this.max, this.previousValue);\n            this.min = Math.min(this.min, this.previousValue);\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.setColors();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n        this.valueTranslate = `translate(0, -15)`;\n        this.unitsTranslate = `translate(0, 15)`;\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR('value');\n            this.scaleTextSSR('units');\n        }\n        else {\n            setTimeout(() => this.scaleText(ElementType.Value), 50);\n            setTimeout(() => this.scaleText(ElementType.Units), 50);\n        }\n    }\n    getValueDomain() {\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        if (this.valueFormatting) {\n            return this.valueFormatting(this.value);\n        }\n        return this.value.toLocaleString();\n    }\n    scaleText(element, repeat = true) {\n        let el;\n        let resizeScale;\n        if (element === ElementType.Value) {\n            el = this.valueTextEl;\n            resizeScale = this.valueResizeScale;\n        }\n        else {\n            el = this.unitsTextEl;\n            resizeScale = this.unitsResizeScale;\n        }\n        const { width, height } = el.nativeElement.getBoundingClientRect();\n        if (width === 0 || height === 0)\n            return;\n        const oldScale = resizeScale;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (resizeScale !== oldScale) {\n            if (element === ElementType.Value) {\n                this.valueResizeScale = resizeScale;\n                this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            else {\n                this.unitsResizeScale = resizeScale;\n                this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            this.cd.markForCheck();\n            if (repeat && isPlatformBrowser(this.platformId)) {\n                setTimeout(() => {\n                    this.scaleText(element, false);\n                }, 50);\n            }\n        }\n    }\n    scaleTextSSR(element) {\n        let resizeScale = 1;\n        const value = element === 'value' ? this.displayValue : this.units;\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n        const height = 25;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (element === 'value') {\n            this.valueResizeScale = resizeScale;\n            this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        else {\n            this.unitsResizeScale = resizeScale;\n            this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        this.cd.markForCheck();\n    }\n    onClick() {\n        this.select.emit({\n            name: 'Value',\n            value: this.value\n        });\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n}\nLinearGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLinearGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LinearGaugeComponent, selector: \"ngx-charts-linear-gauge\", inputs: { min: \"min\", max: \"max\", value: \"value\", units: \"units\", previousValue: \"previousValue\", valueFormatting: \"valueFormatting\" }, viewQueries: [{ propertyName: \"valueTextEl\", first: true, predicate: [\"valueTextEl\"], descendants: true }, { propertyName: \"unitsTextEl\", first: true, predicate: [\"unitsTextEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-linear-gauge', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"] }]\n        }], propDecorators: { min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], previousValue: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], valueTextEl: [{\n                type: ViewChild,\n                args: ['valueTextEl']\n            }], unitsTextEl: [{\n                type: ViewChild,\n                args: ['unitsTextEl']\n            }] } });\n\nclass GaugeArcComponent {\n    constructor() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    tooltipText(arc) {\n        const label = formatLabel(arc.data.name);\n        let val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc.data.value);\n        }\n        else {\n            val = formatLabel(arc.data.value);\n        }\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n}\nGaugeArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: { backgroundArc: \"backgroundArc\", valueArc: \"valueArc\", cornerRadius: \"cornerRadius\", colors: \"colors\", isActive: \"isActive\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-arc]',\n                    template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { backgroundArc: [{\n                type: Input\n            }], valueArc: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GaugeAxisComponent {\n    constructor() {\n        this.rotate = '';\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.rotationAngle = -90 + this.startAngle;\n        this.rotate = `rotate(${this.rotationAngle})`;\n        this.ticks = this.getTicks();\n    }\n    getTicks() {\n        const bigTickSegment = this.angleSpan / this.bigSegments;\n        const smallTickSegment = bigTickSegment / this.smallSegments;\n        const tickLength = 20;\n        const ticks = {\n            big: [],\n            small: []\n        };\n        const startDistance = this.radius + 10;\n        const textDist = startDistance + tickLength + 10;\n        for (let i = 0; i <= this.bigSegments; i++) {\n            const angleDeg = i * bigTickSegment;\n            const angle = (angleDeg * Math.PI) / 180;\n            const textAnchor = this.getTextAnchor(angleDeg);\n            let skip = false;\n            if (i === 0 && this.angleSpan === 360) {\n                skip = true;\n            }\n            if (!skip) {\n                let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n                if (this.tickFormatting) {\n                    text = this.tickFormatting(text);\n                }\n                ticks.big.push({\n                    line: this.getTickPath(startDistance, tickLength, angle),\n                    textAnchor,\n                    text,\n                    textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n                });\n            }\n            if (i === this.bigSegments) {\n                continue;\n            }\n            for (let j = 1; j <= this.smallSegments; j++) {\n                const smallAngleDeg = angleDeg + j * smallTickSegment;\n                const smallAngle = (smallAngleDeg * Math.PI) / 180;\n                ticks.small.push({\n                    line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n                });\n            }\n        }\n        return ticks;\n    }\n    getTextAnchor(angle) {\n        // [0, 45] = 'middle';\n        // [46, 135] = 'start';\n        // [136, 225] = 'middle';\n        // [226, 315] = 'end';\n        angle = (this.startAngle + angle) % 360;\n        let textAnchor = TextAnchor.Middle;\n        if (angle > 45 && angle <= 135) {\n            textAnchor = TextAnchor.Start;\n        }\n        else if (angle > 225 && angle <= 315) {\n            textAnchor = TextAnchor.End;\n        }\n        return textAnchor;\n    }\n    getTickPath(startDistance, tickLength, angle) {\n        const y1 = startDistance * Math.sin(angle);\n        const y2 = (startDistance + tickLength) * Math.sin(angle);\n        const x1 = startDistance * Math.cos(angle);\n        const x2 = (startDistance + tickLength) * Math.cos(angle);\n        const points = [\n            { x: x1, y: y1 },\n            { x: x2, y: y2 }\n        ];\n        const lineGenerator = line()\n            .x(d => d.x)\n            .y(d => d.y);\n        return lineGenerator(points);\n    }\n}\nGaugeAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: { bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", min: \"min\", max: \"max\", angleSpan: \"angleSpan\", startAngle: \"startAngle\", radius: \"radius\", valueScale: \"valueScale\", tickFormatting: \"tickFormatting\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-axis]',\n                    template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], valueScale: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }] } });\n\nclass GaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.min = 0;\n        this.max = 100;\n        this.bigSegments = 10;\n        this.smallSegments = 5;\n        this.showAxis = true;\n        this.startAngle = -120;\n        this.angleSpan = 240;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.showText = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.resizeScale = 1;\n        this.rotation = '';\n        this.textTransform = 'scale(1, 1)';\n        this.cornerRadius = 10;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => this.scaleText());\n    }\n    update() {\n        super.update();\n        if (!this.showAxis) {\n            if (!this.margin) {\n                this.margin = [10, 20, 10, 20];\n            }\n        }\n        else {\n            if (!this.margin) {\n                this.margin = [60, 100, 60, 100];\n            }\n        }\n        // make the starting angle positive\n        if (this.startAngle < 0) {\n            this.startAngle = (this.startAngle % 360) + 360;\n        }\n        this.angleSpan = Math.min(this.angleSpan, 360);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.domain = this.getDomain();\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n        this.arcs = this.getArcs();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.rotation = `rotate(${this.startAngle})`;\n        setTimeout(() => this.scaleText(), 50);\n    }\n    getArcs() {\n        const arcs = [];\n        const availableRadius = this.outerRadius * 0.7;\n        const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n        const arcWidth = radiusPerArc * 0.7;\n        this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n        this.cornerRadius = Math.floor(arcWidth / 2);\n        let i = 0;\n        for (const d of this.results) {\n            const outerRadius = this.outerRadius - i * radiusPerArc;\n            const innerRadius = outerRadius - arcWidth;\n            const backgroundArc = {\n                endAngle: (this.angleSpan * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: this.max,\n                    name: d.name\n                }\n            };\n            const valueArc = {\n                endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: d.value,\n                    name: d.name\n                }\n            };\n            const arc = {\n                backgroundArc,\n                valueArc\n            };\n            arcs.push(arc);\n            i++;\n        }\n        return arcs;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    getValueDomain() {\n        const values = this.results.map(d => d.value);\n        const dataMin = Math.min(...values);\n        const dataMax = Math.max(...values);\n        if (this.min !== undefined) {\n            this.min = Math.min(this.min, dataMin);\n        }\n        else {\n            this.min = dataMin;\n        }\n        if (this.max !== undefined) {\n            this.max = Math.max(this.max, dataMax);\n        }\n        else {\n            this.max = dataMax;\n        }\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n        if (this.textValue && 0 !== this.textValue.length) {\n            return this.textValue.toLocaleString();\n        }\n        if (this.valueFormatting) {\n            return this.valueFormatting(value);\n        }\n        return value.toLocaleString();\n    }\n    scaleText(repeat = true) {\n        if (!this.showText) {\n            return;\n        }\n        const { width } = this.textEl.nativeElement.getBoundingClientRect();\n        const oldScale = this.resizeScale;\n        if (width === 0) {\n            this.resizeScale = 1;\n        }\n        else {\n            const availableSpace = this.textRadius;\n            this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n        }\n        if (this.resizeScale !== oldScale) {\n            this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(() => this.scaleText(false), 50);\n            }\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            colors: this.colors,\n            domain: this.domain,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n    trackBy(index, item) {\n        return item.valueArc.data.name;\n    }\n}\nGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeComponent, selector: \"ngx-charts-gauge\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", min: \"min\", max: \"max\", textValue: \"textValue\", units: \"units\", bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", results: \"results\", showAxis: \"showAxis\", startAngle: \"startAngle\", angleSpan: \"angleSpan\", activeEntries: \"activeEntries\", axisTickFormatting: \"axisTickFormatting\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", showText: \"showText\", margin: \"margin\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: [\"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"valueFormatting\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: [\"bigSegments\", \"smallSegments\", \"min\", \"max\", \"angleSpan\", \"startAngle\", \"radius\", \"valueScale\", \"tickFormatting\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-gauge', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], textValue: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], showAxis: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], axisTickFormatting: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], showText: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl']\n            }] } });\n\nclass GaugeModule {\n}\nGaugeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGaugeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent], imports: [ChartCommonModule, PieChartModule, BarChartModule], exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent] });\nGaugeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, imports: [[ChartCommonModule, PieChartModule, BarChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, BarChartModule],\n                    declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n                    exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n                }]\n        }] });\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n    // IE11 fix\n    // Ref: https://github.com/swimlane/ngx-charts/issues/386\n    if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n        SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n    }\n}\n\nclass NgxChartsModule {\n    constructor() {\n        ngxChartsPolyfills();\n    }\n}\nNgxChartsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxChartsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, exports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\nNgxChartsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, imports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        ChartCommonModule,\n                        AreaChartModule,\n                        BarChartModule,\n                        BoxChartModule,\n                        BubbleChartModule,\n                        HeatMapModule,\n                        LineChartModule,\n                        PolarChartModule,\n                        NumberCardModule,\n                        PieChartModule,\n                        TreeMapModule,\n                        GaugeModule\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\n\nfunction tickFormat(fieldType, groupByType) {\n    return function (label) {\n        if (label === 'No Value' || label === 'Other') {\n            return label;\n        }\n        if (fieldType === 'date' && groupByType === 'groupBy') {\n            const formatter = timeFormat('MM/DD/YYYY');\n            return formatter(label);\n        }\n        return label.toString();\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getTickLines, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n"],"mappings":"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CAAC,CAC7D,CAAC,CACL,CAAC;EACL;EAAAk1B,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA3+U0Gx8B,EAAE,CAAAy8B,iBAAA,CA2+UjBw0B,8BAA8B,EAAc,CAAC;IAC5H3/C,IAAI,EAAEpR,SAAS;IACfy1B,IAAI,EAAE,CAAC;MAAE+G,QAAQ,EAAE,oCAAoC;MAAEn4B,QAAQ,EAAG;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAE+3B,aAAa,EAAEn8B,iBAAiB,CAACw8B,IAAI;MAAE8F,eAAe,EAAE/hC,uBAAuB,CAACgiC,MAAM;MAAE/tB,UAAU,EAAE,CACjFlT,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFiO,OAAO,EAAE,CAAC;QACVrC,SAAS,EAAE;MACf,CAAC,CAAC,EACF3L,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEiO,OAAO,EAAE,CAAC;QAAErC,SAAS,EAAE;MAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC,CACL;MAAE8uB,MAAM,EAAE,CAAC,woDAAwoD;IAAE,CAAC;EACnqD,CAAC,CAAC,QAAkB;IAAEvjB,MAAM,EAAE,CAAC;MACvBxH,IAAI,EAAEjR;IACV,CAAC,CAAC;IAAEklD,WAAW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OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFiO,OAAO,EAAE;IACb,CAAC,CAAC,EACFhO,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MACfiO,OAAO,EAAE;IACb,CAAC,CAAC,CAAC,CACN,CAAC,CACL,CAAC;EACL;EAAA6yB,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA5wZ0Gx8B,EAAE,CAAAy8B,iBAAA,CA4wZjB07B,oBAAoB,EAAc,CAAC;IAClH7mD,IAAI,EAAEpR,SAAS;IACfy1B,IAAI,EAAE,CAAC;MAAE+G,QAAQ,EAAE,yBAAyB;MAAEn4B,QAAQ,EAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEk+B,eAAe,EAAE/hC,uBAAuB,CAACgiC,MAAM;MAAEpG,aAAa,EAAEn8B,iBAAiB,CAACw8B,IAAI;MAAEhoB,UAAU,EAAE,CACjFlT,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFiO,OAAO,EAAE;MACb,CAAC,CAAC,EACFhO,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QACfiO,OAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}