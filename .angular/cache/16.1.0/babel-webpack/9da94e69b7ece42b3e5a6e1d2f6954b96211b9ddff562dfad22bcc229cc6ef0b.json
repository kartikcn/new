{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../providers/equipment.provider\";\nimport * as i2 from \"../services/equipment.services\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/enum.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"primeng/table\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/dropdown\";\nimport * as i10 from \"primeng/toast\";\nimport * as i11 from \"primeng/panel\";\nimport * as i12 from \"primeng/confirmdialog\";\nimport * as i13 from \"primeng/paginator\";\nfunction EquipmentComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function EquipmentComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAdd());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EquipmentComponent_ng_template_5_ng_template_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 38);\n    i0.ɵɵlistener(\"onChange\", function EquipmentComponent_ng_template_5_ng_template_50_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const filter_r8 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r8($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r7)(\"options\", ctx_r6.enumStatusData)(\"showClear\", true);\n  }\n}\nfunction EquipmentComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 14);\n    i0.ɵɵelementStart(2, \"th\", 15)(3, \"div\", 16)(4, \"div\", 17)(5, \"p\", 18);\n    i0.ɵɵtext(6, \"Asset Code \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 19);\n    i0.ɵɵelement(8, \"p-sortIcon\", 20)(9, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 22)(11, \"div\", 16)(12, \"div\", 17)(13, \"p\", 18);\n    i0.ɵɵtext(14, \"Asset Standard \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 19);\n    i0.ɵɵelement(16, \"p-sortIcon\", 23)(17, \"p-columnFilter\", 24);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 25)(19, \"div\", 16)(20, \"div\", 17)(21, \"p\", 18);\n    i0.ɵɵtext(22, \"Building Code \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 19);\n    i0.ɵɵelement(24, \"p-sortIcon\", 26)(25, \"p-columnFilter\", 27);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\", 28)(27, \"div\", 16)(28, \"div\", 17)(29, \"p\", 18);\n    i0.ɵɵtext(30, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 19);\n    i0.ɵɵelement(32, \"p-sortIcon\", 29)(33, \"p-columnFilter\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"th\", 31)(35, \"div\", 16)(36, \"div\", 17)(37, \"p\", 18);\n    i0.ɵɵtext(38, \"Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 19);\n    i0.ɵɵelement(40, \"p-sortIcon\", 32)(41, \"p-columnFilter\", 33);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(42, \"th\", 34)(43, \"div\", 16)(44, \"div\", 17)(45, \"p\", 18);\n    i0.ɵɵtext(46, \"Status\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(47, \"div\", 19);\n    i0.ɵɵelement(48, \"p-sortIcon\", 35);\n    i0.ɵɵelementStart(49, \"p-columnFilter\", 36);\n    i0.ɵɵtemplate(50, EquipmentComponent_ng_template_5_ng_template_50_Template, 1, 3, \"ng-template\", 37);\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nfunction EquipmentComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 39)(1, \"td\", 14)(2, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function EquipmentComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const eq_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onEdit(eq_r11.eqId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function EquipmentComponent_ng_template_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const eq_r11 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onDelete(eq_r11));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const eq_r11 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", eq_r11);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(eq_r11.eqCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r11.eqStd);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r11.blName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r11.floorName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(eq_r11.rmName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.getEnumValue(eq_r11.status));\n  }\n}\nfunction EquipmentComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 7);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let EquipmentComponent = /*#__PURE__*/(() => {\n  class EquipmentComponent {\n    constructor(eqProvider, eqService, messageService, enumsrv, confirmationService, router) {\n      this.eqProvider = eqProvider;\n      this.eqService = eqService;\n      this.messageService = messageService;\n      this.enumsrv = enumsrv;\n      this.confirmationService = confirmationService;\n      this.router = router;\n      this.eqData = [];\n      this.loading = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.enumList = []; //Enums\n      this.enumClonedList = [];\n      this.enumEq = [];\n      this.enumStatus = [];\n      this.enumStatusData = [];\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"eqId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n    }\n    ngOnInit() {\n      this.loadEnums();\n      this.loadRecords();\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumEq = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'eq'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'eq'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n        this.enumStatusData = this.enumStatus;\n        // this.enumStatusData.unshift(new Enums(0, \"\", \"\", 'Make a selection'));\n      }, error => {});\n    }\n    loadRecords() {\n      this.loading = true;\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.eqService.getAllEquipmentsPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFiltered = false;\n          this.eqData = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.eqData = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    // onAdd() {\n    //   const dialogConfig = new MatDialogConfig();\n    //   dialogConfig.disableClose = true;\n    //   dialogConfig.autoFocus = false;\n    //   dialogConfig.width = '900px';\n    //   dialogConfig.data = {\n    //     isEdit: false,\n    //     eqId: null,\n    //     newRecord: true\n    //   };\n    //   this.eqProvider.openDialog(dialogConfig);\n    //   this.eqProvider.onDialogueClosed.subscribe((result: any) => {\n    //       this.loadRecords();\n    //   });\n    // }\n    // onEdit(id: any) {\n    //   const dialogConfig = new MatDialogConfig();\n    //   dialogConfig.disableClose = true;\n    //   dialogConfig.autoFocus = true;\n    //   dialogConfig.width = '900px';\n    //   dialogConfig.data = {\n    //     eqId: id,\n    //     isEdit: true,\n    //     newRecord: false\n    //   };\n    //   this.eqProvider.openDialog(dialogConfig);\n    //   this.eqProvider.onDialogueClosed.subscribe((result: any) => {\n    //     this.messageService.clear();\n    //     if(result) {\n    //       this.messageService.add({ key: 'eqSave', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n    //     this.loadRecords();\n    //     }\n    //   });\n    // }\n    onEdit(eqId) {\n      this.router.navigate(['/asset-details'], {\n        queryParams: {\n          eqId: eqId\n        },\n        skipLocationChange: true\n      });\n    }\n    onAdd() {\n      this.router.navigate(['/asset-details'], {\n        queryParams: {\n          eqId: null\n        },\n        skipLocationChange: true\n      });\n    }\n    onDelete(eq) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ' + eq.eqCode + '?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deleteEquipment(eq.eqId);\n        },\n        key: \"mygrid\"\n      });\n    }\n    deleteEquipment(id) {\n      this.eqService.deleteById(id).subscribe(res => {\n        this.messageService.clear();\n        if (res != null && res.code == 200) {\n          this.messageService.add({\n            key: 'eqSave',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadRecords();\n        } else {\n          this.messageService.add({\n            key: 'eqSave',\n            severity: 'error',\n            summary: 'error',\n            detail: res.text\n          });\n        }\n      }, error => {});\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        this.filterCriteria = {};\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {};\n            if (field == \"eqStd\") {\n              filterCriteria = {\n                fieldName: \"eqStd.eqStd\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"blName\") {\n              filterCriteria = {\n                fieldName: \"bl.blName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"flName\") {\n              filterCriteria = {\n                fieldName: \"fl.flName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"rmName\") {\n              filterCriteria = {\n                fieldName: \"rm.rmName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    getEnumValue(enumKey) {\n      return this.enumStatus.find(t => t.enumKey == enumKey).enumValue;\n    }\n    static #_ = this.ɵfac = function EquipmentComponent_Factory(t) {\n      return new (t || EquipmentComponent)(i0.ɵɵdirectiveInject(i1.EquipmentDialogueProvider), i0.ɵɵdirectiveInject(i2.EquipmentService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.EnumService), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i5.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EquipmentComponent,\n      selectors: [[\"app-equipment\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 13,\n      vars: 10,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Asset Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", 3, \"value\", \"paginator\", \"scrollable\", \"rowHover\", \"onFilter\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"eqSave\", \"position\", \"top-right\"], [\"key\", \"eqDelete\", \"position\", \"top-center\"], [\"key\", \"mygrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"6rem\"], [\"pSortableColumn\", \"eqCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"eqCode\"], [\"type\", \"text\", \"field\", \"eqCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"eqStd\"], [\"field\", \"eqStd\"], [\"type\", \"text\", \"field\", \"eqStd\", \"display\", \"menu\"], [\"pSortableColumn\", \"blName\"], [\"field\", \"blName\"], [\"type\", \"text\", \"field\", \"blName\", \"display\", \"menu\"], [\"pSortableColumn\", \"floorName\"], [\"field\", \"floorName\"], [\"type\", \"text\", \"field\", \"floorName\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmName\"], [\"field\", \"rmName\"], [\"type\", \"text\", \"field\", \"rmName\", \"display\", \"menu\"], [\"pSortableColumn\", \"status\"], [\"field\", \"status\"], [\"field\", \"status\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Type\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"]],\n      template: function EquipmentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, EquipmentComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4);\n          i0.ɵɵlistener(\"onFilter\", function EquipmentComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(5, EquipmentComponent_ng_template_5_Template, 51, 0, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, EquipmentComponent_ng_template_6_Template, 16, 7, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, EquipmentComponent_ng_template_7_Template, 3, 1, \"ng-template\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 8)(9, \"p-paginator\", 9);\n          i0.ɵɵlistener(\"onPageChange\", function EquipmentComponent_Template_p_paginator_onPageChange_9_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(10, \"p-toast\", 10)(11, \"p-toast\", 11)(12, \"p-confirmDialog\", 12);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.eqData)(\"paginator\", false)(\"scrollable\", true)(\"rowHover\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0));\n        }\n      },\n      dependencies: [i6.NgControlStatus, i6.NgModel, i3.PrimeTemplate, i7.Table, i7.SortableColumn, i7.SelectableRow, i7.SortIcon, i7.ColumnFilter, i8.ButtonDirective, i9.Dropdown, i10.Toast, i11.Panel, i12.ConfirmDialog, i13.Paginator]\n    });\n  }\n  return EquipmentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}