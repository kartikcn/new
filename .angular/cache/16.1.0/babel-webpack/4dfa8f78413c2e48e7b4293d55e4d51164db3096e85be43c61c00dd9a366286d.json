{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../work-request/service/add-work-request.services\";\nimport * as i5 from \"src/app/ui/employee/services/employee.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"src/app/services/enum.service\";\nimport * as i8 from \"src/app/services/breakpoint.service\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"primeng/api\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/calendar\";\nimport * as i13 from \"primeng/button\";\nimport * as i14 from \"primeng/panel\";\nimport * as i15 from \"primeng/checkbox\";\nfunction SlaEscalationAnalysisComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 21)(1, \"tr\")(2, \"td\", 22)(3, \"div\", 23)(4, \"div\", 24)(5, \"div\", 25)(6, \"label\", 26);\n    i0.ɵɵtext(7, \"From Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 27);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 22)(10, \"div\", 23)(11, \"div\", 24)(12, \"div\", 25)(13, \"label\", 26);\n    i0.ɵɵtext(14, \"To Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 28);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 29)(17, \"div\", 23)(18, \"label\", 26);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 30);\n    i0.ɵɵlistener(\"change\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.scrollToEndBl());\n    })(\"search\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.searchBl($event));\n    })(\"open\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"td\", 29)(22, \"div\", 23)(23, \"label\", 26);\n    i0.ɵɵtext(24, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ng-select\", 31);\n    i0.ɵɵlistener(\"change\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_change_25_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_scrollToEnd_25_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.scrollToEndFl());\n    })(\"search\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_search_25_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.searchFl($event));\n    })(\"open\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_open_25_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"td\", 29)(27, \"div\", 23)(28, \"label\", 26);\n    i0.ɵɵtext(29, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"ng-select\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"td\", 33)(32, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_table_3_Template_button_click_32_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_table_3_Template_button_click_33_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onClear());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.filterPanel.valid);\n  }\n}\nfunction SlaEscalationAnalysisComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\")(1, \"tr\")(2, \"td\", 36)(3, \"div\", 23)(4, \"div\", 24)(5, \"div\", 25)(6, \"label\", 26);\n    i0.ɵɵtext(7, \"From Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 27);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 36)(10, \"div\", 23)(11, \"div\", 24)(12, \"div\", 25)(13, \"label\", 26);\n    i0.ɵɵtext(14, \"To Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 28);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 36)(17, \"div\", 23)(18, \"label\", 26);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 30);\n    i0.ɵɵlistener(\"change\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.scrollToEndBl());\n    })(\"search\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.searchBl($event));\n    })(\"open\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"tr\")(22, \"td\", 36)(23, \"div\", 23)(24, \"label\", 26);\n    i0.ɵɵtext(25, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"ng-select\", 31);\n    i0.ɵɵlistener(\"change\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_change_26_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_scrollToEnd_26_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.scrollToEndFl());\n    })(\"search\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_search_26_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.searchFl($event));\n    })(\"open\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_open_26_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"td\", 36)(28, \"div\", 23)(29, \"label\", 26);\n    i0.ɵɵtext(30, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"ng-select\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"td\", 36)(33, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_table_4_Template_button_click_33_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_table_4_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.onClear());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.filterPanel.valid);\n  }\n}\nfunction SlaEscalationAnalysisComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 37);\n    i0.ɵɵelementStart(2, \"th\", 38)(3, \"div\", 39)(4, \"div\", 40)(5, \"p\", 41);\n    i0.ɵɵtext(6, \"Request Id \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 42);\n    i0.ɵɵelement(8, \"p-sortIcon\", 43);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 44)(10, \"div\", 39)(11, \"div\", 40)(12, \"p\", 41);\n    i0.ɵɵtext(13, \"Requested For \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 42);\n    i0.ɵɵelement(15, \"p-sortIcon\", 45);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"th\", 46)(17, \"div\", 39)(18, \"div\", 40)(19, \"p\", 41);\n    i0.ɵɵtext(20, \"Asset \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 42);\n    i0.ɵɵelement(22, \"p-sortIcon\", 47)(23, \"p-columnFilter\", 48);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"th\", 49)(25, \"div\", 39)(26, \"div\", 40)(27, \"p\", 41);\n    i0.ɵɵtext(28, \"Requested Date \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 42);\n    i0.ɵɵelement(30, \"p-sortIcon\", 50);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(31, \"th\", 51)(32, \"div\", 39)(33, \"div\", 40)(34, \"p\", 41);\n    i0.ɵɵtext(35, \"Date To Respond\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"div\", 42);\n    i0.ɵɵelement(37, \"p-sortIcon\", 52);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(38, \"th\", 53)(39, \"div\", 39)(40, \"div\", 40)(41, \"p\", 41);\n    i0.ɵɵtext(42, \"Date Responded\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"div\", 42);\n    i0.ɵɵelement(44, \"p-sortIcon\", 54);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(45, \"th\", 55)(46, \"div\", 39)(47, \"div\", 40)(48, \"p\", 41);\n    i0.ɵɵtext(49, \"Date To Complete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(50, \"div\", 42);\n    i0.ɵɵelement(51, \"p-sortIcon\", 56);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(52, \"th\", 57)(53, \"div\", 39)(54, \"div\", 40)(55, \"p\", 41);\n    i0.ɵɵtext(56, \"Date Completed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(57, \"div\", 42);\n    i0.ɵɵelement(58, \"p-sortIcon\", 58);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction SlaEscalationAnalysisComponent_ng_template_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 59)(1, \"td\", 37)(2, \"button\", 60);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_ng_template_32_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r30);\n      const wr_r28 = restoredCtx.$implicit;\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onClickView(wr_r28));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const wr_r28 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background\", ctx_r4.getColorCode(wr_r28));\n    i0.ɵɵproperty(\"pSelectableRow\", wr_r28);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background\", \"#ffffff\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(wr_r28.wrId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.getEmployeeFullName(wr_r28.requestedFor));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r28.eqCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 17, wr_r28.dateRequested, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(14, 20, wr_r28.escDateResponded, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r28.escTimeResponded), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(17, 23, wr_r28.dateResponded, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r28.timeResponded), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(20, 26, wr_r28.escDateCompleted, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r28.escTimeCompleted), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(23, 29, wr_r28.dateCompleted, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r28.timeCompleted), \"\");\n  }\n}\nfunction SlaEscalationAnalysisComponent_ng_template_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport class SlaEscalationAnalysisComponent {\n  constructor(blService, formBuilder, datePipe, wrServ, employeeService, router, enumsrv, bps) {\n    this.blService = blService;\n    this.formBuilder = formBuilder;\n    this.datePipe = datePipe;\n    this.wrServ = wrServ;\n    this.employeeService = employeeService;\n    this.router = router;\n    this.enumsrv = enumsrv;\n    this.bps = bps;\n    this.enumBL = [];\n    this.enumAllBl = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.rm_data = [];\n    this.compId = 1;\n    this.allRequestList = [];\n    this.allEmployees = [];\n    this.enumEm = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.totalRecords = 0;\n    this.esctdResponseData = [];\n    this.esctdCompleteData = [];\n    this.esctdCompleteAndResponseData = [];\n    this.selectedData = [];\n    this.responseCheckbox = true;\n    this.completeCheckbox = true;\n    this.completeResponseCheckbox = true;\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumWr = [];\n    this.enumStatus = [];\n    this.showRequestsTypeList = [{\n      label: \"Preventive Maintenance\",\n      value: \"ppm\"\n    }, {\n      label: \"Facilities Helpdesk\",\n      value: \"facilities\"\n    }, {\n      label: \"All\",\n      value: \"all\"\n    }];\n    this.showType = \"facilities\";\n    this.useTabletProtrait = false;\n    this.totalElements = 0;\n    this.paginationObj = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"\"],\n      sortOrder: \"ASC\"\n    };\n    this.pagfilterCriteria = {};\n    this.isFiltered = false;\n    this.selectionFilterData = {};\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.selectedBl = {};\n    this.selectedFl = {};\n    this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n    this.filterPanel = this.formBuilder.group({\n      siteId: [null],\n      blId: [null],\n      flId: [null],\n      dateRequestedFrom: [null],\n      dateRequestedTo: [null],\n      showType: [this.showType]\n    });\n  }\n  ngOnInit() {\n    this.bps.register(this);\n    this.selectedData = [];\n    var date = new Date();\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    this.loadEnums();\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        dateRequestedFrom: firstDay,\n        dateRequestedTo: lastDay,\n        showType: this.showType\n      });\n      this.onSearch();\n    });\n    this.loadAllEmployee();\n  }\n  notify() {\n    this.useTabletProtrait = BreakpointService.useTabletProtrait;\n  }\n  onSearch() {\n    const filterData = {\n      dateRequestedFrom: this.datePipe.transform(this.filterPanel.controls.dateRequestedFrom.value, \"yyyy-MM-dd\"),\n      dateRequestedTo: this.datePipe.transform(this.filterPanel.controls.dateRequestedTo.value, \"yyyy-MM-dd\"),\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      showRequestType: this.filterPanel.controls.showType.value\n    };\n    this.selectionFilterData = {\n      ...filterData\n    };\n    this.loadRecords(filterData);\n  }\n  loadRecords(filterData) {\n    this.allRequestList = [];\n    this.esctdResponseData = [];\n    this.esctdCompleteData = [];\n    this.esctdCompleteAndResponseData = [];\n    this.isFiltered = false;\n    this.selectedData = [];\n    this.isFiltered = false;\n    // this.responseCheckbox = true;\n    // this.completeResponseCheckbox = true;\n    // this.completeCheckbox = true;\n    let data = {\n      ...filterData\n      // ,filterDto: { paginationDTO: this.paginationObj, filterCriteria: this.pagfilterCriteria } \n    };\n\n    this.wrServ.getAllWrByFilter(data).subscribe(res => {\n      this.isFiltered = false;\n      this.allRequestList = [];\n      // let content = res.content ? res.content : [];\n      // this.totalElements = res.totalElements ? res.totalElements : 0;\n      this.allRequestList = res.map(each => {\n        return {\n          ...each,\n          formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n          fromatedDateToRespond: each.escDateResponded ? this.datePipe.transform(each.escDateResponded, 'dd MMM yyyy') + \" \" + this.convertToDisplayTime(each.escTimeResponded) : '',\n          formatedDateResponded: each.dateResponded ? this.datePipe.transform(each.dateResponded, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeResponded) : '',\n          formatedDateToComplete: each.escDateCompleted ? this.datePipe.transform(each.escDateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.escTimeCompleted) : '',\n          formatedDateCompleted: each.dateCompleted ? this.datePipe.transform(each.dateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeCompleted) : '',\n          formatedRequestedFor: this.getEmployeeFullName(each.requestedFor)\n        };\n      });\n      this.esctdResponseData = [];\n      this.esctdCompleteData = [];\n      this.esctdCompleteAndResponseData = [];\n      let currentDate = new Date();\n      this.allRequestList.forEach(item => {\n        const {\n          dateResponded,\n          escDateResponded,\n          dateCompleted,\n          escDateCompleted,\n          timeResponded,\n          timeCompleted,\n          escTimeResponded,\n          escTimeCompleted,\n          status\n        } = item;\n        const isEscalatedForResponse = dateResponded && new Date(dateResponded + 'T' + timeResponded) > new Date(escDateResponded + 'T' + escTimeResponded) || !dateResponded && currentDate > new Date(escDateResponded + 'T' + escTimeResponded);\n        const isEscalatedForComplete = dateCompleted && new Date(dateCompleted + 'T' + timeCompleted) > new Date(escDateCompleted + 'T' + escTimeCompleted) || !dateCompleted && currentDate > new Date(escDateCompleted + 'T' + escTimeCompleted);\n        const statusEnum = this.getEnumById(status);\n        if (isEscalatedForResponse && !isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n          this.esctdResponseData.push(item);\n        }\n        if (isEscalatedForComplete && !isEscalatedForResponse && statusEnum !== \"Cancelled\" && statusEnum !== \"Rejected\") {\n          this.esctdCompleteData.push(item);\n        }\n        if (isEscalatedForResponse && isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n          this.esctdCompleteAndResponseData.push(item);\n        }\n      });\n      this.selectedData = [];\n      this.isFiltered = false;\n      this.esctdResponseData.length > 0 && this.responseCheckbox ? this.selectedData = this.selectedData.concat(this.esctdResponseData) : [];\n      this.isFiltered = false;\n      this.esctdCompleteData.length > 0 && this.completeCheckbox ? this.selectedData = this.selectedData.concat(this.esctdCompleteData) : [];\n      this.isFiltered = false;\n      this.esctdCompleteAndResponseData.length > 0 && this.completeResponseCheckbox ? this.selectedData = this.selectedData.concat(this.esctdCompleteAndResponseData) : [];\n    });\n  }\n  loadAllEmployee() {\n    this.employeeService.getAllEmployeeList().subscribe(res => {\n      if (res) {\n        this.allEmployees = res;\n      } else {\n        this.allEmployees = [];\n      }\n    });\n  }\n  onSelectBlCode($event) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        flId: null\n      });\n    }, 0);\n    if ($event.blId != null && $event.blId != '') {\n      this.selectedBl = $event;\n      this.selectedFl = {};\n    } else {\n      this.selectedBl = {};\n      this.selectedFl = {};\n    }\n  }\n  onSelectFlCode($event) {\n    if ($event.flId != null && $event.flId != '') {\n      this.selectedFl = $event;\n      const blData = {\n        blId: $event.blId,\n        blNameString: $event.blNameString,\n        site: null\n      };\n      this.selectedFl = blData;\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId\n        });\n      }, 10);\n    }\n  }\n  onClear() {\n    this.filterPanel.reset();\n    this.selectedBl = {};\n    this.selectedFl = {};\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        showType: this.showType\n      });\n    }, 10);\n  }\n  getColorCode(data) {\n    var currentDate = new Date();\n    const {\n      dateResponded,\n      escDateResponded,\n      dateCompleted,\n      escDateCompleted,\n      timeResponded,\n      timeCompleted,\n      escTimeResponded,\n      escTimeCompleted\n    } = data;\n    const isEscalatedForResponse = dateResponded && new Date(dateResponded + 'T' + timeResponded).getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime() || !dateResponded && currentDate.getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime();\n    const isEscalatedForComplete = dateCompleted && new Date(dateCompleted + 'T' + timeCompleted).getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime() || !dateCompleted && currentDate.getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime();\n    if (isEscalatedForResponse && !isEscalatedForComplete) {\n      return '#fbae5c';\n    }\n    if (isEscalatedForComplete && !isEscalatedForResponse) {\n      return '#E77471';\n    }\n    if (isEscalatedForResponse && isEscalatedForComplete) {\n      return '#F75D59';\n    }\n    return null;\n  }\n  getEmployeeFullName(id) {\n    if (this.allEmployees) {\n      this.enumEm = this.allEmployees.filter(em => em.emId === id);\n      this.fullName = this.enumEm.map(em => {\n        if (em.firstName.length > 0 && em.lastName.length > 0) {\n          return em.firstName + \" \" + em.lastName + ' - ' + em.emId;\n        } else {\n          return em.firstName + ' - ' + em.emId;\n        }\n      });\n    }\n    return this.fullName;\n  }\n  onClickView(data) {\n    const wrId = data.wrId;\n    const status = data.status;\n    const url = this.router.serializeUrl(this.router.createUrlTree([\"/work-request-details\"], {\n      queryParams: {\n        requestId: wrId,\n        index: 0,\n        action: \"details\",\n        status: status,\n        viewDetails: true,\n        isNavigationFromReport: true\n      }\n    }));\n    window.open(url, '_blank');\n  }\n  updateSelectedData() {\n    // Clear the previously selected data\n    this.selectedData = [];\n    this.isFiltered = false;\n    // Check if the response checkbox is selected\n    if (this.responseCheckbox) {\n      this.selectedData = this.selectedData.concat(this.esctdResponseData);\n    }\n    // Check if the complete checkbox is selected\n    if (this.completeCheckbox) {\n      this.selectedData = this.selectedData.concat(this.esctdCompleteData);\n    }\n    // Check if the completeResponse checkbox is selected\n    if (this.completeResponseCheckbox) {\n      this.selectedData = this.selectedData.concat(this.esctdCompleteAndResponseData);\n    }\n    // if(!this.responseCheckbox && !this.completeCheckbox && !this.completeResponseCheckbox) {\n    //   this.selectedData = this.allRequestList;\n    // }\n  }\n\n  convertToDisplayTime(value) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n      this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n    });\n  }\n  getEnumById(id) {\n    return this.enumStatus.find(t => t.id === id)?.enumValue;\n  }\n  ngOnDestroy() {\n    this.bps.unregister(this);\n  }\n  onPageChange(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadRecords(this.selectionFilterData);\n  }\n  onInnerFilter(event) {\n    if (this.isFiltered) {\n      this.pagfilterCriteria = {};\n      Object.keys(event.filters).forEach(field => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined && filterValue !== null && filterValue !== '') {\n          if (field == \"wrId\") {\n            this.pagfilterCriteria = {\n              fieldName: \"wr_id\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          } else if (field == \"eqCode\") {\n            this.pagfilterCriteria = {\n              fieldName: \"eq_code\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          } else {\n            this.pagfilterCriteria = {\n              fieldName: field,\n              value: filterValue,\n              matchMode: matchMode\n            };\n          }\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadRecords(this.selectionFilterData);\n    }\n    this.isFiltered = true;\n  }\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blService.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    });\n  }\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blService.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n      this.enumFL = res;\n      this.updateFlList(this.selectedFl);\n    });\n  }\n  searchBl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"blName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndBl();\n  }\n  searchFl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"flName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndFl();\n  }\n  updateBlList(blData) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n  updateFlList(flData) {\n    if (flData.flId) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n    }\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.scrollToEndBl();\n  }\n  onOpenFl() {\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    if (this.selectedBl.blId) {\n      this.filterCriteria = {\n        fieldName: \"bl.blId\",\n        value: this.selectedBl.blId,\n        matchMode: \"equals\",\n        limit: 0,\n        offset: 0\n      };\n    } else {\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n    }\n    this.scrollToEndFl();\n  }\n  static #_ = this.ɵfac = function SlaEscalationAnalysisComponent_Factory(t) {\n    return new (t || SlaEscalationAnalysisComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.AddWorkRequestService), i0.ɵɵdirectiveInject(i5.EmployeeService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.EnumService), i0.ɵɵdirectiveInject(i8.BreakpointService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SlaEscalationAnalysisComponent,\n    selectors: [[\"app-sla-escalation-analysis\"]],\n    inputs: {\n      showType: \"showType\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 34,\n    vars: 16,\n    consts: [[1, \"card\", 2, \"height\", \"90vh\"], [\"header\", \"SLA Escalation Analysis\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"checkbox-grid\", 2, \"flex\", \"auto\", \"margin-top\", \"10px\"], [1, \"checkbox-table\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"margin-left\", \"15px\"], [2, \"width\", \"50px\", \"height\", \"15px\", \"background-color\", \"#fbae5c\"], [1, \"escalation-type-title\"], [\"name\", \"responseCheckbox\", \"id\", \"responseCheckbox\", \"binary\", \"true\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [2, \"display\", \"flex\", \"align-items\", \"center\"], [2, \"width\", \"50px\", \"height\", \"15px\", \"background-color\", \"#E77471\"], [\"name\", \"completeCheckbox\", \"binary\", \"true\", \"id\", \"completeCheckbox\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [2, \"width\", \"50px\", \"height\", \"15px\", \"background-color\", \"#F75D59\"], [\"name\", \"completeResponseCheckbox\", \"binary\", \"true\", \"id\", \"completeResponseCheckbox\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", 3, \"value\", \"paginator\", \"scrollable\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"totalRecords\"], [\"tt\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"width\", \"100%\"], [2, \"width\", \"10%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedFrom\", \"formControlName\", \"dateRequestedFrom\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedTo\", \"formControlName\", \"dateRequestedTo\", \"inputId\", \"icon\", 3, \"showIcon\"], [2, \"width\", \"20%\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"showType\", \"bindLabel\", \"label\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [2, \"width\", \"15%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-button\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-button\", 3, \"click\"], [2, \"width\", \"32%\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"wrId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"wrId\"], [\"pSortableColumn\", \"formatedRequestedFor\"], [\"field\", \"formatedRequestedFor\"], [\"pSortableColumn\", \"eqCode\"], [\"field\", \"eqId\"], [\"type\", \"text\", \"field\", \"eqCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateRequested\"], [\"field\", \"formatedDateRequested\"], [\"pSortableColumn\", \"fromatedDateToRespond\"], [\"field\", \"fromatedDateToRespond\"], [\"pSortableColumn\", \"formatedDateResponded\"], [\"field\", \"formatedDateResponded\"], [\"pSortableColumn\", \"formatedDateToComplete\"], [\"field\", \"formatedDateToComplete\"], [\"pSortableColumn\", \"formatedDateCompleted\"], [\"field\", \"formatedDateCompleted\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"below\", \"matTooltip\", \"View\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"]],\n    template: function SlaEscalationAnalysisComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"form\", 2);\n        i0.ɵɵtemplate(3, SlaEscalationAnalysisComponent_table_3_Template, 34, 13, \"table\", 3);\n        i0.ɵɵtemplate(4, SlaEscalationAnalysisComponent_table_4_Template, 35, 13, \"table\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"table\", 6)(7, \"tr\")(8, \"td\")(9, \"div\", 7);\n        i0.ɵɵelement(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"p\");\n        i0.ɵɵtext(13, \"Escalated For Response\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"p-checkbox\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_14_listener($event) {\n          return ctx.responseCheckbox = $event;\n        })(\"onChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_14_listener() {\n          return ctx.updateSelectedData();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"td\")(16, \"div\", 11);\n        i0.ɵɵelement(17, \"div\", 12);\n        i0.ɵɵelementStart(18, \"div\", 9)(19, \"p\");\n        i0.ɵɵtext(20, \"Escalated For Complete\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"p-checkbox\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_21_listener($event) {\n          return ctx.completeCheckbox = $event;\n        })(\"onChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_21_listener() {\n          return ctx.updateSelectedData();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"td\")(23, \"div\", 11);\n        i0.ɵɵelement(24, \"div\", 14);\n        i0.ɵɵelementStart(25, \"div\", 9)(26, \"p\");\n        i0.ɵɵtext(27, \"Escalated For Response and Complete\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"p-checkbox\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_28_listener($event) {\n          return ctx.completeResponseCheckbox = $event;\n        })(\"onChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_28_listener() {\n          return ctx.updateSelectedData();\n        });\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(29, \"p-table\", 16, 17);\n        i0.ɵɵtemplate(31, SlaEscalationAnalysisComponent_ng_template_31_Template, 59, 0, \"ng-template\", 18);\n        i0.ɵɵtemplate(32, SlaEscalationAnalysisComponent_ng_template_32_Template, 24, 32, \"ng-template\", 19);\n        i0.ɵɵtemplate(33, SlaEscalationAnalysisComponent_ng_template_33_Template, 3, 1, \"ng-template\", 20);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"toggleable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.responseCheckbox);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.completeCheckbox);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.completeResponseCheckbox);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.selectedData)(\"paginator\", true)(\"scrollable\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(15, _c0))(\"rowHover\", false)(\"totalRecords\", ctx.totalRecords);\n      }\n    },\n    dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.NgModel, i9.NgSelectComponent, i10.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.ColumnFilter, i12.Calendar, i13.ButtonDirective, i14.Panel, i15.Checkbox, i3.DatePipe],\n    styles: [\".escalation-type-title[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  margin-bottom: 0px;\\n  font-weight: 500;\\n  margin: 10px 10px 0px 5px;\\n}\\n\\n.filter-button[_ngcontent-%COMP%] {\\n  width: 60px;\\n  margin-left: 5px;\\n  margin-top: 12.2px;\\n}\\n\\n.checkbox-grid[_ngcontent-%COMP%] {\\n  max-height: 60px;\\n}\\n\\n.checkbox-table[_ngcontent-%COMP%] {\\n  width: 60%;\\n}\\n\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n  .checkbox-grid[_ngcontent-%COMP%] {\\n    max-height: 80px;\\n  }\\n  .checkbox-table[_ngcontent-%COMP%] {\\n    width: 90%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svc2xhLWVzY2FsYXRpb24tYW5hbHlzaXMvbW9kYWwvc2xhLWVzY2FsYXRpb24tYW5hbHlzaXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0FBQUo7O0FBRUE7RUFDSSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUNBO0VBQ0ksZ0JBQUE7QUFFSjs7QUFBQTtFQUNJLFVBQUE7QUFHSjs7QUFEQTtFQUNJO0lBQ0ksZ0JBQUE7RUFJTjtFQUZFO0lBQ0ksVUFBQTtFQUlOO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcvc3JjL3Njc3MvdmFyaWFibGVzJztcbi5lc2NhbGF0aW9uLXR5cGUtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBtYXJnaW46IDEwcHggMTBweCAwcHggNXB4XG59XG4uZmlsdGVyLWJ1dHRvbntcbiAgICB3aWR0aDogNjBweDsgXG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICBtYXJnaW4tdG9wOjEyLjJweDtcbn1cbi5jaGVja2JveC1ncmlke1xuICAgIG1heC1oZWlnaHQ6IDYwcHg7XG59XG4uY2hlY2tib3gtdGFibGV7XG4gICAgd2lkdGg6NjAlO1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHRhYmxldFBvdHJhaXRNaW5XaWR0aCkgYW5kIChtYXgtd2lkdGg6JHRhYmxldFBvdHJhaXRNYXhXaWR0aCApe1xuICAgIC5jaGVja2JveC1ncmlke1xuICAgICAgICBtYXgtaGVpZ2h0OiA4MHB4O1xuICAgIH1cbiAgICAuY2hlY2tib3gtdGFibGV7XG4gICAgICAgIHdpZHRoOjkwJTtcbiAgICB9XG5cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["MessageService","UtilConstant","BreakpointService","BuildingFilterInputDTO","FloorFilterInputDTO","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SlaEscalationAnalysisComponent_table_3_Template_ng_select_change_20_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","onSelectBlCode","SlaEscalationAnalysisComponent_table_3_Template_ng_select_scrollToEnd_20_listener","ctx_r8","scrollToEndBl","SlaEscalationAnalysisComponent_table_3_Template_ng_select_search_20_listener","ctx_r9","searchBl","SlaEscalationAnalysisComponent_table_3_Template_ng_select_open_20_listener","ctx_r10","onOpenBl","SlaEscalationAnalysisComponent_table_3_Template_ng_select_change_25_listener","ctx_r11","onSelectFlCode","SlaEscalationAnalysisComponent_table_3_Template_ng_select_scrollToEnd_25_listener","ctx_r12","scrollToEndFl","SlaEscalationAnalysisComponent_table_3_Template_ng_select_search_25_listener","ctx_r13","searchFl","SlaEscalationAnalysisComponent_table_3_Template_ng_select_open_25_listener","ctx_r14","onOpenFl","SlaEscalationAnalysisComponent_table_3_Template_button_click_32_listener","ctx_r15","onSearch","SlaEscalationAnalysisComponent_table_3_Template_button_click_33_listener","ctx_r16","onClear","ɵɵadvance","ɵɵproperty","ctx_r0","enumBL","enumFL","showRequestsTypeList","filterPanel","valid","SlaEscalationAnalysisComponent_table_4_Template_ng_select_change_20_listener","_r18","ctx_r17","SlaEscalationAnalysisComponent_table_4_Template_ng_select_scrollToEnd_20_listener","ctx_r19","SlaEscalationAnalysisComponent_table_4_Template_ng_select_search_20_listener","ctx_r20","SlaEscalationAnalysisComponent_table_4_Template_ng_select_open_20_listener","ctx_r21","SlaEscalationAnalysisComponent_table_4_Template_ng_select_change_26_listener","ctx_r22","SlaEscalationAnalysisComponent_table_4_Template_ng_select_scrollToEnd_26_listener","ctx_r23","SlaEscalationAnalysisComponent_table_4_Template_ng_select_search_26_listener","ctx_r24","SlaEscalationAnalysisComponent_table_4_Template_ng_select_open_26_listener","ctx_r25","SlaEscalationAnalysisComponent_table_4_Template_button_click_33_listener","ctx_r26","SlaEscalationAnalysisComponent_table_4_Template_button_click_34_listener","ctx_r27","ctx_r1","SlaEscalationAnalysisComponent_ng_template_32_Template_button_click_2_listener","restoredCtx","_r30","wr_r28","$implicit","ctx_r29","onClickView","ɵɵstyleProp","ctx_r4","getColorCode","ɵɵtextInterpolate","wrId","getEmployeeFullName","requestedFor","eqCode","ɵɵpipeBind2","dateRequested","ɵɵtextInterpolate2","escDateResponded","convertToDisplayTime","escTimeResponded","dateResponded","timeResponded","escDateCompleted","escTimeCompleted","dateCompleted","timeCompleted","ɵɵattribute","SlaEscalationAnalysisComponent","constructor","blService","formBuilder","datePipe","wrServ","employeeService","router","enumsrv","bps","enumAllBl","enumAllFL","rm_data","compId","allRequestList","allEmployees","enumEm","rowCount","ROW_COUNT","totalRecords","esctdResponseData","esctdCompleteData","esctdCompleteAndResponseData","selectedData","responseCheckbox","completeCheckbox","completeResponseCheckbox","enumList","enumClonedList","enumWr","enumStatus","label","value","showType","useTabletProtrait","totalElements","paginationObj","pageNo","pageSize","sortBy","sortOrder","pagfilterCriteria","isFiltered","selectionFilterData","limitBl","offsetBl","limitFl","offsetFl","filterCriteria","fieldName","matchMode","limit","offset","selectedBl","selectedFl","scrollLimit","SCROLL_LIMIT","group","siteId","blId","flId","dateRequestedFrom","dateRequestedTo","ngOnInit","register","date","Date","firstDay","getFullYear","getMonth","lastDay","loadEnums","setTimeout","patchValue","loadAllEmployee","notify","filterData","transform","controls","showRequestType","loadRecords","data","getAllWrByFilter","subscribe","res","map","each","formatedDateRequested","fromatedDateToRespond","formatedDateResponded","formatedDateToComplete","formatedDateCompleted","formatedRequestedFor","currentDate","forEach","item","status","isEscalatedForResponse","isEscalatedForComplete","statusEnum","getEnumById","push","length","concat","getAllEmployeeList","blData","blNameString","site","updateBlList","reset","getTime","id","filter","em","emId","fullName","firstName","lastName","url","serializeUrl","createUrlTree","queryParams","requestId","index","action","viewDetails","isNavigationFromReport","window","open","updateSelectedData","split","time","getEnums","x","Object","assign","t","tableName","toLocaleUpperCase","find","enumValue","ngOnDestroy","unregister","onPageChange","event","first","rows","onInnerFilter","keys","filters","field","filterValue","undefined","getALLBuildingByScroll","getALLFloorByScroll","updateFlList","term","unshift","flData","_","ɵɵdirectiveInject","i1","BuildingService","i2","UntypedFormBuilder","i3","DatePipe","i4","AddWorkRequestService","i5","EmployeeService","i6","Router","i7","EnumService","i8","_2","selectors","inputs","features","ɵɵProvidersFeature","decls","vars","consts","template","SlaEscalationAnalysisComponent_Template","rf","ctx","ɵɵtemplate","SlaEscalationAnalysisComponent_table_3_Template","SlaEscalationAnalysisComponent_table_4_Template","SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_14_listener","SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_14_listener","SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_21_listener","SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_21_listener","SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_28_listener","SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_28_listener","SlaEscalationAnalysisComponent_ng_template_31_Template","SlaEscalationAnalysisComponent_ng_template_32_Template","SlaEscalationAnalysisComponent_ng_template_33_Template","ɵɵpureFunction0","_c0"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/sla-escalation-analysis/modal/sla-escalation-analysis.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/sla-escalation-analysis/modal/sla-escalation-analysis.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { BuildingFilterInput } from 'src/app/ui/background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/flFilterInput.model';\nimport { BuildingService } from 'src/app/ui/background-loc/services/bl.service';\nimport { AddWorkRequestService } from '../../work-request/service/add-work-request.services';\nimport { EmployeeService } from 'src/app/ui/employee/services/employee.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { Router } from '@angular/router';\nimport { Enums } from 'src/app/model/enums.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { PaginationObj } from 'src/app/model/pagination-model';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\n\n@Component({\n  selector: 'app-sla-escalation-analysis',\n  templateUrl: './sla-escalation-analysis.component.html',\n  styleUrls: ['./sla-escalation-analysis.component.scss'],\n  providers: [MessageService]\n})\nexport class SlaEscalationAnalysisComponent implements OnInit {\n  filterPanel!: UntypedFormGroup;\n  enumBL: BuildingFilterInputDTO[] = [];\n  enumAllBl: BuildingFilterInputDTO[] = [];\n  enumFL: FloorFilterInputDTO[] = [];\n  enumAllFL: FloorFilterInputDTO[] = [];\n  rm_data: any[] = [];\n  compId: number = 1;\n  allRequestList: any[] = [];\n  allEmployees: any[] = []\n  enumEm: any[] = [];\n  fullName: any;\n  rowCount: number = UtilConstant.ROW_COUNT;\n  totalRecords: number = 0;\n  esctdResponseData: any[] = [];\n  esctdCompleteData: any[] = [];\n  esctdCompleteAndResponseData: any[] = [];\n  selectedData: any[] = [];\n  responseCheckbox: boolean = true;\n  completeCheckbox: boolean = true;\n  completeResponseCheckbox: boolean = true;\n  enumList: Enums[] = [];\n  enumClonedList: Enums[] = [];\n  enumWr: Enums[] = [];\n  enumStatus: Enums[] = [];\n  showRequestsTypeList: any[] = [{ label: \"Preventive Maintenance\", value: \"ppm\" },\n  { label: \"Facilities Helpdesk\", value: \"facilities\" },\n  { label: \"All\", value: \"all\" }]\n  @Input() showType: string = \"facilities\";\n  useTabletProtrait = false;\n  totalElements: number = 0;\n  paginationObj: PaginationObj = {\n    pageNo: 0,\n    pageSize: this.rowCount,\n    sortBy: [\"\"],\n    sortOrder: \"ASC\"\n  }\n  pagfilterCriteria: any = {};\n  isFiltered: boolean = false;\n  selectionFilterData: any = {};\n  limitBl: number = 0;\n  offsetBl: number = 0;\n  limitFl: number = 0;\n  offsetFl: number = 0;\n  filterCriteria: any = {\n    fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n  };\n  selectedBl: any = {};\n  selectedFl: any = {};\n  scrollLimit: number = UtilConstant.SCROLL_LIMIT;\n  constructor(\n    private blService: BuildingService,\n    private formBuilder: UntypedFormBuilder,\n    private datePipe: DatePipe,\n    private wrServ: AddWorkRequestService,\n    private employeeService: EmployeeService,\n    private router: Router,\n    private enumsrv: EnumService,\n    private bps: BreakpointService\n  ) {\n    this.filterPanel = this.formBuilder.group({\n      siteId: [null],\n      blId: [null],\n      flId: [null],\n      dateRequestedFrom: [null],\n      dateRequestedTo: [null],\n      showType: [this.showType]\n    });\n  }\n\n  ngOnInit(): void {\n    this.bps.register(this);\n    this.selectedData = [];\n    var date = new Date();\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    this.loadEnums();\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        dateRequestedFrom: firstDay,\n        dateRequestedTo: lastDay,\n        showType: this.showType\n      });\n      this.onSearch();\n    });\n    this.loadAllEmployee();\n  }\n\n  notify(): void {\n    this.useTabletProtrait = BreakpointService.useTabletProtrait;\n  }\n\n  onSearch() {\n    const filterData = {\n      dateRequestedFrom: this.datePipe.transform(this.filterPanel.controls.dateRequestedFrom.value, \"yyyy-MM-dd\"),\n      dateRequestedTo: this.datePipe.transform(this.filterPanel.controls.dateRequestedTo.value, \"yyyy-MM-dd\"),\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      showRequestType: this.filterPanel.controls.showType.value\n    }\n    this.selectionFilterData = { ...filterData };\n    this.loadRecords(filterData);\n  }\n\n  loadRecords(filterData: any) {\n    this.allRequestList = [];\n    this.esctdResponseData = [];\n    this.esctdCompleteData = [];\n    this.esctdCompleteAndResponseData = [];\n    this.isFiltered = false;\n    this.selectedData = [];\n    this.isFiltered = false;\n    // this.responseCheckbox = true;\n    // this.completeResponseCheckbox = true;\n    // this.completeCheckbox = true;\n    let data = { ...filterData\n      // ,filterDto: { paginationDTO: this.paginationObj, filterCriteria: this.pagfilterCriteria } \n    };\n    this.wrServ.getAllWrByFilter(data).subscribe((res: any) => {\n      this.isFiltered = false;\n      this.allRequestList = [];\n      // let content = res.content ? res.content : [];\n      // this.totalElements = res.totalElements ? res.totalElements : 0;\n      this.allRequestList = res.map((each: any) => {\n        return {\n          ...each,\n          formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n          fromatedDateToRespond: each.escDateResponded ? this.datePipe.transform(each.escDateResponded, 'dd MMM yyyy') + \" \" + this.convertToDisplayTime(each.escTimeResponded) : '',\n          formatedDateResponded: each.dateResponded ? this.datePipe.transform(each.dateResponded, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeResponded) : '',\n          formatedDateToComplete: each.escDateCompleted ? this.datePipe.transform(each.escDateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.escTimeCompleted) : '',\n          formatedDateCompleted: each.dateCompleted ? this.datePipe.transform(each.dateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeCompleted) : '',\n          formatedRequestedFor: this.getEmployeeFullName(each.requestedFor)\n        }\n      });\n      \n      this.esctdResponseData = [];\n      this.esctdCompleteData = [];\n      this.esctdCompleteAndResponseData = [];\n      let currentDate = new Date();\n      this.allRequestList.forEach((item) => {\n\n        const { dateResponded, escDateResponded, dateCompleted, escDateCompleted, timeResponded, timeCompleted, escTimeResponded, escTimeCompleted, status } = item;\n\n        const isEscalatedForResponse =\n          (dateResponded && new Date(dateResponded + 'T' + timeResponded) > new Date(escDateResponded + 'T' + escTimeResponded)) ||\n          (!dateResponded && currentDate > new Date(escDateResponded + 'T' + escTimeResponded));\n\n        const isEscalatedForComplete =\n          (dateCompleted && new Date(dateCompleted + 'T' + timeCompleted) > new Date(escDateCompleted + 'T' + escTimeCompleted)) ||\n          (!dateCompleted && currentDate > new Date(escDateCompleted + 'T' + escTimeCompleted));\n\n        const statusEnum = this.getEnumById(status);\n\n        if (isEscalatedForResponse && !isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n          this.esctdResponseData.push(item);\n        }\n\n        if (isEscalatedForComplete && !isEscalatedForResponse && statusEnum !== \"Cancelled\" && statusEnum !== \"Rejected\") {\n          this.esctdCompleteData.push(item);\n        }\n\n        if (isEscalatedForResponse && isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n          this.esctdCompleteAndResponseData.push(item);\n        }\n      });\n      this.selectedData = []\n      this.isFiltered = false;\n      this.esctdResponseData.length > 0 && this.responseCheckbox ? this.selectedData = this.selectedData.concat(this.esctdResponseData) : [];\n      this.isFiltered = false;\n      this.esctdCompleteData.length > 0 && this.completeCheckbox ? this.selectedData = this.selectedData.concat(this.esctdCompleteData) : [];\n      this.isFiltered = false;\n      this.esctdCompleteAndResponseData.length > 0 && this.completeResponseCheckbox ? this.selectedData = this.selectedData.concat(this.esctdCompleteAndResponseData) : [];\n    })\n  }\n\n  loadAllEmployee() {\n    this.employeeService.getAllEmployeeList().subscribe((res: any) => {\n      if (res) {\n        this.allEmployees = res;\n\n      }\n      else {\n        this.allEmployees = [];\n      }\n    })\n  }\n\n  onSelectBlCode($event: any) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        flId: null,\n      });\n    }, 0);\n    if ($event.blId != null && $event.blId != '') {\n      this.selectedBl = $event;\n      this.selectedFl = {};\n    } else {\n      this.selectedBl = {};\n      this.selectedFl = {};\n    }\n  }\n\n  onSelectFlCode($event: any) {\n    if ($event.flId != null && $event.flId != '') {\n      this.selectedFl = $event;\n      const blData: any = {\n        blId: $event.blId,\n        blNameString: $event.blNameString,\n        site: null\n      }\n      this.selectedFl = blData;\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId,\n        });\n      }, 10);\n    }\n  }\n\n\n  onClear() {\n    this.filterPanel.reset();\n    this.selectedBl = {};\n    this.selectedFl = {};\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        showType: this.showType\n      });\n    }, 10);\n  }\n\n  getColorCode(data: any) {\n    var currentDate = new Date();\n    const { dateResponded, escDateResponded, dateCompleted, escDateCompleted,\n      timeResponded, timeCompleted, escTimeResponded, escTimeCompleted } = data;\n\n    const isEscalatedForResponse =\n      (dateResponded && new Date(dateResponded + 'T' + timeResponded).getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime()) ||\n      (!dateResponded && currentDate.getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime());\n\n    const isEscalatedForComplete =\n      (dateCompleted && new Date(dateCompleted + 'T' + timeCompleted).getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime()) ||\n      (!dateCompleted && currentDate.getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime());\n\n    if (isEscalatedForResponse && !isEscalatedForComplete) {\n      return '#fbae5c';\n    }\n\n    if (isEscalatedForComplete && !isEscalatedForResponse) {\n      return '#E77471';\n    }\n\n    if (isEscalatedForResponse && isEscalatedForComplete) {\n      return '#F75D59';\n    }\n    return null;\n  }\n\n  getEmployeeFullName(id: any) {\n    if (this.allEmployees) {\n      this.enumEm = this.allEmployees.filter(em => em.emId === id);\n      this.fullName = this.enumEm.map(em => {\n        if (em.firstName.length > 0 && em.lastName.length > 0) {\n          return em.firstName + \" \" + em.lastName + ' - ' + em.emId;\n        } else {\n          return em.firstName + ' - ' + em.emId;\n        }\n      })\n    }\n    return this.fullName;\n  }\n\n  onClickView(data: any) {\n    const wrId = data.wrId;\n    const status = data.status;\n\n    const url = this.router.serializeUrl(\n      this.router.createUrlTree([\"/work-request-details\"], { queryParams: { requestId: wrId, index: 0, action: \"details\", status: status, viewDetails: true, isNavigationFromReport: true } })\n    );\n\n    window.open(url, '_blank');\n  }\n\n  updateSelectedData() {\n    // Clear the previously selected data\n    this.selectedData = [];\n    this.isFiltered = false;\n\n    // Check if the response checkbox is selected\n    if (this.responseCheckbox) {\n      this.selectedData = this.selectedData.concat(this.esctdResponseData);\n    }\n\n    // Check if the complete checkbox is selected\n    if (this.completeCheckbox) {\n      this.selectedData = this.selectedData.concat(this.esctdCompleteData);\n    }\n\n    // Check if the completeResponse checkbox is selected\n    if (this.completeResponseCheckbox) {\n      this.selectedData = this.selectedData.concat(this.esctdCompleteAndResponseData);\n    }\n\n    // if(!this.responseCheckbox && !this.completeCheckbox && !this.completeResponseCheckbox) {\n    //   this.selectedData = this.allRequestList;\n    // }\n  }\n\n  convertToDisplayTime(value: any) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: Enums[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n\n      }\n    );\n  }\n\n  getEnumById(id: any) {\n    return this.enumStatus.find((t: any) => t.id === id)?.enumValue;\n  };\n\n  ngOnDestroy() {\n    this.bps.unregister(this);\n  }\n\n  onPageChange(event: any) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadRecords(this.selectionFilterData);\n  }\n\n  onInnerFilter(event: any) {\n    if (this.isFiltered) {\n      this.pagfilterCriteria = {};\n      Object.keys(event.filters).forEach((field) => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined && filterValue !== null && filterValue !== '') {\n          if (field == \"wrId\") {\n            this.pagfilterCriteria = { fieldName: \"wr_id\", value: filterValue, matchMode: matchMode };\n          } else if (field == \"eqCode\") {\n            this.pagfilterCriteria = { fieldName: \"eq_code\", value: filterValue, matchMode: matchMode };\n          } else {\n            this.pagfilterCriteria = { fieldName: field, value: filterValue, matchMode: matchMode };\n          }\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadRecords(this.selectionFilterData);\n    }\n    this.isFiltered = true;\n  }\n\n\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blService.getALLBuildingByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    })\n  }\n\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blService.getALLFloorByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumFL = res;\n      this.updateFlList(this.selectedFl);\n    })\n  }\n\n  searchBl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"blName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndBl();\n  }\n\n  searchFl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"flName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndFl();\n  }\n\n  updateBlList(blData: any) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  updateFlList(flData: any) {\n    if (flData.flId) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n    }\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n    };\n    this.scrollToEndBl();\n  }\n\n  onOpenFl() {\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    if (this.selectedBl.blId) {\n      this.filterCriteria = { fieldName: \"bl.blId\", value: this.selectedBl.blId, matchMode: \"equals\", limit: 0, offset: 0 }\n    } else {\n      this.filterCriteria = {\n        fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n      };\n    }\n    this.scrollToEndFl();\n  }\n}\n","<div class=\"card\" style=\"height: 90vh;\">\n    <p-panel header=\"SLA Escalation Analysis\" [toggleable]=\"true\">\n        <form [formGroup]=\"filterPanel\">\n            <table width=\"100%\" *ngIf=\"!useTabletProtrait\">\n                <tr >\n                    <td style=\"width:10%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>From Date</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedFrom\"\n                                        formControlName=\"dateRequestedFrom\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:10%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>To Date</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedTo\"\n                                        formControlName=\"dateRequestedTo\" [showIcon]=\"false\"\n                                        inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:20%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Building </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\" [searchable]=\"true\"\n                                bindLabel=\"blNameString\" bindValue=\"blId\" (change)=\"onSelectBlCode($event)\" placeholder=\"Make a selection\"\n                                class=\"ng-select-dropdown\" (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\"(open)=\"onOpenBl()\">\n                            </ng-select>\n                        </div>\n\n                    </td>\n                    <td style=\"width:20%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Floor</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\" [searchable]=\"true\"\n                                bindLabel=\"flNameString\" bindValue=\"flId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                                (change)=\"onSelectFlCode($event)\" (scrollToEnd)=\"scrollToEndFl()\" (search)=\"searchFl($event)\"\n                                (open)=\"onOpenFl()\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:20%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Requests Type </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"showRequestsTypeList\"\n                                formControlName=\"showType\"  [searchable]=\"true\"\n                                bindLabel=\"label\" bindValue=\"value\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:15%;\">\n                        <button (click)=\"onSearch()\" pButton pRipple label=\"Search\" [disabled]=\"!filterPanel.valid\"\n                            class=\"p-button-primary p-button-sm pull right filter-button\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            class=\"p-button-primary p-button-sm pull right filter-button\"></button>\n                    </td>\n                </tr>\n            </table>\n            <table *ngIf=\"useTabletProtrait\">\n                <tr >\n                    <td style=\"width:32%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>From Date</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedFrom\"\n                                        formControlName=\"dateRequestedFrom\" [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:32%;\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid\">\n                                <div class=\"p-field\">\n                                    <label class='form-field-lable'>To Date</label>\n                                    <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"dateRequestedTo\"\n                                        formControlName=\"dateRequestedTo\" [showIcon]=\"false\"inputId=\"icon\"></p-calendar>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                    <td style=\"width:32%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Building </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\" [searchable]=\"true\"\n                                bindLabel=\"blNameString\" bindValue=\"blId\" (change)=\"onSelectBlCode($event)\" placeholder=\"Make a selection\"\n                                class=\"ng-select-dropdown\" (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\"(open)=\"onOpenBl()\">\n                            </ng-select>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"width:32%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Floor</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\" [searchable]=\"true\"\n                                bindLabel=\"flNameString\" bindValue=\"flId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                                (change)=\"onSelectFlCode($event)\" (scrollToEnd)=\"scrollToEndFl()\" (search)=\"searchFl($event)\"\n                                (open)=\"onOpenFl()\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:32%;\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable'>Requests Type </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"showRequestsTypeList\"\n                                formControlName=\"showType\"  [searchable]=\"true\"\n                                bindLabel=\"label\" bindValue=\"value\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:32%;\">\n                        <button (click)=\"onSearch()\" pButton pRipple label=\"Search\" [disabled]=\"!filterPanel.valid\"\n                            class=\"p-button-primary p-button-sm pull right filter-button\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            class=\"p-button-primary p-button-sm pull right filter-button\"></button>\n                    </td>\n                </tr>\n            </table>\n        </form>\n    </p-panel>\n\n    <!-- show grid -->\n    <div style=\"flex: auto; margin-top: 10px;\" class=\"checkbox-grid\">\n        <table class=\"checkbox-table\">\n            <tr>\n                <td>\n                    <div style=\"display: flex; align-items: center; margin-left: 15px\">\n                        <div style=\"width: 50px; height: 15px; background-color: #fbae5c;\"></div>\n                        <div class=\"escalation-type-title\">\n                            <p>Escalated For Response</p>\n                        </div>\n                        <!-- <input type=\"checkbox\" id=\"responseCheckbox\" onchange=\"updateDataDisplay()\" /> -->\n                        <p-checkbox name=\"responseCheckbox\" [(ngModel)]=\"responseCheckbox\" id=\"responseCheckbox\"\n                            binary=\"true\" (onChange)=\"updateSelectedData()\"></p-checkbox>\n                    </div>\n                </td>\n                <td>\n                    <div style=\"display: flex; align-items: center;\">\n                        <div style=\"width: 50px; height: 15px; background-color: #E77471;\"></div>\n                        <div class=\"escalation-type-title\">\n                            <p>Escalated For Complete</p>\n                        </div>\n                        <p-checkbox name=\"completeCheckbox\" [(ngModel)]=\"completeCheckbox\" binary=\"true\"\n                            id=\"completeCheckbox\" (onChange)=\"updateSelectedData()\"></p-checkbox>\n                        <!-- <input type=\"checkbox\" id=\"completeCheckbox\" onchange=\"updateDataDisplay()\" /> -->\n                    </div>\n                </td>\n                <td>\n                    <div style=\"display: flex; align-items: center;\">\n                        <div style=\"width: 50px; height: 15px; background-color:#F75D59;\"></div>\n                        <div class=\"escalation-type-title\">\n                            <p>Escalated For Response and Complete</p>\n                        </div>\n                        <p-checkbox name=\"completeResponseCheckbox\" [(ngModel)]=\"completeResponseCheckbox\" binary=\"true\"\n                            id=\"completeResponseCheckbox\" (onChange)=\"updateSelectedData()\"></p-checkbox>\n                        <!-- <input type=\"checkbox\" id=\"completeResponseCheckbox\" onchange=\"updateDataDisplay()\" /> -->\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <p-table #tt [value]=\"selectedData\" [paginator]=\"true\" [scrollable]=\"true\" scrollDirection=\"both\" [rows]=\"rowCount\"\n        [showCurrentPageReport]=\"true\" scrollHeight=\"500px\"\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [rowsPerPageOptions]=\"[25,50,100]\"\n        styleClass=\"p-datatable-customers p-datatable-gridlines\" [rowHover]=\"false\" [totalRecords]=\"totalRecords\">\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <th style=\"width:4rem\"> </th>\n                <th pSortableColumn=\"wrId\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Request Id </p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"wrId\"></p-sortIcon>\n                            <!-- <p-columnFilter type=\"text\" field=\"wrId\" display=\"menu\"></p-columnFilter> -->\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"formatedRequestedFor\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Requested For </p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"formatedRequestedFor\"></p-sortIcon>\n                            <!-- <p-columnFilter type=\"text\" field=\"formatedRequestedFor\" display=\"menu\"></p-columnFilter> -->\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"eqCode\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Asset </p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"eqId\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"eqCode\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"formatedDateRequested\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Requested Date </p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"formatedDateRequested\"></p-sortIcon>\n                            <!-- <p-columnFilter type=\"text\" field=\"formatedDateRequested\" display=\"menu\"></p-columnFilter> -->\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"fromatedDateToRespond\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Date To Respond</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"fromatedDateToRespond\"></p-sortIcon>\n                            <!-- <p-columnFilter type=\"text\" field=\"fromatedDateToRespond\" display=\"menu\"></p-columnFilter> -->\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"formatedDateResponded\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Date Responded</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"formatedDateResponded\"></p-sortIcon>\n                            <!-- <p-columnFilter type=\"text\" field=\"formatedDateResponded\" display=\"menu\"></p-columnFilter> -->\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"formatedDateToComplete\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Date To Complete</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"formatedDateToComplete\"></p-sortIcon>\n                            <!-- <p-columnFilter type=\"text\" field=\"formatedDateToComplete\" display=\"menu\"></p-columnFilter> -->\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"formatedDateCompleted\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Date Completed</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"formatedDateCompleted\"></p-sortIcon>\n                            <!-- <p-columnFilter type=\"text\" field=\"formatedDateCompleted\" display=\"menu\"></p-columnFilter> -->\n                        </div>\n                    </div>\n                </th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-wr>\n            <tr [pSelectableRow]=\"wr\" [style.background]=\"getColorCode(wr)\" >\n                <td style=\"width:4rem\" [style.background]=\"'#ffffff'\">\n                    <button icon=\"pi pi-eye\" pButton pRipple type=\"button\" (click)=\"onClickView(wr)\"\n                        class=\"p-button-text p-button-rounded\"  matTooltipPosition=\"below\"\n                        matTooltip=\"View\"></button>\n                </td>\n                <td>{{wr.wrId}}</td>\n                <td>{{getEmployeeFullName(wr.requestedFor)}}</td>\n                <td>{{wr.eqCode}}</td>\n                <td>{{wr.dateRequested | date :\"dd MMM yyyy\"}}</td>\n                <td>{{wr.escDateResponded | date :\"dd MMM yyyy\"}} {{convertToDisplayTime(wr.escTimeResponded)}}</td>\n                <td>{{wr.dateResponded | date :\"dd MMM yyyy\"}} {{convertToDisplayTime(wr.timeResponded)}}</td>\n                <td>{{wr.escDateCompleted | date :\"dd MMM yyyy\"}} {{convertToDisplayTime(wr.escTimeCompleted)}}</td>\n                <td>{{wr.dateCompleted | date :\"dd MMM yyyy\"}} {{convertToDisplayTime(wr.timeCompleted)}}</td>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\" let-columns>\n            <tr>\n                <td [attr.colspan]=\"9\">\n                    No records found.\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n    <!-- <div class=\"paginator\">\n        <p-paginator  [rows]=\"rowCount\" [totalRecords]=\"totalElements\" (onPageChange)=\"onPageChange($event)\"\n        [first]=\"paginationObj.pageNo * paginationObj.pageSize\"\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\"\n          [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n    </div> -->\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}