{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { forkJoin } from 'rxjs';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/enum.service\";\nimport * as i5 from \"../division-department/services/division.services\";\nimport * as i6 from \"../terms/services/terms.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"./services/rmtrans.service\";\nimport * as i9 from \"../division-department/services/subDepartment.services\";\nimport * as i10 from \"src/app/services/breakpoint.service\";\nimport * as i11 from \"@ng-select/ng-select\";\nimport * as i12 from \"primeng/table\";\nimport * as i13 from \"primeng/calendar\";\nimport * as i14 from \"primeng/button\";\nimport * as i15 from \"primeng/dialog\";\nimport * as i16 from \"primeng/toast\";\nimport * as i17 from \"primeng/inputtext\";\nimport * as i18 from \"primeng/confirmdialog\";\nimport * as i19 from \"primeng/paginator\";\nfunction AllocateDivDepRoomComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 30);\n    i0.ɵɵtext(2, \" Division Code\");\n    i0.ɵɵelement(3, \"p-sortIcon\", 31)(4, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 33);\n    i0.ɵɵtext(6, \" Department Code \");\n    i0.ɵɵelement(7, \"p-sortIcon\", 34)(8, \"p-columnFilter\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 36);\n    i0.ɵɵtext(10, \" Sub Department Code \");\n    i0.ɵɵelement(11, \"p-sortIcon\", 37)(12, \"p-columnFilter\", 38);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AllocateDivDepRoomComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 39)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const dept_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", dept_r12);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dept_r12.divisionDivCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dept_r12.departmentDepCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dept_r12.subDepCode);\n  }\n}\nfunction AllocateDivDepRoomComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nfunction AllocateDivDepRoomComponent_div_21_table_2_tr_21_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 52);\n    i0.ɵɵtext(1, \"Date To should be greater than Date From\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllocateDivDepRoomComponent_div_21_table_2_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 42);\n    i0.ɵɵelementStart(2, \"td\", 42);\n    i0.ɵɵtemplate(3, AllocateDivDepRoomComponent_div_21_table_2_tr_21_label_3_Template, 2, 0, \"label\", 51);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"td\", 42)(5, \"td\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r16.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r16.filterPanel.controls[\"dateTo\"].errors) && !(ctx_r16.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r16.filterPanel.controls[\"dateTo\"].errors.required));\n  }\n}\nfunction AllocateDivDepRoomComponent_div_21_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 5)(1, \"tr\")(2, \"td\", 42)(3, \"div\", 7)(4, \"label\", 43);\n    i0.ɵɵtext(5, \"Term \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ng-select\", 44);\n    i0.ɵɵlistener(\"change\", function AllocateDivDepRoomComponent_div_21_table_2_Template_ng_select_change_6_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onSelectTerm($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"td\", 42)(8, \"div\", 7)(9, \"div\", 45)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Date From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p-calendar\", 46);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateDivDepRoomComponent_div_21_table_2_Template_p_calendar_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(13, \"td\", 42)(14, \"div\", 7)(15, \"div\", 45)(16, \"label\", 8);\n    i0.ɵɵtext(17, \"Date To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"p-calendar\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateDivDepRoomComponent_div_21_table_2_Template_p_calendar_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(19, \"td\", 48)(20, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_div_21_table_2_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onSearch());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(21, AllocateDivDepRoomComponent_div_21_table_2_tr_21_Template, 6, 1, \"tr\", 50);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r14.enumTerm)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r14.filterPanel.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r14.filterPanel.controls[\"dateTo\"].errors);\n  }\n}\nfunction AllocateDivDepRoomComponent_div_21_table_3_tr_22_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 52);\n    i0.ɵɵtext(1, \"Date To should be greater than Date From\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllocateDivDepRoomComponent_div_21_table_3_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 53);\n    i0.ɵɵelementStart(2, \"td\", 53);\n    i0.ɵɵtemplate(3, AllocateDivDepRoomComponent_div_21_table_3_tr_22_label_3_Template, 2, 0, \"label\", 51);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r23.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r23.filterPanel.controls[\"dateTo\"].errors) && !(ctx_r23.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r23.filterPanel.controls[\"dateTo\"].errors.required));\n  }\n}\nfunction AllocateDivDepRoomComponent_div_21_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 5)(1, \"tr\")(2, \"td\", 53)(3, \"div\", 7)(4, \"label\", 43);\n    i0.ɵɵtext(5, \"Term \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ng-select\", 44);\n    i0.ɵɵlistener(\"change\", function AllocateDivDepRoomComponent_div_21_table_3_Template_ng_select_change_6_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.onSelectTerm($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"td\", 53)(8, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_div_21_table_3_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.onSearch());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tr\")(10, \"td\", 53)(11, \"div\", 7)(12, \"div\", 45)(13, \"label\", 8);\n    i0.ɵɵtext(14, \"Date From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p-calendar\", 46);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateDivDepRoomComponent_div_21_table_3_Template_p_calendar_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 53)(17, \"div\", 7)(18, \"div\", 45)(19, \"label\", 8);\n    i0.ɵɵtext(20, \"Date To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"p-calendar\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateDivDepRoomComponent_div_21_table_3_Template_p_calendar_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵtemplate(22, AllocateDivDepRoomComponent_div_21_table_3_tr_22_Template, 4, 1, \"tr\", 50);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r15.enumTerm)(\"searchable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r15.filterPanel.valid);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r15.filterPanel.controls[\"dateTo\"].errors);\n  }\n}\nfunction AllocateDivDepRoomComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"form\", 40);\n    i0.ɵɵtemplate(2, AllocateDivDepRoomComponent_div_21_table_2_Template, 22, 9, \"table\", 41);\n    i0.ɵɵtemplate(3, AllocateDivDepRoomComponent_div_21_table_3_Template, 23, 9, \"table\", 41);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.filterPanel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.useTabletProtrait);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.useTabletProtrait);\n  }\n}\nfunction AllocateDivDepRoomComponent_div_22_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 58)(1, \"div\")(2, \"div\")(3, \"h4\", 59);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 60);\n    i0.ɵɵelement(6, \"div\", 61);\n    i0.ɵɵelementStart(7, \"div\", 61)(8, \"button\", 62);\n    i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_div_22_ng_template_3_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r35.assignConfirm());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r31.roomSelectionMessage);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r31.selectedScreens.length > 0));\n  }\n}\nfunction AllocateDivDepRoomComponent_div_22_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 63);\n    i0.ɵɵelementStart(2, \"th\", 64)(3, \"div\", 65)(4, \"div\", 66)(5, \"p\", 67);\n    i0.ɵɵtext(6, \"Building Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 68);\n    i0.ɵɵelement(8, \"p-sortIcon\", 69)(9, \"p-columnFilter\", 70);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 71)(11, \"div\", 65)(12, \"div\", 66)(13, \"p\", 67);\n    i0.ɵɵtext(14, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 68);\n    i0.ɵɵelement(16, \"p-sortIcon\", 72)(17, \"p-columnFilter\", 73);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 74)(19, \"div\", 65)(20, \"div\", 66)(21, \"p\", 67);\n    i0.ɵɵtext(22, \"Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 68);\n    i0.ɵɵelement(24, \"p-sortIcon\", 75)(25, \"p-columnFilter\", 76);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\");\n    i0.ɵɵtext(27, \"Room Area\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"th\", 77)(29, \"div\", 65)(30, \"div\", 66)(31, \"p\", 67);\n    i0.ɵɵtext(32, \"Occupied Space (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(33, \"div\", 68);\n    i0.ɵɵelement(34, \"p-sortIcon\", 78);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(35, \"th\", 79)(36, \"div\", 65)(37, \"div\", 66)(38, \"p\", 67);\n    i0.ɵɵtext(39, \"Available Space (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(40, \"div\", 68);\n    i0.ɵɵelement(41, \"p-sortIcon\", 80);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction AllocateDivDepRoomComponent_div_22_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 39)(1, \"td\", 63)(2, \"p-tableCheckbox\", 81);\n    i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_div_22_ng_template_5_Template_p_tableCheckbox_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r39);\n      const room_r37 = restoredCtx.$implicit;\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r38.onCheckAvailable(room_r37));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const room_r37 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", room_r37);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", room_r37);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.blCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.flCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.rmCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.rmArea);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.occupied);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.available);\n  }\n}\nfunction AllocateDivDepRoomComponent_div_22_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c0 = function () {\n  return [\"blCode\", \"flCode\", \"rmCode\"];\n};\nconst _c1 = function () {\n  return [25, 50, 100];\n};\nfunction AllocateDivDepRoomComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"p-table\", 55, 56);\n    i0.ɵɵlistener(\"selectionChange\", function AllocateDivDepRoomComponent_div_22_Template_p_table_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.selectedScreens = $event);\n    })(\"onFilter\", function AllocateDivDepRoomComponent_div_22_Template_p_table_onFilter_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.onRoomInnerFilter($event));\n    })(\"onSort\", function AllocateDivDepRoomComponent_div_22_Template_p_table_onSort_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.onSortRm($event));\n    });\n    i0.ɵɵtemplate(3, AllocateDivDepRoomComponent_div_22_ng_template_3_Template, 9, 2, \"ng-template\", 27);\n    i0.ɵɵtemplate(4, AllocateDivDepRoomComponent_div_22_ng_template_4_Template, 42, 0, \"ng-template\", 13);\n    i0.ɵɵtemplate(5, AllocateDivDepRoomComponent_div_22_ng_template_5_Template, 15, 8, \"ng-template\", 14);\n    i0.ɵɵtemplate(6, AllocateDivDepRoomComponent_div_22_ng_template_6_Template, 3, 1, \"ng-template\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 16)(8, \"p-paginator\", 57);\n    i0.ɵɵlistener(\"onPageChange\", function AllocateDivDepRoomComponent_div_22_Template_p_paginator_onPageChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.onPageChangeRm($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.allRoomData)(\"paginator\", false)(\"rows\", ctx_r5.rowCount)(\"selection\", ctx_r5.selectedScreens)(\"rowHover\", false)(\"scrollable\", true)(\"globalFilterFields\", i0.ɵɵpureFunction0(13, _c0));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"first\", ctx_r5.firstIndexRmPaginator)(\"rows\", ctx_r5.rowCount)(\"totalRecords\", ctx_r5.totalElementsRm)(\"first\", ctx_r5.paginationObjRm.pageNo * ctx_r5.paginationObjRm.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(14, _c1));\n  }\n}\nfunction AllocateDivDepRoomComponent_ng_template_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 82)(1, \"div\", 83)(2, \"div\")(3, \"h4\");\n    i0.ɵɵtext(4, \"Rooms\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\")(6, \"span\", 84)(7, \"input\", 85);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateDivDepRoomComponent_ng_template_42_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.requiredValue = $event);\n    })(\"blur\", function AllocateDivDepRoomComponent_ng_template_42_Template_input_blur_7_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.checkApplyRequiredValue());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_ng_template_42_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.onApplyRequiredValue());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_ng_template_42_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.saveConfirm());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 88);\n    i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_ng_template_42_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.onCancelRoomDetailsBox());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.requiredValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r8.checkRequiredValue());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r8.assignRoomSelectedScreens.length > 0 && ctx_r8.checkRequirements(ctx_r8.assignRoomSelectedScreens)));\n  }\n}\nfunction AllocateDivDepRoomComponent_ng_template_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 64)(2, \"div\", 65)(3, \"div\", 66)(4, \"p\", 67);\n    i0.ɵɵtext(5, \"Building Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 68);\n    i0.ɵɵelement(7, \"p-sortIcon\", 69)(8, \"p-columnFilter\", 70);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 71)(10, \"div\", 65)(11, \"div\", 66)(12, \"p\", 67);\n    i0.ɵɵtext(13, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 68);\n    i0.ɵɵelement(15, \"p-sortIcon\", 72)(16, \"p-columnFilter\", 73);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 74)(18, \"div\", 65)(19, \"div\", 66)(20, \"p\", 67);\n    i0.ɵɵtext(21, \"Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 68);\n    i0.ɵɵelement(23, \"p-sortIcon\", 75)(24, \"p-columnFilter\", 76);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"th\");\n    i0.ɵɵtext(26, \"Room Area\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"th\", 77)(28, \"div\", 65)(29, \"div\", 66)(30, \"p\", 67);\n    i0.ɵɵtext(31, \"Occupied Space (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 68);\n    i0.ɵɵelement(33, \"p-sortIcon\", 78);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"th\", 79)(35, \"div\", 65)(36, \"div\", 66)(37, \"p\", 67);\n    i0.ɵɵtext(38, \"Available Space (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 68);\n    i0.ɵɵelement(40, \"p-sortIcon\", 80);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"th\");\n    i0.ɵɵtext(42, \"Required Space (%)\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AllocateDivDepRoomComponent_ng_template_44_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 92);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateDivDepRoomComponent_ng_template_44_ng_template_15_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r57);\n      const room_r52 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(room_r52.required = $event);\n    })(\"blur\", function AllocateDivDepRoomComponent_ng_template_44_ng_template_15_Template_input_blur_0_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const room_r52 = i0.ɵɵnextContext().$implicit;\n      const ctx_r58 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r58.onRequiredEntry(room_r52));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r52 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", room_r52.required);\n  }\n}\nfunction AllocateDivDepRoomComponent_ng_template_44_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const room_r52 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate1(\" \", room_r52.required, \" \");\n  }\n}\nfunction AllocateDivDepRoomComponent_ng_template_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 39)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 89)(14, \"p-cellEditor\");\n    i0.ɵɵtemplate(15, AllocateDivDepRoomComponent_ng_template_44_ng_template_15_Template, 1, 1, \"ng-template\", 90);\n    i0.ɵɵtemplate(16, AllocateDivDepRoomComponent_ng_template_44_ng_template_16_Template, 1, 1, \"ng-template\", 91);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const room_r52 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", room_r52);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r52.blCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r52.flCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r52.rmCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r52.rmArea);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r52.occupied);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r52.available);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pEditableColumn\", room_r52.required);\n  }\n}\nfunction AllocateDivDepRoomComponent_ng_template_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c2 = function () {\n  return {\n    width: \"25vw\"\n  };\n};\nconst _c3 = function () {\n  return {\n    width: \"70vw\"\n  };\n};\nconst _c4 = function () {\n  return [5, 10, 25];\n};\nexport let AllocateDivDepRoomComponent = /*#__PURE__*/(() => {\n  class AllocateDivDepRoomComponent {\n    constructor(blServ, formBuilder, messageService, confirmationService, enumservice, divisionservice, termservice, datePipe, rmtransservice, subDepService, bps) {\n      this.blServ = blServ;\n      this.formBuilder = formBuilder;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.enumservice = enumservice;\n      this.divisionservice = divisionservice;\n      this.termservice = termservice;\n      this.datePipe = datePipe;\n      this.rmtransservice = rmtransservice;\n      this.subDepService = subDepService;\n      this.bps = bps;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.enumTerm = [];\n      this.subDepartmentData = [];\n      this.allRoomData = [];\n      this.selectedDepartmentId = null;\n      this.selectedDivisionId = null;\n      this.selectedSubDepartmentId = null;\n      this.selectedSubDepartmentCode = '';\n      this.selectedDepartmentCode = '';\n      this.selectedDivisionCode = '';\n      this.showTerms = false;\n      this.showRoomDetailsTable = false;\n      this.selectedScreens = [];\n      this.enumDivision = [];\n      this.displaySpaceError = false;\n      this.allRmTransData = [];\n      this.displayRoomDetails = false;\n      this.displayRoomData = [];\n      this.assignRoomSelectedScreens = [];\n      this.roomnospaceerror = false;\n      this.displayspaceerrormsg = '';\n      this.roomSelectionMessage = '';\n      this.useTabletProtrait = false;\n      this.paginationObjDept = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"subDepId\"],\n        sortOrder: \"ASC\"\n      };\n      this.totalElementsDept = 0;\n      this.isFilteredDept = false;\n      this.filterCriteriaListDept = [];\n      this.isSortedDept = false;\n      this.paginationObjRm = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"rmId\"],\n        sortOrder: \"ASC\"\n      };\n      this.totalElementsRm = 0;\n      this.isFilteredRm = false;\n      this.filterCriteriaListRm = [];\n      this.isSortedRm = false;\n      this.firstIndexRmPaginator = 0;\n      this.filterPanel = this.formBuilder.group({\n        term: [null, [Validators.required]],\n        dateFrom: [null],\n        dateTo: [null]\n      });\n      this.divisionfilterPanel = this.formBuilder.group({\n        divId: [null]\n      });\n    }\n    ngOnInit() {\n      this.bps.register(this);\n      this.loadAllDivisions();\n      this.loadAllSubDepartments();\n      this.loadEnumTempValue();\n    }\n    notify() {\n      this.useTabletProtrait = BreakpointService.useTabletProtrait;\n      if (this.useTabletProtrait) {\n        this.rowCount = UtilConstant.ROW_COUNT_TEN_LIMIT;\n      } else {\n        this.rowCount = UtilConstant.ROW_COUNT;\n      }\n    }\n    loadAllDivisions() {\n      this.divisionservice.getAllDivisions().subscribe(res => {\n        this.enumDivision = res;\n        this.enumDivision.unshift({\n          divId: null,\n          divCode: 'Make a selection'\n        });\n      });\n    }\n    loadAllSubDepartments() {\n      let data = {\n        divId: this.divisionfilterPanel.controls.divId.value,\n        filterDto: {\n          paginationDTO: this.paginationObjDept,\n          filterCriteria: this.filterCriteriaListDept\n        }\n      };\n      this.isFilteredDept = false;\n      this.subDepService.getAllSubDepartmentsPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFilteredDept = false;\n          this.subDepartmentData = res.content ? res.content : [];\n          this.totalElementsDept = res.totalElements ? res.totalElements : 0;\n        }\n      });\n    }\n    loadEnumTempValue() {\n      this.enumservice.getEnums().subscribe(res => {\n        let rmtranstypeEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm_trans'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'type'.toLocaleUpperCase() && t.enumValue.toLocaleUpperCase() === 'Temporary'.toLocaleUpperCase());\n        this.enumTemporaryValue = rmtranstypeEnumList[0].enumKey;\n      });\n    }\n    loadAllTerms() {\n      this.enumTerm = [];\n      this.filterPanel.patchValue({\n        term: null,\n        dateFrom: null,\n        dateTo: null\n      });\n      this.termservice.getAllTerms().subscribe(res => {\n        this.enumTerm = res;\n      });\n    }\n    onSearch() {\n      this.requiredValue = \"\";\n      this.selectedScreens = [];\n      this.allRoomData = [];\n      this.showRoomDetailsTable = false;\n      this.displayRoomDetails = false;\n      this.roomSelectionMessage = `Select Rooms to be allocated for ${this.selectedDivisionCode} | ${this.selectedDepartmentCode} | ${this.selectedSubDepartmentCode}`;\n      this.firstIndexRmPaginator = 0;\n      this.paginationObjRm = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"rmId\"],\n        sortOrder: \"ASC\"\n      };\n      this.loadAllocationRoomData();\n      this.getAllRmTrans();\n    }\n    loadAllocationRoomData() {\n      let dateFrom = this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\");\n      let dateTo = this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\");\n      let data = {\n        dateFrom: dateFrom,\n        dateTo: dateTo,\n        divId: this.selectedDivisionId,\n        depId: this.selectedDepartmentId,\n        subDepId: this.selectedSubDepartmentId,\n        filterDto: {\n          paginationDTO: this.paginationObjRm,\n          filterCriteria: this.filterCriteriaListRm\n        }\n      };\n      this.isFilteredRm = false;\n      this.blServ.getdepartmentallocation(data).subscribe(res => {\n        if (res) {\n          this.isFilteredRm = false;\n          this.allRoomData = res.content ? res.content : [];\n          this.totalElementsRm = res.totalElements ? res.totalElements : 0;\n          this.allRoomData = this.allRoomData.map(each => {\n            return {\n              ...each,\n              \"required\": 0\n            };\n          });\n          this.showRoomDetailsTable = true;\n        }\n      });\n    }\n    ondepartmentrowselect(event) {\n      this.requiredValue = \"\";\n      this.selectedScreens = [];\n      this.allRoomData = [];\n      this.showRoomDetailsTable = false;\n      this.displayRoomDetails = false;\n      this.showTerms = false;\n      this.selectedDepartmentId = null;\n      this.selectedDivisionId = null;\n      this.selectedDepartmentCode = \"\";\n      this.selectedDivisionCode = \"\";\n      this.selectedSubDepartmentCode = \"\";\n      this.selectedSubDepartmentId = null;\n      this.loadAllTerms();\n      this.showTerms = true;\n      this.selectedDepartmentId = event.data.depId;\n      this.selectedDivisionId = event.data.divId;\n      this.selectedDivisionCode = event.data.divisionDivCode;\n      this.selectedDepartmentCode = event.data.departmentDepCode;\n      this.selectedSubDepartmentId = event.data.subDepId;\n      this.selectedSubDepartmentCode = event.data.subDepCode;\n      this.firstIndexRmPaginator = 0;\n    }\n    onSelectTerm(event) {\n      this.allRmTransData = [];\n      this.filterPanel.patchValue({\n        dateFrom: this.formatDate(event.dateFrom),\n        dateTo: this.formatDate(event.dateTo)\n      });\n      this.selectedTerm = event;\n      this.getAllRmTrans();\n    }\n    formatDate(date) {\n      if (date != null) {\n        var d = new Date(date);\n        return d;\n      } else {\n        return null;\n      }\n    }\n    assignConfirm() {\n      this.displayRoomData = [];\n      this.displayRoomData = [...this.selectedScreens];\n      this.displayRoomDetails = true;\n      this.assignRoomSelectedScreens = [...this.displayRoomData];\n    }\n    saveConfirm() {\n      this.confirmationService.confirm({\n        message: \"Are you sure you want to allocate the selected rooms\",\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.onAssign();\n        },\n        key: \"divdeptsvgGrid\"\n      });\n    }\n    onAssign() {\n      let check = this.checkRequirements(this.assignRoomSelectedScreens);\n      if (check) {\n        this.messageService.clear();\n        const saveRequests = [];\n        this.assignRoomSelectedScreens.forEach(screen => {\n          let rmtrans = this.getRmTransId(screen);\n          let tid = rmtrans.id;\n          let obj = {\n            rmTransId: tid,\n            blId: screen.blId,\n            flId: screen.flId,\n            rmId: screen.rmId,\n            divId: this.selectedDivisionId,\n            depId: this.selectedDepartmentId,\n            subDepId: this.selectedSubDepartmentId,\n            emId: null,\n            termId: this.selectedTerm.termId,\n            type: this.enumTemporaryValue,\n            dateFrom: this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\"),\n            dateTo: this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\"),\n            allocation: tid == 0 ? screen.required : screen.required + rmtrans.allocation\n          };\n          saveRequests.push(this.rmtransservice.saveRmTrans(obj));\n        });\n        forkJoin(saveRequests).subscribe(res => {\n          this.messageService.add({\n            key: 'divdeptsvgMsg',\n            severity: 'success',\n            summary: 'Record updated',\n            detail: 'Room updated successfully'\n          });\n          this.onSearch();\n        }, error => {\n          console.error('Failed to save records:', error);\n        });\n      } else {}\n    }\n    getAllRmTrans() {\n      this.allRmTransData = [];\n      this.rmtransservice.getAllRmTrans().subscribe(res => {\n        this.allRmTransData = res;\n      });\n    }\n    getRmTransId(screen) {\n      let match = this.allRmTransData.find(elem => elem.blId == screen.blId && elem.flId == screen.flId && elem.rmId == screen.rmId && elem.divId == this.selectedDivisionId && elem.depId == this.selectedDepartmentId && elem.subDepId == this.selectedSubDepartmentId && elem.dateFrom == this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\") && elem.dateTo == this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\") && elem.emId == null && elem.termId == this.selectedTerm.termId);\n      if (match) {\n        return {\n          \"id\": match.rmTransId,\n          \"allocation\": match.allocation\n        };\n      } else {\n        return {\n          \"id\": 0,\n          \"allocation\": 0\n        };\n      }\n    }\n    onSelectDivision(event) {\n      this.paginationObjDept.pageNo = 0;\n      this.filterCriteriaListDept = [];\n      this.loadAllSubDepartments();\n    }\n    checkRequirements(myList) {\n      for (const obj of myList) {\n        if (obj.required > obj.available || obj.required < 1) {\n          return false;\n        }\n      }\n      return true;\n    }\n    onCheck(event) {\n      event.data.required = 0;\n    }\n    onRequiredEntry(room) {\n      if (!(room.required <= room.available && room.required > 0)) {\n        if (room.required > room.available) {\n          this.displayspaceerrormsg = `The selected room \"${room.blCode} ${room.flCode} ${room.rmCode}\" requested space should not exceed the available space.`;\n        } else if (room.required == 0) {\n          this.displayspaceerrormsg = \"The required space must be greater than zero.\";\n        }\n        this.displaySpaceError = true;\n        room.required = 0;\n      }\n    }\n    closespaceerrorDialog() {\n      this.displayspaceerrormsg = '';\n      this.displaySpaceError = false;\n    }\n    checkDates(control) {\n      if (control !== undefined && control != null) {\n        this.filterPanel.controls['dateTo'].setErrors(null);\n        this.filterPanel.clearAsyncValidators();\n        this.filterPanel.updateValueAndValidity();\n        let dateFrom = this.formatDate(this.filterPanel.controls.dateFrom.value);\n        let dateTo = this.formatDate(this.filterPanel.controls.dateTo.value);\n        if (dateFrom != null && dateTo != null && dateTo <= dateFrom) {\n          this.filterPanel.controls['dateTo'].setErrors({\n            'incorrect': true\n          });\n          this.filterPanel.updateValueAndValidity();\n          return {\n            'incorrect': true\n          };\n        } else {\n          return null;\n        }\n      }\n      return null;\n    }\n    onCancelRoomDetailsBox() {\n      this.displayRoomDetails = false;\n      this.assignRoomSelectedScreens = [];\n      this.displayRoomData.forEach(room => {\n        room.required = 0;\n      });\n      this.requiredValue = '';\n    }\n    onApplyRequiredValue() {\n      let valid = this.checkApplyRequiredValue();\n      if (valid) {\n        this.assignRoomSelectedScreens = [...this.displayRoomData];\n        this.assignRoomSelectedScreens.forEach(screen => {\n          screen.required = this.requiredValue;\n        });\n      }\n    }\n    checkApplyRequiredValue() {\n      this.displayspaceerrormsg = '';\n      let check = true;\n      var errorrooms = '';\n      let count = 0;\n      for (let room of this.displayRoomData) {\n        if (this.requiredValue > room.available) {\n          count++;\n          if (count == 1) {\n            errorrooms += `\"${room.blCode} ${room.flCode} ${room.rmCode}\"`;\n          } else {\n            errorrooms += `,\"${room.blCode} ${room.flCode} ${room.rmCode}\"`;\n          }\n        }\n      }\n      for (let room of this.displayRoomData) {\n        if (this.requiredValue > room.available || this.requiredValue < 1) {\n          if (this.requiredValue > room.available) {\n            this.displayspaceerrormsg = \"The selected room \" + errorrooms + \" requested space should not exceed the available space.\";\n          } else if (this.requiredValue < 1) {\n            this.displayspaceerrormsg = \"The required space must be greater than zero.\";\n          }\n          this.displaySpaceError = true;\n          check = false;\n          return check;\n        }\n      }\n      return check;\n    }\n    checkRequiredValue() {\n      if (typeof this.requiredValue == \"number\") {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    closenospaceerrorDialog() {\n      this.roomnospaceerror = false;\n    }\n    onCheckAvailable(room) {\n      this.roomnospaceerror = false;\n      if (room.available <= 0) {\n        let selectedscreencopy = [...this.selectedScreens];\n        this.selectedScreens = [];\n        this.roomnospaceerror = true;\n        let indexval = selectedscreencopy.findIndex(obj => {\n          return obj.blId == room.blId && obj.flId == room.flId && obj.rmId == room.rmId;\n        });\n        if (indexval != -1) {\n          selectedscreencopy.splice(indexval, 1);\n          this.selectedScreens = [...selectedscreencopy];\n        }\n      }\n    }\n    onPageChangeDept(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObjDept.pageNo = pageNo;\n      this.paginationObjDept.pageSize = pageSize;\n      this.loadAllSubDepartments();\n    }\n    onSortDept(event) {\n      this.isSortedDept = true;\n    }\n    onDepartmentInnerFilter(event) {\n      this.isSortedDept = false;\n      setTimeout(() => {\n        if (this.isFilteredDept && !this.isSortedDept) {\n          this.isSortedDept = false;\n          Object.keys(event.filters).forEach(field => {\n            const filterValue = event.filters[field][0].value;\n            const matchMode = event.filters[field][0].matchMode;\n            if (filterValue !== undefined) {\n              let filterCriteriaDept = {};\n              if (field == \"divisionDivCode\") {\n                filterCriteriaDept = {\n                  fieldName: \"division.divCode\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else if (field == \"departmentDepCode\") {\n                filterCriteriaDept = {\n                  fieldName: \"department.depCode\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else {\n                filterCriteriaDept = {\n                  fieldName: field,\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              }\n              this.updateFilterCriteriaListDept(filterCriteriaDept);\n            }\n          });\n          this.paginationObjDept.pageNo = 0;\n          this.loadAllSubDepartments();\n        }\n        this.isFilteredDept = true;\n      }, 0);\n    }\n    updateFilterCriteriaListDept(filterCriteria) {\n      let index = this.filterCriteriaListDept.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaListDept.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaListDept[index] = filterCriteria;\n        } else {\n          this.filterCriteriaListDept.push(filterCriteria);\n        }\n      }\n    }\n    onPageChangeRm(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObjRm.pageNo = pageNo;\n      this.paginationObjRm.pageSize = pageSize;\n      this.firstIndexRmPaginator = event.first;\n      this.selectedScreens = [];\n      this.loadAllocationRoomData();\n    }\n    onSortRm(event) {\n      this.isSortedRm = true;\n    }\n    onRoomInnerFilter(event) {\n      this.isSortedRm = false;\n      setTimeout(() => {\n        if (this.isFilteredRm && !this.isSortedRm) {\n          this.isSortedRm = false;\n          Object.keys(event.filters).forEach(field => {\n            const filterValue = event.filters[field][0].value;\n            const matchMode = event.filters[field][0].matchMode;\n            if (filterValue !== undefined) {\n              let filterCriteriaRm = {};\n              if (field == \"blCode\") {\n                filterCriteriaRm = {\n                  fieldName: \"bl_code\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else if (field == \"flCode\") {\n                filterCriteriaRm = {\n                  fieldName: \"fl_code\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else if (field == \"rmCode\") {\n                filterCriteriaRm = {\n                  fieldName: \"rm_code\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else {\n                filterCriteriaRm = {\n                  fieldName: field,\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              }\n              this.updateFilterCriteriaListRm(filterCriteriaRm);\n            }\n          });\n          this.paginationObjRm.pageNo = 0;\n          this.selectedScreens = [];\n          setTimeout(() => {\n            this.loadAllocationRoomData();\n          }, 100);\n        }\n        this.isFilteredRm = true;\n      }, 0);\n    }\n    updateFilterCriteriaListRm(filterCriteria) {\n      let index = this.filterCriteriaListRm.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaListRm.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaListRm[index] = filterCriteria;\n        } else {\n          this.filterCriteriaListRm.push(filterCriteria);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.bps.unregister(this);\n    }\n    static #_ = this.ɵfac = function AllocateDivDepRoomComponent_Factory(t) {\n      return new (t || AllocateDivDepRoomComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.EnumService), i0.ɵɵdirectiveInject(i5.DivisionService), i0.ɵɵdirectiveInject(i6.TermsService), i0.ɵɵdirectiveInject(i7.DatePipe), i0.ɵɵdirectiveInject(i8.RmTransService), i0.ɵɵdirectiveInject(i9.SubDepartmentService), i0.ɵɵdirectiveInject(i10.BreakpointService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AllocateDivDepRoomComponent,\n      selectors: [[\"app-allocate-div-dep-room\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 49,\n      vars: 50,\n      consts: [[1, \"card\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"90vh\"], [1, \"division-selection-container\"], [1, \"card\", \"filter-container\"], [2, \"width\", \"100%\", 3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"divId\", \"bindLabel\", \"divCode\", \"bindValue\", \"divId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [1, \"result-container\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"selectionMode\", \"single\", \"scrollHeight\", \"490px\", 3, \"value\", \"paginator\", \"rows\", \"scrollable\", \"rowHover\", \"onRowSelect\", \"onFilter\", \"onSort\"], [\"subDeptTable\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [1, \"room-selection-container\"], [\"class\", \"card filter-container\", 4, \"ngIf\"], [\"class\", \"card\", \"class\", \"result-container\", 4, \"ngIf\"], [3, \"visible\", \"modal\", \"draggable\", \"resizable\", \"closable\", \"visibleChange\"], [2, \"font-size\", \"14px\"], [\"pButton\", \"\", \"label\", \"Ok\", 1, \"p-button-secondary\", 2, \"margin-left\", \"85%\", 3, \"click\"], [\"roomselectiondialog\", \"\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"selectionMode\", \"single\", \"scrollDirection\", \"both\", \"scrollHeight\", \"350px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"onRowSelect\"], [\"dt2\", \"\"], [\"pTemplate\", \"caption\"], [\"key\", \"divdeptsvgMsg\", \"position\", \"top-center\"], [\"key\", \"divdeptsvgGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pSortableColumn\", \"divisionDivCode\"], [\"field\", \"divisionDivCode\"], [\"type\", \"text\", \"field\", \"divisionDivCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"departmentDepCode\"], [\"field\", \"departmentDepCode\"], [\"type\", \"text\", \"field\", \"departmentDepCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"subDepCode\"], [\"field\", \"subDepCode\"], [\"type\", \"text\", \"field\", \"subDepCode\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [2, \"width\", \"30%\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"term\", \"bindLabel\", \"term\", \"bindValue\", \"termId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [1, \"p-fluid\", \"p-field\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"dateFrom\", \"inputId\", \"icon\", 2, \"height\", \"32px\", 3, \"showIcon\", \"readonlyInput\", \"ngModelChange\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"dateTo\", \"inputId\", \"icon\", 3, \"showIcon\", \"readonlyInput\", \"ngModelChange\"], [2, \"width\", \"10%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", 2, \"width\", \"67px\", \"margin-left\", \"8%\", \"margin-top\", \"20px\", 3, \"disabled\", \"click\"], [4, \"ngIf\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;margin-left:5px;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\", \"margin-left\", \"5px\"], [2, \"width\", \"50%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", 2, \"width\", \"67px\", \"margin-left\", \"18%\", \"margin-top\", \"20px\", 3, \"disabled\", \"click\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"id\", \"rm_list\", \"scrollDirection\", \"both\", \"scrollHeight\", \"450px\", 3, \"value\", \"paginator\", \"rows\", \"selection\", \"rowHover\", \"scrollable\", \"globalFilterFields\", \"selectionChange\", \"onFilter\", \"onSort\"], [\"dt1\", \"\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"first\", \"rows\", \"totalRecords\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [1, \"d-flex\", \"flex-row\", \"justify-content-between\"], [1, \"room-selection-message\"], [1, \"rmselection-button-container\", 2, \"max-width\", \"50%\"], [1, \"rm-button-div\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Allocate\", 1, \"p-button-primary\", \"p-mr-2\", \"allocate-button\", 3, \"disabled\", \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"blCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"blCode\"], [\"type\", \"text\", \"field\", \"blCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"flCode\"], [\"field\", \"flCode\"], [\"type\", \"text\", \"field\", \"flCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmCode\"], [\"field\", \"rmCode\"], [\"type\", \"text\", \"field\", \"rmCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"occupied\"], [\"field\", \"occupied\"], [\"pSortableColumn\", \"available\"], [\"field\", \"available\"], [3, \"value\", \"click\"], [1, \"d-flex\", \"flex-row\"], [2, \"flex\", \"auto\"], [1, \"p-input-icon-left\", \"ml-auto\"], [\"pInputText\", \"\", \"type\", \"number\", \"NumbersOnly\", \"\", \"placeholder\", \"Required Space...\", 1, \"search_input\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Apply\", 1, \"p-button-primary\", 2, \"margin-left\", \"5px\", \"width\", \"70px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", 1, \"p-button-primary\", 2, \"margin-left\", \"5px\", \"width\", \"70px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 2, \"margin-left\", \"5px\", \"width\", \"70px\", 3, \"click\"], [\"pEditableColumnField\", \"required\", 2, \"background-color\", \"#b3b3ff\", 3, \"pEditableColumn\"], [\"pTemplate\", \"input\"], [\"pTemplate\", \"output\"], [\"pInputText\", \"\", \"type\", \"number\", \"NumbersOnly\", \"\", 3, \"ngModel\", \"ngModelChange\", \"blur\"]],\n      template: function AllocateDivDepRoomComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4)(5, \"table\", 5)(6, \"tr\")(7, \"td\", 6)(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Division \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"ng-select\", 9);\n          i0.ɵɵlistener(\"change\", function AllocateDivDepRoomComponent_Template_ng_select_change_11_listener($event) {\n            return ctx.onSelectDivision($event);\n          });\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵelementStart(12, \"div\", 10)(13, \"p-table\", 11, 12);\n          i0.ɵɵlistener(\"onRowSelect\", function AllocateDivDepRoomComponent_Template_p_table_onRowSelect_13_listener($event) {\n            return ctx.ondepartmentrowselect($event);\n          })(\"onFilter\", function AllocateDivDepRoomComponent_Template_p_table_onFilter_13_listener($event) {\n            return ctx.onDepartmentInnerFilter($event);\n          })(\"onSort\", function AllocateDivDepRoomComponent_Template_p_table_onSort_13_listener($event) {\n            return ctx.onSortDept($event);\n          });\n          i0.ɵɵtemplate(15, AllocateDivDepRoomComponent_ng_template_15_Template, 13, 0, \"ng-template\", 13);\n          i0.ɵɵtemplate(16, AllocateDivDepRoomComponent_ng_template_16_Template, 7, 4, \"ng-template\", 14);\n          i0.ɵɵtemplate(17, AllocateDivDepRoomComponent_ng_template_17_Template, 3, 1, \"ng-template\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 16)(19, \"p-paginator\", 17);\n          i0.ɵɵlistener(\"onPageChange\", function AllocateDivDepRoomComponent_Template_p_paginator_onPageChange_19_listener($event) {\n            return ctx.onPageChangeDept($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(20, \"div\", 18);\n          i0.ɵɵtemplate(21, AllocateDivDepRoomComponent_div_21_Template, 4, 3, \"div\", 19);\n          i0.ɵɵtemplate(22, AllocateDivDepRoomComponent_div_22_Template, 9, 15, \"div\", 20);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(23, \"p-dialog\", 21);\n          i0.ɵɵlistener(\"visibleChange\", function AllocateDivDepRoomComponent_Template_p_dialog_visibleChange_23_listener($event) {\n            return ctx.displaySpaceError = $event;\n          });\n          i0.ɵɵelementStart(24, \"p-header\");\n          i0.ɵɵtext(25, \" Warning \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"p\", 22);\n          i0.ɵɵtext(27);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_Template_button_click_28_listener() {\n            return ctx.closespaceerrorDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"p-dialog\", 21);\n          i0.ɵɵlistener(\"visibleChange\", function AllocateDivDepRoomComponent_Template_p_dialog_visibleChange_29_listener($event) {\n            return ctx.roomnospaceerror = $event;\n          });\n          i0.ɵɵelementStart(30, \"p-header\");\n          i0.ɵɵtext(31, \" Warning \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"p\", 22);\n          i0.ɵɵtext(33, \"The selected room has no available space.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function AllocateDivDepRoomComponent_Template_button_click_34_listener() {\n            return ctx.closenospaceerrorDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"p-dialog\", 21);\n          i0.ɵɵlistener(\"visibleChange\", function AllocateDivDepRoomComponent_Template_p_dialog_visibleChange_35_listener($event) {\n            return ctx.displayRoomDetails = $event;\n          });\n          i0.ɵɵelementStart(36, \"p-header\");\n          i0.ɵɵtext(37, \" Selected Rooms \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 0, 24)(40, \"p-table\", 25, 26);\n          i0.ɵɵlistener(\"onRowSelect\", function AllocateDivDepRoomComponent_Template_p_table_onRowSelect_40_listener($event) {\n            return ctx.onCheck($event);\n          });\n          i0.ɵɵtemplate(42, AllocateDivDepRoomComponent_ng_template_42_Template, 11, 3, \"ng-template\", 27);\n          i0.ɵɵtemplate(43, AllocateDivDepRoomComponent_ng_template_43_Template, 43, 0, \"ng-template\", 13);\n          i0.ɵɵtemplate(44, AllocateDivDepRoomComponent_ng_template_44_Template, 17, 8, \"ng-template\", 14);\n          i0.ɵɵtemplate(45, AllocateDivDepRoomComponent_ng_template_45_Template, 3, 1, \"ng-template\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(46, \"div\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(47, \"p-toast\", 28)(48, \"p-confirmDialog\", 29);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formGroup\", ctx.divisionfilterPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDivision)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ctx.subDepartmentData)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"scrollable\", true)(\"rowHover\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElementsDept)(\"first\", ctx.paginationObjDept.pageNo * ctx.paginationObjDept.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(45, _c1));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.showTerms);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showRoomDetailsTable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(46, _c2));\n          i0.ɵɵproperty(\"visible\", ctx.displaySpaceError)(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.displayspaceerrormsg);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(47, _c2));\n          i0.ɵɵproperty(\"visible\", ctx.roomnospaceerror)(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(48, _c3));\n          i0.ɵɵproperty(\"visible\", ctx.displayRoomDetails)(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"value\", ctx.displayRoomData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(49, _c4))(\"rowHover\", true)(\"scrollable\", true);\n        }\n      },\n      dependencies: [i7.NgIf, i11.NgSelectComponent, i3.Header, i3.PrimeTemplate, i12.Table, i12.SortableColumn, i12.SelectableRow, i12.EditableColumn, i12.CellEditor, i12.SortIcon, i12.TableCheckbox, i12.ColumnFilter, i13.Calendar, i14.ButtonDirective, i15.Dialog, i16.Toast, i17.InputText, i18.ConfirmDialog, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.FormGroupDirective, i2.FormControlName, i19.Paginator],\n      styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header{background-color:#879cc9;color:#000;padding-left:10px;font-weight:400;margin-bottom:0;height:10px!important}.td-class[_ngcontent-%COMP%]{background-color:inherit;display:flex;align-items:center;justify-content:center;width:40px;height:20px;margin:10px auto auto;border:1px solid black}[_nghost-%COMP%]     .p-datatable-scrollable-body{overflow-y:auto!important}[_nghost-%COMP%]     .p-datatable-scrollable-header-box{padding:0!important}.invalid_cell_value[_ngcontent-%COMP%]{border:2px solid #f44336!important}[_nghost-%COMP%]     .ng-select.ng-select-single .ng-select-container{height:30px!important}[_nghost-%COMP%]     .p-fluid .p-calendar .p-inputtext{height:30px!important}.search_input[_ngcontent-%COMP%]{height:30px!important}.division-selection-container[_ngcontent-%COMP%]{width:22%}.room-selection-container[_ngcontent-%COMP%]{width:77%}.filter-container[_ngcontent-%COMP%]{height:13%}.result-container[_ngcontent-%COMP%]{height:86%}.rmselection-button-container[_ngcontent-%COMP%]{display:flex;flex-direction:row}.search-button[_ngcontent-%COMP%]{margin-right:10px}@media screen and (min-width: 600px) and (max-width: 959px){.division-selection-container[_ngcontent-%COMP%]{width:45%}.room-selection-container[_ngcontent-%COMP%]{width:55%}.filter-container[_ngcontent-%COMP%]{height:17%;display:flex;justify-content:center;align-items:center}.result-container[_ngcontent-%COMP%]{height:82%}  .p-datatable .p-datatable-header{padding:.5rem}.search_input[_ngcontent-%COMP%]{height:30px!important;width:120px!important}.room-selection-message[_ngcontent-%COMP%]{font-size:12px}.allocate-button[_ngcontent-%COMP%]{margin-top:5px}.rmselection-button-container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.rm-button-div[_ngcontent-%COMP%]{align-self:end}.search-button[_ngcontent-%COMP%]{margin-right:0}}@media screen and (min-width: 960px) and (max-width: 1439px){.allocate-button[_ngcontent-%COMP%]{margin-top:5px}.rmselection-button-container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.rm-button-div[_ngcontent-%COMP%]{align-self:end}.search-button[_ngcontent-%COMP%]{margin-right:0}}\"]\n    });\n  }\n  return AllocateDivDepRoomComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}