{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i2 from \"src/app/ui/rm-config/rm-config/services/rm-config.service\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"ng-zorro-antd/table\";\nimport * as i7 from \"primeng/paginator\";\nfunction RoomListComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 7)(2, \"div\", 8)(3, \"div\", 9)(4, \"p\", 10);\n    i0.ɵɵtext(5, \"Building Code \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 11);\n    i0.ɵɵelement(7, \"p-sortIcon\", 12)(8, \"p-columnFilter\", 13);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 14)(10, \"div\", 8)(11, \"div\", 9)(12, \"p\", 10);\n    i0.ɵɵtext(13, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 11);\n    i0.ɵɵelement(15, \"p-sortIcon\", 15)(16, \"p-columnFilter\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 17)(18, \"div\", 8)(19, \"div\", 9)(20, \"p\", 10);\n    i0.ɵɵtext(21, \"Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 11);\n    i0.ɵɵelement(23, \"p-sortIcon\", 18)(24, \"p-columnFilter\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"th\", 20)(26, \"div\", 8)(27, \"div\", 9)(28, \"p\", 10);\n    i0.ɵɵtext(29, \"Room Name \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 11);\n    i0.ɵɵelement(31, \"p-sortIcon\", 21)(32, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction RoomListComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 23)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const room_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", room_r4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r4.blBlName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r4.flFlName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r4.rmCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r4.rmName);\n  }\n}\nfunction RoomListComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let RoomListComponent = /*#__PURE__*/(() => {\n  class RoomListComponent {\n    constructor(blSrv, rmConfigSrv, enumsrv) {\n      this.blSrv = blSrv;\n      this.rmConfigSrv = rmConfigSrv;\n      this.enumsrv = enumsrv;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.rm_data = [];\n      this.isRmList = true;\n      this.loading = false;\n      this.enumRmData = [];\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"rmId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n      this.parentFun = new EventEmitter();\n    }\n    ngOnInit() {\n      setTimeout(() => {\n        this.loadPageData();\n      }, 1000);\n    }\n    loadPageData() {\n      !this.isRmConfig ? this.loadRecords({}) : this.loadRmConfigRoomList();\n    }\n    loadRecords(data) {\n      this.rmFilter = data;\n      this.loading = true;\n      this.isRmList = true;\n      //this.rm_data = [];\n      let filterdata = {\n        ...data,\n        filterDto: {\n          paginationDTO: this.paginationObj,\n          filterCriteria: this.filterCriteriaList\n        }\n      };\n      this.blSrv.getRmListByPagination(filterdata).subscribe(res => {\n        if (res) {\n          this.isRmList = false;\n          this.isFiltered = false;\n          this.rm_data = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.isRmList = true;\n          this.rm_data = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    onRowSelect(event) {\n      this.parentFun.emit(event);\n    }\n    loadRmConfigRoomList() {\n      let filterdata = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.rmConfigSrv.getReservableRoomsPaginated(filterdata).subscribe(res => {\n        if (res) {\n          this.isRmList = false;\n          this.isFiltered = false;\n          this.rm_data = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.isRmList = true;\n          this.rm_data = [];\n        }\n        this.loading = false;\n      });\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadPageData();\n    }\n    onInnerFilter(event) {\n      setTimeout(() => {\n        if (this.isFiltered) {\n          Object.keys(event.filters).forEach(field => {\n            const filterValue = event.filters[field][0].value;\n            const matchMode = event.filters[field][0].matchMode;\n            if (filterValue !== undefined) {\n              let filterCriteria = {};\n              if (field == \"blBlName\") {\n                filterCriteria = {\n                  fieldName: \"bl.blName\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else if (field == \"flFlName\") {\n                filterCriteria = {\n                  fieldName: \"fl.flName\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else if (field == \"rmcatRmCat\") {\n                filterCriteria = {\n                  fieldName: \"rmcat.rmCat\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else if (field == \"rmtypeRmType\") {\n                filterCriteria = {\n                  fieldName: \"rmtype.rmType\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else {\n                filterCriteria = {\n                  fieldName: field,\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              }\n              this.updateFilterCriteriaList(filterCriteria);\n            }\n          });\n          this.paginationObj.pageNo = 0;\n          this.loadRmConfigRoomList();\n        }\n        this.isFiltered = true;\n      }, 0);\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function RoomListComponent_Factory(t) {\n      return new (t || RoomListComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.RmConfigService), i0.ɵɵdirectiveInject(i3.EnumService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RoomListComponent,\n      selectors: [[\"app-room-list\"]],\n      inputs: {\n        isRmConfig: \"isRmConfig\"\n      },\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      decls: 7,\n      vars: 10,\n      consts: [[\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"540px\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\", \"scrollable\", \"rowHover\", \"onFilter\", \"onRowSelect\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"pSortableColumn\", \"blBlName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"blBlName\"], [\"type\", \"text\", \"field\", \"blBlName\", \"display\", \"menu\"], [\"pSortableColumn\", \"flFlName\"], [\"field\", \"flFlName\"], [\"type\", \"text\", \"field\", \"flFlName\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmCode\"], [\"field\", \"rmCode\"], [\"type\", \"text\", \"field\", \"rmCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmName\"], [\"field\", \"rmName\"], [\"type\", \"text\", \"field\", \"rmName\", \"display\", \"menu\"], [3, \"pSelectableRow\"]],\n      template: function RoomListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n          i0.ɵɵlistener(\"onFilter\", function RoomListComponent_Template_p_table_onFilter_0_listener($event) {\n            return ctx.onInnerFilter($event);\n          })(\"onRowSelect\", function RoomListComponent_Template_p_table_onRowSelect_0_listener($event) {\n            return ctx.onRowSelect($event);\n          });\n          i0.ɵɵtemplate(2, RoomListComponent_ng_template_2_Template, 33, 0, \"ng-template\", 2);\n          i0.ɵɵtemplate(3, RoomListComponent_ng_template_3_Template, 9, 5, \"ng-template\", 3);\n          i0.ɵɵtemplate(4, RoomListComponent_ng_template_4_Template, 3, 1, \"ng-template\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"p-paginator\", 6);\n          i0.ɵɵlistener(\"onPageChange\", function RoomListComponent_Template_p_paginator_onPageChange_6_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"value\", ctx.rm_data)(\"paginator\", false)(\"scrollable\", true)(\"rowHover\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0));\n        }\n      },\n      dependencies: [i4.PrimeTemplate, i5.Table, i5.SortableColumn, i5.SelectableRow, i5.SortIcon, i5.ColumnFilter, i6.NzTableCellDirective, i6.NzThMeasureDirective, i6.NzTrDirective, i7.Paginator]\n    });\n  }\n  return RoomListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}