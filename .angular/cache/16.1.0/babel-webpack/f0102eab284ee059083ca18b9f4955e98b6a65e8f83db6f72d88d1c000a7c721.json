{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class RequestPartsService {\n  constructor(service) {\n    this.service = service;\n  }\n  getAllByRquestId(id) {\n    return this.service.getAllById('reqParts', 'getByRequestId', id);\n  }\n  getById(id) {\n    return this.service.getSingleById(\"reqParts\", \"getById\", id);\n  }\n  saveRequestPart(data) {\n    return this.service.add('reqParts', 'save', data);\n  }\n  deleteById(id) {\n    return this.service.deleteById(\"reqParts\", \"deleteById\", id);\n  }\n  checkPartExist(requestId, partId) {\n    return this.service.getAllByIds(\"reqParts\", \"checkExist\", requestId, partId);\n  }\n  static #_ = this.ɵfac = function RequestPartsService_Factory(t) {\n    return new (t || RequestPartsService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestPartsService,\n    factory: RequestPartsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RequestPartsService","constructor","service","getAllByRquestId","id","getAllById","getById","getSingleById","saveRequestPart","data","add","deleteById","checkPartExist","requestId","partId","getAllByIds","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/work-request-details/widgets/request-parts/services/request-parts.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestPartsService {\n\n  constructor(\n    private service: DataService<any>,\n    \n  ) { }\n\n  \n  public getAllByRquestId(id:any){\n    return this.service.getAllById('reqParts', 'getByRequestId',id);\n  }\n  \n  public getById(id: any) {\n    return this.service.getSingleById(\"reqParts\", \"getById\",id);\n  }\n\n  public saveRequestPart(data: any): Observable<any> {\n    return this.service.add('reqParts', 'save', data);\n  }\n\n  public deleteById(id: any) {\n    return this.service.deleteById(\"reqParts\", \"deleteById\", id);\n  }\n\n  public checkPartExist(requestId:any,partId:any) {\n    return this.service.getAllByIds(\"reqParts\", \"checkExist\", requestId,partId);\n  }\n \n}\n"],"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAE9BC,YACUC,OAAyB;IAAzB,KAAAA,OAAO,GAAPA,OAAO;EAEb;EAGGC,gBAAgBA,CAACC,EAAM;IAC5B,OAAO,IAAI,CAACF,OAAO,CAACG,UAAU,CAAC,UAAU,EAAE,gBAAgB,EAACD,EAAE,CAAC;EACjE;EAEOE,OAAOA,CAACF,EAAO;IACpB,OAAO,IAAI,CAACF,OAAO,CAACK,aAAa,CAAC,UAAU,EAAE,SAAS,EAACH,EAAE,CAAC;EAC7D;EAEOI,eAAeA,CAACC,IAAS;IAC9B,OAAO,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAC,UAAU,EAAE,MAAM,EAAED,IAAI,CAAC;EACnD;EAEOE,UAAUA,CAACP,EAAO;IACvB,OAAO,IAAI,CAACF,OAAO,CAACS,UAAU,CAAC,UAAU,EAAE,YAAY,EAAEP,EAAE,CAAC;EAC9D;EAEOQ,cAAcA,CAACC,SAAa,EAACC,MAAU;IAC5C,OAAO,IAAI,CAACZ,OAAO,CAACa,WAAW,CAAC,UAAU,EAAE,YAAY,EAAEF,SAAS,EAACC,MAAM,CAAC;EAC7E;EAAC,QAAAE,CAAA,G;qBA1BUhB,mBAAmB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBrB,mBAAmB;IAAAsB,OAAA,EAAnBtB,mBAAmB,CAAAuB,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}