{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from '../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../background-loc/model/DTO/FloorFilterInputDTO.model';\nimport { RoomFilterInputDTO } from '../background-loc/model/DTO/RoomFilterInputDTO.model';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../background-loc/services/bl.service\";\nimport * as i5 from \"../Helpdesk/trades/services/trades.services\";\nimport * as i6 from \"../Helpdesk/parts/services/parts.service\";\nimport * as i7 from \"../Helpdesk/tools/services/tools.services\";\nimport * as i8 from \"../Helpdesk/equipment/services/equipment.services\";\nimport * as i9 from \"../ppm-plan/services/ppm-plan-services\";\nimport * as i10 from \"../ppm-schedule/services/plan-schedule-services\";\nimport * as i11 from \"ngx-spinner\";\nimport * as i12 from \"src/app/services/breakpoint.service\";\nimport * as i13 from \"@ng-select/ng-select\";\nimport * as i14 from \"@angular/material/legacy-card\";\nimport * as i15 from \"primeng/accordion\";\nimport * as i16 from \"primeng/api\";\nimport * as i17 from \"primeng/table\";\nimport * as i18 from \"primeng/calendar\";\nimport * as i19 from \"primeng/button\";\nimport * as i20 from \"primeng/dialog\";\nimport * as i21 from \"primeng/checkbox\";\nimport * as i22 from \"primeng/selectbutton\";\nimport * as i23 from \"@swimlane/ngx-charts\";\nimport * as i24 from \"../common-components/trade-details/modal/trade-details.component\";\nimport * as i25 from \"../common-components/part-details/modal/part-details.component\";\nimport * as i26 from \"../Helpdesk/tools/widgets/add-tools/add-tools.component\";\nimport * as i27 from \"../forecast-details/widgets/forecast-plan-details/forecast-plan-details/forecast-plan-details.component\";\nconst _c0 = [\"contentArea\"];\nfunction ForecastReportsComponent_table_2_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 17)(2, \"div\")(3, \"label\", 35);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r13.dateErrorMsg);\n  }\n}\nfunction ForecastReportsComponent_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 16)(1, \"tr\")(2, \"td\", 17)(3, \"div\", 18)(4, \"div\", 19)(5, \"div\", 20)(6, \"label\", 21);\n    i0.ɵɵtext(7, \"From Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 22);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 17)(10, \"div\", 18)(11, \"div\", 19)(12, \"div\", 20)(13, \"label\", 21);\n    i0.ɵɵtext(14, \"To Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 23);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 17)(17, \"div\", 18)(18, \"label\", 24);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 25);\n    i0.ɵɵlistener(\"change\", function ForecastReportsComponent_table_2_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onSelectBlCode($event));\n    })(\"scrollToEnd\", function ForecastReportsComponent_table_2_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.scrollToEndBl());\n    })(\"search\", function ForecastReportsComponent_table_2_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.searchBl($event));\n    })(\"open\", function ForecastReportsComponent_table_2_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"td\", 17)(22, \"div\", 18)(23, \"label\", 24);\n    i0.ɵɵtext(24, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ng-select\", 26);\n    i0.ɵɵlistener(\"change\", function ForecastReportsComponent_table_2_Template_ng_select_change_25_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onSelectFlCode($event));\n    })(\"scrollToEnd\", function ForecastReportsComponent_table_2_Template_ng_select_scrollToEnd_25_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.scrollToEndFl());\n    })(\"search\", function ForecastReportsComponent_table_2_Template_ng_select_search_25_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.searchFl($event));\n    })(\"open\", function ForecastReportsComponent_table_2_Template_ng_select_open_25_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"td\", 17)(27, \"div\", 18)(28, \"label\", 24);\n    i0.ɵɵtext(29, \"Room \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"ng-select\", 27);\n    i0.ɵɵlistener(\"change\", function ForecastReportsComponent_table_2_Template_ng_select_change_30_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onSelectRmCode($event));\n    })(\"scrollToEnd\", function ForecastReportsComponent_table_2_Template_ng_select_scrollToEnd_30_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.scrollToEndRm());\n    })(\"search\", function ForecastReportsComponent_table_2_Template_ng_select_search_30_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.searchRm($event));\n    })(\"open\", function ForecastReportsComponent_table_2_Template_ng_select_open_30_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onOpenRm());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(31, ForecastReportsComponent_table_2_tr_31_Template, 5, 1, \"tr\", 28);\n    i0.ɵɵelementStart(32, \"tr\")(33, \"td\", 17)(34, \"div\", 18)(35, \"label\", 24);\n    i0.ɵɵtext(36, \"Asset\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"ng-select\", 29);\n    i0.ɵɵlistener(\"change\", function ForecastReportsComponent_table_2_Template_ng_select_change_37_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.onSelectAsset($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(38, \"td\", 17)(39, \"div\", 18)(40, \"label\", 24);\n    i0.ɵɵtext(41, \"Plan Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(42, \"ng-select\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(43, \"td\", 31)(44, \"td\", 17);\n    i0.ɵɵelementStart(45, \"td\", 17)(46, \"div\", 32)(47, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_table_2_Template_button_click_47_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_table_2_Template_button_click_48_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onClear());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"minDate\", ctx_r0.today)(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false)(\"minDate\", ctx_r0.today)(\"maxDate\", ctx_r0.maxDate);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.enumRm)(\"searchable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.dateErrorMsg.length > 0);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"items\", ctx_r0.enumEquipment)(\"clearable\", false)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.planList)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.filterPanel.valid);\n  }\n}\nfunction ForecastReportsComponent_table_3_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 36)(2, \"div\")(3, \"label\", 35);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r30.dateErrorMsg);\n  }\n}\nfunction ForecastReportsComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 16)(1, \"tr\")(2, \"td\", 36)(3, \"div\", 18)(4, \"div\", 19)(5, \"div\", 20)(6, \"label\", 21);\n    i0.ɵɵtext(7, \"From Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 22);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 36)(10, \"div\", 18)(11, \"div\", 19)(12, \"div\", 20)(13, \"label\", 21);\n    i0.ɵɵtext(14, \"To Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 23);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 36)(17, \"div\", 18)(18, \"label\", 24);\n    i0.ɵɵtext(19, \"Plan Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"ng-select\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(21, ForecastReportsComponent_table_3_tr_21_Template, 5, 1, \"tr\", 28);\n    i0.ɵɵelementStart(22, \"tr\")(23, \"td\", 36)(24, \"div\", 18)(25, \"label\", 24);\n    i0.ɵɵtext(26, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"ng-select\", 25);\n    i0.ɵɵlistener(\"change\", function ForecastReportsComponent_table_3_Template_ng_select_change_27_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.onSelectBlCode($event));\n    })(\"scrollToEnd\", function ForecastReportsComponent_table_3_Template_ng_select_scrollToEnd_27_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.scrollToEndBl());\n    })(\"search\", function ForecastReportsComponent_table_3_Template_ng_select_search_27_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.searchBl($event));\n    })(\"open\", function ForecastReportsComponent_table_3_Template_ng_select_open_27_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"td\", 36)(29, \"div\", 18)(30, \"label\", 24);\n    i0.ɵɵtext(31, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"ng-select\", 26);\n    i0.ɵɵlistener(\"change\", function ForecastReportsComponent_table_3_Template_ng_select_change_32_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.onSelectFlCode($event));\n    })(\"scrollToEnd\", function ForecastReportsComponent_table_3_Template_ng_select_scrollToEnd_32_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.scrollToEndFl());\n    })(\"search\", function ForecastReportsComponent_table_3_Template_ng_select_search_32_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.searchFl($event));\n    })(\"open\", function ForecastReportsComponent_table_3_Template_ng_select_open_32_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"td\", 36)(34, \"div\", 18)(35, \"label\", 24);\n    i0.ɵɵtext(36, \"Room \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"ng-select\", 37);\n    i0.ɵɵlistener(\"change\", function ForecastReportsComponent_table_3_Template_ng_select_change_37_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.onSelectRmCode($event));\n    })(\"scrollToEnd\", function ForecastReportsComponent_table_3_Template_ng_select_scrollToEnd_37_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.scrollToEndRm());\n    })(\"open\", function ForecastReportsComponent_table_3_Template_ng_select_open_37_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onOpenRm());\n    })(\"search\", function ForecastReportsComponent_table_3_Template_ng_select_search_37_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.searchRm($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(38, \"tr\")(39, \"td\", 36)(40, \"div\", 18)(41, \"label\", 24);\n    i0.ɵɵtext(42, \"Asset\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"ng-select\", 29);\n    i0.ɵɵlistener(\"change\", function ForecastReportsComponent_table_3_Template_ng_select_change_43_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.onSelectAsset($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(44, \"td\", 36);\n    i0.ɵɵelementStart(45, \"td\", 36)(46, \"div\", 32)(47, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_table_3_Template_button_click_47_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_table_3_Template_button_click_48_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.onClear());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"minDate\", ctx_r1.today)(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false)(\"minDate\", ctx_r1.today)(\"maxDate\", ctx_r1.maxDate);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.planList)(\"searchable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.dateErrorMsg.length > 0);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.enumRm)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"items\", ctx_r1.enumEquipment)(\"clearable\", false)(\"searchable\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.filterPanel.valid);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"p-button-primary\": a0,\n    \"p-button-secondary\": a1\n  };\n};\nfunction ForecastReportsComponent_div_4_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_div_4_div_31_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView([$event.stopPropagation(), ctx_r50.onClickGridButton()]);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 64);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_div_4_div_31_Template_button_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r52 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView([$event.stopPropagation(), ctx_r52.onClickChartButton()]);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c1, ctx_r48.showCardGrid, !ctx_r48.showCardGrid));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c1, ctx_r48.showCardChart, !ctx_r48.showCardChart));\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_5_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 74)(1, \"td\", 75);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_5_tr_11_Template_td_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r61);\n      const subItem_r58 = restoredCtx.$implicit;\n      const key_r54 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r59 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r59.onClickDetails(key_r54, subItem_r58.id));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 76);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 77);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_5_tr_11_Template_td_click_5_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r62 = i0.ɵɵnextContext(5);\n      return i0.ɵɵresetView(ctx_r62.getPlanDetails());\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const subItem_r58 = ctx.$implicit;\n    const key_r54 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c2, key_r54 == \"part\" && subItem_r58.requiredHours > subItem_r58.availableQuantity ? \"#ff9999\" : key_r54 != \"part\" && subItem_r58.requiredHours > subItem_r58.availableHours ? \"#ff9999\" : \"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(subItem_r58.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", key_r54 == \"part\" ? subItem_r58.availableQuantity : subItem_r58.availableHours, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", key_r54 == \"part\" ? subItem_r58.requiredQuantity : subItem_r58.requiredHours, \" \");\n  }\n}\nfunction ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 70)(2, \"thead\")(3, \"tr\")(4, \"th\", 71);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 72);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 72);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵtemplate(11, ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_5_tr_11_Template, 7, 6, \"tr\", 73);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const key_r54 = i0.ɵɵnextContext().$implicit;\n    const ctx_r55 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r55.getDisplayKey(key_r54));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", key_r54 == \"part\" ? \"Available Quantity\" : \"Available Hours\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", key_r54 == \"part\" ? \"Required Quantity\" : \"Required Hours\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r55.getProperty(key_r54, ctx_r55.forecastDisplayData));\n  }\n}\nfunction ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_div_2_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 88)(1, \"li\", 89)(2, \"span\", 90);\n    i0.ɵɵelement(3, \"span\", 91);\n    i0.ɵɵelementStart(4, \"span\", 92);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r69 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"title\", item_r69.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", item_r69.color);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r69.name);\n  }\n}\nfunction ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r72 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 81)(1, \"div\", 45)(2, \"ngx-charts-bar-vertical-2d\", 82);\n    i0.ɵɵlistener(\"select\", function ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_div_2_Template_ngx_charts_bar_vertical_2d_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r72);\n      const key_r54 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r70 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r70.onSelectBarChart($event, key_r54));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 83)(4, \"div\", 84)(5, \"p\", 85);\n    i0.ɵɵtext(6, \"Legend\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 86);\n    i0.ɵɵtemplate(8, ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_div_2_ul_8_Template, 6, 4, \"ul\", 87);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r66 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"view\", ctx_r66.view)(\"scheme\", ctx_r66.colorScheme)(\"results\", ctx_r66.barchartData)(\"xAxis\", ctx_r66.showXAxis)(\"yAxis\", ctx_r66.showYAxis)(\"legend\", ctx_r66.showLegend)(\"gradient\", ctx_r66.gradient)(\"showXAxisLabel\", ctx_r66.showXAxisLabel)(\"showYAxisLabel\", ctx_r66.showYAxisLabel)(\"xAxisLabel\", ctx_r66.xAxisLabel)(\"yAxisLabel\", ctx_r66.yAxisLabel)(\"showGridLines\", ctx_r66.showGridLines);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r66.legendItems);\n  }\n}\nfunction ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 93)(1, \"div\")(2, \"h1\");\n    i0.ɵɵtext(3, \"No data found\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", null, 78);\n    i0.ɵɵtemplate(2, ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_div_2_Template, 9, 13, \"div\", 79);\n    i0.ɵɵtemplate(3, ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_div_3_Template, 4, 0, \"div\", 80);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r56 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r56.barchartData.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r56.barchartData.length > 0));\n  }\n}\nfunction ForecastReportsComponent_div_4_div_32_p_accordionTab_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-accordionTab\", 68)(1, \"p-header\", 69)(2, \"div\")(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(5, ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_5_Template, 12, 4, \"div\", 28);\n    i0.ɵɵtemplate(6, ForecastReportsComponent_div_4_div_32_p_accordionTab_2_div_6_Template, 4, 2, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const key_r54 = ctx.$implicit;\n    const ctx_r53 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"selected\", ctx_r53.openAccordionTabs.includes(key_r54));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r53.getDisplayKey(key_r54));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r53.showCardGrid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r53.showCardChart);\n  }\n}\nfunction ForecastReportsComponent_div_4_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r74 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 65)(1, \"p-accordion\", 66);\n    i0.ɵɵlistener(\"onOpen\", function ForecastReportsComponent_div_4_div_32_Template_p_accordion_onOpen_1_listener($event) {\n      i0.ɵɵrestoreView(_r74);\n      const ctx_r73 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r73.onTabOpen($event));\n    });\n    i0.ɵɵtemplate(2, ForecastReportsComponent_div_4_div_32_p_accordionTab_2_Template, 7, 4, \"p-accordionTab\", 67);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r49 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r49.keyPmPlannerList);\n  }\n}\nfunction ForecastReportsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r76 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38, 39)(2, \"div\", 40)(3, \"div\", 41)(4, \"div\", 42)(5, \"p-selectButton\", 43);\n    i0.ɵɵlistener(\"ngModelChange\", function ForecastReportsComponent_div_4_Template_p_selectButton_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r75 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r75.showByValue = $event);\n    })(\"onChange\", function ForecastReportsComponent_div_4_Template_p_selectButton_onChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r77 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r77.onShowByChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 44)(7, \"div\", 45)(8, \"div\", 46)(9, \"p-checkbox\", 47);\n    i0.ɵɵlistener(\"ngModelChange\", function ForecastReportsComponent_div_4_Template_p_checkbox_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r78 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r78.selectedDisplayParameters = $event);\n    })(\"onChange\", function ForecastReportsComponent_div_4_Template_p_checkbox_onChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r79 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r79.checkboxSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 48);\n    i0.ɵɵtext(11, \"Trade\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 46)(13, \"p-checkbox\", 49);\n    i0.ɵɵlistener(\"ngModelChange\", function ForecastReportsComponent_div_4_Template_p_checkbox_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r80 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r80.selectedDisplayParameters = $event);\n    })(\"onChange\", function ForecastReportsComponent_div_4_Template_p_checkbox_onChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r81 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r81.checkboxSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"label\", 50);\n    i0.ɵɵtext(15, \"Part\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 46)(17, \"p-checkbox\", 51);\n    i0.ɵɵlistener(\"ngModelChange\", function ForecastReportsComponent_div_4_Template_p_checkbox_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r82 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r82.selectedDisplayParameters = $event);\n    })(\"onChange\", function ForecastReportsComponent_div_4_Template_p_checkbox_onChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r83 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r83.checkboxSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"label\", 52);\n    i0.ɵɵtext(19, \"Tool\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(20, \"div\", 53)(21, \"div\")(22, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_div_4_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r84 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r84.onPrevious());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 55)(24, \"div\", 56)(25, \"p\", 57);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"div\", 58)(28, \"div\", 59)(29, \"span\", 60);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_div_4_Template_span_click_29_listener() {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r85 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r85.onClickRequest());\n    });\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(31, ForecastReportsComponent_div_4_div_31_Template, 3, 8, \"div\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(32, ForecastReportsComponent_div_4_div_32_Template, 3, 1, \"div\", 61);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(33, \"div\")(34, \"button\", 62);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_div_4_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r86 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r86.onNext());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"options\", ctx_r2.showByData)(\"ngModel\", ctx_r2.showByValue)(\"multiple\", false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.selectedDisplayParameters);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.selectedDisplayParameters);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.selectedDisplayParameters);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.showPrevious);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.titleString);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Total Requests: \", ctx_r2.getProperty(\"request\", ctx_r2.forecastDisplayData).count, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getProperty(\"request\", ctx_r2.forecastDisplayData).count > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getProperty(\"request\", ctx_r2.forecastDisplayData).count > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.showNext);\n  }\n}\nfunction ForecastReportsComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 94)(2, \"div\", 95)(3, \"div\", 96)(4, \"p\", 97);\n    i0.ɵɵtext(5, \"Requested Date \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 98);\n    i0.ɵɵelement(7, \"p-sortIcon\", 99)(8, \"p-columnFilter\", 100);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 101)(10, \"div\", 95)(11, \"div\", 96)(12, \"p\", 97);\n    i0.ɵɵtext(13, \"Date To Respond\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 98);\n    i0.ɵɵelement(15, \"p-sortIcon\", 102)(16, \"p-columnFilter\", 103);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 101)(18, \"div\", 95)(19, \"div\", 96)(20, \"p\", 97);\n    i0.ɵɵtext(21, \"Date To Perform\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 98);\n    i0.ɵɵelement(23, \"p-sortIcon\", 102)(24, \"p-columnFilter\", 103);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"th\", 104)(26, \"div\", 95)(27, \"div\", 96)(28, \"p\", 97);\n    i0.ɵɵtext(29, \"Date To Complete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 98);\n    i0.ɵɵelement(31, \"p-sortIcon\", 105)(32, \"p-columnFilter\", 106);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"th\", 107)(34, \"div\", 95)(35, \"div\", 96)(36, \"p\", 97);\n    i0.ɵɵtext(37, \"Building\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"div\", 98);\n    i0.ɵɵelement(39, \"p-sortIcon\", 108)(40, \"p-columnFilter\", 109);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"th\", 110)(42, \"div\", 95)(43, \"div\", 96)(44, \"p\", 97);\n    i0.ɵɵtext(45, \"Floor\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(46, \"div\", 98);\n    i0.ɵɵelement(47, \"p-sortIcon\", 111)(48, \"p-columnFilter\", 112);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(49, \"th\", 113)(50, \"div\", 95)(51, \"div\", 96)(52, \"p\", 97);\n    i0.ɵɵtext(53, \"Room \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(54, \"div\", 98);\n    i0.ɵɵelement(55, \"p-sortIcon\", 114)(56, \"p-columnFilter\", 115);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(57, \"th\", 116)(58, \"div\", 95)(59, \"div\", 96)(60, \"p\", 97);\n    i0.ɵɵtext(61, \"Asset \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(62, \"div\", 98);\n    i0.ɵɵelement(63, \"p-sortIcon\", 117)(64, \"p-columnFilter\", 118);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ForecastReportsComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 119)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const wr_r87 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", wr_r87);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 12, wr_r87.dateRequested, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(6, 15, wr_r87.escDateResponded, \"dd MMM yyyy\"), \" \", ctx_r5.convertToDisplayTime(wr_r87.escTimeResponded), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(9, 18, wr_r87.dateToPerform, \"dd MMM yyyy\"), \" \", ctx_r5.convertToDisplayTime(wr_r87.escTimeResponded), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(12, 21, wr_r87.escDateCompleted, \"dd MMM yyyy\"), \" \", ctx_r5.convertToDisplayTime(wr_r87.escTimeCompleted), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(wr_r87.building);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r87.floor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r87.room);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r87.eqCode);\n  }\n}\nfunction ForecastReportsComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 8);\n  }\n}\nfunction ForecastReportsComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r90 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 120);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_ng_template_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r89 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r89.displayRequestList = false);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    width: a0\n  };\n};\nfunction ForecastReportsComponent_p_dialog_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r92 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 121);\n    i0.ɵɵlistener(\"visibleChange\", function ForecastReportsComponent_p_dialog_12_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r92);\n      const ctx_r91 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r91.showTradeDetails = $event);\n    });\n    i0.ɵɵelement(1, \"app-trade-details\", 122);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(6, _c3, ctx_r8.tradeDetailsDialogWidth));\n    i0.ɵɵproperty(\"visible\", ctx_r8.showTradeDetails)(\"modal\", true)(\"draggable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selectedTrade\", ctx_r8.selectedTrade);\n  }\n}\nfunction ForecastReportsComponent_p_dialog_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r94 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 123);\n    i0.ɵɵlistener(\"visibleChange\", function ForecastReportsComponent_p_dialog_13_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r94);\n      const ctx_r93 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r93.showPartDetails = $event);\n    });\n    i0.ɵɵelement(1, \"app-part-details\", 124);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(6, _c3, ctx_r9.tradeDetailsDialogWidth));\n    i0.ɵɵproperty(\"visible\", ctx_r9.showPartDetails)(\"modal\", true)(\"draggable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selectedPart\", ctx_r9.selectedPart);\n  }\n}\nfunction ForecastReportsComponent_p_dialog_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r96 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 125);\n    i0.ɵɵlistener(\"visibleChange\", function ForecastReportsComponent_p_dialog_14_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r96);\n      const ctx_r95 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r95.showToolDetails = $event);\n    });\n    i0.ɵɵelementStart(1, \"form\", 126)(2, \"mat-card\")(3, \"mat-card-content\", 127);\n    i0.ɵɵelement(4, \"app-add-tools\", 128);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(6, _c3, ctx_r10.tradeDetailsDialogWidth));\n    i0.ɵɵproperty(\"visible\", ctx_r10.showToolDetails)(\"modal\", true)(\"draggable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r10.frmToolsDetail);\n  }\n}\nfunction ForecastReportsComponent_p_dialog_15_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r99 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 131);\n    i0.ɵɵlistener(\"click\", function ForecastReportsComponent_p_dialog_15_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r99);\n      const ctx_r98 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r98.onCloseDetails());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = function (a0, a1) {\n  return {\n    \"width\": a0,\n    \"height\": a1\n  };\n};\nfunction ForecastReportsComponent_p_dialog_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r101 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 129);\n    i0.ɵɵlistener(\"visibleChange\", function ForecastReportsComponent_p_dialog_15_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r101);\n      const ctx_r100 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r100.showPlanDetails = $event);\n    });\n    i0.ɵɵelement(1, \"app-forecast-plan-details\", 130);\n    i0.ɵɵtemplate(2, ForecastReportsComponent_p_dialog_15_ng_template_2_Template, 1, 0, \"ng-template\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction2(7, _c4, ctx_r11.dialogWidth, ctx_r11.dialogHeight));\n    i0.ɵɵproperty(\"visible\", ctx_r11.showPlanDetails)(\"modal\", true)(\"draggable\", false)(\"closable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"planData\", ctx_r11.planData);\n  }\n}\nfunction ForecastReportsComponent_ngx_spinner_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 132)(1, \"p\", 133);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nconst _c5 = function () {\n  return {\n    width: \"70vw\"\n  };\n};\nconst _c6 = function () {\n  return [5, 10, 25];\n};\nexport let ForecastReportsComponent = /*#__PURE__*/(() => {\n  class ForecastReportsComponent {\n    constructor(formBuilder, authSrv, datePipe, blService, tradeService, partsService, toolsService, eqService, ppmPlanService, planscheduleSrv, spinner, cdr, bps) {\n      this.formBuilder = formBuilder;\n      this.authSrv = authSrv;\n      this.datePipe = datePipe;\n      this.blService = blService;\n      this.tradeService = tradeService;\n      this.partsService = partsService;\n      this.toolsService = toolsService;\n      this.eqService = eqService;\n      this.ppmPlanService = ppmPlanService;\n      this.planscheduleSrv = planscheduleSrv;\n      this.spinner = spinner;\n      this.cdr = cdr;\n      this.bps = bps;\n      this.enumBL = [];\n      this.enumAllBl = [];\n      this.enumFL = [];\n      this.enumRm = [];\n      this.enumAllEquipment = [];\n      this.enumEquipment = [];\n      this.enumAllFL = [];\n      this.allRmDdata = [];\n      this.rm_data = [];\n      this.eqData = [];\n      this.planList = [];\n      this.tradeList = [];\n      this.partsList = [];\n      this.toolsList = [];\n      this.showCard = false;\n      this.showCardGrid = true;\n      this.showCardChart = false;\n      this.dateErrorMsg = '';\n      this.showByData = [{\n        \"id\": 0,\n        \"label\": 'Daily',\n        \"value\": \"daily\"\n      }, {\n        \"id\": 1,\n        \"label\": 'Weekly',\n        \"value\": \"weekly\"\n      }, {\n        \"id\": 2,\n        \"label\": 'Monthly',\n        \"value\": \"monthly\"\n      }];\n      this.titleString = \"\";\n      this.today = new Date();\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.requestsList = [];\n      this.displayRequestList = false;\n      this.showTradeDetails = false;\n      this.showPartDetails = false;\n      this.showToolDetails = false;\n      this.showPlanDetails = false;\n      this.planData = [];\n      this.keyPmPlannerList = [];\n      this.openAccordionTabs = [];\n      this.monthStart = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n      this.monthEnd = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);\n      this.showByValue = 'daily';\n      this.selectedDisplayParameters = [];\n      this.showSpinner = false;\n      this.showNext = true;\n      this.showPrevious = true;\n      this.view = [900, 295];\n      this.showXAxis = true;\n      this.showXAxisLabel = true;\n      this.xAxisLabel = '';\n      this.barchartData = [];\n      this.showYAxis = true;\n      this.showLegend = false;\n      this.showGridLines = false;\n      this.showYAxisLabel = true;\n      this.gradient = false;\n      this.yAxisLabel = '';\n      this.colorScheme = {\n        domain: ['#5AA454', '#C7B42C']\n      };\n      this.chartImg = [];\n      this.legendItems = [];\n      this.isChartButton = false;\n      this.isGridButton = true;\n      this.useTabletProtrait = false;\n      this.tradeDetailsDialogWidth = '40vw';\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.selectedRm = {};\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.filterPanel = this.formBuilder.group({\n        blId: [null],\n        flId: [null],\n        rmId: [null],\n        eqId: [null],\n        planId: [null],\n        fromDate: [null, [Validators.required, this.checkDateValidation()]],\n        toDate: [null, [Validators.required, this.checkDateValidation()]]\n      });\n      this.frmToolsDetail = this.formBuilder.group({\n        toolsFormPanel: []\n      });\n    }\n    ngOnInit() {\n      this.bps.register(this);\n      this.loadequipments();\n      this.loadPlansData();\n      let month = new Date().getMonth();\n      this.maxDate = new Date(new Date().setMonth(month + 6));\n      var date = new Date();\n      var nextDate = new Date(new Date().setMonth(month + 1));\n      this.setDefaultDates(date, nextDate);\n      this.loadTrades();\n      this.loadParts();\n      this.loadTools();\n    }\n    notify() {\n      this.useTabletProtrait = BreakpointService.useTabletProtrait;\n      this.updateTradeDetailsDialog();\n    }\n    setDefaultDates(fromDate, toDate) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          fromDate: fromDate,\n          toDate: toDate\n        });\n      }, 0);\n    }\n    loadTrades() {\n      this.tradeService.getAllTrades().subscribe(res => {\n        this.tradeList = res;\n      });\n    }\n    loadParts() {\n      this.partsService.getAllParts().subscribe(res => {\n        this.partsList = res;\n      });\n    }\n    loadTools() {\n      this.toolsService.getAllTools().subscribe(res => {\n        this.toolsList = res;\n      });\n    }\n    onSelectBlCode($event) {\n      this.filterPanel.patchValue({\n        flId: null,\n        rmId: null,\n        eqId: null\n      });\n      if ($event.blId != null && $event.blId != '') {\n        this.selectedBl = $event;\n        this.selectedFl = {};\n        this.filterAssets($event.blId, null, null);\n      } else {\n        this.selectedFl = {};\n        this.selectedBl = {};\n        this.filterAssets(null, null, null);\n      }\n    }\n    onSelectFlCode($event) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          rmId: null\n        });\n      }, 0);\n      if ($event.flId != null && $event.flId != '') {\n        this.selectedFl = $event;\n        const blData = {\n          blId: $event.blId,\n          blNameString: $event.blNameString\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        this.selectedRm = {};\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: $event.blId,\n            rmId: null,\n            eqId: null\n          });\n          this.filterAssets($event.blId, $event.flId, null);\n        }, 10);\n      } else {\n        this.selectedRm = {};\n      }\n    }\n    onSelectRmCode($event) {\n      if ($event.rmId != null && $event.rmId != '') {\n        this.selectedRm = $event;\n        const blData = {\n          blId: $event.blId,\n          blNameString: $event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        const flData = {\n          flId: $event.flId,\n          flNameString: $event.flNameString,\n          blId: $event.blId,\n          blNameString: $event.blNameString\n        };\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: $event.blId,\n            flId: $event.flId,\n            eqId: null\n          });\n        }, 0);\n        this.filterAssets($event.blId, $event.flId, $event.rmId);\n      } else {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            rmId: null,\n            eqId: null\n          });\n          this.filterAssets(null, null, null);\n        }, 0);\n      }\n    }\n    onSelectAsset($event) {\n      if ($event.eqId != null && $event.eqId != '') {\n        if ($event.blId) {\n          this.getBlById($event.blId);\n          if ($event.flId != null) {\n            this.getFlById($event.flId);\n          }\n          if ($event != null) {\n            this.getRmById($event.rmId);\n          }\n        }\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: $event.blId,\n            flId: $event.flId,\n            rmId: $event.rmId\n          });\n        }, 0);\n      } else {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: null,\n            flId: null,\n            rmId: null\n          });\n        }, 0);\n      }\n    }\n    filterAssets(blId, flId, rmId) {\n      this.enumEquipment = this.enumAllEquipment;\n      blId ? this.enumEquipment = this.enumAllEquipment.filter(asset => asset.blId == blId) : '';\n      flId ? this.enumEquipment = this.enumEquipment.filter(asset => asset.blId == blId && asset.flId == flId) : '';\n      rmId ? this.enumEquipment = this.enumEquipment.filter(asset => asset.blId == blId && asset.flId == flId && asset.rmId == rmId) : '';\n    }\n    loadequipments() {\n      this.eqService.getAllEquipments().subscribe(res => {\n        if (res.status != 202) {\n          this.enumAllEquipment = res;\n          this.enumEquipment = this.enumAllEquipment;\n          this.enumEquipment.unshift(new Object({\n            eqCode: \"Make a selection\",\n            description: '',\n            eqId: 1\n          }));\n        }\n      });\n    }\n    loadPlansData() {\n      this.ppmPlanService.getAllPlans().subscribe(res => {\n        if (res.status != 202) {\n          this.planList = res;\n          this.planList.unshift(new Object({\n            planId: null,\n            planName: \"Make a selection\"\n          }));\n        } else {\n          this.planList = [];\n        }\n      });\n    }\n    checkDateValidation() {\n      return control => {\n        if (control.value !== undefined && control.value != null) {\n          this.dateErrorMsg = '';\n          this.filterPanel.controls['fromDate'].setErrors(null);\n          this.filterPanel.controls['toDate'].setErrors(null);\n          this.filterPanel.clearAsyncValidators();\n          this.filterPanel.updateValueAndValidity();\n          var dateFrom = new Date(this.filterPanel.controls['fromDate'].value);\n          var dateTo = new Date(this.filterPanel.controls['toDate'].value);\n          if (dateFrom.getTime() > dateTo.getTime() && this.filterPanel.controls['toDate'].value != null) {\n            this.filterPanel.controls['fromDate'].setErrors({\n              'incorrect': true\n            });\n            this.filterPanel.updateValueAndValidity();\n            this.dateErrorMsg = 'Date End should be greater than Date Start.';\n            return {\n              'incorrect': true\n            };\n          } else {\n            return null;\n          }\n        }\n        return null;\n      };\n    }\n    getProperty(key, data) {\n      if (data) {\n        return data[key];\n      } else {\n        return 0;\n      }\n    }\n    onShowByChange(event) {\n      this.showCard = false;\n      this.onSearch();\n    }\n    onTabOpen(event) {\n      this.key = this.keyPmPlannerList[event.index];\n      if (!this.openAccordionTabs.includes(this.key)) {\n        this.openAccordionTabs.push(this.key);\n      }\n      this.refreshBarChartData();\n    }\n    onClickGridButton() {\n      this.showCardChart = false;\n      this.showCardGrid = false;\n      let presentOpenAccordions = [...this.openAccordionTabs];\n      this.openAccordionTabs = [];\n      this.openAccordionTabs = [...presentOpenAccordions];\n      this.showCardGrid = true;\n    }\n    onClickChartButton() {\n      this.showCardChart = false;\n      this.showCardGrid = false;\n      let presentOpenAccordions = [...this.openAccordionTabs];\n      this.openAccordionTabs = [];\n      this.openAccordionTabs = [...presentOpenAccordions];\n      this.showCardChart = true;\n      this.refreshBarChartData();\n    }\n    checkboxSelected(event) {\n      this.keyPmPlannerList = [];\n      this.openAccordionTabs = [];\n      event.checked.forEach(key => {\n        this.keyPmPlannerList.push(key);\n      });\n    }\n    getPlanDetails() {\n      this.showPlanDetails = false;\n      const contentAreaWidth = this.contentArea.nativeElement.offsetWidth;\n      const contentAreaHeight = this.contentArea.nativeElement.offsetHeight;\n      if (this.useTabletProtrait) {\n        this.dialogHeight = contentAreaHeight * 0.75 + 'px';\n      } else {\n        this.dialogHeight = contentAreaHeight * 1.2 + 'px';\n      }\n      this.dialogWidth = contentAreaWidth + 'px';\n      this.planscheduleSrv.getForecastPlanDetails(this.filterData).subscribe(res => {\n        this.planData = res;\n        this.showPlanDetails = true;\n      });\n    }\n    onClickDetails(key, id) {\n      this.showTradeDetails = false;\n      this.showPartDetails = false;\n      this.showToolDetails = false;\n      if (key == \"trade\") {\n        this.selectedTrade = this.tradeList.find(t => t.tradeId === parseInt(id) || t.tradeCode == id);\n        this.showTradeDetails = true;\n      } else if (key == \"part\") {\n        this.selectedPart = this.partsList.find(t => t.partId === parseInt(id) || t.partCode == id);\n        this.showPartDetails = true;\n      } else {\n        let selectedTool = this.toolsList.find(t => t.toolsId === parseInt(id) || t.tool == id);\n        this.setToolForm(selectedTool);\n        this.showToolDetails = true;\n      }\n    }\n    setToolForm(value) {\n      setTimeout(() => {\n        this.frmToolsDetail.patchValue({\n          toolsFormPanel: value\n        });\n      }, 0);\n    }\n    onSearch() {\n      this.requestsList = [];\n      this.openAccordionTabs = [];\n      this.showSpinner = true;\n      this.spinner.show();\n      this.showCard = true;\n      this.keyPmPlannerList = ['trade', 'part', 'tool'];\n      this.selectedDisplayParameters = ['trade', 'part', 'tool'];\n      let fromDate = this.setTimeToZero(this.filterPanel.controls.fromDate.value);\n      let toDate = this.setTimeToZero(this.filterPanel.controls.toDate.value);\n      let dateObject = {\n        fromDate: '',\n        toDate: ''\n      };\n      if (this.showByValue == \"daily\") {\n        dateObject.fromDate = this.datePipe.transform(fromDate, \"yyyy-MM-dd\");\n        dateObject.toDate = this.datePipe.transform(fromDate, \"yyyy-MM-dd\");\n        this.titleString = this.datePipe.transform(fromDate, \"dd MMM yyyy\");\n      } else if (this.showByValue == \"weekly\") {\n        let weekdateobj = this.getWeekFirstAndLastDateforDate(fromDate);\n        if (toDate > weekdateobj.lastDate) {\n          dateObject.toDate = this.datePipe.transform(weekdateobj.lastDate, \"yyyy-MM-dd\");\n        } else {\n          dateObject.toDate = this.datePipe.transform(toDate, \"yyyy-MM-dd\");\n        }\n        if (fromDate < weekdateobj.firstDate) {\n          dateObject.fromDate = this.datePipe.transform(weekdateobj.firstDate, \"yyyy-MM-dd\");\n        } else {\n          dateObject.fromDate = this.datePipe.transform(fromDate, \"yyyy-MM-dd\");\n        }\n        this.titleString = `${weekdateobj.lastDate.getFullYear()}: Week - ${this.getWeekNumber(fromDate).toString()} (${this.datePipe.transform(weekdateobj.firstDate, \"dd MMM yyyy\")} - ${this.datePipe.transform(weekdateobj.lastDate, \"dd MMM yyyy\")})`;\n      } else if (this.showByValue == \"monthly\") {\n        let monthdateobj = this.getMonthFirstAndLastDateforDate(fromDate);\n        if (toDate > monthdateobj.lastDate) {\n          dateObject.toDate = this.datePipe.transform(monthdateobj.lastDate, \"yyyy-MM-dd\");\n        } else {\n          dateObject.toDate = this.datePipe.transform(toDate, \"yyyy-MM-dd\");\n        }\n        if (fromDate < monthdateobj.firstDate) {\n          dateObject.fromDate = this.datePipe.transform(monthdateobj.firstDate, \"yyyy-MM-dd\");\n        } else {\n          dateObject.fromDate = this.datePipe.transform(fromDate, \"yyyy-MM-dd\");\n        }\n        this.titleString = this.datePipe.transform(fromDate, \"MMMM yyyy\");\n      }\n      this.disableCheckNextAndPrevious();\n      this.filterData = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        rmId: this.filterPanel.controls.rmId.value,\n        eqId: this.filterPanel.controls.eqId.value,\n        planId: this.filterPanel.controls.planId.value ? this.filterPanel.controls.planId.value : 0,\n        fromDate: dateObject.fromDate,\n        toDate: dateObject.toDate\n      };\n      this.refreshForecastDetails();\n    }\n    onNext() {\n      this.requestsList = [];\n      this.showSpinner = true;\n      this.spinner.show();\n      let previousFirstDate;\n      let fromDate = this.setTimeToZero(this.filterPanel.controls.fromDate.value);\n      let toDate = this.setTimeToZero(this.filterPanel.controls.toDate.value);\n      let dateObject = {\n        fromDate: '',\n        toDate: ''\n      };\n      if (this.showByValue == \"daily\") {\n        previousFirstDate = this.getDateFromDateString(this.titleString);\n        let nextDate = this.calculateNextDate(previousFirstDate, 1);\n        dateObject.fromDate = this.datePipe.transform(nextDate, \"yyyy-MM-dd\");\n        dateObject.toDate = this.datePipe.transform(nextDate, \"yyyy-MM-dd\");\n        this.titleString = this.datePipe.transform(nextDate, \"dd MMM yyyy\");\n      } else if (this.showByValue == \"weekly\") {\n        previousFirstDate = this.getDateFromWeekString(this.titleString);\n        let datestartvalue = this.calculateNextDate(previousFirstDate, 7);\n        let dateendvalue = this.calculateNextDate(datestartvalue, 6);\n        if (fromDate < datestartvalue) {\n          dateObject.fromDate = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\");\n        } else {\n          dateObject.fromDate = this.datePipe.transform(fromDate, \"yyyy-MM-dd\");\n        }\n        if (toDate > dateendvalue) {\n          dateObject.toDate = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\");\n        } else {\n          dateObject.toDate = this.datePipe.transform(toDate, \"yyyy-MM-dd\");\n        }\n        this.titleString = `${dateendvalue.getFullYear()}: Week - ${this.getWeekNumber(datestartvalue).toString()} (${this.datePipe.transform(datestartvalue, \"dd MMM yyyy\")} - ${this.datePipe.transform(dateendvalue, \"dd MMM yyyy\")})`;\n      } else if (this.showByValue == \"monthly\") {\n        previousFirstDate = this.getDateFromMonthString(this.titleString);\n        let monthObj = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, 1));\n        dateObject.fromDate = this.datePipe.transform(monthObj.firstDate, \"yyyy-MM-dd\");\n        if (fromDate < monthObj.firstDate) {\n          dateObject.fromDate = this.datePipe.transform(monthObj.firstDate, \"yyyy-MM-dd\");\n        } else {\n          dateObject.fromDate = this.datePipe.transform(fromDate, \"yyyy-MM-dd\");\n        }\n        if (toDate > monthObj.lastDate) {\n          dateObject.toDate = this.datePipe.transform(monthObj.lastDate, \"yyyy-MM-dd\");\n        } else {\n          dateObject.toDate = this.datePipe.transform(toDate, \"yyyy-MM-dd\");\n        }\n        this.titleString = this.datePipe.transform(monthObj.firstDate, \"MMMM yyyy\");\n      }\n      this.disableCheckNextAndPrevious();\n      this.filterData = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        rmId: this.filterPanel.controls.rmId.value,\n        eqId: this.filterPanel.controls.eqId.value,\n        planId: this.filterPanel.controls.planId.value ? this.filterPanel.controls.planId.value : 0,\n        fromDate: dateObject.fromDate,\n        toDate: dateObject.toDate\n      };\n      this.spinner.show();\n      this.showSpinner = true;\n      this.refreshForecastDetails();\n    }\n    onPrevious() {\n      this.showSpinner = true;\n      this.spinner.show();\n      let previousFirstDate;\n      let fromDate = this.setTimeToZero(this.filterPanel.controls.fromDate.value);\n      let toDate = this.setTimeToZero(this.filterPanel.controls.toDate.value);\n      let dateObject = {\n        fromDate: '',\n        toDate: ''\n      };\n      if (this.showByValue == \"daily\") {\n        previousFirstDate = this.getDateFromDateString(this.titleString);\n        let nextDate = this.calculateNextDate(previousFirstDate, -1);\n        dateObject.fromDate = this.datePipe.transform(nextDate, \"yyyy-MM-dd\");\n        dateObject.toDate = this.datePipe.transform(nextDate, \"yyyy-MM-dd\");\n        this.titleString = this.datePipe.transform(nextDate, \"dd MMM yyyy\");\n      } else if (this.showByValue == \"weekly\") {\n        previousFirstDate = this.getDateFromWeekString(this.titleString);\n        let datestartvalue = this.calculateNextDate(previousFirstDate, -7);\n        let dateendvalue = this.calculateNextDate(datestartvalue, 6);\n        if (fromDate < datestartvalue) {\n          dateObject.fromDate = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\");\n        } else {\n          dateObject.fromDate = this.datePipe.transform(fromDate, \"yyyy-MM-dd\");\n        }\n        if (toDate > dateendvalue) {\n          dateObject.toDate = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\");\n        } else {\n          dateObject.toDate = this.datePipe.transform(toDate, \"yyyy-MM-dd\");\n        }\n        this.titleString = `${dateendvalue.getFullYear()}: Week - ${this.getWeekNumber(datestartvalue).toString()} (${this.datePipe.transform(datestartvalue, \"dd MMM yyyy\")} - ${this.datePipe.transform(dateendvalue, \"dd MMM yyyy\")})`;\n      } else if (this.showByValue == \"monthly\") {\n        previousFirstDate = this.getDateFromMonthString(this.titleString);\n        let monthObj = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, -1));\n        if (fromDate < monthObj.firstDate) {\n          dateObject.fromDate = this.datePipe.transform(monthObj.firstDate, \"yyyy-MM-dd\");\n        } else {\n          dateObject.fromDate = this.datePipe.transform(fromDate, \"yyyy-MM-dd\");\n        }\n        if (toDate > monthObj.lastDate) {\n          dateObject.toDate = this.datePipe.transform(monthObj.lastDate, \"yyyy-MM-dd\");\n        } else {\n          dateObject.toDate = this.datePipe.transform(toDate, \"yyyy-MM-dd\");\n        }\n        this.titleString = this.datePipe.transform(monthObj.firstDate, \"MMMM yyyy\");\n      }\n      this.disableCheckNextAndPrevious();\n      this.filterData = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        rmId: this.filterPanel.controls.rmId.value,\n        eqId: this.filterPanel.controls.eqId.value,\n        planId: this.filterPanel.controls.planId.value ? this.filterPanel.controls.planId.value : 0,\n        fromDate: dateObject.fromDate,\n        toDate: dateObject.toDate\n      };\n      this.spinner.show();\n      this.showSpinner = true;\n      this.refreshForecastDetails();\n    }\n    onClear() {\n      this.showCard = false;\n      let month = new Date().getMonth();\n      var date = new Date();\n      var nextDate = new Date(new Date().setMonth(month + 1));\n      this.setDefaultDates(date, nextDate);\n      this.filterPanel.patchValue({\n        blId: null,\n        flId: null,\n        rmId: null,\n        eqId: null,\n        planId: null\n      });\n      this.titleString = \"\";\n      this.showSpinner = false;\n      this.selectedDisplayParameters = [];\n      this.filterData = {};\n      this.showCardGrid = true;\n      this.showCardChart = false;\n      this.requestsList = [];\n      this.dateErrorMsg = '';\n      this.titleString = \"\";\n      this.displayRequestList = false;\n      this.showTradeDetails = false;\n      this.showPartDetails = false;\n      this.showToolDetails = false;\n      this.showPlanDetails = false;\n      this.planData = [];\n      this.openAccordionTabs = [];\n      this.keyPmPlannerList = [];\n      this.showByValue = 'daily';\n      this.showSpinner = false;\n      this.showNext = true;\n      this.showPrevious = true;\n      this.barchartData = [];\n      this.chartImg = [];\n      this.legendItems = [];\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      this.scrollToEndBl();\n      this.scrollToEndFl();\n      this.scrollToEndRm();\n    }\n    onClickRequest() {\n      this.displayRequestList = true;\n    }\n    onSelectBarChart(event, key) {\n      if (event.label == \"Available Hours\" || event.label == \"Available Quantity\") {\n        this.onClickDetails(key, event.series);\n      } else if (event.label == \"Required Hours\" || event.label == \"Required Quantity\") {\n        this.getPlanDetails();\n      }\n    }\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    setTimeToZero(date) {\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    changeDisplayType(event) {\n      this.showCardChart = false;\n      this.showCardGrid = false;\n      this.openAccordionTabs = [];\n      if (event.value == \"bar_chart\") {\n        this.showCardChart = true;\n      } else if (event.value == \"grid\") {\n        this.showCardGrid = true;\n      }\n    }\n    generatePlannerObject() {\n      this.forecastDisplayData = {\n        request: {\n          count: 0\n        },\n        trade: [],\n        tool: [],\n        part: []\n      };\n      let requestCount = {\n        count: this.forcastplannerData.requestsList.length\n      };\n      let tradeHoursMap = [];\n      let toolHoursMap = [];\n      let partQuantityMap = [];\n      if (this.forcastplannerData.requestsList.length > 0) {\n        tradeHoursMap = this.forcastplannerData.Trades.map(each => ({\n          id: each.id,\n          name: each.name,\n          requiredHours: each.requiredHours,\n          availableHours: each.standardHours - each.hoursInUse\n        }));\n        toolHoursMap = this.forcastplannerData.Tools.map(each => ({\n          id: each.id,\n          name: each.name,\n          requiredHours: each.requiredHours,\n          availableHours: each.standardHours - each.hoursInUse\n        }));\n        partQuantityMap = this.forcastplannerData.Parts.map(each => ({\n          id: each.id,\n          name: each.name,\n          requiredQuantity: each.requiredQuantity,\n          availableQuantity: each.standardQuantity\n        }));\n      }\n      this.forecastDisplayData = {\n        request: requestCount,\n        trade: tradeHoursMap,\n        tool: toolHoursMap,\n        part: partQuantityMap\n      };\n    }\n    generateBarChartData(list, isPartList) {\n      this.barchartData = [];\n      const barChartData = [];\n      list.forEach((each, index) => {\n        if (isPartList) {\n          let series = [{\n            \"name\": \"Available Quantity\",\n            \"value\": each.availableQuantity\n          }, {\n            \"name\": \"Required Quantity\",\n            \"value\": each.requiredQuantity\n          }];\n          let dataobj = {\n            name: each.name,\n            series: series\n          };\n          barChartData.push(dataobj);\n        } else {\n          let series = [{\n            \"name\": \"Available Hours\",\n            \"value\": each.availableHours\n          }, {\n            \"name\": \"Required Hours\",\n            \"value\": each.requiredHours\n          }];\n          let dataobj = {\n            name: each.name,\n            series: series\n          };\n          barChartData.push(dataobj);\n        }\n      });\n      if (barChartData.length < 5) {\n        let empty = '  ';\n        for (let i = 0; i < 5 - barChartData.length; i++) {\n          const emptySeries = isPartList ? [{\n            \"name\": \"Required Quantity\",\n            \"value\": 0\n          }, {\n            \"name\": \"Available Quantity\",\n            \"value\": 0\n          }] : [{\n            \"name\": \"Required Hours\",\n            \"value\": 0\n          }, {\n            \"name\": \"Available Hours\",\n            \"value\": 0\n          }];\n          barChartData.push({\n            name: empty.repeat(i + 1),\n            series: emptySeries\n          });\n        }\n      }\n      this.barchartData = barChartData;\n      this.cdr.detectChanges();\n    }\n    disableCheckNextAndPrevious() {\n      if (this.titleString != '') {\n        this.showPrevious = true;\n        this.showNext = true;\n        let fromDate = this.setTimeToZero(this.filterPanel.controls.fromDate.value);\n        let toDate = this.setTimeToZero(this.filterPanel.controls.toDate.value);\n        if (this.showByValue == \"daily\") {\n          let presentDate = this.getDateFromDateString(this.titleString);\n          if (presentDate >= toDate) {\n            this.showNext = false;\n          }\n          if (presentDate <= fromDate) {\n            this.showPrevious = false;\n          }\n        } else if (this.showByValue == \"weekly\") {\n          let weekFirstDate = this.getDateFromWeekString(this.titleString);\n          let weekLastDate = this.calculateNextDate(weekFirstDate, 6);\n          if (weekLastDate >= toDate) {\n            this.showNext = false;\n          }\n          if (weekFirstDate <= fromDate) {\n            this.showPrevious = false;\n          }\n        } else if (this.showByValue == \"monthly\") {\n          let monthObj = this.getMonthFirstAndLastDateforDate(this.getDateFromMonthString(this.titleString));\n          if (monthObj.lastDate >= toDate) {\n            this.showNext = false;\n          }\n          if (monthObj.firstDate <= fromDate) {\n            this.showPrevious = false;\n          }\n        }\n      }\n    }\n    getDateFromDateString(date) {\n      const dateString = date;\n      const dateParts = dateString.split(' ');\n      const year = parseInt(dateParts[2], 10);\n      const month = new Date(Date.parse(dateParts[1] + ' 1, 2023')).getMonth();\n      const day = parseInt(dateParts[0], 10);\n      const dateObject = new Date(year, month, day);\n      dateObject.setHours(0, 0, 0, 0);\n      return dateObject;\n    }\n    getDateFromWeekString(weekString) {\n      const parts = weekString.split(':');\n      const yearString = parts[0].trim();\n      const weekPart = parts[1].trim();\n      const year = parseInt(yearString, 10);\n      const weekMatch = weekPart.match(/\\d+/);\n      const weekNumber = weekMatch ? parseInt(weekMatch[0], 10) : 1;\n      const startOfWeekDay = 1;\n      const date = new Date(year, 0, 1);\n      const daysToMonday = (7 - (date.getDay() - startOfWeekDay)) % 7;\n      date.setDate(date.getDate() + daysToMonday);\n      const daysToAdd = (weekNumber - 1) * 7;\n      date.setDate(date.getDate() + daysToAdd);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    getDateFromMonthString(monthString) {\n      const dateParts = monthString.split(' ');\n      const month = dateParts[0];\n      const year = parseInt(dateParts[1], 10);\n      const dateObject = new Date(year, this.getMonthNumber(month), 1);\n      dateObject.setHours(0, 0, 0, 0);\n      return dateObject;\n    }\n    getMonthNumber(month) {\n      const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      return months.indexOf(month);\n    }\n    getWeekFirstAndLastDateforDate(date) {\n      const result = {\n        firstDate: new Date(date),\n        lastDate: new Date(date)\n      };\n      result.firstDate.setDate(date.getDate() - date.getDay() + (date.getDay() == 0 ? -6 : 1));\n      result.firstDate.setHours(0, 0, 0, 0);\n      result.lastDate.setDate(date.getDate() - date.getDay() + (date.getDay() == 0 ? 0 : 7));\n      result.lastDate.setHours(23, 59, 59, 999);\n      return result;\n    }\n    getMonthFirstAndLastDateforDate(date) {\n      const result = {\n        firstDate: new Date(date),\n        lastDate: new Date(date)\n      };\n      result.firstDate.setDate(1);\n      result.firstDate.setHours(0, 0, 0, 0);\n      result.lastDate.setMonth(date.getMonth() + 1, 0);\n      result.lastDate.setHours(23, 59, 59, 999);\n      return result;\n    }\n    getWeekNumber(date) {\n      let currentDate = new Date(date);\n      currentDate.setHours(0, 0, 0, 0);\n      currentDate.setDate(currentDate.getDate() + 4 - (currentDate.getDay() || 7));\n      let yearStart = new Date(currentDate.getFullYear(), 0, 1);\n      let weekNumber = Math.ceil(((currentDate - yearStart) / 86400000 + 1) / 7);\n      return weekNumber;\n    }\n    calculateNextDate(currentDate, daysToAdd) {\n      let nextDate = new Date(currentDate);\n      nextDate.setDate(nextDate.getDate() + daysToAdd);\n      return nextDate;\n    }\n    calculateNextMonth(currentDate, monthsToAdd) {\n      let date = new Date(currentDate);\n      date.setMonth(date.getMonth() + monthsToAdd);\n      return date;\n    }\n    getDisplayKey(key) {\n      let displayKey = \"\";\n      if (key == \"request\") {\n        displayKey = \"Request\";\n      } else if (key == \"trade\") {\n        displayKey = \"Trade\";\n      } else if (key == \"tool\") {\n        displayKey = \"Tool\";\n      } else if (key == \"part\") {\n        displayKey = \"Part\";\n      } else if (key == \"technician\") {\n        displayKey = \"Technician\";\n      }\n      return displayKey;\n    }\n    onCloseDetails() {\n      this.spinner.show();\n      this.showSpinner = true;\n      this.refreshForecastDetails();\n      this.showPlanDetails = false;\n    }\n    refreshForecastDetails() {\n      this.planscheduleSrv.getForecastDetails(this.filterData).subscribe(res => {\n        this.forcastplannerData = res;\n        this.requestsList = res.requestsList;\n        this.generatePlannerObject();\n        this.refreshBarChartData();\n        this.spinner.hide();\n        this.showSpinner = false;\n      });\n    }\n    refreshBarChartData() {\n      if (this.showCardChart) {\n        if (this.key == \"tool\") {\n          this.legendItems = [{\n            name: \"Available Hours\",\n            color: \"#5AA454\"\n          }, {\n            name: \"Required Hours\",\n            color: \"#C7B42C\"\n          }];\n          this.generateBarChartData(this.forecastDisplayData.tool, false);\n        } else if (this.key == \"trade\") {\n          this.legendItems = [{\n            name: \"Available Hours\",\n            color: \"#5AA454\"\n          }, {\n            name: \"Required Hours\",\n            color: \"#C7B42C\"\n          }];\n          this.generateBarChartData(this.forecastDisplayData.trade, false);\n        } else if (this.key == \"part\") {\n          this.legendItems = [{\n            name: \"Available Quantity\",\n            color: \"#5AA454\"\n          }, {\n            name: \"Required Quantity\",\n            color: \"#C7B42C\"\n          }];\n          this.generateBarChartData(this.forecastDisplayData.part, true);\n        }\n      }\n    }\n    updateTradeDetailsDialog() {\n      if (this.useTabletProtrait) {\n        this.tradeDetailsDialogWidth = '60vw';\n      } else {\n        this.tradeDetailsDialogWidth = '40vw';\n      }\n      if (this.showTradeDetails) {\n        this.showTradeDetails = false;\n        setTimeout(() => {\n          this.showTradeDetails = true;\n          this.cdr.detectChanges();\n        }, 100);\n      }\n    }\n    ngOnDestroy() {\n      this.bps.unregister(this);\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blService.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blService.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.updateFlList(this.selectedFl);\n      });\n    }\n    scrollToEndRm() {\n      this.offsetRm = this.limitRm;\n      this.limitRm += this.scrollLimit;\n      this.filterCriteria.limit = this.limitRm;\n      this.filterCriteria.offset = this.offsetRm;\n      this.blService.getALLRoomByScroll(this.filterCriteria).subscribe(res => {\n        this.enumRm = res;\n        this.updateRmList(this.selectedRm);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    searchRm(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"rmName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndRm();\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      if (flData.flId) {\n        this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n        this.enumFL = this.enumFL.filter(t => t.flId !== null);\n        this.enumFL.unshift(flData);\n      }\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateRmList(rmData) {\n      if (rmData.rmId) {\n        this.enumRm = this.enumRm.filter(t => t.rmId !== rmData.rmId);\n        this.enumRm = this.enumRm.filter(t => t.rmId !== null);\n        this.enumRm.unshift(rmData);\n      }\n      this.enumRm.unshift(new RoomFilterInputDTO(null, 'Make a selection', null, null));\n    }\n    createBlData(bl) {\n      const blData = {\n        blId: bl.blId,\n        blNameString: bl.blName != null ? bl.blCode + \" - \" + bl.blName : bl.blCode,\n        site: null\n      };\n      return blData;\n    }\n    createFlData(fl) {\n      const flData = {\n        flId: fl.flId,\n        flNameString: fl.flName != null ? fl.flCode + \" - \" + fl.flName : fl.flCode,\n        blId: fl.blId,\n        blNameString: fl.bl.blName != null ? fl.bl.blCode + \" - \" + fl.bl.blName : fl.bl.blCode\n      };\n      return flData;\n    }\n    createRmData(rm) {\n      const rmData = {\n        rmId: rm.rmId,\n        rmNameString: rm.rmName != null ? rm.rmCode + \" - \" + rm.rmName : rm.rmCode,\n        flId: rm.flId,\n        blId: rm.blId\n      };\n      return rmData;\n    }\n    getBlById(blId) {\n      this.blService.getBlById(blId).subscribe(res => {\n        const blData = this.createBlData(res.bl);\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n      });\n    }\n    getFlById(flId) {\n      this.blService.getFlById(flId).subscribe(res => {\n        const flData = this.createFlData(res);\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n      });\n    }\n    getRmById(rmId) {\n      this.blService.getRmById(rmId).subscribe(res => {\n        const rmData = this.createRmData(res.rm);\n        this.selectedRm = rmData;\n        this.updateRmList(rmData);\n      });\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    onOpenRm() {\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      if (this.selectedFl.flId) {\n        this.filterCriteria = {\n          fieldName: \"fl.flId\",\n          value: this.selectedFl.flId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndRm();\n    }\n    static #_ = this.ɵfac = function ForecastReportsComponent_Factory(t) {\n      return new (t || ForecastReportsComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.BuildingService), i0.ɵɵdirectiveInject(i5.TradesService), i0.ɵɵdirectiveInject(i6.PartsService), i0.ɵɵdirectiveInject(i7.ToolsService), i0.ɵɵdirectiveInject(i8.EquipmentService), i0.ɵɵdirectiveInject(i9.PpmPlanService), i0.ɵɵdirectiveInject(i10.PlanScheduleService), i0.ɵɵdirectiveInject(i11.NgxSpinnerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i12.BreakpointService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForecastReportsComponent,\n      selectors: [[\"app-forecast-reports\"]],\n      viewQuery: function ForecastReportsComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentArea = _t.first);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 17,\n      vars: 26,\n      consts: [[1, \"card\", 2, \"overflow-x\", \"auto\", \"padding\", \"5px\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [\"class\", \"card\", \"style\", \"height:72vh;\", \"id\", \"contentArea\", 4, \"ngIf\"], [\"header\", \"Requests List\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"closable\", \"visibleChange\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", 3, \"value\", \"paginator\", \"rows\", \"scrollable\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\"], [\"tt\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"pTemplate\", \"footer\"], [\"id\", \"Trade Details\", 3, \"visible\", \"style\", \"modal\", \"draggable\", \"visibleChange\", 4, \"ngIf\"], [\"header\", \"Part Details\", 3, \"visible\", \"style\", \"modal\", \"draggable\", \"visibleChange\", 4, \"ngIf\"], [\"header\", \"Tool Details\", 3, \"visible\", \"style\", \"modal\", \"draggable\", \"visibleChange\", 4, \"ngIf\"], [3, \"visible\", \"style\", \"modal\", \"draggable\", \"closable\", \"visibleChange\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"fromDate\", \"inputId\", \"icon\", 3, \"minDate\", \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"toDate\", \"inputId\", \"icon\", 3, \"showIcon\", \"minDate\", \"maxDate\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"rmId\", \"bindLabel\", \"rmNameString\", \"bindValue\", \"rmId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [4, \"ngIf\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"bindLabel\", \"eqCode\", \"bindValue\", \"eqId\", \"formControlName\", \"eqId\", 1, \"ng-select-dropdown\", 3, \"items\", \"clearable\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"planId\", \"bindLabel\", \"planName\", \"bindValue\", \"planId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"width\", \"20%\"], [2, \"margin-top\", \"16px\", \"margin-right\", \"10px\", \"display\", \"flex\", \"justify-content\", \"flex-end\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [2, \"width\", \"25%\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"rmId\", \"bindLabel\", \"rmNameString\", \"bindValue\", \"rmId\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\", \"scrollToEnd\", \"open\", \"search\"], [\"id\", \"contentArea\", 1, \"card\", 2, \"height\", \"72vh\"], [\"contentArea\", \"\"], [2, \"margin\", \"0px 5px 0px 5px\"], [2, \"height\", \"50px\", \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"space-between\"], [2, \"margin-left\", \"5px\"], [\"optionLabel\", \"label\", \"optionValue\", \"value\", 3, \"options\", \"ngModel\", \"multiple\", \"ngModelChange\", \"onChange\"], [2, \"margin-right\", \"5px\"], [2, \"display\", \"flex\"], [2, \"margin-right\", \"10px\"], [\"name\", \"group1\", \"value\", \"trade\", \"inputId\", \"trade\", 1, \"select-box\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"for\", \"trade\", 1, \"select-label\"], [\"name\", \"group1\", \"value\", \"part\", \"inputId\", \"part\", 1, \"select-box\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"for\", \"part\", 1, \"select-label\"], [\"name\", \"group1\", \"value\", \"tool\", \"inputId\", \"tool\", 1, \"select-box\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"for\", \"tool\", 1, \"select-label\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"justify-content\", \"space-around\", \"width\", \"100%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-chevron-left\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"width\", \"30px\", 3, \"disabled\", \"click\"], [2, \"width\", \"93%\"], [1, \"pmplanner-date-header\"], [1, \"card-text\"], [1, \"card\"], [1, \"card\", \"request-card\"], [1, \"request-content-title\", \"hover-pointer\", \"zoom-on-hover\", 2, \"margin-left\", \"12px\", 3, \"click\"], [\"class\", \"example-container\", 4, \"ngIf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-chevron-right\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"width\", \"30px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-table\", 1, \"grid_chart_selection_button\", 3, \"ngClass\", \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-chart-bar\", 1, \"grid_chart_selection_button\", 3, \"ngClass\", \"click\"], [1, \"example-container\"], [3, \"onOpen\"], [3, \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"selected\"], [1, \"atndAcrdn\"], [\"width\", \"100%\", 2, \"table-layout\", \"fixed\"], [1, \"table-header\"], [1, \"table-header\", 2, \"text-align\", \"right\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\"], [1, \"card-content-title\", \"hover-pointer\", \"zoom-on-hover\", 3, \"click\"], [2, \"text-align\", \"right\"], [1, \"card-content-title\", \"hover-pointer\", \"zoom-on-hover\", 2, \"text-align\", \"right\", 3, \"click\"], [\"chartContainer\", \"\"], [\"style\", \"overflow: auto;\", 4, \"ngIf\"], [\"style\", \"width:100%;height:450px; display:flex;justify-content: center;align-items: center;\", 4, \"ngIf\"], [2, \"overflow\", \"auto\"], [3, \"view\", \"scheme\", \"results\", \"xAxis\", \"yAxis\", \"legend\", \"gradient\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"yAxisLabel\", \"showGridLines\", \"select\"], [1, \"legend\"], [1, \"legend-title-container\"], [1, \"legend-title\"], [1, \"legend-wrap\"], [\"class\", \"legend-labels\", 4, \"ngFor\", \"ngForOf\"], [1, \"legend-labels\"], [1, \"legend-label\"], [3, \"title\"], [1, \"legend-label-color\"], [1, \"legend-label-text\"], [2, \"width\", \"100%\", \"height\", \"450px\", \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [\"pSortableColumn\", \"dateRequested\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"dateRequested\"], [\"type\", \"text\", \"field\", \"dateRequested\", \"display\", \"menu\"], [\"pSortableColumn\", \"escDateResponded\"], [\"field\", \"escDateResponded\"], [\"type\", \"text\", \"field\", \"escDateResponded\", \"display\", \"menu\"], [\"pSortableColumn\", \"escDateCompleted\"], [\"field\", \"escDateCompleted\"], [\"type\", \"text\", \"field\", \"escDateCompleted\", \"display\", \"menu\"], [\"pSortableColumn\", \"building\"], [\"field\", \"building\"], [\"type\", \"text\", \"field\", \"building\", \"display\", \"menu\"], [\"pSortableColumn\", \"floor\"], [\"field\", \"floor\"], [\"type\", \"text\", \"field\", \"floor\", \"display\", \"menu\"], [\"pSortableColumn\", \"room\"], [\"field\", \"room\"], [\"type\", \"text\", \"field\", \"room\", \"display\", \"menu\"], [\"pSortableColumn\", \"eqCode\"], [\"field\", \"eqCode\"], [\"type\", \"text\", \"field\", \"eqCode\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"label\", \"Close\", \"styleClass\", \"p-button-text\", 3, \"click\"], [\"id\", \"Trade Details\", 3, \"visible\", \"modal\", \"draggable\", \"visibleChange\"], [3, \"selectedTrade\"], [\"header\", \"Part Details\", 3, \"visible\", \"modal\", \"draggable\", \"visibleChange\"], [3, \"selectedPart\"], [\"header\", \"Tool Details\", 3, \"visible\", \"modal\", \"draggable\", \"visibleChange\"], [1, \"disabled-form\", 3, \"formGroup\"], [\"id\", \"tool\"], [\"formControlName\", \"toolsFormPanel\", 1, \"disabled-form\"], [3, \"visible\", \"modal\", \"draggable\", \"closable\", \"visibleChange\"], [3, \"planData\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"label\", \"Close\", \"styleClass\", \"p-button-text\", 1, \"p-button-secondary\", \"p-button-sm\", 3, \"click\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n      template: function ForecastReportsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵtemplate(2, ForecastReportsComponent_table_2_Template, 49, 23, \"table\", 2);\n          i0.ɵɵtemplate(3, ForecastReportsComponent_table_3_Template, 49, 23, \"table\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(4, ForecastReportsComponent_div_4_Template, 35, 12, \"div\", 3);\n          i0.ɵɵelementStart(5, \"p-dialog\", 4);\n          i0.ɵɵlistener(\"visibleChange\", function ForecastReportsComponent_Template_p_dialog_visibleChange_5_listener($event) {\n            return ctx.displayRequestList = $event;\n          });\n          i0.ɵɵelementStart(6, \"p-table\", 5, 6);\n          i0.ɵɵtemplate(8, ForecastReportsComponent_ng_template_8_Template, 65, 0, \"ng-template\", 7);\n          i0.ɵɵtemplate(9, ForecastReportsComponent_ng_template_9_Template, 21, 24, \"ng-template\", 8);\n          i0.ɵɵtemplate(10, ForecastReportsComponent_ng_template_10_Template, 3, 1, \"ng-template\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, ForecastReportsComponent_ng_template_11_Template, 1, 0, \"ng-template\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, ForecastReportsComponent_p_dialog_12_Template, 2, 8, \"p-dialog\", 11);\n          i0.ɵɵtemplate(13, ForecastReportsComponent_p_dialog_13_Template, 2, 8, \"p-dialog\", 12);\n          i0.ɵɵtemplate(14, ForecastReportsComponent_p_dialog_14_Template, 5, 8, \"p-dialog\", 13);\n          i0.ɵɵtemplate(15, ForecastReportsComponent_p_dialog_15_Template, 3, 10, \"p-dialog\", 14);\n          i0.ɵɵtemplate(16, ForecastReportsComponent_ngx_spinner_16_Template, 3, 1, \"ngx-spinner\", 15);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showCard);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c5));\n          i0.ɵɵproperty(\"visible\", ctx.displayRequestList)(\"modal\", true)(\"maximizable\", false)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.requestsList)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"scrollable\", true)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(25, _c6))(\"rowHover\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.showTradeDetails);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showPartDetails);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showToolDetails);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showPlanDetails);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgStyle, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i13.NgSelectComponent, i14.MatLegacyCard, i14.MatLegacyCardContent, i15.Accordion, i15.AccordionTab, i16.Header, i16.PrimeTemplate, i17.Table, i17.SortableColumn, i17.SelectableRow, i17.SortIcon, i17.ColumnFilter, i18.Calendar, i19.ButtonDirective, i20.Dialog, i21.Checkbox, i22.SelectButton, i1.NgModel, i11.NgxSpinnerComponent, i23.BarVertical2DComponent, i24.TradeDetailsComponent, i25.PartDetailsComponent, i26.AddToolsComponent, i27.ForecastPlanDetailsComponent, i3.DatePipe],\n      styles: [\".example-container[_ngcontent-%COMP%]{height:-moz-fit-content;height:fit-content;max-height:54.5vh;overflow-y:auto;padding:5px}.card-header[_ngcontent-%COMP%]{font-weight:500;padding:5px 5px 5px 0;font-size:14px}.card-content-title[_ngcontent-%COMP%]{font-weight:400;font-size:11px}.table-header[_ngcontent-%COMP%]{font-weight:500;font-size:12px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:lightgray;border-radius:2px}[_ngcontent-%COMP%]::-webkit-scrollbar{width:4px;height:0px}.select-box[_ngcontent-%COMP%]{margin-right:5px}.select-label[_ngcontent-%COMP%]{font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;font-weight:400}.pmplanner-date-header[_ngcontent-%COMP%]{height:30px;display:flex;justify-content:center;align-items:center;background-color:#c0dbf0}  .dark-panel.p-dialog .p-dialog-header{border-radius:5px 5px 0 0/5px 5px 0px 0px;padding:10px 10px 10px 20px}  .p-dialog-content{overflow:visible}  .p-dialog .p-dialog-content{padding:10px}.zoom-on-hover[_ngcontent-%COMP%]{transition:transform .3s}.zoom-on-hover[_ngcontent-%COMP%]:hover{padding-left:4px;border-radius:2px;transform:scale(1.01);background-color:#c0dbf0;transition:background-color .2s,color .2s,border-color .2s,box-shadow .2s;cursor:pointer}.internal-card[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;padding-left:2px;padding-right:2px;margin-bottom:4px;height:25px}  .p-panel .p-panel-header{border-bottom:none}  .p-panel .p-panel-content{padding:0 10px}.request-content-title[_ngcontent-%COMP%]{font-weight:400;font-size:13px;padding-left:12px}.request-card[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;align-items:center;height:35px;margin:5px}.legend[_ngcontent-%COMP%]{display:inline-block;padding:0;width:auto!important}.legend-title-container[_ngcontent-%COMP%]{width:166px}[_nghost-%COMP%]     .ngx-charts-outer{animation:chartFadeIn linear 0!important}[_nghost-%COMP%]     .ngx-charts .grid-panel.odd rect{fill:none!important}.legend-title[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.legend-wrap[_ngcontent-%COMP%]{width:calc(100% - 10px)}.legend-labels[_ngcontent-%COMP%]{line-height:85%;list-style:none;text-align:left;float:left;width:70%;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05);margin-bottom:0}.legend-label[_ngcontent-%COMP%]{cursor:pointer;font-size:90%;margin:8px}.legend-label-color[_ngcontent-%COMP%]{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.legend-label-text[_ngcontent-%COMP%]{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.icon-right[_ngcontent-%COMP%]{float:right;margin-left:auto}.atndAcrdn[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;align-items:center;max-height:10px}.grid_chart_selection_button[_ngcontent-%COMP%]{margin-left:auto;margin-right:5px;height:25px!important;width:25px!important}  .p-dialog{margin-left:220px}.disabled-form[_ngcontent-%COMP%]{opacity:.8;pointer-events:none}  .ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{overflow:hidden!important;text-overflow:ellipsis!important;white-space:nowrap!important;max-width:200px!important}\"]\n    });\n  }\n  return ForecastReportsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}