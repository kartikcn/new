{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { BidiModule } from '@angular/cdk/bidi';\nfunction NzDividerComponent_span_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.nzText);\n  }\n}\nfunction NzDividerComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵtemplate(1, NzDividerComponent_span_0_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzText);\n  }\n}\nclass NzDividerComponent {\n  constructor() {\n    this.nzType = 'horizontal';\n    this.nzOrientation = 'center';\n    this.nzDashed = false;\n    this.nzPlain = false;\n  }\n  static #_ = this.ɵfac = function NzDividerComponent_Factory(t) {\n    return new (t || NzDividerComponent)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzDividerComponent,\n    selectors: [[\"nz-divider\"]],\n    hostAttrs: [1, \"ant-divider\"],\n    hostVars: 16,\n    hostBindings: function NzDividerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"ant-divider-horizontal\", ctx.nzType === \"horizontal\")(\"ant-divider-vertical\", ctx.nzType === \"vertical\")(\"ant-divider-with-text\", ctx.nzText)(\"ant-divider-plain\", ctx.nzPlain)(\"ant-divider-with-text-left\", ctx.nzText && ctx.nzOrientation === \"left\")(\"ant-divider-with-text-right\", ctx.nzText && ctx.nzOrientation === \"right\")(\"ant-divider-with-text-center\", ctx.nzText && ctx.nzOrientation === \"center\")(\"ant-divider-dashed\", ctx.nzDashed);\n      }\n    },\n    inputs: {\n      nzText: \"nzText\",\n      nzType: \"nzType\",\n      nzOrientation: \"nzOrientation\",\n      nzDashed: \"nzDashed\",\n      nzPlain: \"nzPlain\"\n    },\n    exportAs: [\"nzDivider\"],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"ant-divider-inner-text\", 4, \"ngIf\"], [1, \"ant-divider-inner-text\"], [4, \"nzStringTemplateOutlet\"]],\n    template: function NzDividerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NzDividerComponent_span_0_Template, 2, 1, \"span\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.nzText);\n      }\n    },\n    dependencies: [i1.NgIf, i2.NzStringTemplateOutletDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n__decorate([InputBoolean()], NzDividerComponent.prototype, \"nzDashed\", void 0);\n__decorate([InputBoolean()], NzDividerComponent.prototype, \"nzPlain\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzDividerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-divider',\n      exportAs: 'nzDivider',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <span *ngIf=\"nzText\" class=\"ant-divider-inner-text\">\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n    </span>\n  `,\n      host: {\n        class: 'ant-divider',\n        '[class.ant-divider-horizontal]': `nzType === 'horizontal'`,\n        '[class.ant-divider-vertical]': `nzType === 'vertical'`,\n        '[class.ant-divider-with-text]': `nzText`,\n        '[class.ant-divider-plain]': `nzPlain`,\n        '[class.ant-divider-with-text-left]': `nzText && nzOrientation === 'left'`,\n        '[class.ant-divider-with-text-right]': `nzText && nzOrientation === 'right'`,\n        '[class.ant-divider-with-text-center]': `nzText && nzOrientation === 'center'`,\n        '[class.ant-divider-dashed]': `nzDashed`\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzText: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzOrientation: [{\n      type: Input\n    }],\n    nzDashed: [{\n      type: Input\n    }],\n    nzPlain: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzDividerModule {\n  static #_ = this.ɵfac = function NzDividerModule_Factory(t) {\n    return new (t || NzDividerModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzDividerModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BidiModule, CommonModule, NzOutletModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzDividerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, NzOutletModule],\n      declarations: [NzDividerComponent],\n      exports: [NzDividerComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzDividerComponent, NzDividerModule };","map":{"version":3,"names":["__decorate","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","InputBoolean","i1","CommonModule","i2","NzOutletModule","BidiModule","NzDividerComponent_span_0_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","nzText","NzDividerComponent_span_0_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵproperty","NzDividerComponent","constructor","nzType","nzOrientation","nzDashed","nzPlain","_","ɵfac","NzDividerComponent_Factory","t","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","NzDividerComponent_HostBindings","ɵɵclassProp","inputs","exportAs","decls","vars","consts","template","NzDividerComponent_Template","dependencies","NgIf","NzStringTemplateOutletDirective","encapsulation","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","selector","preserveWhitespaces","None","OnPush","host","class","NzDividerModule","NzDividerModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["C:/Users/Manav Gupta/Downloads/fms/fms/frontend/fms_frontend/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-divider.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nclass NzDividerComponent {\n    constructor() {\n        this.nzType = 'horizontal';\n        this.nzOrientation = 'center';\n        this.nzDashed = false;\n        this.nzPlain = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzDividerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NzDividerComponent, selector: \"nz-divider\", inputs: { nzText: \"nzText\", nzType: \"nzType\", nzOrientation: \"nzOrientation\", nzDashed: \"nzDashed\", nzPlain: \"nzPlain\" }, host: { properties: { \"class.ant-divider-horizontal\": \"nzType === 'horizontal'\", \"class.ant-divider-vertical\": \"nzType === 'vertical'\", \"class.ant-divider-with-text\": \"nzText\", \"class.ant-divider-plain\": \"nzPlain\", \"class.ant-divider-with-text-left\": \"nzText && nzOrientation === 'left'\", \"class.ant-divider-with-text-right\": \"nzText && nzOrientation === 'right'\", \"class.ant-divider-with-text-center\": \"nzText && nzOrientation === 'center'\", \"class.ant-divider-dashed\": \"nzDashed\" }, classAttribute: \"ant-divider\" }, exportAs: [\"nzDivider\"], ngImport: i0, template: `\n    <span *ngIf=\"nzText\" class=\"ant-divider-inner-text\">\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n    </span>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzDividerComponent.prototype, \"nzDashed\", void 0);\n__decorate([\n    InputBoolean()\n], NzDividerComponent.prototype, \"nzPlain\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzDividerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-divider',\n                    exportAs: 'nzDivider',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <span *ngIf=\"nzText\" class=\"ant-divider-inner-text\">\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n    </span>\n  `,\n                    host: {\n                        class: 'ant-divider',\n                        '[class.ant-divider-horizontal]': `nzType === 'horizontal'`,\n                        '[class.ant-divider-vertical]': `nzType === 'vertical'`,\n                        '[class.ant-divider-with-text]': `nzText`,\n                        '[class.ant-divider-plain]': `nzPlain`,\n                        '[class.ant-divider-with-text-left]': `nzText && nzOrientation === 'left'`,\n                        '[class.ant-divider-with-text-right]': `nzText && nzOrientation === 'right'`,\n                        '[class.ant-divider-with-text-center]': `nzText && nzOrientation === 'center'`,\n                        '[class.ant-divider-dashed]': `nzDashed`\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { nzText: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzOrientation: [{\n                type: Input\n            }], nzDashed: [{\n                type: Input\n            }], nzPlain: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzDividerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: NzDividerModule, declarations: [NzDividerComponent], imports: [BidiModule, CommonModule, NzOutletModule], exports: [NzDividerComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzDividerModule, imports: [BidiModule, CommonModule, NzOutletModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NzDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, NzOutletModule],\n                    declarations: [NzDividerComponent],\n                    exports: [NzDividerComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzDividerComponent, NzDividerModule };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,SAAS,EAAEC,iBAAiB,EAAEC,uBAAuB,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AACtG,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAO,KAAKC,EAAE,MAAM,2BAA2B;AAC/C,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,kDAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IASqDb,EAAE,CAAAe,uBAAA,EAGlD,CAAC;IAH+Cf,EAAE,CAAAgB,MAAA,EAGtC,CAAC;IAHmChB,EAAE,CAAAiB,qBAAA,CAGvB,CAAC;EAAA;EAAA,IAAAJ,EAAA;IAAA,MAAAK,MAAA,GAHoBlB,EAAE,CAAAmB,aAAA;IAAFnB,EAAE,CAAAoB,SAAA,EAGtC,CAAC;IAHmCpB,EAAE,CAAAqB,iBAAA,CAAAH,MAAA,CAAAI,MAGtC,CAAC;EAAA;AAAA;AAAA,SAAAC,mCAAAV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAHmCb,EAAE,CAAAwB,cAAA,aAE/C,CAAC;IAF4CxB,EAAE,CAAAyB,UAAA,IAAAb,iDAAA,yBAGvB,CAAC;IAHoBZ,EAAE,CAAA0B,YAAA,CAI5F,CAAC;EAAA;EAAA,IAAAb,EAAA;IAAA,MAAAc,MAAA,GAJyF3B,EAAE,CAAAmB,aAAA;IAAFnB,EAAE,CAAAoB,SAAA,EAGpD,CAAC;IAHiDpB,EAAE,CAAA4B,UAAA,2BAAAD,MAAA,CAAAL,MAGpD,CAAC;EAAA;AAAA;AAVnD,MAAMO,kBAAkB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG,YAAY;IAC1B,IAAI,CAACC,aAAa,GAAG,QAAQ;IAC7B,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;EACxB;EAAC,QAAAC,CAAA,GACQ,IAAI,CAACC,IAAI,YAAAC,2BAAAC,CAAA;IAAA,YAAAA,CAAA,IAAwFT,kBAAkB;EAAA,CAAmD;EAAA,QAAAU,EAAA,GACtK,IAAI,CAACC,IAAI,kBAD8ExC,EAAE,CAAAyC,iBAAA;IAAAC,IAAA,EACJb,kBAAkB;IAAAc,SAAA;IAAAC,SAAA;IAAAC,QAAA;IAAAC,YAAA,WAAAC,gCAAAlC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QADhBb,EAAE,CAAAgD,WAAA,2BAAAlC,GAAA,CAAAiB,MAAA,2CAAAjB,GAAA,CAAAiB,MAAA,0CAAAjB,GAAA,CAAAQ,MAAA,uBAAAR,GAAA,CAAAoB,OAAA,gCAAApB,GAAA,CAAAQ,MAAA,IAAAR,GAAA,CAAAkB,aAAA,4CAAAlB,GAAA,CAAAQ,MAAA,IAAAR,GAAA,CAAAkB,aAAA,8CAAAlB,GAAA,CAAAQ,MAAA,IAAAR,GAAA,CAAAkB,aAAA,qCAAAlB,GAAA,CAAAmB,QAAA;MAAA;IAAA;IAAAgB,MAAA;MAAA3B,MAAA;MAAAS,MAAA;MAAAC,aAAA;MAAAC,QAAA;MAAAC,OAAA;IAAA;IAAAgB,QAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAA1C,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFb,EAAE,CAAAyB,UAAA,IAAAF,kCAAA,iBAI5F,CAAC;MAAA;MAAA,IAAAV,EAAA;QAJyFb,EAAE,CAAA4B,UAAA,SAAAd,GAAA,CAAAQ,MAEhF,CAAC;MAAA;IAAA;IAAAkC,YAAA,GAGwCjD,EAAE,CAACkD,IAAI,EAA6FhD,EAAE,CAACiD,+BAA+B;IAAAC,aAAA;IAAAC,eAAA;EAAA,EAAqP;AAC1b;AACA7D,UAAU,CAAC,CACPO,YAAY,CAAC,CAAC,CACjB,EAAEuB,kBAAkB,CAACgC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AACpD9D,UAAU,CAAC,CACPO,YAAY,CAAC,CAAC,CACjB,EAAEuB,kBAAkB,CAACgC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACnD;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAboG9D,EAAE,CAAA+D,iBAAA,CAaXlC,kBAAkB,EAAc,CAAC;IAChHa,IAAI,EAAEzC,SAAS;IACf+D,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,YAAY;MACtBf,QAAQ,EAAE,WAAW;MACrBgB,mBAAmB,EAAE,KAAK;MAC1BP,aAAa,EAAEzD,iBAAiB,CAACiE,IAAI;MACrCP,eAAe,EAAEzD,uBAAuB,CAACiE,MAAM;MAC/Cd,QAAQ,EAAG;AAC/B;AACA;AACA;AACA,GAAG;MACiBe,IAAI,EAAE;QACFC,KAAK,EAAE,aAAa;QACpB,gCAAgC,EAAG,yBAAwB;QAC3D,8BAA8B,EAAG,uBAAsB;QACvD,+BAA+B,EAAG,QAAO;QACzC,2BAA2B,EAAG,SAAQ;QACtC,oCAAoC,EAAG,oCAAmC;QAC1E,qCAAqC,EAAG,qCAAoC;QAC5E,sCAAsC,EAAG,sCAAqC;QAC9E,4BAA4B,EAAG;MACnC;IACJ,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC,EAAkB;IAAEhD,MAAM,EAAE,CAAC;MACnEoB,IAAI,EAAEtC;IACV,CAAC,CAAC;IAAE2B,MAAM,EAAE,CAAC;MACTW,IAAI,EAAEtC;IACV,CAAC,CAAC;IAAE4B,aAAa,EAAE,CAAC;MAChBU,IAAI,EAAEtC;IACV,CAAC,CAAC;IAAE6B,QAAQ,EAAE,CAAC;MACXS,IAAI,EAAEtC;IACV,CAAC,CAAC;IAAE8B,OAAO,EAAE,CAAC;MACVQ,IAAI,EAAEtC;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA,MAAMmE,eAAe,CAAC;EAAA,QAAApC,CAAA,GACT,IAAI,CAACC,IAAI,YAAAoC,wBAAAlC,CAAA;IAAA,YAAAA,CAAA,IAAwFiC,eAAe;EAAA,CAAkD;EAAA,QAAAhC,EAAA,GAClK,IAAI,CAACkC,IAAI,kBAxD8EzE,EAAE,CAAA0E,gBAAA;IAAAhC,IAAA,EAwDS6B;EAAe,EAA2H;EAAA,QAAAI,EAAA,GAC5O,IAAI,CAACC,IAAI,kBAzD8E5E,EAAE,CAAA6E,gBAAA;IAAAC,OAAA,GAyDoCnE,UAAU,EAAEH,YAAY,EAAEE,cAAc;EAAA,EAAI;AACtL;AACA;EAAA,QAAAoD,SAAA,oBAAAA,SAAA,KA3DoG9D,EAAE,CAAA+D,iBAAA,CA2DXQ,eAAe,EAAc,CAAC;IAC7G7B,IAAI,EAAErC,QAAQ;IACd2D,IAAI,EAAE,CAAC;MACCc,OAAO,EAAE,CAACnE,UAAU,EAAEH,YAAY,EAAEE,cAAc,CAAC;MACnDqE,YAAY,EAAE,CAAClD,kBAAkB,CAAC;MAClCmD,OAAO,EAAE,CAACnD,kBAAkB;IAChC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASA,kBAAkB,EAAE0C,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}