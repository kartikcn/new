{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../services/document-list-services\";\nimport * as i5 from \"src/app/services/enum.service\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"../../../../directive/directive/trim-input.directive\";\nimport * as i11 from \"ng-zorro-antd/table\";\nimport * as i12 from \"ng-zorro-antd/input\";\nimport * as i13 from \"@ng-select/ng-select\";\nfunction AddDocumentComponent_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"p\");\n    i0.ɵɵtext(2, \"Selected file exceeds the size limit of 1MB.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 24)(4, \"div\", 25)(5, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AddDocumentComponent_ng_template_35_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.showWarning = !ctx_r2.showWarning);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nconst _c1 = function () {\n  return {\n    width: \"25vw\"\n  };\n};\nexport let AddDocumentComponent = /*#__PURE__*/(() => {\n  class AddDocumentComponent {\n    constructor(data, confirmationService, dialog, dialogRef, formBuilder, documentListService, enumsrv) {\n      this.data = data;\n      this.confirmationService = confirmationService;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.formBuilder = formBuilder;\n      this.documentListService = documentListService;\n      this.enumsrv = enumsrv;\n      this.title = 'Add';\n      this.fileName = \"No file chosen\";\n      this.fileSelected = false;\n      this.showWarning = false;\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumTabledata = [];\n      this.enumDocType = [];\n      this.documentsForm = this.formBuilder.group({\n        notes: [null],\n        docType: [null, [Validators.required]]\n      });\n    }\n    ngOnInit() {\n      this.loadEnums();\n      if (this.data !== null) {\n        this.documentsForm.patchValue({\n          docType: this.data.tableName == \"eq\" ? 'Asset Photo' : \"Other\" //Default in all cases\n        });\n      }\n    }\n\n    loadEnums() {\n      this.enumList = [];\n      this.enumDocType = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumTabledata = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === this.data.tableName.toLocaleUpperCase());\n        this.enumDocType = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === this.data.tableName.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'doc_type'.toLocaleUpperCase());\n      });\n    }\n    fileChangeEvent(event) {\n      var file = event.target.files[0];\n      const maxFileSize = 1 * 1024 * 1024; // 1MB in bytes\n      if (file.size > maxFileSize) {\n        this.showWarning = true; // Show warning message for file size exceeding the limit\n      } else {\n        this.showWarning = false;\n        this.fileSelected = true;\n        this.selectedFile = file;\n        this.fileName = this.selectedFile.name;\n        let fileReader = new FileReader();\n        fileReader.onload = e => {\n          const content = fileReader.result; // Retrieve the file content from the result property\n          const extension = this.getFileExtension(this.selectedFile.name); // Extract the file extension\n          const upLoadData = new FormData();\n          upLoadData.set('document', this.selectedFile, this.fileName);\n          upLoadData.set(\"documemtType\", extension);\n          upLoadData.set(\"documentName\", this.fileName);\n          upLoadData.set(\"tableName\", this.data.tableName); //need to be dynamic\n          upLoadData.set(\"fieldName\", this.data.fieldName); //need to dynamic\n          upLoadData.set(\"pkField\", this.data.pkField); //need to dynamic\n          upLoadData.set(\"docBucketId\", this.data.docBucketId || 0); //need to be dynamic\n          upLoadData.set(\"pkValue\", this.data.pkValue);\n          this.upLoadData = upLoadData;\n        };\n        fileReader.readAsDataURL(file);\n      }\n    }\n    getFileExtension(fileName) {\n      const regex = /(?:\\.([^.]+))?$/;\n      const result = regex.exec(fileName);\n      if (result && result[1]) {\n        return result[1];\n      } else {\n        return ''; // Return an empty string or handle the situation according to your requirements\n      }\n    }\n\n    onSaveDocuments() {\n      this.upLoadData.set(\"notes\", this.documentsForm.controls.notes.value);\n      this.upLoadData.set(\"docType\", this.documentsForm.controls.docType.value);\n      this.documentListService.saveDocuments(this.upLoadData).subscribe(res => {\n        if (res.status === 200) {\n          console.log(res.body.text); //docBucketId\n          this.dialogRef.close(res.body.text);\n        }\n      });\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close();\n        }\n      });\n    }\n    static #_ = this.ɵfac = function AddDocumentComponent_Factory(t) {\n      return new (t || AddDocumentComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.DocumentListService), i0.ɵɵdirectiveInject(i5.EnumService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddDocumentComponent,\n      selectors: [[\"app-add-document\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 36,\n      vars: 14,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [\"id\", \"documents\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"docType\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumValue\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [1, \"file-container\", 3, \"click\"], [1, \"label-container\"], [1, \"form-field-lable\"], [1, \"icon-container\"], [\"icon\", \"pi pi-cloud-upload\", \"styleClass\", \"p-button-rounded custom-button\"], [\"type\", \"file\", \"hidden\", \"\", \"accept\", \".jpg, .jpeg, .png, .pdf,.doc,.docx, .xlsx\", 2, \"margin-bottom\", \"3px\", 3, \"change\"], [\"_fileInput\", \"\"], [\"name\", \"notes\", \"rows\", \"4\", \"nz-input\", \"\", \"maxlength\", \"512\", \"formControlName\", \"notes\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"header\", \"positionDialog\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Warning\", 3, \"visible\", \"closable\", \"visibleChange\"], [\"pTemplate\", \"caption\"], [1, \"m-2\"], [1, \"d-flex\", \"flex-row\", \"justify-content-end\"], [2, \"display\", \"flex\", \"padding-left\", \"6px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Ok\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"8px\", 3, \"click\"]],\n      template: function AddDocumentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r4 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Add Document\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"mat-card\")(4, \"mat-card-content\", 2)(5, \"form\", 3)(6, \"table\", 4)(7, \"tr\")(8, \"td\", 5)(9, \"div\", 6)(10, \"label\", 7);\n          i0.ɵɵtext(11, \"Document Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"ng-select\", 8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"tr\")(14, \"td\", 5)(15, \"div\", 6)(16, \"div\", 9);\n          i0.ɵɵlistener(\"click\", function AddDocumentComponent_Template_div_click_16_listener() {\n            i0.ɵɵrestoreView(_r4);\n            const _r0 = i0.ɵɵreference(23);\n            return i0.ɵɵresetView(_r0.click());\n          });\n          i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 11);\n          i0.ɵɵtext(19);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 12);\n          i0.ɵɵelement(21, \"p-button\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"input\", 14, 15);\n          i0.ɵɵlistener(\"change\", function AddDocumentComponent_Template_input_change_22_listener($event) {\n            return ctx.fileChangeEvent($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(24, \"tr\")(25, \"td\")(26, \"div\", 6)(27, \"label\", 11);\n          i0.ɵɵtext(28, \"Notes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"textarea\", 16);\n          i0.ɵɵelementEnd()()()()()()()();\n          i0.ɵɵelementStart(30, \"mat-dialog-actions\", 17)(31, \"p-button\", 18);\n          i0.ɵɵlistener(\"click\", function AddDocumentComponent_Template_p_button_click_31_listener() {\n            return ctx.onSaveDocuments();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"p-button\", 19);\n          i0.ɵɵlistener(\"click\", function AddDocumentComponent_Template_p_button_click_32_listener() {\n            return ctx.confirmDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(33, \"p-confirmDialog\", 20);\n          i0.ɵɵelementStart(34, \"p-dialog\", 21);\n          i0.ɵɵlistener(\"visibleChange\", function AddDocumentComponent_Template_p_dialog_visibleChange_34_listener($event) {\n            return ctx.showWarning = $event;\n          });\n          i0.ɵɵtemplate(35, AddDocumentComponent_ng_template_35_Template, 6, 0, \"ng-template\", 22);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.documentsForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDocType)(\"searchable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.fileName);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"disabled\", !ctx.fileSelected || !ctx.documentsForm.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(12, _c0));\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(13, _c1));\n          i0.ɵɵproperty(\"visible\", ctx.showWarning)(\"closable\", false);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MaxLengthValidator, i3.FormGroupDirective, i3.FormControlName, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i6.MatLegacyCard, i6.MatLegacyCardContent, i1.PrimeTemplate, i7.ButtonDirective, i7.Button, i8.Dialog, i9.ConfirmDialog, i10.TrimInputDirective, i11.NzTableCellDirective, i11.NzTrDirective, i12.NzInputDirective, i13.NgSelectComponent],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px;background-color:#fff!important}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;background-color:#fff!important}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}.file-name[_ngcontent-%COMP%]{font-size:11px;margin-bottom:0;border:1px solid #c4c2c2;width:max-content;padding:0 5px}.file-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;font-size:1rem;font-weight:400;line-height:2.2;border:.5px solid #879cc9;border-radius:5px}  .p-button.p-button-icon-only{width:2rem;height:2rem!important;padding:.5rem 0;background:transparent!important;border:0}.icon-container[_ngcontent-%COMP%]{width:10%;border-left:.5px solid #879cc9;display:flex;justify-content:center}.label-container[_ngcontent-%COMP%]{width:80%;margin-left:5px}  .custom-button .pi{font-size:1.5rem;color:#2e2d2d}  .pi:hover{color:#2196f3}  .p-button.p-button-icon-only:hover{color:#2196f3}  .ng-select .ng-arrow-wrapper{margin-left:auto}\"]\n    });\n  }\n  return AddDocumentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}