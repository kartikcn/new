{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport html2canvas from 'html2canvas';\nimport * as FileSaver from 'file-saver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../division-department/services/division.services\";\nimport * as i5 from \"../division-department/services/department.services\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"src/app/services/enum.service\";\nimport * as i8 from \"../booking/services/booking.services\";\nimport * as i9 from \"primeng/api\";\nimport * as i10 from \"ng-zorro-antd/table\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/calendar\";\nimport * as i13 from \"primeng/button\";\nimport * as i14 from \"primeng/dialog\";\nimport * as i15 from \"primeng/toast\";\nimport * as i16 from \"primeng/panel\";\nimport * as i17 from \"primeng/confirmdialog\";\nimport * as i18 from \"@ng-select/ng-select\";\nimport * as i19 from \"@angular/material/tooltip\";\nimport * as i20 from \"./widgets/space-allocation-room-list/space-allocation-room-list.component\";\nimport * as i21 from \"@swimlane/ngx-charts\";\nimport * as i22 from \"../view-room-report/widgets/add-room-report-table/add-room-report-table.component\";\nconst _c0 = [\"chartContainer\"];\nfunction SpaceAllocationStatisticsComponent_tr_28_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 29);\n    i0.ɵɵtext(1, \"Date To should be greater than Date From\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 4);\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsComponent_tr_28_label_2_Template, 2, 0, \"label\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 4)(4, \"td\", 4)(5, \"td\", 4)(6, \"td\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r0.filterPanel.controls[\"dateTo\"].errors) && (ctx_r0.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r0.filterPanel.controls[\"dateTo\"].errors.incorrect));\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsComponent_div_53_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.exportGridToExcel());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p-button\", 32);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsComponent_div_54_Template_p_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 48)(1, \"div\", 36)(2, \"div\", 37)(3, \"p\", 38);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 39);\n    i0.ɵɵelement(6, \"p-sortIcon\", 49)(7, \"p-columnFilter\", 50);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r17.secondParamName, \"\");\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 51)(1, \"div\", 36)(2, \"div\", 37)(3, \"p\", 38);\n    i0.ɵɵtext(4, \"Total Area (sq.ft)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 39);\n    i0.ɵɵelement(6, \"p-sortIcon\", 52);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 53)(1, \"div\", 36)(2, \"div\", 37)(3, \"p\", 38);\n    i0.ɵɵtext(4, \"Available Area (sq.ft)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 39);\n    i0.ɵɵelement(6, \"p-sortIcon\", 54);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 55)(1, \"div\", 36)(2, \"div\", 37)(3, \"p\", 38);\n    i0.ɵɵtext(4, \"Allocation (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 39);\n    i0.ɵɵelement(6, \"p-sortIcon\", 56);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 35)(2, \"div\", 36)(3, \"div\", 37)(4, \"p\", 38);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 39);\n    i0.ɵɵelement(7, \"p-sortIcon\", 40)(8, \"p-columnFilter\", 41);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(9, SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_9_Template, 8, 1, \"th\", 42);\n    i0.ɵɵtemplate(10, SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_10_Template, 7, 0, \"th\", 43);\n    i0.ɵɵelementStart(11, \"th\", 44)(12, \"div\", 36)(13, \"div\", 37)(14, \"p\", 38);\n    i0.ɵɵtext(15, \"Allocated Area (sq.ft)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 39);\n    i0.ɵɵelement(17, \"p-sortIcon\", 45);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(18, SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_18_Template, 7, 0, \"th\", 46);\n    i0.ɵɵtemplate(19, SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_19_Template, 7, 0, \"th\", 47);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.firstParamName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.showSecondParam);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r14.showOnlyAllocationArea);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r14.showOnlyAllocationArea);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r14.showOnlyAllocationArea);\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r21 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(room_r21.totalarea.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r21 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(room_r21.availablearea.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r21 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(room_r21.allocationpercentage.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_5_Template, 2, 1, \"td\", 60);\n    i0.ɵɵelementStart(6, \"td\", 61);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_8_Template, 2, 1, \"td\", 60);\n    i0.ɵɵtemplate(9, SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_9_Template, 2, 1, \"td\", 60);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const room_r21 = i0.ɵɵnextContext().$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r21.firstvalue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r21.secondvalue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r22.showOnlyAllocationArea);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r21.occupiedarea.toFixed(2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r22.showOnlyAllocationArea);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r22.showOnlyAllocationArea);\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r21 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(room_r21.totalarea.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r21 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(room_r21.availablearea.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r21 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(room_r21.allocationpercentage.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_2_Template, 2, 1, \"td\", 60);\n    i0.ɵɵelementStart(3, \"td\", 61);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_5_Template, 2, 1, \"td\", 60);\n    i0.ɵɵtemplate(6, SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_6_Template, 2, 1, \"td\", 60);\n  }\n  if (rf & 2) {\n    const room_r21 = i0.ɵɵnextContext().$implicit;\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(room_r21.firstvalue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r24.showOnlyAllocationArea);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r21.occupiedarea.toFixed(2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r24.showOnlyAllocationArea);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r24.showOnlyAllocationArea);\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 57);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsComponent_div_55_ng_template_3_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r40);\n      const room_r21 = restoredCtx.$implicit;\n      const ctx_r39 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r39.getRoomData(room_r21));\n    });\n    i0.ɵɵtemplate(1, SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_Template, 10, 6, \"ng-container\", 58);\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_Template, 7, 5, \"ng-template\", null, 59, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r23 = i0.ɵɵreference(3);\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.showSecondParam)(\"ngIfElse\", _r23);\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_55_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c1 = function () {\n  return [5, 10, 25];\n};\nfunction SpaceAllocationStatisticsComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-table\", 33);\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsComponent_div_55_ng_template_2_Template, 20, 5, \"ng-template\", 24);\n    i0.ɵɵtemplate(3, SpaceAllocationStatisticsComponent_div_55_ng_template_3_Template, 4, 2, \"ng-template\", 25);\n    i0.ɵɵtemplate(4, SpaceAllocationStatisticsComponent_div_55_ng_template_4_Template, 3, 1, \"ng-template\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r3.gridblfldata)(\"paginator\", true)(\"rows\", ctx_r3.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(7, _c1))(\"rowHover\", false)(\"scrollable\", true);\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_56_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 65)(1, \"ngx-charts-bar-vertical-2d\", 66);\n    i0.ɵɵlistener(\"select\", function SpaceAllocationStatisticsComponent_div_56_div_2_Template_ngx_charts_bar_vertical_2d_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r45.onSelectBarChart($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"view\", ctx_r43.view)(\"scheme\", ctx_r43.colorScheme)(\"results\", ctx_r43.barchartData)(\"gradient\", ctx_r43.gradient)(\"xAxis\", ctx_r43.showXAxis)(\"yAxis\", ctx_r43.showYAxis)(\"legend\", ctx_r43.showLegend)(\"showXAxisLabel\", ctx_r43.showXAxisLabel)(\"showYAxisLabel\", ctx_r43.showYAxisLabel)(\"xAxisLabel\", ctx_r43.xAxisLabel)(\"yAxisLabel\", ctx_r43.yAxisLabel)(\"showGridLines\", ctx_r43.showGridLines);\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_56_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 67)(1, \"div\")(2, \"h1\");\n    i0.ɵɵtext(3, \"No data found\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", null, 62);\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsComponent_div_56_div_2_Template, 2, 12, \"div\", 63);\n    i0.ɵɵtemplate(3, SpaceAllocationStatisticsComponent_div_56_div_3_Template, 4, 0, \"div\", 64);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.barchartData.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r4.barchartData.length > 0));\n  }\n}\nfunction SpaceAllocationStatisticsComponent_ng_template_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 68);\n    i0.ɵɵtext(1, \"Room List\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_ng_template_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-space-allocation-room-list\", 69);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r6.roomData);\n  }\n}\nfunction SpaceAllocationStatisticsComponent_ng_template_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 68);\n    i0.ɵɵtext(1, \"Room List\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpaceAllocationStatisticsComponent_ng_template_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-room-report-table\", 69);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r8.allroomData);\n  }\n}\nconst _c2 = function () {\n  return {\n    width: \"75vw\"\n  };\n};\nconst _c3 = function () {\n  return {\n    width: \"66vw\"\n  };\n};\nclass roomfilter {\n  constructor(blId, flId, divId, depId, dateFrom, dateTo, compId, viewBy) {\n    this.blId = blId;\n    this.flId = flId;\n    this.divId = divId;\n    this.depId = depId;\n    this.dateFrom = dateFrom;\n    this.dateTo = dateTo;\n    this.compId = compId;\n    this.viewBy = viewBy;\n  }\n}\nexport class SpaceAllocationStatisticsComponent {\n  constructor(blServ, authSrv, formBuilder, cdr, divisionservice, departmentservice, datePipe, enumsrv, bookingSrv, messageService) {\n    this.blServ = blServ;\n    this.authSrv = authSrv;\n    this.formBuilder = formBuilder;\n    this.cdr = cdr;\n    this.divisionservice = divisionservice;\n    this.departmentservice = departmentservice;\n    this.datePipe = datePipe;\n    this.enumsrv = enumsrv;\n    this.bookingSrv = bookingSrv;\n    this.messageService = messageService;\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.departmentData = [];\n    this.alldepartmentData = [];\n    this.enumDivision = [];\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.showGrid = false;\n    this.showGridLines = true;\n    this.showAllocatedPopup = false;\n    this.showAllRoomsPopup = false;\n    this.gridblfldata = [];\n    this.firstParamName = '';\n    this.secondParamName = '';\n    this.showSecondParam = false;\n    this.roomData = [];\n    this.allroomData = [];\n    this.filter = new roomfilter(null, null, null, null, null, null, 0, null);\n    this.viewByData = [{\n      \"id\": 0,\n      \"lable\": 'Building',\n      \"value\": \"bl_id\"\n    }, {\n      \"id\": 1,\n      \"lable\": 'Floor',\n      \"value\": \"fl_id\"\n    }, {\n      \"id\": 2,\n      \"lable\": 'Division',\n      \"value\": \"div_id\"\n    }, {\n      \"id\": 3,\n      \"lable\": 'Department',\n      \"value\": \"dep_id\"\n    }];\n    this.displayTypeData = [{\n      \"id\": 0,\n      \"lable\": 'Grid',\n      \"value\": \"grid\"\n    }, {\n      \"id\": 1,\n      \"lable\": 'Bar Chart',\n      \"value\": \"bar_chart\"\n    }];\n    this.monthStart = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n    this.monthEnd = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);\n    this.view = [1200, 495];\n    this.showXAxis = true;\n    this.showXAxisLabel = true;\n    this.xAxisLabel = '';\n    this.barchartData = [];\n    this.showYAxis = true;\n    this.gradient = false;\n    this.showLegend = true;\n    this.showYAxisLabel = true;\n    this.yAxisLabel = 'Area (sq.ft)';\n    this.showbarchart = false;\n    this.colorScheme = {\n      domain: ['#5AA454', '#C7B42C']\n    };\n    this.chartImg = [];\n    this.grid_array = [];\n    this.showOnlyAllocationArea = false;\n    this.filterPanel = this.formBuilder.group({\n      divId: [null],\n      depId: [null],\n      dateFrom: [null, [Validators.required]],\n      dateTo: [null, [Validators.required]],\n      blId: [null],\n      flId: [null],\n      viewBy: [null, [Validators.required]],\n      displayType: [null]\n    });\n  }\n  ngOnInit() {\n    // this.compId = this.authSrv.getLoggedInUserCompId()\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllDivisions();\n    this.loadAllDepartments();\n    this.loadCommonAreaEnums();\n    this.filterPanel.patchValue({\n      displayType: this.displayTypeData[0].value,\n      dateFrom: this.monthStart,\n      dateTo: this.monthEnd\n    });\n  }\n  loadAllDivisions() {\n    this.enumDivision = [];\n    this.divisionservice.getAllDivisions().subscribe(res => {\n      this.enumDivision = res.map(each => {\n        return {\n          ...each,\n          \"bindlabel\": each.divId\n        };\n      });\n      this.enumDivision.unshift({\n        divId: '',\n        bindlabel: 'Make a selection'\n      });\n    });\n  }\n  loadAllDepartments() {\n    this.alldepartmentData = [];\n    this.departmentservice.getAllDepartments().subscribe(res => {\n      this.alldepartmentData = res.map(each => {\n        return {\n          ...each,\n          \"bindlabel\": each.depId\n        };\n      });\n      this.alldepartmentData.unshift({\n        depId: '',\n        bindlabel: 'Make a selection'\n      });\n      this.departmentData = [...this.alldepartmentData];\n    });\n  }\n  onSelectDivision(event) {\n    if (event.divId != null && event.divId != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          depId: null\n        });\n        this.loadDepartmentCode(event.divId);\n      }, 10);\n    } else {\n      this.departmentData = this.alldepartmentData;\n    }\n  }\n  loadDepartmentCode(divId) {\n    if (divId != null && divId != '') {\n      this.departmentData = [];\n      this.departmentData = this.alldepartmentData.filter(t => t.divId == divId);\n      this.departmentData.unshift({\n        depId: '',\n        bindlabel: 'Make a selection'\n      });\n    } else {\n      this.departmentData = [];\n      this.departmentData = this.alldepartmentData;\n    }\n  }\n  onSelectDepartment(event) {\n    if (event.depId != null && event.depId != '') {\n      this.filterPanel.patchValue({\n        divId: event.divId\n      });\n    } else {\n      this.filterPanel.patchValue({\n        divId: null\n      });\n    }\n  }\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe(res => {\n      this.enumBL = res;\n      this.enumBL.unshift({\n        id: '',\n        blNameString: 'Make a selection'\n      });\n    });\n  }\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe(res => {\n      this.enumAllFL = res;\n      this.enumAllFL.unshift({\n        id: '',\n        flNameString: 'Make a selection'\n      });\n      this.enumFL = this.enumAllFL;\n    });\n  }\n  onSelectBlCode($event) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n    }\n  }\n  loadFloorCode(bl_id) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n      this.enumFL.unshift({\n        id: '',\n        flNameString: 'Make a selection'\n      });\n    }\n  }\n  onSelectFlCode(event) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId\n        });\n      }, 10);\n    } else {\n      this.enumFL.unshift({\n        id: '',\n        flNameString: 'Make a selection'\n      });\n    }\n  }\n  loadCommonAreaEnums() {\n    this.enumsrv.getEnums().subscribe(res => {\n      let resultCommonArea = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase() && t.compId == this.compId && t.enumValue.toLocaleUpperCase() == 'None'.toLocaleUpperCase());\n      this.enumCommonAreaNoneType = resultCommonArea[0].id;\n    });\n  }\n  checkDates(control) {\n    if (control !== undefined && control != null) {\n      this.filterPanel.controls['dateTo'].setErrors(null);\n      this.filterPanel.clearAsyncValidators();\n      this.filterPanel.updateValueAndValidity();\n      let dateFrom = this.formatDate(this.filterPanel.controls.dateFrom.value);\n      let dateTo = this.formatDate(this.filterPanel.controls.dateTo.value);\n      if (dateFrom != null && dateTo != null) {\n        if (dateTo <= dateFrom) {\n          this.filterPanel.controls['dateTo'].setErrors({\n            'incorrect': true\n          });\n          this.filterPanel.updateValueAndValidity();\n          return {\n            'incorrect': true\n          };\n        } else {\n          return null;\n        }\n      } else {\n        this.filterPanel.controls['dateTo'].setErrors({\n          'isnull': true\n        });\n        this.filterPanel.updateValueAndValidity();\n        return null;\n      }\n    }\n    return null;\n  }\n  formatDate(date) {\n    if (date != null) {\n      var d = new Date(date);\n      return d;\n    } else {\n      return null;\n    }\n  }\n  onSearch() {\n    this.gridblfldata = [];\n    this.showGrid = false;\n    this.showbarchart = false;\n    this.firstParamName = '';\n    this.showSecondParam = false;\n    this.showOnlyAllocationArea = false;\n    this.secondParamName = '';\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    let divId = this.filterPanel.controls.divId.value;\n    let depId = this.filterPanel.controls.depId.value;\n    let viewBy = this.filterPanel.controls.viewBy.value;\n    let displayType = this.filterPanel.controls.displayType.value;\n    this.filter.blId = blId != null && blId != '' ? blId : null;\n    this.filter.flId = flId != null && flId != '' ? flId : null;\n    this.filter.divId = divId != null && divId != '' ? divId : null;\n    this.filter.depId = depId != null && depId != '' ? depId : null;\n    this.filter.viewBy = viewBy;\n    this.filter.dateFrom = this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\");\n    this.filter.dateTo = this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\");\n    this.filter.compId = this.compId;\n    let data = {\n      compId: this.compId,\n      dateFrom: this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\"),\n      dateTo: this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\"),\n      blId: blId,\n      flId: flId,\n      divId: divId,\n      depId: depId,\n      viewBy: viewBy\n    };\n    this.blServ.getspaceallocationstatictics(data).subscribe(res => {\n      if (res) {\n        if (displayType == 'grid') {\n          this.gridblfldata = res;\n          if (viewBy == 'bl_id') {\n            this.firstParamName = 'Building code';\n            this.showSecondParam = false;\n            this.showOnlyAllocationArea = false;\n            this.secondParamName = '';\n            if (blId != null && blId != '') {\n              this.gridblfldata = this.gridblfldata.filter(each => each.firstvalue == blId);\n            }\n          } else if (viewBy == 'fl_id') {\n            this.firstParamName = 'Building code';\n            this.showSecondParam = true;\n            this.showOnlyAllocationArea = false;\n            this.secondParamName = 'Floor Code';\n            if (blId != null && blId != '') {\n              this.gridblfldata = this.gridblfldata.filter(each => each.firstvalue == blId);\n            }\n            if (flId != null && flId != '') {\n              this.gridblfldata = this.gridblfldata.filter(each => each.secondvalue == flId);\n            }\n          } else if (viewBy == 'div_id') {\n            this.firstParamName = 'Division code';\n            this.showSecondParam = false;\n            this.showOnlyAllocationArea = true;\n            this.secondParamName = '';\n            if (divId != null && divId != '') {\n              this.gridblfldata = this.gridblfldata.filter(each => each.firstvalue == divId);\n            }\n          } else if (viewBy == 'dep_id') {\n            this.firstParamName = 'Division code';\n            this.showSecondParam = true;\n            this.showOnlyAllocationArea = true;\n            this.secondParamName = 'Department Code';\n            if (divId != null && divId != '') {\n              this.gridblfldata = this.gridblfldata.filter(each => each.firstvalue == divId);\n            }\n            if (depId != null && depId != '') {\n              this.gridblfldata = this.gridblfldata.filter(each => each.secondvalue == depId);\n            }\n          }\n          this.showGrid = true;\n        } else {\n          this.gridblfldata = res;\n          if (viewBy == 'bl_id' || viewBy == 'div_id') {\n            this.gridblfldata = this.gridblfldata.map(each => {\n              return {\n                ...each,\n                \"name\": each.firstvalue\n              };\n            });\n          } else {\n            this.gridblfldata = this.gridblfldata.map(each => {\n              return {\n                ...each,\n                \"name\": each.firstvalue + \"-\" + each.secondvalue\n              };\n            });\n          }\n          this.setChartData();\n          this.showbarchart = true;\n        }\n      }\n    });\n  }\n  changeViewBy(event) {\n    this.xAxisLabel = event.lable;\n  }\n  onSelectDisplayType(event) {}\n  getRoomData(room) {\n    this.showAllRoomsPopup = false;\n    this.showAllocatedPopup = false;\n    this.roomData = [];\n    let viewByValue = this.filterPanel.controls.viewBy.value;\n    if (viewByValue == 'bl_id') {\n      this.filter.blId = room.firstvalue;\n    } else if (viewByValue == 'fl_id') {\n      this.filter.blId = room.firstvalue;\n      this.filter.flId = room.secondvalue;\n    } else if (viewByValue == 'div_id') {\n      this.filter.divId = room.firstvalue;\n    } else if (viewByValue == 'dep_id') {\n      this.filter.divId = room.firstvalue;\n      this.filter.depId = room.secondvalue;\n    }\n    this.blServ.getspaceallocationstaticticsroomdata(this.filter).subscribe(res => {\n      if (res) {\n        this.roomData = res;\n        this.showAllocatedPopup = true;\n      }\n    });\n  }\n  onClear() {\n    this.gridblfldata = [];\n    this.firstParamName = '';\n    this.secondParamName = '';\n    this.showSecondParam = false;\n    this.showOnlyAllocationArea = false;\n    this.roomData = [];\n    this.allroomData = [];\n    this.showGrid = false;\n    this.showbarchart = false;\n    this.showAllocatedPopup = false;\n    this.showAllRoomsPopup = false;\n    this.chartImg = [];\n    this.filterPanel.patchValue({\n      divId: null,\n      depId: null,\n      dateFrom: this.monthStart,\n      dateTo: this.monthEnd,\n      blId: null,\n      flId: null,\n      viewBy: null,\n      displayType: this.displayTypeData[0].value\n    });\n    this.filter = {\n      blId: null,\n      flId: null,\n      divId: null,\n      depId: null,\n      dateFrom: null,\n      dateTo: null,\n      compId: null,\n      viewBy: null\n    };\n  }\n  setChartData() {\n    this.barchartData = [];\n    const barChartData = [];\n    Object.values(this.gridblfldata).forEach((each, index) => {\n      if (each.occupiedarea > 0) {\n        let series = [{\n          \"name\": \"Total Area\",\n          \"value\": each.totalarea\n        }, {\n          \"name\": \"Allocated Area\",\n          \"value\": each.occupiedarea\n        }];\n        let dataobj = {\n          name: each.name,\n          series: series\n        };\n        barChartData.push(dataobj);\n      }\n    });\n    if (barChartData.length < 5) {\n      let empty = '  ';\n      for (let i = 0; i < 5 - barChartData.length; i++) {\n        barChartData.push({\n          name: empty.repeat(i + 1),\n          series: [{\n            \"name\": \"Total Area\",\n            \"value\": 0\n          }, {\n            \"name\": \"Allocated Area\",\n            \"value\": 0\n          }]\n        });\n      }\n    }\n    this.barchartData = barChartData;\n    this.cdr.detectChanges();\n  }\n  onSelectBarChart(event) {\n    this.roomData = [];\n    this.allroomData = [];\n    this.showAllocatedPopup = false;\n    this.showAllRoomsPopup = false;\n    let viewByValue = this.filterPanel.controls.viewBy.value;\n    if (typeof event === \"object\" && event !== null) {\n      if (event.name == \"Total Area\") {\n        let data = {\n          id: '',\n          name: '',\n          blId: null,\n          flId: null\n        };\n        let parts = event.series.split(/-(.+)/);\n        if (viewByValue == \"bl_id\") {\n          data.blId = parts[0];\n        } else if (viewByValue == \"fl_id\") {\n          data.blId = parts[0];\n          data.flId = parts[1];\n        }\n        this.blServ.getRmList(data).subscribe(res => {\n          this.allroomData = res.filter(each => each.commonAreaType == this.enumCommonAreaNoneType);\n          this.showAllRoomsPopup = true;\n        });\n      } else if (event.name == \"Allocated Area\") {\n        let parts = event.series.split(/-(.+)/);\n        if (viewByValue == \"bl_id\") {\n          this.filter.blId = parts[0];\n        } else if (viewByValue == \"fl_id\") {\n          this.filter.blId = parts[0];\n          this.filter.flId = parts[1];\n        } else if (viewByValue == \"div_id\") {\n          this.filter.divId = parts[0];\n        } else if (viewByValue == \"dep_id\") {\n          this.filter.divId = parts[0];\n          this.filter.depId = parts[1];\n        }\n        this.blServ.getspaceallocationstaticticsroomdata(this.filter).subscribe(res => {\n          if (res) {\n            this.roomData = res;\n            this.showAllocatedPopup = true;\n          }\n        });\n      }\n    }\n  }\n  exportChartToPDF() {\n    const divElement = this.chartContainer.nativeElement;\n    html2canvas(divElement).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      this.chartImg = [];\n      this.chartImg.push(imgData);\n      this.printPDF();\n    });\n  }\n  printPDF() {\n    this.messageService.clear();\n    var reportDetails = {\n      chartImg: this.chartImg,\n      title: 'View By ' + this.getlabelfromviewbyvalue(this.filterPanel.controls.viewBy.value)\n    };\n    this.bookingSrv.printPdf(reportDetails).subscribe(res => {\n      if (res != null) {\n        this.messageService.add({\n          key: 'spaceallocationMsg',\n          severity: 'success',\n          summary: 'PDF Created',\n          detail: 'PDF created successfully'\n        });\n        var file = new Blob([res], {\n          type: 'application/pdf'\n        });\n        var fileURL = URL.createObjectURL(file);\n        window.open(fileURL);\n      }\n    });\n  }\n  exportGridToExcel() {\n    this.getDestructuredData(this.gridblfldata);\n    let excelHeaders = [];\n    import(\"xlsx\").then(xlsx => {\n      const worksheet = xlsx.utils.json_to_sheet(this.grid_array);\n      worksheet['!cols'] = [];\n      let lengthObj = Object.keys(this.gridblfldata[0]).length;\n      for (let i = 0; i < lengthObj; i++) {\n        worksheet['!cols'].push({\n          wch: 20\n        });\n      }\n      if (this.showSecondParam && this.showOnlyAllocationArea) {\n        excelHeaders = [this.firstParamName, this.secondParamName, \"Allocated Area (sq.ft)\"];\n      } else if (this.showSecondParam && !this.showOnlyAllocationArea) {\n        excelHeaders = [this.firstParamName, this.secondParamName, \"Total Area (sq.ft)\", \"Allocated Area (sq.ft)\", \"Available Area (sq.ft)\", \"Allocation (%)\"];\n      } else if (!this.showSecondParam && this.showOnlyAllocationArea) {\n        excelHeaders = [this.firstParamName, \"Allocated Area (sq.ft)\"];\n      } else if (!this.showSecondParam && !this.showOnlyAllocationArea) {\n        excelHeaders = [this.firstParamName, \"Total Area (sq.ft)\", \"Allocated Area (sq.ft)\", \"Available Area (sq.ft)\", \"Allocation (%)\"];\n      }\n      const headers = excelHeaders.map((header, index) => ({\n        v: header,\n        position: String.fromCharCode(65 + index) + 1\n      }));\n      headers.forEach(header => {\n        worksheet[header.position] = {\n          v: header.v\n        };\n      });\n      const workbook = {\n        Sheets: {\n          'data': worksheet\n        },\n        SheetNames: ['data']\n      };\n      const excelBuffer = xlsx.write(workbook, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      this.saveAsExcelFile(excelBuffer, \"allocation\");\n    });\n  }\n  getDestructuredData(data) {\n    this.grid_array = data.map(item => {\n      if (this.showSecondParam && this.showOnlyAllocationArea) {\n        return {\n          [this.firstParamName]: item['firstvalue'],\n          [this.secondParamName]: item['secondvalue'],\n          \"Allocated Area (sq.ft)\": item['occupiedarea']\n        };\n      } else if (this.showSecondParam && !this.showOnlyAllocationArea) {\n        return {\n          [this.firstParamName]: item['firstvalue'],\n          [this.secondParamName]: item['secondvalue'],\n          \"Total Area (sq.ft)\": item['totalarea'],\n          \"Allocated Area (sq.ft)\": item['occupiedarea'],\n          \"Available Area (sq.ft)\": item['availablearea'],\n          \"Allocation (%)\": item['allocationpercentage']\n        };\n      } else if (!this.showSecondParam && this.showOnlyAllocationArea) {\n        return {\n          [this.firstParamName]: item['firstvalue'],\n          \"Allocated Area (sq.ft)\": item['occupiedarea']\n        };\n      } else if (!this.showSecondParam && !this.showOnlyAllocationArea) {\n        return {\n          [this.firstParamName]: item['firstvalue'],\n          \"Total Area (sq.ft)\": item['totalarea'],\n          \"Allocated Area (sq.ft)\": item['occupiedarea'],\n          \"Available Area (sq.ft)\": item['availablearea'],\n          \"Allocation (%)\": item['allocationpercentage']\n        };\n      } else {\n        return null;\n      }\n    });\n  }\n  saveAsExcelFile(buffer, fileName) {\n    let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    let EXCEL_EXTENSION = '.xlsx';\n    const data = new Blob([buffer], {\n      type: EXCEL_TYPE\n    });\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n  }\n  getlabelfromviewbyvalue(value) {\n    let result = this.viewByData.filter(each => each.value == value);\n    return result[0].lable;\n  }\n  checkactive(event) {\n    event.entries = [];\n    event.value = null;\n  }\n  static #_ = this.ɵfac = function SpaceAllocationStatisticsComponent_Factory(t) {\n    return new (t || SpaceAllocationStatisticsComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i4.DivisionService), i0.ɵɵdirectiveInject(i5.DepartmentService), i0.ɵɵdirectiveInject(i6.DatePipe), i0.ɵɵdirectiveInject(i7.EnumService), i0.ɵɵdirectiveInject(i8.BookingService), i0.ɵɵdirectiveInject(i9.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SpaceAllocationStatisticsComponent,\n    selectors: [[\"app-space-allocation-statistics\"]],\n    viewQuery: function SpaceAllocationStatisticsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartContainer = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 65,\n    vars: 46,\n    consts: [[1, \"card\"], [\"header\", \"Room Summary\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"p-fluid\", \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"dateFrom\", \"inputId\", \"icon\", 2, \"height\", \"32px\", 3, \"showIcon\", \"readonlyInput\", \"ngModelChange\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"dateTo\", \"inputId\", \"icon\", 3, \"showIcon\", \"readonlyInput\", \"ngModelChange\"], [\"width\", \"20%\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"viewBy\", \"bindLabel\", \"lable\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"displayType\", \"bindLabel\", \"lable\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [4, \"ngIf\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"divId\", \"bindLabel\", \"bindlabel\", \"bindValue\", \"divId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"depId\", \"bindLabel\", \"bindlabel\", \"bindValue\", \"depId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", 2, \"width\", \"67px\", \"margin-left\", \"32%\", \"margin-top\", \"20px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", 2, \"width\", \"67px\", \"margin-left\", \"5px\", \"margin-top\", \"20px\", 3, \"click\"], [\"style\", \"width:30px; display:inline-flex;margin-top:20px;\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"styleClass\", \"dark-panel\", \"id\", \"preview\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"key\", \"spaceallocationMsg\", \"position\", \"top-center\"], [\"key\", \"spaceallocationGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;margin-left:5px;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\", \"margin-left\", \"5px\"], [2, \"width\", \"30px\", \"display\", \"inline-flex\", \"margin-top\", \"20px\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-excel\", \"matTooltip\", \"XLS\", \"matTooltipPosition\", \"below\", 1, \"p-button-success\", \"p-mr-2\", \"pull-right\", 2, \"margin-left\", \"5px\", 3, \"click\"], [\"icon\", \"pi pi-file-pdf\", \"matTooltip\", \"Generate PDF\", \"matTooltipPosition\", \"below\", \"styleClass\", \"p-button-raised p-button-danger\", 2, \"width\", \"30px\", \"margin-left\", \"5px\", 3, \"click\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"430px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\"], [\"pTemplate\", \"emptymessage\"], [\"pSortableColumn\", \"firstvalue\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"firstvalue\"], [\"type\", \"text\", \"field\", \"firstvalue\", \"display\", \"menu\"], [\"pSortableColumn\", \"secondvalue\", 4, \"ngIf\"], [\"pSortableColumn\", \"totalarea\", 4, \"ngIf\"], [\"pSortableColumn\", \"occupiedarea\"], [\"field\", \"occupiedarea\"], [\"pSortableColumn\", \"availablearea\", 4, \"ngIf\"], [\"pSortableColumn\", \"allocationpercentage\", 4, \"ngIf\"], [\"pSortableColumn\", \"secondvalue\"], [\"field\", \"secondParamValue\"], [\"type\", \"text\", \"field\", \"secondvalue\", \"display\", \"menu\"], [\"pSortableColumn\", \"totalarea\"], [\"field\", \"totalarea\"], [\"pSortableColumn\", \"availablearea\"], [\"field\", \"availablearea\"], [\"pSortableColumn\", \"allocationpercentage\"], [\"field\", \"allocationpercentage\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [\"style\", \"text-align: right;\", 4, \"ngIf\"], [2, \"text-align\", \"right\"], [\"chartContainer\", \"\"], [\"style\", \"overflow-x: auto;\", 4, \"ngIf\"], [\"style\", \"width:100%;height:450px; display:flex;justify-content: center;align-items: center;\", 4, \"ngIf\"], [2, \"overflow-x\", \"auto\"], [3, \"view\", \"scheme\", \"results\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"yAxisLabel\", \"showGridLines\", \"select\"], [2, \"width\", \"100%\", \"height\", \"450px\", \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [2, \"margin\", \"0px\"], [3, \"data\"]],\n    template: function SpaceAllocationStatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"form\", 2)(3, \"table\", 3)(4, \"tr\")(5, \"td\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Date From\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p-calendar\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function SpaceAllocationStatisticsComponent_Template_p_calendar_ngModelChange_10_listener($event) {\n          return ctx.checkDates($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(11, \"td\", 4)(12, \"div\", 5)(13, \"div\", 6)(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Date To\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p-calendar\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function SpaceAllocationStatisticsComponent_Template_p_calendar_ngModelChange_16_listener($event) {\n          return ctx.checkDates($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"td\", 10)(18, \"div\", 5)(19, \"label\", 7);\n        i0.ɵɵtext(20, \"View By\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ng-select\", 11);\n        i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsComponent_Template_ng_select_change_21_listener($event) {\n          return ctx.changeViewBy($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"td\", 10)(23, \"div\", 5)(24, \"label\", 12);\n        i0.ɵɵtext(25, \"Display Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"ng-select\", 13);\n        i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsComponent_Template_ng_select_change_26_listener($event) {\n          return ctx.onSelectDisplayType($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(27, \"td\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, SpaceAllocationStatisticsComponent_tr_28_Template, 7, 1, \"tr\", 14);\n        i0.ɵɵelementStart(29, \"tr\")(30, \"td\", 4)(31, \"div\", 5)(32, \"label\", 12);\n        i0.ɵɵtext(33, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"ng-select\", 15);\n        i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsComponent_Template_ng_select_change_34_listener($event) {\n          return ctx.onSelectBlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"td\", 4)(36, \"div\", 5)(37, \"label\", 12);\n        i0.ɵɵtext(38, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"ng-select\", 16);\n        i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsComponent_Template_ng_select_change_39_listener($event) {\n          return ctx.onSelectFlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"td\", 4)(41, \"div\", 5)(42, \"label\", 12);\n        i0.ɵɵtext(43, \"Division \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"ng-select\", 17);\n        i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsComponent_Template_ng_select_change_44_listener($event) {\n          return ctx.onSelectDivision($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(45, \"td\", 4)(46, \"div\", 5)(47, \"label\", 12);\n        i0.ɵɵtext(48, \"Department \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"ng-select\", 18);\n        i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsComponent_Template_ng_select_change_49_listener($event) {\n          return ctx.onSelectDepartment($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(50, \"td\")(51, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsComponent_Template_button_click_51_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsComponent_Template_button_click_52_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(53, SpaceAllocationStatisticsComponent_div_53_Template, 2, 0, \"div\", 21);\n        i0.ɵɵtemplate(54, SpaceAllocationStatisticsComponent_div_54_Template, 2, 0, \"div\", 21);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(55, SpaceAllocationStatisticsComponent_div_55_Template, 5, 8, \"div\", 22);\n        i0.ɵɵtemplate(56, SpaceAllocationStatisticsComponent_div_56_Template, 4, 2, \"div\", 14);\n        i0.ɵɵelementStart(57, \"p-dialog\", 23);\n        i0.ɵɵlistener(\"visibleChange\", function SpaceAllocationStatisticsComponent_Template_p_dialog_visibleChange_57_listener($event) {\n          return ctx.showAllocatedPopup = $event;\n        });\n        i0.ɵɵtemplate(58, SpaceAllocationStatisticsComponent_ng_template_58_Template, 2, 0, \"ng-template\", 24);\n        i0.ɵɵtemplate(59, SpaceAllocationStatisticsComponent_ng_template_59_Template, 1, 1, \"ng-template\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"p-dialog\", 23);\n        i0.ɵɵlistener(\"visibleChange\", function SpaceAllocationStatisticsComponent_Template_p_dialog_visibleChange_60_listener($event) {\n          return ctx.showAllRoomsPopup = $event;\n        });\n        i0.ɵɵtemplate(61, SpaceAllocationStatisticsComponent_ng_template_61_Template, 2, 0, \"ng-template\", 24);\n        i0.ɵɵtemplate(62, SpaceAllocationStatisticsComponent_ng_template_62_Template, 1, 1, \"ng-template\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(63, \"p-toast\", 26)(64, \"p-confirmDialog\", 27);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"toggleable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.viewByData);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx.displayTypeData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.filterPanel.controls[\"dateTo\"] == null ? null : ctx.filterPanel.controls[\"dateTo\"].errors);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDivision)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.departmentData)(\"searchable\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showGrid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showbarchart && ctx.barchartData.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showGrid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showbarchart);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(44, _c2));\n        i0.ɵɵproperty(\"visible\", ctx.showAllocatedPopup)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(45, _c3));\n        i0.ɵɵproperty(\"visible\", ctx.showAllRoomsPopup)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n      }\n    },\n    dependencies: [i6.NgIf, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i10.NzTableCellDirective, i10.NzThMeasureDirective, i10.NzTrDirective, i9.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SortIcon, i11.ColumnFilter, i12.Calendar, i13.ButtonDirective, i13.Button, i14.Dialog, i15.Toast, i16.Panel, i17.ConfirmDialog, i18.NgSelectComponent, i19.MatTooltip, i20.SpaceAllocationRoomListComponent, i21.BarVertical2DComponent, i22.AddRoomReportTableComponent],\n    styles: [\"[_nghost-%COMP%]     .p-dialog-mask {\\n  z-index: 1000 !important;\\n}\\n\\n[_nghost-%COMP%]     #preview .p-dialog .p-dialog-header {\\n  padding: 0.7rem !important;\\n}\\n\\n[_nghost-%COMP%]     #preview .p-dialog .p-dialog-content {\\n  padding: 0.25rem !important;\\n}\\n\\n[_nghost-%COMP%]     .dark-panel.p-dialog .p-dialog-header {\\n  border: 5px !important;\\n}\\n\\n[_nghost-%COMP%]    .ngx-charts-outer {\\n  animation: chartFadeIn linear 0 !important;\\n}\\n\\n[_nghost-%COMP%]     .ngx-charts .grid-panel.odd rect {\\n  fill: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvc3BhY2UtYWxsb2NhdGlvbi1zdGF0aXN0aWNzL3NwYWNlLWFsbG9jYXRpb24tc3RhdGlzdGljcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHdCQUFBO0FBQ0o7O0FBRUE7RUFDSSwwQkFBQTtBQUNKOztBQUVBO0VBQ0csMkJBQUE7QUFDSDs7QUFFQTtFQUNJLHNCQUFBO0FBQ0o7O0FBRUE7RUFFSSwwQ0FBQTtBQUNKOztBQUVBO0VBQ0kscUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2ctbWFza3tcbiAgICB6LWluZGV4OjEwMDAgIWltcG9ydGFudDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwICNwcmV2aWV3IC5wLWRpYWxvZyAucC1kaWFsb2ctaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAwLjdyZW0gIWltcG9ydGFudDtcbn1cbiAgICBcbjpob3N0IDo6bmctZGVlcCAjcHJldmlldyAucC1kaWFsb2cgLnAtZGlhbG9nLWNvbnRlbnQge1xuICAgcGFkZGluZzowLjI1cmVtICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAuZGFyay1wYW5lbC5wLWRpYWxvZyAucC1kaWFsb2ctaGVhZGVye1xuICAgIGJvcmRlciA6NXB4ICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcC5uZ3gtY2hhcnRzLW91dGVye1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOmNoYXJ0RmFkZUluIGxpbmVhciAwICFpbXBvcnRhbnQ7XG4gICAgYW5pbWF0aW9uOmNoYXJ0RmFkZUluIGxpbmVhciAwICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAubmd4LWNoYXJ0cyAuZ3JpZC1wYW5lbC5vZGQgcmVjdHtcbiAgICBmaWxsOm5vbmUgIWltcG9ydGFudDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","MessageService","UtilConstant","html2canvas","FileSaver","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","SpaceAllocationStatisticsComponent_tr_28_label_2_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","filterPanel","controls","errors","incorrect","ɵɵlistener","SpaceAllocationStatisticsComponent_div_53_Template_button_click_1_listener","ɵɵrestoreView","_r11","ctx_r10","ɵɵnextContext","ɵɵresetView","exportGridToExcel","SpaceAllocationStatisticsComponent_div_54_Template_p_button_click_1_listener","_r13","ctx_r12","exportChartToPDF","ɵɵtextInterpolate1","ctx_r17","secondParamName","SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_9_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_10_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_18_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_2_th_19_Template","ctx_r14","firstParamName","showSecondParam","showOnlyAllocationArea","ɵɵtextInterpolate","room_r21","totalarea","toFixed","availablearea","allocationpercentage","ɵɵelementContainerStart","SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_5_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_8_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_td_9_Template","ɵɵelementContainerEnd","firstvalue","secondvalue","ctx_r22","occupiedarea","SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_2_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_5_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_td_6_Template","ctx_r24","SpaceAllocationStatisticsComponent_div_55_ng_template_3_Template_tr_click_0_listener","restoredCtx","_r40","$implicit","ctx_r39","getRoomData","SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_container_1_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_3_ng_template_2_Template","ɵɵtemplateRefExtractor","ctx_r15","_r23","ɵɵattribute","SpaceAllocationStatisticsComponent_div_55_ng_template_2_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_3_Template","SpaceAllocationStatisticsComponent_div_55_ng_template_4_Template","ctx_r3","gridblfldata","rowCount","ɵɵpureFunction0","_c1","SpaceAllocationStatisticsComponent_div_56_div_2_Template_ngx_charts_bar_vertical_2d_select_1_listener","$event","_r46","ctx_r45","onSelectBarChart","ctx_r43","view","colorScheme","barchartData","gradient","showXAxis","showYAxis","showLegend","showXAxisLabel","showYAxisLabel","xAxisLabel","yAxisLabel","showGridLines","SpaceAllocationStatisticsComponent_div_56_div_2_Template","SpaceAllocationStatisticsComponent_div_56_div_3_Template","ctx_r4","length","ctx_r6","roomData","ctx_r8","allroomData","roomfilter","constructor","blId","flId","divId","depId","dateFrom","dateTo","compId","viewBy","SpaceAllocationStatisticsComponent","blServ","authSrv","formBuilder","cdr","divisionservice","departmentservice","datePipe","enumsrv","bookingSrv","messageService","ROW_COUNT","departmentData","alldepartmentData","enumDivision","enumBL","enumFL","enumAllFL","showGrid","showAllocatedPopup","showAllRoomsPopup","filter","viewByData","displayTypeData","monthStart","Date","getFullYear","getMonth","monthEnd","showbarchart","domain","chartImg","grid_array","group","required","displayType","ngOnInit","loadAllBuilding","loadAllFloor","loadAllDivisions","loadAllDepartments","loadCommonAreaEnums","patchValue","value","getAllDivisions","subscribe","res","map","each","unshift","bindlabel","getAllDepartments","onSelectDivision","event","setTimeout","loadDepartmentCode","t","onSelectDepartment","getALLBuilding","id","blNameString","getALLFloor","flNameString","onSelectBlCode","loadFloorCode","bl_id","onSelectFlCode","getEnums","resultCommonArea","tableName","toLocaleUpperCase","fieldName","enumValue","enumCommonAreaNoneType","checkDates","control","undefined","setErrors","clearAsyncValidators","updateValueAndValidity","formatDate","date","d","onSearch","transform","data","getspaceallocationstatictics","setChartData","changeViewBy","lable","onSelectDisplayType","room","viewByValue","getspaceallocationstaticticsroomdata","onClear","barChartData","Object","values","forEach","index","series","dataobj","name","push","empty","i","repeat","detectChanges","parts","split","getRmList","commonAreaType","divElement","chartContainer","nativeElement","then","canvas","imgData","toDataURL","printPDF","clear","reportDetails","title","getlabelfromviewbyvalue","printPdf","add","key","severity","summary","detail","file","Blob","type","fileURL","URL","createObjectURL","window","open","getDestructuredData","excelHeaders","xlsx","worksheet","utils","json_to_sheet","lengthObj","keys","wch","headers","header","v","position","String","fromCharCode","workbook","Sheets","SheetNames","excelBuffer","write","bookType","saveAsExcelFile","item","buffer","fileName","EXCEL_TYPE","EXCEL_EXTENSION","saveAs","getTime","result","checkactive","entries","_","ɵɵdirectiveInject","i1","BuildingService","i2","AuthService","i3","UntypedFormBuilder","ChangeDetectorRef","i4","DivisionService","i5","DepartmentService","i6","DatePipe","i7","EnumService","i8","BookingService","i9","_2","selectors","viewQuery","SpaceAllocationStatisticsComponent_Query","rf","ctx","decls","vars","consts","template","SpaceAllocationStatisticsComponent_Template","SpaceAllocationStatisticsComponent_Template_p_calendar_ngModelChange_10_listener","SpaceAllocationStatisticsComponent_Template_p_calendar_ngModelChange_16_listener","SpaceAllocationStatisticsComponent_Template_ng_select_change_21_listener","SpaceAllocationStatisticsComponent_Template_ng_select_change_26_listener","SpaceAllocationStatisticsComponent_tr_28_Template","SpaceAllocationStatisticsComponent_Template_ng_select_change_34_listener","SpaceAllocationStatisticsComponent_Template_ng_select_change_39_listener","SpaceAllocationStatisticsComponent_Template_ng_select_change_44_listener","SpaceAllocationStatisticsComponent_Template_ng_select_change_49_listener","SpaceAllocationStatisticsComponent_Template_button_click_51_listener","SpaceAllocationStatisticsComponent_Template_button_click_52_listener","SpaceAllocationStatisticsComponent_div_53_Template","SpaceAllocationStatisticsComponent_div_54_Template","SpaceAllocationStatisticsComponent_div_55_Template","SpaceAllocationStatisticsComponent_div_56_Template","SpaceAllocationStatisticsComponent_Template_p_dialog_visibleChange_57_listener","SpaceAllocationStatisticsComponent_ng_template_58_Template","SpaceAllocationStatisticsComponent_ng_template_59_Template","SpaceAllocationStatisticsComponent_Template_p_dialog_visibleChange_60_listener","SpaceAllocationStatisticsComponent_ng_template_61_Template","SpaceAllocationStatisticsComponent_ng_template_62_Template","valid","ɵɵstyleMap","_c2","_c3"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/space-allocation-statistics/space-allocation-statistics.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/space-allocation-statistics/space-allocation-statistics.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { DepartmentService } from '../division-department/services/department.services';\nimport { DivisionService } from '../division-department/services/division.services';\nimport { ReportBarChartModel } from '../view-employee-report/model/report-bar-chart.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport html2canvas from 'html2canvas';\nimport { BookingService } from '../booking/services/booking.services';\nimport * as FileSaver from 'file-saver';\n\nclass roomfilter{\n  blId: null|string;\n  flId:null|string;\n  divId:null|string;\n  depId:null|string;\n  dateFrom:null|string;\n  dateTo:null|string;\n  compId:null|number;\n  viewBy:null|string;\n  constructor( blId: null|string,flId:null|string,divId:null|string,depId:null|string,dateFrom:null|string,\n    dateTo:null|string,compId:null|number,viewBy:null|string) {\n    this.blId = blId;\n    this.flId = flId;\n    this.divId = divId;\n    this.depId = depId;\n    this.dateFrom = dateFrom;\n    this.dateTo = dateTo;\n    this.compId=compId;\n    this.viewBy=viewBy;\n}\n}\n\n@Component({\n  selector: 'app-space-allocation-statistics',\n  templateUrl: './space-allocation-statistics.component.html',\n  styleUrls: ['./space-allocation-statistics.component.scss'],\n  providers: [MessageService]\n})\n\nexport class SpaceAllocationStatisticsComponent {\n  filterPanel!: UntypedFormGroup;\n  compId!: number;\n  rowCount: number = UtilConstant.ROW_COUNT;\n  departmentData:any[]=[];\n  alldepartmentData:any[]=[];\n  enumDivision:any[]=[];\n  enumBL: any[] = [];\n  enumFL: any[] = [];\n  enumAllFL: any[] = [];\n  showGrid:boolean = false;\n  showGridLines:boolean = true;\n  showAllocatedPopup:boolean = false;\n  showAllRoomsPopup:boolean = false;\n  gridblfldata:any[]=[];\n  firstParamName:string='';\n  secondParamName:string='';\n  showSecondParam:boolean =false;\n  roomData:any[]=[];\n  allroomData:any[]=[];\n  filter = new roomfilter(null,null,null,null,null,null,0,null);\n  viewByData: any[] = [\n    {\n      \"id\": 0,\n      \"lable\": 'Building',\n      \"value\": \"bl_id\"\n    },\n    {\n      \"id\": 1,\n      \"lable\": 'Floor',\n      \"value\": \"fl_id\"\n    },\n    {\n      \"id\": 2,\n      \"lable\": 'Division',\n      \"value\": \"div_id\"\n    },\n    {\n      \"id\": 3,\n      \"lable\": 'Department',\n      \"value\": \"dep_id\"\n    }\n  ];\n\n  displayTypeData: any = [\n    {\n      \"id\": 0,\n      \"lable\": 'Grid',\n      \"value\": \"grid\"\n    },\n    {\n      \"id\": 1,\n      \"lable\": 'Bar Chart',\n      \"value\": \"bar_chart\"\n    }\n  ]\n  monthStart = new Date((new Date()).getFullYear(),(new Date()).getMonth(), 1);\n  monthEnd = new Date((new Date()).getFullYear(), (new Date()).getMonth() + 1, 0);\n  @ViewChild('chartContainer', { static: false }) chartContainer!: ElementRef;\n  view: any[] = [1200, 495];\n  showXAxis:boolean = true;\n  showXAxisLabel:boolean = true;\n  xAxisLabel:string= '';\n  barchartData : ReportBarChartModel[]=[];\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showYAxisLabel = true;\n  yAxisLabel = 'Area (sq.ft)';\n  showbarchart :boolean = false;\n  colorScheme = {\n    domain: ['#5AA454', '#C7B42C']\n  };\n  chartImg: any[] = [];\n  enumCommonAreaNoneType!:number;\n  grid_array :any[]=[];\n  showOnlyAllocationArea:boolean = false;\n  constructor(\n    private blServ: BuildingService,\n    private authSrv: AuthService,\n    private formBuilder: UntypedFormBuilder,\n    private cdr: ChangeDetectorRef,\n    private divisionservice : DivisionService,\n    private departmentservice : DepartmentService,\n    private datePipe:DatePipe,\n    private enumsrv: EnumService,\n    private bookingSrv: BookingService,\n    private messageService: MessageService,\n  ) { \n    this.filterPanel = this.formBuilder.group({\n      divId:[null],\n      depId: [null],\n      dateFrom: [null,[Validators.required]],\n      dateTo:[null,[Validators.required]],\n      blId: [null],\n      flId:[null],\n      viewBy: [null,[Validators.required]],\n      displayType: [null],\n    });\n   \n  }\n\n  ngOnInit(): void {\n    // this.compId = this.authSrv.getLoggedInUserCompId()\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllDivisions();\n    this.loadAllDepartments();\n    this.loadCommonAreaEnums();\n   this.filterPanel.patchValue({\n      displayType:this.displayTypeData[0].value,\n      dateFrom:this.monthStart,\n      dateTo: this.monthEnd\n   })\n  }\n\n  loadAllDivisions(){\n    this.enumDivision=[];\n    this.divisionservice.getAllDivisions().subscribe((res:any)=>{\n      this.enumDivision= res.map( (each:any) =>{ return {...each,\"bindlabel\":each.divId}} );\n      this.enumDivision.unshift({divId:'',bindlabel:'Make a selection'})\n    })\n  }\n\n  loadAllDepartments(){\n    this.alldepartmentData=[];\n    this.departmentservice.getAllDepartments().subscribe((res:any)=>{\n      this.alldepartmentData = res.map( (each:any) =>{ return {...each,\"bindlabel\":each.depId}} );\n      this.alldepartmentData.unshift({depId:'',bindlabel:'Make a selection'});\n      this.departmentData=[...this.alldepartmentData];\n     \n    })\n  }\n\n  onSelectDivision(event:any){\n    if (event.divId != null && event.divId!='') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          depId: null,\n        });\n        this.loadDepartmentCode(event.divId);\n      }, 10);\n\n    }\n    else {\n      this.departmentData = this.alldepartmentData;\n    }\n  }\n\n  loadDepartmentCode(divId:any){\n    if (divId != null && divId!='') {\n      this.departmentData=[];\n      this.departmentData = this.alldepartmentData.filter(t => t.divId == divId);\n      this.departmentData.unshift({depId:'',bindlabel:'Make a selection'});\n    }else{\n      this.departmentData=[];\n      this.departmentData = this.alldepartmentData;\n    }\n  }\n\n  onSelectDepartment(event:any){\n    if(event.depId!=null && event.depId!=''){\n      this.filterPanel.patchValue({\n        divId:event.divId\n      })\n    }else{\n      this.filterPanel.patchValue({\n        divId:null\n      })\n    }\n  }\n\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe((res: any) => {\n      this.enumBL = res;\n      this.enumBL.unshift({id:'',blNameString:'Make a selection'});\n    });\n  }\n\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe((res: any) => {\n      this.enumAllFL = res;\n      this.enumAllFL.unshift({id:'',flNameString:'Make a selection'});\n      this.enumFL = this.enumAllFL;\n    });\n  }\n\n  onSelectBlCode($event: any) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    }\n    else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n    }\n  }\n\n  loadFloorCode(bl_id: any) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id)\n      this.enumFL.unshift({id:'',flNameString:'Make a selection'});\n    }\n  }\n\n  onSelectFlCode(event: any) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n        });\n      }, 10);\n    }\n    else {\n      this.enumFL.unshift({id:'',flNameString:'Make a selection'});\n    }\n  }\n\n  loadCommonAreaEnums(){\n    this.enumsrv.getEnums().subscribe((res:any)=>{\n      let resultCommonArea = res.filter((t:any) =>\n        t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase()\n        && t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase()\n        && t.compId == this.compId && t.enumValue.toLocaleUpperCase() == 'None'.toLocaleUpperCase());\n        this.enumCommonAreaNoneType = resultCommonArea[0].id\n    })\n  }\n\n  checkDates(control: any){\n    if (control !== undefined && control != null) {\n      this.filterPanel.controls['dateTo'].setErrors(null);\n      this.filterPanel.clearAsyncValidators();\n      this.filterPanel.updateValueAndValidity();\n      let dateFrom = this.formatDate(this.filterPanel.controls.dateFrom.value);\n      let dateTo = this.formatDate(this.filterPanel.controls.dateTo.value);\n      if(dateFrom!= null && dateTo!=null ){\n        if(dateTo<=dateFrom){\n          this.filterPanel.controls['dateTo'].setErrors({ 'incorrect': true });\n          this.filterPanel.updateValueAndValidity();\n          return { 'incorrect': true };\n        }else{\n          return null;\n        }\n      }\n      else {\n        this.filterPanel.controls['dateTo'].setErrors({ 'isnull': true });\n        this.filterPanel.updateValueAndValidity();\n        return null;\n      }\n      }\n      return null;\n    }\n\n    formatDate(date: any) {\n      if (date != null) {\n        var d = new Date(date);\n        return d;\n      } else {\n        return null;\n      }\n    }\n\n    onSearch(){\n      this.gridblfldata =[];\n      this.showGrid = false;\n      this.showbarchart = false;\n      this.firstParamName='';\n      this.showSecondParam = false;\n      this.showOnlyAllocationArea = false;\n      this.secondParamName='';\n      let blId =this.filterPanel.controls.blId.value;\n      let flId=this.filterPanel.controls.flId.value;\n      let divId=this.filterPanel.controls.divId.value;\n      let depId=this.filterPanel.controls.depId.value;\n      let viewBy=this.filterPanel.controls.viewBy.value;\n      let displayType = this.filterPanel.controls.displayType.value;\n      this.filter.blId=blId!=null&&blId!=''?blId:null;\n      this.filter.flId=flId!=null&&flId!=''?flId:null;\n      this.filter.divId=divId!=null&&divId!=''?divId:null;\n      this.filter.depId=depId!=null&&depId!=''?depId:null;\n      this.filter.viewBy=viewBy;\n      this.filter.dateFrom = this.datePipe.transform(this.filterPanel.controls.dateFrom.value,\"yyyy-MM-dd\");\n      this.filter.dateTo= this.datePipe.transform(this.filterPanel.controls.dateTo.value,\"yyyy-MM-dd\");\n      this.filter.compId= this.compId;\n      let data={\n        compId:this.compId,\n        dateFrom:this.datePipe.transform(this.filterPanel.controls.dateFrom.value,\"yyyy-MM-dd\"),\n        dateTo:this.datePipe.transform(this.filterPanel.controls.dateTo.value,\"yyyy-MM-dd\"),\n        blId:blId,\n        flId:flId,\n        divId:divId,\n        depId:depId,\n        viewBy:viewBy,\n      }\n      this.blServ.getspaceallocationstatictics(data).subscribe((res:any)=>{\n        if(res){\n          if(displayType=='grid'){\n            this.gridblfldata = res;\n          if(viewBy=='bl_id'){\n            this.firstParamName='Building code';\n            this.showSecondParam = false;\n            this.showOnlyAllocationArea = false;\n            this.secondParamName='';\n            if(blId!=null && blId!=''){\n              this.gridblfldata = this.gridblfldata.filter( (each:any) => each.firstvalue== blId);\n            }\n          }else if(viewBy=='fl_id'){\n            this.firstParamName='Building code';\n            this.showSecondParam = true;\n            this.showOnlyAllocationArea = false;\n            this.secondParamName='Floor Code';\n            if(blId!=null && blId!=''){\n              this.gridblfldata = this.gridblfldata.filter( (each:any) => each.firstvalue== blId);\n            }\n            if(flId!=null && flId!=''){\n              this.gridblfldata = this.gridblfldata.filter( (each:any) => each.secondvalue== flId);\n            }\n          }else if(viewBy=='div_id'){\n            this.firstParamName='Division code';\n            this.showSecondParam = false;\n            this.showOnlyAllocationArea = true;\n            this.secondParamName='';\n            if(divId!=null && divId!=''){\n              this.gridblfldata = this.gridblfldata.filter( (each:any) => each.firstvalue== divId);\n            }\n          }else if(viewBy=='dep_id'){\n            this.firstParamName='Division code';\n            this.showSecondParam = true;\n            this.showOnlyAllocationArea = true;\n            this.secondParamName='Department Code';\n            if(divId!=null && divId!=''){\n              this.gridblfldata = this.gridblfldata.filter( (each:any) => each.firstvalue== divId);\n            }\n            if(depId!=null && depId!=''){\n              this.gridblfldata = this.gridblfldata.filter( (each:any) => each.secondvalue== depId);\n            }\n          }\n          this.showGrid = true;\n          }else{\n            this.gridblfldata=res;\n            if(viewBy=='bl_id' || viewBy=='div_id'){\n              this.gridblfldata = this.gridblfldata.map( (each:any)=>{ return {...each,\"name\":each.firstvalue};});\n            }else{\n              this.gridblfldata = this.gridblfldata.map( (each:any)=>{ return {...each,\"name\":each.firstvalue+\"-\"+each.secondvalue};})\n            }\n            this.setChartData();\n            this.showbarchart = true;\n          }\n          \n        }\n      })\n    }\n\n    changeViewBy(event:any){\n      this.xAxisLabel = event.lable;\n    }\n\n    onSelectDisplayType(event:any){\n    }\n\n    getRoomData(room:any){\n      this.showAllRoomsPopup = false;\n      this.showAllocatedPopup = false;\n      this.roomData=[];\n      let viewByValue =this.filterPanel.controls.viewBy.value;\n      if(viewByValue=='bl_id'){\n        this.filter.blId=room.firstvalue;\n      }else if(viewByValue=='fl_id'){\n        this.filter.blId=room.firstvalue;\n        this.filter.flId=room.secondvalue;\n      }else if(viewByValue=='div_id'){\n        this.filter.divId=room.firstvalue;\n        \n      }else if(viewByValue=='dep_id'){\n        this.filter.divId=room.firstvalue;\n        this.filter.depId=room.secondvalue;\n      }\n      this.blServ.getspaceallocationstaticticsroomdata(this.filter).subscribe((res:any)=>{\n        if(res){\n          this.roomData = res;\n          this.showAllocatedPopup = true;\n        }\n      })\n    }\n\n    onClear(){\n      this.gridblfldata=[];\n      this.firstParamName='';\n      this.secondParamName='';\n      this.showSecondParam =false;\n      this.showOnlyAllocationArea = false;\n      this.roomData=[];\n      this.allroomData=[];\n      this.showGrid= false;\n      this.showbarchart = false;\n      this.showAllocatedPopup=false;\n      this.showAllRoomsPopup = false;\n      this.chartImg=[];\n      this.filterPanel.patchValue({\n        divId:null,\n        depId: null,\n        dateFrom:this.monthStart,\n        dateTo: this.monthEnd,\n        blId: null,\n        flId:null,\n        viewBy: null,\n        displayType: this.displayTypeData[0].value,\n      });\n      this.filter = {blId:null,flId:null,divId:null,depId:null,dateFrom:null,dateTo:null, compId:null,viewBy:null};\n    }\n\n    setChartData(){\n      this.barchartData=[];\n      const barChartData:any[] =[];\n      Object.values(this.gridblfldata).forEach((each: any, index: number) => {\n       if(each.occupiedarea>0){\n        let series = [{\"name\":\"Total Area\",\"value\":each.totalarea},{\"name\":\"Allocated Area\",\"value\":each.occupiedarea}];\n        let dataobj = {\n          name:each.name,\n          series:series\n        }\n        barChartData.push(dataobj);\n       }\n      })\n      if(barChartData.length < 5){\n        let empty = '  ';\n        for(let i=0; i<5-barChartData.length; i++){\n          barChartData.push({\n                name: empty.repeat(i+1),\n                series :[{\"name\":\"Total Area\",\"value\":0},{\"name\":\"Allocated Area\",\"value\":0}]\n            })\n        }\n    }\n      this.barchartData = barChartData;\n      this.cdr.detectChanges();\n    }\n    \n     onSelectBarChart( event:any){\n      this.roomData=[];\n      this.allroomData=[];\n      this.showAllocatedPopup = false;\n      this.showAllRoomsPopup = false;\n      let viewByValue =this.filterPanel.controls.viewBy.value;\n      if(typeof event === \"object\" && event !== null){\n        if(event.name==\"Total Area\"){\n          let data ={id:'',name:'',blId:null,flId:null}\n          let parts = event.series.split(/-(.+)/);\n          if(viewByValue==\"bl_id\"){\n            data.blId = parts[0];\n          }else if (viewByValue ==\"fl_id\"){\n            data.blId = parts[0];\n            data.flId = parts[1];\n          }\n          this.blServ.getRmList(data).subscribe((res:any)=>{\n            this.allroomData = res.filter( (each:any) => each.commonAreaType==this.enumCommonAreaNoneType);\n            this.showAllRoomsPopup = true;\n          })\n        }else if (event.name==\"Allocated Area\"){\n          let parts = event.series.split(/-(.+)/);\n          if(viewByValue==\"bl_id\"){\n            this.filter.blId = parts[0];\n          }else if (viewByValue ==\"fl_id\"){\n            this.filter.blId = parts[0];\n            this.filter.flId = parts[1];\n          }else if (viewByValue ==\"div_id\"){\n            this.filter.divId = parts[0];\n          }else if (viewByValue == \"dep_id\"){\n            this.filter.divId = parts[0];\n            this.filter.depId = parts[1];\n          }\n          this.blServ.getspaceallocationstaticticsroomdata(this.filter).subscribe((res:any)=>{\n            if(res){\n              this.roomData = res;\n              this.showAllocatedPopup = true;\n            }\n          })\n        }\n        }\n     }\n\n     exportChartToPDF(){\n      const divElement: HTMLElement = this.chartContainer.nativeElement;\n      html2canvas(divElement).then((canvas: any) => {\n        const imgData = canvas.toDataURL('image/png');\n        this.chartImg = [];\n        this.chartImg.push(imgData);\n        this.printPDF();\n      });\n     }\n\n     printPDF() {\n      this.messageService.clear();\n      var reportDetails: any = {\n        chartImg: this.chartImg,\n        title: 'View By ' + this.getlabelfromviewbyvalue(this.filterPanel.controls.viewBy.value),\n      }\n      this.bookingSrv.printPdf(reportDetails).subscribe((res: any) => {\n        if (res != null) {\n          this.messageService.add({ key: 'spaceallocationMsg', severity: 'success', summary: 'PDF Created', detail: 'PDF created successfully' });\n          var file = new Blob([res], { type: 'application/pdf' });\n          var fileURL = URL.createObjectURL(file);\n          window.open(fileURL);\n        }\n      })\n    }\n\n     exportGridToExcel(){\n      this.getDestructuredData(this.gridblfldata);\n      let excelHeaders: string[]=[];\n      import(\"xlsx\").then(xlsx => {\n        const worksheet = xlsx.utils.json_to_sheet(this.grid_array);\n        worksheet['!cols'] = [];\n        let lengthObj = Object.keys(this.gridblfldata[0]).length;\n        for( let i =0;i<lengthObj;i++){\n          worksheet['!cols'].push( { wch: 20 });\n        }\n          if(this.showSecondParam && this.showOnlyAllocationArea){\n          excelHeaders =  [this.firstParamName,this.secondParamName,\"Allocated Area (sq.ft)\"];\n          }else if(this.showSecondParam && !this.showOnlyAllocationArea){\n            excelHeaders =  [this.firstParamName,this.secondParamName,\"Total Area (sq.ft)\",\"Allocated Area (sq.ft)\",\"Available Area (sq.ft)\",\n          \"Allocation (%)\"]  \n          }else if (!this.showSecondParam && this.showOnlyAllocationArea){\n            excelHeaders =  [this.firstParamName,\"Allocated Area (sq.ft)\"];\n          }else if (!this.showSecondParam && !this.showOnlyAllocationArea){\n            excelHeaders =  [this.firstParamName,\"Total Area (sq.ft)\",\"Allocated Area (sq.ft)\",\"Available Area (sq.ft)\", \"Allocation (%)\"]   \n          }\n        const headers = excelHeaders.map((header, index) => ({ v: header, position: String.fromCharCode(65 + index) + 1 }));\n        headers.forEach(header => {\n          worksheet[header.position] = { v: header.v };\n        });\n        const workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n        const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\n        this.saveAsExcelFile(excelBuffer, \"allocation\");\n      });\n     }\n\n     getDestructuredData(data: any) {\n      this.grid_array = data.map((item: any) => {\n        if(this.showSecondParam && this.showOnlyAllocationArea){\n          return {\n            [this.firstParamName]: item['firstvalue'],\n            [this.secondParamName]: item['secondvalue'],\n            \"Allocated Area (sq.ft)\" : item['occupiedarea'],\n          }\n        }else if(this.showSecondParam && !this.showOnlyAllocationArea){\n          return {\n            [this.firstParamName]: item['firstvalue'],\n            [this.secondParamName]: item['secondvalue'],\n            \"Total Area (sq.ft)\" : item['totalarea'],\n            \"Allocated Area (sq.ft)\" : item['occupiedarea'],\n            \"Available Area (sq.ft)\" : item['availablearea'] ,\n            \"Allocation (%)\" : item['allocationpercentage']\n          }\n        }else if(!this.showSecondParam && this.showOnlyAllocationArea){\n          return {\n            [this.firstParamName]: item['firstvalue'],\n            \"Allocated Area (sq.ft)\" : item['occupiedarea'],\n          }\n        }else if (!this.showSecondParam && !this.showOnlyAllocationArea){\n          return {\n            [this.firstParamName]: item['firstvalue'],\n            \"Total Area (sq.ft)\" : item['totalarea'],\n            \"Allocated Area (sq.ft)\" : item['occupiedarea'],\n            \"Available Area (sq.ft)\" : item['availablearea'] ,\n            \"Allocation (%)\" : item['allocationpercentage']\n          }\n        }else{\n          return null;\n        }\n      });\n    }\n  \n    saveAsExcelFile(buffer: any, fileName: string): void {\n      let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n      let EXCEL_EXTENSION = '.xlsx';\n      const data: Blob = new Blob([buffer], {\n        type: EXCEL_TYPE\n      });\n      FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n    }\n\n     getlabelfromviewbyvalue(value:any){\n      let result = this.viewByData.filter((each:any)=>each.value==value);\n      return result[0].lable\n     }\n\n     checkactive(event:any){\n      event.entries=[];\n      event.value=null;\n     }\n}\n","<div class=\"card\" >\n    <p-panel header=\"Room Summary\" [toggleable]=\"true\">\n        <form [formGroup]=\"filterPanel\">\n            <table width=\"100%\">\n                <tr>\n                    <td style=\"width: 20%\">\n                        <div class=\"input-label-custom\">\n                            <div class=\"p-fluid p-field\">\n                                <label class='form-field-lable control-label'>Date From</label>\n                                <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"date\"\n                        formControlName=\"dateFrom\" [showIcon]=\"false\" inputId=\"icon\" [readonlyInput]=\"true\"\n                        style=\"height:32px;\" (ngModelChange)=\"checkDates($event)\"></p-calendar>\n                             </div>\n                        </div>\n                    </td>\n                    <td style=\"width: 20%\">\n                        <div class=\"input-label-custom \">\n                            <div class=\"p-fluid p-field\">\n                                <label class='form-field-lable control-label'>Date To</label>\n                                <p-calendar appendTo=\"body\"  dateFormat=\"dd M yy\" name=\"date\"\n                        formControlName=\"dateTo\" [showIcon]=\"false\" inputId=\"icon\" [readonlyInput]=\"true\"\n                        (ngModelChange)=\"checkDates($event)\"></p-calendar>\n                            </div>    \n                        </div>\n                    </td>\n                    <td width=\"20%\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable control-label'>View By</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"viewByData\"\n                                formControlName=\"viewBy\" bindLabel=\"lable\" bindValue=\"value\"\n                                (change)=\"changeViewBy($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td width=\"20%\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Display Type</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"false\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"displayTypeData\"\n                                formControlName=\"displayType\" bindLabel=\"lable\" bindValue=\"value\"\n                                (change)=\"onSelectDisplayType($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width: 20%\"></td>\n                </tr>\n                <tr  *ngIf=\"filterPanel.controls['dateTo']?.errors\">\n                    <td style=\"width: 20%\">\n                        <label\n                        *ngIf=\"filterPanel.controls['dateTo']?.errors && filterPanel.controls['dateTo']?.errors.incorrect\"\n                        class='form-field-lable' style=\"color:red;margin-left:5px;\">Date To should be greater than Date From</label>\n                    </td>\n                    <td style=\"width: 20%\"></td>\n                    <td style=\"width: 20%\"></td>\n                    <td style=\"width: 20%\"></td>\n                    <td style=\"width: 20%\"></td>\n                </tr>\n                <tr>\n                    <td style=\"width:20%\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Building </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\"\n                                [searchable]=\"true\" bindLabel=\"blNameString\" bindValue=\"id\" (change)=\"onSelectBlCode($event)\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width:20%\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Floor</label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\"\n                                [searchable]=\"true\" bindLabel=\"flNameString\" bindValue=\"id\" placeholder=\"Make a selection\"\n                                class=\"ng-select-dropdown\" (change)=\"onSelectFlCode($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width: 20%\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Division </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumDivision\" formControlName=\"divId\"\n                                [searchable]=\"true\" bindLabel=\"bindlabel\" bindValue=\"divId\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" (change)=\"onSelectDivision($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td style=\"width: 20%\">\n                        <div class=\"input-label-custom \">\n                            <label class='form-field-lable '>Department </label>\n                            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"departmentData\" formControlName=\"depId\"\n                                [searchable]=\"true\" bindLabel=\"bindlabel\" bindValue=\"depId\"\n                                placeholder=\"Make a selection\" class=\"ng-select-dropdown\" (change)=\"onSelectDepartment($event)\">\n                            </ng-select>\n                        </div>\n                    </td>\n                    <td>\n                        <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple label=\"Search\"\n                    style=\"width: 67px;margin-left:32%;margin-top:20px;\"\n                    class=\"p-button-primary \"></button>\n                    <button (click)=\"onClear()\"  pButton pRipple label=\"Clear\"\n                    style=\"width: 67px;margin-left:5px;margin-top:20px;\"\n                    class=\"p-button-primary \"></button>\n                    <div *ngIf=\"showGrid\" style=\"width:30px; display:inline-flex;margin-top:20px;\">\n                        <button type=\"button\" (click)=\"exportGridToExcel()\" pButton pRipple  icon=\"pi pi-file-excel\"\n                    class=\"p-button-success p-mr-2 pull-right\" matTooltip=\"XLS\" style=\"margin-left: 5px;\" matTooltipPosition=\"below\"></button>\n                    </div>\n                    <div *ngIf=\"showbarchart && barchartData.length>0\" style=\"width:30px; display:inline-flex;margin-top:20px;\">\n                        <p-button icon=\"pi pi-file-pdf\" (click)=\"exportChartToPDF()\" matTooltip=\"Generate PDF\" matTooltipPosition=\"below\" \n                        style=\"width: 30px; margin-left: 5px;\" styleClass=\"p-button-raised p-button-danger\"></p-button>\n                    </div>\n                    </td>\n                </tr>\n                \n            </table>\n        </form>\n    </p-panel>\n</div>\n<div class=\"card\" *ngIf=\"showGrid\">\n    <p-table [value]=\"gridblfldata\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n        [rowsPerPageOptions]=\"[5,10,25]\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n        [rowHover]=\"false\"  [scrollable]=\"true\" scrollDirection=\"both\" scrollHeight=\"430px\" >\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <th  pSortableColumn=\"firstvalue\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\"> {{firstParamName}}</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"firstvalue\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"firstvalue\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th *ngIf=\"showSecondParam\" pSortableColumn=\"secondvalue\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\"> {{secondParamName}}</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"secondParamValue\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"secondvalue\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th  *ngIf=\"!showOnlyAllocationArea\" pSortableColumn=\"totalarea\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Total Area (sq.ft)</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"totalarea\"></p-sortIcon>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"occupiedarea\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Allocated Area (sq.ft)</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"occupiedarea\"></p-sortIcon>\n                        </div>\n                    </div>\n                </th>\n                <th *ngIf=\"!showOnlyAllocationArea\" pSortableColumn=\"availablearea\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Available Area (sq.ft)</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"availablearea\"></p-sortIcon>\n                        </div>\n                    </div>\n                </th>\n                <th *ngIf=\"!showOnlyAllocationArea\" pSortableColumn=\"allocationpercentage\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Allocation (%)</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"allocationpercentage\"></p-sortIcon>\n                        </div>\n                    </div>\n                </th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-room>\n            <tr  style=\"cursor: pointer;\" (click)=\"getRoomData(room)\">\n               <ng-container *ngIf=\"showSecondParam; else elseBlock\">\n                <td>{{room.firstvalue}}</td>\n               <td>{{room.secondvalue}}</td>\n               <td *ngIf=\"!showOnlyAllocationArea\" style=\"text-align: right;\">{{room.totalarea.toFixed(2)}}</td>\n               <td style=\"text-align: right;\">{{room.occupiedarea.toFixed(2)}}</td>\n               <td *ngIf=\"!showOnlyAllocationArea\" style=\"text-align: right;\">{{room.availablearea.toFixed(2)}}</td>\n               <td *ngIf=\"!showOnlyAllocationArea\" style=\"text-align: right;\">{{room.allocationpercentage.toFixed(2)}}</td>\n              </ng-container>\n              <ng-template #elseBlock>\n                <td>{{room.firstvalue}}</td>\n               <td *ngIf=\"!showOnlyAllocationArea\" style=\"text-align: right;\">{{room.totalarea.toFixed(2)}}</td>\n               <td style=\"text-align: right;\">{{room.occupiedarea.toFixed(2)}}</td>\n               <td *ngIf=\"!showOnlyAllocationArea\" style=\"text-align: right;\">{{room.availablearea.toFixed(2)}}</td>\n               <td *ngIf=\"!showOnlyAllocationArea\" style=\"text-align: right;\">{{room.allocationpercentage.toFixed(2)}}</td>\n              </ng-template>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\" let-columns>\n            <tr>\n                <td [attr.colspan]=\"3\">\n                    No records found\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n</div>\n<div *ngIf=\"showbarchart\" #chartContainer >\n    <div *ngIf=\"barchartData.length>0\" style=\"overflow-x: auto;\">\n    <ngx-charts-bar-vertical-2d\n    [view]=\"view\"\n    [scheme]=\"colorScheme\"\n    [results]=\"barchartData\"\n    [gradient]=\"gradient\"\n    [xAxis]=\"showXAxis\"\n    [yAxis]=\"showYAxis\"\n    [legend]=\"showLegend\"\n    [showXAxisLabel]=\"showXAxisLabel\"\n    [showYAxisLabel]=\"showYAxisLabel\"\n    [xAxisLabel]=\"xAxisLabel\"\n    [yAxisLabel]=\"yAxisLabel\"\n    (select)=\"onSelectBarChart($event)\"\n    [showGridLines]=\"showGridLines\"\n    >\n    </ngx-charts-bar-vertical-2d>\n    </div>\n    <div *ngIf=\"!(barchartData.length>0)\" style=\"width:100%;height:450px; display:flex;justify-content: center;align-items: center;\">\n        <div>\n            <h1>No data found</h1>\n        </div>\n    </div>\n    \n</div>\n<p-dialog [(visible)]=\"showAllocatedPopup\" [modal]=\"true\" [style]=\"{width: '75vw'}\" [maximizable]=\"true\"\n        [draggable]=\"false\" [resizable]=\"false\" styleClass=\"dark-panel\" id=\"preview\">\n        <ng-template pTemplate=\"header\">\n            <h2 style=\"margin: 0px;\">Room List</h2>\n        </ng-template>\n        <ng-template pTemplate=\"body\">\n            <app-space-allocation-room-list [data] =\"roomData\"></app-space-allocation-room-list>\n        </ng-template>\n</p-dialog>\n<p-dialog [(visible)]=\"showAllRoomsPopup\" [modal]=\"true\" [style]=\"{width: '66vw'}\" [maximizable]=\"true\"\n        [draggable]=\"false\" [resizable]=\"false\" styleClass=\"dark-panel\" id=\"preview\">\n        <ng-template pTemplate=\"header\">\n            <h2 style=\"margin: 0px;\">Room List</h2>\n        </ng-template>\n        <ng-template pTemplate=\"body\">\n            <app-add-room-report-table [data] =\"allroomData\"></app-add-room-report-table>\n        </ng-template>\n</p-dialog>\n<p-toast key=\"spaceallocationMsg\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"spaceallocationGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}