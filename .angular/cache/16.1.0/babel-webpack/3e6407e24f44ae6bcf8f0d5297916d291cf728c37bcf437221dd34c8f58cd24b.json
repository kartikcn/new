{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, DefaultValueAccessor } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nconst UPPERCASE_INPUT_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UppercaseDirective),\n  multi: true\n};\nexport class UppercaseDirective extends DefaultValueAccessor {\n  constructor(renderer, elementRef) {\n    super(renderer, elementRef, false);\n  }\n  writeValue(value) {\n    const transformed = this.transformValue(value);\n    super.writeValue(transformed);\n  }\n  onInput(value) {\n    const transformed = this.transformValue(value);\n    super.writeValue(transformed);\n    this.onChange(transformed);\n  }\n  transformValue(value) {\n    const result = value && typeof value === 'string' ? value.toUpperCase() : value;\n    return result;\n  }\n  static #_ = this.ɵfac = function UppercaseDirective_Factory(t) {\n    return new (t || UppercaseDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: UppercaseDirective,\n    selectors: [[\"input\", \"uppercase\", \"\"]],\n    hostBindings: function UppercaseDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function UppercaseDirective_input_HostBindingHandler($event) {\n          return ctx.onInput($event.target.value);\n        })(\"blur\", function UppercaseDirective_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([UPPERCASE_INPUT_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALUE_ACCESSOR","DefaultValueAccessor","UPPERCASE_INPUT_CONTROL_VALUE_ACCESSOR","provide","useExisting","UppercaseDirective","multi","constructor","renderer","elementRef","writeValue","value","transformed","transformValue","onInput","onChange","result","toUpperCase","_","i0","ɵɵdirectiveInject","Renderer2","ElementRef","_2","selectors","hostBindings","UppercaseDirective_HostBindings","rf","ctx","$event","target","UppercaseDirective_blur_HostBindingHandler","onTouched","ɵɵInheritDefinitionFeature"],"sources":["/home/admin7/Documents/fms_frontend/src/app/directive/directive/upper-case.directive.ts"],"sourcesContent":["import { Directive, ElementRef, forwardRef, Renderer2 } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, DefaultValueAccessor } from '@angular/forms';\n\nconst UPPERCASE_INPUT_CONTROL_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => UppercaseDirective),\n        multi: true,\n};\n\n@Directive({\n        selector: 'input[uppercase]',\n        host: {\n                // When the user updates the input\n                '(input)': 'onInput($event.target.value)',\n                '(blur)': 'onTouched()',\n        },\n        providers: [\n                UPPERCASE_INPUT_CONTROL_VALUE_ACCESSOR,\n        ],\n})\nexport class UppercaseDirective extends DefaultValueAccessor {\n\n        constructor(renderer: Renderer2, elementRef: ElementRef) {\n                super(renderer, elementRef, false);\n        }\n\n        writeValue(value: any): void {\n                const transformed = this.transformValue(value);\n\n                super.writeValue(transformed);\n        }\n\n        onInput(value: any): void {\n                const transformed = this.transformValue(value);\n\n                super.writeValue(transformed);\n                this.onChange(transformed);\n        }\n\n        private transformValue(value: any): any {\n                const result = value && typeof value === 'string'\n                        ? value.toUpperCase()\n                        : value;\n\n                return result;\n        }\n}"],"mappings":"AAAA,SAAgCA,UAAU,QAAmB,eAAe;AAC5E,SAASC,iBAAiB,EAAEC,oBAAoB,QAAQ,gBAAgB;;AAExE,MAAMC,sCAAsC,GAAG;EACvCC,OAAO,EAAEH,iBAAiB;EAClBI,WAAW,EAAEL,UAAU,CAAC,MAAMM,kBAAkB,CAAC;EACzDC,KAAK,EAAE;CACd;AAaD,OAAM,MAAOD,kBAAmB,SAAQJ,oBAAoB;EAEpDM,YAAYC,QAAmB,EAAEC,UAAsB;IAC/C,KAAK,CAACD,QAAQ,EAAEC,UAAU,EAAE,KAAK,CAAC;EAC1C;EAEAC,UAAUA,CAACC,KAAU;IACb,MAAMC,WAAW,GAAG,IAAI,CAACC,cAAc,CAACF,KAAK,CAAC;IAE9C,KAAK,CAACD,UAAU,CAACE,WAAW,CAAC;EACrC;EAEAE,OAAOA,CAACH,KAAU;IACV,MAAMC,WAAW,GAAG,IAAI,CAACC,cAAc,CAACF,KAAK,CAAC;IAE9C,KAAK,CAACD,UAAU,CAACE,WAAW,CAAC;IAC7B,IAAI,CAACG,QAAQ,CAACH,WAAW,CAAC;EAClC;EAEQC,cAAcA,CAACF,KAAU;IACzB,MAAMK,MAAM,GAAGL,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,GACvCA,KAAK,CAACM,WAAW,EAAE,GACnBN,KAAK;IAEf,OAAOK,MAAM;EACrB;EAAC,QAAAE,CAAA,G;qBAzBIb,kBAAkB,EAAAc,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,SAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBlB,kBAAkB;IAAAmB,SAAA;IAAAC,YAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAAlBC,GAAA,CAAAd,OAAA,CAAAe,MAAA,CAAAC,MAAA,CAAAnB,KAAA,CAA4B;QAAA,oBAAAoB,2CAAA;UAAA,OAA5BH,GAAA,CAAAI,SAAA,EAAW;QAAA;;;qCAJL,CACH9B,sCAAsC,CAC7C,GAAAiB,EAAA,CAAAc,0BAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}