{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/ui/ppm-plan/services/ppm-plan-services\";\nimport * as i3 from \"src/app/ui/Helpdesk/trades/services/trades.services\";\nimport * as i4 from \"../../services/plan-trade-services\";\nimport * as i5 from \"src/app/ui/Helpdesk/craftsperson/services/craftsperson.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"ng-zorro-antd/table\";\nimport * as i10 from \"@ng-select/ng-select\";\nimport * as i11 from \"../../../../directive/numbers-only.directive\";\nimport * as i12 from \"../../../../directive/directive/two-digit-decimal-number\";\nimport * as i13 from \"../../../common-components/trade-details/modal/trade-details.component\";\nfunction AdddPlanTradeComponent_label_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 13);\n    i0.ɵɵtext(1, \"Trade already exists\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"40vw\"\n  };\n};\nfunction AdddPlanTradeComponent_p_dialog_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 14);\n    i0.ɵɵlistener(\"visibleChange\", function AdddPlanTradeComponent_p_dialog_27_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.showDetails = $event);\n    });\n    i0.ɵɵelement(1, \"app-trade-details\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c0));\n    i0.ɵɵproperty(\"visible\", ctx_r1.showDetails)(\"modal\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selectedTrade\", ctx_r1.selectedTrade);\n  }\n}\nexport let AdddPlanTradeComponent = /*#__PURE__*/(() => {\n  class AdddPlanTradeComponent {\n    constructor(formBuilder, ppmPlanService, tradeService, planTradeService, cfService) {\n      this.formBuilder = formBuilder;\n      this.ppmPlanService = ppmPlanService;\n      this.tradeService = tradeService;\n      this.planTradeService = planTradeService;\n      this.cfService = cfService;\n      this.subscriptions = [];\n      this.newRecord = true;\n      this.planStepList = [];\n      this.tradeList = [];\n      this.errorMsg = '';\n      this.prevPlanId = null;\n      this.prevStepCode = '';\n      this.isTradeExists = false;\n      this.showDetails = false;\n      this.enableDetailsBtn = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.planTradeFormPanel = this.formBuilder.group({\n        planTradeId: [null],\n        planStepId: [null, [Validators.required]],\n        tradeId: [null, [Validators.required]],\n        hoursRequired: [null, [Validators.required]]\n      });\n      // End Of Building Form\n      this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.planTradeFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {\n      this.loadPlansTepsData();\n      this.loadTrades();\n    }\n    loadPlansTepsData() {\n      this.ppmPlanService.getAllPlanSteps(0).subscribe(res => {\n        if (res.status != 202) {\n          this.planStepList = res;\n        } else {\n          this.planStepList = [];\n        }\n      });\n    }\n    loadTrades() {\n      this.tradeService.getAllTrades().subscribe(res => {\n        this.tradeList = res;\n      });\n    }\n    isValid() {\n      return this.getValidationErrors().length === 0;\n    }\n    getValidationErrors() {\n      const me = this;\n      const validationErros = [];\n      return validationErros;\n    }\n    /// End Of Form Validation Related Code\n    get value() {\n      const stateDetails = {\n        planTradeId: this.planTradeFormPanel.controls.planTradeId.value,\n        planStepId: this.planTradeFormPanel.controls.planStepId.value,\n        tradeId: this.planTradeFormPanel.controls.tradeId.value,\n        hoursRequired: this.planTradeFormPanel.controls.hoursRequired.value\n      };\n      return stateDetails;\n    }\n    set value(value) {\n      setTimeout(() => {\n        this.planTradeFormPanel.patchValue({\n          planTradeId: value.planTradeId,\n          planStepId: value.planStepId,\n          tradeId: value.tradeId,\n          hoursRequired: value.hoursRequired\n        });\n        this.prevTradeCode = value.tradeId;\n        if (value.tradeId) {\n          this.enableDetailsBtn = true;\n          this.prevTradeCode = value.tradeId;\n          var trade = this.getSelectedTrade(value.partId);\n        }\n      });\n      this.onChange(value);\n      this.onTouched();\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.planTradeFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    // communicate the inner form validation to the parent form\n    validate(_) {\n      return this.planTradeFormPanel.valid ? null : {\n        planTradeFormPanel: {\n          valid: false\n        }\n      };\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    selectTrade(event) {\n      this.enableDetailsBtn = true;\n      if (this.prevTradeCode != event.tradeId) {\n        let planStepId = this.planTradeFormPanel.controls.planStepId.value;\n        let tradeId = event.tradeId;\n        this.planTradeService.checkIsPlanTradeExists(planStepId, tradeId).subscribe(res => {\n          this.isTradeExists = false;\n          if (res) {\n            this.isTradeExists = true;\n            this.planTradeFormPanel.controls['tradeId'].setErrors({\n              'incorrect': true\n            });\n            this.planTradeFormPanel.updateValueAndValidity();\n          } else {\n            this.isTradeExists = false;\n            this.planTradeFormPanel.controls['tradeId'].setErrors(null);\n            this.planTradeFormPanel.updateValueAndValidity();\n          }\n        });\n      }\n    }\n    showTradeDetails() {\n      // this.tradeFormPanel.disable();\n      this.selectedTrade = this.getSelectedTrade(this.planTradeFormPanel.controls.tradeId.value);\n      this.showDetails = true;\n    }\n    getSelectedTrade(tradeId) {\n      let selectedTrade = this.tradeList.find(t => t.tradeId === tradeId);\n      if (selectedTrade) {\n        return selectedTrade;\n      }\n    }\n    static #_ = this.ɵfac = function AdddPlanTradeComponent_Factory(t) {\n      return new (t || AdddPlanTradeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PpmPlanService), i0.ɵɵdirectiveInject(i3.TradesService), i0.ɵɵdirectiveInject(i4.PlanTradeService), i0.ɵɵdirectiveInject(i5.CraftspersonService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdddPlanTradeComponent,\n      selectors: [[\"app-addd-plan-trade\"]],\n      inputs: {\n        isNew: \"isNew\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AdddPlanTradeComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AdddPlanTradeComponent),\n        multi: true\n      }])],\n      decls: 28,\n      vars: 10,\n      consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"planStepId\", \"bindLabel\", \"stepCode\", \"bindValue\", \"planStepId\", \"placeholder\", \"Make a selection\", \"readonly\", \"true\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"display\", \"flex\"], [1, \"input-label-custom\", 2, \"width\", \"90%\"], [\"appendTo\", \"body\", \"formControlName\", \"tradeId\", \"bindLabel\", \"tradeCode\", \"bindValue\", \"tradeId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"display\", \"flex\", \"margin-top\", \"32px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-info-circle\", \"matTooltip\", \"View Part Details\", 1, \"p-button-rounded\", \"pull-right\", 3, \"disabled\", \"click\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"name\", \"hoursRequired\", \"formControlName\", \"hoursRequired\", 1, \"form-control\"], [\"id\", \"details\", 3, \"visible\", \"style\", \"modal\", \"visibleChange\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [\"id\", \"details\", 3, \"visible\", \"modal\", \"visibleChange\"], [3, \"selectedTrade\"]],\n      template: function AdddPlanTradeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\")(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Step\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"ng-select\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(8, \"tr\")(9, \"td\")(10, \"div\", 5)(11, \"div\", 6)(12, \"label\", 3);\n          i0.ɵɵtext(13, \"Plan Trade\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"ng-select\", 7);\n          i0.ɵɵlistener(\"change\", function AdddPlanTradeComponent_Template_ng_select_change_14_listener($event) {\n            return ctx.selectTrade($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 8)(16, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function AdddPlanTradeComponent_Template_button_click_16_listener() {\n            return ctx.showTradeDetails();\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(17, \"tr\")(18, \"td\");\n          i0.ɵɵtemplate(19, AdddPlanTradeComponent_label_19_Template, 2, 0, \"label\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"td\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"tr\")(22, \"td\")(23, \"div\", 2)(24, \"label\", 3);\n          i0.ɵɵtext(25, \"Required Hours\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"input\", 11);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(27, AdddPlanTradeComponent_p_dialog_27_Template, 2, 6, \"p-dialog\", 12);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.planTradeFormPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.planStepList)(\"searchable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.tradeList)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.enableDetailsBtn);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isTradeExists);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.showDetails);\n        }\n      },\n      dependencies: [i6.NgIf, i7.ButtonDirective, i8.Dialog, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i9.NzTableCellDirective, i9.NzTrDirective, i10.NgSelectComponent, i11.NumbersOnlyDirective, i12.TwoDigitDecimalNumberDirective, i13.TradeDetailsComponent],\n      styles: [\"[_nghost-%COMP%]     .p-button{height:20px!important;width:20px}[_nghost-%COMP%]     #details .p-dialog .p-dialog-header{padding:0!important}[_nghost-%COMP%]     .p-datatable .p-datatable-tbody>tr>td{padding:.5rem}[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th{padding:.5rem}[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th .grid-header-column{display:flex;flex-direction:row}[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th .grid-header-label{width:70%;justify-content:flex-start;justify-content:space-between;padding-right:5px}[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th .grid-sort-icon{display:flex;justify-content:flex-end;align-items:center;width:30%}[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th .grid-label-paragraph{margin:0!important}.disabled-form[_ngcontent-%COMP%]{opacity:.8;pointer-events:none}\"]\n    });\n  }\n  return AdddPlanTradeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}