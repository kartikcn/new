{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport let PpmPlanService = /*#__PURE__*/(() => {\n  class PpmPlanService {\n    constructor(ppmPlanService) {\n      this.ppmPlanService = ppmPlanService;\n    }\n    getAllPlans() {\n      return this.ppmPlanService.getAll('plan', 'getAll');\n    }\n    getAllPlansPaginated(data) {\n      return this.ppmPlanService.search('plan', 'getAllPaginated', data);\n    }\n    getPlanById(id) {\n      return this.ppmPlanService.getSingleById('plan', 'getPlanById', id);\n    }\n    savePlan(data) {\n      return this.ppmPlanService.add('plan', 'save', data);\n    }\n    deletePlan(id) {\n      return this.ppmPlanService.getSingleById('plan', 'deletePlanById', id);\n    }\n    checkIsPlanNameExists(planName) {\n      return this.ppmPlanService.getSingleById('plan', 'checkExist', planName);\n    }\n    getAllPlanSteps(planId) {\n      return this.ppmPlanService.getAllById('planStep', 'getAllByPlanId', planId);\n    }\n    getPlanStepById(id) {\n      return this.ppmPlanService.getSingleById('planStep', 'getplanStepById', id);\n    }\n    savePlanStep(data) {\n      return this.ppmPlanService.add('planStep', 'save', data);\n    }\n    deletePlanStep(id) {\n      return this.ppmPlanService.getSingleById('planStep', 'deletePlanStepById', id);\n    }\n    checkIsStepCodeExists(planId, stepCode) {\n      return this.ppmPlanService.getAllByIds('planStep', 'checkExist', planId, stepCode);\n    }\n    static #_ = this.ɵfac = function PpmPlanService_Factory(t) {\n      return new (t || PpmPlanService)(i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PpmPlanService,\n      factory: PpmPlanService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PpmPlanService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}