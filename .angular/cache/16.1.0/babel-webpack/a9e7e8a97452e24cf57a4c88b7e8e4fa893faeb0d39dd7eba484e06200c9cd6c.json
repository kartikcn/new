{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { Enums } from 'src/app/model/enums.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/parts.service\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"ng-zorro-antd/table\";\nimport * as i7 from \"ng-zorro-antd/input\";\nimport * as i8 from \"primeng/selectbutton\";\nimport * as i9 from \"../../../../../directive/numbers-only.directive\";\nimport * as i10 from \"../../../../../directive/directive/trim-input.directive\";\nfunction AddPartsComponent_tr_13_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 17);\n    i0.ɵɵtext(1, \"Part Code is already exists\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPartsComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtemplate(2, AddPartsComponent_tr_13_label_2_Template, 2, 0, \"label\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.partsFormPanel.controls[\"partCode\"] == null ? null : ctx_r0.partsFormPanel.controls[\"partCode\"].errors) && !(ctx_r0.partsFormPanel.controls[\"partCode\"] == null ? null : ctx_r0.partsFormPanel.controls[\"partCode\"].errors.required));\n  }\n}\nexport class AddPartsComponent {\n  constructor(formBuilder, partsService, enumsrv) {\n    this.formBuilder = formBuilder;\n    this.partsService = partsService;\n    this.enumsrv = enumsrv;\n    this.subscriptions = [];\n    this.enumMeasurment = [];\n    this.enumConsumable = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumPartsData = [];\n    this.newRecord = true;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.partsFormPanel = this.formBuilder.group({\n      partId: [null],\n      partCode: ['', [Validators.required]],\n      description: [null],\n      modelNo: [null],\n      qutMinHand: [null],\n      qutOnHand: [null, [Validators.required]],\n      consumable: [null, [Validators.required]],\n      qutOnOrder: [null],\n      unitOfMeasurement: [null, [Validators.required]],\n      ratePerUnit: [null]\n    });\n    this.subscriptions.push(this.partsFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadEnums();\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const validationErros = [];\n    return validationErros;\n  }\n  get value() {\n    const parts = {\n      partCode: this.partsFormPanel.controls.partCode.value,\n      description: this.partsFormPanel.controls.description.value,\n      partId: this.partsFormPanel.controls.partId.value,\n      modelNo: this.partsFormPanel.controls.modelNo.value,\n      qutMinHand: this.partsFormPanel.controls.qutMinHand.value,\n      qutOnHand: this.partsFormPanel.controls.qutOnHand.value,\n      consumable: this.partsFormPanel.controls.consumable.value,\n      qutOnOrder: this.partsFormPanel.controls.qutOnOrder.value,\n      unitOfMeasurement: this.partsFormPanel.controls.unitOfMeasurement.value,\n      ratePerUnit: this.partsFormPanel.controls.ratePerUnit.value\n    };\n    return parts;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.partsFormPanel.patchValue({\n        partCode: value.partCode,\n        description: value.description,\n        partId: value.partId,\n        modelNo: value.modelNo,\n        qutMinHand: value.qutMinHand,\n        qutOnHand: value.qutOnHand,\n        consumable: value.consumable,\n        qutOnOrder: value.qutOnOrder,\n        unitOfMeasurement: value.unitOfMeasurement,\n        ratePerUnit: value.ratePerUnit\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.partsFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate(_) {\n    return this.partsFormPanel.valid ? null : {\n      partsFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      // this.enumPartsData = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase());\n      this.enumConsumable = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'consumable'.toLocaleUpperCase());\n      this.enumMeasurment = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'unit_of_measurement'.toLocaleUpperCase());\n      this.enumMeasurment.unshift(new Enums(null, \"\", \"\", 'Make a selection'));\n    }, error => {});\n  }\n  static #_ = this.ɵfac = function AddPartsComponent_Factory(t) {\n    return new (t || AddPartsComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.PartsService), i0.ɵɵdirectiveInject(i3.EnumService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddPartsComponent,\n    selectors: [[\"app-add-parts\"]],\n    inputs: {\n      isNew: \"isNew\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddPartsComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddPartsComponent),\n      multi: true\n    }])],\n    decls: 53,\n    vars: 6,\n    consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"partCode\", \"formControlName\", \"partCode\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"modelNo\", \"formControlName\", \"modelNo\", \"maxlength\", \"128\", \"appTrimInput\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"text\", \"name\", \"qutMinHand\", \"formControlName\", \"qutMinHand\", \"NumbersOnly\", \"\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"qutOnHand\", \"NumbersOnly\", \"\", \"formControlName\", \"qutOnHand\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"formControlName\", \"consumable\", \"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", 3, \"options\"], [\"type\", \"text\", \"name\", \"qutOnOrder\", \"NumbersOnly\", \"\", \"formControlName\", \"qutOnOrder\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"appendTo\", \"body\", \"name\", \"unitOfMeasurement\", \"formControlName\", \"unitOfMeasurement\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [\"type\", \"text\", \"name\", \"ratePerUnit\", \"NumbersOnly\", \"\", \"formControlName\", \"ratePerUnit\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"colspan\", \"2\"], [\"name\", \"description\", \"formControlName\", \"description\", \"rows\", \"2\", \"nz-input\", \"\", \"maxlength\", \"256\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [\"class\", \"form-field-lable\", \"style\", \"color:red; margin-left: 5px;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\", \"margin-left\", \"5px\"]],\n    template: function AddPartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\")(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Part Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"td\")(9, \"div\", 2)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Model Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, AddPartsComponent_tr_13_Template, 3, 1, \"tr\", 7);\n        i0.ɵɵelementStart(14, \"tr\")(15, \"td\")(16, \"div\", 2)(17, \"label\", 5);\n        i0.ɵɵtext(18, \"Minimum to Store\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"td\")(21, \"div\", 2)(22, \"label\", 3);\n        i0.ɵɵtext(23, \"Quantity Available\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"tr\")(26, \"td\")(27, \"div\", 2)(28, \"label\", 3);\n        i0.ɵɵtext(29, \"Consumable\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"p-selectButton\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"td\")(32, \"div\", 2)(33, \"label\", 5);\n        i0.ɵɵtext(34, \"Quantity Reorder\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"tr\")(37, \"td\")(38, \"div\", 2)(39, \"label\", 3);\n        i0.ɵɵtext(40, \"Unit of Measurement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"ng-select\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"td\")(43, \"div\", 2)(44, \"label\", 5);\n        i0.ɵɵtext(45, \"Rate Per Unit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"input\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(47, \"tr\")(48, \"td\", 14)(49, \"div\", 2)(50, \"label\", 5);\n        i0.ɵɵtext(51, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"textarea\", 15);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.partsFormPanel);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", (ctx.partsFormPanel.controls[\"partCode\"] == null ? null : ctx.partsFormPanel.controls[\"partCode\"].errors) && ((ctx.partsFormPanel.controls[\"partCode\"] == null ? null : ctx.partsFormPanel.controls[\"partCode\"].dirty) || (ctx.partsFormPanel.controls[\"partCode\"] == null ? null : ctx.partsFormPanel.controls[\"partCode\"].touched)));\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"options\", ctx.enumConsumable);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumMeasurment);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i5.NgSelectComponent, i6.NzTableCellDirective, i6.NzTrDirective, i7.NzInputDirective, i8.SelectButton, i9.NumbersOnlyDirective, i10.TrimInputDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALUE_ACCESSOR","NG_VALIDATORS","Validators","Enums","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddPartsComponent_tr_13_label_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","partsFormPanel","controls","errors","required","AddPartsComponent","constructor","formBuilder","partsService","enumsrv","subscriptions","enumMeasurment","enumConsumable","enumList","enumClonedList","enumPartsData","newRecord","onChange","onTouched","group","partId","partCode","description","modelNo","qutMinHand","qutOnHand","consumable","qutOnOrder","unitOfMeasurement","ratePerUnit","push","valueChanges","subscribe","value","ngOnInit","loadEnums","isValid","getValidationErrors","length","validationErros","parts","setTimeout","patchValue","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","forEach","s","unsubscribe","getEnums","res","map","x","Object","assign","filter","t","tableName","toLocaleUpperCase","fieldName","unshift","error","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","PartsService","i3","EnumService","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddPartsComponent_Template","rf","ctx","ɵɵelement","AddPartsComponent_tr_13_Template","dirty","touched"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\parts\\widgets\\add-parts\\add-parts.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\parts\\widgets\\add-parts\\add-parts.component.html"],"sourcesContent":["import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, UntypedFormGroup, UntypedFormBuilder, Validators, UntypedFormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { Parts } from '../../model/parts.model';\nimport { PartsService } from '../../services/parts.service';\nimport { Enums } from 'src/app/model/enums.model';\nimport { EnumService } from 'src/app/services/enum.service';\n\n@Component({\n  selector: 'app-add-parts',\n  templateUrl: './add-parts.component.html',\n  styleUrls: ['./add-parts.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddPartsComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddPartsComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddPartsComponent implements OnInit {\n  partsFormPanel!: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  enumMeasurment:any[]=[];\n  enumConsumable:any[]=[];\n  enumList: any[] = [];\n  enumClonedList: any[] = [];\n  enumPartsData: any[] = [];\n  newRecord: boolean = true;\n  @Input() isNew!: boolean;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private partsService: PartsService,\n    private enumsrv: EnumService,\n  ) {\n    this.partsFormPanel = this.formBuilder.group({\n      partId: [null],\n      partCode: ['', [Validators.required]],\n      description: [null],\n      modelNo:[null],\n      qutMinHand:[null],\n      qutOnHand:[null,[Validators.required]],\n      consumable:[null, [Validators.required]],\n      qutOnOrder:[null],\n      unitOfMeasurement:[null,[Validators.required]],\n      ratePerUnit:[null]\n    });\n\n    this.subscriptions.push(\n      this.partsFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n\n  }\n\n  ngOnInit(): void {\n    this.loadEnums();\n  }\n\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const validationErros: VaildationError[] = [];\n    return validationErros;\n  }\n\n  get value(): any {//Parts\n    const parts: any = {\n      partCode: this.partsFormPanel.controls.partCode.value,\n      description: this.partsFormPanel.controls.description.value,\n      partId: this.partsFormPanel.controls.partId.value,\n      modelNo: this.partsFormPanel.controls.modelNo.value,\n      qutMinHand: this.partsFormPanel.controls.qutMinHand.value,\n      qutOnHand: this.partsFormPanel.controls.qutOnHand.value,\n      consumable: this.partsFormPanel.controls.consumable.value,\n      qutOnOrder: this.partsFormPanel.controls.qutOnOrder.value,\n      unitOfMeasurement: this.partsFormPanel.controls.unitOfMeasurement.value,\n      ratePerUnit: this.partsFormPanel.controls.ratePerUnit.value\n    };\n    return parts;\n  }\n\n  set value(value: any) {//Parts\n    setTimeout(() => {\n      this.partsFormPanel.patchValue({\n        partCode: value.partCode,\n        description: value.description,\n        partId: value.partId,\n        modelNo: value.modelNo,\n        qutMinHand: value.qutMinHand,\n        qutOnHand: value.qutOnHand,\n        consumable: value.consumable,\n        qutOnOrder: value.qutOnOrder,\n        unitOfMeasurement: value.unitOfMeasurement,\n        ratePerUnit: value.ratePerUnit\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n\n  writeValue(value: any) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.partsFormPanel.reset();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  validate(_: UntypedFormControl) {\n    return this.partsFormPanel.valid ? null : { partsFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: any[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumPartsData = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase());\n        this.enumConsumable = this.enumClonedList.filter(t =>t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'consumable'.toLocaleUpperCase());\n        this.enumMeasurment = this.enumClonedList.filter(t =>t.tableName.toLocaleUpperCase() === 'parts'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'unit_of_measurement'.toLocaleUpperCase());\n        this.enumMeasurment.unshift(new Enums(null, \"\", \"\", 'Make a selection'));\n        },\n     error => {\n     }\n    );\n  }\n}","<form [formGroup]=\"partsFormPanel\">\n    <table width=\"100%\">\n        <tr>\n            <td>\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Part Code</label>\n                    <input type=\"text\" class=\"form-control\" name=\"partCode\" formControlName=\"partCode\" maxlength=\"64\" appTrimInput>\n                </div>\n            </td>\n            <td>\n                <div class=\"input-label-custom \" >\n                    <label class='form-field-lable'>Model  Number</label>\n                    <input type=\"text\" class=\"form-control\" name=\"modelNo\" formControlName=\"modelNo\" maxlength=\"128\" appTrimInput>\n                </div>\n            </td>\n        </tr>\n        <tr\n            *ngIf=\"(partsFormPanel.controls['partCode']?.errors && (partsFormPanel.controls['partCode']?.dirty || partsFormPanel.controls['partCode']?.touched))\">\n            <td>\n                <label\n                    *ngIf=\"partsFormPanel.controls['partCode']?.errors && !partsFormPanel.controls['partCode']?.errors.required\"\n                    class='form-field-lable' style=\"color:red; margin-left: 5px;\">Part Code is already exists</label>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"input-label-custom \" >\n                    <label class='form-field-lable'>Minimum to Store</label>\n                    <input type=\"text\" class=\"form-control\" name=\"qutMinHand\" formControlName=\"qutMinHand\" NumbersOnly appTrimInput>\n                </div>\n            </td>\n            <td>\n                <div class=\"input-label-custom \" >\n                    <label class='form-field-lable control-label'>Quantity Available</label>\n                    <input type=\"text\" class=\"form-control\" name=\"qutOnHand\" NumbersOnly formControlName=\"qutOnHand\" appTrimInput>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"input-label-custom \" >\n                    <label class='form-field-lable control-label'>Consumable</label>\n                        <p-selectButton [options]=\"enumConsumable\" formControlName=\"consumable\" optionLabel=\"enumValue\"\n                        optionValue=\"enumKey\"></p-selectButton>\n                </div>\n            </td>\n            <td>\n                <div class=\"input-label-custom \" >\n                    <label class='form-field-lable'>Quantity Reorder</label>\n                    <input type=\"text\" class=\"form-control\" name=\"qutOnOrder\" NumbersOnly formControlName=\"qutOnOrder\" appTrimInput>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"input-label-custom \" >\n                    <label class='form-field-lable control-label'>Unit of Measurement</label>\n              <ng-select appendTo=\"body\" [clearable]=\"false\" name=\"unitOfMeasurement\"\n                        formControlName=\"unitOfMeasurement\" [searchable]=\"true\" bindLabel=\"enumValue\" bindValue=\"enumKey\" \n                        placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"enumMeasurment\">\n                    </ng-select>\n                </div>\n            </td>\n            <td>\n                <div class=\"input-label-custom \" >\n                    <label class='form-field-lable'>Rate Per Unit</label>\n                    <input type=\"text\" class=\"form-control\" name=\"ratePerUnit\" NumbersOnly formControlName=\"ratePerUnit\" appTrimInput>\n                </div>\n            </td>\n        </tr>\n        \n        <tr>\n            <td colspan=\"2\">\n                <div class=\"input-label-custom\">\n                    <label class='form-field-lable'>Description</label>\n                    <textarea class=\"form-control note-border\" name=\"description\" formControlName=\"description\" rows=\"2\" nz-input\n                        maxlength=\"256\" appTrimInput></textarea>\n                </div>\n            </td>\n        </tr>\n    </table>\n</form>"],"mappings":"AAAA,SAAoBA,UAAU,QAAuB,eAAe;AACpE,SAASC,iBAAiB,EAAEC,aAAa,EAAwCC,UAAU,QAA4B,gBAAgB;AAKvI,SAASC,KAAK,QAAQ,2BAA2B;;;;;;;;;;;;;;ICajCC,EAAA,CAAAC,cAAA,gBAEkE;IAAAD,EAAA,CAAAE,MAAA,kCAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAL7GH,EAAA,CAAAC,cAAA,SAC0J;IAElJD,EAAA,CAAAI,UAAA,IAAAC,wCAAA,oBAEqG;IACzGL,EAAA,CAAAG,YAAA,EAAK;;;;IAFIH,EAAA,CAAAM,SAAA,GAA0G;IAA1GN,EAAA,CAAAO,UAAA,UAAAC,MAAA,CAAAC,cAAA,CAAAC,QAAA,8BAAAF,MAAA,CAAAC,cAAA,CAAAC,QAAA,aAAAC,MAAA,OAAAH,MAAA,CAAAC,cAAA,CAAAC,QAAA,8BAAAF,MAAA,CAAAC,cAAA,CAAAC,QAAA,aAAAC,MAAA,CAAAC,QAAA,EAA0G;;;ADM/H,OAAM,MAAOC,iBAAiB;EAU5BC,YACUC,WAA+B,EAC/BC,YAA0B,EAC1BC,OAAoB;IAFpB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,OAAO,GAAPA,OAAO;IAXjB,KAAAC,aAAa,GAAmB,EAAE;IAClC,KAAAC,cAAc,GAAO,EAAE;IACvB,KAAAC,cAAc,GAAO,EAAE;IACvB,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,cAAc,GAAU,EAAE;IAC1B,KAAAC,aAAa,GAAU,EAAE;IACzB,KAAAC,SAAS,GAAY,IAAI;IAiCzB,KAAAC,QAAQ,GAAQ,MAAK,CAAG,CAAC;IACzB,KAAAC,SAAS,GAAQ,MAAK,CAAG,CAAC;IA3BxB,IAAI,CAACjB,cAAc,GAAG,IAAI,CAACM,WAAW,CAACY,KAAK,CAAC;MAC3CC,MAAM,EAAE,CAAC,IAAI,CAAC;MACdC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC/B,UAAU,CAACc,QAAQ,CAAC,CAAC;MACrCkB,WAAW,EAAE,CAAC,IAAI,CAAC;MACnBC,OAAO,EAAC,CAAC,IAAI,CAAC;MACdC,UAAU,EAAC,CAAC,IAAI,CAAC;MACjBC,SAAS,EAAC,CAAC,IAAI,EAAC,CAACnC,UAAU,CAACc,QAAQ,CAAC,CAAC;MACtCsB,UAAU,EAAC,CAAC,IAAI,EAAE,CAACpC,UAAU,CAACc,QAAQ,CAAC,CAAC;MACxCuB,UAAU,EAAC,CAAC,IAAI,CAAC;MACjBC,iBAAiB,EAAC,CAAC,IAAI,EAAC,CAACtC,UAAU,CAACc,QAAQ,CAAC,CAAC;MAC9CyB,WAAW,EAAC,CAAC,IAAI;KAClB,CAAC;IAEF,IAAI,CAACnB,aAAa,CAACoB,IAAI,CACrB,IAAI,CAAC7B,cAAc,CAAC8B,YAAY,CAACC,SAAS,CAACC,KAAK,IAAG;MACjD,IAAI,CAAChB,QAAQ,CAACgB,KAAK,CAAC;MACpB,IAAI,CAACf,SAAS,EAAE;IAClB,CAAC,CAAC,CACH;EAEH;EAEAgB,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAKOC,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACC,mBAAmB,EAAE,CAACC,MAAM,KAAK,CAAC;EAChD;EAEOD,mBAAmBA,CAAA;IACxB,MAAME,eAAe,GAAsB,EAAE;IAC7C,OAAOA,eAAe;EACxB;EAEA,IAAIN,KAAKA,CAAA;IACP,MAAMO,KAAK,GAAQ;MACjBnB,QAAQ,EAAE,IAAI,CAACpB,cAAc,CAACC,QAAQ,CAACmB,QAAQ,CAACY,KAAK;MACrDX,WAAW,EAAE,IAAI,CAACrB,cAAc,CAACC,QAAQ,CAACoB,WAAW,CAACW,KAAK;MAC3Db,MAAM,EAAE,IAAI,CAACnB,cAAc,CAACC,QAAQ,CAACkB,MAAM,CAACa,KAAK;MACjDV,OAAO,EAAE,IAAI,CAACtB,cAAc,CAACC,QAAQ,CAACqB,OAAO,CAACU,KAAK;MACnDT,UAAU,EAAE,IAAI,CAACvB,cAAc,CAACC,QAAQ,CAACsB,UAAU,CAACS,KAAK;MACzDR,SAAS,EAAE,IAAI,CAACxB,cAAc,CAACC,QAAQ,CAACuB,SAAS,CAACQ,KAAK;MACvDP,UAAU,EAAE,IAAI,CAACzB,cAAc,CAACC,QAAQ,CAACwB,UAAU,CAACO,KAAK;MACzDN,UAAU,EAAE,IAAI,CAAC1B,cAAc,CAACC,QAAQ,CAACyB,UAAU,CAACM,KAAK;MACzDL,iBAAiB,EAAE,IAAI,CAAC3B,cAAc,CAACC,QAAQ,CAAC0B,iBAAiB,CAACK,KAAK;MACvEJ,WAAW,EAAE,IAAI,CAAC5B,cAAc,CAACC,QAAQ,CAAC2B,WAAW,CAACI;KACvD;IACD,OAAOO,KAAK;EACd;EAEA,IAAIP,KAAKA,CAACA,KAAU;IAClBQ,UAAU,CAAC,MAAK;MACd,IAAI,CAACxC,cAAc,CAACyC,UAAU,CAAC;QAC7BrB,QAAQ,EAAEY,KAAK,CAACZ,QAAQ;QACxBC,WAAW,EAAEW,KAAK,CAACX,WAAW;QAC9BF,MAAM,EAAEa,KAAK,CAACb,MAAM;QACpBG,OAAO,EAAEU,KAAK,CAACV,OAAO;QACtBC,UAAU,EAAES,KAAK,CAACT,UAAU;QAC5BC,SAAS,EAAEQ,KAAK,CAACR,SAAS;QAC1BC,UAAU,EAAEO,KAAK,CAACP,UAAU;QAC5BC,UAAU,EAAEM,KAAK,CAACN,UAAU;QAC5BC,iBAAiB,EAAEK,KAAK,CAACL,iBAAiB;QAC1CC,WAAW,EAAEI,KAAK,CAACJ;OACpB,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,CAACZ,QAAQ,CAACgB,KAAK,CAAC;IACpB,IAAI,CAACf,SAAS,EAAE;EAClB;EAGAyB,UAAUA,CAACV,KAAU;IACnB,IAAIA,KAAK,EAAE;MACT,IAAI,CAACA,KAAK,GAAGA,KAAK;;IAEpB,IAAIA,KAAK,KAAK,IAAI,EAAE;MAClB,IAAI,CAAChC,cAAc,CAAC2C,KAAK,EAAE;;EAE/B;EAEAC,gBAAgBA,CAACC,EAAO;IACtB,IAAI,CAAC7B,QAAQ,GAAG6B,EAAE;EACpB;EACAC,iBAAiBA,CAACD,EAAO;IACvB,IAAI,CAAC5B,SAAS,GAAG4B,EAAE;EACrB;EAEAE,QAAQA,CAACC,CAAqB;IAC5B,OAAO,IAAI,CAAChD,cAAc,CAACiD,KAAK,GAAG,IAAI,GAAG;MAAEjD,cAAc,EAAE;QAAEiD,KAAK,EAAE;MAAK;IAAE,CAAE;EAChF;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACzC,aAAa,CAAC0C,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW,EAAE,CAAC;EAClD;EACAnB,SAASA,CAAA;IACP,IAAI,CAACtB,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACJ,OAAO,CAAC8C,QAAQ,EAAE,CAACvB,SAAS,CAC9BwB,GAAU,IAAI;MACb,IAAI,CAAC3C,QAAQ,GAAG2C,GAAG;MACnB,IAAI,CAAC1C,cAAc,GAAG,IAAI,CAACD,QAAQ,CAAC4C,GAAG,CAACC,CAAC,IAAIC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEF,CAAC,CAAC,CAAC;MAClE;MACA,IAAI,CAAC9C,cAAc,GAAG,IAAI,CAACE,cAAc,CAAC+C,MAAM,CAACC,CAAC,IAAGA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,OAAO,CAACA,iBAAiB,EAAE,IAAIF,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,YAAY,CAACA,iBAAiB,EAAE,CAAC;MAC7L,IAAI,CAACrD,cAAc,GAAG,IAAI,CAACG,cAAc,CAAC+C,MAAM,CAACC,CAAC,IAAGA,CAAC,CAACC,SAAS,CAACC,iBAAiB,EAAE,KAAK,OAAO,CAACA,iBAAiB,EAAE,IAAIF,CAAC,CAACG,SAAS,CAACD,iBAAiB,EAAE,KAAK,qBAAqB,CAACA,iBAAiB,EAAE,CAAC;MACtM,IAAI,CAACrD,cAAc,CAACuD,OAAO,CAAC,IAAI3E,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAC;IACxE,CAAC,EACJ4E,KAAK,IAAG,CACR,CAAC,CACD;EACH;EAAC,QAAAlB,CAAA,G;qBA9HU5C,iBAAiB,EAAAb,EAAA,CAAA4E,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAA9E,EAAA,CAAA4E,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAhF,EAAA,CAAA4E,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBtE,iBAAiB;IAAAuE,SAAA;IAAAC,MAAA;MAAAC,KAAA;IAAA;IAAAC,QAAA,GAAAvF,EAAA,CAAAwF,kBAAA,CAbjB,CACT;MACEC,OAAO,EAAE7F,iBAAiB;MAC1B8F,WAAW,EAAE/F,UAAU,CAAC,MAAMkB,iBAAiB,CAAC;MAChD8E,KAAK,EAAE;KACR,EACD;MACEF,OAAO,EAAE5F,aAAa;MACtB6F,WAAW,EAAE/F,UAAU,CAAC,MAAMkB,iBAAiB,CAAC;MAChD8E,KAAK,EAAE;KACR,CACF;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCxBHjG,EAAA,CAAAC,cAAA,cAAmC;QAK+BD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC/DH,EAAA,CAAAmG,SAAA,eAA+G;QACnHnG,EAAA,CAAAG,YAAA,EAAM;QAEVH,EAAA,CAAAC,cAAA,SAAI;QAEoCD,EAAA,CAAAE,MAAA,oBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACrDH,EAAA,CAAAmG,SAAA,gBAA8G;QAClHnG,EAAA,CAAAG,YAAA,EAAM;QAGdH,EAAA,CAAAI,UAAA,KAAAgG,gCAAA,gBAOK;QACLpG,EAAA,CAAAC,cAAA,UAAI;QAGwCD,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACxDH,EAAA,CAAAmG,SAAA,gBAAgH;QACpHnG,EAAA,CAAAG,YAAA,EAAM;QAEVH,EAAA,CAAAC,cAAA,UAAI;QAEkDD,EAAA,CAAAE,MAAA,0BAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACxEH,EAAA,CAAAmG,SAAA,gBAA8G;QAClHnG,EAAA,CAAAG,YAAA,EAAM;QAGdH,EAAA,CAAAC,cAAA,UAAI;QAGsDD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5DH,EAAA,CAAAmG,SAAA,0BACuC;QAC/CnG,EAAA,CAAAG,YAAA,EAAM;QAEVH,EAAA,CAAAC,cAAA,UAAI;QAEoCD,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACxDH,EAAA,CAAAmG,SAAA,iBAAgH;QACpHnG,EAAA,CAAAG,YAAA,EAAM;QAGdH,EAAA,CAAAC,cAAA,UAAI;QAGsDD,EAAA,CAAAE,MAAA,2BAAmB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC/EH,EAAA,CAAAmG,SAAA,qBAGkB;QAChBnG,EAAA,CAAAG,YAAA,EAAM;QAEVH,EAAA,CAAAC,cAAA,UAAI;QAEoCD,EAAA,CAAAE,MAAA,qBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACrDH,EAAA,CAAAmG,SAAA,iBAAkH;QACtHnG,EAAA,CAAAG,YAAA,EAAM;QAIdH,EAAA,CAAAC,cAAA,UAAI;QAGwCD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACnDH,EAAA,CAAAmG,SAAA,oBAC4C;QAChDnG,EAAA,CAAAG,YAAA,EAAM;;;QA7EhBH,EAAA,CAAAO,UAAA,cAAA2F,GAAA,CAAAzF,cAAA,CAA4B;QAiBrBT,EAAA,CAAAM,SAAA,IAAmJ;QAAnJN,EAAA,CAAAO,UAAA,UAAA2F,GAAA,CAAAzF,cAAA,CAAAC,QAAA,8BAAAwF,GAAA,CAAAzF,cAAA,CAAAC,QAAA,aAAAC,MAAA,OAAAuF,GAAA,CAAAzF,cAAA,CAAAC,QAAA,8BAAAwF,GAAA,CAAAzF,cAAA,CAAAC,QAAA,aAAA2F,KAAA,MAAAH,GAAA,CAAAzF,cAAA,CAAAC,QAAA,8BAAAwF,GAAA,CAAAzF,cAAA,CAAAC,QAAA,aAAA4F,OAAA,GAAmJ;QAyBxHtG,EAAA,CAAAM,SAAA,IAA0B;QAA1BN,EAAA,CAAAO,UAAA,YAAA2F,GAAA,CAAA9E,cAAA,CAA0B;QAezBpB,EAAA,CAAAM,SAAA,IAAmB;QAAnBN,EAAA,CAAAO,UAAA,oBAAmB,8BAAA2F,GAAA,CAAA/E,cAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}