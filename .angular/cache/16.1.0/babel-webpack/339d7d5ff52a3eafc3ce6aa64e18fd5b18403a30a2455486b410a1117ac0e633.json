{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nexport class EmployeeService {\n  getALLEmp() {\n    throw new Error('Method not implemented.');\n  }\n  constructor(empService, empDetailService, authSrv) {\n    this.empService = empService;\n    this.empDetailService = empDetailService;\n    this.authSrv = authSrv;\n  }\n  getAllEmployeeList() {\n    return this.empService.getAll('em', 'getAllEm');\n  }\n  getAllEmployeeListPaginated(data) {\n    return this.empService.search('em', 'getAllEmPaginated', data);\n  }\n  getEmById(id) {\n    return this.empService.getSingleById('em', 'getEmById', id);\n  }\n  saveEmployee(data) {\n    return this.empService.add('em', 'saveEmp', data);\n  }\n  getAllUnAssignEmployees(emId) {\n    return this.empService.getAllById('em', 'getAllUnAssign', emId);\n  }\n  checkEmployeeExists(em_id) {\n    return this.empService.getSingleById('em', 'check', em_id);\n  }\n  getAllEmpByComp() {\n    return this.empService.getAll('em', 'getAllEmp');\n  }\n  getReportsByFilter(data) {\n    return this.empService.search('em', 'resportsByGroup', data);\n  }\n  getReportsByFilterPaginated(data) {\n    return this.empService.search('em', 'resportsByGroupPaginated', data);\n  }\n  getEmployeeByFilter(data) {\n    return this.empService.search('em', 'reportfilter', data);\n  }\n  getspaceutilization(data) {\n    return this.empService.search('em', 'spaceutilizationbygroup', data);\n  }\n  getALLmployeeByScroll(data) {\n    return this.empService.search(\"em\", \"getAllEmByScroll\", data);\n  }\n  static #_ = this.ɵfac = function EmployeeService_Factory(t) {\n    return new (t || EmployeeService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeService,\n    factory: EmployeeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EmployeeService","getALLEmp","Error","constructor","empService","empDetailService","authSrv","getAllEmployeeList","getAll","getAllEmployeeListPaginated","data","search","getEmById","id","getSingleById","saveEmployee","add","getAllUnAssignEmployees","emId","getAllById","checkEmployeeExists","em_id","getAllEmpByComp","getReportsByFilter","getReportsByFilterPaginated","getEmployeeByFilter","getspaceutilization","getALLmployeeByScroll","_","i0","ɵɵinject","i1","DataService","i2","AuthService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\employee\\services\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\nimport { Observable } from 'rxjs';\nimport { EmployeeOutput } from '../../user/model/employeOutput.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PaginationObj } from 'src/app/model/pagination-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  getALLEmp() {\n    throw new Error('Method not implemented.');\n  }\n\n  constructor(\n    private empService: DataService<any>,\n    private empDetailService: DataService<EmployeeOutput>,\n    private authSrv:AuthService\n    \n  ) { }\n\n  \n  public getAllEmployeeList(){\n    return this.empService.getAll('em', 'getAllEm');\n  }\n\n  public getAllEmployeeListPaginated(data:any){\n    return this.empService.search('em', 'getAllEmPaginated',data);\n  }\n\n  public getEmById(id: any) {\n    return this.empService.getSingleById('em', 'getEmById', id);\n  }\n\n  public saveEmployee(data: EmployeeOutput) {\n    return this.empService.add('em', 'saveEmp', data);\n  }\n  public getAllUnAssignEmployees(emId:any){\n    return this.empService.getAllById('em','getAllUnAssign',emId);\n  }\n  public checkEmployeeExists(em_id:any){\n    return this.empService.getSingleById('em', 'check', em_id);\n  }\n\n  public getAllEmpByComp(){\n    return this.empService.getAll('em', 'getAllEmp');\n  }\n\n  public getReportsByFilter(data:any) {\n    return this.empService.search('em', 'resportsByGroup', data);\n  }\n\n  public getReportsByFilterPaginated(data:any) {\n    return this.empService.search('em', 'resportsByGroupPaginated', data);\n  }\n\n  public getEmployeeByFilter(data: any) {\n    return this.empService.search('em', 'reportfilter', data);\n  }\n\n\n  public getspaceutilization(data:any){\n    return this.empService.search('em','spaceutilizationbygroup',data);\n  }\n\n  public getALLmployeeByScroll(data:any) {\n    return this.empService.search(\"em\", \"getAllEmByScroll\",data);\n  }\n\n}\n"],"mappings":";;;AAUA,OAAM,MAAOA,eAAe;EAC1BC,SAASA,CAAA;IACP,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,YACUC,UAA4B,EAC5BC,gBAA6C,EAC7CC,OAAmB;IAFnB,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,OAAO,GAAPA,OAAO;EAEb;EAGGC,kBAAkBA,CAAA;IACvB,OAAO,IAAI,CAACH,UAAU,CAACI,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC;EACjD;EAEOC,2BAA2BA,CAACC,IAAQ;IACzC,OAAO,IAAI,CAACN,UAAU,CAACO,MAAM,CAAC,IAAI,EAAE,mBAAmB,EAACD,IAAI,CAAC;EAC/D;EAEOE,SAASA,CAACC,EAAO;IACtB,OAAO,IAAI,CAACT,UAAU,CAACU,aAAa,CAAC,IAAI,EAAE,WAAW,EAAED,EAAE,CAAC;EAC7D;EAEOE,YAAYA,CAACL,IAAoB;IACtC,OAAO,IAAI,CAACN,UAAU,CAACY,GAAG,CAAC,IAAI,EAAE,SAAS,EAAEN,IAAI,CAAC;EACnD;EACOO,uBAAuBA,CAACC,IAAQ;IACrC,OAAO,IAAI,CAACd,UAAU,CAACe,UAAU,CAAC,IAAI,EAAC,gBAAgB,EAACD,IAAI,CAAC;EAC/D;EACOE,mBAAmBA,CAACC,KAAS;IAClC,OAAO,IAAI,CAACjB,UAAU,CAACU,aAAa,CAAC,IAAI,EAAE,OAAO,EAAEO,KAAK,CAAC;EAC5D;EAEOC,eAAeA,CAAA;IACpB,OAAO,IAAI,CAAClB,UAAU,CAACI,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC;EAClD;EAEOe,kBAAkBA,CAACb,IAAQ;IAChC,OAAO,IAAI,CAACN,UAAU,CAACO,MAAM,CAAC,IAAI,EAAE,iBAAiB,EAAED,IAAI,CAAC;EAC9D;EAEOc,2BAA2BA,CAACd,IAAQ;IACzC,OAAO,IAAI,CAACN,UAAU,CAACO,MAAM,CAAC,IAAI,EAAE,0BAA0B,EAAED,IAAI,CAAC;EACvE;EAEOe,mBAAmBA,CAACf,IAAS;IAClC,OAAO,IAAI,CAACN,UAAU,CAACO,MAAM,CAAC,IAAI,EAAE,cAAc,EAAED,IAAI,CAAC;EAC3D;EAGOgB,mBAAmBA,CAAChB,IAAQ;IACjC,OAAO,IAAI,CAACN,UAAU,CAACO,MAAM,CAAC,IAAI,EAAC,yBAAyB,EAACD,IAAI,CAAC;EACpE;EAEOiB,qBAAqBA,CAACjB,IAAQ;IACnC,OAAO,IAAI,CAACN,UAAU,CAACO,MAAM,CAAC,IAAI,EAAE,kBAAkB,EAACD,IAAI,CAAC;EAC9D;EAAC,QAAAkB,CAAA,G;qBA1DU5B,eAAe,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfnC,eAAe;IAAAoC,OAAA,EAAfpC,eAAe,CAAAqC,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}