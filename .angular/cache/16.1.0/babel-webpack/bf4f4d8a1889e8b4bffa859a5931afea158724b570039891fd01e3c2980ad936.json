{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { LinkMultipleLocationsComponent } from '../../link-multiple-locations/link-multiple-locations.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport class LinkMultipleLocationDialogueProvider {\n  constructor(dialog) {\n    this.dialog = dialog;\n    this.isDialogOpen = false;\n    this.onDialogueClosed = new Subject();\n  }\n  openDialog(matDialogConfig) {\n    if (this.isDialogOpen) {\n      return false;\n    }\n    this.isDialogOpen = true;\n    const dialogRef = this.dialog.open(LinkMultipleLocationsComponent, matDialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      this.onDialogueClosed.next(result);\n      this.isDialogOpen = false;\n    });\n  }\n  static #_ = this.ɵfac = function LinkMultipleLocationDialogueProvider_Factory(t) {\n    return new (t || LinkMultipleLocationDialogueProvider)(i0.ɵɵinject(i1.MatDialog));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LinkMultipleLocationDialogueProvider,\n    factory: LinkMultipleLocationDialogueProvider.ɵfac,\n    providedIn: 'root' // just before your class\n  });\n}","map":{"version":3,"names":["Subject","LinkMultipleLocationsComponent","LinkMultipleLocationDialogueProvider","constructor","dialog","isDialogOpen","onDialogueClosed","openDialog","matDialogConfig","dialogRef","open","afterClosed","subscribe","result","next","_","i0","ɵɵinject","i1","MatDialog","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/link-plan-to-location/widgets/location-plan-list/providers/link-multiple-location-providers.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { LinkMultipleLocationsComponent } from '../../link-multiple-locations/link-multiple-locations.component';\n\n\n@Injectable({\n        providedIn: 'root' // just before your class\n})\nexport class LinkMultipleLocationDialogueProvider {\n        public isDialogOpen: Boolean = false;\n\n        onDialogueClosed: Subject<any> = new Subject<any>();\n\n        constructor(public dialog: MatDialog) { }\n\n        openDialog(matDialogConfig: MatDialogConfig): any {\n                if (this.isDialogOpen) {\n                        return false;\n                }\n                this.isDialogOpen = true;\n\n                const dialogRef = this.dialog.open(LinkMultipleLocationsComponent, matDialogConfig);\n\n                dialogRef.afterClosed().subscribe(result => {\n                        this.onDialogueClosed.next(result);\n\n                        this.isDialogOpen = false;\n                });\n        }\n\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;AAE9B,SAASC,8BAA8B,QAAQ,iEAAiE;;;AAMhH,OAAM,MAAOC,oCAAoC;EAKzCC,YAAmBC,MAAiB;IAAjB,KAAAA,MAAM,GAANA,MAAM;IAJlB,KAAAC,YAAY,GAAY,KAAK;IAEpC,KAAAC,gBAAgB,GAAiB,IAAIN,OAAO,EAAO;EAEX;EAExCO,UAAUA,CAACC,eAAgC;IACnC,IAAI,IAAI,CAACH,YAAY,EAAE;MACf,OAAO,KAAK;;IAEpB,IAAI,CAACA,YAAY,GAAG,IAAI;IAExB,MAAMI,SAAS,GAAG,IAAI,CAACL,MAAM,CAACM,IAAI,CAACT,8BAA8B,EAAEO,eAAe,CAAC;IAEnFC,SAAS,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACnC,IAAI,CAACP,gBAAgB,CAACQ,IAAI,CAACD,MAAM,CAAC;MAElC,IAAI,CAACR,YAAY,GAAG,KAAK;IACjC,CAAC,CAAC;EACV;EAAC,QAAAU,CAAA,G;qBApBIb,oCAAoC,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApClB,oCAAoC;IAAAmB,OAAA,EAApCnB,oCAAoC,CAAAoB,IAAA;IAAAC,UAAA,EAF7B,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}