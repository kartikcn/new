{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"../../services/plan-schedule-services\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/accordion\";\nimport * as i7 from \"primeng/calendar\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/dialog\";\nimport * as i10 from \"primeng/multiselect\";\nimport * as i11 from \"primeng/toast\";\nimport * as i12 from \"primeng/confirmdialog\";\nimport * as i13 from \"primeng/checkbox\";\nimport * as i14 from \"@ng-select/ng-select\";\nimport * as i15 from \"@angular/material/dialog\";\nimport * as i16 from \"ng-zorro-antd/table\";\nimport * as i17 from \"../../../../directive/numbers-only.directive\";\nfunction PpmScheduleTypeComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 56);\n    i0.ɵɵtext(2, \"Start date should be less than end date\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PpmScheduleTypeComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 56);\n    i0.ɵɵtext(2, \"Value Can not be less than one\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a0) {\n  return [a0];\n};\nfunction PpmScheduleTypeComponent_ul_57_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 57)(1, \"div\", 58)(2, \"p-checkbox\", 59);\n    i0.ɵɵlistener(\"onChange\", function PpmScheduleTypeComponent_ul_57_Template_p_checkbox_onChange_2_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.checked());\n    })(\"ngModelChange\", function PpmScheduleTypeComponent_ul_57_Template_p_checkbox_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const week_r13 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(week_r13.isSelected = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 60);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const week_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", i0.ɵɵpureFunction1(6, _c0, week_r13.dayName))(\"value\", week_r13.dayName)(\"inputId\", week_r13.dayName)(\"ngModel\", week_r13.isSelected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", week_r13.dayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(week_r13.dayName);\n  }\n}\nfunction PpmScheduleTypeComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 56);\n    i0.ɵɵtext(2, \"Value Can not be less than one\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PpmScheduleTypeComponent_div_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 56);\n    i0.ɵɵtext(2, \"Value Can not be less than one\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PpmScheduleTypeComponent_div_104_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 56);\n    i0.ɵɵtext(2, \"Provide the required information\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_113_div_32_p_accordionTab_5_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 71);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const date_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(2, 2, date_r22, \"dd MMM yyyy\"), \" - \", i0.ɵɵpipeBind2(3, 5, date_r22, \"EEEE\"), \" \");\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_113_div_32_p_accordionTab_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-accordionTab\", 68);\n    i0.ɵɵpipe(1, \"date\");\n    i0.ɵɵelementStart(2, \"ul\", 69);\n    i0.ɵɵtemplate(3, PpmScheduleTypeComponent_ng_template_113_div_32_p_accordionTab_5_li_3_Template, 4, 8, \"li\", 70);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const obj_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵpropertyInterpolate2(\"header\", \"\", i0.ɵɵpipeBind2(1, 3, obj_r20.month, \"MMMM yyyy\"), \" (\", obj_r20.count, \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r19.monthDates);\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_113_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"span\", 62);\n    i0.ɵɵtext(3, \"Schedule Dates for Each Month:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p-accordion\", 66);\n    i0.ɵɵlistener(\"onOpen\", function PpmScheduleTypeComponent_ng_template_113_div_32_Template_p_accordion_onOpen_4_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onTabOpen($event));\n    })(\"onClose\", function PpmScheduleTypeComponent_ng_template_113_div_32_Template_p_accordion_onClose_4_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.onTabClose($event));\n    });\n    i0.ɵɵtemplate(5, PpmScheduleTypeComponent_ng_template_113_div_32_p_accordionTab_5_Template, 4, 6, \"p-accordionTab\", 67);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.uniqueMonthsData);\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_113_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 72);\n    i0.ɵɵtext(1, \" No schedule dates found within the selected range. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_113_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 61)(2, \"table\")(3, \"tr\")(4, \"td\")(5, \"p\")(6, \"span\", 62);\n    i0.ɵɵtext(7, \"Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"p\", 63)(11, \"span\", 62);\n    i0.ɵɵtext(12, \"Start Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"tr\")(16, \"td\")(17, \"p\")(18, \"span\", 62);\n    i0.ɵɵtext(19, \"Total Requests: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"td\")(22, \"p\", 63)(23, \"span\", 62);\n    i0.ɵɵtext(24, \"End Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"date\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(27, \"div\", 64)(28, \"p\")(29, \"span\", 62);\n    i0.ɵɵtext(30, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(32, PpmScheduleTypeComponent_ng_template_113_div_32_Template, 6, 1, \"div\", 18);\n    i0.ɵɵtemplate(33, PpmScheduleTypeComponent_ng_template_113_div_33_Template, 2, 0, \"div\", 65);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.selectedCard, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(14, 7, ctx_r7.scheduleDetailsForm.controls.dateStart.value, \"dd MMM yyyy\"), \"\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.totalOccurence, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(26, 10, ctx_r7.scheduleDetailsForm.controls.dateEnd.value, \"dd MMM yyyy\"), \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.scheduleDetailsMsg, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.scheduleDates.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.scheduleDates.length === 0);\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_114_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 73);\n    i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_ng_template_114_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.displaySchedulePreview = false);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_116_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 74)(1, \"h3\");\n    i0.ɵɵtext(2, \"Priority Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"hr\");\n    i0.ɵɵelementStart(4, \"p\")(5, \"strong\");\n    i0.ɵɵtext(6, \"Priorities are defined on a scale from 0 to 5, with 0 being the highest priority.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \" The priority field is utilized to manage plan suppression. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10, \"Consider a cleaning process plan linked to the floor, and we have created two schedules for the month of January 2023:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ul\")(12, \"li\");\n    i0.ɵɵtext(13, \"First Schedule: Daily cleaning schedule\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"li\");\n    i0.ɵɵtext(15, \"Second Schedule: Weekly deep cleaning schedule (every Sunday)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"h4\");\n    i0.ɵɵtext(17, \"Case 1:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"p\");\n    i0.ɵɵtext(19, \"Assigning both schedules a priority of 0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"p\");\n    i0.ɵɵtext(21, \"The system will generate requests for both schedules as follows:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"ul\")(23, \"li\");\n    i0.ɵɵtext(24, \"First Schedule - Daily cleaning schedule: Every day for the month of January 2023.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"li\");\n    i0.ɵɵtext(26, \"Second Schedule - Weekly deep cleaning schedule: Every Sunday for the month of January 2023.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"h4\");\n    i0.ɵɵtext(28, \"Case 2:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"p\");\n    i0.ɵɵtext(30, \"Setting priority 1 for the first schedule and 0 for the second schedule\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"p\");\n    i0.ɵɵtext(32, \"The system will create requests as follows:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"ul\")(34, \"li\");\n    i0.ɵɵtext(35, \"First Schedule - Daily cleaning schedule: Every day for the month of January 2023, except Sundays. Since the second schedule has a higher priority (0), it will suppress the first schedule on Sundays, preventing requests for that day.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"li\");\n    i0.ɵɵtext(37, \"Second Schedule - Weekly deep cleaning schedule: Every Sunday for the month of January 2023.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_117_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 73);\n    i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_ng_template_117_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.displayPriorityDetails = false);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_119_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"span\", 75);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r11.scheduleExistsMsg);\n  }\n}\nfunction PpmScheduleTypeComponent_ng_template_120_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 73);\n    i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_ng_template_120_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.displayScheduleExist = false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 76);\n    i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_ng_template_120_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.updateScheduleDates());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function () {\n  return {\n    \"width\": \"150px\"\n  };\n};\nconst _c2 = function () {\n  return {\n    \"width\": \"200px\"\n  };\n};\nconst _c3 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nconst _c4 = function () {\n  return {\n    width: \"30vw\"\n  };\n};\nconst _c5 = function () {\n  return {\n    width: \"40vw\"\n  };\n};\nconst _c6 = function () {\n  return {\n    width: \"20vw\"\n  };\n};\nexport class PpmScheduleTypeComponent {\n  constructor(formBuilder, confirmationService, enumsrv, planScheduleService, datePipe, messageService) {\n    this.formBuilder = formBuilder;\n    this.confirmationService = confirmationService;\n    this.enumsrv = enumsrv;\n    this.planScheduleService = planScheduleService;\n    this.datePipe = datePipe;\n    this.messageService = messageService;\n    this.today = new Date();\n    this.radioValue = '';\n    this.typeOfMonthSelection = 'dayOfMonth';\n    this.weekNames = [{\n      dayName: \"Monday\",\n      isSelected: false\n    }, {\n      dayName: \"Tuesday\",\n      isSelected: false\n    }, {\n      dayName: \"Wednesday\",\n      isSelected: false\n    }, {\n      dayName: \"Thursday\",\n      isSelected: false\n    }, {\n      dayName: \"Friday\",\n      isSelected: false\n    }, {\n      dayName: \"Saturday\",\n      isSelected: false\n    }, {\n      dayName: \"Sunday\",\n      isSelected: false\n    }];\n    this.weekNums = [{\n      id: '1'\n    }, {\n      id: '2'\n    }, {\n      id: '3'\n    }, {\n      id: '4'\n    }];\n    this.weekDays = [{\n      dayName: \"Monday\"\n    }, {\n      dayName: \"Tuesday\"\n    }, {\n      dayName: \"Wednesday\"\n    }, {\n      dayName: \"Thursday\"\n    }, {\n      dayName: \"Friday\"\n    }, {\n      dayName: \"Saturday\"\n    }, {\n      dayName: \"Sunday\"\n    }];\n    this.dayOfMonth = [{\n      day: '1'\n    }, {\n      day: '2'\n    }, {\n      day: '3'\n    }, {\n      day: '4'\n    }, {\n      day: '5'\n    }, {\n      day: '6'\n    }, {\n      day: '7'\n    }, {\n      day: '8'\n    }, {\n      day: '9'\n    }, {\n      day: '10'\n    }, {\n      day: '11'\n    }, {\n      day: '12'\n    }, {\n      day: '13'\n    }, {\n      day: '14'\n    }, {\n      day: '15'\n    }, {\n      day: '16'\n    }, {\n      day: '17'\n    }, {\n      day: '18'\n    }, {\n      day: '19'\n    }, {\n      day: '20'\n    }, {\n      day: '21'\n    }, {\n      day: '22'\n    }, {\n      day: '23'\n    }, {\n      day: '24'\n    }, {\n      day: '25'\n    }, {\n      day: '26'\n    }, {\n      day: '27'\n    }, {\n      day: '28'\n    }, {\n      day: '29'\n    }, {\n      day: '30'\n    }, {\n      day: '31'\n    }];\n    this.isDayOfMonthVisible = false;\n    this.isWeekOfMonthVisible = false;\n    this.weeksArray = ['0', '0', '0', '0', '0', '0', '0'];\n    this.scheduleDetailsMsg = '';\n    this.isError = false;\n    this.weeksIncluded = [];\n    this.totalOccurence = 0;\n    this.displaySchedulePattern = false;\n    this.weekNamesString = '';\n    this.allDates = [];\n    this.errorMsg = '';\n    this.selectedCard = '';\n    this.enumList = [];\n    this.enumPlanShedData = [];\n    this.planScheduleId = 0;\n    this.scheduleDates = [];\n    this.displaySchedulePreview = false;\n    this.uniqueMonths = [];\n    this.scheduleDataList = [];\n    this.scheduleDescription = '';\n    this.priorityList = [{\n      id: '0'\n    }, {\n      id: '1'\n    }, {\n      id: '2'\n    }, {\n      id: '3'\n    }, {\n      id: '4'\n    }, {\n      id: '5'\n    }];\n    this.priorityErr = '';\n    this.displayPriorityDetails = false;\n    this.isEdit = false;\n    this.monthDates = [];\n    this.expandedIndex = null;\n    this.uniqueMonthsData = [];\n    this.displayScheduleExist = false;\n    this.scheduleExistsMsg = '';\n    this.isMsgAcptd = false;\n    this.enumIsActiveData = [];\n    this.planLocEqId = 0;\n    this.parentFun = new EventEmitter();\n    this.scheduleDetailsForm = this.formBuilder.group({\n      dateStart: [null, [Validators.required, this.checkDateValidation()]],\n      dateEnd: [null, [Validators.required, this.checkDateValidation()]],\n      noOfOccurence: [''],\n      daysFrequency: [1],\n      weeksFrequency: [1],\n      Sunday: [''],\n      Monday: [''],\n      Tuesday: [''],\n      Wednesday: [''],\n      Thursday: [''],\n      Friday: [''],\n      Saturday: [''],\n      selectedWeekNumbers: [\"\"],\n      selectedDayNumbers: [\"\"],\n      monthsFrequency: [1],\n      selectedWeekNames: [''],\n      monthsFrequency2: [1],\n      yearFrequency: [1],\n      priority: [null, [Validators.required]],\n      isActive: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.loadEnums();\n  }\n  setDefaultDates(dateStart, dateEnd, priority, isActive) {\n    setTimeout(() => {\n      this.scheduleDetailsForm.patchValue({\n        dateStart: dateStart,\n        dateEnd: dateEnd,\n        priority: priority,\n        isActive: isActive\n      });\n    }, 0);\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumPlanShedData = this.enumList.map(x => Object.assign({}, x)).filter(t => t.tableName.toLocaleUpperCase() === 'plan_sched'.toLocaleUpperCase() && t.fieldName.toLowerCase() === 'type'.toLowerCase());\n      this.enumIsActiveData = this.enumList.map(x => Object.assign({}, x)).filter(t => t.tableName.toLocaleUpperCase() === 'plan_sched'.toLocaleUpperCase() && t.fieldName.toLowerCase() === 'is_active'.toLowerCase());\n      this.enumIsActiveData.unshift(new EnumList(0, '', '', 'Make a selection', null));\n    }, error => {});\n  }\n  getScheduleTypesByPlanLocEqId() {\n    this.scheduleDetailsForm.reset();\n    this.setEmptyForm();\n    this.selectedScheduleData = this.data.scheduleData;\n    if (this.selectedScheduleData) {\n      const type = this.getEnumById(this.selectedScheduleData.type);\n      this.selectedCard = type;\n      const planSchedule = this.selectedScheduleData;\n      this.planScheduleId = planSchedule.planScheduleId;\n      let dateStart = this.formatDate(planSchedule.dateStart);\n      let dateEnd = this.formatDate(planSchedule.dateEnd);\n      this.setDefaultDates(dateStart, dateEnd, planSchedule.priority, planSchedule.isActive);\n      switch (type) {\n        case \"daily\":\n          {\n            setTimeout(() => {\n              this.scheduleDetailsForm.patchValue({\n                daysFrequency: planSchedule.freq\n              });\n            }, 0);\n            break;\n          }\n        case \"weekly\":\n          {\n            const weekDaysArr = planSchedule.weekDays.split(\",\");\n            weekDaysArr.map((value, index) => {\n              if (value === \"1\") {\n                this.weekNames[index].isSelected = true;\n              }\n            });\n            setTimeout(() => {\n              this.scheduleDetailsForm.patchValue({\n                weeksFrequency: planSchedule.freq\n              });\n            }, 0);\n            break;\n          }\n        case \"monthly\":\n          {\n            if (planSchedule.monthDays.length > 0) {\n              //check for month days \n              this.typeOfMonthSelection = 'dayOfMonth';\n              this.isDayOfMonthVisible = true;\n              this.isWeekOfMonthVisible = false;\n              const daysArr = planSchedule.monthDays.split(\",\").sort();\n              let selectedDays = [];\n              daysArr.map(d => {\n                selectedDays.push({\n                  day: d\n                });\n              });\n              setTimeout(() => {\n                this.scheduleDetailsForm.patchValue({\n                  selectedDayNumbers: selectedDays,\n                  monthsFrequency: planSchedule.freq\n                });\n              }, 0);\n            } else {\n              this.typeOfMonthSelection = 'weekOfMonth';\n              this.isWeekOfMonthVisible = true;\n              this.isDayOfMonthVisible = false;\n              const weekDaysArr = planSchedule.weekDays.split(\",\");\n              const selectedWeekNamesArr = weekDaysArr.reduce((acc, value, index) => {\n                if (value === \"1\") {\n                  acc.push({\n                    dayName: this.weekDays[index].dayName\n                  });\n                }\n                return acc;\n              }, []);\n              const weeksArr = planSchedule.weeks.split(\",\").sort();\n              let selectedWeeks = [];\n              weeksArr.map(w => {\n                selectedWeeks.push({\n                  id: w\n                });\n              });\n              setTimeout(() => {\n                this.scheduleDetailsForm.patchValue({\n                  selectedWeekNumbers: selectedWeeks,\n                  monthsFrequency2: planSchedule.freq,\n                  selectedWeekNames: selectedWeekNamesArr\n                });\n              }, 0);\n            }\n            break;\n          }\n        case \"annually\":\n          {\n            setTimeout(() => {\n              this.scheduleDetailsForm.patchValue({\n                yearFrequency: planSchedule.freq\n              });\n            }, 0);\n            break;\n          }\n      }\n    } else {\n      var month = new Date().getMonth() + 6;\n      this.maxDate = new Date(new Date().setMonth(month));\n      var date = new Date();\n      var nextDate = new Date(new Date().setDate(date.getDate() + 1));\n      this.setDefaultDates(date, nextDate, 0, null); //need to be dynamic in edit case\n      this.planLocEqId = this.data.planLocEqId;\n      this.selectedCard = \"daily\";\n    }\n  }\n  getEnumById(enumKey) {\n    return enumKey ? this.enumPlanShedData.find(t => t.enumKey == enumKey) != null ? this.enumPlanShedData.find(t => t.enumKey == enumKey)?.enumValue : '' : '';\n  }\n  getIdByEnum(enumValue) {\n    return enumValue ? this.enumPlanShedData.find(t => t.enumValue == enumValue) != null ? this.enumPlanShedData.find(t => t.enumValue == enumValue)?.enumKey : '' : '';\n  }\n  saveRecurrence() {\n    const bool = this.getScheduleDetails();\n    if (bool) {\n      if (this.isEdit && this.selectedScheduleData.description.slice(0, -1) != this.scheduleDescription.slice(0, -1) && !this.isMsgAcptd) {\n        this.planScheduleService.checkIsScheduleGenerated(this.selectedScheduleData.planScheduleId).subscribe(res => {\n          if (res.text) {\n            this.confirmUpdate();\n          } else {\n            this.maxScheduledDate = res;\n            this.scheduleExistsMsg = `The Requests have already been generated for this schedule until ${this.datePipe.transform(new Date(res), \"dd MMM yyyy\")}.\n            Any modifications to the schedule will take effect starting from the ${this.datePipe.transform(new Date(res).setDate(new Date(res).getDate() + 1), \"dd MMM yyyy\")}\n            Would you like to proceed with these changes?`;\n            this.displayScheduleExist = true;\n          }\n        });\n      } else if (this.isEdit && this.selectedScheduleData.description == this.scheduleDescription) {\n        this.scheduleDetailsForm.reset();\n        this.setEmptyForm();\n        this.updateParent('save');\n      } else {\n        this.confirmUpdate();\n      }\n    }\n  }\n  onSelectMonthlyType(event) {\n    if (event.currentTarget.id == 'dayOfMonth') {\n      this.isError = false;\n      this.isDayOfMonthVisible = true;\n      this.isWeekOfMonthVisible = false;\n      this.typeOfMonthSelection = 'dayOfMonth';\n      setTimeout(() => {\n        this.scheduleDetailsForm.patchValue({\n          monthsFrequency2: 1,\n          selectedWeekNames: '',\n          selectedWeekNumbers: ''\n        });\n      }, 10);\n    } else if (event.currentTarget.id == 'weekOfMonth_months') {\n      this.isError = false;\n      this.isWeekOfMonthVisible = true;\n      this.isDayOfMonthVisible = false;\n      this.typeOfMonthSelection = 'weekOfMonth';\n      setTimeout(() => {\n        this.scheduleDetailsForm.patchValue({\n          monthsFrequency: 1,\n          selectedDayNumbers: ''\n        });\n      }, 10);\n    }\n  }\n  confirmDialog() {\n    this.confirmationService.confirm({\n      message: UtilConstant.CANCEL_Msg,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      key: 'wrGrid',\n      accept: () => {\n        this.scheduleDetailsForm.reset();\n        this.setEmptyForm();\n        this.updateParent('cancel');\n      }\n    });\n  }\n  onContinue() {\n    this.displaySchedulePattern = false;\n    var startDate = this.datePipe.transform(this.scheduleDetailsForm.controls.dateStart.value, \"yyyy-MM-dd\");\n    var endDate = this.datePipe.transform(this.scheduleDetailsForm.controls.dateEnd.value, \"yyyy-MM-dd\");\n    let planScheduleData = {\n      planScheduleId: this.planScheduleId,\n      planLocEqId: this.planLocEqId,\n      type: this.getIdByEnum(this.scheduleDetails.type),\n      freq: this.scheduleDetails.frequency,\n      iterations: this.totalOccurence,\n      weekDays: this.scheduleDetails.weekDays,\n      weeks: this.scheduleDetails.weeks,\n      monthDays: this.scheduleDetails.monthDays,\n      dateStart: startDate,\n      dateEnd: endDate,\n      description: this.scheduleDescription,\n      priority: this.scheduleDetails.priority,\n      scheduleDates: this.scheduleDates,\n      isEdit: this.isEdit,\n      isActive: this.scheduleDetails.isActive\n    };\n    this.planScheduleService.savePlanSchedule(planScheduleData).subscribe(res => {\n      if (res.planScheduleId) {\n        this.scheduleDetailsForm.reset();\n        this.setEmptyForm();\n        this.updateParent('save');\n      }\n    });\n  }\n  formatDate(date) {\n    if (date != null) {\n      var date = new Date(date);\n      var userTimezoneOffset = date.getTimezoneOffset() * 60000;\n      var a = new Date(date.getTime() - userTimezoneOffset);\n      return a;\n    } else {\n      return null;\n    }\n  }\n  checkDateValidation() {\n    return control => {\n      if (control.value !== undefined && control.value != null) {\n        this.scheduleDetailsForm.controls['dateStart'].setErrors(null);\n        this.scheduleDetailsForm.controls['dateEnd'].setErrors(null);\n        this.scheduleDetailsForm.clearAsyncValidators();\n        this.scheduleDetailsForm.updateValueAndValidity();\n        var dateFrom = new Date(this.scheduleDetailsForm.controls['dateStart'].value);\n        var dateTo = new Date(this.scheduleDetailsForm.controls['dateEnd'].value);\n        if (dateFrom.getTime() >= dateTo.getTime() && this.scheduleDetailsForm.controls['dateEnd'].value != null) {\n          this.scheduleDetailsForm.controls['dateStart'].setErrors({\n            'incorrect': true\n          });\n          this.scheduleDetailsForm.updateValueAndValidity();\n          this.errorMsg = ' date end should be greater than date start.';\n          return {\n            'incorrect': true\n          };\n        } else {\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n  checked() {\n    this.isError = false;\n  }\n  selectCard(cardType) {\n    this.selectedCard = cardType;\n    this.displaySchedulePreview = false;\n    if (cardType == 'monthly') {\n      this.isDayOfMonthVisible = true;\n    } else {\n      this.isDayOfMonthVisible = false;\n      this.isWeekOfMonthVisible = false;\n    }\n  }\n  setEmptyForm() {\n    this.typeOfMonthSelection == '';\n    this.isDayOfMonthVisible = false;\n    this.isWeekOfMonthVisible = false;\n    this.planScheduleId = 0;\n    setTimeout(() => {\n      this.scheduleDetailsForm.patchValue({\n        daysFrequency: 1,\n        weeksFrequency: 1,\n        monthsFrequency: 1,\n        monthsFrequency2: 1,\n        yearFrequency: 1,\n        selectedWeekNames: []\n      });\n    }, 0);\n  }\n  getScheduleDetails() {\n    var startDate = this.formatDate(this.scheduleDetailsForm.controls.dateStart.value);\n    var endDate = this.formatDate(this.scheduleDetailsForm.controls.dateEnd.value);\n    let startDateStr = this.datePipe.transform(startDate, \"dd MMM yyyy\");\n    let endDateStr = this.datePipe.transform(endDate, \"dd MMM yyyy\");\n    switch (this.selectedCard) {\n      case \"daily\":\n        {\n          const frequency = this.scheduleDetailsForm.controls.daysFrequency.value;\n          if (!frequency) {\n            return;\n          }\n          this.scheduleDetails = {\n            dateStart: startDate,\n            dateEnd: endDate,\n            type: \"daily\",\n            frequency: frequency,\n            monthDays: '',\n            weekDays: '',\n            weeks: ''\n          };\n          this.scheduleDetailsMsg = `Recurring every ${frequency > 1 ? this.convertToOrdinal(frequency) : \"\"} day between ${startDateStr} and ${endDateStr}`;\n          break;\n        }\n      case \"weekly\":\n        {\n          const weekDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n          this.weeksIncluded = [];\n          this.scheduleDetailsMsg = '';\n          const weekDaysValues = weekDays.map(day => {\n            const control = this.scheduleDetailsForm.controls[day];\n            return control.value ? \"1\" : \"0\";\n          });\n          this.weeksIncluded = weekDays.filter((day, index) => weekDaysValues[index] === \"1\");\n          const frequency = this.scheduleDetailsForm.controls.weeksFrequency.value;\n          const weekLabel = frequency > 1 ? `${this.convertToOrdinal(frequency)} week` : 'week';\n          if (this.weeksIncluded.length === 0 || !frequency) {\n            this.isError = true;\n            return;\n          }\n          this.scheduleDetails = {\n            dateStart: startDate,\n            dateEnd: endDate,\n            type: \"weekly\",\n            frequency: frequency,\n            monthDays: '',\n            weekDays: weekDaysValues.join(\",\"),\n            weeks: ''\n          };\n          this.scheduleDetailsMsg = `Recurring every ${weekLabel} on ${this.weeksIncluded.join(\", \")} between ${startDateStr} and ${endDateStr}`;\n          break;\n        }\n      case \"monthly\":\n        {\n          this.scheduleDetailsMsg = '';\n          this.isError = false;\n          if (this.typeOfMonthSelection === 'dayOfMonth') {\n            const selectedDayNumbers = this.scheduleDetailsForm.controls.selectedDayNumbers.value || [];\n            if (selectedDayNumbers.length === 0 || this.scheduleDetailsForm.controls.monthsFrequency.value <= 0) {\n              this.isError = true;\n              return;\n            }\n            const sortedDays = selectedDayNumbers.map(element => element.day).sort();\n            const frequency = this.scheduleDetailsForm.controls.monthsFrequency.value;\n            const monthLabel = frequency > 1 ? \"months \" : \"month \";\n            this.scheduleDetails = {\n              dateStart: startDate,\n              dateEnd: endDate,\n              type: \"monthly\",\n              frequency: frequency,\n              monthDays: sortedDays.toString(),\n              weekDays: '',\n              weeks: ''\n            };\n            const ordinalDayList = sortedDays.map(day => this.convertToOrdinal(day)).join(\", \");\n            this.scheduleDetailsMsg = `Recurring every ${frequency > 1 ? frequency : \"\"} ${monthLabel} on  ${ordinalDayList}  of month between ${startDateStr} and ${endDateStr}`;\n          } else if (this.typeOfMonthSelection === 'weekOfMonth') {\n            this.weeksArray = [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"];\n            this.weekNamesString = '';\n            this.scheduleDetailsForm.controls.selectedWeekNames.value?.forEach(element => {\n              const foundDay = this.weekDays.find(day => day.dayName === element.dayName);\n              if (foundDay) {\n                const dayIndex = this.weekDays.indexOf(foundDay);\n                this.weeksArray[dayIndex] = '1';\n                this.weekNamesString += foundDay.dayName + \", \";\n              }\n            });\n            this.weekNamesString = this.weekNamesString.slice(0, -2);\n            const selectedWeekNumbers = this.scheduleDetailsForm.controls.selectedWeekNumbers.value || [];\n            if (selectedWeekNumbers.length === 0 || !this.weekNamesString || this.scheduleDetailsForm.controls.monthsFrequency2.value <= 0) {\n              this.isError = true;\n              return;\n            }\n            const frequency = this.scheduleDetailsForm.controls.monthsFrequency2.value;\n            const weekLabel = frequency === 1 ? 'month' : frequency + ' months';\n            const weeks = selectedWeekNumbers.map(element => element.id).join(\",\");\n            const weekNumbers = selectedWeekNumbers.map(element => {\n              return this.convertToOrdinal(element.id);\n            });\n            const daysOfWeek = this.weeksArray.join(\",\");\n            this.scheduleDetails = {\n              dateStart: startDate,\n              dateEnd: endDate,\n              type: \"monthly\",\n              frequency: frequency,\n              monthDays: '',\n              weekDays: daysOfWeek.toString(),\n              weeks: weeks.toString()\n            };\n            this.scheduleDetailsMsg = `Recurring every ${weekLabel} on ${weekNumbers.join(\", \")} ${this.weekNamesString} of a month between ${startDateStr} and ${endDateStr}`;\n          }\n          break;\n        }\n      case \"annually\":\n        {\n          const frequency = this.scheduleDetailsForm.controls.yearFrequency.value;\n          if (!frequency) {\n            return;\n          }\n          this.scheduleDetails = {\n            dateStart: startDate,\n            dateEnd: endDate,\n            type: \"annually\",\n            frequency: frequency,\n            monthDays: \"\",\n            weekDays: \"\",\n            weeks: ''\n          };\n          this.scheduleDetailsMsg = `Recurring every ${frequency > 1 ? this.convertToOrdinal(frequency) : \"\"} year between ${startDateStr} and ${endDateStr}`;\n          break;\n        }\n      default:\n        {\n          break;\n        }\n    }\n    this.scheduleDetails.priority = this.scheduleDetailsForm.controls.priority.value;\n    this.scheduleDetails.isActive = this.scheduleDetailsForm.controls.isActive.value;\n    // this.scheduleDescription = `Once ${this.scheduleDetailsMsg} from ${this.datePipe.transform(startDate, \"dd MMM yyyy\")} to ${this.datePipe.transform(endDate, \"dd MMM yyyy\")}`\n    this.scheduleDescription = this.scheduleDetailsMsg + \" \" + this.scheduleDetailsForm.controls.priority.value;\n    return true;\n  }\n  previewDates() {\n    this.displaySchedulePreview = false;\n    const bool = this.getScheduleDetails();\n    if (bool) {\n      this.planScheduleService.getCountOfOccurence(this.scheduleDetails).subscribe(res => {\n        this.scheduleDates = res;\n        this.totalOccurence = res.length;\n        this.uniqueMonths = this.getUniqueMonths();\n        this.uniqueMonthsData = this.uniqueMonths.map(month => {\n          let datesLen = this.getDatesForMonth(month).length;\n          return {\n            month: month,\n            count: datesLen\n          };\n        });\n        this.displaySchedulePreview = true;\n      });\n    }\n  }\n  // Helper function to get all unique months\n  getUniqueMonths() {\n    const months = [];\n    this.scheduleDates.forEach(date => {\n      date = new Date(date);\n      const month = new Date(date.getFullYear(), date.getMonth(), 1);\n      if (!months.some(m => m.getTime() === month.getTime())) {\n        months.push(month);\n      }\n    });\n    return months;\n  }\n  // Helper function to get all dates for a specific month\n  getDatesForMonth(month) {\n    return this.scheduleDates.filter(date => new Date(date).getMonth() === month.getMonth() && new Date(date).getFullYear() === month.getFullYear());\n  }\n  checkScheduleExists() {\n    const planSchedule = this.scheduleDataList.length ? this.scheduleDataList.find(schedule => schedule.description === this.scheduleDescription) : null;\n    return planSchedule;\n  }\n  updateParent(event) {\n    this.parentFun.emit(event);\n  }\n  onTabOpen(event) {\n    this.expandedIndex = event.index;\n    let month = this.uniqueMonths[event.index];\n    this.monthDates = this.getDatesForMonth(month);\n  }\n  onTabClose(event) {\n    this.expandedIndex === null;\n  }\n  convertToOrdinal(number) {\n    switch (number % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n      default:\n        return number + \"th\";\n    }\n  }\n  confirmUpdate() {\n    const planSchedule = this.checkScheduleExists();\n    if (planSchedule) {\n      this.messageService.clear();\n      this.messageService.add({\n        key: 'exists',\n        severity: 'warn',\n        summary: 'Schedule Exists',\n        detail: 'Same schedule for this plan already exists'\n      });\n      return;\n    }\n    this.planScheduleService.getCountOfOccurence(this.scheduleDetails).subscribe(res => {\n      this.scheduleDates = res;\n      this.totalOccurence = res.length;\n      this.onContinue();\n    });\n  }\n  updateScheduleDates() {\n    var date = new Date(this.maxScheduledDate);\n    var nextDate = new Date(date.setDate(date.getDate() + 1));\n    this.selectedScheduleData.dateStart = nextDate;\n    this.today = nextDate;\n    if (new Date(nextDate) >= new Date(this.selectedScheduleData.dateEnd)) {\n      this.selectedScheduleData.dateEnd = new Date(new Date(nextDate).setDate(new Date(nextDate).getDate() + 1));\n    }\n    this.getScheduleTypesByPlanLocEqId();\n    this.isMsgAcptd = true;\n    this.displayScheduleExist = false;\n  }\n  static #_ = this.ɵfac = function PpmScheduleTypeComponent_Factory(t) {\n    return new (t || PpmScheduleTypeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.EnumService), i0.ɵɵdirectiveInject(i4.PlanScheduleService), i0.ɵɵdirectiveInject(i5.DatePipe), i0.ɵɵdirectiveInject(i2.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PpmScheduleTypeComponent,\n    selectors: [[\"app-ppm-schedule-type\"]],\n    inputs: {\n      planLocEqId: \"planLocEqId\"\n    },\n    outputs: {\n      parentFun: \"parentFun\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 121,\n    vars: 76,\n    consts: [[1, \"card\"], [3, \"formGroup\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateStart\", \"formControlName\", \"dateStart\", \"inputId\", \"icon\", 3, \"minDate\", \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateEnd\", \"formControlName\", \"dateEnd\", \"inputId\", \"icon\", 3, \"minDate\", \"showIcon\"], [2, \"width\", \"25%\"], [1, \"input-label-custom\", 2, \"width\", \"90%\"], [\"appendTo\", \"body\", \"formControlName\", \"isActive\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"width\", \"35%\"], [2, \"display\", \"flex\"], [\"appendTo\", \"body\", \"formControlName\", \"priority\", \"bindLabel\", \"id\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"display\", \"flex\", \"margin-top\", \"25px\"], [\"id\", \"detailsBtn\", \"icon\", \"pi pi-info-circle\", \"matTooltip\", \"View Details\", \"styleClass\", \"p-button-rounded\", 3, \"click\"], [2, \"width\", \"30%\"], [4, \"ngIf\"], [1, \"card\", 2, \"margin\", \"0px 3px 0px 3px\"], [1, \"heading-container\"], [\"type\", \"radio\", \"name\", \"selectedCard\", 1, \"header-radio\", 3, \"checked\", \"click\"], [1, \"heading\"], [2, \"padding-left\", \"10px\"], [1, \"input-label-custom\", 2, \"display\", \"flex\", \"justify-content\", \"baseline\", \"margin-top\", \"5px\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"daysFrequency\", \"maxlength\", \"9\", 1, \"form-control\"], [1, \"input-label-custom\", 2, \"margin-top\", \"5px\", \"display\", \"flex\", \"overflow\", \"auto\"], [\"class\", \"field-checkbox\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-label-custom\", 2, \"display\", \"flex\", \"justify-content\", \"baseline\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"weeksFrequency\", \"maxlength\", \"9\", 1, \"form-control\"], [2, \"padding-left\", \"10px\", \"overflow\", \"auto\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"margin-top\", \"15px\"], [\"type\", \"radio\", \"name\", \"monthly_type\", \"id\", \"dayOfMonth\", 3, \"checked\", \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"selectedDayNumbers\", \"optionLabel\", \"day\", 3, \"options\", \"placeholder\", \"readonly\", \"panelStyle\", \"onChange\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"monthsFrequency\", \"maxlength\", \"9\", 1, \"form-control\", 3, \"readonly\"], [1, \"form-field-lable\", 2, \"margin-left\", \"4px\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\"], [\"mydiv\", \"\"], [\"type\", \"radio\", \"name\", \"monthly_type\", \"id\", \"weekOfMonth_months\", \"placeholder\", \"1\", 3, \"checked\", \"click\"], [\"formControlName\", \"selectedWeekNumbers\", \"appendTo\", \"body\", \"optionLabel\", \"id\", 3, \"options\", \"placeholder\", \"readonly\", \"panelStyle\", \"onChange\"], [\"formControlName\", \"selectedWeekNames\", \"appendTo\", \"body\", \"optionLabel\", \"dayName\", 3, \"options\", \"readonly\", \"placeholder\", \"panelStyle\", \"onChange\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"monthsFrequency2\", \"id\", \"dayOfMonth_months\", \"maxlength\", \"9\", 1, \"form-control\", 3, \"readonly\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"yearFrequency\", \"maxlength\", \"9\", 1, \"form-control\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Preview\", \"icon\", \"pi pi-eye\", 3, \"disabled\", \"click\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"key\", \"wrSave\", \"position\", \"top-right\"], [\"key\", \"exists\", \"position\", \"top-center\"], [\"key\", \"wrGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Schedule Preview\", \"id\", \"preview\", 3, \"visible\", \"closable\", \"modal\", \"visibleChange\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"footer\"], [\"id\", \"preview\", 3, \"visible\", \"closable\", \"modal\", \"visibleChange\"], [\"header\", \"Message\", 3, \"visible\", \"closable\", \"draggable\", \"resizable\", \"modal\", \"visibleChange\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [1, \"field-checkbox\"], [1, \"card-container\"], [\"name\", \"group2\", \"binary\", \"true\", 3, \"formControlName\", \"value\", \"inputId\", \"ngModel\", \"onChange\", \"ngModelChange\"], [1, \"form-field-lable\", 2, \"margin-left\", \"3px !important\", 3, \"for\"], [1, \"card-body\"], [1, \"month-name\"], [2, \"margin-left\", \"25px\"], [2, \"margin\", \"10px 0px 10px 0px\"], [\"class\", \"alert alert-warning mt-3\", 4, \"ngIf\"], [3, \"onOpen\", \"onClose\"], [3, \"header\", 4, \"ngFor\", \"ngForOf\"], [3, \"header\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"alert\", \"alert-warning\", \"mt-3\"], [\"icon\", \"pi pi-times\", \"label\", \"Close\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [1, \"priority-details\"], [1, \"message\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-check\", \"label\", \"Continue\", 3, \"click\"]],\n    template: function PpmScheduleTypeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\")(3, \"tr\")(4, \"td\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"p-calendar\", 7);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(11, \"td\", 2)(12, \"div\", 3)(13, \"div\", 4)(14, \"div\", 5)(15, \"label\", 6);\n        i0.ɵɵtext(16, \"End Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"p-calendar\", 8);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(18, \"td\", 9)(19, \"div\", 10)(20, \"label\", 6);\n        i0.ɵɵtext(21, \"Is Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"ng-select\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"td\", 12)(24, \"div\", 13)(25, \"div\", 10)(26, \"label\", 6);\n        i0.ɵɵtext(27, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"ng-select\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 15)(30, \"p-button\", 16);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_p_button_click_30_listener() {\n          return ctx.displayPriorityDetails = true;\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(31, \"tr\")(32, \"td\", 17);\n        i0.ɵɵtemplate(33, PpmScheduleTypeComponent_div_33_Template, 3, 0, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"td\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 19)(36, \"div\", 20)(37, \"input\", 21);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_input_click_37_listener() {\n          return ctx.selectCard(\"daily\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"h2\", 22);\n        i0.ɵɵtext(39, \"Daily\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 23)(41, \"div\", 24)(42, \"label\", 25);\n        i0.ɵɵtext(43, \"Every:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 26);\n        i0.ɵɵelementStart(45, \"label\", 25);\n        i0.ɵɵtext(46, \"day(s)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(47, PpmScheduleTypeComponent_div_47_Template, 3, 0, \"div\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"div\", 19)(49, \"div\", 20)(50, \"input\", 21);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_input_click_50_listener() {\n          return ctx.selectCard(\"weekly\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"h2\", 22);\n        i0.ɵɵtext(52, \"Weekly\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(53, \"div\", 23)(54, \"div\", 27)(55, \"label\", 25);\n        i0.ɵɵtext(56, \"Every:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(57, PpmScheduleTypeComponent_ul_57_Template, 5, 8, \"ul\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"div\", 29)(59, \"label\", 25);\n        i0.ɵɵtext(60, \"for every\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(61, \"input\", 30);\n        i0.ɵɵelementStart(62, \"label\", 25);\n        i0.ɵɵtext(63, \"week(s)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(64, PpmScheduleTypeComponent_div_64_Template, 3, 0, \"div\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(65, \"div\", 19)(66, \"div\", 20)(67, \"input\", 21);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_input_click_67_listener() {\n          return ctx.selectCard(\"monthly\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"h2\", 22);\n        i0.ɵɵtext(69, \"Monthly\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(70, \"div\", 31)(71, \"div\", 32)(72, \"input\", 33);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_input_click_72_listener($event) {\n          return ctx.onSelectMonthlyType($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"p-multiSelect\", 34);\n        i0.ɵɵlistener(\"onChange\", function PpmScheduleTypeComponent_Template_p_multiSelect_onChange_73_listener() {\n          return ctx.checked();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"label\", 25);\n        i0.ɵɵtext(75, \"day(s)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"label\", 25);\n        i0.ɵɵtext(77, \" every\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(78, \"input\", 35);\n        i0.ɵɵelementStart(79, \"label\", 36);\n        i0.ɵɵtext(80, \"month(s)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(81, \"div\", 37, 38)(83, \"input\", 39);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_input_click_83_listener($event) {\n          return ctx.onSelectMonthlyType($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"p-multiSelect\", 40);\n        i0.ɵɵlistener(\"onChange\", function PpmScheduleTypeComponent_Template_p_multiSelect_onChange_84_listener() {\n          return ctx.checked();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(85, \"p-multiSelect\", 41);\n        i0.ɵɵlistener(\"onChange\", function PpmScheduleTypeComponent_Template_p_multiSelect_onChange_85_listener() {\n          return ctx.checked();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"label\", 25);\n        i0.ɵɵtext(87, \"every\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(88, \"input\", 42);\n        i0.ɵɵelementStart(89, \"label\", 36);\n        i0.ɵɵtext(90, \"month(s)\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(91, \"div\", 19)(92, \"div\", 20)(93, \"input\", 21);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_input_click_93_listener() {\n          return ctx.selectCard(\"annually\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"h2\", 22);\n        i0.ɵɵtext(95, \"Annually\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(96, \"div\", 23)(97, \"div\", 24)(98, \"label\", 25);\n        i0.ɵɵtext(99, \"Every:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(100, \"input\", 43);\n        i0.ɵɵelementStart(101, \"label\", 25);\n        i0.ɵɵtext(102, \"year(s)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(103, PpmScheduleTypeComponent_div_103_Template, 3, 0, \"div\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(104, PpmScheduleTypeComponent_div_104_Template, 3, 0, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"mat-dialog-actions\", 44)(106, \"p-button\", 45);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_p_button_click_106_listener() {\n          return ctx.previewDates();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(107, \"p-button\", 46);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_p_button_click_107_listener() {\n          return ctx.saveRecurrence();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(108, \"p-button\", 47);\n        i0.ɵɵlistener(\"click\", function PpmScheduleTypeComponent_Template_p_button_click_108_listener() {\n          return ctx.confirmDialog();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(109, \"p-toast\", 48)(110, \"p-toast\", 49)(111, \"p-confirmDialog\", 50);\n        i0.ɵɵelementStart(112, \"p-dialog\", 51);\n        i0.ɵɵlistener(\"visibleChange\", function PpmScheduleTypeComponent_Template_p_dialog_visibleChange_112_listener($event) {\n          return ctx.displaySchedulePreview = $event;\n        });\n        i0.ɵɵtemplate(113, PpmScheduleTypeComponent_ng_template_113_Template, 34, 13, \"ng-template\", 52);\n        i0.ɵɵtemplate(114, PpmScheduleTypeComponent_ng_template_114_Template, 1, 0, \"ng-template\", 53);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(115, \"p-dialog\", 54);\n        i0.ɵɵlistener(\"visibleChange\", function PpmScheduleTypeComponent_Template_p_dialog_visibleChange_115_listener($event) {\n          return ctx.displayPriorityDetails = $event;\n        });\n        i0.ɵɵtemplate(116, PpmScheduleTypeComponent_ng_template_116_Template, 38, 0, \"ng-template\", 52);\n        i0.ɵɵtemplate(117, PpmScheduleTypeComponent_ng_template_117_Template, 1, 0, \"ng-template\", 53);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"p-dialog\", 55);\n        i0.ɵɵlistener(\"visibleChange\", function PpmScheduleTypeComponent_Template_p_dialog_visibleChange_118_listener($event) {\n          return ctx.displayScheduleExist = $event;\n        });\n        i0.ɵɵtemplate(119, PpmScheduleTypeComponent_ng_template_119_Template, 3, 1, \"ng-template\", 52);\n        i0.ɵɵtemplate(120, PpmScheduleTypeComponent_ng_template_120_Template, 2, 0, \"ng-template\", 53);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.scheduleDetailsForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"minDate\", ctx.today)(\"showIcon\", false);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"minDate\", ctx.today)(\"showIcon\", false);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumIsActiveData)(\"searchable\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.priorityList)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.scheduleDetailsForm.controls[\"dateStart\"] == null ? null : ctx.scheduleDetailsForm.controls[\"dateStart\"].errors) && ctx.scheduleDetailsForm.controls[\"dateStart\"].dirty || (ctx.scheduleDetailsForm.controls[\"dateEnd\"] == null ? null : ctx.scheduleDetailsForm.controls[\"dateEnd\"].errors) && ctx.scheduleDetailsForm.controls[\"dateEnd\"].dirty);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"checked\", ctx.selectedCard === \"daily\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"card-readonly\", ctx.selectedCard !== \"daily\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.scheduleDetailsForm.controls.daysFrequency.value < 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.selectedCard === \"weekly\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"card-readonly\", ctx.selectedCard !== \"weekly\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.weekNames);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.scheduleDetailsForm.controls.weeksFrequency.value < 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.selectedCard === \"monthly\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"card-readonly\", ctx.selectedCard !== \"monthly\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"checked\", ctx.isDayOfMonthVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", ctx.dayOfMonth)(\"placeholder\", \"Select day(s)\")(\"readonly\", !ctx.isDayOfMonthVisible)(\"panelStyle\", i0.ɵɵpureFunction0(68, _c1));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"readonly\", !ctx.isDayOfMonthVisible);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"checked\", ctx.isWeekOfMonthVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", ctx.weekNums)(\"placeholder\", \"Select week(s)\")(\"readonly\", !ctx.isWeekOfMonthVisible)(\"panelStyle\", i0.ɵɵpureFunction0(69, _c1));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", ctx.weekDays)(\"readonly\", !ctx.isWeekOfMonthVisible)(\"placeholder\", \"Select day(s) of week\")(\"panelStyle\", i0.ɵɵpureFunction0(70, _c2));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readonly\", !ctx.isWeekOfMonthVisible);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"checked\", ctx.selectedCard === \"annually\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"card-readonly\", ctx.selectedCard !== \"annually\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.scheduleDetailsForm.controls.yearFrequency.value < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isError);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.scheduleDetailsForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(71, _c3));\n        i0.ɵɵproperty(\"disabled\", !ctx.scheduleDetailsForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(72, _c3));\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(73, _c4));\n        i0.ɵɵproperty(\"visible\", ctx.displaySchedulePreview)(\"closable\", false)(\"modal\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(74, _c5));\n        i0.ɵɵproperty(\"visible\", ctx.displayPriorityDetails)(\"closable\", false)(\"modal\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(75, _c6));\n        i0.ɵɵproperty(\"visible\", ctx.displayScheduleExist)(\"closable\", false)(\"draggable\", false)(\"resizable\", false)(\"modal\", true);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.Accordion, i6.AccordionTab, i2.PrimeTemplate, i7.Calendar, i8.ButtonDirective, i8.Button, i9.Dialog, i10.MultiSelect, i11.Toast, i12.ConfirmDialog, i13.Checkbox, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i14.NgSelectComponent, i15.MatDialogActions, i16.NzTableCellDirective, i16.NzTrDirective, i17.NumbersOnlyDirective, i5.DatePipe],\n    styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%] {\\n  background-color: #879cc9;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n}\\n\\n.mat-dialog-content-ext[_ngcontent-%COMP%] {\\n  \\n\\n  margin: 0;\\n  padding: 10px;\\n  background-color: white !important;\\n}\\n\\n.mat-dialog-actions-ext[_ngcontent-%COMP%] {\\n  border-top: none;\\n  padding: 3px;\\n  min-height: 36px !important;\\n  margin-bottom: 5px;\\n  \\n\\n  background-color: white !important;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 70px;\\n}\\n\\n.margin-left-20[_ngcontent-%COMP%] {\\n  margin-left: 20px;\\n}\\n\\n.margin-5[_ngcontent-%COMP%] {\\n  margin: 5px !important;\\n}\\n\\n.mat-card[_ngcontent-%COMP%] {\\n  border-radius: 0px;\\n}\\n\\n.mat-expansion-panel[_ngcontent-%COMP%] {\\n  background-color: #879cc9;\\n}\\n\\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n}\\n\\n.mat-card-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n  font-size: 13px;\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header-text[_ngcontent-%COMP%] {\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header[_ngcontent-%COMP%] {\\n  padding: 5px !important;\\n  margin-left: -15px;\\n}\\n\\n.mat-card-content[_ngcontent-%COMP%] {\\n  background-color: white !important;\\n  \\n\\n}\\n\\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\\n  background-color: white !important;\\n}\\n\\n.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%] {\\n  line-height: inherit !important;\\n}\\n\\n[_ngcontent-%COMP%]::placeholder {\\n  \\n\\n  color: #555;\\n  opacity: 1;\\n  \\n\\n}\\n\\n[_ngcontent-%COMP%]:-ms-input-placeholder {\\n  \\n\\n  color: #555;\\n}\\n\\n[_ngcontent-%COMP%]::-ms-input-placeholder {\\n  \\n\\n  color: #555;\\n}\\n\\n.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%] {\\n  border-radius: 0px !important;\\n}\\n\\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n}\\n\\n.mat-card[_ngcontent-%COMP%] {\\n  padding: 0px;\\n  border: thin double rgb(181, 155, 90);\\n}\\n\\n.mat-card-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n  font-size: 13px;\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header-text[_ngcontent-%COMP%] {\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header[_ngcontent-%COMP%] {\\n  padding: 5px !important;\\n  margin-left: -15px;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 70px;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%], input[type=time][_ngcontent-%COMP%] {\\n  background-color: white !important;\\n  border-color: #879cc9 !important;\\n  height: 20px !important;\\n  width: 10%;\\n  margin: 0px 5px 0px 5px;\\n}\\n\\n#noOfOccurence[_ngcontent-%COMP%] {\\n  background-color: white !important;\\n  border-color: #879cc9 !important;\\n  height: 24px !important;\\n  width: 100% !important;\\n  margin: 0px 5px 0px 5px;\\n}\\n\\ninput[type=radio][_ngcontent-%COMP%], input[type=checkbox][_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  padding: 0;\\n  margin: 5px 5px 15px 5px;\\n}\\n\\n[_nghost-%COMP%]     .p-multiselect {\\n  margin: 0px 7px 10px 5px;\\n  max-width: 15px;\\n  max-height: 1.6rem;\\n}\\n\\n[_nghost-%COMP%]     .multiselect-custom-virtual-scroll .p-multiselect {\\n  min-width: 10rem;\\n}\\n\\n.grid-container[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n}\\n\\n.card-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:disabled, input[type=text][_ngcontent-%COMP%]:disabled, .p-multiselect[_ngcontent-%COMP%]:disabled, .form-control[_ngcontent-%COMP%]:read-only, .ng-select-disabled[_ngcontent-%COMP%] {\\n  background-color: #e9ecef !important;\\n  opacity: 1;\\n  cursor: no-drop !important;\\n}\\n\\n[_nghost-%COMP%]     .p-multiselect .p-multiselect-label.p-placeholder {\\n  color: #6c757d;\\n  padding-top: 7px;\\n  font-family: \\\"Roboto\\\";\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  padding-left: 0.5rem !important;\\n}\\n\\n.recurrence-details-container[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: auto auto;\\n  grid-gap: 1rem;\\n}\\n\\n.recurrence-details-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  text-align: start;\\n  height: 24px;\\n}\\n\\n.total-occurence[_ngcontent-%COMP%] {\\n  font-size: 13px;\\n  font-weight: 700;\\n}\\n\\nspan[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: 500;\\n}\\n\\n.heading[_ngcontent-%COMP%] {\\n  font-family: inherit;\\n  font-weight: 500;\\n  color: #495057;\\n  margin-bottom: 0px;\\n  font-size: 16px;\\n}\\n\\n.heading-container[_ngcontent-%COMP%] {\\n  padding: 5px;\\n  display: flex;\\n}\\n\\n.header-radio[_ngcontent-%COMP%] {\\n  margin: 5px 5px 2px 5px !important;\\n  height: 24px;\\n  width: 12px;\\n}\\n\\n.card-readonly[_ngcontent-%COMP%] {\\n  pointer-events: none; \\n\\n  opacity: 0.6; \\n\\n}\\n\\n.btn-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: end;\\n  padding: 5px;\\n}\\n\\n[_nghost-%COMP%]     #preview .p-dialog .p-dialog-header {\\n  padding: 1rem !important;\\n}\\n\\n[_nghost-%COMP%]     #preview .p-dialog .p-dialog-content {\\n  padding: 0 0.5rem 1rem 0.5rem !important;\\n}\\n\\n.month-name[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  font-size: 1rem;\\n}\\n\\n.details-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-bottom: 10px;\\n}\\n\\n[_nghost-%COMP%]     #detailsBtn button {\\n  width: 20px !important;\\n  height: 20px !important;\\n}\\n\\n.priority-details[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  padding: 0px 20px;\\n}\\n\\n.priority-details[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .priority-details[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n}\\n\\n.priority-details[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n}\\n\\n.priority-details[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style-type: disc;\\n  padding-left: 30px;\\n  margin-top: 10px;\\n}\\n\\n.priority-details[_ngcontent-%COMP%]   .close-button[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  float: right;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  margin-bottom: 2px !important;\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: 400;\\n  font-family: \\\"Roboto\\\";\\n}\\n\\n.radio-buttons-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin-bottom: 20px;\\n}\\n\\n.radio-buttons-container[_ngcontent-%COMP%]   input[type=radio][_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n  padding: 0px 5px 0px 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Validators","MessageService","UtilConstant","EnumList","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PpmScheduleTypeComponent_ul_57_Template_p_checkbox_onChange_2_listener","ɵɵrestoreView","_r15","ctx_r14","ɵɵnextContext","ɵɵresetView","checked","PpmScheduleTypeComponent_ul_57_Template_p_checkbox_ngModelChange_2_listener","$event","restoredCtx","week_r13","$implicit","isSelected","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","dayName","ɵɵtextInterpolate","ɵɵtextInterpolate2","ɵɵpipeBind2","date_r22","ɵɵtemplate","PpmScheduleTypeComponent_ng_template_113_div_32_p_accordionTab_5_li_3_Template","ɵɵpropertyInterpolate2","obj_r20","month","count","ctx_r19","monthDates","PpmScheduleTypeComponent_ng_template_113_div_32_Template_p_accordion_onOpen_4_listener","_r24","ctx_r23","onTabOpen","PpmScheduleTypeComponent_ng_template_113_div_32_Template_p_accordion_onClose_4_listener","ctx_r25","onTabClose","PpmScheduleTypeComponent_ng_template_113_div_32_p_accordionTab_5_Template","ctx_r17","uniqueMonthsData","PpmScheduleTypeComponent_ng_template_113_div_32_Template","PpmScheduleTypeComponent_ng_template_113_div_33_Template","ɵɵtextInterpolate1","ctx_r7","selectedCard","scheduleDetailsForm","controls","dateStart","value","totalOccurence","dateEnd","scheduleDetailsMsg","scheduleDates","length","PpmScheduleTypeComponent_ng_template_114_Template_p_button_click_0_listener","_r27","ctx_r26","displaySchedulePreview","ɵɵelement","PpmScheduleTypeComponent_ng_template_117_Template_p_button_click_0_listener","_r29","ctx_r28","displayPriorityDetails","ctx_r11","scheduleExistsMsg","PpmScheduleTypeComponent_ng_template_120_Template_p_button_click_0_listener","_r31","ctx_r30","displayScheduleExist","PpmScheduleTypeComponent_ng_template_120_Template_button_click_1_listener","ctx_r32","updateScheduleDates","PpmScheduleTypeComponent","constructor","formBuilder","confirmationService","enumsrv","planScheduleService","datePipe","messageService","today","Date","radioValue","typeOfMonthSelection","weekNames","weekNums","id","weekDays","dayOfMonth","day","isDayOfMonthVisible","isWeekOfMonthVisible","weeksArray","isError","weeksIncluded","displaySchedulePattern","weekNamesString","allDates","errorMsg","enumList","enumPlanShedData","planScheduleId","uniqueMonths","scheduleDataList","scheduleDescription","priorityList","priorityErr","isEdit","expandedIndex","isMsgAcptd","enumIsActiveData","planLocEqId","parentFun","group","required","checkDateValidation","noOfOccurence","daysFrequency","weeksFrequency","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","selectedWeekNumbers","selectedDayNumbers","monthsFrequency","selectedWeekNames","monthsFrequency2","yearFrequency","priority","isActive","ngOnInit","loadEnums","setDefaultDates","setTimeout","patchValue","getEnums","subscribe","res","map","x","Object","assign","filter","t","tableName","toLocaleUpperCase","fieldName","toLowerCase","unshift","error","getScheduleTypesByPlanLocEqId","reset","setEmptyForm","selectedScheduleData","data","scheduleData","type","getEnumById","planSchedule","formatDate","freq","weekDaysArr","split","index","monthDays","daysArr","sort","selectedDays","d","push","selectedWeekNamesArr","reduce","acc","weeksArr","weeks","selectedWeeks","w","getMonth","maxDate","setMonth","date","nextDate","setDate","getDate","enumKey","find","enumValue","getIdByEnum","saveRecurrence","bool","getScheduleDetails","description","slice","checkIsScheduleGenerated","text","confirmUpdate","maxScheduledDate","transform","updateParent","onSelectMonthlyType","event","currentTarget","confirmDialog","confirm","message","CANCEL_Msg","header","icon","key","accept","onContinue","startDate","endDate","planScheduleData","scheduleDetails","frequency","iterations","savePlanSchedule","userTimezoneOffset","getTimezoneOffset","a","getTime","control","undefined","setErrors","clearAsyncValidators","updateValueAndValidity","dateFrom","dateTo","selectCard","cardType","startDateStr","endDateStr","convertToOrdinal","weekDaysValues","weekLabel","join","sortedDays","element","monthLabel","toString","ordinalDayList","forEach","foundDay","dayIndex","indexOf","weekNumbers","daysOfWeek","previewDates","getCountOfOccurence","getUniqueMonths","datesLen","getDatesForMonth","months","getFullYear","some","m","checkScheduleExists","schedule","emit","number","clear","add","severity","summary","detail","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ConfirmationService","i3","EnumService","i4","PlanScheduleService","i5","DatePipe","_2","selectors","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","PpmScheduleTypeComponent_Template","rf","ctx","PpmScheduleTypeComponent_Template_p_button_click_30_listener","PpmScheduleTypeComponent_div_33_Template","PpmScheduleTypeComponent_Template_input_click_37_listener","PpmScheduleTypeComponent_div_47_Template","PpmScheduleTypeComponent_Template_input_click_50_listener","PpmScheduleTypeComponent_ul_57_Template","PpmScheduleTypeComponent_div_64_Template","PpmScheduleTypeComponent_Template_input_click_67_listener","PpmScheduleTypeComponent_Template_input_click_72_listener","PpmScheduleTypeComponent_Template_p_multiSelect_onChange_73_listener","PpmScheduleTypeComponent_Template_input_click_83_listener","PpmScheduleTypeComponent_Template_p_multiSelect_onChange_84_listener","PpmScheduleTypeComponent_Template_p_multiSelect_onChange_85_listener","PpmScheduleTypeComponent_Template_input_click_93_listener","PpmScheduleTypeComponent_div_103_Template","PpmScheduleTypeComponent_div_104_Template","PpmScheduleTypeComponent_Template_p_button_click_106_listener","PpmScheduleTypeComponent_Template_p_button_click_107_listener","PpmScheduleTypeComponent_Template_p_button_click_108_listener","PpmScheduleTypeComponent_Template_p_dialog_visibleChange_112_listener","PpmScheduleTypeComponent_ng_template_113_Template","PpmScheduleTypeComponent_ng_template_114_Template","PpmScheduleTypeComponent_Template_p_dialog_visibleChange_115_listener","PpmScheduleTypeComponent_ng_template_116_Template","PpmScheduleTypeComponent_ng_template_117_Template","PpmScheduleTypeComponent_Template_p_dialog_visibleChange_118_listener","PpmScheduleTypeComponent_ng_template_119_Template","PpmScheduleTypeComponent_ng_template_120_Template","errors","dirty","ɵɵclassProp","ɵɵpureFunction0","_c1","_c2","valid","ɵɵstyleMap","_c3","_c4","_c5","_c6"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\ppm-schedule\\widgets\\ppm-schedule-type\\ppm-schedule-type.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\ppm-schedule\\widgets\\ppm-schedule-type\\ppm-schedule-type.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Enums } from 'src/app/model/enums.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { PlanScheduleService } from '../../services/plan-schedule-services';\nimport { DatePipe } from '@angular/common';\nimport { EnumList } from 'src/app/model/enum-list.model';\n\n@Component({\n  selector: 'app-ppm-schedule-type',\n  templateUrl: './ppm-schedule-type.component.html',\n  styleUrls: ['./ppm-schedule-type.component.scss'],\n  providers: [MessageService]\n})\nexport class PpmScheduleTypeComponent {\n  scheduleDetailsForm: FormGroup;\n  today: Date = new Date();\n  radioValue: string = '';\n  selectedWeekNumbers!: any;\n  selectedDayNumbers!: any;\n  selectedWeekNames!: any[];\n  typeOfMonthSelection: string = 'dayOfMonth';\n  weekNames: any[] = [\n    { dayName: \"Monday\", isSelected: false },\n    { dayName: \"Tuesday\", isSelected: false },\n    { dayName: \"Wednesday\", isSelected: false },\n    { dayName: \"Thursday\", isSelected: false },\n    { dayName: \"Friday\", isSelected: false },\n    { dayName: \"Saturday\", isSelected: false },\n    { dayName: \"Sunday\", isSelected: false }\n  ];\n  weekNums: any[] = [{ id: '1' }, { id: '2' }, { id: '3' }, { id: '4' }];\n  weekDays: any[] = [\n    { dayName: \"Monday\" },\n    { dayName: \"Tuesday\" },\n    { dayName: \"Wednesday\" },\n    { dayName: \"Thursday\" },\n    { dayName: \"Friday\" },\n    { dayName: \"Saturday\" },\n    { dayName: \"Sunday\" }\n  ];\n  dayOfMonth: any[] = [{ day: '1' }, { day: '2' }, { day: '3' }, { day: '4' }, { day: '5' }, { day: '6' }, { day: '7' }, { day: '8' }, { day: '9' }, { day: '10' }, { day: '11' },\n  { day: '12' }, { day: '13' }, { day: '14' }, { day: '15' }, { day: '16' }, { day: '17' }, { day: '18' }, { day: '19' },\n  { day: '20' }, { day: '21' }, { day: '22' }, { day: '23' }, { day: '24' }, { day: '25' }, { day: '26' }, { day: '27' }, { day: '28' },\n  { day: '29' }, { day: '30' }, { day: '31' }];\n  isDayOfMonthVisible: boolean = false;\n  isWeekOfMonthVisible: boolean = false;\n  scheduleDetails!: any;\n  weeksArray = ['0', '0', '0', '0', '0', '0', '0'];\n  scheduleDetailsMsg: String = '';\n  isError: boolean = false;\n  weeksIncluded: any[] = [];\n  totalOccurence: number = 0;\n  displaySchedulePattern: boolean = false;\n  weekNamesString: string = '';\n  allDates: any[] = [];\n  maxDate!: Date;\n  errorMsg: string = '';\n  selectedCard: any = '';\n  enumList: EnumList[] = [];\n  enumPlanShedData: EnumList[] = [];\n  planScheduleId: number = 0;\n  scheduleDates: any[] = [];\n  displaySchedulePreview: boolean = false;\n  uniqueMonths: any[] = [];\n  scheduleDataList: any[] = [];\n  scheduleDescription: any = '';\n  data: any;\n  priorityList: any[] = [{ id: '0' }, { id: '1' }, { id: '2' }, { id: '3' }, { id: '4' }, { id: '5' }];\n  priorityErr: string = '';\n  displayPriorityDetails: boolean = false;\n  isEdit: boolean = false;\n  monthDates: any[] = [];\n  expandedIndex: number | null = null;\n  uniqueMonthsData: any[] = [];\n  displayScheduleExist: boolean = false;\n  scheduleExistsMsg: string = '';\n  maxScheduledDate: any;\n  isMsgAcptd:boolean = false;\n  selectedScheduleData:any;\n  enumIsActiveData:Enums[]= [];\n  @Input() planLocEqId: number = 0;\n  @Output() parentFun = new EventEmitter();\n  constructor(\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private enumsrv: EnumService,\n    private planScheduleService: PlanScheduleService,\n    private datePipe: DatePipe,\n    private messageService: MessageService,\n  ) {\n    this.scheduleDetailsForm = this.formBuilder.group({\n      dateStart: [null, [Validators.required, this.checkDateValidation()]],\n      dateEnd: [null, [Validators.required, this.checkDateValidation()]],\n      noOfOccurence: [''],\n      daysFrequency: [1],\n      weeksFrequency: [1],\n      Sunday: [''],\n      Monday: [''],\n      Tuesday: [''],\n      Wednesday: [''],\n      Thursday: [''],\n      Friday: [''],\n      Saturday: [''],\n      selectedWeekNumbers: [\"\"],\n      selectedDayNumbers: [\"\"],\n      monthsFrequency: [1],\n      selectedWeekNames: [''],\n      monthsFrequency2: [1],\n      yearFrequency: [1],\n      priority: [null, [Validators.required]],\n      isActive: [null, [Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadEnums();\n  }\n\n  setDefaultDates(dateStart: any, dateEnd: any, priority: any,isActive:any) {\n    setTimeout(() => {\n      this.scheduleDetailsForm.patchValue({\n        dateStart: dateStart,\n        dateEnd: dateEnd,\n        priority: priority,\n        isActive: isActive\n      });\n\n    }, 0);\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: EnumList[]) => {\n        this.enumList = res;\n        this.enumPlanShedData = this.enumList.map(x => Object.assign({}, x)).filter(t => t.tableName.toLocaleUpperCase() === 'plan_sched'.toLocaleUpperCase() && t.fieldName.toLowerCase() === 'type'.toLowerCase());\n        this.enumIsActiveData = this.enumList.map(x => Object.assign({}, x)).filter(t => t.tableName.toLocaleUpperCase() === 'plan_sched'.toLocaleUpperCase() && t.fieldName.toLowerCase() === 'is_active'.toLowerCase());\n        this.enumIsActiveData.unshift(new EnumList(0,'','','Make a selection',null));\n      },\n      error => {\n      }\n    );\n  }\n\n  getScheduleTypesByPlanLocEqId() {\n    this.scheduleDetailsForm.reset();\n    this.setEmptyForm();\n    this.selectedScheduleData = this.data.scheduleData;\n    if (this.selectedScheduleData) {\n      const type = this.getEnumById(this.selectedScheduleData.type);\n      this.selectedCard = type;\n      const planSchedule = this.selectedScheduleData;\n      this.planScheduleId = planSchedule.planScheduleId;\n      let dateStart = this.formatDate(planSchedule.dateStart);\n      let dateEnd = this.formatDate(planSchedule.dateEnd);\n      this.setDefaultDates(dateStart, dateEnd, planSchedule.priority,planSchedule.isActive);\n      switch (type) {\n        case \"daily\": {\n          setTimeout(() => {\n            this.scheduleDetailsForm.patchValue({\n              daysFrequency: planSchedule.freq\n            });\n\n          }, 0);\n          break\n        }\n        case \"weekly\": {\n          const weekDaysArr = planSchedule.weekDays.split(\",\");\n          weekDaysArr.map((value: any, index: any) => {\n            if (value === \"1\") {\n              this.weekNames[index].isSelected = true;\n            }\n          })\n          setTimeout(() => {\n            this.scheduleDetailsForm.patchValue({\n              weeksFrequency: planSchedule.freq\n            });\n\n          }, 0);\n          break\n        }\n        case \"monthly\": {\n          if (planSchedule.monthDays.length > 0) {//check for month days \n            this.typeOfMonthSelection = 'dayOfMonth';\n            this.isDayOfMonthVisible = true;\n            this.isWeekOfMonthVisible = false;\n            const daysArr = planSchedule.monthDays.split(\",\").sort();\n            let selectedDays: any[] = [];\n            daysArr.map((d: any) => {\n              selectedDays.push({ day: d })\n            })\n            setTimeout(() => {\n              this.scheduleDetailsForm.patchValue({\n                selectedDayNumbers: selectedDays,\n                monthsFrequency: planSchedule.freq\n              });\n\n            }, 0);\n          } else {\n            this.typeOfMonthSelection = 'weekOfMonth';\n            this.isWeekOfMonthVisible = true;\n            this.isDayOfMonthVisible = false;\n            const weekDaysArr = planSchedule.weekDays.split(\",\");\n            const selectedWeekNamesArr: any[] = weekDaysArr.reduce((acc: any[], value: any, index: any) => {\n              if (value === \"1\") {\n                acc.push({ dayName: this.weekDays[index].dayName });\n              }\n              return acc;\n            }, []);\n\n            const weeksArr = planSchedule.weeks.split(\",\").sort();\n            let selectedWeeks: any[] = [];\n            weeksArr.map((w: any) => {\n              selectedWeeks.push({ id: w })\n            })\n\n            setTimeout(() => {\n              this.scheduleDetailsForm.patchValue({\n                selectedWeekNumbers: selectedWeeks,\n                monthsFrequency2: planSchedule.freq,\n                selectedWeekNames: selectedWeekNamesArr\n              });\n            }, 0)\n          }\n          break\n        }\n        case \"annually\": {\n          setTimeout(() => {\n            this.scheduleDetailsForm.patchValue({\n              yearFrequency: planSchedule.freq\n            });\n\n          }, 0);\n          break\n        }\n      }\n    } else {\n      var month = new Date().getMonth() + 6;\n      this.maxDate = new Date(new Date().setMonth(month));\n      var date = new Date();\n      var nextDate = new Date(new Date().setDate(date.getDate() + 1));\n      this.setDefaultDates(date, nextDate, 0,null);//need to be dynamic in edit case\n      this.planLocEqId = this.data.planLocEqId;\n      this.selectedCard = \"daily\";\n    }\n\n  }\n\n  getEnumById(enumKey: any) {\n    return enumKey ? this.enumPlanShedData.find(t => t.enumKey == enumKey) != null ? this.enumPlanShedData.find(t => t.enumKey == enumKey)?.enumValue : '' : '';\n  }\n\n  getIdByEnum(enumValue: any) {\n    return enumValue ? this.enumPlanShedData.find(t => t.enumValue == enumValue) != null ? this.enumPlanShedData.find(t => t.enumValue == enumValue)?.enumKey : '' : '';\n  }\n\n  saveRecurrence() {\n    const bool = this.getScheduleDetails();\n    if (bool) {\n      if (this.isEdit && this.selectedScheduleData.description.slice(0, -1) != this.scheduleDescription.slice(0, -1) && !this.isMsgAcptd) {\n        this.planScheduleService.checkIsScheduleGenerated(this.selectedScheduleData.planScheduleId).subscribe((res: any) => {\n          if (res.text) {\n            this.confirmUpdate();\n          } else {\n            this.maxScheduledDate = res;\n            this.scheduleExistsMsg = `The Requests have already been generated for this schedule until ${this.datePipe.transform(new Date(res), \"dd MMM yyyy\")}.\n            Any modifications to the schedule will take effect starting from the ${this.datePipe.transform(new Date(res).setDate(new Date(res).getDate()+1), \"dd MMM yyyy\")}\n            Would you like to proceed with these changes?`;\n            this.displayScheduleExist = true;\n          }\n        })\n      } else if (this.isEdit && this.selectedScheduleData.description == this.scheduleDescription) {\n        this.scheduleDetailsForm.reset();\n        this.setEmptyForm();\n        this.updateParent('save');\n      } else {\n        this.confirmUpdate();\n      }\n\n    }\n  }\n\n  onSelectMonthlyType(event: any) {\n    if (event.currentTarget.id == 'dayOfMonth') {\n      this.isError = false;\n      this.isDayOfMonthVisible = true;\n      this.isWeekOfMonthVisible = false;\n      this.typeOfMonthSelection = 'dayOfMonth';\n      setTimeout(() => {\n        this.scheduleDetailsForm.patchValue({\n          monthsFrequency2: 1,\n          selectedWeekNames: '',\n          selectedWeekNumbers: ''\n        });\n\n      }, 10);\n    } else if (event.currentTarget.id == 'weekOfMonth_months') {\n      this.isError = false;\n      this.isWeekOfMonthVisible = true;\n      this.isDayOfMonthVisible = false;\n      this.typeOfMonthSelection = 'weekOfMonth';\n      setTimeout(() => {\n        this.scheduleDetailsForm.patchValue({\n          monthsFrequency: 1,\n          selectedDayNumbers: ''\n        });\n\n      }, 10);\n    }\n  }\n\n  confirmDialog(): void {\n    this.confirmationService.confirm({\n      message: UtilConstant.CANCEL_Msg,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      key: 'wrGrid',\n      accept: () => {\n        this.scheduleDetailsForm.reset();\n        this.setEmptyForm();\n        this.updateParent('cancel');\n\n      }\n    });\n  }\n\n  onContinue() {\n    this.displaySchedulePattern = false;\n    var startDate = this.datePipe.transform(this.scheduleDetailsForm.controls.dateStart.value, \"yyyy-MM-dd\");\n    var endDate = this.datePipe.transform(this.scheduleDetailsForm.controls.dateEnd.value, \"yyyy-MM-dd\");\n    let planScheduleData = {\n      planScheduleId: this.planScheduleId,\n      planLocEqId: this.planLocEqId,\n      type: this.getIdByEnum(this.scheduleDetails.type),\n      freq: this.scheduleDetails.frequency,\n      iterations: this.totalOccurence,\n      weekDays: this.scheduleDetails.weekDays,\n      weeks: this.scheduleDetails.weeks,\n      monthDays: this.scheduleDetails.monthDays,\n      dateStart: startDate,\n      dateEnd: endDate,\n      description: this.scheduleDescription,\n      priority: this.scheduleDetails.priority,\n      scheduleDates: this.scheduleDates,\n      isEdit: this.isEdit,\n      isActive: this.scheduleDetails.isActive,\n    }\n\n    this.planScheduleService.savePlanSchedule(planScheduleData).subscribe((res: any) => {\n      if (res.planScheduleId) {\n        this.scheduleDetailsForm.reset();\n        this.setEmptyForm();\n        this.updateParent('save');\n      }\n    })\n  }\n\n  formatDate(date: Date) {\n    if (date != null) {\n      var date = new Date(date);\n      var userTimezoneOffset = date.getTimezoneOffset() * 60000;\n      var a = new Date(date.getTime() - userTimezoneOffset);\n      return a;\n    } else {\n      return null;\n    }\n  }\n\n  checkDateValidation(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined && control.value != null) {\n        this.scheduleDetailsForm.controls['dateStart'].setErrors(null);\n        this.scheduleDetailsForm.controls['dateEnd'].setErrors(null);\n        this.scheduleDetailsForm.clearAsyncValidators();\n        this.scheduleDetailsForm.updateValueAndValidity();\n\n        var dateFrom = new Date(this.scheduleDetailsForm.controls['dateStart'].value);\n        var dateTo = new Date(this.scheduleDetailsForm.controls['dateEnd'].value);\n\n        if (dateFrom.getTime() >= dateTo.getTime() && this.scheduleDetailsForm.controls['dateEnd'].value != null) {\n          this.scheduleDetailsForm.controls['dateStart'].setErrors({ 'incorrect': true });\n          this.scheduleDetailsForm.updateValueAndValidity();\n          this.errorMsg = ' date end should be greater than date start.'\n          return { 'incorrect': true };\n        } else {\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n\n  checked() {\n    this.isError = false;\n  }\n\n  selectCard(cardType: string) {\n    this.selectedCard = cardType;\n    this.displaySchedulePreview = false;\n    if (cardType == 'monthly') {\n      this.isDayOfMonthVisible = true;\n    } else {\n      this.isDayOfMonthVisible = false;\n      this.isWeekOfMonthVisible = false;\n    }\n  }\n\n  setEmptyForm() {\n    this.typeOfMonthSelection == '';\n    this.isDayOfMonthVisible = false;\n    this.isWeekOfMonthVisible = false;\n    this.planScheduleId = 0;\n    setTimeout(() => {\n      this.scheduleDetailsForm.patchValue({\n        daysFrequency: 1,\n        weeksFrequency: 1,\n        monthsFrequency: 1,\n        monthsFrequency2: 1,\n        yearFrequency: 1,\n        selectedWeekNames: []\n\n      });\n\n    }, 0);\n  }\n\n  getScheduleDetails() {\n    var startDate = this.formatDate(this.scheduleDetailsForm.controls.dateStart.value);\n    var endDate = this.formatDate(this.scheduleDetailsForm.controls.dateEnd.value);\n    let startDateStr = this.datePipe.transform(startDate, \"dd MMM yyyy\");\n    let endDateStr = this.datePipe.transform(endDate, \"dd MMM yyyy\");\n    switch (this.selectedCard) {\n      case \"daily\": {\n        const frequency = this.scheduleDetailsForm.controls.daysFrequency.value;\n        if (!frequency) {\n          return;\n        }\n        this.scheduleDetails = {\n          dateStart: startDate,\n          dateEnd: endDate,\n          type: \"daily\",\n          frequency: frequency,\n          monthDays: '',\n          weekDays: '',\n          weeks: ''\n        };\n        this.scheduleDetailsMsg = `Recurring every ${frequency > 1 ? this.convertToOrdinal(frequency) : \"\"} day between ${startDateStr} and ${endDateStr}`;\n        break;\n      }\n      case \"weekly\": {\n        const weekDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n        this.weeksIncluded = [];\n        this.scheduleDetailsMsg = '';\n\n        const weekDaysValues = weekDays.map(day => {\n          const control = this.scheduleDetailsForm.controls[day];\n          return control.value ? \"1\" : \"0\";\n        });\n        this.weeksIncluded = weekDays.filter((day, index) => weekDaysValues[index] === \"1\");\n        const frequency = this.scheduleDetailsForm.controls.weeksFrequency.value;\n        const weekLabel = frequency > 1 ? `${this.convertToOrdinal(frequency)} week` : 'week';\n\n        if (this.weeksIncluded.length === 0 || !frequency) {\n          this.isError = true;\n          return;\n        }\n\n        this.scheduleDetails = {\n          dateStart: startDate,\n          dateEnd: endDate,\n          type: \"weekly\",\n          frequency: frequency,\n          monthDays: '',\n          weekDays: weekDaysValues.join(\",\"),\n          weeks: ''\n        };\n\n        this.scheduleDetailsMsg = `Recurring every ${weekLabel} on ${this.weeksIncluded.join(\", \")} between ${startDateStr} and ${endDateStr}`;\n        break;\n      }\n      case \"monthly\": {\n        this.scheduleDetailsMsg = '';\n        this.isError = false;\n\n        if (this.typeOfMonthSelection === 'dayOfMonth') {\n          const selectedDayNumbers = this.scheduleDetailsForm.controls.selectedDayNumbers.value || [];\n\n          if (selectedDayNumbers.length === 0 || this.scheduleDetailsForm.controls.monthsFrequency.value <= 0) {\n            this.isError = true;\n            return;\n          }\n\n          const sortedDays = selectedDayNumbers.map((element: any) => element.day).sort();\n          const frequency = this.scheduleDetailsForm.controls.monthsFrequency.value;\n          const monthLabel = frequency > 1 ? \"months \" : \"month \";\n\n          this.scheduleDetails = {\n            dateStart: startDate,\n            dateEnd: endDate,\n            type: \"monthly\",\n            frequency: frequency,\n            monthDays: sortedDays.toString(),\n            weekDays: '',\n            weeks: ''\n          };\n\n          const ordinalDayList = sortedDays.map((day: any) => this.convertToOrdinal(day)).join(\", \");\n          this.scheduleDetailsMsg = `Recurring every ${frequency > 1 ? frequency : \"\"} ${monthLabel} on  ${ordinalDayList}  of month between ${startDateStr} and ${endDateStr}`;\n        } else if (this.typeOfMonthSelection === 'weekOfMonth') {\n          this.weeksArray = [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"];\n          this.weekNamesString = '';\n\n          this.scheduleDetailsForm.controls.selectedWeekNames.value?.forEach((element: any) => {\n            const foundDay = this.weekDays.find(day => day.dayName === element.dayName);\n            if (foundDay) {\n              const dayIndex = this.weekDays.indexOf(foundDay);\n              this.weeksArray[dayIndex] = '1';\n              this.weekNamesString += foundDay.dayName + \", \";\n            }\n          });\n\n          this.weekNamesString = this.weekNamesString.slice(0, -2);\n\n          const selectedWeekNumbers = this.scheduleDetailsForm.controls.selectedWeekNumbers.value || [];\n\n          if (selectedWeekNumbers.length === 0 || !this.weekNamesString || this.scheduleDetailsForm.controls.monthsFrequency2.value <= 0) {\n            this.isError = true;\n            return;\n          }\n\n          const frequency = this.scheduleDetailsForm.controls.monthsFrequency2.value;\n          const weekLabel = frequency === 1 ? 'month' : frequency + ' months';\n\n          const weeks = selectedWeekNumbers.map((element: any) => element.id).join(\",\");\n          const weekNumbers = selectedWeekNumbers.map((element: any) => { return this.convertToOrdinal(element.id) })\n          const daysOfWeek = this.weeksArray.join(\",\");\n\n          this.scheduleDetails = {\n            dateStart: startDate,\n            dateEnd: endDate,\n            type: \"monthly\",\n            frequency: frequency,\n            monthDays: '',\n            weekDays: daysOfWeek.toString(),\n            weeks: weeks.toString()\n          };\n\n          this.scheduleDetailsMsg = `Recurring every ${weekLabel} on ${weekNumbers.join(\", \")} ${this.weekNamesString} of a month between ${startDateStr} and ${endDateStr}`;\n        }\n        break;\n      }\n      case \"annually\": {\n        const frequency = this.scheduleDetailsForm.controls.yearFrequency.value;\n        if (!frequency) {\n          return;\n        }\n        this.scheduleDetails = {\n          dateStart: startDate,\n          dateEnd: endDate,\n          type: \"annually\",\n          frequency: frequency,\n          monthDays: \"\",\n          weekDays: \"\",\n          weeks: ''\n        };\n        this.scheduleDetailsMsg = `Recurring every ${frequency > 1 ? this.convertToOrdinal(frequency) : \"\"} year between ${startDateStr} and ${endDateStr}`;\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n    this.scheduleDetails.priority = this.scheduleDetailsForm.controls.priority.value;\n    this.scheduleDetails.isActive = this.scheduleDetailsForm.controls.isActive.value;\n    // this.scheduleDescription = `Once ${this.scheduleDetailsMsg} from ${this.datePipe.transform(startDate, \"dd MMM yyyy\")} to ${this.datePipe.transform(endDate, \"dd MMM yyyy\")}`\n    this.scheduleDescription = this.scheduleDetailsMsg + \" \" + this.scheduleDetailsForm.controls.priority.value;\n    return true;\n  }\n\n  previewDates() {\n    this.displaySchedulePreview = false;\n    const bool = this.getScheduleDetails();\n    if (bool) {\n      this.planScheduleService.getCountOfOccurence(this.scheduleDetails).subscribe((res: any) => {\n        this.scheduleDates = res;\n        this.totalOccurence = res.length;\n        this.uniqueMonths = this.getUniqueMonths();\n        this.uniqueMonthsData = this.uniqueMonths.map(month => {\n          let datesLen = this.getDatesForMonth(month).length;\n          return { month: month, count: datesLen }\n        })\n        this.displaySchedulePreview = true;\n      })\n    }\n\n  }\n\n  // Helper function to get all unique months\n  getUniqueMonths(): Date[] {\n    const months: Date[] = [];\n    this.scheduleDates.forEach((date) => {\n      date = new Date(date);\n      const month = new Date(date.getFullYear(), date.getMonth(), 1);\n      if (!months.some((m) => m.getTime() === month.getTime())) {\n        months.push(month);\n      }\n    });\n    return months;\n  }\n\n  // Helper function to get all dates for a specific month\n  getDatesForMonth(month: Date): Date[] {\n    return this.scheduleDates.filter(\n      (date) => new Date(date).getMonth() === month.getMonth() && new Date(date).getFullYear() === month.getFullYear()\n    );\n  }\n\n  checkScheduleExists() {\n    const planSchedule = this.scheduleDataList.length ? this.scheduleDataList.find((schedule: any) => schedule.description === this.scheduleDescription) : null;\n    return planSchedule\n  }\n\n  updateParent(event: any) {\n    this.parentFun.emit(event);\n  }\n\n  onTabOpen(event: any) {\n    this.expandedIndex = event.index;\n    let month = this.uniqueMonths[event.index];\n    this.monthDates = this.getDatesForMonth(month);\n  }\n\n  onTabClose(event: any) {\n    this.expandedIndex === null;\n  }\n\n  convertToOrdinal(number: number) {\n    switch (number % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n      default:\n        return number + \"th\";\n    }\n  }\n\n  confirmUpdate() {\n    const planSchedule = this.checkScheduleExists();\n    if (planSchedule) {\n      this.messageService.clear();\n      this.messageService.add({ key: 'exists', severity: 'warn', summary: 'Schedule Exists', detail: 'Same schedule for this plan already exists' });\n      return\n    }\n    this.planScheduleService.getCountOfOccurence(this.scheduleDetails).subscribe((res: any) => {\n      this.scheduleDates = res;\n      this.totalOccurence = res.length;\n      this.onContinue();\n    })\n  }\n\n  updateScheduleDates() {\n    var date = new Date(this.maxScheduledDate);\n    var nextDate = new Date(date.setDate(date.getDate() + 1));\n    this.selectedScheduleData.dateStart = nextDate;\n    this.today = nextDate;\n    if (new Date(nextDate) >= new Date(this.selectedScheduleData.dateEnd)) {\n      this.selectedScheduleData.dateEnd = new Date(new Date(nextDate).setDate(new Date(nextDate).getDate() + 1))\n    }\n    this.getScheduleTypesByPlanLocEqId();\n    this.isMsgAcptd = true;\n    this.displayScheduleExist = false;\n\n  }\n}\n\n","<div class=\"card\">\n  <form [formGroup]=\"scheduleDetailsForm\">\n    <table>\n      <tr>\n        <td style=\"width: 20%\">\n          <div class=\"input-label-custom\">\n            <div class=\"p-fluid\">\n              <div class=\"p-field\">\n                <label class='form-field-lable control-label'>Start Date</label>\n                <p-calendar appendTo=\"body\" [minDate]=\"today\" dateFormat=\"dd M yy\" name=\"dateStart\"\n                  formControlName=\"dateStart\" [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td style=\"width: 20%\">\n          <div class=\"input-label-custom\">\n            <div class=\"p-fluid\">\n              <div class=\"p-field\">\n                <label class='form-field-lable control-label'>End Date</label>\n                <p-calendar appendTo=\"body\" [minDate]=\"today\" dateFormat=\"dd M yy\" name=\"dateEnd\"\n                  formControlName=\"dateEnd\" [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n              </div>\n            </div>\n          </div>\n        </td>\n        <td style=\"width: 25%\">\n          <div class=\"input-label-custom \" style=\"width: 90%;\">\n            <label class='form-field-lable control-label'>Is Active</label>\n            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumIsActiveData\" formControlName=\"isActive\"\n              [searchable]=\"true\" bindLabel=\"enumValue\" bindValue=\"enumKey\" placeholder=\"Make a selection\"\n              class=\"ng-select-dropdown\">\n              <!-- (change)=\"checkPriorityExists($event)\" -->\n            </ng-select>\n          </div>\n        </td>\n        <td style=\"width: 35%\">\n          <div style=\"display: flex;\">\n            <div class=\"input-label-custom \" style=\"width: 90%;\">\n              <label class='form-field-lable control-label'>Priority</label>\n              <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"priorityList\" formControlName=\"priority\"\n                [searchable]=\"true\" bindLabel=\"id\" bindValue=\"id\" placeholder=\"Make a selection\"\n                class=\"ng-select-dropdown\">\n                <!-- (change)=\"checkPriorityExists($event)\" -->\n              </ng-select>\n            </div>\n            <div style=\"display: flex;  margin-top: 25px;\">\n              <p-button id=\"detailsBtn\" icon=\"pi pi-info-circle\" matTooltip=\"View Details\"\n                (click)=\"displayPriorityDetails = true\" styleClass=\"p-button-rounded\"></p-button>\n            </div>\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td style=\"width: 30%\">\n          <div\n            *ngIf=\"(scheduleDetailsForm.controls['dateStart']?.errors && scheduleDetailsForm.controls['dateStart'].dirty) || \n                          (scheduleDetailsForm.controls['dateEnd']?.errors && scheduleDetailsForm.controls['dateEnd'].dirty)\">\n            <label class='form-field-lable' style=\"color:red;\">Start date should be less than end\n              date</label>\n          </div>\n        </td>\n        <td></td>\n      </tr>\n    </table>\n    <!-- Daily card -->\n    <div class=\"card\" style=\"margin: 0px 3px 0px 3px;\">\n      <div class=\"heading-container\">\n        <input class=\"header-radio\" type=\"radio\" name=\"selectedCard\" (click)=\"selectCard('daily')\"\n          [checked]=\"selectedCard === 'daily'\">\n        <h2 class=\"heading\">Daily</h2>\n      </div>\n      <div [class.card-readonly]=\"selectedCard !== 'daily'\" style=\"padding-left: 10px;\">\n        <div class=\"input-label-custom \" style=\"display: flex; justify-content: baseline; margin-top: 5px;\">\n          <label class='form-field-lable'>Every:</label>\n          <input type=\"text\" NumbersOnly class=\"form-control\" formControlName=\"daysFrequency\" maxlength=\"9\">\n          <label class='form-field-lable'>day(s)</label>\n        </div>\n        <div *ngIf=\"scheduleDetailsForm.controls.daysFrequency.value < 1\">\n          <label class='form-field-lable' style=\"color:red;\">Value Can not be less than one</label>\n        </div>\n      </div>\n    </div>\n    <!-- Weekly Card -->\n    <div class=\"card\" style=\"margin: 0px 3px 0px 3px;\">\n      <div class=\"heading-container\">\n        <input class=\"header-radio\" type=\"radio\" name=\"selectedCard\" (click)=\"selectCard('weekly')\"\n          [checked]=\"selectedCard === 'weekly'\">\n        <h2 class=\"heading\">Weekly</h2>\n      </div>\n      <div [class.card-readonly]=\"selectedCard !== 'weekly'\" style=\"padding-left: 10px;\">\n        <div class=\"input-label-custom \" style=\" margin-top: 5px; display: flex; overflow: auto;\">\n          <label class='form-field-lable'>Every:</label>\n          <ul *ngFor=\"let week of weekNames\" class=\"field-checkbox\">\n            <div class=\"card-container\">\n              <p-checkbox name=\"group2\" (onChange)=\"checked()\" [formControlName]=[week.dayName] [value]=\"week.dayName\"\n                [inputId]=\"week.dayName\" binary=\"true\" [(ngModel)]=\"week.isSelected\">\n              </p-checkbox>\n              <label class='form-field-lable' [for]=\"week.dayName\"\n                style=\"margin-left:3px !important;\">{{week.dayName}}</label>\n\n            </div>\n          </ul>\n        </div>\n        <div class=\"input-label-custom \" style=\"display: flex;justify-content: baseline;\">\n          <label class='form-field-lable'>for every</label>\n          <input type=\"text\" NumbersOnly class=\"form-control\" formControlName=\"weeksFrequency\" maxlength=\"9\">\n          <label class='form-field-lable'>week(s)</label>\n        </div>\n        <div *ngIf=\"scheduleDetailsForm.controls.weeksFrequency.value < 1\">\n          <label class='form-field-lable' style=\"color:red;\">Value Can not be less than one</label>\n        </div>\n      </div>\n    </div>\n    <!-- Monthly Card -->\n    <div class=\"card\" style=\"margin: 0px 3px 0px 3px;\">\n      <div class=\"heading-container\">\n        <input class=\"header-radio\" type=\"radio\" name=\"selectedCard\" (click)=\"selectCard('monthly')\"\n          [checked]=\"selectedCard === 'monthly'\">\n        <h2 class=\"heading\">Monthly</h2>\n      </div>\n      <div [class.card-readonly]=\"selectedCard !== 'monthly'\" style=\"padding-left: 10px;overflow: auto;\">\n        <div style=\" display: flex; flex-direction: row; margin-top: 15px;\">\n          <input type=\"radio\" name=\"monthly_type\" id=\"dayOfMonth\" (click)=\"onSelectMonthlyType($event)\"\n            [checked]=\"isDayOfMonthVisible\">\n          <p-multiSelect [options]=\"dayOfMonth\" appendTo=\"body\" (onChange)=\"checked()\"\n            formControlName=\"selectedDayNumbers\" [placeholder]=\"'Select day(s)'\" optionLabel=\"day\"\n            [readonly]=\"!isDayOfMonthVisible\" [panelStyle]=\"{'width':'150px'}\"></p-multiSelect>\n          <label class='form-field-lable'>day(s)</label>\n          <label class='form-field-lable'> every</label>\n          <input type=\"text\" NumbersOnly class=\"form-control\" [readonly]=\"!isDayOfMonthVisible\"\n            formControlName=\"monthsFrequency\" maxlength=\"9\">\n          <label style=\"margin-left:4px\" class='form-field-lable'>month(s)</label>\n\n        </div>\n\n        <div #mydiv style=\" display: flex; flex-direction: row;\">\n          <input type=\"radio\" name=\"monthly_type\" id=\"weekOfMonth_months\" (click)=\"onSelectMonthlyType($event)\"\n            placeholder=\"1\" [checked]=\"isWeekOfMonthVisible\">\n          <p-multiSelect [options]=\"weekNums\" [placeholder]=\"'Select week(s)'\" (onChange)=\"checked()\"\n            [readonly]=\"!isWeekOfMonthVisible\" formControlName=\"selectedWeekNumbers\" appendTo=\"body\" optionLabel=\"id\"\n            [panelStyle]=\"{'width':'150px'}\"></p-multiSelect>\n          <p-multiSelect [options]=\"weekDays\" (onChange)=\"checked()\" formControlName=\"selectedWeekNames\"\n            [readonly]=\"!isWeekOfMonthVisible\" [placeholder]=\"'Select day(s) of week'\" appendTo=\"body\"\n            optionLabel=\"dayName\" [panelStyle]=\"{'width':'200px'}\"></p-multiSelect>\n          <label class='form-field-lable'>every</label>\n          <input type=\"text\" NumbersOnly class=\"form-control\" [readonly]=\"!isWeekOfMonthVisible\"\n            formControlName=\"monthsFrequency2\" id=\"dayOfMonth_months\" maxlength=\"9\">\n          <label style=\"margin-left:4px\" class='form-field-lable'>month(s)</label>\n        </div>\n      </div>\n    </div>\n    <!-- Annual card -->\n    <div class=\"card\" style=\"margin: 0px 3px 0px 3px;\">\n      <div class=\"heading-container\">\n        <input class=\"header-radio\" type=\"radio\" name=\"selectedCard\" (click)=\"selectCard('annually')\"\n          [checked]=\"selectedCard === 'annually'\">\n        <h2 class=\"heading\">Annually</h2>\n      </div>\n      <div [class.card-readonly]=\"selectedCard !== 'annually'\" style=\"padding-left: 10px;\">\n        <div class=\"input-label-custom \" style=\"display: flex; justify-content: baseline; margin-top: 5px;\">\n          <label class='form-field-lable'>Every:</label>\n          <input type=\"text\" NumbersOnly class=\"form-control\" formControlName=\"yearFrequency\" maxlength=\"9\">\n          <label class='form-field-lable'>year(s)</label>\n        </div>\n        <div *ngIf=\"scheduleDetailsForm.controls.yearFrequency.value < 1\">\n          <label class='form-field-lable' style=\"color:red;\">Value Can not be less than one</label>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"isError\">\n      <label class='form-field-lable' style=\"color:red;\">Provide the required\n        information</label>\n    </div>\n  </form>\n\n  <mat-dialog-actions align=\"end\" class=\"mat-dialog-actions-ext\">\n    <p-button label=\"Preview\" (click)=\"previewDates()\" [disabled]=\"!scheduleDetailsForm.valid\" icon=\"pi pi-eye\">\n    </p-button>\n    <p-button label=\"Save\" (click)=\"saveRecurrence()\" [disabled]=\"!scheduleDetailsForm.valid\" icon=\"pi pi-check\"\n      [style]=\"{'margin-left': '.5em'}\">\n    </p-button>\n    <p-button label=\"Cancel\" icon=\"pi pi-times\" (click)=\"confirmDialog()\" styleClass=\"p-button-secondary\"\n      [style]=\"{'margin-left': '.5em'}\"></p-button>\n  </mat-dialog-actions>\n\n</div>\n<p-toast key=\"wrSave\" position=\"top-right\"></p-toast>\n<p-toast key=\"exists\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"wrGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n<!-- Schedule Preview -->\n<p-dialog header=\"Schedule Preview\" [(visible)]=\"displaySchedulePreview\" [closable]=\"false\" [style]=\"{width: '30vw'}\"\n  [modal]=\"true\" id=\"preview\">\n  <ng-template pTemplate=\"body\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <table>\n          <tr>\n            <td>\n              <p><span class=\"month-name\">Type:</span> {{ selectedCard }}</p>\n            </td>\n            <td>\n              <p style=\"margin-left: 25px;\"><span class=\"month-name\">Start Date:</span> {{\n                scheduleDetailsForm.controls.dateStart.value | date: 'dd MMM\n                yyyy' }}</p>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <p><span class=\"month-name\">Total Requests: </span>{{ totalOccurence}} </p>\n            </td>\n            <td>\n              <p style=\"margin-left: 25px;\"><span class=\"month-name\">End Date:</span> {{\n                scheduleDetailsForm.controls.dateEnd.value | date: 'dd MMM\n                yyyy' }}</p>\n            </td>\n          </tr>\n        </table>\n        <div style=\"margin:10px 0px 10px 0px;\">\n          <p><span class=\"month-name\">Description:</span> {{scheduleDetailsMsg}}</p>\n\n        </div>\n        <div *ngIf=\"scheduleDates.length > 0\">\n          <p><span class=\"month-name\">Schedule Dates for Each Month:</span></p>\n          <p-accordion (onOpen)=\"onTabOpen($event)\" (onClose)=\"onTabClose($event)\">\n            <p-accordionTab *ngFor=\"let obj of uniqueMonthsData \"\n              header=\"{{ obj.month | date: 'MMMM yyyy' }} ({{obj.count}})\">\n              <ul class=\"list-group\">\n                <li *ngFor=\"let date of monthDates\" class=\"list-group-item\">\n                  {{ date | date: 'dd MMM yyyy' }} - {{ date | date: 'EEEE' }}\n                </li>\n              </ul>\n            </p-accordionTab>\n          </p-accordion>\n        </div>\n\n        <div *ngIf=\"scheduleDates.length === 0\" class=\"alert alert-warning mt-3\">\n          No schedule dates found within the selected range.\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template pTemplate=\"footer\">\n    <p-button icon=\"pi pi-times\" (click)=\"displaySchedulePreview=false\" label=\"Close\" styleClass=\"p-button-secondary\">\n    </p-button>\n  </ng-template>\n</p-dialog>\n<!-- Priority Detailed Information with example -->\n<p-dialog [(visible)]=\"displayPriorityDetails\" [closable]=\"false\" [style]=\"{width: '40vw'}\" [modal]=\"true\" id=\"preview\">\n  <ng-template pTemplate=\"body\">\n    <div class=\"priority-details\">\n      <h3>Priority Details</h3>\n      <hr>\n      <p>\n        <strong>Priorities are defined on a scale from 0 to 5, with 0 being the highest priority.</strong>\n      </p>\n      <p>\n        The priority field is utilized to manage plan suppression.\n      </p>\n\n      <!-- <h4>Example:</h4> -->\n      <p>Consider a cleaning process plan linked to the floor, and we have created two schedules for the month of\n        January 2023:</p>\n      <ul>\n        <li>First Schedule: Daily cleaning schedule</li>\n        <li>Second Schedule: Weekly deep cleaning schedule (every Sunday)</li>\n      </ul>\n\n      <h4>Case 1:</h4>\n      <p>Assigning both schedules a priority of 0</p>\n      <p>The system will generate requests for both schedules as follows:</p>\n      <ul>\n        <li>First Schedule - Daily cleaning schedule: Every day for the month of January 2023.</li>\n        <li>Second Schedule - Weekly deep cleaning schedule: Every Sunday for the month of January 2023.</li>\n      </ul>\n\n      <h4>Case 2:</h4>\n      <p>Setting priority 1 for the first schedule and 0 for the second schedule</p>\n      <p>The system will create requests as follows:</p>\n      <ul>\n        <li>First Schedule - Daily cleaning schedule: Every day for the month of January 2023, except Sundays. Since the\n          second schedule has a higher priority (0), it will suppress the first schedule on Sundays, preventing requests\n          for that day.</li>\n        <li>Second Schedule - Weekly deep cleaning schedule: Every Sunday for the month of January 2023.</li>\n      </ul>\n    </div>\n  </ng-template>\n  <ng-template pTemplate=\"footer\">\n    <p-button icon=\"pi pi-times\" (click)=\"displayPriorityDetails=false\" label=\"Close\" styleClass=\"p-button-secondary\">\n    </p-button>\n  </ng-template>\n</p-dialog>\n<!-- Schedule Exists Message -->\n<p-dialog header=\"Message\" [(visible)]=\"displayScheduleExist\" [style]=\"{width: '20vw'}\" [closable]=\"false\"\n  [draggable]=\"false\" [resizable]=\"false\" [modal]=\"true\">\n  <ng-template pTemplate=\"body\">\n    <p><span class=\"message\">{{scheduleExistsMsg}}</span></p>\n  </ng-template>\n  <ng-template pTemplate=\"footer\">\n    <p-button icon=\"pi pi-times\" (click)=\"displayScheduleExist=false\" label=\"Close\"\n      styleClass=\"p-button-secondary\"></p-button>\n    <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Continue\" (click)=\"updateScheduleDates()\"></button>\n  </ng-template>\n</p-dialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}