{"ast":null,"code":"import { shareReplay } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nconst CACHE_SIZE = 1;\nexport let BuildingService = /*#__PURE__*/(() => {\n  class BuildingService {\n    constructor(blService, blDetailService, flDetailService, rmDetailService, compDetailService, siteSrv) {\n      this.blService = blService;\n      this.blDetailService = blDetailService;\n      this.flDetailService = flDetailService;\n      this.rmDetailService = rmDetailService;\n      this.compDetailService = compDetailService;\n      this.siteSrv = siteSrv;\n    }\n    searchCompanyCode(term) {\n      if (!this.CompCache$ || this.CompCache$) {\n        this.CompCache$ = this.getCompanyCode(term).pipe(shareReplay(CACHE_SIZE));\n      } else {}\n      return this.CompCache$;\n    }\n    getCompanyCode(name) {\n      if (name == null || name === '') {\n        return of([]);\n      }\n      return this.compDetailService.getAllById('comp', 'searchComp', name);\n    }\n    searchSiteCode(term) {\n      if (!this.SiteCache$ || this.SiteCache$) {\n        this.SiteCache$ = this.getSiteCode(term).pipe(shareReplay(CACHE_SIZE));\n      } else {}\n      return this.SiteCache$;\n    }\n    searchBuildingCode(term) {\n      if (!this.BLCache$ || this.BLCache$) {\n        this.BLCache$ = this.getBuildingCode(term).pipe(shareReplay(CACHE_SIZE));\n      } else {}\n      return this.BLCache$;\n    }\n    getBuildingCode(name) {\n      if (name == null || name === '') {\n        return of([]);\n      }\n      return this.blDetailService.getAllById('bl', 'searchBl', name);\n    }\n    getSiteCode(name) {\n      if (name == null || name === '') {\n        return of([]);\n      }\n      return this.siteSrv.getAllById('site', 'searchSite', name);\n    }\n    searchFloorCode(term) {\n      if (!this.FLCache$ || this.FLCache$) {\n        this.FLCache$ = this.getFloorCode(term).pipe(shareReplay(CACHE_SIZE));\n      } else {}\n      return this.FLCache$;\n    }\n    getFloorCode(name) {\n      if (name == null || name === '') {\n        return of([]);\n      }\n      return this.flDetailService.getAllById('fl', 'searchFl', name);\n    }\n    searchRoomCode(term) {\n      if (!this.RMCache$ || this.RMCache$) {\n        this.RMCache$ = this.getRoomCode(term).pipe(shareReplay(CACHE_SIZE));\n      } else {}\n      return this.RMCache$;\n    }\n    getRoomCode(name) {\n      if (name == null || name === '') {\n        return of([]);\n      }\n      return this.rmDetailService.getAllById('rm', 'searchRM', name);\n    }\n    getBlList(data) {\n      return this.blService.search('bl', 'getBlList', data);\n    }\n    getFlList(data) {\n      return this.blService.search('fl', 'getFlList', data);\n    }\n    getRmList(data) {\n      return this.blService.search('rm', 'getRmList', data);\n    }\n    getBlListPaginated(data) {\n      return this.blService.search('bl', 'getBlListPaginated', data);\n    }\n    getFlListPaginated(data) {\n      return this.blService.search('fl', 'getFlListPaginated', data);\n    }\n    getBlById(id) {\n      return this.blService.getSingleById('bl', 'getBlById', id);\n    }\n    getFlById(flId) {\n      return this.blService.getSingleById('fl', 'getFlById', flId);\n    }\n    getRmById(rmId) {\n      return this.blService.getSingleById('rm', 'getRmById', rmId);\n    }\n    getALLCompany() {\n      return this.blService.getAll(\"comp\", \"getAllCompany\");\n    }\n    getALLBuilding() {\n      return this.blService.getAll(\"bl\", \"getAllBl\");\n    }\n    getALLFloor() {\n      return this.blService.getAll(\"fl\", \"getAllFl\");\n    }\n    getALLRoom() {\n      return this.blService.getAll(\"rm\", \"getAllRm\");\n    }\n    saveBuilding(bl) {\n      return this.blDetailService.add('bl', 'saveBL', bl);\n    }\n    saveFloor(bl) {\n      return this.flDetailService.add('fl', 'saveFL', bl);\n    }\n    saveRoom(rm) {\n      return this.rmDetailService.add('rm', 'saveRM', rm);\n    }\n    deleteBuilding(blId) {\n      return this.blService.getSingleById('bl', 'delete', blId);\n    }\n    deleteFloor(flId) {\n      return this.blService.getSingleById('fl', 'delete', flId);\n    }\n    deleteRoom(rmId) {\n      return this.blService.getSingleById('rm', 'delete', rmId);\n    }\n    checkSvgNameExists(data) {\n      return this.blService.getSingle('fl', 'floorexistssvg', data);\n    }\n    checkBlIdAndSiteIdExists(data) {\n      return this.blService.search('bl', 'checkblidexists', data);\n    }\n    checkFlIdAndBlIdExists(data) {\n      return this.blService.search('fl', 'checkflidexists', data);\n    }\n    checkRmIdAndFlIdAndBlIdExists(data) {\n      return this.blService.search('rm', 'checkrmidexists', data);\n    }\n    getAllTimeZones() {\n      return this.blService.getAll('bl', 'getAllTimeZones');\n    }\n    // this save method will only update rmcat, rmtype , div , dep in rm table\n    updateRoomProp(rm) {\n      return this.rmDetailService.add('rm', 'updatermprop', rm);\n    }\n    getrmwithdivordepcolor(data) {\n      return this.blService.search('rm', 'getrmwithdivordeptcolor', data);\n    }\n    getrmwithcatortypecolor(data) {\n      return this.blService.search('rm', 'getrmwithcatortypecolor', data);\n    }\n    // public getrmwithdivisioncolor(data: any) {\n    //   return this.blService.search('rm', 'getrmwithdivisioncolor', data);\n    // }\n    // public getrmwithdepartmentcolor(data: any) {\n    //   return this.blService.search('rm', 'getrmwithdepartmentcolor', data);\n    // }\n    // public getrmwithrmcatcolor(data: any) {\n    //   return this.blService.search('rm', 'getrmwithrmcatcolor', data);\n    // }\n    // public getrmwithrmtypecolor(data: any) {\n    //   return this.blService.search('rm', 'getrmwithrmtypecolor', data);\n    // }\n    getrmwithparametercolor(data) {\n      return this.blService.search('rm', 'getrmwithparametercolor', data);\n    }\n    getRoomReportsByFilter(data) {\n      return this.blService.search('rm', 'resportsByGroup', data);\n    }\n    getRoomReportsByFilterPaginated(data) {\n      return this.blService.search('rm', 'resportsByGroupPaginated', data);\n    }\n    getRoomByFilter(data) {\n      return this.blService.search('rm', 'reportfilter', data);\n    }\n    getCommonAreaByFloor(data) {\n      return this.blService.search(\"rm\", \"getareabycommonarea\", data);\n    }\n    getspaceutilizationrmdata(data) {\n      return this.blService.search(\"rm\", \"spaceutilizationrmdata\", data);\n    }\n    getdepartmentallocation(data) {\n      return this.blService.search(\"rm\", \"spacedivdepallocation\", data);\n    }\n    getspaceallocationstatictics(data) {\n      return this.blService.search(\"rm\", \"spaceallocationbystatistics\", data);\n    }\n    getspaceallocationstaticticsPaginated(data) {\n      return this.blService.search(\"rm\", \"spaceallocationbystatisticspaginated\", data);\n    }\n    getspaceallocationstaticticsroomdata(data) {\n      return this.blService.search(\"rm\", \"spaceallocationbystatisticsrmdata\", data);\n    }\n    getspaceallocationreportbyblfldivdep(data) {\n      return this.blService.search(\"rm\", \"spaceallocationreportbyblfldivdep\", data);\n    }\n    getroomspaceavailibilitydetails(data) {\n      return this.blService.search(\"rm\", \"spaceunallocatedroomdetails\", data);\n    }\n    getallfloorwitharea() {\n      return this.blService.getAll(\"fl\", \"getareabyfloor\");\n    }\n    getallbuildingwitharea() {\n      return this.blService.getAll(\"bl\", \"getbuildingwitharea\");\n    }\n    getbuildingwiseallocation(data) {\n      return this.blService.search(\"bl\", \"buildingwiseallocation\", data);\n    }\n    unLinkFloorPlan(flId) {\n      return this.blService.getSingleById('fl', 'unlinkFloorPlan', flId);\n    }\n    getRmListByPagination(data) {\n      return this.blService.search('rm', 'getRmListByPagination', data);\n    }\n    getPaginatedResevRoom(data) {\n      return this.blService.search('rm', 'getPaginatedResevRm', data);\n    }\n    getPaginatedHotelRoom(data) {\n      return this.blService.search('rm', 'getPaginatedHotelRm', data);\n    }\n    getALLBuildingByScroll(data) {\n      return this.blService.search(\"bl\", \"getAllBlByScroll\", data);\n    }\n    getALLFloorByScroll(data) {\n      return this.blService.search(\"fl\", \"getAllFlByScroll\", data);\n    }\n    getALLRoomByScroll(data) {\n      return this.blService.search(\"rm\", \"getAllRmByScroll\", data);\n    }\n    getAllRmByCommonArea(data) {\n      return this.blService.search(\"rm\", \"getAllRmByCommonArea\", data);\n    }\n    static #_ = this.ɵfac = function BuildingService_Factory(t) {\n      return new (t || BuildingService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BuildingService,\n      factory: BuildingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return BuildingService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}