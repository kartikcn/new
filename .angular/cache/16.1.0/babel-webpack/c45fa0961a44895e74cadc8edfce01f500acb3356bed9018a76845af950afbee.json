{"ast":null,"code":"import { DashboardStatusPieChartComponent } from '../../widgets/dashboard-status-pie-chart/modal/dashboard-status-pie-chart.component';\nimport { EscalationAlertsGridComponent } from '../../widgets/escalation-alerts-grid/modal/escalation-alerts-grid.component';\nimport { CompleteByAlertComponent } from '../../widgets/complete-by-alert/modal/complete-by-alert.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/ui/Helpdesk/work-request/service/add-work-request.services\";\nimport * as i2 from \"src/app/ui/app-params/services/app-params.service\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"src/app/services/auth.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"primeng/dialog\";\nimport * as i8 from \"primeng/card\";\nimport * as i9 from \"primeng/chart\";\nimport * as i10 from \"../../widgets/complete-by-alert/modal/complete-by-alert.component\";\nimport * as i11 from \"../../widgets/dashboard-my-requests-grid/modal/dashboard-my-requests-grid.component\";\nimport * as i12 from \"../../widgets/dashboard-status-pie-chart/modal/dashboard-status-pie-chart.component\";\nimport * as i13 from \"../../widgets/escalation-alerts-grid/modal/escalation-alerts-grid.component\";\nimport * as i14 from \"../../../Helpdesk/requests-by-asset-reports/widgets/add-table/add-table.component\";\nfunction SupervisorDashboardComponent_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 16);\n    i0.ɵɵtext(1, \"Request List\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SupervisorDashboardComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-table\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r1.detailsPopUpData)(\"isEscalatedData\", ctx_r1.viewForEscalation);\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"66vw\"\n  };\n};\nexport class SupervisorDashboardComponent {\n  constructor(addWorkRequestService, appParamsServ, enumsrv, authServ, datePipe) {\n    this.addWorkRequestService = addWorkRequestService;\n    this.appParamsServ = appParamsServ;\n    this.enumsrv = enumsrv;\n    this.authServ = authServ;\n    this.datePipe = datePipe;\n    this.allRequestData = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumWr = [];\n    this.enumStatus = [];\n    this.noEsctdData = [];\n    this.myRequestsData = [];\n    this.noEscalatedPercent = 0;\n    this.statusChartData = [];\n    this.autoRefreshTime = 60;\n    this.escalatedData = [];\n    this.allEscalatedData = [];\n    this.detailsPopUpData = [];\n    this.showPopupFlag = false;\n    this.viewForEscalation = true;\n    this.initialStatusChartData = {\n      requested: {\n        id: 'requested',\n        label: 'Requested',\n        data: []\n      },\n      approved: {\n        id: 'approved',\n        label: 'Approved',\n        data: []\n      },\n      rejected: {\n        id: 'rejected',\n        label: 'Rejected',\n        data: []\n      },\n      inProcess: {\n        id: 'inProcess',\n        label: 'In Process',\n        data: []\n      },\n      onHoldForAccess: {\n        id: 'onHoldForAccess',\n        label: 'On Hold For Access',\n        data: []\n      },\n      onHoldForParts: {\n        id: 'onHoldForParts',\n        label: 'On Hold For Parts',\n        data: []\n      },\n      onHoldForLabour: {\n        id: 'onHoldForLabour',\n        label: 'On Hold For Labour',\n        data: []\n      },\n      completed: {\n        id: 'completed',\n        label: 'Completed',\n        data: []\n      },\n      close: {\n        id: 'close',\n        label: 'Close',\n        data: []\n      },\n      cancelled: {\n        id: 'cancelled',\n        label: 'Cancelled',\n        data: []\n      }\n    };\n    this.months = [{\n      id: 0,\n      label: 'Make a selection'\n    }, {\n      id: 1,\n      label: \"January\"\n    }, {\n      id: 2,\n      label: \"February\"\n    }, {\n      id: 3,\n      label: \"March\"\n    }, {\n      id: 4,\n      label: \"April\"\n    }, {\n      id: 5,\n      label: \"May\"\n    }, {\n      id: 6,\n      label: \"June\"\n    }, {\n      id: 7,\n      label: \"July\"\n    }, {\n      id: 8,\n      label: \"August\"\n    }, {\n      id: 9,\n      label: \"September\"\n    }, {\n      id: 10,\n      label: \"October\"\n    }, {\n      id: 11,\n      label: \"November\"\n    }, {\n      id: 12,\n      label: \"December\"\n    }];\n    this.hrOptions = {\n      indexAxis: 'y',\n      tooltips: {\n        enabled: true,\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label(tooltipItem, data) {\n            const tooltipValue = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n            return parseInt(tooltipValue, 10).toLocaleString();\n          },\n          title(tooltipItem, data) {\n            return data.labels[tooltipItem[0].index];\n          }\n        },\n        position: 'average',\n        zIndex: 1000\n      },\n      responsive: true,\n      animation: {\n        duration: 1000,\n        easing: 'easeOutBounce'\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 10\n        }\n      },\n      legend: {\n        display: false\n      },\n      plugins: {\n        datalabels: {\n          display: true,\n          anchor: 'start',\n          align: 'start',\n          formatter(value) {\n            return parseInt(value, 10).toLocaleString();\n          },\n          color: '#777777',\n          font: {\n            weight: 500,\n            family: 'Roboto',\n            size: 10\n          },\n          clamp: true\n        },\n        legend: {\n          display: false\n        }\n      },\n      scales: {\n        x: {\n          display: true,\n          stacked: false,\n          grid: {\n            display: false\n          },\n          ticks: {\n            beginAtZero: true\n          },\n          title: {\n            display: true,\n            text: 'Request Count',\n            fontStyle: 'bold'\n          }\n        },\n        y: {\n          display: true,\n          barThickness: 30,\n          stacked: true,\n          title: {\n            display: false\n          },\n          grid: {\n            display: false\n          }\n        }\n      }\n    };\n  }\n  ngOnInit() {\n    this.loadEnums();\n    this.loadAppParamsById();\n  }\n  ngOnDestroy() {\n    // Clear the interval when the component is destroyed\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n      this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n    });\n  }\n  loadAppParamsById() {\n    this.appParamsServ.getAppParamByCode('financial_year').subscribe(res => {\n      if (res) {\n        const selectedMonth = res.paramValue;\n        const selectedMonthData = this.months.find(month => month.label.toUpperCase() === selectedMonth.toUpperCase());\n        const selectedMonthId = selectedMonthData.id;\n        if (selectedMonthId > 0) {\n          const endYearData = this.calculateFinancialYear(selectedMonthId);\n          this.dateRequestedFrom = endYearData.startDate;\n          this.dateRequestedTo = endYearData.endDate;\n          this.loadWrRecords();\n        }\n      }\n    });\n  }\n  loadWrRecords() {\n    const filterData = {\n      dateRequestedFrom: this.dateRequestedFrom,\n      dateRequestedTo: this.dateRequestedTo\n    };\n    this.addWorkRequestService.getAllWrByFilter(filterData).subscribe(res => {\n      if (res) {\n        this.allRequestData = res.map(each => {\n          return {\n            ...each,\n            formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n            fromatedDateToRespond: each.escDateResponded ? this.datePipe.transform(each.escDateResponded, 'dd MMM yyyy') + \" \" + this.convertToDisplayTime(each.escTimeResponded) : '',\n            formatedDateResponded: each.dateResponded ? this.datePipe.transform(each.dateResponded, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeResponded) : '',\n            formatedDateToComplete: each.escDateCompleted ? this.datePipe.transform(each.escDateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.escTimeCompleted) : '',\n            formatedDateCompleted: each.dateCompleted ? this.datePipe.transform(each.dateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeCompleted) : ''\n          };\n        });\n        this.completeByAlertComponent.createAlerts(this.allRequestData);\n        this.filterByStatus();\n        this.filterByEscaltion();\n        this.filterByMyRequest();\n      }\n    });\n  }\n  filterByStatus() {\n    this.statusChartData = {\n      ...this.initialStatusChartData\n    };\n    setTimeout(() => {\n      this.statusChartData.requested.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Requested'));\n      this.statusChartData.approved.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Approved'));\n      this.statusChartData.rejected.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Rejected'));\n      this.statusChartData.onHoldForAccess.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('On Hold For Access'));\n      this.statusChartData.onHoldForParts.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('On Hold For Parts'));\n      this.statusChartData.onHoldForLabour.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('On Hold For Labour'));\n      this.statusChartData.inProcess.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('In Process'));\n      this.statusChartData.completed.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Completed'));\n      this.statusChartData.close.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Close'));\n      this.statusChartData.cancelled.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Cancelled'));\n    }, 0);\n    setTimeout(() => {\n      this.dashboardStatusPieChartComponent.loadPieData(this.statusChartData);\n    }, 10);\n  }\n  filterByEscaltion() {\n    this.noEscalatedPercent = 0;\n    this.noEsctdData = [];\n    this.escalatedData = [];\n    this.allEscalatedData = [];\n    setTimeout(() => {\n      let currentDate = new Date();\n      this.allRequestData.forEach(item => {\n        const {\n          dateResponded,\n          escDateResponded,\n          dateCompleted,\n          escDateCompleted,\n          timeResponded,\n          timeCompleted,\n          escTimeResponded,\n          escTimeCompleted,\n          status\n        } = item;\n        const isEscalatedForResponse = dateResponded && new Date(dateResponded + 'T' + timeResponded).getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime() || !dateResponded && currentDate.getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime();\n        const isEscalatedForComplete = dateCompleted && new Date(dateCompleted + 'T' + timeCompleted).getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime() || !dateCompleted && currentDate.getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime();\n        if (!isEscalatedForResponse && !isEscalatedForComplete && this.getValueById(status)?.toUpperCase() !== 'Cancelled'.toUpperCase()) {\n          this.noEsctdData.push(item);\n        }\n        if ((isEscalatedForResponse || isEscalatedForComplete) && this.getValueById(status)?.toUpperCase() !== 'Cancelled'.toUpperCase()) {\n          this.escalatedData.push(item);\n        }\n      });\n      this.allEscalatedData = this.noEsctdData.concat(this.escalatedData);\n      this.noEscalatedPercent = (this.noEsctdData.length / this.allEscalatedData.length * 100).toFixed(2); // upto two decimal \n    }, 0);\n    setTimeout(() => {\n      this.escalationAlertsGridComponent.setEscalatedPercantage(this.noEscalatedPercent);\n      this.setChartData(this.allEscalatedData.length, this.noEsctdData.length, this.escalatedData.length);\n    }, 10);\n  }\n  filterByMyRequest() {\n    this.myRequestsData = [];\n    setTimeout(() => {\n      const loggedInUserId = this.authServ.getLoggedInUserEMId();\n      this.allRequestData.sort((a, b) => b.wrId - a.wrId).filter(eachRecord => {\n        if (eachRecord.requestedFor === loggedInUserId || eachRecord.requestedBy === loggedInUserId || eachRecord.isTechnician === '1') {\n          this.myRequestsData.push(eachRecord);\n        }\n      });\n    }, 0);\n  }\n  getIdByStatus(status) {\n    return this.enumStatus.find(t => t.enumValue.toUpperCase() === status.toUpperCase())?.enumKey;\n  }\n  getValueById(enumKey) {\n    return this.enumStatus.find(t => t.enumKey === enumKey)?.enumValue;\n  }\n  calculateFinancialYear(startingMonth) {\n    const today = new Date(); // Get the current date\n    const currentYear = today.getFullYear(); // Get the current year\n    // Create a new date object for the start of the financial year\n    const financialYearStart = new Date(currentYear, startingMonth - 1, 1);\n    // Get the start day of the financial year\n    const startDay = financialYearStart.getDate();\n    // Create a new date object for the end of the financial year\n    const financialYearEnd = new Date(currentYear + 1, startingMonth - 1, 0);\n    // Get the end day of the financial year\n    const endDay = financialYearEnd.getDate();\n    const endMonth = financialYearEnd.getMonth() + 1;\n    const SelectedEndMonthLable = this.months.find(month => month.id === endMonth);\n    const endMonthLable = SelectedEndMonthLable.label;\n    // Format the start and end dates as full dates\n    const startDate = this.datePipe.transform(financialYearStart, \"yyyy-MM-dd\");\n    const endDate = this.datePipe.transform(financialYearEnd, \"yyyy-MM-dd\");\n    // Return the start and end dates\n    return {\n      startDay,\n      startDate,\n      endDay,\n      endDate,\n      endMonthLable\n    };\n  }\n  onClickBarChart(event) {\n    this.detailsPopUpData = [];\n    const selectedLabel = this.basicData.labels[event.element.index];\n    switch (selectedLabel) {\n      case 'Total':\n        this.detailsPopUpData.push(...this.allEscalatedData);\n        break;\n      case 'Non Escalated':\n        this.detailsPopUpData.push(...this.noEsctdData);\n        break;\n      case 'Escalated':\n        this.detailsPopUpData.push(...this.escalatedData);\n        break;\n      default:\n        break;\n    }\n    this.showPopupFlag = true;\n  }\n  setChartData(total, nonEscalated, escalated) {\n    this.basicData = {\n      labels: ['Total', 'Non Escalated', 'Escalated'],\n      datasets: [{\n        label: '',\n        backgroundColor: ['blue', 'green', 'red'],\n        data: [total, nonEscalated, escalated]\n      }]\n    };\n  }\n  convertToDisplayTime(value) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n  static #_ = this.ɵfac = function SupervisorDashboardComponent_Factory(t) {\n    return new (t || SupervisorDashboardComponent)(i0.ɵɵdirectiveInject(i1.AddWorkRequestService), i0.ɵɵdirectiveInject(i2.AppParamsService), i0.ɵɵdirectiveInject(i3.EnumService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.DatePipe));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SupervisorDashboardComponent,\n    selectors: [[\"app-supervisor-dashboard\"]],\n    viewQuery: function SupervisorDashboardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DashboardStatusPieChartComponent, 5);\n        i0.ɵɵviewQuery(EscalationAlertsGridComponent, 5);\n        i0.ɵɵviewQuery(CompleteByAlertComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dashboardStatusPieChartComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.escalationAlertsGridComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.completeByAlertComponent = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 20,\n    consts: [[\"width\", \"100%\", 2, \"height\", \"92vh\"], [\"width\", \"40%\", \"height\", \"40%\"], [\"id\", \"SLACompliance\", 3, \"header\"], [3, \"allEscalatedData\", \"noEsctdData\", \"escalatedData\"], [\"width\", \"60%\", \"height\", \"40%\"], [3, \"header\"], [3, \"statusChartData\"], [\"width\", \"40%\", \"height\", \"60%\"], [\"width\", \"100%\", \"height\", \"100%\"], [\"width\", \"50%\", \"height\", \"50%\"], [\"type\", \"bar\", \"height\", \"200\", \"width\", \"240\", 3, \"data\", \"options\", \"onDataSelect\"], [\"width\", \"60%\", \"height\", \"60%\"], [3, \"myRequestsData\"], [\"styleClass\", \"dark-panel\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [2, \"margin\", \"0px\"], [3, \"data\", \"isEscalatedData\"]],\n    template: function SupervisorDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"tr\")(2, \"td\", 1)(3, \"p-card\", 2);\n        i0.ɵɵelement(4, \"app-escalation-alerts-grid\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"td\", 4)(6, \"p-card\", 5);\n        i0.ɵɵelement(7, \"app-dashboard-status-pie-chart\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"tr\")(9, \"td\", 7)(10, \"table\", 8)(11, \"tr\")(12, \"td\", 9)(13, \"p-card\", 5);\n        i0.ɵɵelement(14, \"app-complete-by-alert\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"td\", 9)(16, \"p-card\", 5)(17, \"p-chart\", 10);\n        i0.ɵɵlistener(\"onDataSelect\", function SupervisorDashboardComponent_Template_p_chart_onDataSelect_17_listener($event) {\n          return ctx.onClickBarChart($event);\n        });\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(18, \"td\", 11)(19, \"p-card\", 5);\n        i0.ɵɵelement(20, \"app-dashboard-my-requests-grid\", 12);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(21, \"p-dialog\", 13);\n        i0.ɵɵlistener(\"visibleChange\", function SupervisorDashboardComponent_Template_p_dialog_visibleChange_21_listener($event) {\n          return ctx.showPopupFlag = $event;\n        });\n        i0.ɵɵtemplate(22, SupervisorDashboardComponent_ng_template_22_Template, 2, 0, \"ng-template\", 14);\n        i0.ɵɵtemplate(23, SupervisorDashboardComponent_ng_template_23_Template, 1, 2, \"ng-template\", 15);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"header\", \"SLA Compliance\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"allEscalatedData\", ctx.allEscalatedData)(\"noEsctdData\", ctx.noEsctdData)(\"escalatedData\", ctx.escalatedData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"header\", \"Requests By Status\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"statusChartData\", ctx.statusChartData);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"header\", \"Alerts\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"header\", \"Escalations\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"data\", ctx.basicData)(\"options\", ctx.hrOptions);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"header\", \"My Requests\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"myRequestsData\", ctx.myRequestsData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(19, _c0));\n        i0.ɵɵproperty(\"visible\", ctx.showPopupFlag)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n      }\n    },\n    dependencies: [i6.PrimeTemplate, i7.Dialog, i8.Card, i9.UIChart, i10.CompleteByAlertComponent, i11.DashboardMyRequestsGridComponent, i12.DashboardStatusPieChartComponent, i13.EscalationAlertsGridComponent, i14.AddTableComponent],\n    styles: [\".p-card {\\n  height: 100%;\\n}\\n\\n[_nghost-%COMP%]     .p-card .p-card-content {\\n  height: 35vh;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvZmFjaWxpdGllcy1oZWxwZGVzay1kYXNoYm9hcmRzL3N1cGVydmlzb3ItZGFzaGJvYXJkL21vZGFsL3N1cGVydmlzb3ItZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC5wLWNhcmQge1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwICAucC1jYXJkIC5wLWNhcmQtY29udGVudCB7XG4gICAgaGVpZ2h0OiAzNXZoO1xufVxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["DashboardStatusPieChartComponent","EscalationAlertsGridComponent","CompleteByAlertComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ctx_r1","detailsPopUpData","viewForEscalation","SupervisorDashboardComponent","constructor","addWorkRequestService","appParamsServ","enumsrv","authServ","datePipe","allRequestData","enumList","enumClonedList","enumWr","enumStatus","noEsctdData","myRequestsData","noEscalatedPercent","statusChartData","autoRefreshTime","escalatedData","allEscalatedData","showPopupFlag","initialStatusChartData","requested","id","label","data","approved","rejected","inProcess","onHoldForAccess","onHoldForParts","onHoldForLabour","completed","close","cancelled","months","hrOptions","indexAxis","tooltips","enabled","mode","intersect","callbacks","tooltipItem","tooltipValue","datasets","datasetIndex","index","parseInt","toLocaleString","title","labels","position","zIndex","responsive","animation","duration","easing","layout","padding","left","right","legend","display","plugins","datalabels","anchor","align","formatter","value","color","font","weight","family","size","clamp","scales","x","stacked","grid","ticks","beginAtZero","text","fontStyle","y","barThickness","ngOnInit","loadEnums","loadAppParamsById","ngOnDestroy","intervalId","clearInterval","getEnums","subscribe","res","map","Object","assign","filter","t","tableName","toLocaleUpperCase","fieldName","getAppParamByCode","selectedMonth","paramValue","selectedMonthData","find","month","toUpperCase","selectedMonthId","endYearData","calculateFinancialYear","dateRequestedFrom","startDate","dateRequestedTo","endDate","loadWrRecords","filterData","getAllWrByFilter","each","formatedDateRequested","transform","dateRequested","fromatedDateToRespond","escDateResponded","convertToDisplayTime","escTimeResponded","formatedDateResponded","dateResponded","timeResponded","formatedDateToComplete","escDateCompleted","escTimeCompleted","formatedDateCompleted","dateCompleted","timeCompleted","completeByAlertComponent","createAlerts","filterByStatus","filterByEscaltion","filterByMyRequest","setTimeout","wr","status","getIdByStatus","dashboardStatusPieChartComponent","loadPieData","currentDate","Date","forEach","item","isEscalatedForResponse","getTime","isEscalatedForComplete","getValueById","push","concat","length","toFixed","escalationAlertsGridComponent","setEscalatedPercantage","setChartData","loggedInUserId","getLoggedInUserEMId","sort","a","b","wrId","eachRecord","requestedFor","requestedBy","isTechnician","enumValue","enumKey","startingMonth","today","currentYear","getFullYear","financialYearStart","startDay","getDate","financialYearEnd","endDay","endMonth","getMonth","SelectedEndMonthLable","endMonthLable","onClickBarChart","event","selectedLabel","basicData","element","total","nonEscalated","escalated","backgroundColor","split","time","_","ɵɵdirectiveInject","i1","AddWorkRequestService","i2","AppParamsService","i3","EnumService","i4","AuthService","i5","DatePipe","_2","selectors","viewQuery","SupervisorDashboardComponent_Query","rf","ctx","ɵɵlistener","SupervisorDashboardComponent_Template_p_chart_onDataSelect_17_listener","$event","SupervisorDashboardComponent_Template_p_dialog_visibleChange_21_listener","ɵɵtemplate","SupervisorDashboardComponent_ng_template_22_Template","SupervisorDashboardComponent_ng_template_23_Template","ɵɵadvance","ɵɵstyleMap","ɵɵpureFunction0","_c0"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/facilities-helpdesk-dashboards/supervisor-dashboard/modal/supervisor-dashboard.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/facilities-helpdesk-dashboards/supervisor-dashboard/modal/supervisor-dashboard.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { AddWorkRequestService } from 'src/app/ui/Helpdesk/work-request/service/add-work-request.services';\nimport { AppParamsService } from 'src/app/ui/app-params/services/app-params.service';\nimport { DashboardStatusPieChartComponent } from '../../widgets/dashboard-status-pie-chart/modal/dashboard-status-pie-chart.component';\nimport { EscalationAlertsGridComponent } from '../../widgets/escalation-alerts-grid/modal/escalation-alerts-grid.component';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DatePipe } from '@angular/common';\nimport { CompleteByAlertComponent } from '../../widgets/complete-by-alert/modal/complete-by-alert.component';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { EnumList } from 'src/app/model/enum-list.model';\n\n\n@Component({\n  selector: 'app-supervisor-dashboard',\n  templateUrl: './supervisor-dashboard.component.html',\n  styleUrls: ['./supervisor-dashboard.component.scss']\n})\nexport class SupervisorDashboardComponent {\n\n  dateRequestedFrom: any;\n  dateRequestedTo: any;\n  allRequestData: any[] = [];\n  enumList: EnumList[] = [];\n  enumClonedList: EnumList[] = [];\n  enumWr: EnumList[] = [];\n  enumStatus: EnumList[] = [];\n  noEsctdData: any[] = [];\n  myRequestsData: any[] = [];\n  noEscalatedPercent: any = 0;\n  intervalId:any;\n  statusChartData:any = [];\n  autoRefreshTime:any = 60;\n  escalatedData: any=[];\n  allEscalatedData: any = [];\n  detailsPopUpData: any[] = [];\n  showPopupFlag: boolean = false;\n  basicData: any;\n  viewForEscalation : boolean = true;\n  \n  initialStatusChartData: any = {\n    requested: {\n      id: 'requested',\n      label: 'Requested',\n      data: []\n    },\n    approved: {\n      id: 'approved',\n      label: 'Approved',\n      data: []\n    },\n    rejected: {\n      id: 'rejected',\n      label: 'Rejected',\n      data: []\n    },\n    inProcess: {\n      id: 'inProcess',\n      label: 'In Process',\n      data: []\n    },\n    onHoldForAccess: {\n      id: 'onHoldForAccess',\n      label: 'On Hold For Access',\n      data: []\n    },\n    onHoldForParts: {\n      id: 'onHoldForParts',\n      label: 'On Hold For Parts',\n      data: []\n    },\n    onHoldForLabour: {\n      id: 'onHoldForLabour',\n      label: 'On Hold For Labour',\n      data: []\n    },\n    completed: {\n      id: 'completed',\n      label: 'Completed',\n      data: []\n    },\n    close: {\n      id: 'close',\n      label: 'Close',\n      data: []\n    },\n    cancelled: {\n      id: 'cancelled',\n      label: 'Cancelled',\n      data: []\n    }\n  };\n\n  months: any = [\n    {\n      id: 0,\n      label: 'Make a selection'\n    },\n    {\n      id: 1,\n      label: \"January\"\n    },\n    {\n      id: 2,\n      label: \"February\"\n    },\n    {\n      id: 3,\n      label: \"March\"\n    },\n    {\n      id: 4,\n      label: \"April\"\n    },\n    {\n      id: 5,\n      label: \"May\"\n    },\n    {\n      id: 6,\n      label: \"June\"\n    },\n    {\n      id: 7,\n      label: \"July\"\n    },\n    {\n      id: 8,\n      label: \"August\"\n    },\n    {\n      id: 9,\n      label: \"September\"\n    },\n    {\n      id: 10,\n      label: \"October\"\n    },\n    {\n      id: 11,\n      label: \"November\"\n    },\n    {\n      id: 12,\n      label: \"December\"\n    }\n  ];\n\n  hrOptions: any = {\n    indexAxis: 'y',\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      callbacks: {\n        label(tooltipItem: any, data: any) {\n          const tooltipValue = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n          return parseInt(tooltipValue, 10).toLocaleString();\n        },\n        title(tooltipItem: any, data: any) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n      position: 'average',\n      zIndex: 1000,\n    },\n    responsive: true,\n    animation: {\n      duration: 1000,\n      easing: 'easeOutBounce'\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 10,\n      },\n    },\n    legend: {\n      display: false,\n     \n    },\n    plugins: {\n      datalabels: {\n        display: true,\n        anchor: 'start',\n        align: 'start',\n        formatter(value: any) {\n          return parseInt(value, 10).toLocaleString();\n        },\n        color: '#777777',\n        font: {\n          weight: 500,\n          family: 'Roboto',\n          size: 10,\n        },\n        clamp: true,\n      },\n      legend:{\n        display:false\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        stacked: false,\n        grid: {\n          display: false,\n        },\n        ticks: {\n          beginAtZero: true,\n        },\n        title: {\n          display: true,\n          text: 'Request Count',\n          fontStyle: 'bold',\n        },\n      },\n      y: {\n        display: true,\n        barThickness: 30,\n        stacked: true,\n        title: {\n          display: false,\n        },\n        grid: {\n          display: false,\n        },\n      },\n    },\n  };\n  \n  @ViewChild(DashboardStatusPieChartComponent, { static: false }) dashboardStatusPieChartComponent!: DashboardStatusPieChartComponent;\n  @ViewChild(EscalationAlertsGridComponent, { static: false }) escalationAlertsGridComponent!: EscalationAlertsGridComponent;\n  @ViewChild(CompleteByAlertComponent, { static: false }) completeByAlertComponent!: CompleteByAlertComponent;\n\n  constructor(\n    private addWorkRequestService: AddWorkRequestService,\n    private appParamsServ: AppParamsService,\n    private enumsrv: EnumService,\n    private authServ: AuthService,\n    private datePipe: DatePipe,\n  ) { }\n\n  ngOnInit(): void {\n    this.loadEnums()\n    this.loadAppParamsById()\n  }\n\n  ngOnDestroy() {\n    // Clear the interval when the component is destroyed\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: EnumList[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t =>t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n      }\n    )\n  }\n\n  loadAppParamsById() {\n    this.appParamsServ.getAppParamByCode('financial_year').subscribe((res: any) => {\n      if (res) {\n        const selectedMonth = res.paramValue;\n        const selectedMonthData = this.months.find((month: any) => month.label.toUpperCase() === selectedMonth.toUpperCase());\n        const selectedMonthId = selectedMonthData.id;\n        if (selectedMonthId > 0) {\n          const endYearData = this.calculateFinancialYear(selectedMonthId);\n          this.dateRequestedFrom = endYearData.startDate;\n          this.dateRequestedTo = endYearData.endDate;\n          this.loadWrRecords();\n        }\n      }\n    })\n  }\n\n  loadWrRecords() {\n    const filterData = {\n      dateRequestedFrom: this.dateRequestedFrom,\n      dateRequestedTo: this.dateRequestedTo\n    }\n    this.addWorkRequestService.getAllWrByFilter(filterData).subscribe((res: any[]) => {\n\n      if (res) {\n\n        this.allRequestData = res.map((each: any)=>{\n          return {\n            ...each,\n            formatedDateRequested : this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n            fromatedDateToRespond : each.escDateResponded ? this.datePipe.transform(each.escDateResponded, 'dd MMM yyyy') + \" \" + this.convertToDisplayTime(each.escTimeResponded) : '',\n            formatedDateResponded : each.dateResponded ? this.datePipe.transform(each.dateResponded,'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeResponded) : '',\n            formatedDateToComplete : each.escDateCompleted ?  this.datePipe.transform(each.escDateCompleted,'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.escTimeCompleted) : '',\n            formatedDateCompleted : each.dateCompleted ?  this.datePipe.transform(each.dateCompleted,'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeCompleted) : '',\n          }\n        })\n\n\n        this.completeByAlertComponent.createAlerts(this.allRequestData);\n        this.filterByStatus();\n        this.filterByEscaltion();\n        this.filterByMyRequest();\n      }\n    })\n  }\n\n  filterByStatus() {\n    this.statusChartData = {...this.initialStatusChartData}\n    setTimeout(() => {\n      this.statusChartData.requested.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Requested'));\n      this.statusChartData.approved.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Approved'));\n      this.statusChartData.rejected.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Rejected'));\n      this.statusChartData.onHoldForAccess.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('On Hold For Access'));\n      this.statusChartData.onHoldForParts.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('On Hold For Parts'));\n      this.statusChartData.onHoldForLabour.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('On Hold For Labour'));\n      this.statusChartData.inProcess.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('In Process'));\n      this.statusChartData.completed.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Completed'));\n      this.statusChartData.close.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Close'));\n      this.statusChartData.cancelled.data = this.allRequestData.filter(wr => wr.status === this.getIdByStatus('Cancelled'));\n    }, 0);\n\n    setTimeout(() => {\n      this.dashboardStatusPieChartComponent.loadPieData(this.statusChartData);\n    }, 10);\n  }\n\n  filterByEscaltion() {\n    this.noEscalatedPercent = 0;\n    this.noEsctdData = [];\n    this.escalatedData = [];\n    this.allEscalatedData = [];\n    setTimeout(() => {\n      let currentDate = new Date();\n      this.allRequestData.forEach((item: any) => {\n        const { dateResponded, escDateResponded, dateCompleted, escDateCompleted, timeResponded, timeCompleted, escTimeResponded, escTimeCompleted, status } = item;\n\n        const isEscalatedForResponse =\n          (dateResponded && new Date(dateResponded + 'T' + timeResponded).getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime()) ||\n          (!dateResponded && currentDate.getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime());\n\n        const isEscalatedForComplete =\n          (dateCompleted && new Date(dateCompleted + 'T' + timeCompleted).getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime()) ||\n          (!dateCompleted && currentDate.getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime());\n\n\n        if (!isEscalatedForResponse && !isEscalatedForComplete && this.getValueById(status)?.toUpperCase() !== 'Cancelled'.toUpperCase()) {\n          this.noEsctdData.push(item);\n        }\n        if ((isEscalatedForResponse || isEscalatedForComplete) && this.getValueById(status)?.toUpperCase() !== 'Cancelled'.toUpperCase()) {\n          this.escalatedData.push(item);\n        }\n      });\n      this.allEscalatedData = this.noEsctdData.concat(this.escalatedData);\n      this.noEscalatedPercent = ((this.noEsctdData.length / this.allEscalatedData.length) * 100).toFixed(2);  // upto two decimal \n    }, 0);\n\n    setTimeout(() => {\n      this.escalationAlertsGridComponent.setEscalatedPercantage(this.noEscalatedPercent);\n      this.setChartData(this.allEscalatedData.length, this.noEsctdData.length, this.escalatedData.length);\n    }, 10);\n  }\n\n  filterByMyRequest() {\n    this.myRequestsData = [];\n    setTimeout(() => {\n      const loggedInUserId = this.authServ.getLoggedInUserEMId();\n      this.allRequestData.sort((a : any, b: any)=> b.wrId - a.wrId).filter((eachRecord: any) => {\n        if (eachRecord.requestedFor === loggedInUserId || eachRecord.requestedBy === loggedInUserId || eachRecord.isTechnician === '1') {\n          this.myRequestsData.push(eachRecord);\n        } \n      })\n    }, 0);\n\n  }\n\n  getIdByStatus(status: any) {\n    return this.enumStatus.find((t: any) => t.enumValue.toUpperCase() === status.toUpperCase())?.enumKey;\n  };\n\n  getValueById(enumKey: any) {\n    return this.enumStatus.find((t: any) => t.enumKey === enumKey)?.enumValue;\n  };\n\n  calculateFinancialYear(startingMonth: any) {\n    const today = new Date(); // Get the current date\n    const currentYear = today.getFullYear(); // Get the current year\n\n    // Create a new date object for the start of the financial year\n    const financialYearStart = new Date(currentYear, startingMonth - 1, 1);\n\n    // Get the start day of the financial year\n    const startDay = financialYearStart.getDate();\n\n    // Create a new date object for the end of the financial year\n    const financialYearEnd = new Date(currentYear + 1, startingMonth - 1, 0);\n\n    // Get the end day of the financial year\n    const endDay = financialYearEnd.getDate();\n\n    const endMonth = financialYearEnd.getMonth() + 1;\n\n    const SelectedEndMonthLable = this.months.find((month: any) => month.id === endMonth);\n    const endMonthLable = SelectedEndMonthLable.label;\n    // Format the start and end dates as full dates\n    const startDate = this.datePipe.transform(financialYearStart,\"yyyy-MM-dd\");\n    const endDate = this.datePipe.transform(financialYearEnd,\"yyyy-MM-dd\");\n\n    // Return the start and end dates\n    return {\n      startDay,\n      startDate,\n      endDay,\n      endDate,\n      endMonthLable\n    };\n  }\n   \n  onClickBarChart(event: any) {\n    this.detailsPopUpData = [];\n    const selectedLabel = this.basicData.labels[event.element.index];\n    switch (selectedLabel) {\n      case 'Total':\n        this.detailsPopUpData.push(...this.allEscalatedData);\n        break;\n      case 'Non Escalated':\n        this.detailsPopUpData.push(...this.noEsctdData);\n        break;\n      case 'Escalated':\n        this.detailsPopUpData.push(...this.escalatedData);\n        break;\n      default:\n        break;\n    }\n    this.showPopupFlag = true;\n  }\n  \n  setChartData(total: any, nonEscalated: any, escalated: any) {\n    this.basicData = {\n      labels:\n        ['Total', 'Non Escalated', 'Escalated'],\n      datasets: [\n        {\n          label: '',\n          backgroundColor: ['blue', 'green', 'red'],\n          data: [total, nonEscalated, escalated],\n        },\n      ]\n    };\n  }\n\n  convertToDisplayTime(value: any) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n}\n","\n    <table width=\"100%\" style=\"height: 92vh;\">\n    <tr>\n        <td width=\"40%\" height=\"40%\">\n            <p-card [header]=\"'SLA Compliance'\" id=\"SLACompliance\">\n                <app-escalation-alerts-grid [allEscalatedData]=\"allEscalatedData\"\n                    [noEsctdData]=\"noEsctdData\"\n                    [escalatedData]=\"escalatedData\"></app-escalation-alerts-grid>\n            </p-card>\n        </td>\n        <td width=\"60%\" height=\"40%\">\n            <p-card [header]=\"'Requests By Status'\">\n                <app-dashboard-status-pie-chart [statusChartData]=\"statusChartData\"></app-dashboard-status-pie-chart>\n            </p-card>\n        </td>\n    </tr>\n    <tr>\n        <td width=\"40%\" height=\"60%\">\n            <table width=\"100%\" height=\"100%\">\n                <tr>\n                    <td width=\"50%\" height=\"50%\">\n                        <p-card [header]=\"'Alerts'\">\n                            <app-complete-by-alert></app-complete-by-alert>\n                        </p-card>\n                    </td>\n                    <td width=\"50%\" height=\"50%\">\n                        <p-card [header]=\"'Escalations'\">\n                            <p-chart type=\"bar\" height=\"200\" width=\"240\" [data]=\"basicData\"\n                                [options]=\"hrOptions\" (onDataSelect)=\"onClickBarChart($event)\"></p-chart>\n                        </p-card>\n                    </td>\n                </tr>\n            </table>\n        </td>\n        <td width=\"60%\" height=\"60%\">\n            <p-card [header]=\"'My Requests'\">\n                <app-dashboard-my-requests-grid [myRequestsData]=\"myRequestsData\"></app-dashboard-my-requests-grid>\n            </p-card>\n        </td>\n        \n    </tr>\n</table>\n<p-dialog [(visible)]=\"showPopupFlag\" [modal]=\"true\" [style]=\"{width: '66vw'}\" [maximizable]=\"true\" [draggable]=\"false\"\n    [resizable]=\"false\" styleClass=\"dark-panel\">\n    <ng-template pTemplate=\"header\">\n        <h2 style=\"margin: 0px;\">Request List</h2>\n    </ng-template>\n    <ng-template pTemplate=\"body\">\n        <app-add-table [data]=\"detailsPopUpData\" [isEscalatedData]=\"viewForEscalation\"></app-add-table>\n    </ng-template>\n</p-dialog>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}