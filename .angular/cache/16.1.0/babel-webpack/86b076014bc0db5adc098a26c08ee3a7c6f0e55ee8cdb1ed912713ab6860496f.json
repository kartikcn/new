{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/securityGroup.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../providers/securityGroup-provider\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/panel\";\nimport * as i8 from \"primeng/confirmdialog\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"primeng/paginator\";\nfunction SecurityGroupComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function SecurityGroupComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.addSgItem());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SecurityGroupComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 14);\n    i0.ɵɵelementStart(2, \"th\", 15)(3, \"div\", 16)(4, \"div\", 17)(5, \"p\", 18);\n    i0.ɵɵtext(6, \"Group Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 19);\n    i0.ɵɵelement(8, \"p-sortIcon\", 20)(9, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 22)(11, \"div\", 16)(12, \"div\", 17)(13, \"p\", 18);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 19);\n    i0.ɵɵelement(16, \"p-sortIcon\", 23)(17, \"p-columnFilter\", 24);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction SecurityGroupComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 25)(1, \"td\", 14)(2, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function SecurityGroupComponent_ng_template_7_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const sg_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.editSgItem(sg_r7.securityGroupId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 27);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const sg_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", sg_r7);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(sg_r7.groupName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", sg_r7.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(sg_r7.description);\n  }\n}\nfunction SecurityGroupComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let SecurityGroupComponent = /*#__PURE__*/(() => {\n  class SecurityGroupComponent {\n    constructor(sgService, messageService, sgDialogueProvider) {\n      this.sgService = sgService;\n      this.messageService = messageService;\n      this.sgDialogueProvider = sgDialogueProvider;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.Sg_data = [];\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"securityGroupId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteriaList = [];\n      this.isFiltered = false;\n    }\n    ngOnInit() {\n      this.loadRecords();\n    }\n    loadRecords() {\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.isFiltered = false;\n      this.sgService.getScurityGroupPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFiltered = false;\n          this.Sg_data = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        }\n      });\n    }\n    editSgItem(securityGroupId) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        securityGroupId: securityGroupId,\n        isEdit: true,\n        newRecord: false\n      };\n      this.sgDialogueProvider.openDialog(dialogConfig);\n      this.sgDialogueProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'sgGrid',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    addSgItem() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        securityGroupId: 0,\n        isEdit: true,\n        newRecord: true\n      };\n      this.sgDialogueProvider.openDialog(dialogConfig);\n      this.sgDialogueProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'sgGrid',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {\n              fieldName: field,\n              value: filterValue,\n              matchMode: matchMode\n            };\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function SecurityGroupComponent_Factory(t) {\n      return new (t || SecurityGroupComponent)(i0.ɵɵdirectiveInject(i1.SgServices), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.SgDialogueProvider));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SecurityGroupComponent,\n      selectors: [[\"app-security-group\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 13,\n      vars: 11,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Security Group Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"scrollable\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"sgGrid\", \"position\", \"top-right\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"groupName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"groupName\"], [\"type\", \"text\", \"field\", \"groupName\", \"display\", \"menu\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"]],\n      template: function SecurityGroupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, SecurityGroupComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4, 5);\n          i0.ɵɵlistener(\"onFilter\", function SecurityGroupComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(6, SecurityGroupComponent_ng_template_6_Template, 18, 0, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, SecurityGroupComponent_ng_template_7_Template, 7, 4, \"ng-template\", 7);\n          i0.ɵɵtemplate(8, SecurityGroupComponent_ng_template_8_Template, 3, 1, \"ng-template\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 9)(10, \"p-paginator\", 10);\n          i0.ɵɵlistener(\"onPageChange\", function SecurityGroupComponent_Template_p_paginator_onPageChange_10_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(11, \"p-toast\", 11)(12, \"p-confirmDialog\", 12);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.Sg_data)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"rowHover\", false)(\"scrollable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i2.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i4.SortIcon, i4.ColumnFilter, i5.ButtonDirective, i6.Toast, i7.Panel, i8.ConfirmDialog, i9.MatTooltip, i10.Paginator]\n    });\n  }\n  return SecurityGroupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}