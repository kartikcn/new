{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PlusIcon } from 'primeng/icons/plus';\nimport { MinusIcon } from 'primeng/icons/minus';\nfunction Fieldset_ng_container_2_ng_container_2_PlusIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"PlusIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-fieldset-toggler\");\n  }\n}\nfunction Fieldset_ng_container_2_ng_container_2_span_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Fieldset_ng_container_2_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, Fieldset_ng_container_2_ng_container_2_span_2_ng_container_1_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.expandIconTemplate);\n  }\n}\nfunction Fieldset_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Fieldset_ng_container_2_ng_container_2_PlusIcon_1_Template, 1, 1, \"PlusIcon\", 9);\n    i0.ɵɵtemplate(2, Fieldset_ng_container_2_ng_container_2_span_2_Template, 2, 1, \"span\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.expandIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.expandIconTemplate);\n  }\n}\nfunction Fieldset_ng_container_2_ng_container_3_MinusIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"MinusIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-fieldset-toggler\");\n  }\n}\nfunction Fieldset_ng_container_2_ng_container_3_span_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Fieldset_ng_container_2_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, Fieldset_ng_container_2_ng_container_3_span_2_ng_container_1_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.collapseIconTemplate);\n  }\n}\nfunction Fieldset_ng_container_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Fieldset_ng_container_2_ng_container_3_MinusIcon_1_Template, 1, 1, \"MinusIcon\", 9);\n    i0.ɵɵtemplate(2, Fieldset_ng_container_2_ng_container_3_span_2_Template, 2, 1, \"span\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.collapseIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.collapseIconTemplate);\n  }\n}\nfunction Fieldset_ng_container_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Fieldset_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function Fieldset_ng_container_2_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.toggle($event));\n    })(\"keydown.enter\", function Fieldset_ng_container_2_Template_a_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.toggle($event));\n    });\n    i0.ɵɵtemplate(2, Fieldset_ng_container_2_ng_container_2_Template, 3, 2, \"ng-container\", 8);\n    i0.ɵɵtemplate(3, Fieldset_ng_container_2_ng_container_3_Template, 3, 2, \"ng-container\", 8);\n    i0.ɵɵtemplate(4, Fieldset_ng_container_2_ng_container_4_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-controls\", ctx_r0.id + \"-content\")(\"aria-expanded\", !ctx_r0.collapsed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.collapsed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.collapsed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n  }\n}\nfunction Fieldset_ng_template_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Fieldset_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵtemplate(3, Fieldset_ng_template_3_ng_container_3_Template, 1, 0, \"ng-container\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.legend);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.headerTemplate);\n  }\n}\nfunction Fieldset_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = [\"*\", [[\"p-header\"]]];\nconst _c1 = function (a1, a2) {\n  return {\n    \"p-fieldset p-component\": true,\n    \"p-fieldset-toggleable\": a1,\n    \"p-fieldset-expanded\": a2\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    transitionParams: a0,\n    height: \"0\"\n  };\n};\nconst _c3 = function (a1) {\n  return {\n    value: \"hidden\",\n    params: a1\n  };\n};\nconst _c4 = function (a0) {\n  return {\n    transitionParams: a0,\n    height: \"*\"\n  };\n};\nconst _c5 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\nconst _c6 = [\"*\", \"p-header\"];\nlet idx = 0;\n/**\n * Fieldset is a grouping component with the optional content toggle feature.\n * @group Components\n */\nlet Fieldset = /*#__PURE__*/(() => {\n  class Fieldset {\n    el;\n    /**\n     * Header text of the fieldset.\n     * @group Props\n     */\n    legend;\n    /**\n     * When specified, content can toggled by clicking the legend.\n     * @group Props\n     * @defaultValue false\n     */\n    toggleable;\n    /**\n     * Defines the default visibility state of the content.\n     * * @group Props\n     */\n    collapsed = false;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Transition options of the panel animation.\n     * @group Props\n     */\n    transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    /**\n     * Emits when the collapsed state changes.\n     * @param {boolean} value - New value.\n     * @group Emits\n     */\n    collapsedChange = new EventEmitter();\n    /**\n     * Callback to invoke before panel toggle.\n     * @param {PanelBeforeToggleEvent} event - Custom toggle event\n     * @group Emits\n     */\n    onBeforeToggle = new EventEmitter();\n    /**\n     * Callback to invoke after panel toggle.\n     * @param {PanelAfterToggleEvent} event - Custom toggle event\n     * @group Emits\n     */\n    onAfterToggle = new EventEmitter();\n    templates;\n    animating;\n    headerTemplate;\n    contentTemplate;\n    collapseIconTemplate;\n    expandIconTemplate;\n    constructor(el) {\n      this.el = el;\n    }\n    id = `p-fieldset-${idx++}`;\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n          case 'expandicon':\n            this.expandIconTemplate = item.template;\n            break;\n          case 'collapseicon':\n            this.collapseIconTemplate = item.template;\n            break;\n          case 'content':\n            this.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n    toggle(event) {\n      if (this.animating) {\n        return false;\n      }\n      this.animating = true;\n      this.onBeforeToggle.emit({\n        originalEvent: event,\n        collapsed: this.collapsed\n      });\n      if (this.collapsed) this.expand();else this.collapse();\n      this.onAfterToggle.emit({\n        originalEvent: event,\n        collapsed: this.collapsed\n      });\n      event.preventDefault();\n    }\n    expand() {\n      this.collapsed = false;\n      this.collapsedChange.emit(this.collapsed);\n    }\n    collapse() {\n      this.collapsed = true;\n      this.collapsedChange.emit(this.collapsed);\n    }\n    getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n    onToggleDone() {\n      this.animating = false;\n    }\n    static ɵfac = function Fieldset_Factory(t) {\n      return new (t || Fieldset)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Fieldset,\n      selectors: [[\"p-fieldset\"]],\n      contentQueries: function Fieldset_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        legend: \"legend\",\n        toggleable: \"toggleable\",\n        collapsed: \"collapsed\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        transitionOptions: \"transitionOptions\"\n      },\n      outputs: {\n        collapsedChange: \"collapsedChange\",\n        onBeforeToggle: \"onBeforeToggle\",\n        onAfterToggle: \"onAfterToggle\"\n      },\n      ngContentSelectors: _c6,\n      decls: 9,\n      vars: 23,\n      consts: [[3, \"ngClass\", \"ngStyle\"], [1, \"p-fieldset-legend\"], [4, \"ngIf\", \"ngIfElse\"], [\"legendContent\", \"\"], [\"role\", \"region\", 1, \"p-toggleable-content\"], [1, \"p-fieldset-content\"], [4, \"ngTemplateOutlet\"], [\"tabindex\", \"0\", \"pRipple\", \"\", 3, \"click\", \"keydown.enter\"], [4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-fieldset-toggler\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-fieldset-toggler\"], [1, \"p-fieldset-legend-text\"]],\n      template: function Fieldset_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"fieldset\", 0)(1, \"legend\", 1);\n          i0.ɵɵtemplate(2, Fieldset_ng_container_2_Template, 5, 5, \"ng-container\", 2);\n          i0.ɵɵtemplate(3, Fieldset_ng_template_3_Template, 4, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵlistener(\"@fieldsetContent.done\", function Fieldset_Template_div_animation_fieldsetContent_done_5_listener() {\n            return ctx.onToggleDone();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5);\n          i0.ɵɵprojection(7);\n          i0.ɵɵtemplate(8, Fieldset_ng_container_8_Template, 1, 0, \"ng-container\", 6);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(4);\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(12, _c1, ctx.toggleable, !ctx.collapsed && ctx.toggleable))(\"ngStyle\", ctx.style);\n          i0.ɵɵattribute(\"id\", ctx.id);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.toggleable)(\"ngIfElse\", _r1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"@fieldsetContent\", ctx.collapsed ? i0.ɵɵpureFunction1(17, _c3, i0.ɵɵpureFunction1(15, _c2, ctx.transitionOptions)) : i0.ɵɵpureFunction1(21, _c5, i0.ɵɵpureFunction1(19, _c4, ctx.animating ? ctx.transitionOptions : \"0ms\")));\n          i0.ɵɵattribute(\"id\", ctx.id + \"-content\")(\"aria-labelledby\", ctx.id)(\"aria-hidden\", ctx.collapsed);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n        }\n      },\n      dependencies: function () {\n        return [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple, MinusIcon, PlusIcon];\n      },\n      styles: [\".p-fieldset-legend>a,.p-fieldset-legend>span{display:flex;align-items:center;justify-content:center}.p-fieldset-toggleable .p-fieldset-legend a{cursor:pointer;-webkit-user-select:none;user-select:none;overflow:hidden;position:relative}.p-fieldset-legend-text{line-height:1}.p-fieldset-toggleable.p-fieldset-expanded>.p-toggleable-content:not(.ng-animating){overflow:visible}.p-fieldset-toggleable .p-toggleable-content{overflow:hidden}\\n\"],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('fieldsetContent', [state('hidden', style({\n          height: '0'\n        })), state('visible', style({\n          height: '*'\n        })), transition('visible <=> hidden', [animate('{{transitionParams}}')]), transition('void => *', animate(0))])]\n      },\n      changeDetection: 0\n    });\n  }\n  return Fieldset;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FieldsetModule = /*#__PURE__*/(() => {\n  class FieldsetModule {\n    static ɵfac = function FieldsetModule_Factory(t) {\n      return new (t || FieldsetModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FieldsetModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, RippleModule, MinusIcon, PlusIcon, SharedModule]\n    });\n  }\n  return FieldsetModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Fieldset, FieldsetModule };\n//# sourceMappingURL=primeng-fieldset.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}