{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { BuildingFilterInput } from '../../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../../background-loc/model/DTO/flFilterInput.model';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { RMFilterInputDTO } from '../../background-loc/model/DTO/rmFilterInput.model';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { SvgViewComponent } from '../../svg-view/svg-view.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../background-loc/services/bl.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"../../svg-view/services/svg-view.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../background-loc/provider/bl.provider\";\nimport * as i6 from \"../../background-loc/provider/fl.provider\";\nimport * as i7 from \"../../background-loc/provider/rm.provider\";\nimport * as i8 from \"primeng/api\";\nimport * as i9 from \"ngx-spinner\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@ng-select/ng-select\";\nimport * as i12 from \"primeng/button\";\nimport * as i13 from \"primeng/dialog\";\nimport * as i14 from \"primeng/toast\";\nimport * as i15 from \"primeng/panel\";\nimport * as i16 from \"primeng/confirmdialog\";\nfunction LinkRoomSvgComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Building: \", ctx_r0.svgFlList[0].blId, \" | Floor: \", ctx_r0.svgFlList[0].flId, \"\");\n  }\n}\nfunction LinkRoomSvgComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 26);\n  }\n}\nfunction LinkRoomSvgComponent_ng_container_32_p_header_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-header\");\n    i0.ɵɵtext(1, \"Room Details\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LinkRoomSvgComponent_ng_container_32_p_header_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-header\");\n    i0.ɵɵtext(1, \"Select Room\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"29vw\",\n    height: \"fit-content\"\n  };\n};\nfunction LinkRoomSvgComponent_ng_container_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p-dialog\", 27);\n    i0.ɵɵlistener(\"visibleChange\", function LinkRoomSvgComponent_ng_container_32_Template_p_dialog_visibleChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.displayRmUpdate = $event);\n    });\n    i0.ɵɵtemplate(2, LinkRoomSvgComponent_ng_container_32_p_header_2_Template, 2, 0, \"p-header\", 9);\n    i0.ɵɵtemplate(3, LinkRoomSvgComponent_ng_container_32_p_header_3_Template, 2, 0, \"p-header\", 9);\n    i0.ɵɵelementStart(4, \"form\", 12)(5, \"div\")(6, \"div\", 28)(7, \"p\", 29);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 29);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 13)(12, \"label\", 14);\n    i0.ɵɵtext(13, \"Room\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ng-select\", 30);\n    i0.ɵɵlistener(\"change\", function LinkRoomSvgComponent_ng_container_32_Template_ng_select_change_14_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSelectRoom($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_ng_container_32_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onAddNewRoom());\n    });\n    i0.ɵɵtext(16, \"Add new Room\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 18)(18, \"div\", 19)(19, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_ng_container_32_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.saveDialog());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_ng_container_32_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.cancelRoom());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_ng_container_32_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.unassignDialog());\n    });\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c0));\n    i0.ɵɵproperty(\"visible\", ctx_r2.displayRmUpdate)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.roomAlreadyAssignedElement);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.roomAlreadyAssignedElement);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.rmForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Building Id : \", ctx_r2.svgFlList[0].blId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Floor Id : \", ctx_r2.svgFlList[0].flId, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r2.rmData)(\"searchable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r2.isRoomSelected);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.rmForm.valid || !ctx_r2.isRoomIdChanged);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.roomAlreadyAssignedElement);\n  }\n}\nfunction LinkRoomSvgComponent_ngx_spinner_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 32)(1, \"p\", 33);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nconst _c1 = function () {\n  return {\n    width: \"33vw\",\n    height: \"fit-content\"\n  };\n};\nexport class LinkRoomSvgComponent {\n  constructor(blServ, authSrv, svgviewSrv, formBuilder, blProvider, flProvider, rmProvider, messageService, confirmationService, spinner, cdr) {\n    this.blServ = blServ;\n    this.authSrv = authSrv;\n    this.svgviewSrv = svgviewSrv;\n    this.formBuilder = formBuilder;\n    this.blProvider = blProvider;\n    this.flProvider = flProvider;\n    this.rmProvider = rmProvider;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.spinner = spinner;\n    this.cdr = cdr;\n    this.fileName = \"\";\n    this.elementIdName = \"\";\n    this.svgFlList = [];\n    this.fileString = \"\";\n    this.displayBlFlUpdate = false;\n    this.displayRmUpdate = false;\n    this.allBl = [];\n    this.allFL = [];\n    this.rmData = [];\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.isBuildingSelected = false;\n    this.isFloorSelected = false;\n    this.isRoomSelected = false;\n    this.isNewBuilding = false;\n    this.selectedFloorData = [];\n    this.selectedRoomData = [];\n    this.roomAlreadyAssignedElement = false;\n    this.roomWithElementId = [];\n    this.reader = new FileReader();\n    this.isRoomIdChanged = false;\n    this.defaultLoadColor = \"#0000FF\";\n    this.assignedColor = \"#ff0000\";\n    this.viewSvg = false;\n    this.isLinkRoomSvg = false;\n    this.allSVGElementsData = [];\n    this.showSpinner = true;\n    this.blAndFlForm = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]]\n    });\n    this.rmForm = this.formBuilder.group({\n      rmId: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadBuilding();\n    this.loadFloor();\n    this.messageService.clear();\n  }\n  ngAfterViewInit() {\n    if (this.viewSvg) {\n      this.svgViewComp;\n    }\n  }\n  onChange(event) {\n    this.blAndFlForm.patchValue({\n      blId: null,\n      flId: null\n    });\n    this.rmForm.patchValue({\n      rmId: null\n    });\n    let filename = event.target.files[0].name;\n    this.fileName = filename.split('.').slice(0, -1).join('.');\n    this.reader.readAsText(event.target.files[0]);\n    this.reader.onload = () => {\n      this.fileString = this.reader.result;\n    };\n    this.showSpinner = true;\n    this.spinner.show();\n    let ext = filename.match(/\\.([^\\.]+)$/)[1];\n    if (ext == \"svg\") {\n      this.blServ.checkSvgNameExists(this.fileName).subscribe(res => {\n        if (res.text == \"true\") {\n          this.getFloorOfSvg();\n          this.displayBlFlUpdate = false;\n          this.isLinkRoomSvg = true;\n          setTimeout(() => {\n            setTimeout(() => {\n              setTimeout(() => {\n                this.viewSvg = true;\n                this.cdr.detectChanges();\n                this.svgViewComp.loadSvgFile();\n                this.spinner.hide();\n                this.showSpinner = false;\n              }, 10);\n            }, 10);\n          }, 10);\n        } else {\n          this.displayBlFlUpdate = true;\n          this.svgFlList = [];\n          this.allSVGElementsData = [];\n          this.loadFloor();\n          this.spinner.hide();\n          this.showSpinner = false;\n        }\n      });\n    } else {\n      alert('It is an unsupported file format.Please choose only SVG file.');\n      this.onClearSvg();\n      this.spinner.hide();\n      this.showSpinner = false;\n    }\n  }\n  addRoomOnClickListener(elementN) {\n    this.elementIdName = elementN;\n    if (this.elementIdName.includes('room')) {\n      this.roomWithElementId = this.allSVGElementsData.filter(each => each.svgElementId == this.elementIdName);\n      this.getAllRoomsOfSvg();\n      setTimeout(() => {\n        if (this.roomWithElementId.length > 0) {\n          this.roomAlreadyAssignedElement = true;\n          this.rmData.unshift({\n            id: this.roomWithElementId[0].rmId,\n            name: this.roomWithElementId[0].rmId + ' - ' + this.roomWithElementId[0].rmName,\n            rmId: this.roomWithElementId[0].rmId,\n            compId: this.compId\n          });\n          this.rmForm.patchValue({\n            rmId: this.roomWithElementId[0].rmId\n          });\n          this.isRoomIdChanged = false;\n        } else {\n          this.roomAlreadyAssignedElement = false;\n          this.rmForm.patchValue({\n            rmId: null\n          });\n          this.isRoomIdChanged = true;\n        }\n        this.displayRmUpdate = true;\n      }, 10);\n    }\n  }\n  onClearSvg() {\n    let svgInput = document.getElementById(\"svgUpload\");\n    svgInput.value = '';\n    let obj = document.getElementById(\"svg-container\");\n    if (obj != null) {\n      obj.innerHTML = \"\";\n    }\n    this.svgFlList = [];\n    this.fileName = \"\";\n    this.blAndFlForm.patchValue({\n      blId: null,\n      flId: null\n    });\n    this.rmForm.patchValue({\n      rmId: null\n    });\n    this.isBuildingSelected = false;\n    this.isFloorSelected = false;\n    this.isRoomSelected = false;\n    this.isNewBuilding = false;\n    this.selectedFloorData = [];\n    this.selectedRoomData = [];\n    this.roomAlreadyAssignedElement = false;\n    this.roomWithElementId = [];\n    this.isRoomIdChanged = false;\n  }\n  getFloorOfSvg() {\n    this.svgFlList = [];\n    let data = {\n      id: '',\n      name: '',\n      blId: '',\n      compId: this.compId,\n      svgName: this.fileName\n    };\n    this.svgviewSrv.getFloorBySvgName(data).subscribe(res => {\n      if (res != null) {\n        let data = {\n          blId: res[0].blId,\n          flId: res[0].flId\n        };\n        this.svgFlList.push(data);\n        this.getAllRoomsOfSvg();\n      }\n    });\n  }\n  getAllRoomsOfSvg() {\n    this.allSVGElementsData = [];\n    this.rmData = [];\n    let data = {\n      id: '',\n      name: '',\n      blId: '',\n      compId: this.compId,\n      svgName: this.fileName\n    };\n    this.svgviewSrv.getRoomBySvgName(data).subscribe(res => {\n      if (res != null) {\n        this.allSVGElementsData = res;\n        this.rmData = res.filter(rm => rm.svgElementId === null);\n        this.rmData.map(rm => rm.id = rm.rmId);\n        this.rmData.map(i => {\n          i.name = i.rmId + ' - ' + i.rmName;\n          return i;\n        });\n        this.rmData.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n      }\n    });\n  }\n  loadBuilding() {\n    this.blServ.getALLBuilding().subscribe(res => {\n      this.enumBL = res;\n      this.enumBL = res.map(i => {\n        i.name = i.blNameString;\n        return i;\n      });\n      this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n  loadFloor() {\n    this.blServ.getALLFloor().subscribe(res => {\n      this.enumAllFL = res;\n      this.enumAllFL.map(i => {\n        i.flName = i.name;\n        return i;\n      });\n      this.enumAllFL.map(i => {\n        i.name = i.flNameString;\n        return i;\n      });\n      this.enumFL = this.enumAllFL.filter(f => f.svgName === null);\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    });\n  }\n  onSelectBlCode($event) {\n    if ($event.id != null && $event.id != \"\") {\n      setTimeout(() => {\n        this.blAndFlForm.patchValue({\n          flId: null\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n      this.isBuildingSelected = true;\n    } else {\n      this.enumFL = [];\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.isBuildingSelected = false;\n    }\n  }\n  onSelectFlCode($event) {\n    this.selectedFloorData = [];\n    if ($event.id || $event.flId) {\n      this.isFloorSelected = true;\n      this.selectedFloorData.push({\n        flId: $event.id ? $event.id : $event.flId,\n        flName: $event.flName,\n        blId: $event.blId,\n        compId: this.compId,\n        flInfo: $event.flInfo,\n        svgName: this.fileName\n      });\n    } else {\n      this.isFloorSelected = false;\n      this.selectedFloorData = [];\n    }\n  }\n  onSelectRoom($event) {\n    this.selectedRoomData = [];\n    if ($event.id || $event.rmId) {\n      this.isRoomSelected = true;\n      this.selectedRoomData.push({\n        blId: $event.blId,\n        flId: $event.flId,\n        rmId: $event.rmId,\n        rmName: $event.rmName,\n        rmCat: $event.rmCat,\n        rmType: $event.rmType,\n        rmInfo: $event.rmInfo,\n        rmArea: $event.rmArea,\n        compId: this.compId,\n        svgElementId: this.elementIdName,\n        isReservable: $event.isReservable,\n        isHotelable: $event.isHotelable,\n        rmPhoto1: $event.rmPhoto1,\n        rmPhoto2: $event.rmPhoto2\n      });\n    } else {\n      this.isRoomSelected = false;\n      this.selectedRoomData = [];\n    }\n    if (this.roomWithElementId[0].rmId == $event.rmId) {\n      this.isRoomIdChanged = false;\n    } else {\n      this.isRoomIdChanged = true;\n    }\n  }\n  loadFloorCode(bl_id) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id && t.svgName === null).map(i => {\n        if (!i.name.includes(i.id + ' - ')) {\n          i.name = i.name;\n        }\n        return i;\n      });\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n  saveBlAndFl() {\n    this.messageService.clear();\n    this.svgFlList = [];\n    this.showSpinner = true;\n    this.spinner.show();\n    this.blServ.saveFloor(this.selectedFloorData[0]).subscribe(res => {\n      if (res != null) {\n        this.displayBlFlUpdate = false;\n        this.isLinkRoomSvg = true;\n        this.messageService.add({\n          key: 'svgMessage',\n          severity: 'success',\n          summary: 'Floor added',\n          detail: 'The floor was added successfully'\n        });\n        this.svgFlList = this.selectedFloorData;\n        this.viewSvg = true;\n        this.cdr.detectChanges();\n        this.svgViewComp.loadSvgFile();\n        this.spinner.hide();\n        this.showSpinner = false;\n      }\n    });\n  }\n  cancelBlAndFl() {\n    this.displayBlFlUpdate = false;\n    this.onClearSvg();\n  }\n  saveRoom() {\n    this.messageService.clear();\n    this.updateUnassignRoom();\n    this.blServ.saveRoom(this.selectedRoomData[0]).subscribe(res => {\n      if (res != null) {\n        this.messageService.clear();\n        this.displayRmUpdate = false;\n        if (this.roomAlreadyAssignedElement) {\n          this.messageService.add({\n            key: 'svgMessage',\n            severity: 'success',\n            summary: 'Room updated',\n            detail: 'The room was updated successfully'\n          });\n        } else {\n          this.messageService.add({\n            key: 'svgMessage',\n            severity: 'success',\n            summary: 'Room added',\n            detail: 'The room was added successfully'\n          });\n        }\n        this.getAllRoomsOfSvg();\n        this.isRoomSelected = false;\n        setTimeout(() => {\n          //this.svgViewComp.loadRoomColors();\n        }, 10);\n      }\n    });\n  }\n  cancelRoom() {\n    this.displayRmUpdate = false;\n  }\n  onAddNewBuilding() {\n    this.messageService.clear();\n    this.isNewBuilding = true;\n    this.isBuildingSelected = true;\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '750px';\n    dialogConfig.data = {\n      bl_id: null,\n      isEdit: true,\n      newRecord: true\n    };\n    this.blProvider.openDialog(dialogConfig);\n    this.displayBlFlUpdate = false;\n    this.blProvider.onDialogueClosed.subscribe(result => {\n      this.displayBlFlUpdate = true;\n      this.messageService.clear();\n      if (result != \"Cancel\") {\n        this.messageService.add({\n          key: 'svgMessage',\n          severity: 'success',\n          summary: 'Building Added',\n          detail: 'The building was added successfully'\n        });\n        this.loadBuilding();\n        this.blAndFlForm.patchValue({\n          blId: result[1].blId,\n          flId: null\n        });\n        this.isBuildingSelected = true;\n        setTimeout(() => {\n          this.loadFloorCode(result[1].blId);\n        }, 100);\n      }\n    });\n  }\n  onAddNewFloor() {\n    this.messageService.clear();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '750px';\n    dialogConfig.data = {\n      fl_id: null,\n      bl_id: this.blAndFlForm.controls.blId.value,\n      isEdit: true,\n      newRecord: true,\n      isSvg: true\n    };\n    this.flProvider.openDialog(dialogConfig);\n    this.displayBlFlUpdate = false;\n    this.flProvider.onDialogueClosed.subscribe(result => {\n      this.messageService.clear();\n      this.displayBlFlUpdate = true;\n      if (result != \"Cancel\") {\n        this.loadFloor();\n        setTimeout(() => {\n          this.loadFloorCode(result.blId);\n        }, 100);\n        this.blAndFlForm.patchValue({\n          blId: result.blId,\n          flId: result.flId\n        });\n        this.onSelectFlCode(result);\n        this.messageService.add({\n          key: 'svgMessage',\n          severity: 'success',\n          summary: 'Floor Added',\n          detail: 'The floor was added successfully'\n        });\n      }\n    });\n  }\n  onAddNewRoom() {\n    this.messageService.clear();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '750px';\n    dialogConfig.data = {\n      bl_id: this.svgFlList[0].blId,\n      fl_id: this.svgFlList[0].flId,\n      rm_id: null,\n      isEdit: true,\n      newRecord: true,\n      isSvg: true\n    };\n    this.rmProvider.openDialog(dialogConfig);\n    this.displayRmUpdate = false;\n    this.rmProvider.onDialogueClosed.subscribe(result => {\n      this.messageService.clear();\n      this.displayRmUpdate = true;\n      if (result != \"Cancel\") {\n        this.getAllRoomsOfSvg();\n        this.rmForm.patchValue({\n          rmId: result.rmId\n        });\n        this.onSelectRoom(result);\n        this.messageService.add({\n          key: 'svgMessage',\n          severity: 'success',\n          summary: 'Room Added',\n          detail: 'The room was added successfully'\n        });\n      }\n    });\n  }\n  getval(e) {\n    if (e.target.className.includes('p-dialog-header-close')) {\n      this.onClearSvg();\n    }\n  }\n  saveDialog() {\n    let msg = \"\";\n    if (this.roomAlreadyAssignedElement) {\n      msg = \"Are you sure you want to update from room \" + this.roomWithElementId[0].rmId + \" to room \" + this.selectedRoomData[0].rmId + \" ?\";\n    } else {\n      msg = UtilConstant.UPDATE_SVG_ROOM;\n    }\n    this.confirmationService.confirm({\n      message: msg,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      key: 'svgConfirm',\n      accept: () => {\n        this.saveRoom();\n      }\n    });\n  }\n  unassignRoom() {\n    this.updateUnassignRoom();\n    this.rmForm.patchValue({\n      rmId: null\n    });\n    this.isRoomIdChanged = true;\n    this.roomWithElementId = [];\n    this.roomAlreadyAssignedElement = false;\n    this.displayRmUpdate = false;\n  }\n  updateUnassignRoom() {\n    if (this.roomAlreadyAssignedElement) {\n      let updateData = {\n        blId: this.roomWithElementId[0].blId,\n        flId: this.roomWithElementId[0].flId,\n        rmId: this.roomWithElementId[0].rmId,\n        rmName: this.roomWithElementId[0].rmName,\n        rmCat: this.roomWithElementId[0].rmCat,\n        rmType: this.roomWithElementId[0].rmType,\n        rmInfo: this.roomWithElementId[0].rmInfo,\n        rmArea: this.roomWithElementId[0].rmArea,\n        compId: this.compId,\n        svgElementId: null,\n        isReservable: this.roomWithElementId[0].isReservable,\n        isHotelable: this.roomWithElementId[0].isHotelable,\n        rmPhoto1: this.roomWithElementId[0].rmPhoto1,\n        rmPhoto2: this.roomWithElementId[0].rmPhoto2\n      };\n      this.blServ.saveRoom(updateData).subscribe(res => {\n        this.getAllRoomsOfSvg();\n        setTimeout(() => {\n          //this.svgViewComp.loadRoomColors();\n        }, 10);\n      });\n    }\n  }\n  unassignDialog() {\n    this.confirmationService.confirm({\n      message: UtilConstant.UnAssign_Warning,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      key: 'svgConfirm',\n      accept: () => {\n        this.unassignRoom();\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LinkRoomSvgComponent_Factory(t) {\n    return new (t || LinkRoomSvgComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.SvgViewService), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i5.BLModalDialogueProvider), i0.ɵɵdirectiveInject(i6.FLModalDialogueProvider), i0.ɵɵdirectiveInject(i7.RMModalDialogueProvider), i0.ɵɵdirectiveInject(i8.MessageService), i0.ɵɵdirectiveInject(i8.ConfirmationService), i0.ɵɵdirectiveInject(i9.NgxSpinnerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LinkRoomSvgComponent,\n    selectors: [[\"app-link-room-svg\"]],\n    viewQuery: function LinkRoomSvgComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SvgViewComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 36,\n    vars: 23,\n    consts: [[\"header\", \"Link Room with SVG\"], [1, \"card\"], [1, \"upload-box\"], [1, \"input-group\"], [1, \"input-group-btn\", 2, \"margin-right\", \"10px\"], [1, \"btn\", \"btn-primary\"], [\"type\", \"file\", \"multiple\", \"\", \"accept\", \".svg\", \"id\", \"svgUpload\", 1, \"upload-input\", 2, \"display\", \"none\", 3, \"change\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"btn\", \"btn-primary\", 2, \"margin-left\", \"10px\", 3, \"click\"], [4, \"ngIf\"], [\"style\", \"height: 520px;\", 4, \"ngIf\"], [\"header\", \"Select Building and Floor\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\", \"click\"], [3, \"formGroup\"], [1, \"input-label-custom\", \"input-container\"], [1, \"form-field-lable\"], [\"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Select Building\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [1, \"btn\", \"btn-success\", 2, \"margin-left\", \"10px\", 3, \"hidden\", \"click\"], [\"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Select Floor\", 1, \"ng-select-dropdown\", 2, \"margin-left\", \"26px\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"display\", \"flex\", \"justify-content\", \"center\"], [2, \"display\", \"flex\", \"margin-top\", \"10px\", \"margin-right\", \"10px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-primary\", \"p-button-sm\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"10px\", 3, \"click\"], [\"key\", \"svgMessage\", \"position\", \"top-right\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\", \"key\", \"svgConfirm\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-fussion\", 3, \"fullScreen\", 4, \"ngIf\"], [1, \"svg-details-text\"], [2, \"height\", \"520px\"], [3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [2, \"margin-top\", \"10px\"], [1, \"svg-element-text\"], [\"formControlName\", \"rmId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Select Room\", 1, \"ng-select-dropdown\", 2, \"margin-left\", \"10px\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Unassign Room\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"10px\", 3, \"disabled\", \"click\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-fussion\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function LinkRoomSvgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-panel\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4)(5, \"span\", 5);\n        i0.ɵɵtext(6, \" Select file \");\n        i0.ɵɵelementStart(7, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function LinkRoomSvgComponent_Template_input_change_7_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(8, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_Template_button_click_9_listener() {\n          return ctx.onClearSvg();\n        });\n        i0.ɵɵtext(10, \"Clear\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, LinkRoomSvgComponent_div_11_Template, 3, 2, \"div\", 9);\n        i0.ɵɵtemplate(12, LinkRoomSvgComponent_div_12_Template, 1, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p-dialog\", 11);\n        i0.ɵɵlistener(\"visibleChange\", function LinkRoomSvgComponent_Template_p_dialog_visibleChange_13_listener($event) {\n          return ctx.displayBlFlUpdate = $event;\n        })(\"click\", function LinkRoomSvgComponent_Template_p_dialog_click_13_listener($event) {\n          return ctx.getval($event);\n        });\n        i0.ɵɵelementStart(14, \"form\", 12)(15, \"div\")(16, \"div\", 13)(17, \"label\", 14);\n        i0.ɵɵtext(18, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ng-select\", 15);\n        i0.ɵɵlistener(\"change\", function LinkRoomSvgComponent_Template_ng_select_change_19_listener($event) {\n          return ctx.onSelectBlCode($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_Template_button_click_20_listener() {\n          return ctx.onAddNewBuilding();\n        });\n        i0.ɵɵtext(21, \"Add new building\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 13)(23, \"label\", 14);\n        i0.ɵɵtext(24, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"ng-select\", 17);\n        i0.ɵɵlistener(\"change\", function LinkRoomSvgComponent_Template_ng_select_change_25_listener($event) {\n          return ctx.onSelectFlCode($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_Template_button_click_26_listener() {\n          return ctx.onAddNewFloor();\n        });\n        i0.ɵɵtext(27, \"Add new Floor\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 18)(29, \"div\", 19)(30, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_Template_button_click_30_listener() {\n          return ctx.saveBlAndFl();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function LinkRoomSvgComponent_Template_button_click_31_listener() {\n          return ctx.cancelBlAndFl();\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(32, LinkRoomSvgComponent_ng_container_32_Template, 22, 19, \"ng-container\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"p-toast\", 22)(34, \"p-confirmDialog\", 23);\n        i0.ɵɵtemplate(35, LinkRoomSvgComponent_ngx_spinner_35_Template, 3, 1, \"ngx-spinner\", 24);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"value\", ctx.fileName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.svgFlList.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c1));\n        i0.ɵɵproperty(\"visible\", ctx.displayBlFlUpdate)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.blAndFlForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.isBuildingSelected);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.isBuildingSelected || ctx.isFloorSelected);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.blAndFlForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayRmUpdate);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    dependencies: [i10.NgIf, i11.NgSelectComponent, i8.Header, i12.ButtonDirective, i13.Dialog, i14.Toast, i15.Panel, i16.ConfirmDialog, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i9.NgxSpinnerComponent],\n    styles: [\".card[_ngcontent-%COMP%] {\\n  overflow: auto;\\n  height: 600px;\\n  min-height: 400px;\\n  padding: 10px;\\n}\\n\\n.upload-box[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.upload-btn[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n}\\n\\n.upload-input[_ngcontent-%COMP%] {\\n  width: 77vw;\\n}\\n\\n#svg-container[_ngcontent-%COMP%] {\\n  border: 2px solid #879cc9;\\n  margin-top: 5px;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n\\n.svg-content[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  position: absolute;\\n}\\n\\n.form-field-lable[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  margin-bottom: 0px;\\n  font-weight: 500;\\n}\\n\\n[_nghost-%COMP%]     .p-dialog-header {\\n  background-color: #879cc9;\\n  color: black;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n  height: 10px !important;\\n}\\n\\n.input-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.ng-select-dropdown[_ngcontent-%COMP%] {\\n  width: 60%;\\n  margin-left: 10px;\\n}\\n\\n.svg-details-text[_ngcontent-%COMP%] {\\n  margin: 5px 0 5px 20px;\\n  font-size: 13px;\\n}\\n\\n.svg-element-text[_ngcontent-%COMP%] {\\n  font-size: 13px;\\n  font-weight: 450;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvbGluay1yb29tLXN2Zy9tb2RhbC9saW5rLXJvb20tc3ZnLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGFBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7QUFDSjs7QUFDQTtFQUNJLGFBQUE7QUFFSjs7QUFDQTtFQUNJLGlCQUFBO0FBRUo7O0FBQUE7RUFDSSxXQUFBO0FBR0o7O0FBQUE7RUFDSSx5QkFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FBR0o7O0FBQUE7RUFDSSxxQkFBQTtFQUNBLGtCQUFBO0FBR0o7O0FBQUE7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtBQUdKOztBQUFBO0VBQ0kseUJBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsdUJBQUE7QUFHSjs7QUFBQTtFQUNJLGFBQUE7RUFFQSxtQkFBQTtBQUVKOztBQUNBO0VBQ0ksVUFBQTtFQUNBLGlCQUFBO0FBRUo7O0FBQUE7RUFDSSxzQkFBQTtFQUNBLGVBQUE7QUFHSjs7QUFBQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtBQUdKIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmR7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgaGVpZ2h0OjYwMHB4O1xuICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICAgIHBhZGRpbmc6MTBweDtcbn1cbi51cGxvYWQtYm94e1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbi51cGxvYWQtYnRue1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuLnVwbG9hZC1pbnB1dHtcbiAgICB3aWR0aDo3N3Z3O1xufVxuXG4jc3ZnLWNvbnRhaW5lcntcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjODc5Y2M5O1xuICAgIG1hcmdpbi10b3A6NXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDoxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5zdmctY29udGVudCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgXG59XG5cbi5mb3JtLWZpZWxkLWxhYmxlIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRpYWxvZy1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4NzljYzk7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLmlucHV0LWNvbnRhaW5lcntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm5nLXNlbGVjdC1kcm9wZG93bntcbiAgICB3aWR0aDo2MCU7XG4gICAgbWFyZ2luLWxlZnQ6MTBweDtcbn1cbi5zdmctZGV0YWlscy10ZXh0e1xuICAgIG1hcmdpbjo1cHggMCA1cHggMjBweDtcbiAgICBmb250LXNpemU6IDEzcHg7XG59XG5cbi5zdmctZWxlbWVudC10ZXh0e1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBmb250LXdlaWdodDogNDUwO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","BuildingFilterInput","FLFilterInputDTO","MatDialogConfig","RMFilterInputDTO","MessageService","UtilConstant","SvgViewComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","svgFlList","blId","flId","ɵɵelement","ɵɵelementContainerStart","ɵɵlistener","LinkRoomSvgComponent_ng_container_32_Template_p_dialog_visibleChange_1_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","displayRmUpdate","ɵɵtemplate","LinkRoomSvgComponent_ng_container_32_p_header_2_Template","LinkRoomSvgComponent_ng_container_32_p_header_3_Template","LinkRoomSvgComponent_ng_container_32_Template_ng_select_change_14_listener","ctx_r8","onSelectRoom","LinkRoomSvgComponent_ng_container_32_Template_button_click_15_listener","ctx_r9","onAddNewRoom","LinkRoomSvgComponent_ng_container_32_Template_button_click_19_listener","ctx_r10","saveDialog","LinkRoomSvgComponent_ng_container_32_Template_button_click_20_listener","ctx_r11","cancelRoom","LinkRoomSvgComponent_ng_container_32_Template_button_click_21_listener","ctx_r12","unassignDialog","ɵɵelementContainerEnd","ɵɵstyleMap","ɵɵpureFunction0","_c0","ɵɵproperty","ctx_r2","roomAlreadyAssignedElement","rmForm","ɵɵtextInterpolate1","rmData","isRoomSelected","valid","isRoomIdChanged","LinkRoomSvgComponent","constructor","blServ","authSrv","svgviewSrv","formBuilder","blProvider","flProvider","rmProvider","messageService","confirmationService","spinner","cdr","fileName","elementIdName","fileString","displayBlFlUpdate","allBl","allFL","enumBL","enumFL","enumAllFL","isBuildingSelected","isFloorSelected","isNewBuilding","selectedFloorData","selectedRoomData","roomWithElementId","reader","FileReader","defaultLoadColor","assignedColor","viewSvg","isLinkRoomSvg","allSVGElementsData","showSpinner","blAndFlForm","group","required","rmId","ngOnInit","compId","getLoggedInUserCompId","loadBuilding","loadFloor","clear","ngAfterViewInit","svgViewComp","onChange","event","patchValue","filename","target","files","name","split","slice","join","readAsText","onload","result","show","ext","match","checkSvgNameExists","subscribe","res","text","getFloorOfSvg","setTimeout","detectChanges","loadSvgFile","hide","alert","onClearSvg","addRoomOnClickListener","elementN","includes","filter","each","svgElementId","getAllRoomsOfSvg","length","unshift","id","rmName","svgInput","document","getElementById","value","obj","innerHTML","data","svgName","getFloorBySvgName","push","getRoomBySvgName","rm","map","i","getALLBuilding","blNameString","getALLFloor","flName","flNameString","f","onSelectBlCode","loadFloorCode","onSelectFlCode","flInfo","rmCat","rmType","rmInfo","rmArea","isReservable","isHotelable","rmPhoto1","rmPhoto2","bl_id","t","saveBlAndFl","saveFloor","add","key","severity","summary","detail","cancelBlAndFl","saveRoom","updateUnassignRoom","onAddNewBuilding","dialogConfig","disableClose","autoFocus","width","isEdit","newRecord","openDialog","onDialogueClosed","onAddNewFloor","fl_id","controls","isSvg","rm_id","getval","e","className","msg","UPDATE_SVG_ROOM","confirm","message","header","icon","accept","unassignRoom","updateData","UnAssign_Warning","_","ɵɵdirectiveInject","i1","BuildingService","i2","AuthService","i3","SvgViewService","i4","UntypedFormBuilder","i5","BLModalDialogueProvider","i6","FLModalDialogueProvider","i7","RMModalDialogueProvider","i8","ConfirmationService","i9","NgxSpinnerService","ChangeDetectorRef","_2","selectors","viewQuery","LinkRoomSvgComponent_Query","rf","ctx","decls","vars","consts","template","LinkRoomSvgComponent_Template","LinkRoomSvgComponent_Template_input_change_7_listener","LinkRoomSvgComponent_Template_button_click_9_listener","LinkRoomSvgComponent_div_11_Template","LinkRoomSvgComponent_div_12_Template","LinkRoomSvgComponent_Template_p_dialog_visibleChange_13_listener","LinkRoomSvgComponent_Template_p_dialog_click_13_listener","LinkRoomSvgComponent_Template_ng_select_change_19_listener","LinkRoomSvgComponent_Template_button_click_20_listener","LinkRoomSvgComponent_Template_ng_select_change_25_listener","LinkRoomSvgComponent_Template_button_click_26_listener","LinkRoomSvgComponent_Template_button_click_30_listener","LinkRoomSvgComponent_Template_button_click_31_listener","LinkRoomSvgComponent_ng_container_32_Template","LinkRoomSvgComponent_ngx_spinner_35_Template","_c1"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/link-room-svg/modal/link-room-svg.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/link-room-svg/modal/link-room-svg.component.html"],"sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { BuildingService } from '../../background-loc/services/bl.service';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { BuildingFilterInput } from '../../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../../background-loc/model/DTO/flFilterInput.model';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { BLModalDialogueProvider } from '../../background-loc/provider/bl.provider';\nimport { FLModalDialogueProvider } from '../../background-loc/provider/fl.provider';\nimport { RMFilterInputDTO } from '../../background-loc/model/DTO/rmFilterInput.model';\nimport { RMModalDialogueProvider } from '../../background-loc/provider/rm.provider';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { SvgViewComponent } from '../../svg-view/svg-view.component';\nimport { SvgViewService } from '../../svg-view/services/svg-view.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-link-room-svg',\n  templateUrl: './link-room-svg.component.html',\n  styleUrls: ['./link-room-svg.component.scss'],\n  providers: [MessageService]\n})\nexport class LinkRoomSvgComponent implements OnInit, AfterViewInit {\n\n  fileName: string = \"\";\n  elementIdName: string = \"\";\n  compId!: number;\n  svgFlList: any[] = [];\n  fileString: string | ArrayBuffer = \"\";\n  displayBlFlUpdate: boolean = false;\n  displayRmUpdate: boolean = false;\n  allBl: any[] = [];\n  allFL: any[] = [];\n  rmData: any[] = [];\n  blAndFlForm: UntypedFormGroup;\n  rmForm: UntypedFormGroup;\n  enumBL: BuildingFilterInput[] = [];\n  enumFL: any[] = [];\n  enumAllFL: any[] = [];\n  isBuildingSelected: boolean = false;\n  isFloorSelected: boolean = false;\n  isRoomSelected: boolean = false;\n  isNewBuilding: boolean = false;\n  selectedFloorData: any[] = [];\n  selectedRoomData: any[] = [];\n  roomAlreadyAssignedElement: boolean = false;\n  roomWithElementId: any[] = [];\n  reader = new FileReader();\n  isRoomIdChanged: boolean = false;\n  defaultLoadColor: string = \"#0000FF\";\n  assignedColor: string = \"#ff0000\";\n  @ViewChild(SvgViewComponent, { static: false }) svgViewComp!: SvgViewComponent;\n  viewSvg: boolean = false;\n  isLinkRoomSvg: boolean = false;\n  allSVGElementsData: any[] = [];\n  showSpinner: boolean = true;\n  constructor(\n    private blServ: BuildingService,\n    private authSrv: AuthService,\n    private svgviewSrv: SvgViewService,\n    private formBuilder: UntypedFormBuilder,\n    private blProvider: BLModalDialogueProvider,\n    private flProvider: FLModalDialogueProvider,\n    private rmProvider: RMModalDialogueProvider,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private spinner: NgxSpinnerService,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.blAndFlForm = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]]\n    })\n    this.rmForm = this.formBuilder.group({\n      rmId: [null, [Validators.required]]\n    })\n  }\n\n  ngOnInit(): void {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadBuilding();\n    this.loadFloor();\n    this.messageService.clear();\n  }\n\n  ngAfterViewInit() {\n    if (this.viewSvg) {\n      this.svgViewComp;\n    }\n  }\n\n  onChange(event: any) {\n    this.blAndFlForm.patchValue({\n      blId: null,\n      flId: null\n    });\n    this.rmForm.patchValue({\n      rmId: null\n    })\n    let filename = event.target.files[0].name;\n    this.fileName = filename.split('.').slice(0, -1).join('.');\n    \n    this.reader.readAsText(event.target.files[0]);\n    this.reader.onload = () => {\n      this.fileString = this.reader.result!;\n    }\n    this.showSpinner = true;\n    this.spinner.show();\n    let ext = filename.match(/\\.([^\\.]+)$/)![1];\n    if (ext == \"svg\") {\n      this.blServ.checkSvgNameExists(this.fileName).subscribe((res: any) => {\n        if (res.text == \"true\") {\n          this.getFloorOfSvg();\n          this.displayBlFlUpdate = false;\n          this.isLinkRoomSvg = true;\n          setTimeout(() => {\n            setTimeout(() => {\n              setTimeout(() => {\n                this.viewSvg = true;\n                this.cdr.detectChanges();\n                this.svgViewComp.loadSvgFile();\n                this.spinner.hide();\n                this.showSpinner = false;\n              }, 10)\n            }, 10)\n          }, 10)\n        } else {\n          this.displayBlFlUpdate = true;\n          this.svgFlList = [];\n          this.allSVGElementsData = [];\n          this.loadFloor();\n          this.spinner.hide();\n          this.showSpinner = false;\n        }\n      })\n    } else {\n      alert('It is an unsupported file format.Please choose only SVG file.');\n      this.onClearSvg();\n      this.spinner.hide();\n      this.showSpinner = false;\n    }\n  }\n\n  addRoomOnClickListener(elementN: any) {\n    this.elementIdName = elementN;\n    if (this.elementIdName.includes('room')) {\n      this.roomWithElementId = this.allSVGElementsData.filter((each: any) => each.svgElementId == this.elementIdName);\n      this.getAllRoomsOfSvg();\n      setTimeout(() => {\n        if (this.roomWithElementId.length > 0) {\n          this.roomAlreadyAssignedElement = true;\n          this.rmData.unshift({\n            id: this.roomWithElementId[0].rmId, name: this.roomWithElementId[0].rmId + ' - ' + this.roomWithElementId[0].rmName,\n            rmId: this.roomWithElementId[0].rmId, compId: this.compId\n          });\n          this.rmForm.patchValue({\n            rmId: this.roomWithElementId[0].rmId\n          })\n          this.isRoomIdChanged = false;\n        }\n        else {\n          this.roomAlreadyAssignedElement = false;\n          this.rmForm.patchValue({\n            rmId: null\n          })\n          this.isRoomIdChanged = true;\n        }\n        this.displayRmUpdate = true;\n      }, 10)\n    }\n  }\n\n  onClearSvg() {\n    let svgInput = document.getElementById(\"svgUpload\");\n    (svgInput! as HTMLInputElement).value = '';\n    let obj = document.getElementById(\"svg-container\");\n    if (obj != null) {\n      obj!.innerHTML = \"\";\n    }\n    this.svgFlList = [];\n    this.fileName = \"\";\n    this.blAndFlForm.patchValue({\n      blId: null,\n      flId: null\n    });\n    this.rmForm.patchValue({\n      rmId: null\n    })\n    this.isBuildingSelected = false;\n    this.isFloorSelected = false;\n    this.isRoomSelected = false;\n    this.isNewBuilding = false;\n    this.selectedFloorData = [];\n    this.selectedRoomData = [];\n    this.roomAlreadyAssignedElement = false;\n    this.roomWithElementId = [];\n    this.isRoomIdChanged = false;\n  }\n\n  getFloorOfSvg() {\n    this.svgFlList = [];\n    let data: any = {\n      id: '',\n      name: '',\n      blId: '',\n      compId: this.compId,\n      svgName: this.fileName\n    }\n    this.svgviewSrv.getFloorBySvgName(data).subscribe((res: any) => {\n      if (res != null) {\n        let data = {\n          blId: res[0].blId,\n          flId: res[0].flId\n        }\n        this.svgFlList.push(data);\n        this.getAllRoomsOfSvg();\n      }\n    })\n  }\n  getAllRoomsOfSvg() {\n    this.allSVGElementsData = [];\n    this.rmData = [];\n    let data: any = {\n      id: '',\n      name: '',\n      blId: '',\n      compId: this.compId,\n      svgName: this.fileName\n    }\n    this.svgviewSrv.getRoomBySvgName(data).subscribe((res: any) => {\n      if (res != null) {\n        this.allSVGElementsData = res;\n        this.rmData = res.filter((rm: any) => rm.svgElementId === null);\n        this.rmData.map(rm => rm.id = rm.rmId);\n        this.rmData.map((i: any) => { i.name = i.rmId + ' - ' + i.rmName; return i; });\n        this.rmData.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n      }\n    })\n  }\n\n  loadBuilding() {\n    this.blServ.getALLBuilding().subscribe((res: any) => {\n      this.enumBL = res;\n      this.enumBL = res.map((i: any) => { i.name = i.blNameString; return i; });\n      this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n\n  loadFloor() {\n    this.blServ.getALLFloor().subscribe((res: any) => {\n      this.enumAllFL = res;\n      this.enumAllFL.map((i: any) => { i.flName = i.name; return i; });\n      this.enumAllFL.map((i: any) => { i.name = i.flNameString; return i; });\n      this.enumFL = this.enumAllFL.filter((f: any) => f.svgName === null)\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    });\n  }\n\n  onSelectBlCode($event: any) {\n    if ($event.id != null && $event.id != \"\") {\n      setTimeout(() => {\n        this.blAndFlForm.patchValue({\n          flId: null,\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n      this.isBuildingSelected = true;\n    }\n    else {\n      this.enumFL = [];\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.isBuildingSelected = false;\n    }\n  }\n\n  onSelectFlCode($event: any) {\n    this.selectedFloorData = [];\n    if ($event.id || $event.flId) {\n      this.isFloorSelected = true;\n      this.selectedFloorData.push({\n        flId: $event.id ? $event.id : $event.flId,\n        flName: $event.flName,\n        blId: $event.blId,\n        compId: this.compId,\n        flInfo: $event.flInfo,\n        svgName: this.fileName\n      });\n    }\n    else {\n      this.isFloorSelected = false;\n      this.selectedFloorData = [];\n    }\n  }\n\n  onSelectRoom($event: any) {\n    this.selectedRoomData = [];\n    if ($event.id || $event.rmId) {\n      this.isRoomSelected = true;\n      this.selectedRoomData.push({\n        blId: $event.blId,\n        flId: $event.flId,\n        rmId: $event.rmId,\n        rmName: $event.rmName,\n        rmCat: $event.rmCat,\n        rmType: $event.rmType,\n        rmInfo: $event.rmInfo,\n        rmArea: $event.rmArea,\n        compId: this.compId,\n        svgElementId: this.elementIdName,\n        isReservable: $event.isReservable,\n        isHotelable: $event.isHotelable,\n        rmPhoto1: $event.rmPhoto1,\n        rmPhoto2: $event.rmPhoto2\n      });\n    }\n    else {\n      this.isRoomSelected = false;\n      this.selectedRoomData = [];\n    }\n\n    if (this.roomWithElementId[0].rmId == $event.rmId) {\n      this.isRoomIdChanged = false;\n    } else {\n      this.isRoomIdChanged = true;\n    }\n  }\n\n  loadFloorCode(bl_id: any) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id && t.svgName === null)\n        .map((i) => {\n          if (!i.name.includes(i.id + ' - ')) { i.name = i.name; }\n          return i;\n        });\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n\n  saveBlAndFl() {\n    this.messageService.clear();\n    this.svgFlList = [];\n    this.showSpinner = true;\n    this.spinner.show();\n    this.blServ.saveFloor(this.selectedFloorData[0]).subscribe((res: any) => {\n      if (res != null) {\n        this.displayBlFlUpdate = false;\n        this.isLinkRoomSvg = true;\n        this.messageService.add({ key: 'svgMessage', severity: 'success', summary: 'Floor added', detail: 'The floor was added successfully' });\n        this.svgFlList = this.selectedFloorData;\n        this.viewSvg = true;\n        this.cdr.detectChanges();\n        this.svgViewComp.loadSvgFile();\n        this.spinner.hide();\n        this.showSpinner = false;\n      }\n    })\n  }\n\n  cancelBlAndFl() {\n    this.displayBlFlUpdate = false;\n    this.onClearSvg();\n  }\n\n  saveRoom() {\n    this.messageService.clear();\n    this.updateUnassignRoom();\n    this.blServ.saveRoom(this.selectedRoomData[0]).subscribe((res: any) => {\n      if (res != null) {\n        this.messageService.clear();\n        this.displayRmUpdate = false;\n        if (this.roomAlreadyAssignedElement) {\n          this.messageService.add({ key: 'svgMessage', severity: 'success', summary: 'Room updated', detail: 'The room was updated successfully' });\n        } else {\n          this.messageService.add({ key: 'svgMessage', severity: 'success', summary: 'Room added', detail: 'The room was added successfully' });\n        }\n        this.getAllRoomsOfSvg();\n        this.isRoomSelected = false;\n        setTimeout(() => {\n          //this.svgViewComp.loadRoomColors();\n        }, 10)\n      }\n    })\n  }\n\n  cancelRoom() {\n    this.displayRmUpdate = false;\n  }\n\n  onAddNewBuilding() {\n    this.messageService.clear();\n    this.isNewBuilding = true;\n    this.isBuildingSelected = true;\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '750px';\n    dialogConfig.data = {\n      bl_id: null,\n      isEdit: true,\n      newRecord: true\n    };\n    this.blProvider.openDialog(dialogConfig);\n    this.displayBlFlUpdate = false;\n    this.blProvider.onDialogueClosed.subscribe((result: any) => {\n      this.displayBlFlUpdate = true;\n      this.messageService.clear();\n      if (result != \"Cancel\") {\n        this.messageService.add({ key: 'svgMessage', severity: 'success', summary: 'Building Added', detail: 'The building was added successfully' });\n        this.loadBuilding();\n        this.blAndFlForm.patchValue({\n          blId: result[1].blId,\n          flId: null,\n        });\n        this.isBuildingSelected = true;\n        setTimeout(() => {\n          this.loadFloorCode(result[1].blId);\n        }, 100)\n      }\n    })\n  }\n\n  onAddNewFloor() {\n    this.messageService.clear();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '750px';\n    dialogConfig.data = {\n      fl_id: null,\n      bl_id: this.blAndFlForm.controls.blId.value,\n      isEdit: true,\n      newRecord: true,\n      isSvg: true\n    };\n    this.flProvider.openDialog(dialogConfig);\n    this.displayBlFlUpdate = false;\n    this.flProvider.onDialogueClosed.subscribe((result: any) => {\n      this.messageService.clear();\n      this.displayBlFlUpdate = true;\n      if (result != \"Cancel\") {\n        this.loadFloor();\n        setTimeout(() => {\n          this.loadFloorCode(result.blId);\n        }, 100)\n\n        this.blAndFlForm.patchValue({\n          blId: result.blId,\n          flId: result.flId\n        });\n        this.onSelectFlCode(result);\n        this.messageService.add({ key: 'svgMessage', severity: 'success', summary: 'Floor Added', detail: 'The floor was added successfully' });\n      }\n    })\n  }\n\n  onAddNewRoom() {\n    this.messageService.clear();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '750px';\n    dialogConfig.data = {\n      bl_id: this.svgFlList[0].blId,\n      fl_id: this.svgFlList[0].flId,\n      rm_id: null,\n      isEdit: true,\n      newRecord: true,\n      isSvg: true\n    };\n    this.rmProvider.openDialog(dialogConfig);\n    this.displayRmUpdate = false;\n    this.rmProvider.onDialogueClosed.subscribe((result: any) => {\n      this.messageService.clear();\n      this.displayRmUpdate = true;\n      if (result != \"Cancel\") {\n        this.getAllRoomsOfSvg();\n        this.rmForm.patchValue({\n          rmId: result.rmId\n        })\n        this.onSelectRoom(result);\n        this.messageService.add({ key: 'svgMessage', severity: 'success', summary: 'Room Added', detail: 'The room was added successfully' });\n      }\n    })\n  }\n\n  getval(e: any) {\n    if (e.target.className.includes('p-dialog-header-close')) {\n      this.onClearSvg();\n    }\n  }\n\n  saveDialog() {\n    let msg = \"\";\n    if (this.roomAlreadyAssignedElement) {\n      msg = \"Are you sure you want to update from room \" + this.roomWithElementId[0].rmId + \" to room \" +\n        this.selectedRoomData[0].rmId + \" ?\"\n    } else {\n      msg = UtilConstant.UPDATE_SVG_ROOM;\n    }\n    this.confirmationService.confirm({\n      message: msg,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      key: 'svgConfirm',\n      accept: () => {\n        this.saveRoom();\n      }\n    });\n  }\n\n  unassignRoom() {\n    this.updateUnassignRoom();\n    this.rmForm.patchValue({\n      rmId: null\n    })\n    this.isRoomIdChanged = true;\n    this.roomWithElementId = [];\n    this.roomAlreadyAssignedElement = false;\n    this.displayRmUpdate = false;\n  }\n\n  updateUnassignRoom() {\n    if (this.roomAlreadyAssignedElement) {\n      let updateData = {\n        blId: this.roomWithElementId[0].blId,\n        flId: this.roomWithElementId[0].flId,\n        rmId: this.roomWithElementId[0].rmId,\n        rmName: this.roomWithElementId[0].rmName,\n        rmCat: this.roomWithElementId[0].rmCat,\n        rmType: this.roomWithElementId[0].rmType,\n        rmInfo: this.roomWithElementId[0].rmInfo,\n        rmArea: this.roomWithElementId[0].rmArea,\n        compId: this.compId,\n        svgElementId: null,\n        isReservable: this.roomWithElementId[0].isReservable,\n        isHotelable: this.roomWithElementId[0].isHotelable,\n        rmPhoto1: this.roomWithElementId[0].rmPhoto1,\n        rmPhoto2: this.roomWithElementId[0].rmPhoto2\n\n      }\n      this.blServ.saveRoom(updateData).subscribe((res: any) => {\n        this.getAllRoomsOfSvg();\n        setTimeout(() => {\n          //this.svgViewComp.loadRoomColors();\n        }, 10)\n      });\n    }\n  }\n\n  unassignDialog() {\n    this.confirmationService.confirm({\n      message: UtilConstant.UnAssign_Warning,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      key: 'svgConfirm',\n      accept: () => {\n        this.unassignRoom();\n      }\n    });\n  }\n\n}\n","<p-panel header=\"Link Room with SVG\">\n    <div class=\"card\">\n        <div class=\"upload-box\">\n            <div class=\"input-group\">\n                <label class=\"input-group-btn\" style=\"margin-right:10px;\">\n                    <span class=\"btn btn-primary\">\n                        Select file <input type=\"file\" style=\"display: none;\" multiple class=\"upload-input\"\n                            (change)=\"onChange($event)\" accept=\".svg\" id=\"svgUpload\">\n                    </span>\n                </label>\n                <input type=\"text\" class=\"form-control\" readonly [value]=\"fileName\">\n            </div>\n            <button class=\"btn btn-primary\" (click)=\"onClearSvg()\" style=\"margin-left:10px;\">Clear</button>\n        </div>\n        <div *ngIf=\"svgFlList.length > 0\">\n            <p class=\"svg-details-text\"> Building: {{svgFlList[0].blId}} | Floor: {{svgFlList[0].flId}}</p>\n        </div>\n        <div *ngIf=\"viewSvg\" style=\"height: 520px;\">\n            <!-- <app-svg-view [isLinkRoomSvg]=\"isLinkRoomSvg\" [fileString]=\"fileString\"\n                (onRoomClick)=\"addRoomOnClickListener($event)\" [defaultLoadColor]=\"defaultLoadColor\"\n                [assignedColor]=\"assignedColor\" [allSVGElementsData]=\"allSVGElementsData\"></app-svg-view> -->\n        </div>\n    </div>\n    <p-dialog header=\"Select Building and Floor\" [(visible)]=\"displayBlFlUpdate\" [modal]=\"true\"\n        [style]=\"{width: '33vw',height:'fit-content'}\" [maximizable]=\"true\" [draggable]=\"false\" [resizable]=\"true\"\n        (click)=\"getval($event)\">\n        <form [formGroup]=\"blAndFlForm\">\n            <div>\n                <div class=\"input-label-custom input-container\">\n                    <label class='form-field-lable '>Building </label>\n                    <ng-select [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\" [searchable]=\"true\"\n                        bindLabel=\"name\" bindValue=\"id\" placeholder=\"Select Building\" class=\"ng-select-dropdown\"\n                        (change)=\"onSelectBlCode($event)\">\n                    </ng-select>\n                    <button class=\"btn btn-success\" [hidden]=\"isBuildingSelected\" style=\"margin-left:10px\"\n                        (click)=\"onAddNewBuilding()\">Add new building</button>\n                </div>\n                <div class=\"input-label-custom input-container\">\n                    <label class='form-field-lable '>Floor</label>\n                    <ng-select [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\" [searchable]=\"true\"\n                        bindLabel=\"name\" bindValue=\"id\" placeholder=\"Select Floor\" class=\"ng-select-dropdown\"\n                        style=\"margin-left:26px\" (change)=\"onSelectFlCode($event)\">\n                    </ng-select>\n                    <button class=\"btn btn-success\" [hidden]=\"!isBuildingSelected || isFloorSelected\"\n                        style=\"margin-left:10px\" (click)=\"onAddNewFloor()\">Add new Floor</button>\n                </div>\n            </div>\n\n            <div style=\"display:flex; justify-content:center;\">\n                <div style=\"display: flex;  margin-top: 10px; margin-right:10px\">\n                    <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-primary p-button-sm\"\n                        [disabled]=\"!blAndFlForm.valid\" (click)=\"saveBlAndFl()\"></button>\n                    <button pButton pRipple label=\"Cancel\" class=\"p-button-primary p-button-sm\" style=\"margin-left:10px\"\n                        (click)=\"cancelBlAndFl()\"></button>\n                </div>\n            </div>\n        </form>\n    </p-dialog>\n    <ng-container *ngIf=\"displayRmUpdate\">\n        <p-dialog [(visible)]=\"displayRmUpdate\" [modal]=\"true\" [style]=\"{width: '29vw',height:'fit-content'}\"\n            [maximizable]=\"true\" [draggable]=\"false\" [resizable]=\"true\">\n            <p-header *ngIf=\"roomAlreadyAssignedElement\">Room Details</p-header>\n            <p-header *ngIf=\"!roomAlreadyAssignedElement\">Select Room</p-header>\n            <form [formGroup]=\"rmForm\">\n                <div>\n                    <div style=\"margin-top:10px;\">\n                        <p class=\"svg-element-text\"> Building Id : {{svgFlList[0].blId}} </p>\n                        <p class=\"svg-element-text\"> Floor Id : {{svgFlList[0].flId}} </p>\n                        <!-- <p *ngIf=\"roomAlreadyAssignedElement\" class=\"svg-element-text\"> Room Id : {{this.roomWithElementId[0].rmId}} </p> -->\n                    </div>\n                    <div class=\"input-label-custom input-container\">\n                        <label class='form-field-lable '>Room</label>\n                        <ng-select [clearable]=\"false\" [items]=\"rmData\" formControlName=\"rmId\" [searchable]=\"true\"\n                            bindLabel=\"name\" bindValue=\"id\" placeholder=\"Select Room\" class=\"ng-select-dropdown\"\n                            style=\"margin-left:10px\" (change)=\"onSelectRoom($event)\">\n                        </ng-select>\n                        <button class=\"btn btn-success\" [hidden]=\"isRoomSelected\" style=\"margin-left:10px\"\n                            (click)=\"onAddNewRoom()\">Add new Room</button>\n                    </div>\n                </div>\n                <div style=\"display:flex; justify-content:center;\">\n                    <div style=\"display: flex;  margin-top: 10px; margin-right:10px\">\n                        <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-primary p-button-sm\"\n                            [disabled]=\"!rmForm.valid || !isRoomIdChanged\" (click)=\"saveDialog()\"></button>\n                        <button pButton pRipple label=\"Cancel\" class=\"p-button-primary p-button-sm\"\n                            style=\"margin-left:10px\" (click)=\"cancelRoom()\"></button>\n                        <button pButton pRipple label=\"Unassign Room\" class=\"p-button-primary p-button-sm\"\n                            style=\"margin-left:10px\" (click)=\"unassignDialog()\"\n                            [disabled]=\"!roomAlreadyAssignedElement\"></button>\n                    </div>\n                </div>\n            </form>\n        </p-dialog>\n    </ng-container>\n</p-panel>\n<p-toast key=\"svgMessage\" position=\"top-right\"></p-toast>\n<p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\" key=\"svgConfirm\"></p-confirmDialog>\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#879cc9\" class=\"spinner-color\" type=\"ball-fussion\"\n    *ngIf=\"showSpinner\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n</ngx-spinner>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}