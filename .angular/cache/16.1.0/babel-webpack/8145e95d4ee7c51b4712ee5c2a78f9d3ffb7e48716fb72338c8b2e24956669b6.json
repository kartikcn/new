{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { forkJoin } from 'rxjs';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../terms/services/terms.service\";\nimport * as i4 from \"../background-loc/services/bl.service\";\nimport * as i5 from \"src/app/services/auth.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../allocate-div-dep-room/services/rmtrans.service\";\nimport * as i8 from \"src/app/services/enum.service\";\nimport * as i9 from \"../employee/services/employee.service\";\nimport * as i10 from \"src/app/services/breakpoint.service\";\nimport * as i11 from \"@ng-select/ng-select\";\nimport * as i12 from \"primeng/table\";\nimport * as i13 from \"primeng/calendar\";\nimport * as i14 from \"primeng/button\";\nimport * as i15 from \"primeng/dialog\";\nimport * as i16 from \"primeng/toast\";\nimport * as i17 from \"primeng/inputtext\";\nimport * as i18 from \"primeng/confirmdialog\";\nimport * as i19 from \"../../directive/numbers-only.directive\";\nimport * as i20 from \"primeng/paginator\";\nfunction AllocateEmpRoomComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 31)(2, \"div\", 32)(3, \"div\", 33)(4, \"p\", 34);\n    i0.ɵɵtext(5, \"Employee Id\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 35);\n    i0.ɵɵelement(7, \"p-sortIcon\", 36)(8, \"p-columnFilter\", 37);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 38)(10, \"div\", 32)(11, \"div\", 33)(12, \"p\", 34);\n    i0.ɵɵtext(13, \"Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 35);\n    i0.ɵɵelement(15, \"p-sortIcon\", 39)(16, \"p-columnFilter\", 40);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 41)(18, \"div\", 32)(19, \"div\", 33)(20, \"p\", 34);\n    i0.ɵɵtext(21, \"Email\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 35);\n    i0.ɵɵelement(23, \"p-sortIcon\", 42)(24, \"p-columnFilter\", 43);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction AllocateEmpRoomComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 44)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const em_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", em_r12);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(em_r12.emId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(em_r12.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(em_r12.email);\n  }\n}\nfunction AllocateEmpRoomComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 1);\n  }\n}\nfunction AllocateEmpRoomComponent_div_21_table_2_tr_21_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 58);\n    i0.ɵɵtext(1, \"Date To should be greater than Date From\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllocateEmpRoomComponent_div_21_table_2_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 48);\n    i0.ɵɵelementStart(2, \"td\", 48);\n    i0.ɵɵtemplate(3, AllocateEmpRoomComponent_div_21_table_2_tr_21_label_3_Template, 2, 0, \"label\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"td\", 48)(5, \"td\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r16.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r16.filterPanel.controls[\"dateTo\"].errors) && !(ctx_r16.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r16.filterPanel.controls[\"dateTo\"].errors.required));\n  }\n}\nfunction AllocateEmpRoomComponent_div_21_table_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 5)(1, \"tr\")(2, \"td\", 48)(3, \"div\", 7)(4, \"label\", 49);\n    i0.ɵɵtext(5, \"Term \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ng-select\", 50);\n    i0.ɵɵlistener(\"change\", function AllocateEmpRoomComponent_div_21_table_2_Template_ng_select_change_6_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onSelectTerm($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"td\", 48)(8, \"div\", 7)(9, \"div\", 51)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Date From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p-calendar\", 52);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateEmpRoomComponent_div_21_table_2_Template_p_calendar_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(13, \"td\", 48)(14, \"div\", 7)(15, \"div\", 51)(16, \"label\", 8);\n    i0.ɵɵtext(17, \"Date To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"p-calendar\", 53);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateEmpRoomComponent_div_21_table_2_Template_p_calendar_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(19, \"td\", 54)(20, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_div_21_table_2_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onSearch());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(21, AllocateEmpRoomComponent_div_21_table_2_tr_21_Template, 6, 1, \"tr\", 56);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r14.enumTerm)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r14.filterPanel.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r14.filterPanel.controls[\"dateTo\"].errors);\n  }\n}\nfunction AllocateEmpRoomComponent_div_21_table_3_tr_22_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 58);\n    i0.ɵɵtext(1, \"Date To should be greater than Date From\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllocateEmpRoomComponent_div_21_table_3_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 59);\n    i0.ɵɵelementStart(2, \"td\", 59);\n    i0.ɵɵtemplate(3, AllocateEmpRoomComponent_div_21_table_3_tr_22_label_3_Template, 2, 0, \"label\", 57);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r23.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r23.filterPanel.controls[\"dateTo\"].errors) && !(ctx_r23.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r23.filterPanel.controls[\"dateTo\"].errors.required));\n  }\n}\nfunction AllocateEmpRoomComponent_div_21_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 5)(1, \"tr\")(2, \"td\", 59)(3, \"div\", 7)(4, \"label\", 49);\n    i0.ɵɵtext(5, \"Term \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ng-select\", 50);\n    i0.ɵɵlistener(\"change\", function AllocateEmpRoomComponent_div_21_table_3_Template_ng_select_change_6_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.onSelectTerm($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"td\", 59)(8, \"button\", 60);\n    i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_div_21_table_3_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.onSearch());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tr\")(10, \"td\", 59)(11, \"div\", 7)(12, \"div\", 51)(13, \"label\", 8);\n    i0.ɵɵtext(14, \"Date From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p-calendar\", 52);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateEmpRoomComponent_div_21_table_3_Template_p_calendar_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 59)(17, \"div\", 7)(18, \"div\", 51)(19, \"label\", 8);\n    i0.ɵɵtext(20, \"Date To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"p-calendar\", 53);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateEmpRoomComponent_div_21_table_3_Template_p_calendar_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵtemplate(22, AllocateEmpRoomComponent_div_21_table_3_tr_22_Template, 4, 1, \"tr\", 56);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r15.enumTerm)(\"searchable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r15.filterPanel.valid);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r15.filterPanel.controls[\"dateTo\"].errors);\n  }\n}\nfunction AllocateEmpRoomComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"form\", 46);\n    i0.ɵɵtemplate(2, AllocateEmpRoomComponent_div_21_table_2_Template, 22, 9, \"table\", 47);\n    i0.ɵɵtemplate(3, AllocateEmpRoomComponent_div_21_table_3_Template, 23, 9, \"table\", 47);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.filterPanel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.useTabletProtrait);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.useTabletProtrait);\n  }\n}\nfunction AllocateEmpRoomComponent_div_22_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 63)(1, \"div\", 64)(2, \"div\")(3, \"h4\", 65);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 66);\n    i0.ɵɵelement(6, \"div\", 67);\n    i0.ɵɵelementStart(7, \"div\", 67)(8, \"button\", 68);\n    i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_div_22_ng_template_3_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r35.assignConfirm());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r31.roomSelectionMessage);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r31.selectedScreens.length > 0));\n  }\n}\nfunction AllocateEmpRoomComponent_div_22_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 69);\n    i0.ɵɵelementStart(2, \"th\", 70)(3, \"div\", 32)(4, \"div\", 33)(5, \"p\", 34);\n    i0.ɵɵtext(6, \"Building Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 35);\n    i0.ɵɵelement(8, \"p-sortIcon\", 71)(9, \"p-columnFilter\", 72);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 73)(11, \"div\", 32)(12, \"div\", 33)(13, \"p\", 34);\n    i0.ɵɵtext(14, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 35);\n    i0.ɵɵelement(16, \"p-sortIcon\", 74)(17, \"p-columnFilter\", 75);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 76)(19, \"div\", 32)(20, \"div\", 33)(21, \"p\", 34);\n    i0.ɵɵtext(22, \"Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 35);\n    i0.ɵɵelement(24, \"p-sortIcon\", 77)(25, \"p-columnFilter\", 78);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\");\n    i0.ɵɵtext(27, \"Room Area\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"th\", 79)(29, \"div\", 32)(30, \"div\", 33)(31, \"p\", 34);\n    i0.ɵɵtext(32, \"Occupied Space (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(33, \"div\", 35);\n    i0.ɵɵelement(34, \"p-sortIcon\", 80);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(35, \"th\", 81)(36, \"div\", 32)(37, \"div\", 33)(38, \"p\", 34);\n    i0.ɵɵtext(39, \"Available Space (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(40, \"div\", 35);\n    i0.ɵɵelement(41, \"p-sortIcon\", 82);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction AllocateEmpRoomComponent_div_22_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 44)(1, \"td\", 69)(2, \"p-tableCheckbox\", 83);\n    i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_div_22_ng_template_5_Template_p_tableCheckbox_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r39);\n      const room_r37 = restoredCtx.$implicit;\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r38.onCheckAvailable(room_r37));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const room_r37 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", room_r37);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", room_r37);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.blCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.flCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.rmCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.rmArea);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.occupied);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r37.available);\n  }\n}\nfunction AllocateEmpRoomComponent_div_22_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c0 = function () {\n  return [\"blCode\", \"flCode\", \"rmCode\"];\n};\nconst _c1 = function () {\n  return [25, 50, 100];\n};\nfunction AllocateEmpRoomComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 61)(1, \"p-table\", 62, 12);\n    i0.ɵɵlistener(\"selectionChange\", function AllocateEmpRoomComponent_div_22_Template_p_table_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.selectedScreens = $event);\n    })(\"onFilter\", function AllocateEmpRoomComponent_div_22_Template_p_table_onFilter_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.onRoomInnerFilter($event));\n    });\n    i0.ɵɵtemplate(3, AllocateEmpRoomComponent_div_22_ng_template_3_Template, 9, 2, \"ng-template\", 28);\n    i0.ɵɵtemplate(4, AllocateEmpRoomComponent_div_22_ng_template_4_Template, 42, 0, \"ng-template\", 13);\n    i0.ɵɵtemplate(5, AllocateEmpRoomComponent_div_22_ng_template_5_Template, 15, 8, \"ng-template\", 14);\n    i0.ɵɵtemplate(6, AllocateEmpRoomComponent_div_22_ng_template_6_Template, 3, 1, \"ng-template\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 16)(8, \"p-paginator\", 17);\n    i0.ɵɵlistener(\"onPageChange\", function AllocateEmpRoomComponent_div_22_Template_p_paginator_onPageChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.onPageChangeRoom($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.allRoomData)(\"paginator\", false)(\"rows\", ctx_r5.rowCount)(\"selection\", ctx_r5.selectedScreens)(\"rowHover\", false)(\"scrollable\", true)(\"globalFilterFields\", i0.ɵɵpureFunction0(12, _c0));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"rows\", ctx_r5.rowCount)(\"totalRecords\", ctx_r5.totalElementsRm)(\"first\", ctx_r5.paginationObjRm.pageNo * ctx_r5.paginationObjRm.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(13, _c1));\n  }\n}\nfunction AllocateEmpRoomComponent_ng_template_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 63)(1, \"div\", 64)(2, \"div\")(3, \"h4\");\n    i0.ɵɵtext(4, \"Rooms\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\")(6, \"span\", 84)(7, \"input\", 85);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateEmpRoomComponent_ng_template_48_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.requiredValue = $event);\n    })(\"blur\", function AllocateEmpRoomComponent_ng_template_48_Template_input_blur_7_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.checkApplyRequiredValue());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_ng_template_48_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.onApplyRequiredValue());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_ng_template_48_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.saveConfirm());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 88);\n    i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_ng_template_48_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.onCancelRoomDetailsBox());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.requiredValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r8.checkRequiredValue());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r8.assignRoomSelectedScreens.length > 0 && ctx_r8.checkRequirements(ctx_r8.assignRoomSelectedScreens)));\n  }\n}\nfunction AllocateEmpRoomComponent_ng_template_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 70)(2, \"div\", 32)(3, \"div\", 33)(4, \"p\", 34);\n    i0.ɵɵtext(5, \"Building Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 35);\n    i0.ɵɵelement(7, \"p-sortIcon\", 71)(8, \"p-columnFilter\", 72);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 73)(10, \"div\", 32)(11, \"div\", 33)(12, \"p\", 34);\n    i0.ɵɵtext(13, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 35);\n    i0.ɵɵelement(15, \"p-sortIcon\", 74)(16, \"p-columnFilter\", 75);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 76)(18, \"div\", 32)(19, \"div\", 33)(20, \"p\", 34);\n    i0.ɵɵtext(21, \"Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 35);\n    i0.ɵɵelement(23, \"p-sortIcon\", 77)(24, \"p-columnFilter\", 78);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"th\");\n    i0.ɵɵtext(26, \"Room Area\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"th\", 79)(28, \"div\", 32)(29, \"div\", 33)(30, \"p\", 34);\n    i0.ɵɵtext(31, \"Occupied Space (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 35);\n    i0.ɵɵelement(33, \"p-sortIcon\", 80);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"th\", 81)(35, \"div\", 32)(36, \"div\", 33)(37, \"p\", 34);\n    i0.ɵɵtext(38, \"Available Space (%)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 35);\n    i0.ɵɵelement(40, \"p-sortIcon\", 82);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"th\");\n    i0.ɵɵtext(42, \"Required Space (%)\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AllocateEmpRoomComponent_ng_template_50_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 92);\n    i0.ɵɵlistener(\"ngModelChange\", function AllocateEmpRoomComponent_ng_template_50_ng_template_15_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r56);\n      const room_r51 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(room_r51.required = $event);\n    })(\"blur\", function AllocateEmpRoomComponent_ng_template_50_ng_template_15_Template_input_blur_0_listener() {\n      i0.ɵɵrestoreView(_r56);\n      const room_r51 = i0.ɵɵnextContext().$implicit;\n      const ctx_r57 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r57.onRequiredEntry(room_r51));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r51 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", room_r51.required);\n  }\n}\nfunction AllocateEmpRoomComponent_ng_template_50_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const room_r51 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate1(\" \", room_r51.required, \" \");\n  }\n}\nfunction AllocateEmpRoomComponent_ng_template_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 44)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 89)(14, \"p-cellEditor\");\n    i0.ɵɵtemplate(15, AllocateEmpRoomComponent_ng_template_50_ng_template_15_Template, 1, 1, \"ng-template\", 90);\n    i0.ɵɵtemplate(16, AllocateEmpRoomComponent_ng_template_50_ng_template_16_Template, 1, 1, \"ng-template\", 91);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const room_r51 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", room_r51);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r51.blCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r51.flCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r51.rmCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r51.rmArea);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r51.occupied);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r51.available);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pEditableColumn\", room_r51.required);\n  }\n}\nfunction AllocateEmpRoomComponent_ng_template_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c2 = function () {\n  return {\n    width: \"25vw\"\n  };\n};\nconst _c3 = function () {\n  return {\n    width: \"70vw\"\n  };\n};\nconst _c4 = function () {\n  return [5, 10, 25];\n};\nexport class AllocateEmpRoomComponent {\n  constructor(messageService, formBuilder, termservice, blServ, authSrv, datePipe, rmtransservice, enumservice, confirmationService, empServ, bps) {\n    this.messageService = messageService;\n    this.formBuilder = formBuilder;\n    this.termservice = termservice;\n    this.blServ = blServ;\n    this.authSrv = authSrv;\n    this.datePipe = datePipe;\n    this.rmtransservice = rmtransservice;\n    this.enumservice = enumservice;\n    this.confirmationService = confirmationService;\n    this.empServ = empServ;\n    this.bps = bps;\n    this.showTerms = false;\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.enumTerm = [];\n    this.allRoomData = [];\n    this.selectedDepartmentId = null;\n    this.selectedDivisionId = null;\n    this.selectedDepartmentCode = '';\n    this.selectedDivisionCode = '';\n    this.selectedSubDepartmentId = null;\n    this.selectedSubDepartmentCode = '';\n    this.selectedScreens = [];\n    this.showRoomDetailsTable = false;\n    this.allRmTransData = [];\n    this.displaySpaceError = false;\n    this.displaydepterror = false;\n    this.emData = [];\n    this.allemData = [];\n    this.enumEm = [];\n    this.selectedEmId = '';\n    this.displayRoomDetails = false;\n    this.displayRoomData = [];\n    this.assignRoomSelectedScreens = [];\n    this.roomnospaceerror = false;\n    this.displayspaceerrormsg = '';\n    this.roomSelectionMessage = '';\n    this.selectedEmName = '';\n    this.useTabletProtrait = false;\n    this.selectedEmCode = '';\n    this.paginationObjEm = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"emId\"],\n      sortOrder: \"ASC\"\n    };\n    this.totalElementsEm = 0;\n    this.filterCriteriaListEm = [];\n    this.isFilteredEm = false;\n    this.paginationObjRm = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmId\"],\n      sortOrder: \"ASC\"\n    };\n    this.totalElementsRm = 0;\n    this.filterCriteriaListRm = [];\n    this.isFilteredRm = false;\n    this.limitEm = 0;\n    this.offsetEm = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n    this.emfilterPanel = this.formBuilder.group({\n      emId: [null]\n    });\n    this.filterPanel = this.formBuilder.group({\n      term: [null, [Validators.required]],\n      dateFrom: [null],\n      dateTo: [null]\n    });\n  }\n  ngOnInit() {\n    this.bps.register(this);\n    this.loadEnumTempValue();\n    // this.loadAllEmpoloyees();\n    this.loadEmployeesPaginated();\n    // this.scrollToEndEm();\n  }\n\n  notify() {\n    this.useTabletProtrait = BreakpointService.useTabletProtrait;\n  }\n  onEmRowSelect(event) {\n    this.requiredValue = \"\";\n    this.selectedScreens = [];\n    this.allRoomData = [];\n    this.showRoomDetailsTable = false;\n    this.displayRoomDetails = false;\n    this.showTerms = false;\n    this.selectedDivisionCode = \"\";\n    this.selectedDepartmentCode = \"\";\n    this.selectedSubDepartmentCode = \"\";\n    this.selectedDivisionId = null;\n    this.selectedDepartmentId = null;\n    this.selectedSubDepartmentId = null;\n    this.selectedEmId = \"\";\n    this.selectedEmName = \"\";\n    this.selectedEmCode = '';\n    if (event.data.divId != null && event.data.divId != '' && event.data.depId != null && event.data.depId != '' && event.data.subDepId != null && event.data.subDepId != '') {\n      this.displaydepterror = false;\n      this.loadAllTerms();\n      this.selectedDivisionId = event.data.divId;\n      this.selectedDepartmentId = event.data.depId;\n      this.selectedSubDepartmentId = event.data.subDepId;\n      this.selectedDivisionCode = event.data.divisionDivCode;\n      this.selectedDepartmentCode = event.data.departmentDepCode;\n      this.selectedSubDepartmentCode = event.data.subDepartmentSubDepCode;\n      this.selectedEmId = event.data.emId;\n      this.selectedEmName = event.data.fullName;\n      this.selectedEmCode = event.data.emCode;\n      this.showTerms = true;\n    } else {\n      this.displaydepterror = true;\n    }\n  }\n  onSelectEmployee(event) {\n    this.loadEmployeesPaginated();\n  }\n  loadAllTerms() {\n    this.enumTerm = [];\n    this.filterPanel.patchValue({\n      term: null,\n      dateFrom: null,\n      dateTo: null\n    });\n    this.termservice.getAllTerms().subscribe(res => {\n      this.enumTerm = res;\n    });\n  }\n  loadEnumTempValue() {\n    this.enumservice.getEnums().subscribe(res => {\n      let rmtranstypeEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm_trans'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'type'.toLocaleUpperCase() && t.enumValue.toLocaleUpperCase() === 'Temporary'.toLocaleUpperCase());\n      this.enumTemporaryValue = rmtranstypeEnumList[0].enumKey;\n    });\n  }\n  loadAllEmpoloyees() {\n    this.empServ.getAllEmployeeList().subscribe(res => {\n      this.enumEm = res.map(each => {\n        each.fullName = each.firstName + \" \" + each.lastName;\n        each.displayName = each.emCode + ' - ' + each.fullName;\n        return each;\n      });\n    });\n  }\n  loadEmployeesPaginated() {\n    let data = {\n      emId: this.emfilterPanel.controls.emId.value,\n      filterDto: {\n        paginationDTO: this.paginationObjEm,\n        filterCriteria: this.filterCriteriaListEm\n      }\n    };\n    this.isFilteredEm = false;\n    this.empServ.getAllEmployeeListPaginated(data).subscribe(res => {\n      if (res) {\n        this.isFilteredEm = false;\n        let content = res.content ? res.content : [];\n        this.totalElementsEm = res.totalElements ? res.totalElements : 0;\n        this.emData = content.map(each => {\n          each.fullName = each.firstName + \" \" + each.lastName;\n          return each;\n        });\n      }\n    });\n  }\n  onSelectTerm(event) {\n    this.allRmTransData = [];\n    this.filterPanel.patchValue({\n      dateFrom: this.formatDate(event.dateFrom),\n      dateTo: this.formatDate(event.dateTo)\n    });\n    this.selectedTerm = event;\n    this.getAllRmTrans();\n  }\n  getAllRmTrans() {\n    this.allRmTransData = [];\n    this.rmtransservice.getAllRmTrans().subscribe(res => {\n      this.allRmTransData = res;\n    });\n  }\n  onSearch() {\n    this.requiredValue = \"\";\n    this.selectedScreens = [];\n    this.allRoomData = [];\n    this.showRoomDetailsTable = false;\n    this.displayRoomDetails = false;\n    if (this.selectedEmName != '' && this.selectedEmId != '') {\n      this.roomSelectionMessage = `Select Rooms to be allocated for ${this.selectedEmCode} | ${this.selectedEmName}`;\n    } else if (this.selectedEmName == '' && this.selectedEmId != '') {\n      this.roomSelectionMessage = `Select Rooms to be allocated for ${this.selectedEmCode}`;\n    }\n    this.loadAllocationRoomData();\n    this.getAllRmTrans();\n  }\n  loadAllocationRoomData() {\n    let dateFrom = this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\");\n    let dateTo = this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\");\n    let data = {\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n      divId: this.selectedDivisionId,\n      depId: this.selectedDepartmentId,\n      subDepId: this.selectedSubDepartmentId,\n      filterDto: {\n        paginationDTO: this.paginationObjRm,\n        filterCriteria: this.filterCriteriaListRm\n      }\n    };\n    this.isFilteredRm = false;\n    this.blServ.getdepartmentallocation(data).subscribe(res => {\n      if (res) {\n        this.isFilteredRm = false;\n        this.allRoomData = res.content ? res.content : [];\n        this.totalElementsRm = res.totalElements ? res.totalElements : 0;\n        this.allRoomData = this.allRoomData.map(each => {\n          return {\n            ...each,\n            \"required\": 0\n          };\n        });\n        this.showRoomDetailsTable = true;\n      }\n    });\n  }\n  formatDate(date) {\n    if (date != null) {\n      var d = new Date(date);\n      return d;\n    } else {\n      return null;\n    }\n  }\n  checkDates(control) {\n    if (control !== undefined && control != null) {\n      this.filterPanel.controls['dateTo'].setErrors(null);\n      this.filterPanel.clearAsyncValidators();\n      this.filterPanel.updateValueAndValidity();\n      let dateFrom = this.formatDate(this.filterPanel.controls.dateFrom.value);\n      let dateTo = this.formatDate(this.filterPanel.controls.dateTo.value);\n      if (dateFrom != null && dateTo != null && dateTo <= dateFrom) {\n        this.filterPanel.controls['dateTo'].setErrors({\n          'incorrect': true\n        });\n        this.filterPanel.updateValueAndValidity();\n        return {\n          'incorrect': true\n        };\n      } else {\n        return null;\n      }\n    }\n    return null;\n  }\n  assignConfirm() {\n    this.displayRoomData = [];\n    this.displayRoomData = [...this.selectedScreens];\n    this.displayRoomDetails = true;\n    this.assignRoomSelectedScreens = [...this.displayRoomData];\n  }\n  saveConfirm() {\n    this.confirmationService.confirm({\n      message: \"Are you sure you want to allocate the selected rooms\",\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.onAssign();\n      },\n      key: \"emrmGrid\"\n    });\n  }\n  onAssign() {\n    let check = this.checkRequirements(this.assignRoomSelectedScreens);\n    if (check) {\n      this.messageService.clear();\n      const saveRequests = [];\n      this.assignRoomSelectedScreens.forEach(screen => {\n        let rmtrans = this.getRmTransId(screen);\n        let tid = rmtrans.id;\n        let obj = {\n          rmTransId: tid,\n          blId: screen.blId,\n          flId: screen.flId,\n          rmId: screen.rmId,\n          divId: this.selectedDivisionId,\n          depId: this.selectedDepartmentId,\n          subDepId: this.selectedSubDepartmentId,\n          emId: this.selectedEmId,\n          termId: this.selectedTerm.termId,\n          type: this.enumTemporaryValue,\n          dateFrom: this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\"),\n          dateTo: this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\"),\n          allocation: tid == 0 ? screen.required : screen.required + rmtrans.allocation\n        };\n        saveRequests.push(this.rmtransservice.saveRmTrans(obj));\n      });\n      forkJoin(saveRequests).subscribe(res => {\n        this.displayRoomDetails = false;\n        this.messageService.add({\n          key: 'emprmMsg',\n          severity: 'success',\n          summary: 'Record updated',\n          detail: 'Room updated successfully'\n        });\n        this.onSearch();\n      }, error => {\n        console.error('Failed to save records:', error);\n      });\n    } else {}\n  }\n  getRmTransId(screen) {\n    let match = this.allRmTransData.find(elem => elem.blId == screen.blId && elem.flId == screen.flId && elem.rmId == screen.rmId && elem.divId == this.selectedDivisionId && elem.depId == this.selectedDepartmentId && elem.subDepId == this.selectedSubDepartmentId && elem.dateFrom == this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\") && elem.dateTo == this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\") && elem.emId == this.selectedEmId && elem.termId == this.selectedTerm.termId);\n    if (match) {\n      return {\n        \"id\": match.rmTransId,\n        \"allocation\": match.allocation\n      };\n    } else {\n      return {\n        \"id\": 0,\n        \"allocation\": 0\n      };\n    }\n  }\n  checkRequirements(myList) {\n    for (const obj of myList) {\n      if (obj.required > obj.available || obj.required < 1) {\n        return false;\n      }\n    }\n    return true;\n  }\n  onRequiredEntry(room) {\n    if (!(room.required <= room.available && room.required > 0)) {\n      if (room.required > room.available) {\n        this.displayspaceerrormsg = `The selected room \"${room.blCode} ${room.flCode} ${room.rmCode}\" requested space should not exceed the available space.`;\n      } else if (room.required == 0) {\n        this.displayspaceerrormsg = \"The required space must be greater than zero.\";\n      }\n      this.displaySpaceError = true;\n      room.required = 0;\n    }\n  }\n  onCheck(event) {\n    event.data.required = 0;\n    // event.data.isSelected=!event.data.isSelected;\n  }\n\n  closespaceerrorDialog() {\n    this.displayspaceerrormsg = '';\n    this.displaySpaceError = false;\n  }\n  closedepterrorDialog() {\n    this.displaydepterror = false;\n  }\n  onCancelRoomDetailsBox() {\n    this.displayRoomDetails = false;\n    this.assignRoomSelectedScreens = [];\n    this.displayRoomData.forEach(room => {\n      room.required = 0;\n      // room.isSelected=false;\n    });\n\n    this.requiredValue = '';\n  }\n  onApplyRequiredValue() {\n    let valid = this.checkApplyRequiredValue();\n    if (valid) {\n      this.assignRoomSelectedScreens = [...this.displayRoomData];\n      this.assignRoomSelectedScreens.forEach(screen => {\n        // screen.isSelected= true;\n        screen.required = this.requiredValue;\n      });\n    }\n  }\n  checkApplyRequiredValue() {\n    this.displayspaceerrormsg = '';\n    let check = true;\n    var errorrooms = '';\n    let count = 0;\n    for (let room of this.displayRoomData) {\n      if (this.requiredValue > room.available) {\n        count++;\n        if (count == 1) {\n          errorrooms += `\"${room.blCode} ${room.flCode} ${room.rmCode}\"`;\n        } else {\n          errorrooms += `,\"${room.blCode} ${room.flCode} ${room.rmCode}\"`;\n        }\n      }\n    }\n    for (let room of this.displayRoomData) {\n      if (this.requiredValue > room.available || this.requiredValue < 1) {\n        if (this.requiredValue > room.available) {\n          this.displayspaceerrormsg = \"The selected room \" + errorrooms + \" requested space should not exceed the available space.\";\n        } else if (this.requiredValue < 1) {\n          this.displayspaceerrormsg = \"The required space must be greater than zero.\";\n        }\n        this.displaySpaceError = true;\n        check = false;\n        return check;\n      }\n    }\n    return check;\n  }\n  checkRequiredValue() {\n    if (typeof this.requiredValue == \"number\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  closenospaceerrorDialog() {\n    this.roomnospaceerror = false;\n  }\n  onCheckAvailable(room) {\n    this.roomnospaceerror = false;\n    if (room.available == 0) {\n      let selectedscreencopy = [...this.selectedScreens];\n      this.selectedScreens = [];\n      this.roomnospaceerror = true;\n      // room.isSelected = false;\n      let indexval = selectedscreencopy.findIndex(obj => {\n        return obj.blId == room.blId && obj.flId == room.flId && obj.rmId == room.rmId;\n      });\n      if (indexval != -1) {\n        selectedscreencopy.splice(indexval, 1);\n        this.selectedScreens = [...selectedscreencopy];\n      }\n    }\n  }\n  onEmployeeInnerFilter(event) {\n    if (this.isFilteredEm) {\n      Object.keys(event.filters).forEach(field => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined) {\n          let filterCriteriaEm = {\n            fieldName: field,\n            value: filterValue,\n            matchMode: matchMode\n          };\n          this.updateFilterCriteriaListEm(filterCriteriaEm);\n        }\n      });\n      this.paginationObjEm.pageSize = 0;\n      this.loadEmployeesPaginated();\n    }\n    this.isFilteredEm = true;\n  }\n  updateFilterCriteriaListEm(filterCriteria) {\n    let index = this.filterCriteriaListEm.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaListEm.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaListEm[index] = filterCriteria;\n      } else {\n        this.filterCriteriaListEm.push(filterCriteria);\n      }\n    }\n  }\n  onPageChangeEmployee(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObjEm.pageNo = pageNo;\n    this.paginationObjEm.pageSize = pageSize;\n    this.loadEmployeesPaginated();\n  }\n  onRoomInnerFilter(event) {\n    if (this.isFilteredRm) {\n      Object.keys(event.filters).forEach(field => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined) {\n          let filterCriteriaRm = {};\n          if (field == \"blCode\") {\n            filterCriteriaRm = {\n              fieldName: \"bl_code\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          } else if (field == \"flCode\") {\n            filterCriteriaRm = {\n              fieldName: \"fl_code\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          } else if (field == \"rmCode\") {\n            filterCriteriaRm = {\n              fieldName: \"rm_code\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          }\n          this.updateFilterCriteriaListRm(filterCriteriaRm);\n        }\n      });\n      this.paginationObjRm.pageNo = 0;\n      this.selectedScreens = [];\n      this.loadAllocationRoomData();\n    }\n    this.isFilteredRm = true;\n  }\n  updateFilterCriteriaListRm(filterCriteria) {\n    let index = this.filterCriteriaListRm.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaListRm.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaListRm[index] = filterCriteria;\n      } else {\n        this.filterCriteriaListRm.push(filterCriteria);\n      }\n    }\n  }\n  onPageChangeRoom(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObjRm.pageNo = pageNo;\n    this.paginationObjRm.pageSize = pageSize;\n    this.selectedScreens = [];\n    this.loadAllocationRoomData();\n  }\n  ngOnDestroy() {\n    this.bps.unregister(this);\n  }\n  scrollToEndEm() {\n    this.offsetEm = this.limitEm;\n    this.limitEm += this.scrollLimit;\n    this.filterCriteria.limit = this.limitEm;\n    this.filterCriteria.offset = this.offsetEm;\n    this.empServ.getALLmployeeByScroll(this.filterCriteria).subscribe(res => {\n      this.enumEm = res;\n      this.enumEm.unshift({\n        emId: null,\n        firstName: 'Make a selection',\n        emCode: null\n      });\n    });\n  }\n  searchEm(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"firstName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndEm();\n  }\n  updateEmList(emData) {\n    this.enumEm = this.enumEm.filter(e => e.emId != emData.emId);\n    this.enumEm = this.enumEm.filter(e => e.emId != null);\n    this.enumEm.unshift(emData);\n    this.enumEm.unshift({\n      emId: null,\n      firstName: 'Make a selection',\n      emCode: null\n    });\n  }\n  openEm() {\n    this.limitEm = 0;\n    this.offsetEm = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.scrollToEndEm();\n  }\n  static #_ = this.ɵfac = function AllocateEmpRoomComponent_Factory(t) {\n    return new (t || AllocateEmpRoomComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.TermsService), i0.ɵɵdirectiveInject(i4.BuildingService), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.DatePipe), i0.ɵɵdirectiveInject(i7.RmTransService), i0.ɵɵdirectiveInject(i8.EnumService), i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i9.EmployeeService), i0.ɵɵdirectiveInject(i10.BreakpointService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AllocateEmpRoomComponent,\n    selectors: [[\"app-allocate-emp-room\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 55,\n    vars: 58,\n    consts: [[1, \"card\", 2, \"height\", \"680px\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"90vh\"], [1, \"employee-selection-container\"], [1, \"card\", \"filter-em-container\"], [2, \"width\", \"100%\", 3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"emId\", \"bindLabel\", \"firstName\", \"bindValue\", \"emId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"open\", \"change\", \"scrollToEnd\", \"search\"], [1, \"result-em-container\"], [\"styleClass\", \"p-datatable-responsive-demo\", \"selectionMode\", \"single\", \"dataKey\", \"emId\", \"scrollDirection\", \"both\", \"scrollHeight\", \"350px\", \"id\", \"em_list\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"scrollable\", \"onRowSelect\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [1, \"room-selection-container\"], [\"class\", \"card filter-rm-container\", 4, \"ngIf\"], [\"class\", \"card result-rm-container\", 4, \"ngIf\"], [3, \"visible\", \"modal\", \"draggable\", \"resizable\", \"closable\", \"visibleChange\"], [2, \"font-size\", \"14px\"], [\"pButton\", \"\", \"label\", \"Ok\", 1, \"p-button-secondary\", 2, \"margin-left\", \"85%\", 3, \"click\"], [1, \"card\"], [\"roomselectiondialog\", \"\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"selectionMode\", \"single\", \"scrollDirection\", \"both\", \"scrollHeight\", \"350px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"onRowSelect\"], [\"dt2\", \"\"], [\"pTemplate\", \"caption\"], [\"key\", \"emprmMsg\", \"position\", \"top-center\"], [\"key\", \"emrmGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pSortableColumn\", \"emId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"emId\"], [\"type\", \"number\", \"field\", \"emId\", \"display\", \"menu\"], [\"pSortableColumn\", \"firstName\"], [\"field\", \"firstName\"], [\"type\", \"text\", \"field\", \"firstName\", \"display\", \"menu\"], [\"pSortableColumn\", \"email\"], [\"field\", \"email\"], [\"type\", \"text\", \"field\", \"email\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [1, \"card\", \"filter-rm-container\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [2, \"width\", \"30%\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"term\", \"bindLabel\", \"term\", \"bindValue\", \"termId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [1, \"p-fluid\", \"p-field\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"dateFrom\", \"inputId\", \"icon\", 3, \"showIcon\", \"readonlyInput\", \"ngModelChange\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"dateTo\", \"inputId\", \"icon\", 3, \"showIcon\", \"readonlyInput\", \"ngModelChange\"], [2, \"width\", \"10%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", 2, \"width\", \"67px\", \"margin-left\", \"8%\", \"margin-top\", \"20px\", 3, \"disabled\", \"click\"], [4, \"ngIf\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;margin-left:5px;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\", \"margin-left\", \"5px\"], [2, \"width\", \"50%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", 2, \"width\", \"67px\", \"margin-left\", \"18%\", \"margin-top\", \"20px\", 3, \"disabled\", \"click\"], [1, \"card\", \"result-rm-container\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"id\", \"rm_list\", \"scrollDirection\", \"both\", \"scrollHeight\", \"350px\", 3, \"value\", \"paginator\", \"rows\", \"selection\", \"rowHover\", \"scrollable\", \"globalFilterFields\", \"selectionChange\", \"onFilter\"], [1, \"d-flex\", \"flex-row\"], [2, \"flex\", \"auto\"], [1, \"room-selection-message\"], [1, \"rmselection-button-container\", 2, \"max-width\", \"50%\"], [1, \"rm-button-div\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Allocate\", 1, \"p-button-primary\", \"p-mr-2\", \"allocate-button\", 3, \"disabled\", \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"blCode\"], [\"field\", \"blCode\"], [\"type\", \"text\", \"field\", \"blCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"flCode\"], [\"field\", \"flCode\"], [\"type\", \"text\", \"field\", \"flCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmCode\"], [\"field\", \"rmCode\"], [\"type\", \"text\", \"field\", \"rmCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"occupied\"], [\"field\", \"occupied\"], [\"pSortableColumn\", \"available\"], [\"field\", \"available\"], [3, \"value\", \"click\"], [1, \"p-input-icon-left\", \"ml-auto\"], [\"pInputText\", \"\", \"type\", \"number\", \"NumbersOnly\", \"\", \"placeholder\", \"Required Value...\", 1, \"search_input\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Apply\", 1, \"p-button-primary\", 2, \"margin-left\", \"5px\", \"width\", \"70px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", 1, \"p-button-primary\", 2, \"margin-left\", \"5px\", \"width\", \"70px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 2, \"margin-left\", \"5px\", \"width\", \"70px\", 3, \"click\"], [\"pEditableColumnField\", \"required\", 2, \"background-color\", \"#b3b3ff\", 3, \"pEditableColumn\"], [\"pTemplate\", \"input\"], [\"pTemplate\", \"output\"], [\"pInputText\", \"\", \"type\", \"number\", \"NumbersOnly\", \"\", 3, \"ngModel\", \"ngModelChange\", \"blur\"]],\n    template: function AllocateEmpRoomComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"form\", 4)(5, \"table\", 5)(6, \"tr\")(7, \"td\", 6)(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Employee \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"ng-select\", 9);\n        i0.ɵɵlistener(\"open\", function AllocateEmpRoomComponent_Template_ng_select_open_11_listener() {\n          return ctx.openEm();\n        })(\"change\", function AllocateEmpRoomComponent_Template_ng_select_change_11_listener($event) {\n          return ctx.onSelectEmployee($event);\n        })(\"scrollToEnd\", function AllocateEmpRoomComponent_Template_ng_select_scrollToEnd_11_listener() {\n          return ctx.scrollToEndEm();\n        })(\"search\", function AllocateEmpRoomComponent_Template_ng_select_search_11_listener($event) {\n          return ctx.searchEm($event);\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"p-table\", 11, 12);\n        i0.ɵɵlistener(\"onRowSelect\", function AllocateEmpRoomComponent_Template_p_table_onRowSelect_13_listener($event) {\n          return ctx.onEmRowSelect($event);\n        })(\"onFilter\", function AllocateEmpRoomComponent_Template_p_table_onFilter_13_listener($event) {\n          return ctx.onEmployeeInnerFilter($event);\n        });\n        i0.ɵɵtemplate(15, AllocateEmpRoomComponent_ng_template_15_Template, 25, 0, \"ng-template\", 13);\n        i0.ɵɵtemplate(16, AllocateEmpRoomComponent_ng_template_16_Template, 7, 4, \"ng-template\", 14);\n        i0.ɵɵtemplate(17, AllocateEmpRoomComponent_ng_template_17_Template, 3, 1, \"ng-template\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 16)(19, \"p-paginator\", 17);\n        i0.ɵɵlistener(\"onPageChange\", function AllocateEmpRoomComponent_Template_p_paginator_onPageChange_19_listener($event) {\n          return ctx.onPageChangeEmployee($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 18);\n        i0.ɵɵtemplate(21, AllocateEmpRoomComponent_div_21_Template, 4, 3, \"div\", 19);\n        i0.ɵɵtemplate(22, AllocateEmpRoomComponent_div_22_Template, 9, 14, \"div\", 20);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"p-dialog\", 21);\n        i0.ɵɵlistener(\"visibleChange\", function AllocateEmpRoomComponent_Template_p_dialog_visibleChange_23_listener($event) {\n          return ctx.displaySpaceError = $event;\n        });\n        i0.ɵɵelementStart(24, \"p-header\");\n        i0.ɵɵtext(25, \" Warning \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"p\", 22);\n        i0.ɵɵtext(27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_Template_button_click_28_listener() {\n          return ctx.closespaceerrorDialog();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"p-dialog\", 21);\n        i0.ɵɵlistener(\"visibleChange\", function AllocateEmpRoomComponent_Template_p_dialog_visibleChange_29_listener($event) {\n          return ctx.displaydepterror = $event;\n        });\n        i0.ɵɵelementStart(30, \"p-header\");\n        i0.ɵɵtext(31, \" Warning \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"p\", 22);\n        i0.ɵɵtext(33, \"The chosen employee does not have any assigned division and department and sub department. Kindly assign division,department and sub department before proceeding with space allocation.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_Template_button_click_34_listener() {\n          return ctx.closedepterrorDialog();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"p-dialog\", 21);\n        i0.ɵɵlistener(\"visibleChange\", function AllocateEmpRoomComponent_Template_p_dialog_visibleChange_35_listener($event) {\n          return ctx.roomnospaceerror = $event;\n        });\n        i0.ɵɵelementStart(36, \"p-header\");\n        i0.ɵɵtext(37, \" Warning \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"p\", 22);\n        i0.ɵɵtext(39, \"The selected room has no available space.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function AllocateEmpRoomComponent_Template_button_click_40_listener() {\n          return ctx.closenospaceerrorDialog();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"p-dialog\", 21);\n        i0.ɵɵlistener(\"visibleChange\", function AllocateEmpRoomComponent_Template_p_dialog_visibleChange_41_listener($event) {\n          return ctx.displayRoomDetails = $event;\n        });\n        i0.ɵɵelementStart(42, \"p-header\");\n        i0.ɵɵtext(43, \" Selected Rooms \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 24, 25)(46, \"p-table\", 26, 27);\n        i0.ɵɵlistener(\"onRowSelect\", function AllocateEmpRoomComponent_Template_p_table_onRowSelect_46_listener($event) {\n          return ctx.onCheck($event);\n        });\n        i0.ɵɵtemplate(48, AllocateEmpRoomComponent_ng_template_48_Template, 11, 3, \"ng-template\", 28);\n        i0.ɵɵtemplate(49, AllocateEmpRoomComponent_ng_template_49_Template, 43, 0, \"ng-template\", 13);\n        i0.ɵɵtemplate(50, AllocateEmpRoomComponent_ng_template_50_Template, 17, 8, \"ng-template\", 14);\n        i0.ɵɵtemplate(51, AllocateEmpRoomComponent_ng_template_51_Template, 3, 1, \"ng-template\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(52, \"div\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(53, \"p-toast\", 29)(54, \"p-confirmDialog\", 30);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.emfilterPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumEm)(\"searchable\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.emData)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"rowHover\", true)(\"scrollable\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElementsEm)(\"first\", ctx.paginationObjEm.pageNo * ctx.paginationObjEm.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(52, _c1));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTerms);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showRoomDetailsTable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(53, _c2));\n        i0.ɵɵproperty(\"visible\", ctx.displaySpaceError)(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.displayspaceerrormsg);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(54, _c2));\n        i0.ɵɵproperty(\"visible\", ctx.displaydepterror)(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(55, _c2));\n        i0.ɵɵproperty(\"visible\", ctx.roomnospaceerror)(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(56, _c3));\n        i0.ɵɵproperty(\"visible\", ctx.displayRoomDetails)(\"modal\", true)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"value\", ctx.displayRoomData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(57, _c4))(\"rowHover\", true)(\"scrollable\", true);\n      }\n    },\n    dependencies: [i6.NgIf, i11.NgSelectComponent, i1.Header, i1.PrimeTemplate, i12.Table, i12.SortableColumn, i12.SelectableRow, i12.EditableColumn, i12.CellEditor, i12.SortIcon, i12.TableCheckbox, i12.ColumnFilter, i13.Calendar, i14.ButtonDirective, i15.Dialog, i16.Toast, i17.InputText, i18.ConfirmDialog, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.FormGroupDirective, i2.FormControlName, i19.NumbersOnlyDirective, i20.Paginator],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  background-color: #879cc9;\\n  color: black;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n  height: 10px !important;\\n}\\n\\n.no-file-found[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 500px;\\n}\\n\\n.td-class[_ngcontent-%COMP%] {\\n  background-color: inherit;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 20px;\\n  margin: 10px auto auto auto;\\n  border: 1px solid black;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-scrollable-body {\\n  overflow-y: auto !important;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-scrollable-header-box {\\n  padding: 0px !important;\\n}\\n\\n.invalid_cell_value[_ngcontent-%COMP%] {\\n  border: 2px solid #f44336 !important;\\n}\\n\\n[_nghost-%COMP%]     .ng-select.ng-select-single .ng-select-container {\\n  height: 30px !important;\\n}\\n\\n[_nghost-%COMP%]     .p-fluid .p-calendar .p-inputtext {\\n  height: 30px !important;\\n}\\n\\n.search_input[_ngcontent-%COMP%] {\\n  height: 30px !important;\\n}\\n\\n[_nghost-%COMP%]     #em_list .p-datatable-wrapper {\\n  max-height: 514px !important;\\n}\\n\\n[_nghost-%COMP%]     #rm_list .p-datatable-wrapper {\\n  max-height: 477px !important;\\n}\\n\\n#roomselectiondialog[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n  border: none;\\n}\\n\\n.employee-selection-container[_ngcontent-%COMP%] {\\n  width: 25%;\\n}\\n\\n.room-selection-container[_ngcontent-%COMP%] {\\n  width: 74%;\\n}\\n\\n.filter-em-container[_ngcontent-%COMP%] {\\n  height: 13%;\\n}\\n\\n.filter-rm-container[_ngcontent-%COMP%] {\\n  height: 13%;\\n}\\n\\n.result-em-container[_ngcontent-%COMP%] {\\n  height: 84%;\\n}\\n\\n.result-rm-container[_ngcontent-%COMP%] {\\n  height: 84%;\\n}\\n\\n.rmselection-button-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.search-button[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n  .employee-selection-container[_ngcontent-%COMP%] {\\n    width: 30%;\\n  }\\n  .room-selection-container[_ngcontent-%COMP%] {\\n    width: 69%;\\n  }\\n  .filter-em-container[_ngcontent-%COMP%] {\\n    height: 24%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n  .filter-rm-container[_ngcontent-%COMP%] {\\n    height: 24%;\\n  }\\n  .result-em-container[_ngcontent-%COMP%] {\\n    height: 77%;\\n  }\\n  .result-rm-container[_ngcontent-%COMP%] {\\n    height: 77%;\\n  }\\n  .room-selection-message[_ngcontent-%COMP%] {\\n    font-size: 12px;\\n  }\\n    .p-datatable .p-datatable-header {\\n    padding: 0.5rem 0.5rem;\\n  }\\n  .search_input[_ngcontent-%COMP%] {\\n    height: 30px !important;\\n    width: 120px !important;\\n  }\\n  .allocate-button[_ngcontent-%COMP%] {\\n    margin-top: 5px;\\n  }\\n  .rmselection-button-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  .rm-button-div[_ngcontent-%COMP%] {\\n    align-self: end;\\n  }\\n  .search-button[_ngcontent-%COMP%] {\\n    margin-right: 0px;\\n  }\\n}\\n@media screen and (min-width: 960px) and (max-width: 1439px) {\\n  .allocate-button[_ngcontent-%COMP%] {\\n    margin-top: 5px;\\n  }\\n  .rmselection-button-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  .rm-button-div[_ngcontent-%COMP%] {\\n    align-self: end;\\n  }\\n  .search-button[_ngcontent-%COMP%] {\\n    margin-right: 0px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["Validators","MessageService","UtilConstant","forkJoin","BreakpointService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","em_r12","ɵɵadvance","ɵɵtextInterpolate","emId","firstName","email","ɵɵattribute","ɵɵtemplate","AllocateEmpRoomComponent_div_21_table_2_tr_21_label_3_Template","ctx_r16","filterPanel","controls","errors","required","ɵɵlistener","AllocateEmpRoomComponent_div_21_table_2_Template_ng_select_change_6_listener","$event","ɵɵrestoreView","_r19","ctx_r18","ɵɵnextContext","ɵɵresetView","onSelectTerm","AllocateEmpRoomComponent_div_21_table_2_Template_p_calendar_ngModelChange_12_listener","ctx_r20","checkDates","AllocateEmpRoomComponent_div_21_table_2_Template_p_calendar_ngModelChange_18_listener","ctx_r21","AllocateEmpRoomComponent_div_21_table_2_Template_button_click_20_listener","ctx_r22","onSearch","AllocateEmpRoomComponent_div_21_table_2_tr_21_Template","ctx_r14","enumTerm","valid","AllocateEmpRoomComponent_div_21_table_3_tr_22_label_3_Template","ctx_r23","AllocateEmpRoomComponent_div_21_table_3_Template_ng_select_change_6_listener","_r26","ctx_r25","AllocateEmpRoomComponent_div_21_table_3_Template_button_click_8_listener","ctx_r27","AllocateEmpRoomComponent_div_21_table_3_Template_p_calendar_ngModelChange_15_listener","ctx_r28","AllocateEmpRoomComponent_div_21_table_3_Template_p_calendar_ngModelChange_21_listener","ctx_r29","AllocateEmpRoomComponent_div_21_table_3_tr_22_Template","ctx_r15","AllocateEmpRoomComponent_div_21_table_2_Template","AllocateEmpRoomComponent_div_21_table_3_Template","ctx_r4","useTabletProtrait","AllocateEmpRoomComponent_div_22_ng_template_3_Template_button_click_8_listener","_r36","ctx_r35","assignConfirm","ctx_r31","roomSelectionMessage","selectedScreens","length","AllocateEmpRoomComponent_div_22_ng_template_5_Template_p_tableCheckbox_click_2_listener","restoredCtx","_r39","room_r37","$implicit","ctx_r38","onCheckAvailable","blCode","flCode","rmCode","rmArea","occupied","available","AllocateEmpRoomComponent_div_22_Template_p_table_selectionChange_1_listener","_r42","ctx_r41","AllocateEmpRoomComponent_div_22_Template_p_table_onFilter_1_listener","ctx_r43","onRoomInnerFilter","AllocateEmpRoomComponent_div_22_ng_template_3_Template","AllocateEmpRoomComponent_div_22_ng_template_4_Template","AllocateEmpRoomComponent_div_22_ng_template_5_Template","AllocateEmpRoomComponent_div_22_ng_template_6_Template","AllocateEmpRoomComponent_div_22_Template_p_paginator_onPageChange_8_listener","ctx_r44","onPageChangeRoom","ctx_r5","allRoomData","rowCount","ɵɵpureFunction0","_c0","totalElementsRm","paginationObjRm","pageNo","pageSize","_c1","AllocateEmpRoomComponent_ng_template_48_Template_input_ngModelChange_7_listener","_r46","ctx_r45","requiredValue","AllocateEmpRoomComponent_ng_template_48_Template_input_blur_7_listener","ctx_r47","checkApplyRequiredValue","AllocateEmpRoomComponent_ng_template_48_Template_button_click_8_listener","ctx_r48","onApplyRequiredValue","AllocateEmpRoomComponent_ng_template_48_Template_button_click_9_listener","ctx_r49","saveConfirm","AllocateEmpRoomComponent_ng_template_48_Template_button_click_10_listener","ctx_r50","onCancelRoomDetailsBox","ctx_r8","checkRequiredValue","assignRoomSelectedScreens","checkRequirements","AllocateEmpRoomComponent_ng_template_50_ng_template_15_Template_input_ngModelChange_0_listener","_r56","room_r51","AllocateEmpRoomComponent_ng_template_50_ng_template_15_Template_input_blur_0_listener","ctx_r57","onRequiredEntry","ɵɵtextInterpolate1","AllocateEmpRoomComponent_ng_template_50_ng_template_15_Template","AllocateEmpRoomComponent_ng_template_50_ng_template_16_Template","AllocateEmpRoomComponent","constructor","messageService","formBuilder","termservice","blServ","authSrv","datePipe","rmtransservice","enumservice","confirmationService","empServ","bps","showTerms","ROW_COUNT","selectedDepartmentId","selectedDivisionId","selectedDepartmentCode","selectedDivisionCode","selectedSubDepartmentId","selectedSubDepartmentCode","showRoomDetailsTable","allRmTransData","displaySpaceError","displaydepterror","emData","allemData","enumEm","selectedEmId","displayRoomDetails","displayRoomData","roomnospaceerror","displayspaceerrormsg","selectedEmName","selectedEmCode","paginationObjEm","sortBy","sortOrder","totalElementsEm","filterCriteriaListEm","isFilteredEm","filterCriteriaListRm","isFilteredRm","limitEm","offsetEm","filterCriteria","fieldName","value","matchMode","limit","offset","scrollLimit","SCROLL_LIMIT","emfilterPanel","group","term","dateFrom","dateTo","ngOnInit","register","loadEnumTempValue","loadEmployeesPaginated","notify","onEmRowSelect","event","data","divId","depId","subDepId","loadAllTerms","divisionDivCode","departmentDepCode","subDepartmentSubDepCode","fullName","emCode","onSelectEmployee","patchValue","getAllTerms","subscribe","res","getEnums","rmtranstypeEnumList","filter","t","tableName","toLocaleUpperCase","enumValue","enumTemporaryValue","enumKey","loadAllEmpoloyees","getAllEmployeeList","map","each","lastName","displayName","filterDto","paginationDTO","getAllEmployeeListPaginated","content","totalElements","formatDate","selectedTerm","getAllRmTrans","loadAllocationRoomData","transform","getdepartmentallocation","date","d","Date","control","undefined","setErrors","clearAsyncValidators","updateValueAndValidity","confirm","message","header","icon","accept","onAssign","key","check","clear","saveRequests","forEach","screen","rmtrans","getRmTransId","tid","id","obj","rmTransId","blId","flId","rmId","termId","type","allocation","push","saveRmTrans","add","severity","summary","detail","error","console","match","find","elem","myList","room","onCheck","closespaceerrorDialog","closedepterrorDialog","errorrooms","count","closenospaceerrorDialog","selectedscreencopy","indexval","findIndex","splice","onEmployeeInnerFilter","Object","keys","filters","field","filterValue","filterCriteriaEm","updateFilterCriteriaListEm","index","item","onPageChangeEmployee","first","rows","filterCriteriaRm","updateFilterCriteriaListRm","ngOnDestroy","unregister","scrollToEndEm","getALLmployeeByScroll","unshift","searchEm","updateEmList","e","openEm","_","ɵɵdirectiveInject","i1","i2","UntypedFormBuilder","i3","TermsService","i4","BuildingService","i5","AuthService","i6","DatePipe","i7","RmTransService","i8","EnumService","ConfirmationService","i9","EmployeeService","i10","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","AllocateEmpRoomComponent_Template","rf","ctx","AllocateEmpRoomComponent_Template_ng_select_open_11_listener","AllocateEmpRoomComponent_Template_ng_select_change_11_listener","AllocateEmpRoomComponent_Template_ng_select_scrollToEnd_11_listener","AllocateEmpRoomComponent_Template_ng_select_search_11_listener","AllocateEmpRoomComponent_Template_p_table_onRowSelect_13_listener","AllocateEmpRoomComponent_Template_p_table_onFilter_13_listener","AllocateEmpRoomComponent_ng_template_15_Template","AllocateEmpRoomComponent_ng_template_16_Template","AllocateEmpRoomComponent_ng_template_17_Template","AllocateEmpRoomComponent_Template_p_paginator_onPageChange_19_listener","AllocateEmpRoomComponent_div_21_Template","AllocateEmpRoomComponent_div_22_Template","AllocateEmpRoomComponent_Template_p_dialog_visibleChange_23_listener","AllocateEmpRoomComponent_Template_button_click_28_listener","AllocateEmpRoomComponent_Template_p_dialog_visibleChange_29_listener","AllocateEmpRoomComponent_Template_button_click_34_listener","AllocateEmpRoomComponent_Template_p_dialog_visibleChange_35_listener","AllocateEmpRoomComponent_Template_button_click_40_listener","AllocateEmpRoomComponent_Template_p_dialog_visibleChange_41_listener","AllocateEmpRoomComponent_Template_p_table_onRowSelect_46_listener","AllocateEmpRoomComponent_ng_template_48_Template","AllocateEmpRoomComponent_ng_template_49_Template","AllocateEmpRoomComponent_ng_template_50_Template","AllocateEmpRoomComponent_ng_template_51_Template","ɵɵstyleMap","_c2","_c3","_c4"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\allocate-emp-room\\allocate-emp-room.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\allocate-emp-room\\allocate-emp-room.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { TermsService } from '../terms/services/terms.service';\nimport { DatePipe } from '@angular/common';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { RmTransService } from '../allocate-div-dep-room/services/rmtrans.service';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { forkJoin } from 'rxjs';\nimport { EmployeeService } from '../employee/services/employee.service';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { PaginationObj } from 'src/app/model/pagination-model';\n\n@Component({\n  selector: 'app-allocate-emp-room',\n  templateUrl: './allocate-emp-room.component.html',\n  styleUrls: ['./allocate-emp-room.component.scss'],\n  providers: [MessageService]\n})\nexport class AllocateEmpRoomComponent {\n  showTerms:boolean=false;\n  filterPanel!: UntypedFormGroup;\n  emfilterPanel!: UntypedFormGroup;\n  rowCount: number = UtilConstant.ROW_COUNT;\n  enumTerm :any[]=[];\n  allRoomData:any[]=[];\n  selectedDepartmentId:number|null=null;\n  selectedDivisionId:number|null=null;\n  selectedDepartmentCode:string='';\n  selectedDivisionCode:string='';\n  selectedSubDepartmentId: number|null=null;\n  selectedSubDepartmentCode:string='';\n  selectedScreens:any[]=[];\n  showRoomDetailsTable: boolean = false;\n  allRmTransData :any[]=[];\n  selectedTerm:any;\n  enumTemporaryValue!:number;\n  displaySpaceError:boolean = false;\n  displaydepterror:boolean = false;\n  emData:any[]=[];\n  allemData:any[]=[];\n  enumEm:any[]=[];\n  selectedEmId:string='';\n  displayRoomDetails:boolean = false;\n  displayRoomData:any[]=[];\n  assignRoomSelectedScreens:any[]=[];\n  requiredValue!:any;\n  roomnospaceerror:boolean = false;\n  displayspaceerrormsg:string='';\n  roomSelectionMessage:string='';\n  selectedEmName:string='';\n  useTabletProtrait = false;\n  selectedEmCode = '';\n  paginationObjEm:PaginationObj = {\n    pageNo:0,\n    pageSize:this.rowCount,\n    sortBy:[\"emId\"],\n    sortOrder:\"ASC\"\n  }\n  totalElementsEm:number = 0;\n  filterCriteriaListEm :any[]=[];\n  isFilteredEm:boolean = false;\n  paginationObjRm:PaginationObj = {\n    pageNo:0,\n    pageSize:this.rowCount,\n    sortBy:[\"rmId\"],\n    sortOrder:\"ASC\"\n  }\n  totalElementsRm:number = 0;\n  filterCriteriaListRm :any[]=[];\n  isFilteredRm:boolean = false;\n  limitEm: number = 0;\n  offsetEm: number = 0;\n  filterCriteria: any = {\n    fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n  };\n  scrollLimit:number = UtilConstant.SCROLL_LIMIT;\n\n  constructor(\n    private messageService: MessageService,\n    private formBuilder: UntypedFormBuilder,\n    private termservice : TermsService,\n    private blServ: BuildingService,\n    private authSrv: AuthService,\n    private datePipe:DatePipe,\n    private rmtransservice:RmTransService,\n    private enumservice: EnumService,\n    private confirmationService: ConfirmationService,\n    private empServ: EmployeeService,\n    private bps : BreakpointService\n  ) {\n    this.emfilterPanel = this.formBuilder.group({\n      emId:[null]\n    })\n    this.filterPanel = this.formBuilder.group({\n      term: [null, [Validators.required]],\n      dateFrom: [null],\n      dateTo:[null],\n    });\n   }\n\n  ngOnInit(): void {\n    this.bps.register(this);\n    this.loadEnumTempValue();\n    // this.loadAllEmpoloyees();\n    this.loadEmployeesPaginated();\n    // this.scrollToEndEm();\n  }\n\n  notify(): void {\n    this.useTabletProtrait = BreakpointService.useTabletProtrait;\n  }\n\n\n  onEmRowSelect(event:any){\n    this.requiredValue=\"\";\n    this.selectedScreens=[];\n    this.allRoomData=[];\n    this.showRoomDetailsTable = false;\n    this.displayRoomDetails= false;\n    this.showTerms = false;\n    this.selectedDivisionCode = \"\";\n    this.selectedDepartmentCode = \"\";\n    this.selectedSubDepartmentCode = \"\";\n    this.selectedDivisionId = null;\n    this.selectedDepartmentId = null;\n    this.selectedSubDepartmentId = null;\n    this.selectedEmId = \"\";\n    this.selectedEmName = \"\";\n    this.selectedEmCode = '';\n    if((event.data.divId!=null&&event.data.divId!='')&&(event.data.depId!=null&&event.data.depId!='')&&(event.data.subDepId!=null&&event.data.subDepId!='')){\n      this.displaydepterror= false;\n      this.loadAllTerms();\n      this.selectedDivisionId = event.data.divId;\n      this.selectedDepartmentId = event.data.depId;\n      this.selectedSubDepartmentId = event.data.subDepId;\n      this.selectedDivisionCode = event.data.divisionDivCode;\n      this.selectedDepartmentCode = event.data.departmentDepCode;\n      this.selectedSubDepartmentCode = event.data.subDepartmentSubDepCode;\n      this.selectedEmId = event.data.emId;\n      this.selectedEmName= event.data.fullName;\n      this.selectedEmCode = event.data.emCode;\n      this.showTerms = true;\n    }else{\n      this.displaydepterror= true;\n    }\n    \n  }\n\n  onSelectEmployee(event:any){\n    this.loadEmployeesPaginated();\n  }\n\n  loadAllTerms(){\n    this.enumTerm=[];\n    this.filterPanel.patchValue({\n      term:null,\n      dateFrom: null,\n      dateTo: null,\n    })\n    this.termservice.getAllTerms().subscribe((res:any)=>{\n      this.enumTerm = res;\n    })\n  }\n\n  loadEnumTempValue(){\n    this.enumservice.getEnums().subscribe((res:any)=>{\n      let rmtranstypeEnumList = res.filter((t:any) => \n      t.tableName.toLocaleUpperCase() === 'rm_trans'.toLocaleUpperCase() &&\n      t.fieldName.toLocaleUpperCase() === 'type'.toLocaleUpperCase() && \n      t.enumValue.toLocaleUpperCase()==='Temporary'.toLocaleUpperCase());\n      this.enumTemporaryValue = rmtranstypeEnumList[0].enumKey;\n    })\n    }\n\n    loadAllEmpoloyees(){\n      this.empServ.getAllEmployeeList().subscribe((res:any)=>{\n        this.enumEm = res.map((each:any)=>{\n          each.fullName = each.firstName + \" \" + each.lastName;\n          each.displayName = each.emCode + ' - ' + each.fullName\n          return each;\n        });\n      })\n    }\n\n    loadEmployeesPaginated(){\n    let data ={emId:this.emfilterPanel.controls.emId.value,filterDto:{paginationDTO:this.paginationObjEm,filterCriteria:this.filterCriteriaListEm}};\n    this.isFilteredEm = false;\n    this.empServ.getAllEmployeeListPaginated(data).subscribe((res: any) => {\n      if (res) {\n        this.isFilteredEm = false;\n        let content =  res.content ? res.content : [];\n        this.totalElementsEm = res.totalElements ? res.totalElements : 0;\n        this.emData =content.map((each:any)=>{each.fullName = each.firstName + \" \" + each.lastName;return each; });\n      }\n    });\n    }\n\n  onSelectTerm(event:any){\n    this.allRmTransData=[];\n    this.filterPanel.patchValue({\n      dateFrom: this.formatDate(event.dateFrom),\n      dateTo: this.formatDate(event.dateTo),\n    })\n    this.selectedTerm=event;\n    this.getAllRmTrans();\n  }\n\n  getAllRmTrans(){\n    this.allRmTransData=[];\n    this.rmtransservice.getAllRmTrans().subscribe((res:any)=>{\n      this.allRmTransData= res;\n    })\n  }\n\n  onSearch(){\n    this.requiredValue=\"\";\n    this.selectedScreens=[];\n    this.allRoomData=[];\n    this.showRoomDetailsTable = false;\n    this.displayRoomDetails= false;\n    if(this.selectedEmName!='' && this.selectedEmId!=''){\n      this.roomSelectionMessage=`Select Rooms to be allocated for ${this.selectedEmCode} | ${this.selectedEmName}`;\n    }else if (this.selectedEmName=='' && this.selectedEmId!=''){\n      this.roomSelectionMessage=`Select Rooms to be allocated for ${this.selectedEmCode}`;\n    }\n    this.loadAllocationRoomData();\n    this.getAllRmTrans();\n  }\n\n  loadAllocationRoomData(){\n    let dateFrom = this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\");\n    let dateTo = this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\");\n    let data ={\n      dateFrom:dateFrom,\n      dateTo:dateTo,\n      divId:this.selectedDivisionId,\n      depId:this.selectedDepartmentId,\n      subDepId:this.selectedSubDepartmentId,\n      filterDto:{paginationDTO:this.paginationObjRm,filterCriteria:this.filterCriteriaListRm}\n    }\n    this.isFilteredRm = false;\n    this.blServ.getdepartmentallocation(data).subscribe((res:any)=>{\n      if(res){\n        this.isFilteredRm = false;\n        this.allRoomData =  res.content ? res.content : [];\n        this.totalElementsRm = res.totalElements ? res.totalElements : 0;\n        this.allRoomData = this.allRoomData.map( (each:any) => {\n        return {...each,\"required\":0}\n      });\n      this.showRoomDetailsTable=true;\n      }\n    })\n  }\n\n  formatDate(date: any) {\n    if (date != null) {\n      var d = new Date(date);\n      return d;\n    } else {\n      return null;\n    }\n    \n  }\n\n  checkDates(control: any){\n    if (control !== undefined && control != null) {\n      this.filterPanel.controls['dateTo'].setErrors(null);\n      this.filterPanel.clearAsyncValidators();\n      this.filterPanel.updateValueAndValidity();\n      let dateFrom = this.formatDate(this.filterPanel.controls.dateFrom.value);\n      let dateTo = this.formatDate(this.filterPanel.controls.dateTo.value);\n      if(dateFrom!= null && dateTo!=null && dateTo<=dateFrom){\n        this.filterPanel.controls['dateTo'].setErrors({ 'incorrect': true });\n          this.filterPanel.updateValueAndValidity();\n          return { 'incorrect': true };\n      }else {\n        return null;\n      }\n      }\n      return null;\n    }\n\n    assignConfirm() {\n      this.displayRoomData=[];\n      this.displayRoomData = [...this.selectedScreens];\n      this.displayRoomDetails = true;\n      this.assignRoomSelectedScreens=[...this.displayRoomData];\n    }\n\n    saveConfirm(){\n       this.confirmationService.confirm({\n        message: \"Are you sure you want to allocate the selected rooms\",\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.onAssign();\n        },\n        key: \"emrmGrid\"\n      });\n    }\n\n    onAssign(){\n      let check = this.checkRequirements(this.assignRoomSelectedScreens);\n      if(check){\n        this.messageService.clear();\n        const saveRequests:any[] = [];\n        this.assignRoomSelectedScreens.forEach((screen:any)=>{\n          let rmtrans = this.getRmTransId(screen);\n          let tid = rmtrans.id;\n          let obj ={\n            rmTransId:tid,\n            blId:screen.blId,\n            flId:screen.flId,\n            rmId:screen.rmId,\n            divId:this.selectedDivisionId,\n            depId:this.selectedDepartmentId,\n            subDepId:this.selectedSubDepartmentId,\n            emId:this.selectedEmId,\n            termId:this.selectedTerm.termId,\n            type:this.enumTemporaryValue,\n            dateFrom:this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\"),\n            dateTo:this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\"),\n            allocation:tid==0?screen.required:screen.required+rmtrans.allocation\n          }\n          saveRequests.push(this.rmtransservice.saveRmTrans(obj));\n        });\n        forkJoin(saveRequests)\n        .subscribe((res: any[]) => {\n          this.displayRoomDetails= false;\n          this.messageService.add({ key: 'emprmMsg', severity: 'success', summary: 'Record updated', detail: 'Room updated successfully' });\n          this.onSearch();\n        }, (error: any) => {\n          console.error('Failed to save records:', error);\n        });\n      }else{\n      }\n    }\n\n    getRmTransId(screen:any){\n      let match = this.allRmTransData.find( elem => elem.blId==screen.blId&&elem.flId==screen.flId&&elem.rmId==screen.rmId&&\n        elem.divId==this.selectedDivisionId&&elem.depId==this.selectedDepartmentId&& elem.subDepId==this.selectedSubDepartmentId && elem.dateFrom==this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\")\n        &&elem.dateTo==this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\") && elem.emId==this.selectedEmId\n        &&elem.termId==this.selectedTerm.termId);\n      if(match){\n        return {\"id\":match.rmTransId,\"allocation\":match.allocation};\n      }else{\n        return {\"id\":0,\"allocation\":0};\n      }\n     \n    }\n\n    checkRequirements(myList:any): boolean {\n      for (const obj of myList) {\n        if (obj.required > obj.available || obj.required<1) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    onRequiredEntry(room:any){\n      if(!(room.required<=room.available && room.required>0)){\n        if(room.required>room.available){\n          this.displayspaceerrormsg=`The selected room \"${room.blCode} ${room.flCode} ${room.rmCode}\" requested space should not exceed the available space.`;\n        }else if (room.required==0){\n          this.displayspaceerrormsg=\"The required space must be greater than zero.\"\n        }\n        this.displaySpaceError = true;\n        room.required =0;\n      }\n    }\n\n    onCheck(event:any){\n      event.data.required=0;\n      // event.data.isSelected=!event.data.isSelected;\n    }\n\n    closespaceerrorDialog(){\n      this.displayspaceerrormsg='';\n      this.displaySpaceError=false;\n    }\n\n    closedepterrorDialog(){\n      this.displaydepterror=false;\n    }\n\n    onCancelRoomDetailsBox(){\n      this.displayRoomDetails = false;\n      this.assignRoomSelectedScreens=[];\n      this.displayRoomData.forEach((room:any)=>{\n        room.required=0;\n        // room.isSelected=false;\n      });\n      this.requiredValue='';\n    }\n\n    onApplyRequiredValue(){\n      let valid = this.checkApplyRequiredValue();\n      if(valid){\n        this.assignRoomSelectedScreens=[...this.displayRoomData];\n        this.assignRoomSelectedScreens.forEach((screen:any)=>{\n          // screen.isSelected= true;\n          screen.required = this.requiredValue;\n        })\n      }\n    }\n\n    checkApplyRequiredValue(){\n      this.displayspaceerrormsg='';\n      let check = true;\n      var errorrooms='';\n      let count =0;\n      for(let room of this.displayRoomData){\n        if(this.requiredValue>room.available){\n          count ++;\n          if(count ==1){\n            errorrooms += `\"${room.blCode} ${room.flCode} ${room.rmCode}\"`;\n          }else{\n            errorrooms += `,\"${room.blCode} ${room.flCode} ${room.rmCode}\"`;\n          }\n        }\n      }\n      for(let room of this.displayRoomData){\n        if(this.requiredValue>room.available || this.requiredValue<1){\n          if(this.requiredValue>room.available){\n            this.displayspaceerrormsg=\"The selected room \"+errorrooms+\" requested space should not exceed the available space.\";\n           \n          }else if(this.requiredValue<1){\n            this.displayspaceerrormsg=\"The required space must be greater than zero.\";\n          }\n          this.displaySpaceError= true;\n          check = false;\n          return check;\n        }\n      }\n      return check;\n    }\n\n    checkRequiredValue(){\n      if(typeof(this.requiredValue)==\"number\"){\n        return true;\n      }else{\n        return false;\n      }\n    }\n\n    closenospaceerrorDialog(){\n      this.roomnospaceerror= false;\n    }\n\n    onCheckAvailable(room:any){\n      this.roomnospaceerror= false;\n      if(room.available==0){\n        let selectedscreencopy = [...this.selectedScreens];\n        this.selectedScreens = [];\n        this.roomnospaceerror = true;\n        // room.isSelected = false;\n        let indexval = selectedscreencopy.findIndex((obj:any)=>{return obj.blId==room.blId&&obj.flId==room.flId&&obj.rmId==room.rmId});\n        if(indexval != -1){\n          selectedscreencopy.splice(indexval,1);\n          this.selectedScreens=[...selectedscreencopy];\n        }\n      }\n    }\n\n    onEmployeeInnerFilter(event:any){\n      if(this.isFilteredEm){\n        Object.keys(event.filters).forEach((field) => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined ) {\n            let filterCriteriaEm = { fieldName: field, value: filterValue, matchMode: matchMode };\n            this.updateFilterCriteriaListEm(filterCriteriaEm);\n          }\n        });\n        this.paginationObjEm.pageSize = 0;\n        this.loadEmployeesPaginated();\n      }\n      this.isFilteredEm = true;\n    }\n\n    updateFilterCriteriaListEm(filterCriteria:any){\n      let index = this.filterCriteriaListEm.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if(filterCriteria['value']==null){\n        if(index !==-1){\n          this.filterCriteriaListEm.splice(index, 1);\n        }\n      }else {\n        if (index !== -1) {\n          this.filterCriteriaListEm[index] = filterCriteria;\n        } else {\n          this.filterCriteriaListEm.push(filterCriteria);\n        }\n      }\n    }\n\n    onPageChangeEmployee(event:any){\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObjEm.pageNo = pageNo;\n      this.paginationObjEm.pageSize = pageSize;\n      this.loadEmployeesPaginated();\n    }\n\n    onRoomInnerFilter(event:any){\n      if(this.isFilteredRm){\n        Object.keys(event.filters).forEach((field) => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined ) {\n            let filterCriteriaRm ={};\n            if(field==\"blCode\"){\n              filterCriteriaRm = { fieldName: \"bl_code\", value: filterValue, matchMode: matchMode };\n            }else if(field==\"flCode\"){\n              filterCriteriaRm = { fieldName: \"fl_code\", value: filterValue, matchMode: matchMode };\n            }else if(field==\"rmCode\"){\n              filterCriteriaRm = { fieldName: \"rm_code\", value: filterValue, matchMode: matchMode };\n            }\n            this.updateFilterCriteriaListRm(filterCriteriaRm);\n          }\n        });\n        this.paginationObjRm.pageNo=0\n        this.selectedScreens =[];\n        this.loadAllocationRoomData();\n      }\n      this.isFilteredRm = true;\n    }\n\n    updateFilterCriteriaListRm(filterCriteria:any){\n      let index = this.filterCriteriaListRm.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if(filterCriteria['value']==null){\n        if(index !==-1){\n          this.filterCriteriaListRm.splice(index, 1);\n        }\n      }else {\n        if (index !== -1) {\n          this.filterCriteriaListRm[index] = filterCriteria;\n        } else {\n          this.filterCriteriaListRm.push(filterCriteria);\n        }\n      }\n    }\n\n    onPageChangeRoom(event:any){\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObjRm.pageNo = pageNo;\n      this.paginationObjRm.pageSize = pageSize;\n      this.selectedScreens =[];\n      this.loadAllocationRoomData();\n    }\n\n    ngOnDestroy() {\n      this.bps.unregister(this);\n    }\n\n    scrollToEndEm() {\n      this.offsetEm = this.limitEm;\n      this.limitEm += this.scrollLimit;\n      this.filterCriteria.limit = this.limitEm;\n      this.filterCriteria.offset = this.offsetEm;\n      this.empServ.getALLmployeeByScroll(this.filterCriteria).subscribe((res:any) => {\n        this.enumEm = res;\n        this.enumEm.unshift({emId:null, firstName:'Make a selection',emCode:null});\n      })\n    }\n  \n    searchEm(event: any) {\n      this.filterCriteria = {};\n      this.filterCriteria = { fieldName: \"firstName\", value: event.term, matchMode: \"contains\" };\n      this.scrollToEndEm();\n    }\n  \n    updateEmList(emData:any) {\n      this.enumEm = this.enumEm.filter(e => e.emId != emData.emId);\n      this.enumEm = this.enumEm.filter(e => e.emId != null);\n      this.enumEm.unshift(emData);\n      this.enumEm.unshift({emId:null, firstName:'Make a selection',emCode:null});\n    }\n\n    openEm() {\n      this.limitEm = 0;\n      this.offsetEm = 0;\n      this.filterCriteria = {\n        fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n      };\n      this.scrollToEndEm();\n    }\n  \n}\n","<div class=\"card\" style=\"height:680px;\">\n    <div style=\"display: flex; justify-content: space-between;height:90vh;\">\n        <div class=\"employee-selection-container\">\n            <div class=\"card filter-em-container\">\n                <form [formGroup]=\"emfilterPanel\" style=\"width: 100%\">\n                    <table width=\"100%\">\n                        <tr>\n                            <td style=\"width: 100%\">\n                                <div class=\"input-label-custom \">\n                                    <label class='form-field-lable '>Employee </label>\n                                    <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumEm\"\n                                        formControlName=\"emId\" [searchable]=\"true\" bindLabel=\"firstName\"\n                                        bindValue=\"emId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\" (open)=\"openEm()\"\n                                        (change)=\"onSelectEmployee($event)\" (scrollToEnd)=\"scrollToEndEm()\" (search)=\"searchEm($event)\">\n                                    </ng-select>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </form>\n            </div>\n            <div class=\"result-em-container\">\n                <p-table #dt1 [value]=\"emData\" [paginator]=\"false\" [rows]=\"rowCount\" styleClass=\"p-datatable-responsive-demo\"\n                    [rowHover]=\"true\" [scrollable]=\"true\" selectionMode=\"single\" dataKey=\"emId\" scrollDirection=\"both\"\n                    scrollHeight=\"350px\" (onRowSelect)=\"onEmRowSelect($event)\" id=em_list (onFilter)=\"onEmployeeInnerFilter($event)\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pSortableColumn=\"emId\">\n                                <div class=\"grid-header-column\">\n                                    <div class=\"grid-header-label\">\n                                        <p class=\"grid-label-paragraph\">Employee Id</p>\n                                    </div>\n                                    <div class=\"grid-sort-icon\">\n                                        <p-sortIcon field=\"emId\"></p-sortIcon>\n                                        <p-columnFilter type=\"number\" field=\"emId\" display=\"menu\"></p-columnFilter>\n                                    </div>\n                                </div>\n                            </th>\n                            <th pSortableColumn=\"firstName\">\n                                <div class=\"grid-header-column\">\n                                    <div class=\"grid-header-label\">\n                                        <p class=\"grid-label-paragraph\">Name</p>\n                                    </div>\n                                    <div class=\"grid-sort-icon\">\n                                        <p-sortIcon field=\"firstName\"></p-sortIcon>\n                                        <p-columnFilter type=\"text\" field=\"firstName\" display=\"menu\"></p-columnFilter>\n                                    </div>\n                                </div>\n                            </th>\n                            <th pSortableColumn=\"email\">\n                                <div class=\"grid-header-column\">\n                                    <div class=\"grid-header-label\">\n                                        <p class=\"grid-label-paragraph\">Email</p>\n                                    </div>\n                                    <div class=\"grid-sort-icon\">\n                                        <p-sortIcon field=\"email\"></p-sortIcon>\n                                        <p-columnFilter type=\"text\" field=\"email\" display=\"menu\"></p-columnFilter>\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-em>\n                        <tr [pSelectableRow]=\"em\">\n                            <td>{{em.emId}}</td>\n                            <td>{{em.firstName}}</td>\n                            <td>{{em.email}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-columns>\n                        <tr>\n                            <td [attr.colspan]=\"1\">\n                                No records found\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n                <div class=\"paginator\">\n                    <p-paginator [rows]=\"rowCount\" [totalRecords]=\"totalElementsEm\" (onPageChange)=\"onPageChangeEmployee($event)\" [first]=\"paginationObjEm.pageNo * paginationObjEm.pageSize\"\n                      currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\"\n                      [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n                </div>\n            </div>\n        </div>\n        <div class=\"room-selection-container\">\n            <div *ngIf=\"showTerms\" class=\"card filter-rm-container\">\n                <form [formGroup]=\"filterPanel\">\n                    <table width=\"100%\" *ngIf=\"!useTabletProtrait\">\n                        <tr>\n                            <td style=\"width: 30%\">\n                                <div class=\"input-label-custom \">\n                                    <label class='form-field-lable control-label'>Term </label>\n                                    <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumTerm\"\n                                        formControlName=\"term\" [searchable]=\"true\" bindLabel=\"term\" bindValue=\"termId\"\n                                        (change)=\"onSelectTerm($event)\" placeholder=\"Make a selection\"\n                                        class=\"ng-select-dropdown\">\n                                    </ng-select>\n                                </div>\n                            </td>\n                            <td style=\"width: 30%\">\n                                <div class=\"input-label-custom\">\n                                    <div class=\"p-fluid p-field\">\n                                        <label class='form-field-lable '>Date From</label>\n                                        <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"date\"\n                                            formControlName=\"dateFrom\" [showIcon]=\"false\" inputId=\"icon\"\n                                            [readonlyInput]=\"true\" \n                                            (ngModelChange)=\"checkDates($event)\"></p-calendar>\n                                    </div>\n                                </div>\n                            </td>\n                            <td style=\"width: 30%\">\n                                <div class=\"input-label-custom \">\n                                    <div class=\"p-fluid p-field\">\n                                        <label class='form-field-lable '>Date To</label>\n                                        <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"date\"\n                                            formControlName=\"dateTo\" [showIcon]=\"false\" inputId=\"icon\"\n                                            [readonlyInput]=\"true\" (ngModelChange)=\"checkDates($event)\"></p-calendar>\n                                    </div>\n                                </div>\n                            </td>\n                            <td style=\"width: 10%\">\n                                <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple\n                                    label=\"Search\" style=\"width: 67px;margin-left:8%;margin-top:20px;\"\n                                    class=\"p-button-primary \"></button>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"filterPanel.controls['dateTo']?.errors\">\n                            <td style=\"width: 30%\"></td>\n                            <td style=\"width: 30%\">\n                                <label\n                                    *ngIf=\"filterPanel.controls['dateTo']?.errors && !filterPanel.controls['dateTo']?.errors.required\"\n                                    class='form-field-lable' style=\"color:red;margin-left:5px;\">Date To should be\n                                    greater than Date From</label>\n                            </td>\n                            <td style=\"width: 30%\"></td>\n                            <td style=\"width: 10%\"></td>\n                        </tr>\n                    </table>\n                    <table width=\"100%\" *ngIf=\"useTabletProtrait\">\n                        <tr>\n                            <td style=\"width:50%\">\n                                <div class=\"input-label-custom \">\n                                    <label class='form-field-lable control-label'>Term </label>\n                                    <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumTerm\"\n                                        formControlName=\"term\" [searchable]=\"true\" bindLabel=\"term\" bindValue=\"termId\"\n                                        (change)=\"onSelectTerm($event)\" placeholder=\"Make a selection\"\n                                        class=\"ng-select-dropdown\">\n                                    </ng-select>\n                                </div>\n                            </td>\n                            <td style=\"width: 50%\">\n                                <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple\n                                    label=\"Search\" style=\"width: 67px;margin-left:18%;margin-top:20px;\"\n                                    class=\"p-button-primary \"></button>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 50%\">\n                                <div class=\"input-label-custom\">\n                                    <div class=\"p-fluid p-field\">\n                                        <label class='form-field-lable '>Date From</label>\n                                        <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"date\"\n                                            formControlName=\"dateFrom\" [showIcon]=\"false\" inputId=\"icon\"\n                                            [readonlyInput]=\"true\" \n                                            (ngModelChange)=\"checkDates($event)\"></p-calendar>\n                                    </div>\n                                </div>\n                            </td>\n                            <td style=\"width: 50%\">\n                                <div class=\"input-label-custom \">\n                                    <div class=\"p-fluid p-field\">\n                                        <label class='form-field-lable '>Date To</label>\n                                        <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"date\"\n                                            formControlName=\"dateTo\" [showIcon]=\"false\" inputId=\"icon\"\n                                            [readonlyInput]=\"true\" (ngModelChange)=\"checkDates($event)\"></p-calendar>\n                                    </div>\n                                </div>\n                            </td>\n\n                        </tr>\n                        <tr *ngIf=\"filterPanel.controls['dateTo']?.errors\">\n                            <td style=\"width: 50%\"></td>\n                            <td style=\"width: 50%\">\n                                <label\n                                    *ngIf=\"filterPanel.controls['dateTo']?.errors && !filterPanel.controls['dateTo']?.errors.required\"\n                                    class='form-field-lable' style=\"color:red;margin-left:5px;\">Date To should be\n                                    greater than Date From</label>\n                            </td>\n                        </tr>\n                    </table>\n                </form>\n            </div>\n            <div class=\"card result-rm-container\" *ngIf=\"showRoomDetailsTable\">\n                <p-table #dt1 [value]=\"allRoomData\" [paginator]=\"false\" [rows]=\"rowCount\" [(selection)]=\"selectedScreens\"\n                    styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\" id=\"rm_list\" [rowHover]=\"false\" [scrollable]=\"true\"\n                    scrollDirection=\"both\" scrollHeight=\"350px\" [globalFilterFields]=\"['blCode', 'flCode', 'rmCode']\"\n                    (onFilter)=\"onRoomInnerFilter($event)\">\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"d-flex flex-row\">\n                            <div style=\"flex: auto;\">\n                                <div>\n                                    <h4 class=\"room-selection-message\">{{roomSelectionMessage}}</h4>\n                                </div>\n                            </div>\n                            <div style=\"max-width:50%\" class=\"rmselection-button-container\">\n                                <div class=\"rm-button-div\">\n                                    <!-- <span class=\"p-input-icon-left ml-auto search-button\" >\n                                        <i class=\"pi pi-search\"></i>\n                                        <input pInputText type=\"text\"\n                                            (input)=\"dt1.filterGlobal($event.target.value, 'contains')\"\n                                            placeholder=\"Search...\" class=\"search_input\" />\n                                    </span> -->\n                                </div>\n                                <div class=\"rm-button-div\">\n                                    <button pButton pRipple label=\"Allocate\" class=\"p-button-primary  p-mr-2 allocate-button\"\n                                    (click)=\"assignConfirm()\" [disabled]=\"!(selectedScreens.length>0)\"></button>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width: 4rem\">\n                            </th>\n                            <th pSortableColumn=\"blCode\">\n                                <div class=\"grid-header-column\">\n                                    <div class=\"grid-header-label\">\n                                        <p class=\"grid-label-paragraph\">Building Code</p>\n                                    </div>\n                                    <div class=\"grid-sort-icon\">\n                                        <p-sortIcon field=\"blCode\"></p-sortIcon>\n                                        <p-columnFilter type=\"text\" field=\"blCode\" display=\"menu\"></p-columnFilter>\n                                    </div>\n                                </div>\n                            </th>\n                            <th pSortableColumn=\"flCode\">\n                                <div class=\"grid-header-column\">\n                                    <div class=\"grid-header-label\">\n                                        <p class=\"grid-label-paragraph\">Floor Code</p>\n                                    </div>\n                                    <div class=\"grid-sort-icon\">\n                                        <p-sortIcon field=\"flCode\"></p-sortIcon>\n                                        <p-columnFilter type=\"text\" field=\"flCode\" display=\"menu\"></p-columnFilter>\n                                    </div>\n                                </div>\n                            </th>\n                            <th pSortableColumn=\"rmCode\">\n                                <div class=\"grid-header-column\">\n                                    <div class=\"grid-header-label\">\n                                        <p class=\"grid-label-paragraph\">Room Code</p>\n                                    </div>\n                                    <div class=\"grid-sort-icon\">\n                                        <p-sortIcon field=\"rmCode\"></p-sortIcon>\n                                        <p-columnFilter type=\"text\" field=\"rmCode\" display=\"menu\"></p-columnFilter>\n                                    </div>\n                                </div>\n                            </th>\n                            <th>Room Area</th>\n                            <th pSortableColumn=\"occupied\">\n                                <div class=\"grid-header-column\">\n                                    <div class=\"grid-header-label\">\n                                        <p class=\"grid-label-paragraph\">Occupied Space (%)</p>\n                                    </div>\n                                    <div class=\"grid-sort-icon\">\n                                        <p-sortIcon field=\"occupied\"></p-sortIcon>\n                                    </div>\n                                </div>\n                            </th>\n                            <th pSortableColumn=\"available\">\n                                <div class=\"grid-header-column\">\n                                    <div class=\"grid-header-label\">\n                                        <p class=\"grid-label-paragraph\">Available Space (%)</p>\n                                    </div>\n                                    <div class=\"grid-sort-icon\">\n                                        <p-sortIcon field=\"available\"></p-sortIcon>\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-room>\n                        <tr [pSelectableRow]=\"room\">\n                            <td style=\"width: 4rem\">\n                                <p-tableCheckbox [value]=\"room\" (click)=\"onCheckAvailable(room)\"></p-tableCheckbox>\n                            </td>\n                            <td>{{room.blCode}}</td>\n                            <td>{{room.flCode}}</td>\n                            <td>{{room.rmCode}}</td>\n                            <td>{{room.rmArea}}</td>\n                            <td>{{room.occupied}}</td>\n                            <td>{{room.available}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-columns>\n                        <tr>\n                            <td [attr.colspan]=\"3\">\n                                No records found\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n                <div class=\"paginator\">\n                    <p-paginator [rows]=\"rowCount\" [totalRecords]=\"totalElementsRm\" (onPageChange)=\"onPageChangeRoom($event)\" [first]=\"paginationObjRm.pageNo * paginationObjRm.pageSize\"\n                      currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\"\n                      [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n                  </div>\n            </div>\n        </div>\n    </div>\n</div>\n<p-dialog [(visible)]=\"displaySpaceError\" [modal]=\"true\" [style]=\"{width: '25vw'}\" [draggable]=\"false\"\n    [resizable]=\"false\" [closable]=\"false\">\n    <p-header>\n        Warning\n    </p-header>\n    <p style=\"font-size:14px;\">{{displayspaceerrormsg}}</p>\n    <button pButton label=\"Ok\" class=\"p-button-secondary\" style=\"margin-left:85%\"\n        (click)=\"closespaceerrorDialog()\"></button>\n</p-dialog>\n\n<p-dialog [(visible)]=\"displaydepterror\" [modal]=\"true\" [style]=\"{width: '25vw'}\" [draggable]=\"false\"\n    [resizable]=\"false\" [closable]=\"false\">\n    <p-header>\n        Warning\n    </p-header>\n    <p style=\"font-size:14px;\">The chosen employee does not have any assigned division and department and sub department.\n        Kindly assign division,department and sub department before proceeding with space allocation.</p>\n    <button pButton label=\"Ok\" class=\"p-button-secondary\" style=\"margin-left:85%\"\n        (click)=\"closedepterrorDialog()\"></button>\n</p-dialog>\n\n<p-dialog [(visible)]=\"roomnospaceerror\" [modal]=\"true\" [style]=\"{width: '25vw'}\" [draggable]=\"false\"\n    [resizable]=\"false\" [closable]=\"false\">\n    <p-header>\n        Warning\n    </p-header>\n    <p style=\"font-size:14px;\">The selected room has no available space.</p>\n    <button pButton label=\"Ok\" class=\"p-button-secondary\" style=\"margin-left:85%\"\n        (click)=\"closenospaceerrorDialog()\"></button>\n</p-dialog>\n\n<p-dialog [(visible)]=\"displayRoomDetails\" [modal]=\"true\" [style]=\"{width: '70vw'}\" [draggable]=\"false\"\n    [resizable]=\"false\" [closable]=\"false\">\n    <p-header>\n        Selected Rooms\n    </p-header>\n    <div class=\"card\" #roomselectiondialog>\n        <p-table #dt2 [value]=\"displayRoomData\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [rowsPerPageOptions]=\"[5,10,25]\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n            (onRowSelect)=\"onCheck($event)\" selectionMode=\"single\" [rowHover]=\"true\" [scrollable]=\"true\"\n            scrollDirection=\"both\" scrollHeight=\"350px\">\n            <ng-template pTemplate=\"caption\">\n                <div class=\"d-flex flex-row\">\n                    <div style=\"flex: auto;\">\n                        <div>\n                            <h4>Rooms</h4>\n                        </div>\n                    </div>\n                    <div>\n                        <span class=\"p-input-icon-left ml-auto\">\n                            <input pInputText type=\"number\" class=\"search_input\" [(ngModel)]=\"requiredValue\" NumbersOnly\n                                (blur)=\"checkApplyRequiredValue()\" placeholder=\"Required Value...\" />\n                            <button pButton pRipple label=\"Apply\" class=\"p-button-primary\"\n                                style=\"margin-left:5px;width:70px;\" [disabled]=\"!checkRequiredValue()\"\n                                (click)=\"onApplyRequiredValue()\"></button>\n                        </span>\n                        <button pButton pRipple label=\"Save\" class=\"p-button-primary\"\n                            style=\"margin-left:5px;width:70px;\" (click)=\"saveConfirm()\"\n                            [disabled]=\"!(assignRoomSelectedScreens.length>0 && checkRequirements(assignRoomSelectedScreens))\"></button>\n                        <button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\" (click)=\"onCancelRoomDetailsBox()\"\n                            styleClass=\"p-button-secondary\" style=\"margin-left:5px;width:70px;\"></button>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"blCode\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Building Code</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"blCode\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"blCode\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"flCode\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Floor Code</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"flCode\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"flCode\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"rmCode\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Room Code</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"rmCode\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"rmCode\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th>Room Area</th>\n                    <th pSortableColumn=\"occupied\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Occupied Space (%)</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"occupied\"></p-sortIcon>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"available\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Available Space (%)</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"available\"></p-sortIcon>\n                            </div>\n                        </div>\n                    </th>\n                    <th>Required Space (%)</th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-room>\n                <tr [pSelectableRow]=\"room\">\n                    <td>{{room.blCode}}</td>\n                    <td>{{room.flCode}}</td>\n                    <td>{{room.rmCode}}</td>\n                    <td>{{room.rmArea}}</td>\n                    <td>{{room.occupied}}</td>\n                    <td>{{room.available}}</td>\n                    <td [pEditableColumn]=\"room.required\" pEditableColumnField=\"required\"\n                        style=\"background-color: #b3b3ff;\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input pInputText type=\"number\" [(ngModel)]=\"room.required\" NumbersOnly\n                                    (blur)=\"onRequiredEntry(room)\" />\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{ room.required }}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-columns>\n                <tr>\n                    <td [attr.colspan]=\"3\">\n                        No records found\n                    </td>\n                </tr>\n            </ng-template>\n        </p-table>\n    </div>\n    <div>\n\n    </div>\n</p-dialog>\n\n<p-toast key=\"emprmMsg\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"emrmGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}