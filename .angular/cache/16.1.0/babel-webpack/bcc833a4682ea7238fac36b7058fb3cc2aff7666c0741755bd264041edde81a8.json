{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/ui/Helpdesk/tools/services/tools.services\";\nimport * as i3 from \"../services/request-tools.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"ng-zorro-antd/table\";\nimport * as i7 from \"../../../../../../../directive/numbers-only.directive\";\nimport * as i8 from \"../../../../../../../directive/directive/two-digit-decimal-number\";\nfunction AddRequestToolsComponent_label_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 19);\n    i0.ɵɵtext(1, \"Tool already exists\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddRequestToolsComponent {\n  constructor(formBuilder, service, requestToolsService) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.requestToolsService = requestToolsService;\n    this.today = new Date();\n    this.subscriptions = [];\n    this.toolsData = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.toolsExist = false;\n    this.isRequestor = false;\n    this.isApprover = false;\n    this.isTechnician = false;\n    this.isSupervisor = false;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.reqToolsFormPanel = this.formBuilder.group({\n      toolId: [null, [Validators.required]],\n      reqToolId: [null],\n      hoursRequired: [null, [Validators.required, Validators.min(1)]],\n      dateAssign: [null],\n      timeAssign: [null],\n      requestId: [null],\n      actualHoursStd: [null],\n      actualHoursDouble: [null],\n      actualHoursOvertime: [null],\n      totalHours: [null],\n      addedBy: [null]\n    });\n    this.subscriptions.push(this.reqToolsFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadTools();\n    if (this.isView) {\n      this.reqToolsFormPanel.disable();\n    }\n  }\n  get value() {\n    const requestTools = {\n      toolId: this.reqToolsFormPanel.controls.toolId.value,\n      reqToolId: this.reqToolsFormPanel.controls.reqToolId.value,\n      hoursRequired: this.reqToolsFormPanel.controls.hoursRequired.value,\n      requestId: this.reqToolsFormPanel.controls.requestId.value,\n      dateAssign: this.reqToolsFormPanel.controls.dateAssign.value,\n      timeAssign: this.reqToolsFormPanel.controls.timeAssign.value,\n      actualHoursStd: this.reqToolsFormPanel.controls.actualHoursStd.value,\n      actualHoursDouble: this.reqToolsFormPanel.controls.actualHoursDouble.value,\n      actualHoursOvertime: this.reqToolsFormPanel.controls.actualHoursOvertime.value,\n      addedBy: this.reqToolsFormPanel.controls.addedBy.value\n    };\n    return requestTools;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.reqToolsFormPanel.patchValue({\n        toolId: value.toolId,\n        reqToolId: value.reqToolId,\n        hoursRequired: value.hoursRequired,\n        dateAssign: this.formatDate(value.dateAssign),\n        timeAssign: this.convertToTime(value.timeAssign),\n        requestId: value.requestId,\n        actualHoursStd: value.actualHoursStd,\n        actualHoursDouble: value.actualHoursDouble,\n        actualHoursOvertime: value.actualHoursOvertime,\n        totalHours: parseFloat(value.actualHoursStd) + parseFloat(value.actualHoursDouble) + parseFloat(value.actualHoursOvertime),\n        addedBy: value.addedBy\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const validationErros = [];\n    return validationErros;\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.reqToolsFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate(_) {\n    return this.reqToolsFormPanel.valid ? null : {\n      reqToolsFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  loadTools() {\n    this.service.getAllTools().subscribe(res => {\n      if (res) {\n        this.toolsData = res;\n      } else {\n        this.toolsData = [];\n      }\n    });\n  }\n  formatDate(date) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n  convertToTime(value) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      return currDate;\n    } else {\n      return null;\n    }\n  }\n  onChangeHours(event) {\n    let actualHoursStd = this.reqToolsFormPanel.controls.actualHoursStd.value;\n    let actualHoursDouble = this.reqToolsFormPanel.controls.actualHoursDouble.value;\n    let actualHoursOvertime = this.reqToolsFormPanel.controls.actualHoursOvertime.value;\n    let totalHours = 0;\n    totalHours = actualHoursStd ? totalHours + parseFloat(actualHoursStd) : totalHours;\n    totalHours = actualHoursDouble ? totalHours + parseFloat(actualHoursDouble) : totalHours;\n    totalHours = actualHoursOvertime ? totalHours + parseFloat(actualHoursOvertime) : totalHours;\n    setTimeout(() => {\n      this.reqToolsFormPanel.patchValue({\n        totalHours: totalHours\n      });\n    });\n  }\n  selectTool(event) {\n    if (this.previousTools != event.toolsId) {\n      let requestId = this.reqToolsFormPanel.controls.requestId.value;\n      let toolId = event.toolsId;\n      this.requestToolsService.checkToolExist(requestId, toolId).subscribe(res => {\n        this.toolsExist = false;\n        if (res) {\n          this.toolsExist = true;\n        } else {\n          this.toolsExist = false;\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AddRequestToolsComponent_Factory(t) {\n    return new (t || AddRequestToolsComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ToolsService), i0.ɵɵdirectiveInject(i3.RequestToolsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddRequestToolsComponent,\n    selectors: [[\"app-add-request-tools\"]],\n    inputs: {\n      isNew: \"isNew\",\n      isView: \"isView\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddRequestToolsComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddRequestToolsComponent),\n      multi: true\n    }])],\n    decls: 49,\n    vars: 9,\n    consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"name\", \"toolId\", \"formControlName\", \"toolId\", \"bindLabel\", \"tool\", \"bindValue\", \"toolsId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 2, \"width\", \"170px\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"width\", \"130px\"], [\"type\", \"text\", \"name\", \"hoursRequired\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"hoursRequired\", 1, \"form-control\", 2, \"width\", \"150px\", 3, \"readonly\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"actual-hours-container\", 3, \"hidden\"], [1, \"scheduler-border\", \"form-field-lable\"], [1, \"scheduler-border\"], [1, \"input-label-custom\", 2, \"margin-left\", \"-80px\", \"margin-top\", \"10px\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"actualHoursStd\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"actualHoursStd\", 1, \"form-control\", 2, \"width\", \"80%\", 3, \"input\"], [1, \"input-label-custom\", 2, \"margin-left\", \"-20px\"], [\"type\", \"text\", \"name\", \"actualHoursOvertime\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"actualHoursOvertime\", 1, \"form-control\", 2, \"width\", \"90%\", 3, \"input\"], [1, \"input-label-custom\", 2, \"margin-left\", \"-80px\"], [\"type\", \"text\", \"name\", \"actualHoursDouble\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"actualHoursDouble\", 1, \"form-control\", 2, \"width\", \"80%\", 3, \"input\"], [\"type\", \"text\", \"name\", \"totalHours\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"totalHours\", 1, \"form-control\", 2, \"width\", \"90%\", 3, \"readOnly\"], [1, \"form-field-lable\", 2, \"color\", \"red\"]],\n    template: function AddRequestToolsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"div\")(3, \"tr\")(4, \"td\")(5, \"div\", 2)(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Tool\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 4);\n        i0.ɵɵlistener(\"change\", function AddRequestToolsComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.selectTool($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\", 5)(10, \"div\", 2)(11, \"label\", 3);\n        i0.ɵɵtext(12, \"Required Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\")(14, \"input\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"tr\")(16, \"td\");\n        i0.ɵɵtemplate(17, AddRequestToolsComponent_label_17_Template, 2, 0, \"label\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"td\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 8)(20, \"fieldset\", 9)(21, \"legend\", 10);\n        i0.ɵɵtext(22, \"Actual Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"tr\")(24, \"td\")(25, \"div\", 11)(26, \"label\", 12);\n        i0.ɵɵtext(27, \"Standard Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵelementStart(29, \"input\", 13);\n        i0.ɵɵlistener(\"input\", function AddRequestToolsComponent_Template_input_input_29_listener($event) {\n          return ctx.onChangeHours($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"td\")(31, \"div\", 14)(32, \"label\", 12);\n        i0.ɵɵtext(33, \" Overtime Hours \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵelementStart(35, \"input\", 15);\n        i0.ɵɵlistener(\"input\", function AddRequestToolsComponent_Template_input_input_35_listener($event) {\n          return ctx.onChangeHours($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"tr\")(37, \"td\")(38, \"div\", 16)(39, \"label\", 12);\n        i0.ɵɵtext(40, \"Double Time Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"br\");\n        i0.ɵɵelementStart(42, \"input\", 17);\n        i0.ɵɵlistener(\"input\", function AddRequestToolsComponent_Template_input_input_42_listener($event) {\n          return ctx.onChangeHours($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"td\")(44, \"div\", 14)(45, \"label\", 12);\n        i0.ɵɵtext(46, \"Total Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"br\")(48, \"input\", 18);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.reqToolsFormPanel);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.toolsData)(\"searchable\", true)(\"readonly\", !ctx.isSupervisor && !ctx.isNew);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"readonly\", !ctx.isSupervisor && !ctx.isNew);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.toolsExist);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.isNew);\n        i0.ɵɵadvance(29);\n        i0.ɵɵproperty(\"readOnly\", true);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.NgSelectComponent, i6.NzTableCellDirective, i6.NzTrDirective, i7.NumbersOnlyDirective, i8.TwoDigitDecimalNumberDirective],\n    styles: [\".actual-hours-container[_ngcontent-%COMP%] {\\n  width: 97%;\\n}\\n\\nfieldset.scheduler-border[_ngcontent-%COMP%] {\\n  border: 1px groove #ddd !important;\\n  padding: 0 1.4em 1.4em 1.4em !important;\\n  margin: 0 0 1.5em 0 !important;\\n  box-shadow: 0px 0px 0px 0px #000;\\n  margin-top: 30px !important;\\n}\\n\\nlegend.scheduler-border[_ngcontent-%COMP%] {\\n  font-size: 1em !important;\\n  text-align: left !important;\\n  width: auto;\\n  padding: 0 10px;\\n  border-bottom: none;\\n  margin-top: -10px;\\n  background-color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svd29yay1yZXF1ZXN0LWRldGFpbHMvd2lkZ2V0cy9yZXF1ZXN0LXRvb2xzL3dpZGdldHMvYWRkLXJlcXVlc3QtdG9vbHMvYWRkLXJlcXVlc3QtdG9vbHMuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8uLi8uLi8uLi9NYW5hdiUyMEd1cHRhL0Rvd25sb2Fkcy9mbXMvZm1zL2Zyb250ZW5kL2Ztc19mcm9udGVuZC9zcmMvYXBwL3VpL0hlbHBkZXNrL3dvcmstcmVxdWVzdC1kZXRhaWxzL3dpZGdldHMvcmVxdWVzdC10b29scy93aWRnZXRzL2FkZC1yZXF1ZXN0LXRvb2xzL2FkZC1yZXF1ZXN0LXRvb2xzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksVUFBQTtBQ0FKOztBRElBO0VBQ0ksa0NBQUE7RUFDQSx1Q0FBQTtFQUNBLDhCQUFBO0VBRUEsZ0NBQUE7RUFDQSwyQkFBQTtBQ0RKOztBRElFO0VBQ0UseUJBQUE7RUFFQSwyQkFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FDRkoiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0dWFsLWhvdXJzLWNvbnRhaW5lclxue1xuICAgIHdpZHRoOiA5NyU7XG4gICAvLyBib3JkZXI6IDFweCBzb2xpZCAjY2NjZGVmO1xufVxuXG5maWVsZHNldC5zY2hlZHVsZXItYm9yZGVyIHtcbiAgICBib3JkZXI6IDFweCBncm9vdmUgI2RkZCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDAgMS40ZW0gMS40ZW0gMS40ZW0gIWltcG9ydGFudDtcbiAgICBtYXJnaW46IDAgMCAxLjVlbSAwICFpbXBvcnRhbnQ7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggIzAwMDtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggIzAwMDtcbiAgICBtYXJnaW4tdG9wOiAzMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbiAgXG4gIGxlZ2VuZC5zY2hlZHVsZXItYm9yZGVyIHtcbiAgICBmb250LXNpemU6IDFlbSAhaW1wb3J0YW50O1xuICAgIC8vZm9udC13ZWlnaHQ6IGJvbGQgIWltcG9ydGFudDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgbWFyZ2luLXRvcDogLTEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAvLyB3aWR0aDo4NXB4O1xuICAgLy8gY29sb3I6IGJsYWNrO1xuICB9IiwiLmFjdHVhbC1ob3Vycy1jb250YWluZXIge1xuICB3aWR0aDogOTclO1xufVxuXG5maWVsZHNldC5zY2hlZHVsZXItYm9yZGVyIHtcbiAgYm9yZGVyOiAxcHggZ3Jvb3ZlICNkZGQgIWltcG9ydGFudDtcbiAgcGFkZGluZzogMCAxLjRlbSAxLjRlbSAxLjRlbSAhaW1wb3J0YW50O1xuICBtYXJnaW46IDAgMCAxLjVlbSAwICFpbXBvcnRhbnQ7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDBweCAwcHggMHB4ICMwMDA7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggMHB4IDBweCAjMDAwO1xuICBtYXJnaW4tdG9wOiAzMHB4ICFpbXBvcnRhbnQ7XG59XG5cbmxlZ2VuZC5zY2hlZHVsZXItYm9yZGVyIHtcbiAgZm9udC1zaXplOiAxZW0gIWltcG9ydGFudDtcbiAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xuICB3aWR0aDogYXV0bztcbiAgcGFkZGluZzogMCAxMHB4O1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICBtYXJnaW4tdG9wOiAtMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALIDATORS","NG_VALUE_ACCESSOR","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AddRequestToolsComponent","constructor","formBuilder","service","requestToolsService","today","Date","subscriptions","toolsData","enumList","enumClonedList","toolsExist","isRequestor","isApprover","isTechnician","isSupervisor","onChange","onTouched","reqToolsFormPanel","group","toolId","required","reqToolId","hoursRequired","min","dateAssign","timeAssign","requestId","actualHoursStd","actualHoursDouble","actualHoursOvertime","totalHours","addedBy","push","valueChanges","subscribe","value","ngOnInit","loadTools","isView","disable","requestTools","controls","setTimeout","patchValue","formatDate","convertToTime","parseFloat","isValid","getValidationErrors","length","validationErros","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","forEach","s","unsubscribe","getAllTools","res","date","dateCreated","currDate","data","split","time","setHours","setMinutes","onChangeHours","event","selectTool","previousTools","toolsId","checkToolExist","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","ToolsService","i3","RequestToolsService","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddRequestToolsComponent_Template","rf","ctx","ɵɵlistener","AddRequestToolsComponent_Template_ng_select_change_8_listener","$event","ɵɵelement","ɵɵtemplate","AddRequestToolsComponent_label_17_Template","AddRequestToolsComponent_Template_input_input_29_listener","AddRequestToolsComponent_Template_input_input_35_listener","AddRequestToolsComponent_Template_input_input_42_listener","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\work-request-details\\widgets\\request-tools\\widgets\\add-request-tools\\add-request-tools.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\work-request-details\\widgets\\request-tools\\widgets\\add-request-tools\\add-request-tools.component.html"],"sourcesContent":["import { Component, Input, OnInit, forwardRef } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Enums } from 'src/app/model/enums.model';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { ToolsService } from 'src/app/ui/Helpdesk/tools/services/tools.services';\nimport { RequestToolsService } from '../services/request-tools.service';\n\n@Component({\n  selector: 'app-add-request-tools',\n  templateUrl: './add-request-tools.component.html',\n  styleUrls: ['./add-request-tools.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddRequestToolsComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddRequestToolsComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddRequestToolsComponent implements OnInit {\n  today: Date = new Date();\n  reqToolsFormPanel!: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  hoursRequired!: number;\n  toolsData: any[] = [];\n  enumList: Enums[] = [];\n  enumClonedList: Enums[] = [];\n  previousTools: any;\n  toolsExist: boolean = false;\n  isRequestor: boolean = false;\n  isApprover: boolean = false;\n  isTechnician: boolean = false;\n  isSupervisor: boolean = false;\n  @Input() isNew!: boolean;\n  @Input() isView!: boolean;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private service: ToolsService,\n    private requestToolsService: RequestToolsService\n\n  ) {\n    this.reqToolsFormPanel = this.formBuilder.group({\n      toolId: [null, [Validators.required]],\n      reqToolId: [null],\n      hoursRequired: [null, [Validators.required,Validators.min(1)]],\n      dateAssign: [null],\n      timeAssign: [null],\n      requestId: [null],\n      actualHoursStd: [null],\n      actualHoursDouble: [null],\n      actualHoursOvertime: [null],\n      totalHours: [null],\n      addedBy:[null]\n\n    });\n\n    this.subscriptions.push(\n      this.reqToolsFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadTools();\n    if(this.isView) {\n      this.reqToolsFormPanel.disable();\n    }\n  }\n  get value(): any {\n    const requestTools: any = {\n      toolId: this.reqToolsFormPanel.controls.toolId.value,\n      reqToolId: this.reqToolsFormPanel.controls.reqToolId.value,\n      hoursRequired: this.reqToolsFormPanel.controls.hoursRequired.value,\n      requestId: this.reqToolsFormPanel.controls.requestId.value,\n      dateAssign: this.reqToolsFormPanel.controls.dateAssign.value,\n      timeAssign: this.reqToolsFormPanel.controls.timeAssign.value,\n      actualHoursStd: this.reqToolsFormPanel.controls.actualHoursStd.value,\n      actualHoursDouble: this.reqToolsFormPanel.controls.actualHoursDouble.value,\n      actualHoursOvertime: this.reqToolsFormPanel.controls.actualHoursOvertime.value,\n      addedBy: this.reqToolsFormPanel.controls.addedBy.value,\n    };\n    return requestTools;\n  }\n\n  set value(value: any) {\n    setTimeout(() => {\n      this.reqToolsFormPanel.patchValue({\n        toolId: value.toolId,\n        reqToolId: value.reqToolId,\n        hoursRequired: value.hoursRequired,\n        dateAssign: this.formatDate(value.dateAssign),\n        timeAssign: this.convertToTime(value.timeAssign),\n        requestId: value.requestId,\n        actualHoursStd: value.actualHoursStd,\n        actualHoursDouble: value.actualHoursDouble,\n        actualHoursOvertime: value.actualHoursOvertime,\n        totalHours: parseFloat(value.actualHoursStd) + parseFloat(value.actualHoursDouble) + parseFloat(value.actualHoursOvertime),\n        addedBy: value.addedBy,\n\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const validationErros: VaildationError[] = [];\n    return validationErros;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.reqToolsFormPanel.reset();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  validate(_: UntypedFormControl) {\n    return this.reqToolsFormPanel.valid ? null : { reqToolsFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  loadTools() {\n    this.service.getAllTools().subscribe((res: any) => {\n      if (res) {\n        this.toolsData = res;\n      } else {\n        this.toolsData = []\n      }\n    })\n  }\n\n  formatDate(date: Date | null) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n  convertToTime(value: any) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      return currDate;\n    } else {\n      return null;\n    }\n\n  }\n  onChangeHours(event: any) {\n    let actualHoursStd = this.reqToolsFormPanel.controls.actualHoursStd.value;\n    let actualHoursDouble = this.reqToolsFormPanel.controls.actualHoursDouble.value;\n    let actualHoursOvertime = this.reqToolsFormPanel.controls.actualHoursOvertime.value;\n    let totalHours = 0;\n    totalHours = actualHoursStd ? totalHours + parseFloat(actualHoursStd):totalHours;\n    totalHours = actualHoursDouble ? totalHours + parseFloat(actualHoursDouble):totalHours;\n    totalHours = actualHoursOvertime ? totalHours + parseFloat(actualHoursOvertime):totalHours;\n    setTimeout(() => {\n      this.reqToolsFormPanel.patchValue({\n        totalHours: totalHours,\n      });\n    });\n  }\n\n  selectTool(event: any) {\n    if (this.previousTools != event.toolsId) {\n\n      let requestId = this.reqToolsFormPanel.controls.requestId.value;\n      let toolId = event.toolsId;\n      this.requestToolsService.checkToolExist(requestId, toolId).subscribe((res: any) => {\n        this.toolsExist = false;\n        if (res) {\n          this.toolsExist = true;\n        } else {\n          this.toolsExist = false;\n        }\n      })\n    }\n  }\n\n\n\n}\n","<form [formGroup]=\"reqToolsFormPanel\">\n    <table width=\"100%\">\n        <div>\n        <tr>\n            <td> \n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Tool</label>\n                    <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"toolsData\" name=\"toolId\"\n                        formControlName=\"toolId\" [searchable]=\"true\" bindLabel=\"tool\" bindValue=\"toolsId\"\n                        placeholder=\"Make a selection\" class=\"ng-select-dropdown\"style=\"width: 170px;\"(change)=\"selectTool($event)\"\n                        [readonly]=\"!isSupervisor && !isNew\">\n                    </ng-select>\n                </div>\n            </td>\n        \n            <td width=\"130px\">\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Required Hours</label><br>\n                    <input type=\"text\" class=\"form-control\" name=\"hoursRequired\" NumbersOnly TwoDigitDecimalNumber\n                        formControlName=\"hoursRequired\"style=\"width: 150px;\" [readonly]=\"!isSupervisor && !isNew\">\n                 </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label class='form-field-lable' *ngIf=\"toolsExist\" style=\"color:red;\">Tool already exists</label>\n            </td>\n            <td></td>\n        </tr>\n         </div>\n         <div class=\"actual-hours-container\"  [hidden]=\"isNew\">\n            <fieldset class=\"scheduler-border form-field-lable\">\n                <legend class=\"scheduler-border\" >Actual Hours</legend>\n                <tr>\n                    <td>\n                      <div class=\"input-label-custom \"style=\"margin-left: -80px;margin-top: 10px\" >\n                            <label class='form-field-lable'>Standard Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursStd\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"actualHoursStd\" style=\"width: 80%;\"(input)=onChangeHours($event)>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"input-label-custom \" style=\"margin-left: -20px;\"  >\n                            <label class='form-field-lable'> Overtime Hours </label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursOvertime\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"actualHoursOvertime\" style=\"width: 90%;\"(input)=onChangeHours($event)>\n                        </div>\n                    </td>\n                </tr><tr>\n                    <td >\n                        <div class=\"input-label-custom \"  style=\"margin-left: -80px;\">\n                            <label class='form-field-lable'>Double Time Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursDouble\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"actualHoursDouble\"style=\"width: 80%;\"(input)=onChangeHours($event)>\n                        </div>\n                    </td>\n                    <td >\n                        <div class=\"input-label-custom \"   style=\"margin-left: -20px;\">\n                            <label class='form-field-lable'>Total Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"totalHours\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"totalHours\"[readOnly]=\"true\"style=\"width: 90%;\">\n                        </div>\n                    </td>\n                    \n                </tr>\n            </fieldset>\n        </div>\n        <!-- <label class='form-field-lable' [hidden]=\"isNew\">Actual Hours</label><br>\n         <div class=\"actual-hours-container\" [hidden]=\"isNew\">\n        <tr>\n         <td>\n                <div class=\"input-label-custom \" [hidden]=\"isNew\">\n                    <label class='form-field-lable'>Standard Hours</label><br>\n                    <input type=\"text\" class=\"form-control\" name=\"actualHoursStd\" NumbersOnly TwoDigitDecimalNumber\n                        formControlName=\"actualHoursStd\"style=\"width:70%\">\n                </div>\n            </td>\n            <td>\n                <div class=\"input-label-custom \" [hidden]=\"isNew\">\n                    <label class='form-field-lable'> Overtime Hours </label><br>\n                    <input type=\"text\" class=\"form-control\" name=\"actualHoursOvertime\" NumbersOnly TwoDigitDecimalNumber\n                        formControlName=\"actualHoursOvertime\"style=\"width:70%\">\n                </div>\n            </td>\n               \n        </tr>\n        <tr>\n            <td>\n                <div class=\"input-label-custom \" [hidden]=\"isNew\">\n                    <label class='form-field-lable'>Double Time Hours</label><br>\n                    <input type=\"text\" class=\"form-control\" name=\"actualHoursDouble\" NumbersOnly TwoDigitDecimalNumber\n                        formControlName=\"actualHoursDouble\"style=\"width:70%\">\n                </div>\n            </td>\n            <td >\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable'>Total Hours</label><br>\n                    <input type=\"text\" class=\"form-control\" name=\"totalHours\" NumbersOnly TwoDigitDecimalNumber\n                        formControlName=\"totalHours\"style=\"width:70%\">\n                </div>\n            </td>\n        </tr>\n  </div>-->\n    </table>\n</form>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}