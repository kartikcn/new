{"ast":null,"code":"import { UtilConstant } from 'src/common/UtilConstant';\nimport { AddWrProblemTypeComponent } from '../add-wr-problem-type/add-wr-problem-type.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/legacy-card\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/confirmdialog\";\nimport * as i7 from \"../add-wr-problem-type/add-wr-problem-type.component\";\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nexport let AddEditWrProblemTypeComponent = /*#__PURE__*/(() => {\n  class AddEditWrProblemTypeComponent {\n    constructor(dialogRef, confirmationService) {\n      this.dialogRef = dialogRef;\n      this.confirmationService = confirmationService;\n      this.subscriptions = [];\n      this.isDisabled = true;\n    }\n    ngOnInit() {}\n    disabledFun(event) {\n      if (event.data) {\n        this.isDisabled = false;\n      } else {\n        this.isDisabled = true;\n      }\n    }\n    onSavePbType() {\n      this.dialogRef.close(this.addWrProbleType.selectedRecord);\n    }\n    onCancelPbType() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close(false);\n        },\n        key: \"add-pb-type-cancel\"\n      });\n    }\n    static #_ = this.ɵfac = function AddEditWrProblemTypeComponent_Factory(t) {\n      return new (t || AddEditWrProblemTypeComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.ConfirmationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditWrProblemTypeComponent,\n      selectors: [[\"app-add-edit-wr-problem-type\"]],\n      viewQuery: function AddEditWrProblemTypeComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(AddWrProblemTypeComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addWrProbleType = _t.first);\n        }\n      },\n      decls: 11,\n      vars: 4,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [\"id\", \"addProblemTypeCard\"], [3, \"saveBtnDisable\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"key\", \"add-pb-type-cancel\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"]],\n      template: function AddEditWrProblemTypeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Select Problem Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"form\")(4, \"mat-card\")(5, \"mat-card-content\", 2)(6, \"app-add-wr-problem-type\", 3);\n          i0.ɵɵlistener(\"saveBtnDisable\", function AddEditWrProblemTypeComponent_Template_app_add_wr_problem_type_saveBtnDisable_6_listener($event) {\n            return ctx.disabledFun($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(7, \"mat-dialog-actions\", 4)(8, \"p-button\", 5);\n          i0.ɵɵlistener(\"click\", function AddEditWrProblemTypeComponent_Template_p_button_click_8_listener() {\n            return !ctx.isDisabled && ctx.onSavePbType();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p-button\", 6);\n          i0.ɵɵlistener(\"click\", function AddEditWrProblemTypeComponent_Template_p_button_click_9_listener() {\n            return ctx.onCancelPbType();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(10, \"p-confirmDialog\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"disabled\", ctx.isDisabled);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(3, _c0));\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i4.MatLegacyCard, i4.MatLegacyCardContent, i5.Button, i6.ConfirmDialog, i7.AddWrProblemTypeComponent],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;margin-right:15px}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}\"]\n    });\n  }\n  return AddEditWrProblemTypeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}