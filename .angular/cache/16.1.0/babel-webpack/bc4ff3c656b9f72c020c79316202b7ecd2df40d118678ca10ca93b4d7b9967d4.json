{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport class PlanPartService {\n  constructor(planPartService) {\n    this.planPartService = planPartService;\n  }\n  getAllPlanParts(planStepId) {\n    return this.planPartService.getAllById('planPart', 'getByPlanStepId', planStepId);\n  }\n  getPlanPartById(id) {\n    return this.planPartService.getSingleById('planPart', 'getplanPartById', id);\n  }\n  savePlanPart(data) {\n    return this.planPartService.add('planPart', 'save', data);\n  }\n  deletePlanPart(id) {\n    return this.planPartService.getSingleById('planPart', 'deleteplanPartById', id);\n  }\n  checkIsPlanPartExists(planStepId, partId) {\n    return this.planPartService.getAllByIds('planPart', 'checkExist', planStepId, partId);\n  }\n  static #_ = this.ɵfac = function PlanPartService_Factory(t) {\n    return new (t || PlanPartService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlanPartService,\n    factory: PlanPartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PlanPartService","constructor","planPartService","getAllPlanParts","planStepId","getAllById","getPlanPartById","id","getSingleById","savePlanPart","data","add","deletePlanPart","checkIsPlanPartExists","partId","getAllByIds","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\plan-part\\services\\plan-part-services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlanPartService {\n   \n    constructor(\n        private planPartService: DataService<any>,\n    ) { }\n\n    public getAllPlanParts(planStepId:any) {\n        return this.planPartService.getAllById('planPart', 'getByPlanStepId',planStepId);\n    }\n\n    public getPlanPartById(id: any) {\n        return this.planPartService.getSingleById('planPart', 'getplanPartById', id);\n    }\n\n    public savePlanPart(data: any): Observable<any> {\n        return this.planPartService.add('planPart', 'save', data);\n    }\n\n    public deletePlanPart(id: any) {\n        return this.planPartService.getSingleById('planPart', 'deleteplanPartById', id);\n    }\n\n    public checkIsPlanPartExists(planStepId:any,partId:any) {\n        return this.planPartService.getAllByIds('planPart','checkExist',planStepId,partId)\n    }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAExBC,YACYC,eAAiC;IAAjC,KAAAA,eAAe,GAAfA,eAAe;EACvB;EAEGC,eAAeA,CAACC,UAAc;IACjC,OAAO,IAAI,CAACF,eAAe,CAACG,UAAU,CAAC,UAAU,EAAE,iBAAiB,EAACD,UAAU,CAAC;EACpF;EAEOE,eAAeA,CAACC,EAAO;IAC1B,OAAO,IAAI,CAACL,eAAe,CAACM,aAAa,CAAC,UAAU,EAAE,iBAAiB,EAAED,EAAE,CAAC;EAChF;EAEOE,YAAYA,CAACC,IAAS;IACzB,OAAO,IAAI,CAACR,eAAe,CAACS,GAAG,CAAC,UAAU,EAAE,MAAM,EAAED,IAAI,CAAC;EAC7D;EAEOE,cAAcA,CAACL,EAAO;IACzB,OAAO,IAAI,CAACL,eAAe,CAACM,aAAa,CAAC,UAAU,EAAE,oBAAoB,EAAED,EAAE,CAAC;EACnF;EAEOM,qBAAqBA,CAACT,UAAc,EAACU,MAAU;IAClD,OAAO,IAAI,CAACZ,eAAe,CAACa,WAAW,CAAC,UAAU,EAAC,YAAY,EAACX,UAAU,EAACU,MAAM,CAAC;EACtF;EAAC,QAAAE,CAAA,G;qBAxBQhB,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrB,eAAe;IAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}