{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class RmTeamsService {\n  constructor(rmteamsService) {\n    this.rmteamsService = rmteamsService;\n  }\n  getAssignedRooms(data) {\n    return this.rmteamsService.getAllById('roomteam', 'getassignedrooms', data);\n  }\n  getUnAssignedRooms(data) {\n    return this.rmteamsService.getAllById('roomteam', 'getunassignedrooms', data);\n  }\n  getAllRmTeams() {\n    return this.rmteamsService.getAll('roomteam', 'getAll');\n  }\n  saveRmTeam(data) {\n    return this.rmteamsService.add('roomteam', 'save', data);\n  }\n  deleteRmTeam(data) {\n    return this.rmteamsService.add('roomteam', 'delete', data);\n  }\n  getUnAssignedRmTeams(data) {\n    return this.rmteamsService.getAllById('roomteam', 'getunassignedrmteams', data);\n  }\n  updateRmTeam(data) {\n    return this.rmteamsService.add('roomteam', 'update', data);\n  }\n  static #_ = this.ɵfac = function RmTeamsService_Factory(t) {\n    return new (t || RmTeamsService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RmTeamsService,\n    factory: RmTeamsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RmTeamsService","constructor","rmteamsService","getAssignedRooms","data","getAllById","getUnAssignedRooms","getAllRmTeams","getAll","saveRmTeam","add","deleteRmTeam","getUnAssignedRmTeams","updateRmTeam","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\room-teams\\service\\room-teams.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RmTeamsService {\n\n  constructor(\n    private rmteamsService: DataService<any>,\n\n  ) { }\n\n\n  public getAssignedRooms(data: any) {\n    return this.rmteamsService.getAllById('roomteam', 'getassignedrooms', data);\n  }\n\n  public getUnAssignedRooms(data: any) {\n    return this.rmteamsService.getAllById('roomteam', 'getunassignedrooms', data);\n  }\n\n  public getAllRmTeams() {\n    return this.rmteamsService.getAll('roomteam', 'getAll');\n  }\n\n  public saveRmTeam(data: any): Observable<any> {\n    return this.rmteamsService.add('roomteam', 'save', data);\n  }\n\n  public deleteRmTeam(data: any): Observable<any> {\n    return this.rmteamsService.add('roomteam', 'delete', data);\n  }\n\n  public getUnAssignedRmTeams(data: any) {\n    return this.rmteamsService.getAllById('roomteam', 'getunassignedrmteams', data);\n  }\n\n  public updateRmTeam(data: any): Observable<any> {\n    return this.rmteamsService.add('roomteam', 'update', data);\n  }\n\n}"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAEzBC,YACUC,cAAgC;IAAhC,KAAAA,cAAc,GAAdA,cAAc;EAEpB;EAGGC,gBAAgBA,CAACC,IAAS;IAC/B,OAAO,IAAI,CAACF,cAAc,CAACG,UAAU,CAAC,UAAU,EAAE,kBAAkB,EAAED,IAAI,CAAC;EAC7E;EAEOE,kBAAkBA,CAACF,IAAS;IACjC,OAAO,IAAI,CAACF,cAAc,CAACG,UAAU,CAAC,UAAU,EAAE,oBAAoB,EAAED,IAAI,CAAC;EAC/E;EAEOG,aAAaA,CAAA;IAClB,OAAO,IAAI,CAACL,cAAc,CAACM,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC;EACzD;EAEOC,UAAUA,CAACL,IAAS;IACzB,OAAO,IAAI,CAACF,cAAc,CAACQ,GAAG,CAAC,UAAU,EAAE,MAAM,EAAEN,IAAI,CAAC;EAC1D;EAEOO,YAAYA,CAACP,IAAS;IAC3B,OAAO,IAAI,CAACF,cAAc,CAACQ,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAEN,IAAI,CAAC;EAC5D;EAEOQ,oBAAoBA,CAACR,IAAS;IACnC,OAAO,IAAI,CAACF,cAAc,CAACG,UAAU,CAAC,UAAU,EAAE,sBAAsB,EAAED,IAAI,CAAC;EACjF;EAEOS,YAAYA,CAACT,IAAS;IAC3B,OAAO,IAAI,CAACF,cAAc,CAACQ,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAEN,IAAI,CAAC;EAC5D;EAAC,QAAAU,CAAA,G;qBAlCUd,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdnB,cAAc;IAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}