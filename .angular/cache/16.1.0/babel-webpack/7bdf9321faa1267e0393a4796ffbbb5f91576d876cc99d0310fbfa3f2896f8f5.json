{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/ui/app-params/services/app-params.service\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/confirmdialog\";\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nexport let AddEditFinancialYearComponent = /*#__PURE__*/(() => {\n  class AddEditFinancialYearComponent {\n    constructor(data, dialog, dialogRef, formBuilder, confirmationService, appParamsService) {\n      this.data = data;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.formBuilder = formBuilder;\n      this.confirmationService = confirmationService;\n      this.appParamsService = appParamsService;\n      this.fromMonthData = [];\n      this.months = [{\n        id: 0,\n        label: 'Make a selection'\n      }, {\n        id: 1,\n        label: \"January\"\n      }, {\n        id: 2,\n        label: \"February\"\n      }, {\n        id: 3,\n        label: \"March\"\n      }, {\n        id: 4,\n        label: \"April\"\n      }, {\n        id: 5,\n        label: \"May\"\n      }, {\n        id: 6,\n        label: \"June\"\n      }, {\n        id: 7,\n        label: \"July\"\n      }, {\n        id: 8,\n        label: \"August\"\n      }, {\n        id: 9,\n        label: \"September\"\n      }, {\n        id: 10,\n        label: \"October\"\n      }, {\n        id: 11,\n        label: \"November\"\n      }, {\n        id: 12,\n        label: \"December\"\n      }];\n      this.yearFormPanel = this.formBuilder.group({\n        fromMonth: [null, [Validators.required]],\n        toMonth: [null],\n        paramId: [null],\n        compId: [null],\n        description: [null],\n        paramValue: [null],\n        isEditable: [null]\n      });\n    }\n    ngOnInit() {\n      this.fromMonthData = this.months;\n      if (this.data.appParams !== null) {\n        setTimeout(() => {\n          this.yearFormPanel.patchValue({\n            paramId: this.data.appParams.paramId,\n            description: this.data.appParams.description,\n            compId: this.data.appParams.compId,\n            isEditable: this.data.appParams.isEditable\n          });\n        }, 0);\n      }\n    }\n    calculateFinancialYear(startingMonth) {\n      const today = new Date(); // Get the current date\n      const currentYear = today.getFullYear(); // Get the current year\n      // Create a new date object for the start of the financial year\n      const financialYearStart = new Date(currentYear, startingMonth - 1, 1);\n      // Get the start day of the financial year\n      const startDay = financialYearStart.getDate();\n      // Create a new date object for the end of the financial year\n      const financialYearEnd = new Date(currentYear + 1, startingMonth - 1, 0);\n      // Get the end day of the financial year\n      const endDay = financialYearEnd.getDate();\n      const endMonth = financialYearEnd.getMonth() + 1;\n      const SelectedEndMonthLable = this.months.find(month => month.id === endMonth);\n      const endMonthLable = SelectedEndMonthLable.label;\n      // Format the start and end dates as full dates\n      const startDate = financialYearStart.toLocaleDateString();\n      const endDate = financialYearEnd.toLocaleDateString();\n      // Return the start and end dates\n      return {\n        startDay,\n        startDate,\n        endDay,\n        endDate,\n        endMonthLable\n      };\n    }\n    onSelectFromMonth(event) {\n      if (event.id !== 0) {\n        const endYearData = this.calculateFinancialYear(event.id);\n        setTimeout(() => {\n          this.yearFormPanel.patchValue({\n            toMonth: endYearData.endMonthLable,\n            paramValue: this.yearFormPanel.value.fromMonth\n          });\n        }, 0);\n      } else {\n        setTimeout(() => {\n          this.yearFormPanel.patchValue({\n            toMonth: null,\n            fromMonth: null,\n            paramValue: null\n          });\n        }, 0);\n      }\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close(false);\n        },\n        key: \"year\"\n      });\n    }\n    onSave() {\n      if (this.yearFormPanel.valid) {\n        const data = this.yearFormPanel.value;\n        this.appParamsService.saveAppParam(data).subscribe(res => {\n          if (res.status != 202) {\n            this.dialogRef.close(res);\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function AddEditFinancialYearComponent_Factory(t) {\n      return new (t || AddEditFinancialYearComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.AppParamsService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditFinancialYearComponent,\n      selectors: [[\"app-add-edit-financial-year\"]],\n      decls: 22,\n      vars: 11,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [\"id\", \"yearForm\"], [3, \"formGroup\"], [\"width\", \"100%\"], [\"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"fromMonth\", \"bindLabel\", \"label\", \"bindValue\", \"label\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"toMonth\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"readonly\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"key\", \"year\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"]],\n      template: function AddEditFinancialYearComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Edit Financial Year\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"mat-card\")(4, \"mat-card-content\", 2)(5, \"form\", 3)(6, \"table\", 4)(7, \"tr\")(8, \"td\", 5)(9, \"div\", 6)(10, \"label\", 7);\n          i0.ɵɵtext(11, \"From Month\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"ng-select\", 8);\n          i0.ɵɵlistener(\"change\", function AddEditFinancialYearComponent_Template_ng_select_change_12_listener($event) {\n            return ctx.onSelectFromMonth($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"td\", 5)(14, \"div\", 6)(15, \"label\", 7);\n          i0.ɵɵtext(16, \"To Month\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"ng-select\", 9);\n          i0.ɵɵelementEnd()()()()()()()();\n          i0.ɵɵelementStart(18, \"mat-dialog-actions\", 10)(19, \"p-button\", 11);\n          i0.ɵɵlistener(\"click\", function AddEditFinancialYearComponent_Template_p_button_click_19_listener() {\n            return ctx.onSave();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"p-button\", 12);\n          i0.ɵɵlistener(\"click\", function AddEditFinancialYearComponent_Template_p_button_click_20_listener() {\n            return ctx.confirmDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(21, \"p-confirmDialog\", 13);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.yearFormPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.fromMonthData)(\"searchable\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"readonly\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.yearFormPanel.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.NgSelectComponent, i6.MatLegacyCard, i6.MatLegacyCardContent, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i7.Button, i8.ConfirmDialog],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;margin-right:15px}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}.form-field-lable[_ngcontent-%COMP%]{font-size:11px;margin-bottom:0;font-weight:500}.form-control[_ngcontent-%COMP%]{margin-top:-3px;padding-left:5px}[_ngcontent-%COMP%]::placeholder{color:#555;opacity:1}[_ngcontent-%COMP%]:-ms-input-placeholder{color:#555}[_ngcontent-%COMP%]::-ms-input-placeholder{color:#555}.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{border-radius:0!important}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card[_ngcontent-%COMP%]{padding:0}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}\"]\n    });\n  }\n  return AddEditFinancialYearComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}