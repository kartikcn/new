{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/ui/ppm-plan/services/ppm-plan-services\";\nimport * as i3 from \"src/app/ui/Helpdesk/tools/services/tools.services\";\nimport * as i4 from \"../../services/plan-tool-services\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/dialog\";\nimport * as i8 from \"@angular/material/legacy-card\";\nimport * as i9 from \"ng-zorro-antd/table\";\nimport * as i10 from \"@ng-select/ng-select\";\nimport * as i11 from \"../../../../directive/numbers-only.directive\";\nimport * as i12 from \"../../../../directive/directive/two-digit-decimal-number\";\nimport * as i13 from \"../../../Helpdesk/tools/widgets/add-tools/add-tools.component\";\nfunction AddPlanToolComponent_label_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 13);\n    i0.ɵɵtext(1, \"Tool already exists\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"35vw\"\n  };\n};\nfunction AddPlanToolComponent_p_dialog_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 14);\n    i0.ɵɵlistener(\"visibleChange\", function AddPlanToolComponent_p_dialog_27_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.showDetails = $event);\n    });\n    i0.ɵɵelementStart(1, \"form\", 15)(2, \"mat-card\")(3, \"mat-card-content\", 16);\n    i0.ɵɵelement(4, \"app-add-tools\", 17);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c0));\n    i0.ɵɵproperty(\"visible\", ctx_r1.showDetails)(\"modal\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.frmToolsDetail);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"isNew\", true);\n  }\n}\nexport class AddPlanToolComponent {\n  constructor(formBuilder, ppmPlanService, toolsService, planToolsService) {\n    this.formBuilder = formBuilder;\n    this.ppmPlanService = ppmPlanService;\n    this.toolsService = toolsService;\n    this.planToolsService = planToolsService;\n    this.subscriptions = [];\n    this.newRecord = true;\n    this.planStepList = [];\n    this.toolsList = [];\n    this.errorMsg = '';\n    this.toolsExist = false;\n    this.showDetails = false;\n    this.enableDetailsBtn = false;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.planToolFormPanel = this.formBuilder.group({\n      planToolId: [null],\n      planStepId: [null, [Validators.required]],\n      toolId: [null, [Validators.required]],\n      hoursRequired: [null, [Validators.required]]\n    });\n    this.frmToolsDetail = this.formBuilder.group({\n      toolsFormPanel: []\n    });\n    // End Of Building Form\n    this.subscriptions.push(\n    // any time the inner form changes update the parent of any change\n    this.planToolFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadPlansTepsData();\n    this.loadTools();\n  }\n  loadPlansTepsData() {\n    this.ppmPlanService.getAllPlanSteps(0).subscribe(res => {\n      if (res.status != 202) {\n        this.planStepList = res;\n      } else {\n        this.planStepList = [];\n      }\n    });\n  }\n  loadTools() {\n    this.toolsService.getAllTools().subscribe(res => {\n      this.toolsList = res;\n    });\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const me = this;\n    const validationErros = [];\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n  get value() {\n    const stateDetails = {\n      planToolId: this.planToolFormPanel.controls.planToolId.value,\n      planStepId: this.planToolFormPanel.controls.planStepId.value,\n      toolId: this.planToolFormPanel.controls.toolId.value,\n      hoursRequired: this.planToolFormPanel.controls.hoursRequired.value\n    };\n    return stateDetails;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.planToolFormPanel.patchValue({\n        planToolId: value.planToolId,\n        planStepId: value.planStepId,\n        toolId: value.toolId,\n        hoursRequired: value.hoursRequired\n      });\n      if (value.toolId) {\n        this.enableDetailsBtn = true;\n        this.previousTools = value.toolId;\n        var tool = this.getSelectedTool(value.toolId);\n        this.setToolForm(tool);\n      }\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.planToolFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  // communicate the inner form validation to the parent form\n  validate(_) {\n    return this.planToolFormPanel.valid ? null : {\n      planToolFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  selectTool(event) {\n    this.enableDetailsBtn = true;\n    if (this.previousTools != event.toolsId) {\n      let planStepId = this.planToolFormPanel.controls.planStepId.value;\n      let toolId = event.toolsId;\n      this.planToolsService.checkIsPlanToolExists(planStepId, toolId).subscribe(res => {\n        this.toolsExist = false;\n        if (res) {\n          this.toolsExist = true;\n          this.planToolFormPanel.controls['toolId'].setErrors({\n            'incorrect': true\n          });\n          this.planToolFormPanel.updateValueAndValidity();\n        } else {\n          this.toolsExist = false;\n          this.planToolFormPanel.controls['toolId'].setErrors(null);\n          this.planToolFormPanel.updateValueAndValidity();\n        }\n      });\n    }\n  }\n  showPartDetails() {\n    let selectedTool = this.getSelectedTool(this.planToolFormPanel.controls.toolId.value);\n    this.setToolForm(selectedTool);\n    this.showDetails = true;\n  }\n  getSelectedTool(toolId) {\n    let selectedTool = this.toolsList.find(t => t.toolsId === toolId);\n    if (selectedTool) {\n      return selectedTool;\n    }\n  }\n  setToolForm(value) {\n    setTimeout(() => {\n      this.frmToolsDetail.patchValue({\n        toolsFormPanel: value\n      });\n    }, 0);\n  }\n  static #_ = this.ɵfac = function AddPlanToolComponent_Factory(t) {\n    return new (t || AddPlanToolComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PpmPlanService), i0.ɵɵdirectiveInject(i3.ToolsService), i0.ɵɵdirectiveInject(i4.PlanToolService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddPlanToolComponent,\n    selectors: [[\"app-add-plan-tool\"]],\n    inputs: {\n      isNew: \"isNew\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddPlanToolComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddPlanToolComponent),\n      multi: true\n    }])],\n    decls: 28,\n    vars: 10,\n    consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"planStepId\", \"bindLabel\", \"stepCode\", \"bindValue\", \"planStepId\", \"placeholder\", \"Make a selection\", \"readonly\", \"true\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"display\", \"flex\"], [1, \"input-label-custom\", 2, \"width\", \"90%\"], [\"appendTo\", \"body\", \"formControlName\", \"toolId\", \"bindLabel\", \"tool\", \"bindValue\", \"toolsId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"display\", \"flex\", \"margin-top\", \"32px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-info-circle\", \"matTooltip\", \"View Part Details\", 1, \"p-button-rounded\", \"pull-right\", 3, \"disabled\", \"click\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"name\", \"hoursRequired\", \"formControlName\", \"hoursRequired\", 1, \"form-control\"], [\"header\", \"Tool Details\", 3, \"visible\", \"style\", \"modal\", \"visibleChange\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [\"header\", \"Tool Details\", 3, \"visible\", \"modal\", \"visibleChange\"], [1, \"disabled-form\", 3, \"formGroup\"], [\"id\", \"tool\"], [\"formControlName\", \"toolsFormPanel\", 3, \"isNew\"]],\n    template: function AddPlanToolComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\")(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Step\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"ng-select\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"tr\")(9, \"td\")(10, \"div\", 5)(11, \"div\", 6)(12, \"label\", 3);\n        i0.ɵɵtext(13, \"Plan Tool\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ng-select\", 7);\n        i0.ɵɵlistener(\"change\", function AddPlanToolComponent_Template_ng_select_change_14_listener($event) {\n          return ctx.selectTool($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 8)(16, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function AddPlanToolComponent_Template_button_click_16_listener() {\n          return ctx.showPartDetails();\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(17, \"tr\")(18, \"td\");\n        i0.ɵɵtemplate(19, AddPlanToolComponent_label_19_Template, 2, 0, \"label\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"td\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"tr\")(22, \"td\")(23, \"div\", 2)(24, \"label\", 3);\n        i0.ɵɵtext(25, \"Required Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 11);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(27, AddPlanToolComponent_p_dialog_27_Template, 5, 7, \"p-dialog\", 12);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.planToolFormPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.planStepList)(\"searchable\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.toolsList)(\"searchable\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.enableDetailsBtn);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.toolsExist);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.showDetails);\n      }\n    },\n    dependencies: [i5.NgIf, i6.ButtonDirective, i7.Dialog, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.MatLegacyCard, i8.MatLegacyCardContent, i9.NzTableCellDirective, i9.NzTrDirective, i10.NgSelectComponent, i11.NumbersOnlyDirective, i12.TwoDigitDecimalNumberDirective, i13.AddToolsComponent],\n    styles: [\"[_nghost-%COMP%]     .p-button {\\n  height: 20px !important;\\n  width: 20px;\\n}\\n\\n.disabled-form[_ngcontent-%COMP%] {\\n  opacity: 0.8; \\n\\n  pointer-events: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvcGxhbi10b29sL3dpZGdldHMvYWRkLXBsYW4tdG9vbC9hZGQtcGxhbi10b29sLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7RUFDQSxXQUFBO0FBQ0o7O0FBRUU7RUFDRSxZQUFBLEVBQUEsbURBQUE7RUFDQSxvQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5wLWJ1dHRvbiB7XG4gICAgaGVpZ2h0OiAyMHB4ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDIwcHg7XG4gIH1cblxuICAuZGlzYWJsZWQtZm9ybSB7XG4gICAgb3BhY2l0eTogMC44OyAvKiBZb3UgY2FuIGN1c3RvbWl6ZSB0aGUgZGlzYWJsZWQgZm9ybSBzdHlsZSBoZXJlICovXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALUE_ACCESSOR","NG_VALIDATORS","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddPlanToolComponent_p_dialog_27_Template_p_dialog_visibleChange_0_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","showDetails","ɵɵelement","ɵɵstyleMap","ɵɵpureFunction0","_c0","ɵɵproperty","ctx_r1","ɵɵadvance","frmToolsDetail","AddPlanToolComponent","constructor","formBuilder","ppmPlanService","toolsService","planToolsService","subscriptions","newRecord","planStepList","toolsList","errorMsg","toolsExist","enableDetailsBtn","onChange","onTouched","planToolFormPanel","group","planToolId","planStepId","required","toolId","hoursRequired","toolsFormPanel","push","valueChanges","subscribe","value","ngOnInit","loadPlansTepsData","loadTools","getAllPlanSteps","res","status","getAllTools","isValid","getValidationErrors","length","me","validationErros","stateDetails","controls","setTimeout","patchValue","previousTools","tool","getSelectedTool","setToolForm","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","forEach","s","unsubscribe","selectTool","event","toolsId","checkIsPlanToolExists","setErrors","updateValueAndValidity","showPartDetails","selectedTool","find","t","ɵɵdirectiveInject","i1","FormBuilder","i2","PpmPlanService","i3","ToolsService","i4","PlanToolService","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddPlanToolComponent_Template","rf","ctx","AddPlanToolComponent_Template_ng_select_change_14_listener","AddPlanToolComponent_Template_button_click_16_listener","ɵɵtemplate","AddPlanToolComponent_label_19_Template","AddPlanToolComponent_p_dialog_27_Template"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/plan-tool/widgets/add-plan-tool/add-plan-tool.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/plan-tool/widgets/add-plan-tool/add-plan-tool.component.html"],"sourcesContent":["import { Component, Input, OnDestroy, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, ControlValueAccessor, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { ToolsService } from 'src/app/ui/Helpdesk/tools/services/tools.services';\nimport { TradesService } from 'src/app/ui/Helpdesk/trades/services/trades.services';\nimport { PpmPlanService } from 'src/app/ui/ppm-plan/services/ppm-plan-services';\nimport { PlanToolService } from '../../services/plan-tool-services';\n\n@Component({\n  selector: 'app-add-plan-tool',\n  templateUrl: './add-plan-tool.component.html',\n  styleUrls: ['./add-plan-tool.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddPlanToolComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddPlanToolComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AddPlanToolComponent implements ControlValueAccessor, OnDestroy\n{\n  planToolFormPanel: FormGroup;\n  frmToolsDetail!: FormGroup;\n  subscriptions: Subscription[] = [];\n  newRecord: boolean = true;\n  planStepList: any[] = [];\n  toolsList:any[]= [];\n  errorMsg: string = '';\n  previousTools: any;\n  toolsExist: boolean = false;\n  showDetails: boolean = false;\n  enableDetailsBtn:boolean = false;\n\n  @Input() isNew!: boolean;\n  constructor(\n    private formBuilder: FormBuilder,\n    private ppmPlanService:PpmPlanService,\n    private toolsService:ToolsService,\n    private planToolsService: PlanToolService\n  ) {\n    this.planToolFormPanel = this.formBuilder.group({\n      planToolId: [null],\n      planStepId: [null, [Validators.required]],\n      toolId: [null, [Validators.required]],\n      hoursRequired: [null, [Validators.required]],\n    });\n\n    this.frmToolsDetail = this.formBuilder.group({\n      toolsFormPanel: []\n    });\n\n    // End Of Building Form\n    this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.planToolFormPanel.valueChanges.subscribe((value) => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadPlansTepsData();\n    this.loadTools();\n  }\n\n  loadPlansTepsData() {\n    this.ppmPlanService.getAllPlanSteps(0).subscribe((res: any) => {\n      if (res.status != 202) {\n        this.planStepList = res;\n      } else {\n        this.planStepList = [];\n      }\n    });\n  }\n\n  loadTools() {\n    this.toolsService.getAllTools().subscribe((res:any) => {\n      this.toolsList = res;\n    })\n  }\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const me = this;\n    const validationErros: VaildationError[] = [];\n\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n\n  get value(): any {\n    const stateDetails: any = {\n      planToolId: this.planToolFormPanel.controls.planToolId.value,\n      planStepId: this.planToolFormPanel.controls.planStepId.value,\n      toolId: this.planToolFormPanel.controls.toolId.value,\n      hoursRequired: this.planToolFormPanel.controls.hoursRequired.value,\n    };\n    return stateDetails;\n  }\n\n  set value(value: any) {\n    setTimeout(() => {\n      this.planToolFormPanel.patchValue({\n        planToolId: value.planToolId,\n        planStepId: value.planStepId,\n        toolId: value.toolId,\n        hoursRequired: value.hoursRequired,\n      });\n      if(value.toolId) {\n        this.enableDetailsBtn = true;\n        this.previousTools = value.toolId;\n        var tool=this.getSelectedTool(value.toolId);\n        this.setToolForm(tool);\n      }\n      \n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.planToolFormPanel.reset();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  // communicate the inner form validation to the parent form\n  validate(_: FormControl) {\n    return this.planToolFormPanel.valid\n      ? null\n      : { planToolFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n\n  selectTool(event: any) {\n    this.enableDetailsBtn = true;\n    if (this.previousTools != event.toolsId) {\n      let planStepId = this.planToolFormPanel.controls.planStepId.value;\n      let toolId = event.toolsId;\n      this.planToolsService.checkIsPlanToolExists(planStepId, toolId).subscribe((res: any) => {\n        this.toolsExist = false;\n        if (res) {\n          this.toolsExist = true;\n          this.planToolFormPanel.controls['toolId'].setErrors({ 'incorrect': true });\n          this.planToolFormPanel.updateValueAndValidity();\n        } else {\n          this.toolsExist = false;\n          this.planToolFormPanel.controls['toolId'].setErrors(null);\n          this.planToolFormPanel.updateValueAndValidity();\n        }\n      })\n    }\n  }\n\n  showPartDetails() {\n   let selectedTool = this.getSelectedTool(this.planToolFormPanel.controls.toolId.value);\n   this.setToolForm(selectedTool);\n    this.showDetails = true;\n  }\n\n  getSelectedTool(toolId: any) {\n    let selectedTool = this.toolsList.find((t: any) => t.toolsId === toolId);\n    if (selectedTool) {\n      return selectedTool;\n    }\n  }\n\n  setToolForm(value: any) {\n    setTimeout(() => {\n      this.frmToolsDetail.patchValue({\n        toolsFormPanel: value\n      });\n    }, 0);\n  }\n\n}\n\n","<form [formGroup]=\"planToolFormPanel\">\n    <table width=\"100%\">\n        <tr>\n            <td>\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Step</label>\n                    <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"planStepList\" formControlName=\"planStepId\"\n                        [searchable]=\"true\" bindLabel=\"stepCode\" bindValue=\"planStepId\" placeholder=\"Make a selection\"\n                        class=\"ng-select-dropdown\" readonly=\"true\">\n                    </ng-select>\n                </div>\n            </td>\n        </tr>\n\n        <tr>\n            <td>\n                <div style=\"display: flex;\">\n                    <div class=\"input-label-custom \" style=\"width: 90%;\">\n                        <label class='form-field-lable control-label'>Plan Tool</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"toolsList\" formControlName=\"toolId\"\n                            [searchable]=\"true\" bindLabel=\"tool\" bindValue=\"toolsId\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\" (change)=\"selectTool($event)\">\n                        </ng-select>\n                    </div>\n                    <div style=\"display: flex;  margin-top: 32px;\">\n                        <button pButton pRipple icon=\"pi pi-info-circle\" (click)=\" showPartDetails()\"\n                            [disabled]=\"!enableDetailsBtn\" matTooltip=\"View Part Details\"\n                            class=\"p-button-rounded pull-right\"></button>\n                    </div>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label class='form-field-lable' *ngIf=\"toolsExist\" style=\"color:red;\">Tool already exists</label>\n            </td>\n            <td></td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Required Hours</label>\n                    <input type=\"text\" class=\"form-control\" NumbersOnly TwoDigitDecimalNumber name=\"hoursRequired\"\n                        formControlName=\"hoursRequired\">\n                </div>\n            </td>\n        </tr>\n\n    </table>\n</form>\n\n<!-- Part Details Form -->\n<p-dialog header=\"Tool Details\" [(visible)]=\"showDetails\" *ngIf=\"showDetails\" [style]=\"{width: '35vw'}\" [modal]=\"true\">\n    <form [formGroup]=\"frmToolsDetail\" class=\"disabled-form\">\n        <mat-card>\n            <mat-card-content id=\"tool\">\n                <app-add-tools formControlName=\"toolsFormPanel\" [isNew]=\"true\"></app-add-tools>\n            </mat-card-content>\n        </mat-card>\n    </form>\n</p-dialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}