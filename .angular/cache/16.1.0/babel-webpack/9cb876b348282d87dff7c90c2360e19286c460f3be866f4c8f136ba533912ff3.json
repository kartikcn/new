{"ast":null,"code":"import { forkJoin, of } from 'rxjs';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AddUserComponent } from '../add-user-item/add-user-item.component';\nimport { AddEmployeeComponent } from '../add-employee/add-employee.component';\nimport { UtilConstant } from '../../../../../common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"src/app/services/users.service\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"src/app/ui/employee/services/employee.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/legacy-card\";\nimport * as i9 from \"../add-user-item/add-user-item.component\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/confirmdialog\";\nimport * as i12 from \"../add-employee/add-employee.component\";\nimport * as i13 from \"../../../employee/widgets/employee-location/employee-location.component\";\nimport * as i14 from \"../../../employee/widgets/employee-contact/employee-contact.component\";\nfunction AddEditUserComponent_mat_card_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\", 10)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \" User Details Information \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-card-content\", 11);\n    i0.ɵɵelement(5, \"app-add-employee\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"isNew\", ctx_r0.isNew)(\"isEdit\", ctx_r0.isEdit);\n  }\n}\nfunction AddEditUserComponent_mat_card_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\", 10)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \" Employee Location \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-card-content\", 13);\n    i0.ɵɵelement(5, \"app-employee-location\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"isNew\", ctx_r1.isNew)(\"isEdit\", ctx_r1.isEdit);\n  }\n}\nfunction AddEditUserComponent_mat_card_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\", 10)(2, \"mat-card-title\");\n    i0.ɵɵtext(3, \" Employee Contact Information \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"mat-card-content\");\n    i0.ɵɵelement(5, \"app-employee-contact\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"isNew\", ctx_r2.isNew)(\"isEdit\", ctx_r2.isEdit);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nexport let AddEditUserComponent = /*#__PURE__*/(() => {\n  class AddEditUserComponent {\n    constructor(data, formBuilder, dialog, dialogRef, enumsrv, userSrv, confirmationService, empSrv) {\n      this.data = data;\n      this.formBuilder = formBuilder;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.enumsrv = enumsrv;\n      this.userSrv = userSrv;\n      this.confirmationService = confirmationService;\n      this.empSrv = empSrv;\n      this.subscriptions = [];\n      this.isNew = true;\n      this.isEdit = true;\n      this.title = \"\";\n      this.isProfile = false;\n      this.isEmpFormPanelShow = false;\n      this.frmUserDetail = this.formBuilder.group({\n        userFormPanel: [],\n        frmEmployeeDetails: [],\n        frmEmployeeLocation: [],\n        frmEmployeeContact: []\n      });\n    }\n    ngOnInit() {\n      this.isEdit = true;\n      this.isNew = true;\n      if (this.data != null) {\n        this.isEdit = this.data.isEdit;\n        this.loadData();\n        this.isNewRecord();\n        this.title = this.data.title;\n      }\n    }\n    isNewRecord() {\n      if (this.data.newRecord != null) {\n        this.isNew = this.data.newRecord;\n      }\n      if (this.data.isProfile) {\n        this.isProfile = this.data.isProfile;\n      }\n    }\n    loadData() {\n      const calls = [];\n      if (this.data.userId != null && this.data.userId > 0) {\n        calls.push(this.userSrv.getUserById(this.data.userId));\n      } else {\n        calls.push(of(null));\n      }\n      forkJoin(...calls).subscribe(results => {\n        if (results[0] == null) {} else {\n          if (results[0].user.technicianId !== null) {\n            this.userFormPanel.loadUnAssignedTechnician(results[0].user.technicianId);\n          }\n          setTimeout(() => {\n            this.frmUserDetail.patchValue({\n              userFormPanel: results[0].user,\n              frmEmployeeDetails: results[0]?.employee.employeeDetails,\n              frmEmployeeContact: results[0]?.employee.employeeContact,\n              frmEmployeeLocation: results[0]?.employee\n            });\n          }, 0);\n          if (results[0]?.employee != null) {\n            this.isEmpFormPanelShow = true;\n          }\n        }\n      });\n    }\n    saveRecords() {\n      this.userFormPanel.user_name_exists = false;\n      if (this.frmUserDetail.controls.userFormPanel.valid) {\n        let empData = {\n          \"employeeContact\": this.frmUserDetail.controls.frmEmployeeContact.value,\n          \"employeeDetails\": this.frmUserDetail.controls.frmEmployeeDetails.value,\n          \"employeeLocation\": this.frmUserDetail.controls.frmEmployeeLocation.value\n        };\n        const userFormRecord = this.frmUserDetail.controls.userFormPanel.value;\n        if (empData.employeeDetails) {\n          // empData.employeeDetails.compId =  userFormRecord.compId;\n        }\n        const userRecord = {\n          user: userFormRecord,\n          employee: empData,\n          newRecord: this.isNew\n        };\n        this.userSrv.saveUsers(userRecord).subscribe(res => {\n          this.loadData();\n          this.dialogRef.close(true);\n        });\n      }\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close();\n        }\n      });\n    }\n    isEmpChecked(event) {\n      this.isEmpFormPanelShow = event.showEmpPanel;\n      let em_id = event.em_id;\n      this.loadEmployeeData(em_id);\n    }\n    loadEmployeeData(em_id) {\n      const calls = [];\n      if (em_id != null && em_id !== \"0\") {\n        calls.push(this.empSrv.getEmById(em_id));\n      } else {\n        calls.push(of(null));\n      }\n      forkJoin(...calls).subscribe(results => {\n        if (results[0] == null) {\n          var data = {\n            emId: null,\n            initials: null,\n            firstName: null,\n            lastName: null,\n            maidenName: null,\n            aliasName: null,\n            email: null,\n            emStd: null,\n            emStatus: null,\n            idNumber: null,\n            birthDate: null,\n            gender: null,\n            phoneHome: null,\n            phoneWork: null,\n            phonePersonal: null,\n            faxNum: null,\n            altContactName: null,\n            altContactPhone: null,\n            dateJoin: null,\n            dateLeave: null,\n            compId: 1\n          };\n          setTimeout(() => {\n            this.frmUserDetail.patchValue({\n              frmEmployeeDetails: data\n            });\n            this.empFormPanel.isNew = true;\n          }, 0);\n        } else {\n          setTimeout(() => {\n            this.frmUserDetail.patchValue({\n              frmEmployeeDetails: results[0].employeeDetails,\n              frmEmployeeLocation: results[0].employeeLocation\n            });\n            this.empFormPanel.isNew = false;\n          }, 0);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function AddEditUserComponent_Factory(t) {\n      return new (t || AddEditUserComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.EnumService), i0.ɵɵdirectiveInject(i4.UsersService), i0.ɵɵdirectiveInject(i5.ConfirmationService), i0.ɵɵdirectiveInject(i6.EmployeeService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditUserComponent,\n      selectors: [[\"app-user-detail\"]],\n      viewQuery: function AddEditUserComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(AddUserComponent, 5);\n          i0.ɵɵviewQuery(AddEmployeeComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.userFormPanel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.empFormPanel = _t.first);\n        }\n      },\n      decls: 14,\n      vars: 12,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [3, \"formGroup\"], [\"id\", \"CostCentre\"], [\"formControlName\", \"userFormPanel\", 3, \"isNew\", \"isProfile\", \"notifyParent\"], [4, \"ngIf\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"hidden\", \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"mat-dialog-title-ext\"], [\"id\", \"emPanel\"], [\"formControlName\", \"frmEmployeeDetails\", 3, \"isNew\", \"isEdit\"], [\"id\", \"emLocationPanel\"], [\"formControlName\", \"frmEmployeeLocation\", 3, \"isNew\", \"isEdit\"], [\"formControlName\", \"frmEmployeeContact\", 3, \"isNew\", \"isEdit\"]],\n      template: function AddEditUserComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"form\", 2)(4, \"mat-card\")(5, \"mat-card-content\", 3)(6, \"app-add-user-items\", 4);\n          i0.ɵɵlistener(\"notifyParent\", function AddEditUserComponent_Template_app_add_user_items_notifyParent_6_listener($event) {\n            return ctx.isEmpChecked($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(7, AddEditUserComponent_mat_card_7_Template, 6, 2, \"mat-card\", 5);\n          i0.ɵɵtemplate(8, AddEditUserComponent_mat_card_8_Template, 6, 2, \"mat-card\", 5);\n          i0.ɵɵtemplate(9, AddEditUserComponent_mat_card_9_Template, 6, 2, \"mat-card\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"mat-dialog-actions\", 6)(11, \"p-button\", 7);\n          i0.ɵɵlistener(\"click\", function AddEditUserComponent_Template_p_button_click_11_listener() {\n            return ctx.saveRecords();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"p-button\", 8);\n          i0.ɵɵlistener(\"click\", function AddEditUserComponent_Template_p_button_click_12_listener() {\n            return ctx.confirmDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(13, \"p-confirmDialog\", 9);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"\", ctx.title, \" User\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.frmUserDetail);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"isNew\", ctx.isNew)(\"isProfile\", ctx.isProfile);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isEmpFormPanelShow);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isEmpFormPanelShow);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isEmpFormPanelShow);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", ctx.isProfile)(\"disabled\", !ctx.frmUserDetail.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(11, _c0));\n        }\n      },\n      dependencies: [i7.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i8.MatLegacyCard, i8.MatLegacyCardHeader, i8.MatLegacyCardContent, i8.MatLegacyCardTitle, i9.AddUserComponent, i10.Button, i11.ConfirmDialog, i12.AddEmployeeComponent, i13.EmployeeLocationComponent, i14.EmployeeContactComponent],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px;background-color:#fff!important}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;background-color:#fff!important}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0;margin-top:2px}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}\"]\n    });\n  }\n  return AddEditUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}