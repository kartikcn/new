{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MessageService } from 'primeng/api';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/enum.service\";\nimport * as i2 from \"../../services/ppm-plan-services\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/dropdown\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"primeng/panel\";\nimport * as i10 from \"primeng/confirmdialog\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/material/tooltip\";\nimport * as i13 from \"primeng/paginator\";\nfunction PlanListComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function PlanListComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAdd());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PlanListComponent_ng_template_5_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 29);\n    i0.ɵɵlistener(\"onChange\", function PlanListComponent_ng_template_5_ng_template_18_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const filter_r9 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r9($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r8)(\"options\", ctx_r7.enumPlanData)(\"showClear\", true);\n  }\n}\nfunction PlanListComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 14);\n    i0.ɵɵelementStart(2, \"th\", 15)(3, \"div\", 16)(4, \"div\", 17)(5, \"p\", 18);\n    i0.ɵɵtext(6, \"Plan Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 19);\n    i0.ɵɵelement(8, \"p-sortIcon\", 20)(9, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 22)(11, \"div\", 16)(12, \"div\", 17)(13, \"p\", 18);\n    i0.ɵɵtext(14, \"Plan Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 19);\n    i0.ɵɵelement(16, \"p-sortIcon\", 23);\n    i0.ɵɵelementStart(17, \"p-columnFilter\", 24);\n    i0.ɵɵtemplate(18, PlanListComponent_ng_template_5_ng_template_18_Template, 1, 3, \"ng-template\", 25);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(19, \"th\", 26)(20, \"div\", 16)(21, \"div\", 17)(22, \"p\", 18);\n    i0.ɵɵtext(23, \"Plan Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 19);\n    i0.ɵɵelement(25, \"p-sortIcon\", 27)(26, \"p-columnFilter\", 28);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction PlanListComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 30)(1, \"td\", 14)(2, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function PlanListComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const plan_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.openEditItem(plan_r12.planId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function PlanListComponent_ng_template_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const plan_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onDelete(plan_r12));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\", 33);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const plan_r12 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", plan_r12);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(plan_r12.planName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.getEnumByById(plan_r12.planType));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", plan_r12.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", plan_r12.description, \"\");\n  }\n}\nfunction PlanListComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let PlanListComponent = /*#__PURE__*/(() => {\n  class PlanListComponent {\n    constructor(enumsrv, ppmPlanService, messageService, confirmationService, router) {\n      this.enumsrv = enumsrv;\n      this.ppmPlanService = ppmPlanService;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.router = router;\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumPlanData = [];\n      this.planData = [];\n      this.isHide = true;\n      this.loading = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"planId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n      this.parentFun = new EventEmitter();\n    }\n    ngOnInit() {\n      this.loadEnums();\n      this.loadRecords();\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumPlanData = this.enumList.map(x => Object.assign({}, x)).filter(t => t.tableName.toLocaleUpperCase() === 'plans'.toLocaleUpperCase() && t.fieldName.toLowerCase() === 'plan_type'.toLowerCase());\n        this.enumPlanData.unshift(new EnumList(null, \"\", \"\", 'Make a selection', \"\"));\n      }, error => {});\n    }\n    getEnumByById(enumKey) {\n      return enumKey ? this.enumPlanData.find(t => t.enumKey == enumKey) != null ? this.enumPlanData.find(t => t.enumKey == enumKey)?.enumValue : '' : '';\n    }\n    loadRecords() {\n      this.loading = true;\n      //this.planData = [];\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.ppmPlanService.getAllPlansPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFiltered = false;\n          this.planData = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.planData = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    openEditItem(planId) {\n      this.router.navigate(['/plan-details'], {\n        queryParams: {\n          planId: planId\n        },\n        skipLocationChange: true\n      });\n    }\n    onAdd() {\n      this.router.navigate(['/plan-details'], {\n        queryParams: {\n          planId: null\n        },\n        skipLocationChange: true\n      });\n    }\n    onRowSelect(event) {\n      this.parentFun.emit(event.data);\n    }\n    onClearState() {\n      this.parentFun.emit(true);\n    }\n    onDelete(plan) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ' + plan.planName + '?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deletePlan(plan.planId);\n        },\n        key: \"planListGrid\"\n      });\n    }\n    deletePlan(id) {\n      this.ppmPlanService.deletePlan(id).subscribe(res => {\n        if (res.code == 200) {\n          this.messageService.add({\n            key: 'planSave',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadRecords();\n        } else {\n          this.messageService.add({\n            key: 'planDelete',\n            severity: 'error',\n            detail: res.text\n          });\n        }\n      });\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {\n              fieldName: field,\n              value: filterValue,\n              matchMode: matchMode\n            };\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function PlanListComponent_Factory(t) {\n      return new (t || PlanListComponent)(i0.ɵɵdirectiveInject(i1.EnumService), i0.ɵɵdirectiveInject(i2.PpmPlanService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PlanListComponent,\n      selectors: [[\"app-plan-list\"]],\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 13,\n      vars: 10,\n      consts: [[1, \"card\", 2, \"height\", \"90vh\"], [\"header\", \"Plan Details\"], [\"pTemplate\", \"icons\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", 3, \"value\", \"paginator\", \"rowHover\", \"scrollable\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"planSave\", \"position\", \"top-right\"], [\"key\", \"planDelete\", \"position\", \"top-center\"], [\"key\", \"planListGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"planName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"planName\"], [\"type\", \"text\", \"field\", \"planName\", \"display\", \"menu\"], [\"pSortableColumn\", \"planType\"], [\"field\", \"planType\"], [\"field\", \"planType\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Status\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"]],\n      template: function PlanListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, PlanListComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"p-table\", 3, 4);\n          i0.ɵɵlistener(\"onFilter\", function PlanListComponent_Template_p_table_onFilter_3_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(5, PlanListComponent_ng_template_5_Template, 27, 0, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, PlanListComponent_ng_template_6_Template, 10, 5, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, PlanListComponent_ng_template_7_Template, 3, 1, \"ng-template\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 8)(9, \"p-paginator\", 9);\n          i0.ɵɵlistener(\"onPageChange\", function PlanListComponent_Template_p_paginator_onPageChange_9_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelement(10, \"p-toast\", 10)(11, \"p-toast\", 11)(12, \"p-confirmDialog\", 12);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"value\", ctx.planData)(\"paginator\", false)(\"rowHover\", false)(\"scrollable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0));\n        }\n      },\n      dependencies: [i3.PrimeTemplate, i5.Table, i5.SortableColumn, i5.SelectableRow, i5.SortIcon, i5.ColumnFilter, i6.ButtonDirective, i7.Dropdown, i8.Toast, i9.Panel, i10.ConfirmDialog, i11.NgControlStatus, i11.NgModel, i12.MatTooltip, i13.Paginator],\n      styles: [\"[_nghost-%COMP%]     .p-panel .p-panel-content{padding:0}[_nghost-%COMP%]     .p-panel .p-panel-header{padding:.5rem}.ellipsis[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]     .p-datatable-table{table-layout:fixed}\"]\n    });\n  }\n  return PlanListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}