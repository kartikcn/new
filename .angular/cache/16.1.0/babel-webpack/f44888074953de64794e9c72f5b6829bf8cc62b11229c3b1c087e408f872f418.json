{"ast":null,"code":"import { EventEmitter, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/emstd.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/toast\";\nimport * as i6 from \"primeng/panel\";\nimport * as i7 from \"../../../../directive/directive/trim-input.directive\";\nfunction AddEmstdComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AddEmstdComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSaveRecord());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AddEmstdComponent_ng_template_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onCancel());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.emstdFormPanel.valid);\n  }\n}\nexport let AddEmstdComponent = /*#__PURE__*/(() => {\n  class AddEmstdComponent {\n    constructor(emstdSrv, formBuilder, messageService) {\n      this.emstdSrv = emstdSrv;\n      this.formBuilder = formBuilder;\n      this.messageService = messageService;\n      this.subscriptions = [];\n      this.isNew = false;\n      this.role_title = \"Employee Standard\";\n      this.notifyParent = new EventEmitter();\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.emstdFormPanel = this.formBuilder.group({\n        emstdId: [null],\n        emStd: [null, [Validators.required]],\n        emStdDesc: [''],\n        highlightColor: ['#a6a6a6']\n      });\n      // End Of Building Form\n      this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.emstdFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {\n      if (!this.isNew && this.dataRec != null) {\n        this.preLoadData(this.dataRec);\n      }\n    }\n    ngOnChanges(changes) {\n      this.preLoadData(this.dataRec);\n    }\n    preLoadData(rec) {\n      this.writeValue(rec);\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    /// Start Preparing Entered Data Model\n    get value() {\n      const details = {\n        emstdId: this.emstdFormPanel.controls.emstdId.value,\n        emStd: this.emstdFormPanel.controls.emStd.value,\n        emStdDesc: this.emstdFormPanel.controls.emStdDesc.value,\n        highlightColor: this.emstdFormPanel.controls.highlightColor.value\n      };\n      return details;\n    }\n    set value(value) {\n      setTimeout(() => {\n        this.emstdFormPanel.patchValue({\n          emstdId: value.emstdId,\n          emStd: value.emStd,\n          emStdDesc: value.emStdDesc,\n          highlightColor: value.highlightColor ?? '#a6a6a6'\n        });\n        this.onChange(value);\n        this.onTouched();\n      }, 0);\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.emstdFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    onSaveRecord() {\n      this.messageService.clear();\n      if (this.emstdFormPanel.valid) {\n        const record = this.emstdFormPanel.value;\n        this.emstdSrv.saveRecord(record).subscribe(res => {\n          if (res.code == 200) {\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Success',\n              detail: res.text\n            });\n            setTimeout(() => {\n              this.notifyParent.emit(\"save\");\n            }, 1000);\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'error',\n              detail: res.text\n            });\n          }\n        });\n      }\n    }\n    onCancel() {\n      this.notifyParent.emit(\"cancel\");\n    }\n    static #_ = this.ɵfac = function AddEmstdComponent_Factory(t) {\n      return new (t || AddEmstdComponent)(i0.ɵɵdirectiveInject(i1.EmStdService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEmstdComponent,\n      selectors: [[\"app-add-emstd\"]],\n      inputs: {\n        isNew: \"isNew\",\n        dataRec: \"dataRec\",\n        role_title: \"role_title\"\n      },\n      outputs: {\n        notifyParent: \"notifyParent\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddEmstdComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddEmstdComponent),\n        multi: true\n      }, MessageService]), i0.ɵɵNgOnChangesFeature],\n      decls: 25,\n      vars: 2,\n      consts: [[3, \"formGroup\"], [3, \"header\"], [\"pTemplate\", \"icons\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"emStd\", \"formControlName\", \"emStd\", \"maxlength\", \"255\", \"appTrimInput\", \"\", 1, \"form-control\", 3, \"blur\"], [\"colspan\", \"2\", 2, \"width\", \"50%\"], [1, \"form-field-lable\"], [\"rows\", \"2\", \"cols\", \"2\", \"name\", \"emStdDesc\", \"formControlName\", \"emStdDesc\", \"maxlength\", \"255\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"color\", \"name\", \"highlightColor\", \"formControlName\", \"highlightColor\", \"maxlength\", \"32\", 1, \"form-control\", 2, \"width\", \"100px\", \"padding\", \"0.375rem\"], [\"pButton\", \"\", \"label\", \"Save\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"label\", \"Cancel\", 1, \"ml10\", 3, \"click\"]],\n      template: function AddEmstdComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, AddEmstdComponent_ng_template_2_Template, 2, 1, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"table\", 3)(4, \"tr\")(5, \"td\", 4)(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Employee Standard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 7);\n          i0.ɵɵlistener(\"blur\", function AddEmstdComponent_Template_input_blur_9_listener() {\n            return ctx.isNew;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(10, \"td\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"tr\")(12, \"td\", 8)(13, \"div\", 5)(14, \"label\", 9);\n          i0.ɵɵtext(15, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"textarea\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(17, \"td\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"tr\")(19, \"td\", 4)(20, \"div\", 5)(21, \"label\", 6);\n          i0.ɵɵtext(22, \"Highlight Color \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"input\", 11);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelement(24, \"p-toast\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.emstdFormPanel);\n          i0.ɵɵadvance(1);\n          i0.ɵɵpropertyInterpolate(\"header\", ctx.role_title);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i3.PrimeTemplate, i4.ButtonDirective, i5.Toast, i6.Panel, i7.TrimInputDirective],\n      styles: [\"@media screen and (min-width: 600px) and (max-width: 959px){  .p-panel .p-panel-icons-end{width:110px}  .p-button{padding:.3rem .7rem;font-size:10px}}\"]\n    });\n  }\n  return AddEmstdComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}