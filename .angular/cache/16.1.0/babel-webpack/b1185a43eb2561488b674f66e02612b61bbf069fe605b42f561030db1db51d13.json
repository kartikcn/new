{"ast":null,"code":"import { forkJoin, of } from 'rxjs';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from '../../../../../common/UtilConstant';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../../services/employee.service\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"../../../user/widgets/add-employee/add-employee.component\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"../employee-location/employee-location.component\";\nimport * as i11 from \"../employee-contact/employee-contact.component\";\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nexport let AddEditEmployeeComponent = /*#__PURE__*/(() => {\n  class AddEditEmployeeComponent {\n    constructor(data, formBuilder, dialog, dialogRef, empSrv, confirmationService, messageService) {\n      this.data = data;\n      this.formBuilder = formBuilder;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.empSrv = empSrv;\n      this.confirmationService = confirmationService;\n      this.messageService = messageService;\n      this.subscriptions = [];\n      this.isNew = true;\n      this.isEdit = true;\n      this.title = 'Add';\n      this.frmEmpDetail = this.formBuilder.group({\n        frmEmployeeDetails: [],\n        frmEmployeeContact: [],\n        frmEmployeeLocation: []\n      });\n    }\n    ngOnInit() {\n      this.isEdit = true;\n      this.isNew = true;\n      if (this.data != null) {\n        this.isEdit = this.data.isEdit != null ? this.data.isEdit : false;\n        this.loadData();\n        this.isNewRecord();\n      }\n    }\n    isNewRecord() {\n      if (this.data.newRecord != null) {\n        this.isNew = this.data.newRecord;\n        if (this.isEdit && this.isNew) {\n          this.title = 'Add';\n        } else if (this.isEdit && !this.isNew) {\n          this.title = 'Edit';\n        } else {\n          this.title = 'View';\n        }\n      }\n    }\n    loadData() {\n      const calls = [];\n      if (this.data.em_id != 0) {\n        calls.push(this.empSrv.getEmById(this.data.em_id));\n      } else {\n        calls.push(of(null));\n      }\n      forkJoin(...calls).subscribe(results => {\n        if (results[0] == null) {\n          var data = {\n            emId: 0,\n            initials: null,\n            firstName: null,\n            lastName: null,\n            maidenName: null,\n            aliasName: null,\n            email: null,\n            emStd: null,\n            emStatus: null,\n            idNumber: null,\n            birthDate: null,\n            gender: null,\n            dateJoin: null,\n            dateLeave: null,\n            costCentreId: null,\n            emCode: null,\n            em: {\n              blId: null,\n              flId: null,\n              rmId: null,\n              workType: null,\n              divId: null,\n              depId: null,\n              subDepId: null\n            }\n          };\n          var empLocation = {\n            blId: null,\n            flId: null,\n            rmId: null,\n            workType: null,\n            divId: null,\n            depId: null,\n            subDepId: null\n          };\n          var empContact = {\n            // phoneHome: null,\n            phoneWork: null,\n            phonePersonal: null,\n            faxNum: null,\n            altContactName: null,\n            altContactPhone: null\n          };\n          setTimeout(() => {\n            this.frmEmpDetail.patchValue({\n              frmEmployeeDetails: data,\n              frmEmployeeContact: empContact,\n              frmEmployeeLocation: data\n            });\n          }, 0);\n        } else {\n          setTimeout(() => {\n            this.frmEmpDetail.patchValue({\n              frmEmployeeDetails: results[0].employeeDetails,\n              frmEmployeeContact: results[0].employeeContact,\n              frmEmployeeLocation: results[0]\n            });\n          }, 0);\n        }\n      });\n    }\n    saveRecords() {\n      this.messageService.clear();\n      if (this.frmEmpDetail.valid) {\n        const empData = {\n          \"employeeContact\": this.frmEmpDetail.controls.frmEmployeeContact.value,\n          \"employeeDetails\": this.frmEmpDetail.controls.frmEmployeeDetails.value,\n          \"employeeLocation\": this.frmEmpDetail.controls.frmEmployeeLocation.value\n        };\n        this.empSrv.saveEmployee(empData).subscribe(res => {\n          if (res.code == 200) {\n            // this.toastr.success(\"Record saved Successfully.\");\n            this.messageService.add({\n              key: 'save',\n              severity: 'success',\n              summary: 'success',\n              detail: res.text\n            });\n            this.dialogRef.close(true);\n          } else {\n            this.messageService.add({\n              key: 'save',\n              severity: 'error',\n              summary: 'error',\n              detail: res.text\n            });\n          }\n        });\n      }\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close(false);\n        }\n      });\n    }\n    clearForm() {\n      this.frmEmpDetail.controls.frmEmployeeDetails.reset();\n    }\n    getFormAction() {\n      if (this.frmEmpDetail.valid) {\n        return false;\n      } else return true;\n    }\n    static #_ = this.ɵfac = function AddEditEmployeeComponent_Factory(t) {\n      return new (t || AddEditEmployeeComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i4.ConfirmationService), i0.ɵɵdirectiveInject(i4.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditEmployeeComponent,\n      selectors: [[\"app-add-edit-employee\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 27,\n      vars: 12,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [3, \"formGroup\"], [1, \"mat-dialog-title-ext\"], [\"id\", \"emPanel\"], [\"formControlName\", \"frmEmployeeDetails\", 3, \"isNew\", \"isEdit\"], [\"id\", \"emLocationPanel\"], [\"formControlName\", \"frmEmployeeLocation\", 3, \"isNew\", \"isEdit\"], [\"formControlName\", \"frmEmployeeContact\", 3, \"isNew\", \"isEdit\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"pButton\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"key\", \"save\", \"position\", \"top-right\"]],\n      template: function AddEditEmployeeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"form\", 2)(4, \"mat-card\")(5, \"mat-card-header\", 3)(6, \"mat-card-title\");\n          i0.ɵɵtext(7, \" Basic Information \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"mat-card-content\", 4);\n          i0.ɵɵelement(9, \"app-add-employee\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"mat-card\")(11, \"mat-card-header\", 3)(12, \"mat-card-title\");\n          i0.ɵɵtext(13, \" Location \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"mat-card-content\", 6);\n          i0.ɵɵelement(15, \"app-employee-location\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"mat-card\")(17, \"mat-card-header\", 3)(18, \"mat-card-title\");\n          i0.ɵɵtext(19, \" Contact Information \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"mat-card-content\");\n          i0.ɵɵelement(21, \"app-employee-contact\", 8);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(22, \"mat-dialog-actions\", 9)(23, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function AddEditEmployeeComponent_Template_button_click_23_listener() {\n            return ctx.saveRecords();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"p-button\", 11);\n          i0.ɵɵlistener(\"click\", function AddEditEmployeeComponent_Template_p_button_click_24_listener() {\n            return ctx.confirmDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(25, \"p-confirmDialog\", 12)(26, \"p-toast\", 13);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.title, \" Employee Details\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.frmEmpDetail);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"isNew\", ctx.isNew)(\"isEdit\", ctx.isEdit);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"isNew\", ctx.isNew)(\"isEdit\", ctx.isEdit);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"isNew\", ctx.isNew)(\"isEdit\", ctx.isEdit);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.getFormAction());\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(11, _c0));\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.AddEmployeeComponent, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i6.MatLegacyCard, i6.MatLegacyCardHeader, i6.MatLegacyCardContent, i6.MatLegacyCardTitle, i7.ButtonDirective, i7.Button, i8.Toast, i9.ConfirmDialog, i10.EmployeeLocationComponent, i11.EmployeeContactComponent],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px;background-color:#fff!important}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;background-color:#fff!important}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}\"]\n    });\n  }\n  return AddEditEmployeeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}