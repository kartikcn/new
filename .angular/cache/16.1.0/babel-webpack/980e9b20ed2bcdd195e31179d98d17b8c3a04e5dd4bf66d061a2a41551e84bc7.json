{"ast":null,"code":"import { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { MessageService } from 'primeng/api';\nimport { Validators } from '@angular/forms';\nimport html2canvas from 'html2canvas';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"../svg-view/services/svg-view.service\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../booking/services/booking.services\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"primeng/table\";\nimport * as i11 from \"primeng/button\";\nimport * as i12 from \"primeng/toast\";\nimport * as i13 from \"primeng/confirmdialog\";\nimport * as i14 from \"../svg-view/svg-view.component\";\nconst _c0 = [\"content\"];\nfunction HighlightRoomsComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction HighlightRoomsComponent_div_26_ng_template_6_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.selectedSecondParamName);\n  }\n}\nfunction HighlightRoomsComponent_div_26_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, HighlightRoomsComponent_div_26_ng_template_6_th_1_Template, 2, 1, \"th\", 29);\n    i0.ɵɵelementStart(2, \"th\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Area (sq.ft)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showSecondParam);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.selectedParamName);\n  }\n}\nfunction HighlightRoomsComponent_div_26_ng_template_7_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const selectedparam_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(selectedparam_r9.secondparamname);\n  }\n}\nfunction HighlightRoomsComponent_div_26_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, HighlightRoomsComponent_div_26_ng_template_7_td_1_Template, 2, 1, \"td\", 29);\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelement(7, \"div\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const selectedparam_r9 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.showSecondParam);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(selectedparam_r9.paramname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(selectedparam_r9.area.toFixed(2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", selectedparam_r9.highlightColor);\n  }\n}\nfunction HighlightRoomsComponent_div_26_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nfunction HighlightRoomsComponent_div_26_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelement(1, \"app-svg-view\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function () {\n  return [5, 10, 25];\n};\nfunction HighlightRoomsComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 19, 20)(3, \"div\", 21)(4, \"div\", 22)(5, \"p-table\", 23);\n    i0.ɵɵtemplate(6, HighlightRoomsComponent_div_26_ng_template_6_Template, 8, 2, \"ng-template\", 24);\n    i0.ɵɵtemplate(7, HighlightRoomsComponent_div_26_ng_template_7_Template, 8, 5, \"ng-template\", 25);\n    i0.ɵɵtemplate(8, HighlightRoomsComponent_div_26_ng_template_8_Template, 3, 1, \"ng-template\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 27);\n    i0.ɵɵtemplate(10, HighlightRoomsComponent_div_26_div_10_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", ctx_r1.selectedParamData)(\"paginator\", true)(\"rows\", ctx_r1.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(8, _c1))(\"rowHover\", true)(\"scrollable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.viewSvg);\n  }\n}\nfunction HighlightRoomsComponent_ngx_spinner_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 32)(1, \"p\", 33);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport class HighlightRoomsComponent {\n  constructor(blServ, authSrv, svgViewSrv, cdr, spinner, messageService, formBuilder, bookingSrv) {\n    this.blServ = blServ;\n    this.authSrv = authSrv;\n    this.svgViewSrv = svgViewSrv;\n    this.cdr = cdr;\n    this.spinner = spinner;\n    this.messageService = messageService;\n    this.formBuilder = formBuilder;\n    this.bookingSrv = bookingSrv;\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.allBl = [];\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.enumParam = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.viewSvg = false;\n    this.fileString = '';\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.allSVGRoomsData = [];\n    this.selectedParamData = [];\n    this.selectedParamName = '';\n    this.showSecondParam = false;\n    this.selectedSecondParamName = '';\n    this.chartImg = [];\n    this.filterPanel = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]],\n      parameter: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllParameters();\n  }\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe(res => {\n      this.enumBL = res;\n      this.enumBL.unshift({\n        id: '',\n        blNameString: 'Make a selection'\n      });\n    });\n  }\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe(res => {\n      this.enumAllFL = res;\n      this.enumAllFL.unshift({\n        id: '',\n        flNameString: 'Make a selection'\n      });\n      this.enumFL = this.enumAllFL;\n    });\n  }\n  loadAllParameters() {\n    this.enumParam.push({\n      id: '',\n      name: 'Make a selection'\n    });\n    this.enumParam.push({\n      id: 'division',\n      name: 'Division'\n    });\n    this.enumParam.push({\n      id: 'department',\n      name: 'Department'\n    });\n    this.enumParam.push({\n      id: 'rmcat',\n      name: 'Room Category'\n    });\n    this.enumParam.push({\n      id: 'rmtype',\n      name: 'Room Type'\n    });\n  }\n  onSelectBlCode($event) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n    }\n  }\n  loadFloorCode(bl_id) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n      this.enumFL.unshift({\n        id: '',\n        flNameString: 'Make a selection'\n      });\n    }\n  }\n  onSelectFlCode(event) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId\n        });\n      }, 10);\n    } else {\n      this.enumFL.unshift({\n        id: '',\n        flNameString: 'Make a selection'\n      });\n    }\n  }\n  onSearch() {\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    this.selectedParamName = this.getParameterName(this.filterPanel.controls.parameter.value);\n    this.displayNoFloorPlanInfo = false;\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.getAllRoomsOfSvg(blId, flId);\n    let flData = this.enumFL.filter(i => i.blId == blId && i.id == flId);\n    //@ts-ignore\n    if (flData[0].svgName != null) {\n      let data = {\n        id: flId,\n        blId: blId,\n        name: '',\n        compId: this.compId,\n        svgName: '',\n        flInfo: '',\n        units: ''\n      };\n      this.svgViewSrv.getSVGFile(data).subscribe(res => {\n        if (res.code != 409) {\n          setTimeout(() => {\n            this.fileString = res.fileContent;\n            this.viewSvg = true;\n            this.cdr.detectChanges();\n            this.spinner.hide();\n            this.showSpinner = false;\n          }, 0);\n        } else {\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.displayNoFloorPlanInfo = true;\n        }\n      });\n    } else {\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = true;\n    }\n  }\n  getAllRoomsOfSvg(blId, flId) {\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.selectedParamData = [];\n    this.allSVGRoomsData = [];\n    let selectedparam = this.filterPanel.controls.parameter.value;\n    let parameterName = '';\n    let allParamData = [];\n    if (selectedparam.toLowerCase() == 'division') {\n      parameterName = 'division';\n      this.showSecondParam = false;\n    } else if (selectedparam.toLowerCase() == 'department') {\n      parameterName = 'department';\n      this.showSecondParam = true;\n      this.selectedSecondParamName = 'Division';\n    } else if (selectedparam.toLowerCase() == 'rmcat') {\n      parameterName = 'rmcat';\n      this.showSecondParam = false;\n    } else if (selectedparam.toLowerCase() == 'rmtype') {\n      parameterName = 'rmtype';\n      this.showSecondParam = true;\n      this.selectedSecondParamName = 'Room Category';\n    }\n    let data = {\n      id: '',\n      name: '',\n      blId: blId,\n      flId: flId,\n      svgElementId: '',\n      compId: this.compId,\n      parameterName: parameterName\n    };\n    this.blServ.getrmwithparametercolor(data).subscribe(res => {\n      if (res) {\n        this.allSVGRoomsData = res.filter(each => each.svgElementId != null);\n        this.allSVGRoomsData.forEach(rm => {\n          let labeldata = [];\n          if (parameterName == 'division') {\n            labeldata.push(rm.divId);\n          } else if (parameterName == 'department') {\n            labeldata.push(rm.depId);\n            labeldata.push(rm.divId);\n          } else if (parameterName == 'rmcat') {\n            labeldata.push(rm.rmCat);\n          } else if (parameterName == 'rmtype') {\n            labeldata.push(rm.rmType);\n            labeldata.push(rm.rmCat);\n          }\n          labeldata.push(rm.rmId);\n          let idObj = {\n            roomElementId: rm.svgElementId,\n            assetElementId: null\n          };\n          let colorObj = {\n            roomColor: rm.highlightColor,\n            assetColor: null\n          };\n          let contentData = {\n            blId: parseInt(blId),\n            flId: parseInt(flId),\n            rmId: rm.rmId,\n            label: [...labeldata],\n            showLabel: true,\n            highlightRoom: rm.highlightColor != null ? true : false,\n            svgElementId: idObj,\n            color: colorObj,\n            rmCode: '',\n            zoomAtRoom: false\n          };\n          this.svgRoomData.content.push(contentData);\n        });\n        this.svgRoomData.blId = parseInt(blId);\n        this.svgRoomData.flId = parseInt(flId);\n        this.svgRoomData.locate = \"room\";\n        allParamData = this.allSVGRoomsData.map(rm => {\n          let paramname = '';\n          let secondparamname = '';\n          if (parameterName == 'division') {\n            paramname = rm.divId;\n          } else if (parameterName == 'department') {\n            paramname = rm.depId;\n            secondparamname = rm.divId;\n          } else if (parameterName == 'rmcat') {\n            paramname = rm.rmCat;\n          } else if (parameterName == 'rmtype') {\n            paramname = rm.rmType;\n            secondparamname = rm.rmCat;\n          }\n          return {\n            paramname: paramname,\n            highlightColor: rm.highlightColor,\n            area: rm.rmArea,\n            secondparamname: secondparamname\n          };\n        });\n        const paramnameMap = {};\n        for (const obj of allParamData) {\n          const {\n            paramname,\n            area,\n            highlightColor,\n            secondparamname\n          } = obj;\n          if (paramname === null) {\n            continue;\n          }\n          if (!paramnameMap[paramname]) {\n            paramnameMap[paramname] = {\n              paramname,\n              area: area,\n              highlightColor,\n              secondparamname\n            };\n          } else paramnameMap[paramname].area += area;\n        }\n        this.selectedParamData = Object.values(paramnameMap);\n      }\n    });\n  }\n  onClear() {\n    this.viewSvg = false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.allSVGRoomsData = [];\n    this.selectedParamData = [];\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null,\n      parameter: null\n    });\n    this.selectedParamName = '';\n    this.viewSvg = false;\n    this.fileString = '';\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n  }\n  getParameterName(id) {\n    let paramobj = this.enumParam.filter(each => each.id == id);\n    if (paramobj.length > 0) {\n      return paramobj[0].name;\n    } else {\n      return '';\n    }\n  }\n  exportToPdf() {\n    if (this.contentElement) {\n      this.showSpinner = true;\n      this.spinner.show();\n      const divElement = this.contentElement.nativeElement;\n      this.updateSvgBeforePdf();\n      html2canvas(divElement).then(canvas => {\n        const imgData = canvas.toDataURL('image/png');\n        this.chartImg = [];\n        this.chartImg.push(imgData);\n        this.printPDF();\n        this.svgViewComp.loadSvgFile();\n        this.spinner.hide();\n        this.showSpinner = false;\n      });\n    }\n  }\n  printPDF() {\n    this.messageService.clear();\n    let headerstring = this.getSelectedBlandFlHeader();\n    var reportDetails = {\n      chartImg: this.chartImg,\n      title: `Hightlight Rooms by ${this.selectedParamName}`,\n      heading: headerstring\n    };\n    this.bookingSrv.printPdf(reportDetails).subscribe(res => {\n      if (res != null) {\n        this.messageService.add({\n          key: 'highlingroomsmsg',\n          severity: 'success',\n          summary: 'PDF Created',\n          detail: 'PDF created successfully'\n        });\n        var file = new Blob([res], {\n          type: 'application/pdf'\n        });\n        var fileURL = URL.createObjectURL(file);\n        window.open(fileURL);\n      }\n    });\n  }\n  updateSvgBeforePdf() {\n    let assetlayerblocks = [];\n    const divElement = this.contentElement.nativeElement;\n    const blockDefs = this.contentElement.nativeElement.querySelector('#block_defs');\n    const svgElement = document.getElementById('svg-container');\n    const useElements = svgElement.getElementsByTagName('use');\n    const keyValuePairs = {};\n    for (let i = 0; i < useElements.length; i++) {\n      const useElement = useElements[i];\n      let href = useElement.getAttribute('href')?.substring(1);\n      const strokeWidth = useElement.getAttribute('stroke-width');\n      if (href && strokeWidth) {\n        keyValuePairs[href] = strokeWidth;\n      }\n    }\n    if (blockDefs != null) {\n      const childElements = blockDefs.children;\n      for (let i = 0; i < childElements.length; i++) {\n        let blockid = childElements[i].getAttribute(\"id\");\n        childElements[i].setAttribute(\"class\", \"pdf-export\");\n        let swval = keyValuePairs[blockid];\n        if (swval) {\n          childElements[i].setAttribute(\"stroke-width\", swval);\n        }\n      }\n    }\n  }\n  getSelectedBlandFlHeader() {\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    let blstring = '';\n    let flstring = '';\n    let bldata = this.enumBL.filter(i => i.id == blId);\n    let fldata = this.enumFL.filter(i => i.id == flId);\n    if (bldata[0].name != null && bldata[0].name != '') {\n      blstring = `Building: ${bldata[0].id} - ${bldata[0].name}`;\n    } else {\n      blstring = `Building: ${bldata[0].id}`;\n    }\n    if (fldata[0].name != null && fldata[0].name != '') {\n      flstring = ` | Floor: ${fldata[0].id} - ${fldata[0].name}`;\n    } else {\n      flstring = ` | Floor: ${fldata[0].id}`;\n    }\n    return `${blstring}${flstring}`;\n  }\n  static #_ = this.ɵfac = function HighlightRoomsComponent_Factory(t) {\n    return new (t || HighlightRoomsComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.SvgViewService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i4.NgxSpinnerService), i0.ɵɵdirectiveInject(i5.MessageService), i0.ɵɵdirectiveInject(i6.UntypedFormBuilder), i0.ɵɵdirectiveInject(i7.BookingService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HighlightRoomsComponent,\n    selectors: [[\"app-highlight-rooms\"]],\n    viewQuery: function HighlightRoomsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SvgViewComponent, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentElement = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 30,\n    vars: 15,\n    consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"parameter\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"margin\", \"5px 0 0 5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Export\", \"icon\", \"pi pi-file-pdf\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"70px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-fussion\", 3, \"fullScreen\", 4, \"ngIf\"], [\"key\", \"highlingroomsmsg\", \"position\", \"top-center\"], [\"key\", \"highlingroomsgrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"card\", \"no-file-found\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"600px\"], [\"content\", \"\"], [2, \"width\", \"28%\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"95%\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [2, \"width\", \"70%\", \"margin\", \"5px\", \"height\", \"600px\"], [\"style\", \"height:580px;\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"td-class\"], [2, \"height\", \"580px\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-fussion\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function HighlightRoomsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 6);\n        i0.ɵɵlistener(\"change\", function HighlightRoomsComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.onSelectBlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ng-select\", 7);\n        i0.ɵɵlistener(\"change\", function HighlightRoomsComponent_Template_ng_select_change_13_listener($event) {\n          return ctx.onSelectFlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"td\", 3)(15, \"div\", 4)(16, \"label\", 5);\n        i0.ɵɵtext(17, \"Highlight By\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"ng-select\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(19, \"td\", 3);\n        i0.ɵɵelementStart(20, \"td\", 3)(21, \"div\", 9)(22, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function HighlightRoomsComponent_Template_button_click_22_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function HighlightRoomsComponent_Template_button_click_23_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function HighlightRoomsComponent_Template_button_click_24_listener() {\n          return ctx.exportToPdf();\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵtemplate(25, HighlightRoomsComponent_div_25_Template, 3, 0, \"div\", 13);\n        i0.ɵɵtemplate(26, HighlightRoomsComponent_div_26_Template, 11, 9, \"div\", 14);\n        i0.ɵɵtemplate(27, HighlightRoomsComponent_ngx_spinner_27_Template, 3, 1, \"ngx-spinner\", 15);\n        i0.ɵɵelement(28, \"p-toast\", 16)(29, \"p-confirmDialog\", 17);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumParam)(\"searchable\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.viewSvg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayNoFloorPlanInfo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    dependencies: [i8.NgIf, i9.NgSelectComponent, i5.PrimeTemplate, i10.Table, i11.ButtonDirective, i12.Toast, i13.ConfirmDialog, i6.ɵNgNoValidate, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i4.NgxSpinnerComponent, i14.SvgViewComponent],\n    styles: [\".no-file-found[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 500px;\\n}\\n\\n.td-class[_ngcontent-%COMP%] {\\n  background-color: inherit;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 20px;\\n  margin: 10px auto auto auto;\\n  border: 1px solid black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvaGlnaGxpZ2h0LXJvb21zL2hpZ2hsaWdodC1yb29tcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQUNKOztBQUVBO0VBQ0kseUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsMkJBQUE7RUFDQSx1QkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLm5vLWZpbGUtZm91bmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogNTAwcHg7XG59XG5cbi50ZC1jbGFzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbjogMTBweCBhdXRvIGF1dG8gYXV0bztcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["SvgRoomData","SvgViewComponent","MessageService","Validators","html2canvas","UtilConstant","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r8","selectedSecondParamName","ɵɵtemplate","HighlightRoomsComponent_div_26_ng_template_6_th_1_Template","ɵɵproperty","ctx_r4","showSecondParam","selectedParamName","selectedparam_r9","secondparamname","HighlightRoomsComponent_div_26_ng_template_7_td_1_Template","ɵɵelement","ctx_r5","paramname","area","toFixed","ɵɵstyleProp","highlightColor","ɵɵattribute","HighlightRoomsComponent_div_26_ng_template_6_Template","HighlightRoomsComponent_div_26_ng_template_7_Template","HighlightRoomsComponent_div_26_ng_template_8_Template","HighlightRoomsComponent_div_26_div_10_Template","ctx_r1","selectedParamData","rowCount","ɵɵpureFunction0","_c1","viewSvg","HighlightRoomsComponent","constructor","blServ","authSrv","svgViewSrv","cdr","spinner","messageService","formBuilder","bookingSrv","svgRoomData","allBl","enumBL","enumFL","enumAllFL","enumParam","ROW_COUNT","fileString","showSpinner","displayNoFloorPlanInfo","allSVGRoomsData","chartImg","filterPanel","group","blId","required","flId","parameter","ngOnInit","compId","getLoggedInUserCompId","loadAllBuilding","loadAllFloor","loadAllParameters","getALLBuilding","subscribe","res","unshift","id","blNameString","getALLFloor","flNameString","push","name","onSelectBlCode","$event","setTimeout","patchValue","loadFloorCode","bl_id","filter","t","onSelectFlCode","event","onSearch","controls","value","getParameterName","show","getAllRoomsOfSvg","flData","i","svgName","data","flInfo","units","getSVGFile","code","fileContent","detectChanges","hide","selectedparam","parameterName","allParamData","toLowerCase","svgElementId","getrmwithparametercolor","each","forEach","rm","labeldata","divId","depId","rmCat","rmType","rmId","idObj","roomElementId","assetElementId","colorObj","roomColor","assetColor","contentData","parseInt","label","showLabel","highlightRoom","color","rmCode","zoomAtRoom","content","locate","map","rmArea","paramnameMap","obj","Object","values","onClear","paramobj","length","exportToPdf","contentElement","divElement","nativeElement","updateSvgBeforePdf","then","canvas","imgData","toDataURL","printPDF","svgViewComp","loadSvgFile","clear","headerstring","getSelectedBlandFlHeader","reportDetails","title","heading","printPdf","add","key","severity","summary","detail","file","Blob","type","fileURL","URL","createObjectURL","window","open","assetlayerblocks","blockDefs","querySelector","svgElement","document","getElementById","useElements","getElementsByTagName","keyValuePairs","useElement","href","getAttribute","substring","strokeWidth","childElements","children","blockid","setAttribute","swval","blstring","flstring","bldata","fldata","_","ɵɵdirectiveInject","i1","BuildingService","i2","AuthService","i3","SvgViewService","ChangeDetectorRef","i4","NgxSpinnerService","i5","i6","UntypedFormBuilder","i7","BookingService","_2","selectors","viewQuery","HighlightRoomsComponent_Query","rf","ctx","decls","vars","consts","template","HighlightRoomsComponent_Template","ɵɵlistener","HighlightRoomsComponent_Template_ng_select_change_8_listener","HighlightRoomsComponent_Template_ng_select_change_13_listener","HighlightRoomsComponent_Template_button_click_22_listener","HighlightRoomsComponent_Template_button_click_23_listener","HighlightRoomsComponent_Template_button_click_24_listener","HighlightRoomsComponent_div_25_Template","HighlightRoomsComponent_div_26_Template","HighlightRoomsComponent_ngx_spinner_27_Template","valid"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/highlight-rooms/highlight-rooms.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/highlight-rooms/highlight-rooms.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MessageService } from 'primeng/api';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { SvgViewService } from '../svg-view/services/svg-view.service';\nimport { SvgRoomContentData } from 'src/app/model/svgroomcontentdata.model';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport html2canvas from 'html2canvas';\nimport { BookingService } from '../booking/services/booking.services';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { SvgElementIdType } from 'src/app/model/svgelementidtype.model';\nimport { SvgElementColorType } from 'src/app/model/svgelementcolortype.model';\n\n\n@Component({\n  selector: 'app-highlight-rooms',\n  templateUrl: './highlight-rooms.component.html',\n  styleUrls: ['./highlight-rooms.component.scss'],\n  providers: [MessageService]\n})\nexport class HighlightRoomsComponent implements OnInit {\n  filterPanel!: UntypedFormGroup;\n  @ViewChild(SvgViewComponent, { static: false }) svgViewComp!: SvgViewComponent;\n  @ViewChild('content', { static: false }) contentElement!: ElementRef;\n  svgRoomData : SvgRoomData = new SvgRoomData(null,null,\"\",[]);\n  compId!: number;\n  allBl: any[] = [];\n  enumBL: any[] = [];\n  enumFL: any[] = [];\n  enumAllFL: any[] = [];\n  enumParam:any[]=[];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  viewSvg: boolean = false;\n  fileString: string = '';\n  showSpinner: boolean = false;\n  displayNoFloorPlanInfo:boolean = false;\n  allSVGRoomsData:any[]=[];\n  selectedParamData:any[]=[];\n  selectedParamName:string=''\n  showSecondParam:boolean = false;\n  selectedSecondParamName:string='';\n  chartImg: any[] = [];\n  blockDefs: ElementRef | undefined;\n  constructor(\n    private blServ: BuildingService,\n    private authSrv: AuthService,\n    private svgViewSrv: SvgViewService,\n    private cdr: ChangeDetectorRef,\n    private spinner: NgxSpinnerService,\n    private messageService: MessageService,\n    private formBuilder: UntypedFormBuilder,\n    private bookingSrv: BookingService,\n  ) { \n    this.filterPanel = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]],\n      parameter :[null,[Validators.required]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllParameters();\n  }\n\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe((res: any) => {\n      this.enumBL = res;\n      this.enumBL.unshift({id:'',blNameString:'Make a selection'});\n    });\n  }\n\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe((res: any) => {\n      this.enumAllFL = res;\n      this.enumAllFL.unshift({id:'',flNameString:'Make a selection'});\n      this.enumFL = this.enumAllFL;\n    });\n  }\n\n  loadAllParameters(){\n    this.enumParam.push({id:'',name:'Make a selection'});\n    this.enumParam.push({id:'division',name:'Division'});\n    this.enumParam.push({id:'department',name:'Department'});\n    this.enumParam.push({id:'rmcat',name:'Room Category'});\n    this.enumParam.push({id:'rmtype',name:'Room Type'});\n  }\n\n  onSelectBlCode($event: any) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    }\n    else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n    }\n  }\n\n  loadFloorCode(bl_id: any) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id)\n      this.enumFL.unshift({id:'',flNameString:'Make a selection'});\n    }\n  }\n\n  onSelectFlCode(event: any) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n        });\n      }, 10);\n    }\n    else {\n      this.enumFL.unshift({id:'',flNameString:'Make a selection'});\n    }\n  }\n\n  onSearch(){\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    this.selectedParamName = this.getParameterName(this.filterPanel.controls.parameter.value)\n    this.displayNoFloorPlanInfo = false;\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.getAllRoomsOfSvg(blId,flId);\n    let flData = this.enumFL.filter((i: any) => i.blId == blId && i.id == flId);\n    //@ts-ignore\n    if (flData[0].svgName != null) {\n      let data = {\n        id: flId,\n        blId: blId,\n        name: '',\n        compId: this.compId,\n        svgName: '',\n        flInfo: '',\n        units:''\n      }\n      this.svgViewSrv.getSVGFile(data).subscribe((res: any) => {\n        if (res.code != 409) {\n          setTimeout(()=>{\n            this.fileString = res.fileContent;\n            this.viewSvg = true;\n            this.cdr.detectChanges();\n            this.spinner.hide();\n            this.showSpinner = false;\n          },0)\n        }\n        else{\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.displayNoFloorPlanInfo = true;\n        }\n      })\n    } else {\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = true;\n    }\n  }\n\n  getAllRoomsOfSvg(blId:string,flId:string){\n    this.svgRoomData  = new SvgRoomData(null,null,\"\",[]);\n    this.selectedParamData=[];\n    this.allSVGRoomsData=[];\n    let selectedparam = this.filterPanel.controls.parameter.value;\n    let parameterName='';\n    let allParamData=[];\n    if(selectedparam.toLowerCase()=='division'){\n      parameterName='division';\n      this.showSecondParam = false;\n    }\n    else if(selectedparam.toLowerCase()=='department'){\n      parameterName='department';\n      this.showSecondParam = true;\n      this.selectedSecondParamName='Division';\n    }\n    else if(selectedparam.toLowerCase()=='rmcat'){\n      parameterName='rmcat';\n      this.showSecondParam = false;\n    }\n    else if(selectedparam.toLowerCase()=='rmtype'){\n      parameterName='rmtype';\n      this.showSecondParam = true;\n      this.selectedSecondParamName='Room Category';\n    }\n    let data={\n      id:'',\n      name:'',\n      blId:blId,\n      flId:flId,\n      svgElementId:'',\n      compId:this.compId,\n      parameterName:parameterName\n    }\n    this.blServ.getrmwithparametercolor(data).subscribe((res:any)=>{\n      if(res){\n        this.allSVGRoomsData = res.filter( (each:any) => each.svgElementId!=null);\n        this.allSVGRoomsData.forEach((rm:any)=>{\n          let labeldata =[];\n          if(parameterName=='division'){\n            labeldata.push(rm.divId);\n          }else if(parameterName=='department'){\n            labeldata.push(rm.depId);\n            labeldata.push(rm.divId);\n          }else if(parameterName=='rmcat'){\n            labeldata.push(rm.rmCat);\n          }else if(parameterName=='rmtype'){\n            labeldata.push(rm.rmType);\n            labeldata.push(rm.rmCat);\n          }\n          labeldata.push(rm.rmId);\n          let idObj:SvgElementIdType ={\n            roomElementId:rm.svgElementId,\n            assetElementId : null\n          }\n          let colorObj: SvgElementColorType ={\n            roomColor:rm.highlightColor,\n            assetColor: null\n          }\n          let contentData:SvgRoomContentData ={\n            blId:parseInt(blId),\n            flId:parseInt(flId),\n            rmId:rm.rmId,\n            label:[...labeldata],\n            showLabel:true,\n            highlightRoom:rm.highlightColor!=null?true:false,\n            svgElementId : idObj,\n            color:colorObj,\n            rmCode:'',\n            zoomAtRoom:false\n          }\n          this.svgRoomData.content.push(contentData);\n        })\n        this.svgRoomData.blId = parseInt(blId);\n        this.svgRoomData.flId = parseInt(flId);\n        this.svgRoomData.locate = \"room\";\n        allParamData = this.allSVGRoomsData.map((rm:any)=>{\n            let paramname='';\n            let secondparamname='';\n            if(parameterName=='division'){\n              paramname=rm.divId;\n            }else if(parameterName=='department'){\n              paramname=rm.depId;\n              secondparamname= rm.divId;\n            }else if(parameterName=='rmcat'){\n              paramname=rm.rmCat;\n            }else if(parameterName=='rmtype'){\n              paramname=rm.rmType;\n              secondparamname= rm.rmCat;\n            }\n            return {\n              paramname:paramname,\n              highlightColor:rm.highlightColor,\n              area:rm.rmArea,\n              secondparamname:secondparamname\n            }\n          });\n          const paramnameMap: { [paramname: string]: {\n            paramname: string;\n            area: number;\n            highlightColor: string;\n            secondparamname: string;\n          }} = {};   \n          for (const obj of allParamData) {\n            const { paramname, area, highlightColor, secondparamname } = obj;\n            if (paramname === null) {\n              continue;\n            }\n            if (!paramnameMap[paramname]) {\n              paramnameMap[paramname] = {\n                paramname,\n                area: area,\n                highlightColor,\n                secondparamname\n              };\n            }\n            else \n              paramnameMap[paramname].area += area;\n          }\n          this.selectedParamData = Object.values(paramnameMap);\n      }\n    })\n  }\n\n  onClear(){\n    this.viewSvg= false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.svgRoomData  = new SvgRoomData(null,null,\"\",[]);\n    this.allSVGRoomsData=[];\n    this.selectedParamData=[];\n    this.filterPanel.patchValue({\n      blId:null,\n      flId: null,\n      parameter:null\n    });\n    this.selectedParamName='';\n    this.viewSvg = false;\n    this.fileString = '';\n    this.showSpinner= false;\n    this.displayNoFloorPlanInfo = false;\n  }\n\n  getParameterName(id:string){\n    let paramobj = this.enumParam.filter((each:any)=> each.id==id);\n    if(paramobj.length>0){\n      return paramobj[0].name;\n    }else{\n      return '';\n    }\n  }\n\n  exportToPdf(){\n    if (this.contentElement) {\n      this.showSpinner = true;\n      this.spinner.show();\n      const divElement: HTMLElement = this.contentElement.nativeElement;\n      this.updateSvgBeforePdf();\n      html2canvas(divElement).then((canvas: any) => {\n        const imgData = canvas.toDataURL('image/png');\n        this.chartImg = [];\n        this.chartImg.push(imgData);\n        this.printPDF();\n        this.svgViewComp.loadSvgFile();\n        this.spinner.hide();\n        this.showSpinner = false;\n      });\n    }\n  }\n\n  printPDF() {\n    this.messageService.clear();\n    let headerstring = this.getSelectedBlandFlHeader();\n    var reportDetails: any = {\n      chartImg: this.chartImg,\n      title: `Hightlight Rooms by ${this.selectedParamName}`,\n      heading :headerstring\n    }\n    this.bookingSrv.printPdf(reportDetails).subscribe((res: any) => {\n      if (res != null) {\n        this.messageService.add({ key: 'highlingroomsmsg', severity: 'success', summary: 'PDF Created', detail: 'PDF created successfully' });\n        var file = new Blob([res], { type: 'application/pdf' });\n        var fileURL = URL.createObjectURL(file);\n        window.open(fileURL);\n      }\n    })\n  }\n\n  updateSvgBeforePdf(){\n    let assetlayerblocks :string[]=[];\n      const divElement: HTMLElement = this.contentElement.nativeElement;\n      const blockDefs = this.contentElement.nativeElement.querySelector('#block_defs');\n      const svgElement = document.getElementById('svg-container');\n      const useElements = svgElement!.getElementsByTagName('use');\n      const keyValuePairs: { [key: string]: string } = {};\n      for (let i = 0; i < useElements.length; i++) {\n        const useElement = useElements[i];\n        let href = useElement.getAttribute('href')?.substring(1);\n        const strokeWidth = useElement.getAttribute('stroke-width');\n        if (href && strokeWidth) {\n          keyValuePairs[href] = strokeWidth;\n        }\n      }\n      if(blockDefs != null){\n        const childElements = blockDefs.children;\n        for (let i = 0; i < childElements.length; i++) {\n          let blockid = childElements[i].getAttribute(\"id\");\n          childElements[i].setAttribute(\"class\",\"pdf-export\");\n          let swval = keyValuePairs[blockid];\n          if(swval){\n            childElements[i].setAttribute(\"stroke-width\",swval)\n          }\n        }\n      }\n  }\n  \n  getSelectedBlandFlHeader(){\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    let blstring ='';\n    let flstring = '';\n    let bldata = this.enumBL.filter((i: any) =>  i.id == blId );\n    let fldata = this.enumFL.filter((i: any) =>  i.id == flId );\n    if(bldata[0].name != null && bldata[0].name != ''){\n      blstring = `Building: ${bldata[0].id} - ${bldata[0].name}`;\n    }else{\n      blstring = `Building: ${bldata[0].id}`;\n    }\n    if(fldata[0].name != null && fldata[0].name != ''){\n      flstring = ` | Floor: ${fldata[0].id} - ${fldata[0].name}`;\n    }else{\n      flstring = ` | Floor: ${fldata[0].id}`;\n    }\n    return `${blstring}${flstring}`;\n  }\n\n}\n","<div class=\"card\">\n    <form [formGroup]=\"filterPanel\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Building </label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\"\n                            [searchable]=\"true\" bindLabel=\"blNameString\" bindValue=\"id\" (change)=\"onSelectBlCode($event)\"\n                            placeholder=\"Make a selection\" class=\"ng-select-dropdown\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Floor</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\"\n                            [searchable]=\"true\" bindLabel=\"flNameString\" bindValue=\"id\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\" (change)=\"onSelectFlCode($event)\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Highlight By</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumParam\" formControlName=\"parameter\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\">\n                        </ng-select>\n                    </div></td>\n                <td style=\"width: 20%\"></td>\n                <td style=\"width: 20%\">\n                    <div style=\"margin: 5px 0 0 5px \">\n                        <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple label=\"Search\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"exportToPdf()\" pButton pRipple label=\"Export\" [disabled]=\"!viewSvg\"\n                            style=\"width: 70px;  margin-left: 5px;\" icon=\"pi pi-file-pdf\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </form>\n</div>\n<div class=\"card no-file-found\" *ngIf=\"displayNoFloorPlanInfo\">\n    <h1>No Floorplan available</h1>\n</div>\n\n<div class=\"card\" *ngIf=\"viewSvg\">\n    <div style=\"display: flex; justify-content: space-between;height:600px;\" #content>\n        <div style=\"width:28%\">\n            <div style=\"display: flex;flex-direction: column;\">\n                <p-table [value]=\"selectedParamData\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[5,10,25]\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n                [rowHover]=\"true\" [scrollable]=\"true\" scrollDirection=\"both\" \n                scrollHeight=\"95%\" >\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th *ngIf=\"showSecondParam\">{{selectedSecondParamName}}</th>\n                            <th >{{selectedParamName}}</th>\n                            <th>Area (sq.ft)</th>\n                            <th>Highlight Color</th>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-selectedparam>\n                        <tr>\n                            <td *ngIf=\"showSecondParam\">{{selectedparam.secondparamname}}</td>\n                            <td>{{selectedparam.paramname}}</td>\n                            <td>{{selectedparam.area.toFixed(2)}}</td>\n                            <td>\n                                <div [style.background-color]=\"selectedparam.highlightColor\" class=\"td-class\">\n                                </div>\n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-columns>\n                        <tr>\n                            <td [attr.colspan]=\"9\">\n                                No records found\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div> \n        <div style=\"width:70%;margin:5px;height:600px\">\n            <div *ngIf=\"viewSvg\" style=\"height:580px;\">\n                <app-svg-view  ></app-svg-view>\n            </div>\n        </div> \n    </div>\n</div>\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#879cc9\" class=\"spinner-color\" type=\"ball-fussion\"\n    *ngIf=\"showSpinner\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n</ngx-spinner>\n\n<p-toast key=\"highlingroomsmsg\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"highlingroomsgrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}