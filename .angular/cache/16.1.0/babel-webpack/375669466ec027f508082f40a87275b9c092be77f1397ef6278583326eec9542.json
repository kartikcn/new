{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/auth.service\";\nimport * as i5 from \"src/app/ui/link-plan-to-location/services/link-plan-to-location.services\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"../link-new-location-plan-form/link-new-location-plan-form.component\";\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nexport let EditLocationPlanComponent = /*#__PURE__*/(() => {\n  class EditLocationPlanComponent {\n    constructor(data, formBuilder, dialog, dialogRef, confirmationService, messageService, authSrv, linkPlanToLocationOrAssetService) {\n      this.data = data;\n      this.formBuilder = formBuilder;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.confirmationService = confirmationService;\n      this.messageService = messageService;\n      this.authSrv = authSrv;\n      this.linkPlanToLocationOrAssetService = linkPlanToLocationOrAssetService;\n      this.isNew = true;\n      this.title = 'Link';\n      this.formLinkPlanLocation = this.formBuilder.group({\n        linkPlanLocationFormPanel: []\n      });\n    }\n    ngOnInit() {\n      this.isNew = true;\n      if (this.data != null) {\n        this.loadData();\n        this.isNewRecord();\n      }\n    }\n    isNewRecord() {\n      if (this.data.newRecord != null) {\n        this.isNew = this.data.newRecord;\n        if (!this.isNew) this.title = 'Edit';\n      }\n    }\n    loadData() {\n      if (this.data.planLocEqData === null) {\n        var rmData = {\n          planLocEqId: 0,\n          planId: this.data.planId,\n          blId: this.data.bl_id,\n          flId: this.data.fl_id,\n          rmId: null\n        };\n        setTimeout(() => {\n          this.formLinkPlanLocation.patchValue({\n            linkPlanLocationFormPanel: rmData\n          });\n        }, 0);\n      } else {\n        setTimeout(() => {\n          this.formLinkPlanLocation.patchValue({\n            linkPlanLocationFormPanel: this.data.planLocEqData\n          });\n        }, 0);\n      }\n    }\n    saveRecords() {\n      if (this.formLinkPlanLocation.valid) {\n        let planLocEqData = this.formLinkPlanLocation.controls.linkPlanLocationFormPanel.value;\n        planLocEqData.compId = this.authSrv.getLoggedInUserCompId();\n        if (this.data.planLocEqData && this.data.planLocEqData.blId == planLocEqData.blId && this.data.planLocEqData.flId == planLocEqData.flId && this.data.planLocEqData.rmId == planLocEqData.rmId && this.data.planLocEqData.compId == planLocEqData.compId) {\n          this.dialogRef.close(true);\n        } else {\n          this.checkExist(planLocEqData);\n        }\n      }\n    }\n    checkExist(planLocEqData) {\n      this.messageService.clear();\n      this.linkPlanToLocationOrAssetService.checkExists(planLocEqData).subscribe(res => {\n        if (!res) {\n          let selectedPlansList = [];\n          selectedPlansList.push(planLocEqData);\n          this.linkPlanToLocationOrAssetService.save(selectedPlansList).subscribe(res => {\n            if (res.code === 200) {\n              this.dialogRef.close(true);\n            }\n          });\n        } else {\n          this.messageService.add({\n            key: 'isExists',\n            severity: 'warn',\n            summary: 'Plan Already Linked',\n            detail: 'Plan already linked to the selected location'\n          });\n        }\n      });\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close(false);\n        },\n        key: 'planListGrid'\n      });\n    }\n    static #_ = this.ɵfac = function EditLocationPlanComponent_Factory(t) {\n      return new (t || EditLocationPlanComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.LinkPlanToLocationOrAssetService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditLocationPlanComponent,\n      selectors: [[\"app-edit-location-plan\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 12,\n      vars: 9,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [3, \"formGroup\"], [\"id\", \"rmFrm\"], [\"formControlName\", \"linkPlanLocationFormPanel\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"key\", \"isExists\", \"position\", \"top-center\"], [\"key\", \"planListGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"]],\n      template: function EditLocationPlanComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"form\", 2)(4, \"mat-card\")(5, \"mat-card-content\", 3);\n          i0.ɵɵelement(6, \"app-link-new-location-plan-form\", 4);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(7, \"mat-dialog-actions\", 5)(8, \"p-button\", 6);\n          i0.ɵɵlistener(\"click\", function EditLocationPlanComponent_Template_p_button_click_8_listener() {\n            return ctx.saveRecords();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p-button\", 7);\n          i0.ɵɵlistener(\"click\", function EditLocationPlanComponent_Template_p_button_click_9_listener() {\n            return ctx.confirmDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(10, \"p-toast\", 8)(11, \"p-confirmDialog\", 9);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"\", ctx.title, \" Location \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.formLinkPlanLocation);\n          i0.ɵɵadvance(5);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c0));\n          i0.ɵɵproperty(\"disabled\", !ctx.formLinkPlanLocation.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(8, _c0));\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i6.MatLegacyCard, i6.MatLegacyCardContent, i7.Button, i8.Toast, i9.ConfirmDialog, i10.LinkNewLocationPlanFormComponent],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px;background-color:#fff!important}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;background-color:#fff!important}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}\"]\n    });\n  }\n  return EditLocationPlanComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}