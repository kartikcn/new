{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../services/tokenStorage.service\";\nimport * as i5 from \"../services/shared.service\";\nimport * as i6 from \"../services/users.service\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../directive/directive/upper-case.directive\";\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loginFailedMsg, \" \");\n  }\n}\nfunction LoginComponent_form_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 26);\n    i0.ɵɵtext(1, \" \\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(2, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_23_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.backLogin());\n    });\n    i0.ɵɵtext(3, \"\\u00A0\\u00A0\\u00A0\\u2190 GO BACK\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 28);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementStart(6, \"div\", 29);\n    i0.ɵɵelement(7, \"input\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 17)(9, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_23_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onReset());\n    });\n    i0.ɵɵtext(10, \"RESET PASSWORD\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 32);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 33);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.resetForm);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.resetForm.valid && ctx_r1.isEmailSent);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.resetErrorMsg);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.resetMsg);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    // Declare private variables\n    constructor(fb, authService, router, tokenStorage, ss, userSrv, spinner) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.tokenStorage = tokenStorage;\n      this.ss = ss;\n      this.userSrv = userSrv;\n      this.spinner = spinner;\n      this.submitted = false;\n      this.returnUrl = \"\";\n      this.error = {\n        errorTitle: '',\n        errorDesc: ''\n      };\n      this.loginError = \"\";\n      this.isLoggedIn = false;\n      this.isLoginFailed = false;\n      this.title = 'appBootstrap';\n      this.isPasswordResetChecked = false;\n      this.resetMsg = \"\";\n      this.resetErrorMsg = \"\";\n      this.isEmailSent = false;\n      this.closeResult = '';\n      this.loginFailedMsg = \"\";\n      // Initialization of Reactive Form elements\n      this.loginForm = this.fb.group({\n        username: ['', [Validators.required, Validators.min(18)]],\n        password: ['', Validators.required]\n      });\n      this.resetForm = this.fb.group({\n        userEmail: ['', [Validators.required, Validators.email]]\n      });\n    }\n    ngOnInit() {\n      setTimeout(() => {\n        this.ss.change(this.authService.isLoggedIn());\n      });\n      $(document).ready(function () {\n        $('#sidebarCollapse').on('click', function () {\n          //  $('#sidebar').toggleClass('active');\n        });\n      });\n      if (this.tokenStorage.getToken()) {\n        this.isLoggedIn = true;\n        $(\"#parent_body\").removeClass(\"login_img\");\n        const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/index';\n        this.router.navigate([redirect]);\n      } else {\n        $(\"#parent_body\").addClass(\"login_img\");\n        this.router.navigate(['/login']);\n      }\n    }\n    onSidebarClicked() {\n      $('#sidebar').toggleClass('active');\n    }\n    onClickLink() {}\n    // getting user name and password\n    get username() {\n      return this.loginForm.get('username');\n    }\n    get password() {\n      return this.loginForm.get('password');\n    }\n    onSubmit() {\n      // login service\n      this.spinner.show();\n      this.authService.login(this.username?.value, this.password?.value).subscribe(data => {\n        this.spinner.hide();\n        $(\"#parent_body\").removeClass(\"login_img\");\n        this.tokenStorage.saveToken(data.token);\n        this.tokenStorage.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.router.navigate(['/welcome']);\n      }, error => {\n        this.spinner.hide();\n        this.isLoginFailed = true;\n        this.loginFailedMsg = '';\n        if (error.status == 405) {\n          this.loginFailedMsg = \"Current User is blocked. Please contact Adminstrator\";\n        } else {\n          this.loginFailedMsg = \"User name and password you entered don't match our records.\";\n        }\n      });\n    }\n    passwordShow() {\n      $('.textRed ,.textRed1').hide();\n      $('#loginTenant').slideUp();\n      $('#passwordReset').slideDown(\"slow\");\n      this.isPasswordResetChecked = true;\n    }\n    backLogin() {\n      $('.form-group').css('margin-top', '15px');\n      $('.textRed ,.textRed1,.textGreen').hide();\n      $('#passwordReset').slideUp();\n      $('#loginTenant').slideDown(\"slow\");\n      this.isPasswordResetChecked = false;\n    }\n    showPwd() {\n      var $pwd = $(\"#pass\");\n      if ($pwd.attr('type') === 'password') {\n        $pwd.attr('type', 'text');\n      } else {\n        $pwd.attr('type', 'password');\n      }\n    }\n    onReset() {\n      this.resetErrorMsg = this.resetMsg = \"\";\n      if (this.resetForm.valid) {\n        var userPwdDto = {\n          \"userEmail\": this.resetForm.controls[\"userEmail\"].value,\n          \"url\": window.origin + \"/password-reset\"\n        };\n        this.spinner.show();\n        this.userSrv.resetUserCrendentials(userPwdDto).subscribe(res => {\n          if (res != null && res.code == \"200\") {\n            this.resetMsg = res.text;\n            this.resetErrorMsg = \"\";\n            this.isEmailSent = true;\n          } else if (res.status == 405) {\n            this.resetErrorMsg = res.text;\n            this.resetMsg = \"\";\n            this.isEmailSent = false;\n          } else {\n            this.resetErrorMsg = res.text;\n            this.resetMsg = \"\";\n            this.isEmailSent = false;\n          }\n          this.spinner.hide();\n        }, error => {\n          this.resetErrorMsg = \"Email not sent. Please contact support\";\n          this.resetMsg = \"\";\n          this.isEmailSent = false;\n          this.spinner.hide();\n        });\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.TokenStorageService), i0.ɵɵdirectiveInject(i5.SharedService), i0.ɵɵdirectiveInject(i6.UsersService), i0.ɵɵdirectiveInject(i7.NgxSpinnerService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 27,\n      vars: 4,\n      consts: [[1, \"container\"], [\"id\", \"loginbox\", 1, \"mainbox\", \"col-md-6\", \"col-md-offset-3\", \"col-sm-8\", \"col-sm-offset-2\", \"logInBoxDiv\"], [1, \"panel\", \"panel-info\", 2, \"background-color\", \"white !important\"], [\"href\", \"#\", \"target\", \"_blank\"], [\"src\", \"assets/images/fms_logo_dark_uncollapsed.png\", \"width\", \"250px\", \"height\", \"100px\", \"alt\", \"FMS\", 1, \"companyLogo\"], [1, \"panel-body\", 2, \"padding-top\", \"15px\", \"margin\", \"10%\"], [\"id\", \"login-alert\", 1, \"alert\", \"alert-danger\", \"col-sm-12\", 2, \"display\", \"none\"], [\"id\", \"loginTenant\", 3, \"formGroup\"], [1, \"input-group\", \"mBottom\", \"mBottom\"], [\"type\", \"email\", \"formControlName\", \"username\", \"uppercase\", \"\", \"autofocus\", \"\", \"placeholder\", \"User Name\", \"id\", \"email\", \"required\", \"\", \"maxlength\", \"64\", 1, \"form-control\"], [1, \"input-group\", \"mBottom\"], [\"type\", \"password\", \"formControlName\", \"password\", \"autofocus\", \"\", \"id\", \"pass\", \"placeholder\", \"Password\", \"required\", \"\", \"maxlength\", \"64\", 1, \"form-control\"], [1, \"input-group-btn\", 2, \"margin-top\", \"-2px\", \"float\", \"left\", \"outline\", \"0.01em solid #dee2e6\", \"margin-left\", \"0.5px\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"reveal\", 3, \"click\"], [1, \"fa\", \"fa-eye\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [1, \"form-group\", 2, \"margin-top\", \"10px\"], [1, \"col-sm-12\", \"controls\"], [\"id\", \"login_btn\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"form-group\"], [1, \"textRed\"], [1, \"col-md-12\", \"control\"], [\"id\", \"passwordReset\", \"class\", \"form-horizontal\", \"role\", \"form\", \"style\", \"text-decoration: none !important;\", 3, \"formGroup\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"type\", \"square-jelly-box\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"], [2, \"color\", \"red\"], [\"id\", \"passwordReset\", \"role\", \"form\", 1, \"form-horizontal\", 2, \"text-decoration\", \"none !important\", 3, \"formGroup\"], [1, \"btn\", \"bLogin\", 2, \"margin-left\", \"15px !important\", \"margin-right\", \"0px !important\", 3, \"click\"], [1, \"bLoginDiv\"], [1, \"input-group\", \"input-groupSub\"], [\"id\", \"Ema\", \"type\", \"text\", \"formControlName\", \"userEmail\", \"name\", \"email\", \"value\", \"\", \"placeholder\", \"Email\", \"maxlength\", \"64\", 1, \"form-control\", \"input_box\"], [\"id\", \"resetBtn\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"textRed1\"], [1, \"textGreen\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"a\", 3);\n          i0.ɵɵelement(4, \"img\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5);\n          i0.ɵɵelement(6, \"div\", 6);\n          i0.ɵɵelementStart(7, \"form\", 7)(8, \"div\", 8);\n          i0.ɵɵelement(9, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 10);\n          i0.ɵɵelement(11, \"input\", 11);\n          i0.ɵɵelementStart(12, \"span\", 12)(13, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n            return ctx.showPwd();\n          });\n          i0.ɵɵelement(14, \"em\", 14);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 15);\n          i0.ɵɵelementStart(16, \"div\", 16)(17, \"div\", 17)(18, \"button\", 18);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_18_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtext(19, \"LOGIN\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(20, \"div\", 19);\n          i0.ɵɵelement(21, \"div\", 20)(22, \"div\", 21);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(23, LoginComponent_form_23_Template, 15, 4, \"form\", 22);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"ngx-spinner\", 23)(25, \"p\", 24);\n          i0.ɵɵtext(26, \" Loading... \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoginFailed);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.isPasswordResetChecked);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"fullScreen\", true);\n        }\n      },\n      dependencies: [i8.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i7.NgxSpinnerComponent, i9.UppercaseDirective],\n      styles: [\".panel-info[_ngcontent-%COMP%]{border:0px}a[_ngcontent-%COMP%]:visited{color:#fff}#passwordReset[_ngcontent-%COMP%]{font-size:85%}.panel[_ngcontent-%COMP%]{border-radius:5px;width:350px!important}.textRed[_ngcontent-%COMP%], .textRed1[_ngcontent-%COMP%]{color:#fa6767;font-size:85%;text-align:center;font-family:Raleway,sans-serif;padding-top:10px!important}.textRed1[_ngcontent-%COMP%]{font-size:small}.textGreen[_ngcontent-%COMP%]{padding-top:20px!important;color:#5bbf8b;font-size:small;text-align:center;font-family:Raleway,sans-serif}.input_box[_ngcontent-%COMP%]{width:250px!important}.logInBoxDiv[_ngcontent-%COMP%]{margin-top:10%;width:500px;margin-left:33%}.companyLogo[_ngcontent-%COMP%]{margin-left:48px;margin-top:20px}.mBottom[_ngcontent-%COMP%]{margin-bottom:25px}#login_btn[_ngcontent-%COMP%]{width:250px;padding:7px;margin-left:15px;color:#fff;background:#00a9c4;border-color:#00a9c4;font-size:medium}#login_btn[_ngcontent-%COMP%]:HOVER, #resetBtn[_ngcontent-%COMP%]:HOVER{background-color:#02adc9}#resetBtn[_ngcontent-%COMP%]:HOVER, #passwordReset[_ngcontent-%COMP%]:HOVER{text-decoration:underline}.hTrouble[_ngcontent-%COMP%]{border-top:1px solid #e0e0e0;padding-top:15px;font-size:85%;padding-left:26%}.reset[_ngcontent-%COMP%]{color:#00a9c4!important;margin-left:-47px!important;font-size:100%}.bLogin[_ngcontent-%COMP%]{color:#00a9c4;cursor:pointer;float:left;margin-right:15px;font-weight:600}.bLoginDiv[_ngcontent-%COMP%]{border-top:1px solid #e0e0e0;padding-top:15px;font-size:85%;padding-left:1%;margin:12px}#resetBtn[_ngcontent-%COMP%]{width:250px;padding:7px;margin-left:30px;color:#fff;background:#00a9c4;border-color:#00a9c4;font-size:medium}.input-groupSub[_ngcontent-%COMP%]{margin-bottom:25px}.form-group[_ngcontent-%COMP%]{margin-bottom:0!important}.reveal[_ngcontent-%COMP%]{color:#00a9c4!important}.reveal[_ngcontent-%COMP%]:HOVER{color:#00a9c4!important}.spinner-color[_ngcontent-%COMP%]{color:#879cc9}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}