{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../services/eq-std.services\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ng-zorro-antd/table\";\nimport * as i6 from \"ng-zorro-antd/input\";\nimport * as i7 from \"../../../../../../directive/directive/trim-input.directive\";\nfunction AddEqStdFormComponent_tr_8_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 10);\n    i0.ɵɵtext(1, \"Asset Standard already exists \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEqStdFormComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 2);\n    i0.ɵɵtemplate(2, AddEqStdFormComponent_tr_8_label_2_Template, 2, 0, \"label\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r0.eqStdFormPanel.controls[\"eqStd\"] == null ? null : ctx_r0.eqStdFormPanel.controls[\"eqStd\"].errors.required));\n  }\n}\nexport class AddEqStdFormComponent {\n  constructor(authSrv, formBuilder, eqStdService) {\n    this.authSrv = authSrv;\n    this.formBuilder = formBuilder;\n    this.eqStdService = eqStdService;\n    this.subscriptions = [];\n    this.presentEqStandard = '';\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.eqStdFormPanel = this.formBuilder.group({\n      eqStd: ['', [Validators.required]],\n      eqStdId: [null],\n      description: ['']\n    });\n    this.subscriptions.push(this.eqStdFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {}\n  get value() {\n    const eqStdDetails = {\n      eqStd: this.eqStdFormPanel.controls.eqStd.value,\n      description: this.eqStdFormPanel.controls.description.value,\n      eqStdId: this.eqStdFormPanel.controls.eqStdId.value\n    };\n    return eqStdDetails;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.eqStdFormPanel.patchValue({\n        eqStd: value.eqStd,\n        description: value.description,\n        eqStdId: value.eqStdId\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.eqStdFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate(_) {\n    return this.eqStdFormPanel.valid ? null : {\n      eqStdFormPanel: {\n        valid: false\n      }\n    };\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const me = this;\n    const validationErros = [];\n    return validationErros;\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  static #_ = this.ɵfac = function AddEqStdFormComponent_Factory(t) {\n    return new (t || AddEqStdFormComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.EqStdService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEqStdFormComponent,\n    selectors: [[\"app-add-eq-std-form\"]],\n    inputs: {\n      isNew: \"isNew\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddEqStdFormComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddEqStdFormComponent),\n      multi: true\n    }])],\n    decls: 16,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"25%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"eqStd\", \"formControlName\", \"eqStd\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"form-field-lable\"], [\"name\", \"description\", \"formControlName\", \"description\", \"rows\", \"2\", \"nz-input\", \"\", \"maxlength\", \"256\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"]],\n    template: function AddEqStdFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Asset Standard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(8, AddEqStdFormComponent_tr_8_Template, 3, 1, \"tr\", 6);\n        i0.ɵɵelement(9, \"tr\");\n        i0.ɵɵelementStart(10, \"tr\")(11, \"td\")(12, \"div\", 3)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"textarea\", 8);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.eqStdFormPanel);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", (ctx.eqStdFormPanel.controls[\"eqStd\"] == null ? null : ctx.eqStdFormPanel.controls[\"eqStd\"].errors) && ctx.eqStdFormPanel.controls[\"eqStd\"].dirty);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i5.NzTableCellDirective, i5.NzTrDirective, i6.NzInputDirective, i7.TrimInputDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALIDATORS","NG_VALUE_ACCESSOR","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddEqStdFormComponent_tr_8_label_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","eqStdFormPanel","controls","errors","required","AddEqStdFormComponent","constructor","authSrv","formBuilder","eqStdService","subscriptions","presentEqStandard","onChange","onTouched","group","eqStd","eqStdId","description","push","valueChanges","subscribe","value","ngOnInit","eqStdDetails","setTimeout","patchValue","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","isValid","getValidationErrors","length","me","validationErros","ngOnDestroy","forEach","s","unsubscribe","ɵɵdirectiveInject","i1","AuthService","i2","UntypedFormBuilder","i3","EqStdService","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddEqStdFormComponent_Template","rf","ctx","ɵɵelement","AddEqStdFormComponent_tr_8_Template","dirty"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\eq-std\\widgets\\add-eq-std\\add-eq-std-form\\add-eq-std-form.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\eq-std\\widgets\\add-eq-std\\add-eq-std-form\\add-eq-std-form.component.html"],"sourcesContent":["import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { EqStdService } from '../../../services/eq-std.services';\n\n@Component({\n  selector: 'app-add-eq-std-form',\n  templateUrl: './add-eq-std-form.component.html',\n  styleUrls: ['./add-eq-std-form.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddEqStdFormComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddEqStdFormComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddEqStdFormComponent implements OnInit {\n  eqStdFormPanel: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  presentEqStandard:string  = '';\n  @Input() isNew!:boolean;\n  constructor(\n    private authSrv: AuthService,\n    private formBuilder: UntypedFormBuilder,\n    private eqStdService: EqStdService\n  ) {\n    this.eqStdFormPanel = this.formBuilder.group({\n      eqStd: ['',[Validators.required]],\n      eqStdId: [null],\n      description: [''],\n    });\n    this.subscriptions.push(\n      this.eqStdFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n   }\n\n  ngOnInit(): void {\n  }\n\n  get value(): any {\n    const eqStdDetails: any = {\n      eqStd: this.eqStdFormPanel.controls.eqStd.value,\n      description: this.eqStdFormPanel.controls.description.value,\n      eqStdId: this.eqStdFormPanel.controls.eqStdId.value,\n    };\n    return eqStdDetails;\n  }\n\n  set value(value: any) {\n    setTimeout(() => {\n      this.eqStdFormPanel.patchValue({\n        eqStd: value.eqStd,\n        description: value.description,\n        eqStdId: value.eqStdId,\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  writeValue(value: any) {\n\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.eqStdFormPanel.reset();\n    }\n  }\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  validate(_: UntypedFormControl) {\n    return this.eqStdFormPanel.valid ? null : { eqStdFormPanel: { valid: false } };\n  }\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  public getValidationErrors() {\n    const me = this;\n    const validationErros: VaildationError[] = [];\n    return validationErros;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n","<form [formGroup]=\"eqStdFormPanel\">\n  <table width=\"100%\">\n    <tr>\n      <td style=\"width: 25%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>Asset Standard</label>\n          <input type=\"text\" class=\"form-control\" name=\"eqStd\" formControlName=\"eqStd\" maxlength=\"64\" appTrimInput>\n        </div>\n      </td>\n    </tr>\n    <tr *ngIf=\"(eqStdFormPanel.controls['eqStd']?.errors && eqStdFormPanel.controls['eqStd'].dirty)\">\n      <td style=\"width:25%\">\n        <label *ngIf=\"!eqStdFormPanel.controls['eqStd']?.errors.required\" class='form-field-lable'\n          style=\"color:red;\">Asset Standard already exists </label>\n      </td>\n    <tr>\n    <tr>\n      <td>\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable'>Description</label>\n          <textarea class=\"form-control note-border\" name=\"description\" formControlName=\"description\" rows=\"2\" nz-input\n            maxlength=\"256\" appTrimInput></textarea>\n        </div>\n      </td>\n    </tr>\n  </table>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}