{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../work-request/service/add-work-request.services\";\nimport * as i5 from \"src/app/ui/employee/services/employee.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"src/app/services/enum.service\";\nimport * as i8 from \"src/app/services/breakpoint.service\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"primeng/api\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/calendar\";\nimport * as i13 from \"primeng/button\";\nimport * as i14 from \"primeng/panel\";\nimport * as i15 from \"primeng/checkbox\";\nfunction SlaEscalationAnalysisComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 21)(1, \"tr\")(2, \"td\", 22)(3, \"div\", 23)(4, \"div\", 24)(5, \"div\", 25)(6, \"label\", 26);\n    i0.ɵɵtext(7, \"From Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 27);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 22)(10, \"div\", 23)(11, \"div\", 24)(12, \"div\", 25)(13, \"label\", 26);\n    i0.ɵɵtext(14, \"To Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 28);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 29)(17, \"div\", 23)(18, \"label\", 26);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 30);\n    i0.ɵɵlistener(\"change\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.scrollToEndBl());\n    })(\"search\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.searchBl($event));\n    })(\"open\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"td\", 29)(22, \"div\", 23)(23, \"label\", 26);\n    i0.ɵɵtext(24, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ng-select\", 31);\n    i0.ɵɵlistener(\"change\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_change_25_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_scrollToEnd_25_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.scrollToEndFl());\n    })(\"search\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_search_25_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.searchFl($event));\n    })(\"open\", function SlaEscalationAnalysisComponent_table_3_Template_ng_select_open_25_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"td\", 29)(27, \"div\", 23)(28, \"label\", 26);\n    i0.ɵɵtext(29, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"ng-select\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"td\", 33)(32, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_table_3_Template_button_click_32_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_table_3_Template_button_click_33_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onClear());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.filterPanel.valid);\n  }\n}\nfunction SlaEscalationAnalysisComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\")(1, \"tr\")(2, \"td\", 36)(3, \"div\", 23)(4, \"div\", 24)(5, \"div\", 25)(6, \"label\", 26);\n    i0.ɵɵtext(7, \"From Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p-calendar\", 27);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(9, \"td\", 36)(10, \"div\", 23)(11, \"div\", 24)(12, \"div\", 25)(13, \"label\", 26);\n    i0.ɵɵtext(14, \"To Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"p-calendar\", 28);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(16, \"td\", 36)(17, \"div\", 23)(18, \"label\", 26);\n    i0.ɵɵtext(19, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ng-select\", 30);\n    i0.ɵɵlistener(\"change\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_change_20_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onSelectBlCode($event));\n    })(\"scrollToEnd\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_scrollToEnd_20_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.scrollToEndBl());\n    })(\"search\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_search_20_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.searchBl($event));\n    })(\"open\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_open_20_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onOpenBl());\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"tr\")(22, \"td\", 36)(23, \"div\", 23)(24, \"label\", 26);\n    i0.ɵɵtext(25, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"ng-select\", 31);\n    i0.ɵɵlistener(\"change\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_change_26_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_scrollToEnd_26_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.scrollToEndFl());\n    })(\"search\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_search_26_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.searchFl($event));\n    })(\"open\", function SlaEscalationAnalysisComponent_table_4_Template_ng_select_open_26_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.onOpenFl());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"td\", 36)(28, \"div\", 23)(29, \"label\", 26);\n    i0.ɵɵtext(30, \"Requests Type \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"ng-select\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"td\", 36)(33, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_table_4_Template_button_click_33_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_table_4_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.onClear());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r1.showRequestsTypeList)(\"searchable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.filterPanel.valid);\n  }\n}\nfunction SlaEscalationAnalysisComponent_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 37);\n    i0.ɵɵelementStart(2, \"th\", 38)(3, \"div\", 39)(4, \"div\", 40)(5, \"p\", 41);\n    i0.ɵɵtext(6, \"Request Id \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 42);\n    i0.ɵɵelement(8, \"p-sortIcon\", 43);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 44)(10, \"div\", 39)(11, \"div\", 40)(12, \"p\", 41);\n    i0.ɵɵtext(13, \"Requested For \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 42);\n    i0.ɵɵelement(15, \"p-sortIcon\", 45);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"th\", 46)(17, \"div\", 39)(18, \"div\", 40)(19, \"p\", 41);\n    i0.ɵɵtext(20, \"Asset \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 42);\n    i0.ɵɵelement(22, \"p-sortIcon\", 47)(23, \"p-columnFilter\", 48);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"th\", 49)(25, \"div\", 39)(26, \"div\", 40)(27, \"p\", 41);\n    i0.ɵɵtext(28, \"Requested Date \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 42);\n    i0.ɵɵelement(30, \"p-sortIcon\", 50);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(31, \"th\", 51)(32, \"div\", 39)(33, \"div\", 40)(34, \"p\", 41);\n    i0.ɵɵtext(35, \"Date To Respond\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"div\", 42);\n    i0.ɵɵelement(37, \"p-sortIcon\", 52);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(38, \"th\", 53)(39, \"div\", 39)(40, \"div\", 40)(41, \"p\", 41);\n    i0.ɵɵtext(42, \"Date Responded\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"div\", 42);\n    i0.ɵɵelement(44, \"p-sortIcon\", 54);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(45, \"th\", 55)(46, \"div\", 39)(47, \"div\", 40)(48, \"p\", 41);\n    i0.ɵɵtext(49, \"Date To Complete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(50, \"div\", 42);\n    i0.ɵɵelement(51, \"p-sortIcon\", 56);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(52, \"th\", 57)(53, \"div\", 39)(54, \"div\", 40)(55, \"p\", 41);\n    i0.ɵɵtext(56, \"Date Completed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(57, \"div\", 42);\n    i0.ɵɵelement(58, \"p-sortIcon\", 58);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction SlaEscalationAnalysisComponent_ng_template_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 59)(1, \"td\", 37)(2, \"button\", 60);\n    i0.ɵɵlistener(\"click\", function SlaEscalationAnalysisComponent_ng_template_32_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r30);\n      const wr_r28 = restoredCtx.$implicit;\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onClickView(wr_r28));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const wr_r28 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background\", ctx_r4.getColorCode(wr_r28));\n    i0.ɵɵproperty(\"pSelectableRow\", wr_r28);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background\", \"#ffffff\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(wr_r28.wrId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.getEmployeeFullName(wr_r28.requestedFor));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r28.eqCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 17, wr_r28.dateRequested, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(14, 20, wr_r28.escDateResponded, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r28.escTimeResponded), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(17, 23, wr_r28.dateResponded, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r28.timeResponded), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(20, 26, wr_r28.escDateCompleted, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r28.escTimeCompleted), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(23, 29, wr_r28.dateCompleted, \"dd MMM yyyy\"), \" \", ctx_r4.convertToDisplayTime(wr_r28.timeCompleted), \"\");\n  }\n}\nfunction SlaEscalationAnalysisComponent_ng_template_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let SlaEscalationAnalysisComponent = /*#__PURE__*/(() => {\n  class SlaEscalationAnalysisComponent {\n    constructor(blService, formBuilder, datePipe, wrServ, employeeService, router, enumsrv, bps) {\n      this.blService = blService;\n      this.formBuilder = formBuilder;\n      this.datePipe = datePipe;\n      this.wrServ = wrServ;\n      this.employeeService = employeeService;\n      this.router = router;\n      this.enumsrv = enumsrv;\n      this.bps = bps;\n      this.enumBL = [];\n      this.enumAllBl = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.rm_data = [];\n      this.compId = 1;\n      this.allRequestList = [];\n      this.allEmployees = [];\n      this.enumEm = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.totalRecords = 0;\n      this.esctdResponseData = [];\n      this.esctdCompleteData = [];\n      this.esctdCompleteAndResponseData = [];\n      this.selectedData = [];\n      this.responseCheckbox = true;\n      this.completeCheckbox = true;\n      this.completeResponseCheckbox = true;\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumWr = [];\n      this.enumStatus = [];\n      this.showRequestsTypeList = [{\n        label: \"Preventive Maintenance\",\n        value: \"ppm\"\n      }, {\n        label: \"Facilities Helpdesk\",\n        value: \"facilities\"\n      }, {\n        label: \"All\",\n        value: \"all\"\n      }];\n      this.showType = \"facilities\";\n      this.useTabletProtrait = false;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"\"],\n        sortOrder: \"ASC\"\n      };\n      this.pagfilterCriteria = {};\n      this.isFiltered = false;\n      this.selectionFilterData = {};\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.filterPanel = this.formBuilder.group({\n        siteId: [null],\n        blId: [null],\n        flId: [null],\n        dateRequestedFrom: [null],\n        dateRequestedTo: [null],\n        showType: [this.showType]\n      });\n    }\n    ngOnInit() {\n      this.bps.register(this);\n      this.selectedData = [];\n      var date = new Date();\n      var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n      var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n      this.loadEnums();\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          dateRequestedFrom: firstDay,\n          dateRequestedTo: lastDay,\n          showType: this.showType\n        });\n        this.onSearch();\n      });\n      this.loadAllEmployee();\n    }\n    notify() {\n      this.useTabletProtrait = BreakpointService.useTabletProtrait;\n    }\n    onSearch() {\n      const filterData = {\n        dateRequestedFrom: this.datePipe.transform(this.filterPanel.controls.dateRequestedFrom.value, \"yyyy-MM-dd\"),\n        dateRequestedTo: this.datePipe.transform(this.filterPanel.controls.dateRequestedTo.value, \"yyyy-MM-dd\"),\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        showRequestType: this.filterPanel.controls.showType.value\n      };\n      this.selectionFilterData = {\n        ...filterData\n      };\n      this.loadRecords(filterData);\n    }\n    loadRecords(filterData) {\n      this.allRequestList = [];\n      this.esctdResponseData = [];\n      this.esctdCompleteData = [];\n      this.esctdCompleteAndResponseData = [];\n      this.isFiltered = false;\n      this.selectedData = [];\n      this.isFiltered = false;\n      // this.responseCheckbox = true;\n      // this.completeResponseCheckbox = true;\n      // this.completeCheckbox = true;\n      let data = {\n        ...filterData\n        // ,filterDto: { paginationDTO: this.paginationObj, filterCriteria: this.pagfilterCriteria } \n      };\n\n      this.wrServ.getAllWrByFilter(data).subscribe(res => {\n        this.isFiltered = false;\n        this.allRequestList = [];\n        // let content = res.content ? res.content : [];\n        // this.totalElements = res.totalElements ? res.totalElements : 0;\n        this.allRequestList = res.map(each => {\n          return {\n            ...each,\n            formatedDateRequested: this.datePipe.transform(each.dateRequested, 'dd MMM yyyy'),\n            fromatedDateToRespond: each.escDateResponded ? this.datePipe.transform(each.escDateResponded, 'dd MMM yyyy') + \" \" + this.convertToDisplayTime(each.escTimeResponded) : '',\n            formatedDateResponded: each.dateResponded ? this.datePipe.transform(each.dateResponded, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeResponded) : '',\n            formatedDateToComplete: each.escDateCompleted ? this.datePipe.transform(each.escDateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.escTimeCompleted) : '',\n            formatedDateCompleted: each.dateCompleted ? this.datePipe.transform(each.dateCompleted, 'dd MMM yyyy') + ' ' + this.convertToDisplayTime(each.timeCompleted) : '',\n            formatedRequestedFor: this.getEmployeeFullName(each.requestedFor)\n          };\n        });\n        this.esctdResponseData = [];\n        this.esctdCompleteData = [];\n        this.esctdCompleteAndResponseData = [];\n        let currentDate = new Date();\n        this.allRequestList.forEach(item => {\n          const {\n            dateResponded,\n            escDateResponded,\n            dateCompleted,\n            escDateCompleted,\n            timeResponded,\n            timeCompleted,\n            escTimeResponded,\n            escTimeCompleted,\n            status\n          } = item;\n          const isEscalatedForResponse = dateResponded && new Date(dateResponded + 'T' + timeResponded) > new Date(escDateResponded + 'T' + escTimeResponded) || !dateResponded && currentDate > new Date(escDateResponded + 'T' + escTimeResponded);\n          const isEscalatedForComplete = dateCompleted && new Date(dateCompleted + 'T' + timeCompleted) > new Date(escDateCompleted + 'T' + escTimeCompleted) || !dateCompleted && currentDate > new Date(escDateCompleted + 'T' + escTimeCompleted);\n          const statusEnum = this.getEnumById(status);\n          if (isEscalatedForResponse && !isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n            this.esctdResponseData.push(item);\n          }\n          if (isEscalatedForComplete && !isEscalatedForResponse && statusEnum !== \"Cancelled\" && statusEnum !== \"Rejected\") {\n            this.esctdCompleteData.push(item);\n          }\n          if (isEscalatedForResponse && isEscalatedForComplete && statusEnum !== \"Cancelled\") {\n            this.esctdCompleteAndResponseData.push(item);\n          }\n        });\n        this.selectedData = [];\n        this.isFiltered = false;\n        this.esctdResponseData.length > 0 && this.responseCheckbox ? this.selectedData = this.selectedData.concat(this.esctdResponseData) : [];\n        this.isFiltered = false;\n        this.esctdCompleteData.length > 0 && this.completeCheckbox ? this.selectedData = this.selectedData.concat(this.esctdCompleteData) : [];\n        this.isFiltered = false;\n        this.esctdCompleteAndResponseData.length > 0 && this.completeResponseCheckbox ? this.selectedData = this.selectedData.concat(this.esctdCompleteAndResponseData) : [];\n      });\n    }\n    loadAllEmployee() {\n      this.employeeService.getAllEmployeeList().subscribe(res => {\n        if (res) {\n          this.allEmployees = res;\n        } else {\n          this.allEmployees = [];\n        }\n      });\n    }\n    onSelectBlCode($event) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n      }, 0);\n      if ($event.blId != null && $event.blId != '') {\n        this.selectedBl = $event;\n        this.selectedFl = {};\n      } else {\n        this.selectedBl = {};\n        this.selectedFl = {};\n      }\n    }\n    onSelectFlCode($event) {\n      if ($event.flId != null && $event.flId != '') {\n        this.selectedFl = $event;\n        const blData = {\n          blId: $event.blId,\n          blNameString: $event.blNameString,\n          site: null\n        };\n        this.selectedFl = blData;\n        this.updateBlList(blData);\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: $event.blId\n          });\n        }, 10);\n      }\n    }\n    onClear() {\n      this.filterPanel.reset();\n      this.selectedBl = {};\n      this.selectedFl = {};\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          showType: this.showType\n        });\n      }, 10);\n    }\n    getColorCode(data) {\n      var currentDate = new Date();\n      const {\n        dateResponded,\n        escDateResponded,\n        dateCompleted,\n        escDateCompleted,\n        timeResponded,\n        timeCompleted,\n        escTimeResponded,\n        escTimeCompleted\n      } = data;\n      const isEscalatedForResponse = dateResponded && new Date(dateResponded + 'T' + timeResponded).getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime() || !dateResponded && currentDate.getTime() > new Date(escDateResponded + 'T' + escTimeResponded).getTime();\n      const isEscalatedForComplete = dateCompleted && new Date(dateCompleted + 'T' + timeCompleted).getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime() || !dateCompleted && currentDate.getTime() > new Date(escDateCompleted + 'T' + escTimeCompleted).getTime();\n      if (isEscalatedForResponse && !isEscalatedForComplete) {\n        return '#fbae5c';\n      }\n      if (isEscalatedForComplete && !isEscalatedForResponse) {\n        return '#E77471';\n      }\n      if (isEscalatedForResponse && isEscalatedForComplete) {\n        return '#F75D59';\n      }\n      return null;\n    }\n    getEmployeeFullName(id) {\n      if (this.allEmployees) {\n        this.enumEm = this.allEmployees.filter(em => em.emId === id);\n        this.fullName = this.enumEm.map(em => {\n          if (em.firstName.length > 0 && em.lastName.length > 0) {\n            return em.firstName + \" \" + em.lastName + ' - ' + em.emId;\n          } else {\n            return em.firstName + ' - ' + em.emId;\n          }\n        });\n      }\n      return this.fullName;\n    }\n    onClickView(data) {\n      const wrId = data.wrId;\n      const status = data.status;\n      const url = this.router.serializeUrl(this.router.createUrlTree([\"/work-request-details\"], {\n        queryParams: {\n          requestId: wrId,\n          index: 0,\n          action: \"details\",\n          status: status,\n          viewDetails: true,\n          isNavigationFromReport: true\n        }\n      }));\n      window.open(url, '_blank');\n    }\n    updateSelectedData() {\n      // Clear the previously selected data\n      this.selectedData = [];\n      this.isFiltered = false;\n      // Check if the response checkbox is selected\n      if (this.responseCheckbox) {\n        this.selectedData = this.selectedData.concat(this.esctdResponseData);\n      }\n      // Check if the complete checkbox is selected\n      if (this.completeCheckbox) {\n        this.selectedData = this.selectedData.concat(this.esctdCompleteData);\n      }\n      // Check if the completeResponse checkbox is selected\n      if (this.completeResponseCheckbox) {\n        this.selectedData = this.selectedData.concat(this.esctdCompleteAndResponseData);\n      }\n      // if(!this.responseCheckbox && !this.completeCheckbox && !this.completeResponseCheckbox) {\n      //   this.selectedData = this.allRequestList;\n      // }\n    }\n\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n      });\n    }\n    getEnumById(id) {\n      return this.enumStatus.find(t => t.id === id)?.enumValue;\n    }\n    ngOnDestroy() {\n      this.bps.unregister(this);\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords(this.selectionFilterData);\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        this.pagfilterCriteria = {};\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined && filterValue !== null && filterValue !== '') {\n            if (field == \"wrId\") {\n              this.pagfilterCriteria = {\n                fieldName: \"wr_id\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"eqCode\") {\n              this.pagfilterCriteria = {\n                fieldName: \"eq_code\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              this.pagfilterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords(this.selectionFilterData);\n      }\n      this.isFiltered = true;\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blService.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blService.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.updateFlList(this.selectedFl);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      if (flData.flId) {\n        this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n        this.enumFL = this.enumFL.filter(t => t.flId !== null);\n        this.enumFL.unshift(flData);\n      }\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    static #_ = this.ɵfac = function SlaEscalationAnalysisComponent_Factory(t) {\n      return new (t || SlaEscalationAnalysisComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.AddWorkRequestService), i0.ɵɵdirectiveInject(i5.EmployeeService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.EnumService), i0.ɵɵdirectiveInject(i8.BreakpointService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SlaEscalationAnalysisComponent,\n      selectors: [[\"app-sla-escalation-analysis\"]],\n      inputs: {\n        showType: \"showType\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 34,\n      vars: 16,\n      consts: [[1, \"card\", 2, \"height\", \"90vh\"], [\"header\", \"SLA Escalation Analysis\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"checkbox-grid\", 2, \"flex\", \"auto\", \"margin-top\", \"10px\"], [1, \"checkbox-table\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"margin-left\", \"15px\"], [2, \"width\", \"50px\", \"height\", \"15px\", \"background-color\", \"#fbae5c\"], [1, \"escalation-type-title\"], [\"name\", \"responseCheckbox\", \"id\", \"responseCheckbox\", \"binary\", \"true\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [2, \"display\", \"flex\", \"align-items\", \"center\"], [2, \"width\", \"50px\", \"height\", \"15px\", \"background-color\", \"#E77471\"], [\"name\", \"completeCheckbox\", \"binary\", \"true\", \"id\", \"completeCheckbox\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [2, \"width\", \"50px\", \"height\", \"15px\", \"background-color\", \"#F75D59\"], [\"name\", \"completeResponseCheckbox\", \"binary\", \"true\", \"id\", \"completeResponseCheckbox\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", 3, \"value\", \"paginator\", \"scrollable\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"totalRecords\"], [\"tt\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"width\", \"100%\"], [2, \"width\", \"10%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedFrom\", \"formControlName\", \"dateRequestedFrom\", \"inputId\", \"icon\", 3, \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateRequestedTo\", \"formControlName\", \"dateRequestedTo\", \"inputId\", \"icon\", 3, \"showIcon\"], [2, \"width\", \"20%\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"showType\", \"bindLabel\", \"label\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [2, \"width\", \"15%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-button\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", \"filter-button\", 3, \"click\"], [2, \"width\", \"32%\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"wrId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"wrId\"], [\"pSortableColumn\", \"formatedRequestedFor\"], [\"field\", \"formatedRequestedFor\"], [\"pSortableColumn\", \"eqCode\"], [\"field\", \"eqId\"], [\"type\", \"text\", \"field\", \"eqCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateRequested\"], [\"field\", \"formatedDateRequested\"], [\"pSortableColumn\", \"fromatedDateToRespond\"], [\"field\", \"fromatedDateToRespond\"], [\"pSortableColumn\", \"formatedDateResponded\"], [\"field\", \"formatedDateResponded\"], [\"pSortableColumn\", \"formatedDateToComplete\"], [\"field\", \"formatedDateToComplete\"], [\"pSortableColumn\", \"formatedDateCompleted\"], [\"field\", \"formatedDateCompleted\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"below\", \"matTooltip\", \"View\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"]],\n      template: function SlaEscalationAnalysisComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"form\", 2);\n          i0.ɵɵtemplate(3, SlaEscalationAnalysisComponent_table_3_Template, 34, 13, \"table\", 3);\n          i0.ɵɵtemplate(4, SlaEscalationAnalysisComponent_table_4_Template, 35, 13, \"table\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"table\", 6)(7, \"tr\")(8, \"td\")(9, \"div\", 7);\n          i0.ɵɵelement(10, \"div\", 8);\n          i0.ɵɵelementStart(11, \"div\", 9)(12, \"p\");\n          i0.ɵɵtext(13, \"Escalated For Response\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"p-checkbox\", 10);\n          i0.ɵɵlistener(\"ngModelChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_14_listener($event) {\n            return ctx.responseCheckbox = $event;\n          })(\"onChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_14_listener() {\n            return ctx.updateSelectedData();\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"td\")(16, \"div\", 11);\n          i0.ɵɵelement(17, \"div\", 12);\n          i0.ɵɵelementStart(18, \"div\", 9)(19, \"p\");\n          i0.ɵɵtext(20, \"Escalated For Complete\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"p-checkbox\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_21_listener($event) {\n            return ctx.completeCheckbox = $event;\n          })(\"onChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_21_listener() {\n            return ctx.updateSelectedData();\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"td\")(23, \"div\", 11);\n          i0.ɵɵelement(24, \"div\", 14);\n          i0.ɵɵelementStart(25, \"div\", 9)(26, \"p\");\n          i0.ɵɵtext(27, \"Escalated For Response and Complete\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"p-checkbox\", 15);\n          i0.ɵɵlistener(\"ngModelChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_ngModelChange_28_listener($event) {\n            return ctx.completeResponseCheckbox = $event;\n          })(\"onChange\", function SlaEscalationAnalysisComponent_Template_p_checkbox_onChange_28_listener() {\n            return ctx.updateSelectedData();\n          });\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(29, \"p-table\", 16, 17);\n          i0.ɵɵtemplate(31, SlaEscalationAnalysisComponent_ng_template_31_Template, 59, 0, \"ng-template\", 18);\n          i0.ɵɵtemplate(32, SlaEscalationAnalysisComponent_ng_template_32_Template, 24, 32, \"ng-template\", 19);\n          i0.ɵɵtemplate(33, SlaEscalationAnalysisComponent_ng_template_33_Template, 3, 1, \"ng-template\", 20);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"toggleable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.responseCheckbox);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.completeCheckbox);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.completeResponseCheckbox);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.selectedData)(\"paginator\", true)(\"scrollable\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(15, _c0))(\"rowHover\", false)(\"totalRecords\", ctx.totalRecords);\n        }\n      },\n      dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.NgModel, i9.NgSelectComponent, i10.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.ColumnFilter, i12.Calendar, i13.ButtonDirective, i14.Panel, i15.Checkbox, i3.DatePipe],\n      styles: [\".escalation-type-title[_ngcontent-%COMP%]{font-size:11px;font-weight:500;margin:10px 10px 0 5px}.filter-button[_ngcontent-%COMP%]{width:60px;margin-left:5px;margin-top:12.2px}.checkbox-grid[_ngcontent-%COMP%]{max-height:60px}.checkbox-table[_ngcontent-%COMP%]{width:60%}@media screen and (min-width: 600px) and (max-width: 959px){.checkbox-grid[_ngcontent-%COMP%]{max-height:80px}.checkbox-table[_ngcontent-%COMP%]{width:90%}}\"]\n    });\n  }\n  return SlaEscalationAnalysisComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}