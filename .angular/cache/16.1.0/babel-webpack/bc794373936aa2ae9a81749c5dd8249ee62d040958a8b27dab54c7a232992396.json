{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../work-request/service/work-request-comments.services\";\nimport * as i2 from \"../../../work-request/provider/wr-comments-provider\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/ui/employee/services/employee.service\";\nimport * as i5 from \"src/app/services/auth.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"primeng/table\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/panel\";\nimport * as i11 from \"primeng/confirmdialog\";\nfunction WrCommentsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function WrCommentsComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAddComments());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isReadOnly);\n  }\n}\nfunction WrCommentsComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 10);\n    i0.ɵɵelementStart(2, \"th\", 11)(3, \"div\", 12)(4, \"div\", 13)(5, \"p\", 14);\n    i0.ɵɵtext(6, \"Comments\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 15);\n    i0.ɵɵelement(8, \"p-sortIcon\", 16)(9, \"p-columnFilter\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 18)(11, \"div\", 12)(12, \"div\", 13)(13, \"p\", 14);\n    i0.ɵɵtext(14, \"Comment By\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 15);\n    i0.ɵɵelement(16, \"p-sortIcon\", 19)(17, \"p-columnFilter\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 21)(19, \"div\", 12)(20, \"div\", 13)(21, \"p\", 14);\n    i0.ɵɵtext(22, \"Comment Date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 15);\n    i0.ɵɵelement(24, \"p-sortIcon\", 22)(25, \"p-columnFilter\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\", 24)(27, \"div\", 12)(28, \"div\", 13)(29, \"p\", 14);\n    i0.ɵɵtext(30, \" Comment Time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 15);\n    i0.ɵɵelement(32, \"p-sortIcon\", 25)(33, \"p-columnFilter\", 26);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction WrCommentsComponent_ng_template_5_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function WrCommentsComponent_ng_template_5_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const wrComments_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onEdit(wrComments_r6.commentId));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const wrComments_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", wrComments_r6.emId != ctx_r7.loggedInEm);\n  }\n}\nfunction WrCommentsComponent_ng_template_5_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function WrCommentsComponent_ng_template_5_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const wrComments_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onView(wrComments_r6.commentId));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WrCommentsComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 27)(1, \"td\", 10);\n    i0.ɵɵtemplate(2, WrCommentsComponent_ng_template_5_button_2_Template, 1, 1, \"button\", 28);\n    i0.ɵɵtemplate(3, WrCommentsComponent_ng_template_5_button_3_Template, 1, 0, \"button\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const wrComments_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", wrComments_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isReadOnly);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wrComments_r6.comments);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.getEmployeeFullName(wrComments_r6.emId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 7, wrComments_r6.commentDate, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.convertToDisplayTime(wrComments_r6.commentTime));\n  }\n}\nfunction WrCommentsComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 32);\n    i0.ɵɵtext(2, \" No Records Found \");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 20];\n};\nexport let WrCommentsComponent = /*#__PURE__*/(() => {\n  class WrCommentsComponent {\n    constructor(wrCommentsServices, wrCommentsProvider, messageService, employeeService, authService, datePipe) {\n      this.wrCommentsServices = wrCommentsServices;\n      this.wrCommentsProvider = wrCommentsProvider;\n      this.messageService = messageService;\n      this.employeeService = employeeService;\n      this.authService = authService;\n      this.datePipe = datePipe;\n      this.wrCommentsData = [];\n      this.allEmployees = [];\n      this.enumEm = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.isReadOnly = false;\n      this.isDetails = false;\n    }\n    ngOnInit() {\n      this.loggedInEm = this.authService.getLoggedInUserEMId();\n      this.loadAllEmployee();\n    }\n    loadWrComments(requestId) {\n      // this.requestId = requestId\n      if (requestId != null) {\n        this.wrCommentsServices.getWrCommentsByWrId(requestId).subscribe(res => {\n          if (res) {\n            this.wrCommentsData = res.map(each => {\n              return {\n                ...each,\n                formatedCommentedBy: this.getEmployeeFullName(each.emId),\n                formatedCommentedDate: this.datePipe.transform(each.commentDate, 'dd MMM yyyy')\n              };\n            });\n          } else {\n            this.wrCommentsData = [];\n          }\n        });\n      }\n    }\n    onAddComments() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        wrId: this.requestId,\n        isEdit: false,\n        isView: false\n      };\n      this.wrCommentsProvider.openDialog(dialogConfig);\n      this.wrCommentsProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'wr-comments-save',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadWrComments(result.wrId);\n        }\n      });\n    }\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    loadAllEmployee() {\n      this.employeeService.getAllEmployeeList().subscribe(res => {\n        if (res) {\n          this.allEmployees = res;\n        } else {\n          this.allEmployees = [];\n        }\n      });\n    }\n    getEmployeeFullName(id) {\n      if (this.allEmployees) {\n        this.enumEm = this.allEmployees.filter(em => em.emId == id);\n        this.fullName = this.enumEm.map(em => {\n          if (em.firstName.length > 0 && em.lastName.length > 0) {\n            return em.firstName + \" \" + em.lastName + ' - ' + em.emCode;\n          } else {\n            return em.firstName + ' - ' + em.emCode;\n          }\n        });\n      }\n      return this.fullName;\n    }\n    onEdit(commentId) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        wrId: this.requestId,\n        commentId: commentId,\n        isEdit: true,\n        isView: false\n      };\n      this.wrCommentsProvider.openDialog(dialogConfig);\n      this.wrCommentsProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'wr-comments-save',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadWrComments(result.wrId);\n        }\n      });\n    }\n    onView(commentId) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        wrId: this.requestId,\n        commentId: commentId,\n        isView: true,\n        isEdit: false\n      };\n      this.wrCommentsProvider.openDialog(dialogConfig);\n      this.wrCommentsProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'wr-comments-save',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadWrComments(result.wrId);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function WrCommentsComponent_Factory(t) {\n      return new (t || WrCommentsComponent)(i0.ɵɵdirectiveInject(i1.WrCommentsServices), i0.ɵɵdirectiveInject(i2.WrCommentsProvider), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.EmployeeService), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.DatePipe));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WrCommentsComponent,\n      selectors: [[\"app-wr-comments\"]],\n      inputs: {\n        isReadOnly: \"isReadOnly\",\n        isDetails: \"isDetails\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 9,\n      vars: 7,\n      consts: [[\"header\", \"Comments\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"130px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"scrollable\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"key\", \"wr-view\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"key\", \"wr-comments-save\", \"position\", \"top-right\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"disabled\", \"click\"], [2, \"width\", \"3rem\"], [\"pSortableColumn\", \"comments\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"comments\"], [\"type\", \"text\", \"field\", \"comments\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedCommentedBy\"], [\"field\", \"formatedCommentedBy\"], [\"type\", \"text\", \"field\", \"formatedCommentedBy\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedCommentedDate\"], [\"field\", \"formatedCommentedDate\"], [\"type\", \"text\", \"field\", \"formatedCommentedDate\", \"display\", \"menu\"], [\"pSortableColumn\", \"commentTime\"], [\"field\", \"commentTime\"], [\"type\", \"text\", \"field\", \"commentTime\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"class\", \"p-button-text p-button-rounded\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"class\", \"p-button-text p-button-rounded\", 3, \"click\", 4, \"ngIf\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"disabled\", \"click\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [\"colspan\", \"5\", 2, \"text-align\", \"center\"]],\n      template: function WrCommentsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0);\n          i0.ɵɵtemplate(1, WrCommentsComponent_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"p-table\", 3);\n          i0.ɵɵtemplate(4, WrCommentsComponent_ng_template_4_Template, 34, 0, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, WrCommentsComponent_ng_template_5_Template, 13, 10, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, WrCommentsComponent_ng_template_6_Template, 3, 0, \"ng-template\", 6);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(7, \"p-confirmDialog\", 7)(8, \"p-toast\", 8);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"value\", ctx.wrCommentsData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(6, _c0))(\"scrollable\", true);\n        }\n      },\n      dependencies: [i6.NgIf, i3.PrimeTemplate, i7.Table, i7.SortableColumn, i7.SelectableRow, i7.SortIcon, i7.ColumnFilter, i8.ButtonDirective, i9.Toast, i10.Panel, i11.ConfirmDialog, i6.DatePipe]\n    });\n  }\n  return WrCommentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}