{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/user-procs.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"primeng/table\";\nimport * as i4 from \"primeng/button\";\nfunction UserUnassignScreensComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"h4\");\n    i0.ɵɵtext(3, \"Assign Processes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\")(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function UserUnassignScreensComponent_ng_template_2_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAssign());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.selectedScreens.length > 0));\n  }\n}\nfunction UserUnassignScreensComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 9);\n    i0.ɵɵelement(2, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 10)(4, \"div\", 11)(5, \"div\", 12)(6, \"p\", 13);\n    i0.ɵɵtext(7, \"Processes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 14);\n    i0.ɵɵelement(9, \"p-sortIcon\", 15)(10, \"p-columnFilter\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"th\", 17)(12, \"div\", 11)(13, \"div\", 12)(14, \"p\", 13);\n    i0.ɵɵtext(15, \"Subprocesses\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 14);\n    i0.ɵɵelement(17, \"p-sortIcon\", 18)(18, \"p-columnFilter\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"th\", 20)(20, \"div\", 11)(21, \"div\", 12)(22, \"p\", 13);\n    i0.ɵɵtext(23, \"Screen Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 14);\n    i0.ɵɵelement(25, \"p-sortIcon\", 21)(26, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction UserUnassignScreensComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 9);\n    i0.ɵɵelement(2, \"p-tableCheckbox\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const unassign_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", unassign_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(unassign_r6.process.processCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(unassign_r6.subProcess ? unassign_r6.subProcess.subProcessCode : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(unassign_r6.screenName);\n  }\n}\nfunction UserUnassignScreensComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [\"\", \"processId\", \"subProcessId\", \"screenName\"];\n};\nexport let UserUnassignScreensComponent = /*#__PURE__*/(() => {\n  class UserUnassignScreensComponent {\n    constructor(userProcsSrv) {\n      this.userProcsSrv = userProcsSrv;\n      this.userUnAssignScreens = [];\n      this.role = \"\";\n      this.selectedScreens = [];\n      this.userRoleId = 0;\n      this.allScreenProcsPanels = new EventEmitter();\n    }\n    ngOnInit() {\n      //  this.loadUserUnAssignScreens(this.role);\n    }\n    loadUserUnAssignScreens(userRoleData) {\n      this.role = userRoleData.roleName;\n      this.userRoleId = userRoleData.userRoleId;\n      this.selectedScreens = [];\n      if (this.role.length > 1) {\n        let postData = {\n          \"userRoleId\": this.userRoleId\n        };\n        this.userProcsSrv.getUnAssignUserScreens(postData).subscribe(res => {\n          if (this.role === 'Application Admin') {\n            this.userUnAssignScreens = res;\n          } else {\n            this.userUnAssignScreens = res.filter(t => t.screenName != \"Add or Edit Company\");\n            this.userUnAssignScreens = this.userUnAssignScreens.filter(t => t.screenName != \"User Plan Report\");\n            this.userUnAssignScreens = this.userUnAssignScreens.filter(t => t.screenName != \"Add or Edit Cost\");\n          }\n        }, error => {});\n      } else this.userUnAssignScreens = [];\n    }\n    onAssign() {\n      const dataRecord = {\n        userProcs: this.prepareDataRecord()\n      };\n      this.userProcsSrv.saveUserAssignScreens(dataRecord).subscribe(res => {\n        this.allScreenProcsPanels.emit(\"true\");\n      }, error => {\n        console.log(error);\n      });\n    }\n    prepareDataRecord() {\n      let dataArray = [];\n      this.selectedScreens.forEach(x => {\n        const rec = {\n          \"processId\": x.processId,\n          \"screenNum\": x.screenNum,\n          \"userScreensNum\": 0,\n          \"userRoleId\": this.userRoleId,\n          \"subProcessId\": x.subProcessId\n        };\n        dataArray.push(rec);\n      });\n      return dataArray;\n    }\n    static #_ = this.ɵfac = function UserUnassignScreensComponent_Factory(t) {\n      return new (t || UserUnassignScreensComponent)(i0.ɵɵdirectiveInject(i1.UserProcsService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserUnassignScreensComponent,\n      selectors: [[\"app-user-unassign-screens\"]],\n      outputs: {\n        allScreenProcsPanels: \"allScreenProcsPanels\"\n      },\n      decls: 6,\n      vars: 5,\n      consts: [[1, \"card\"], [\"dataKey\", \"screenNum\", \"scrollHeight\", \"200px\", 3, \"value\", \"selection\", \"globalFilterFields\", \"scrollable\", \"selectionChange\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"d-flex\", \"flex-row\"], [2, \"flex\", \"auto\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Assign\", \"icon\", \"pi pi-plus\", 1, \"p-button-primary\", \"p-button-sm\", \"p-mr-2\", 3, \"disabled\", \"click\"], [2, \"width\", \"3rem\"], [\"pSortableColumn\", \"process.processCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"process.processCode\"], [\"type\", \"text\", \"field\", \"process.processCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"subProcess.subProcessCode\"], [\"field\", \"subProcess.subProcessCode\"], [\"type\", \"text\", \"field\", \"subProcess.subProcessCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"screenName\"], [\"field\", \"screenName\"], [\"type\", \"text\", \"field\", \"screenName\", \"display\", \"menu\"], [3, \"value\"]],\n      template: function UserUnassignScreensComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-table\", 1);\n          i0.ɵɵlistener(\"selectionChange\", function UserUnassignScreensComponent_Template_p_table_selectionChange_1_listener($event) {\n            return ctx.selectedScreens = $event;\n          });\n          i0.ɵɵtemplate(2, UserUnassignScreensComponent_ng_template_2_Template, 6, 1, \"ng-template\", 2);\n          i0.ɵɵtemplate(3, UserUnassignScreensComponent_ng_template_3_Template, 27, 0, \"ng-template\", 3);\n          i0.ɵɵtemplate(4, UserUnassignScreensComponent_ng_template_4_Template, 9, 4, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, UserUnassignScreensComponent_ng_template_5_Template, 3, 1, \"ng-template\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.userUnAssignScreens)(\"selection\", ctx.selectedScreens)(\"globalFilterFields\", i0.ɵɵpureFunction0(4, _c0))(\"scrollable\", true);\n        }\n      },\n      dependencies: [i2.PrimeTemplate, i3.Table, i3.SortableColumn, i3.SortIcon, i3.TableCheckbox, i3.TableHeaderCheckbox, i3.ColumnFilter, i4.ButtonDirective]\n    });\n  }\n  return UserUnassignScreensComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}