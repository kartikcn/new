{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from '../../../../../common/UtilConstant';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/bl.service\";\nimport * as i2 from \"../../provider/fl.provider\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/panel\";\nimport * as i8 from \"primeng/confirmdialog\";\nimport * as i9 from \"primeng/paginator\";\nfunction FlListComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function FlListComponent_ng_template_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAddFloor());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FlListComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 19);\n    i0.ɵɵelementStart(2, \"th\", 20)(3, \"div\", 21)(4, \"div\", 22)(5, \"p\", 23);\n    i0.ɵɵtext(6, \"Building\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 24);\n    i0.ɵɵelement(8, \"p-sortIcon\", 25)(9, \"p-columnFilter\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 27)(11, \"div\", 21)(12, \"div\", 22)(13, \"p\", 23);\n    i0.ɵɵtext(14, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 24);\n    i0.ɵɵelement(16, \"p-sortIcon\", 28)(17, \"p-columnFilter\", 29);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 30)(19, \"div\", 21)(20, \"div\", 22)(21, \"p\", 23);\n    i0.ɵɵtext(22, \"Floor Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 24);\n    i0.ɵɵelement(24, \"p-sortIcon\", 31)(25, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction FlListComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 33)(1, \"td\", 19)(2, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function FlListComponent_ng_template_15_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const fl_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onViewDetails(fl_r7.blId, fl_r7.flId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function FlListComponent_ng_template_15_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const fl_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.openEditItem(fl_r7));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function FlListComponent_ng_template_15_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const fl_r7 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteFloor(fl_r7));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const fl_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", fl_r7);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(fl_r7.blBlName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(fl_r7.flCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(fl_r7.flName);\n  }\n}\nfunction FlListComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 5);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let FlListComponent = /*#__PURE__*/(() => {\n  class FlListComponent {\n    constructor(blSrv, flProvider, messageService, confirmationService) {\n      this.blSrv = blSrv;\n      this.flProvider = flProvider;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.isView = false;\n      this.fl_data = [];\n      this.subscriptions = [];\n      this.loading = false;\n      this.isFlList = true;\n      this.displayedColumns = ['id', 'blId', 'flName', 'flId', 'flInfo'];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.selectedSite = \"\";\n      this.selectedBldg = \"\";\n      this.isHide = true;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"flId\"],\n        sortOrder: \"ASC\"\n      };\n      this.totalElements = 0;\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n      this.isSorted = false;\n      this.parentFun = new EventEmitter();\n    }\n    ngOnInit() {}\n    loadRecords(data) {\n      this.flFilter = data;\n      this.loading = true;\n      this.isFlList = true;\n      let filterData = {\n        ...data,\n        filterDto: {\n          paginationDTO: this.paginationObj,\n          filterCriteria: this.filterCriteriaList\n        }\n      };\n      this.blSrv.getFlListPaginated(filterData).subscribe(res => {\n        if (res.status != 202) {\n          this.isFlList = false;\n          this.isFiltered = false;\n          this.fl_data = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.isFlList = true;\n          this.fl_data = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    openEditItem(fl) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        flCode: fl.flCode,\n        fl_id: fl.flId,\n        bl_id: fl.blBlName,\n        isEdit: true,\n        newRecord: false\n      };\n      this.flProvider.openDialog(dialogConfig);\n      this.flProvider.onDialogueClosed.subscribe(result => {\n        this.loadRecords(this.flFilter);\n      });\n    }\n    onAddFloor() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        fl_id: null,\n        bl_id: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.flProvider.openDialog(dialogConfig);\n      this.flProvider.onDialogueClosed.subscribe(result => {\n        this.loadRecords(this.flFilter);\n      });\n    }\n    onRowSelect(event) {\n      this.parentFun.emit(event.data);\n    }\n    onClearBuilding() {\n      this.parentFun.emit(true);\n    }\n    deleteFloor(fl) {\n      this.userDeleteConfirm(fl);\n    }\n    deleteRecord(fl_id) {\n      this.blSrv.deleteFloor(fl_id).subscribe(res => {\n        if (res.code == 200) {\n          this.messageService.add({\n            key: 'flSuccessMessage',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: res.text\n          });\n          this.loadRecords(this.flFilter);\n        } else {\n          this.messageService.add({\n            key: 'flFailureMessage',\n            severity: 'warn',\n            summary: 'Delete failed',\n            detail: res.text\n          });\n        }\n      });\n    }\n    userDeleteConfirm(fl) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ' + fl.blBlName + ' - ' + fl.flCode + ' ?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deleteRecord(fl.flId);\n        },\n        key: \"flGrid\"\n      });\n    }\n    onViewDetails(bl_id, fl_id) {\n      this.isView = true;\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        isView: true,\n        fl_id: fl_id,\n        bl_id: bl_id,\n        isEdit: true,\n        newRecord: false\n      };\n      this.flProvider.openDialog(dialogConfig);\n      this.flProvider.onDialogueClosed.subscribe(result => {\n        this.loadRecords(this.flFilter);\n      });\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords(this.flFilter);\n    }\n    onSort(event) {\n      // this.isSorted = true;\n    }\n    onInnerFilter(event) {\n      this.isSorted = false;\n      setTimeout(() => {\n        if (this.isFiltered && !this.isSorted) {\n          this.isSorted = false;\n          Object.keys(event.filters).forEach(field => {\n            const filterValue = event.filters[field][0].value;\n            const matchMode = event.filters[field][0].matchMode;\n            if (filterValue !== undefined) {\n              let filterCriteria = {};\n              if (field == \"blBlName\") {\n                filterCriteria = {\n                  fieldName: \"bl.blName\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else {\n                filterCriteria = {\n                  fieldName: field,\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              }\n              this.updateFilterCriteriaList(filterCriteria);\n            }\n          });\n          // if (this.filterCriteriaList.length!=0) {\n          //   this.paginationObj.pageNo = 0;\n          // }\n          this.paginationObj.pageNo = 0;\n          this.loadRecords(this.flFilter);\n        }\n        this.isFiltered = true;\n      }, 0);\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function FlListComponent_Factory(t) {\n      return new (t || FlListComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.FLModalDialogueProvider), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.ConfirmationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FlListComponent,\n      selectors: [[\"app-fl-list\"]],\n      viewQuery: function FlListComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatSort, 5);\n          i0.ɵɵviewQuery(MatPaginator, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        }\n      },\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 22,\n      vars: 14,\n      consts: [[1, \"card\", 2, \"height\", \"68vh\"], [\"header\", \" \"], [2, \"width\", \"auto\", 3, \"hidden\"], [2, \"width\", \"auto\"], [\"width\", \"30px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", 1, \"p-button-text\", \"p-button\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"380px\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"scrollable\", \"onRowSelect\", \"onFilter\", \"onSort\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"flSuccessMessage\", \"position\", \"top-right\"], [\"key\", \"flFailureMessage\", \"position\", \"top-center\"], [\"key\", \"flGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"10rem\"], [\"pSortableColumn\", \"blBlName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"blBlName\"], [\"type\", \"text\", \"field\", \"blBlName\", \"display\", \"menu\"], [\"pSortableColumn\", \"flCode\"], [\"field\", \"flCode\"], [\"type\", \"text\", \"field\", \"flCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"flName\"], [\"field\", \"flName\"], [\"type\", \"text\", \"field\", \"flName\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-eye\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 1, \"p-button-text\", \"p-button\", \"mr5\", 2, \"margin-left\", \"3.5px\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", 1, \"p-button-text\", \"p-button\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"]],\n      template: function FlListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"td\", 3);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"td\", 4)(9, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function FlListComponent_Template_button_click_9_listener() {\n            return ctx.onClearBuilding();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(10, FlListComponent_ng_template_10_Template, 1, 0, \"ng-template\", 6);\n          i0.ɵɵelementStart(11, \"div\", 7)(12, \"p-table\", 8, 9);\n          i0.ɵɵlistener(\"onRowSelect\", function FlListComponent_Template_p_table_onRowSelect_12_listener($event) {\n            return ctx.onRowSelect($event);\n          })(\"onFilter\", function FlListComponent_Template_p_table_onFilter_12_listener($event) {\n            return ctx.onInnerFilter($event);\n          })(\"onSort\", function FlListComponent_Template_p_table_onSort_12_listener($event) {\n            return ctx.onSort($event);\n          });\n          i0.ɵɵtemplate(14, FlListComponent_ng_template_14_Template, 26, 0, \"ng-template\", 10);\n          i0.ɵɵtemplate(15, FlListComponent_ng_template_15_Template, 11, 4, \"ng-template\", 11);\n          i0.ɵɵtemplate(16, FlListComponent_ng_template_16_Template, 3, 1, \"ng-template\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 13)(18, \"p-paginator\", 14);\n          i0.ɵɵlistener(\"onPageChange\", function FlListComponent_Template_p_paginator_onPageChange_18_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(19, \"p-toast\", 15)(20, \"p-toast\", 16)(21, \"p-confirmDialog\", 17);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", ctx.isHide);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"\", ctx.selectedSite, \" \\u00A0\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.selectedBldg);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"value\", ctx.fl_data)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"rowHover\", true)(\"scrollable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(13, _c0));\n        }\n      },\n      dependencies: [i3.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i4.SortIcon, i4.ColumnFilter, i5.ButtonDirective, i6.Toast, i7.Panel, i8.ConfirmDialog, i9.Paginator],\n      styles: [\"span[_ngcontent-%COMP%]{height:24px!important;font-size:10px!important}.trFont[_ngcontent-%COMP%]{font-size:11px!important}.panel-group-custom[_ngcontent-%COMP%]{margin:-12px!important}label[_ngcontent-%COMP%]{font-size:10px;font-weight:500;padding:0 0 0 3px;margin-bottom:-10px!important}.td-calc-2[_ngcontent-%COMP%]{width:50%}.panel-body-custom[_ngcontent-%COMP%]{padding:0}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px}select[_ngcontent-%COMP%], input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{border:thin double rgb(181,155,90)!important;padding-left:5px;background:#fff}.input-group[_ngcontent-%COMP%]   .input-group-addon[_ngcontent-%COMP%]{height:24px}\"]\n    });\n  }\n  return FlListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}