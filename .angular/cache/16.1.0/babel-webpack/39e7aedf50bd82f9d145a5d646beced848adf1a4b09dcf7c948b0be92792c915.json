{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { forkJoin } from 'rxjs';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { SvgRoomDataInput } from 'src/app/model/svgroomdatainput.model';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from '../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../background-loc/model/DTO/FloorFilterInputDTO.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"src/app/services/rmcat.service\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"src/app/services/enum.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ng-select/ng-select\";\nimport * as i9 from \"primeng/table\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/toast\";\nimport * as i12 from \"primeng/confirmdialog\";\nimport * as i13 from \"../svg-view/svg-view.component\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"primeng/paginator\";\nfunction RmcatRmtypeSvgComponent_div_28_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 33);\n    i0.ɵɵtext(2, \" Room Category \");\n    i0.ɵɵelement(3, \"p-sortIcon\", 34)(4, \"p-columnFilter\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_28_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 36)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"div\", 37);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rmcat_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", rmcat_r10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rmcat_r10.rmCat);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", rmcat_r10.highlightColor);\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_28_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 2);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nfunction RmcatRmtypeSvgComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-table\", 27);\n    i0.ɵɵlistener(\"onRowSelect\", function RmcatRmtypeSvgComponent_div_28_Template_p_table_onRowSelect_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onrmcatrowselect($event));\n    })(\"onFilter\", function RmcatRmtypeSvgComponent_div_28_Template_p_table_onFilter_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onInnerFilterRmCat($event));\n    })(\"onSort\", function RmcatRmtypeSvgComponent_div_28_Template_p_table_onSort_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onSortRmCat($event));\n    });\n    i0.ɵɵtemplate(2, RmcatRmtypeSvgComponent_div_28_ng_template_2_Template, 7, 0, \"ng-template\", 28);\n    i0.ɵɵtemplate(3, RmcatRmtypeSvgComponent_div_28_ng_template_3_Template, 5, 4, \"ng-template\", 29);\n    i0.ɵɵtemplate(4, RmcatRmtypeSvgComponent_div_28_ng_template_4_Template, 3, 1, \"ng-template\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 31)(6, \"p-paginator\", 32);\n    i0.ɵɵlistener(\"onPageChange\", function RmcatRmtypeSvgComponent_div_28_Template_p_paginator_onPageChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onPageChangeRmCat($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r0.rmcatdata)(\"paginator\", false)(\"rows\", ctx_r0.rowCount)(\"rowHover\", true)(\"scrollable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"rows\", ctx_r0.rowCount)(\"totalRecords\", ctx_r0.totalElementsRmCat)(\"first\", ctx_r0.paginationObjRmCat.pageNo * ctx_r0.paginationObjRmCat.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_29_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 38);\n    i0.ɵɵtext(2, \" Room Type \");\n    i0.ɵɵelement(3, \"p-sortIcon\", 39)(4, \"p-columnFilter\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_29_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 36)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"div\", 37);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rmtype_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", rmtype_r20);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rmtype_r20.rmType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", rmtype_r20.highlightColor);\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_29_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-table\", 27);\n    i0.ɵɵlistener(\"onRowSelect\", function RmcatRmtypeSvgComponent_div_29_Template_p_table_onRowSelect_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onrmtyperowselect($event));\n    })(\"onFilter\", function RmcatRmtypeSvgComponent_div_29_Template_p_table_onFilter_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.onInnerFilterRmType($event));\n    })(\"onSort\", function RmcatRmtypeSvgComponent_div_29_Template_p_table_onSort_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.onSortRmType($event));\n    });\n    i0.ɵɵtemplate(2, RmcatRmtypeSvgComponent_div_29_ng_template_2_Template, 7, 0, \"ng-template\", 28);\n    i0.ɵɵtemplate(3, RmcatRmtypeSvgComponent_div_29_ng_template_3_Template, 5, 4, \"ng-template\", 29);\n    i0.ɵɵtemplate(4, RmcatRmtypeSvgComponent_div_29_ng_template_4_Template, 3, 1, \"ng-template\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 31)(6, \"p-paginator\", 32);\n    i0.ɵɵlistener(\"onPageChange\", function RmcatRmtypeSvgComponent_div_29_Template_p_paginator_onPageChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onPageChangeRmType($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r1.rmtypeData)(\"paginator\", false)(\"rows\", ctx_r1.rowCount)(\"rowHover\", true)(\"scrollable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"rows\", ctx_r1.rowCount)(\"totalRecords\", ctx_r1.totalElementsRmType)(\"first\", ctx_r1.paginationObjRmType.pageNo * ctx_r1.paginationObjRmType.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.selectedRoomsMessage, \" \");\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 41)(1, \"app-svg-view\", 42);\n    i0.ɵɵlistener(\"onRoomClick\", function RmcatRmtypeSvgComponent_div_40_Template_app_svg_view_onRoomClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.roomOnClickListener($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgInputData\", ctx_r3.svgInputData);\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_42_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 45);\n    i0.ɵɵelement(2, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 46);\n    i0.ɵɵtext(4, \" Building Code \");\n    i0.ɵɵelement(5, \"p-sortIcon\", 47)(6, \"p-columnFilter\", 48);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 49);\n    i0.ɵɵtext(8, \" Floor Code\");\n    i0.ɵɵelement(9, \"p-sortIcon\", 50)(10, \"p-columnFilter\", 51);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 52);\n    i0.ɵɵtext(12, \" Room Code \");\n    i0.ɵɵelement(13, \"p-sortIcon\", 53)(14, \"p-columnFilter\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\", 55);\n    i0.ɵɵtext(16, \" Room Category \");\n    i0.ɵɵelement(17, \"p-sortIcon\", 56)(18, \"p-columnFilter\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"th\", 58);\n    i0.ɵɵtext(20, \" Room Type \");\n    i0.ɵɵelement(21, \"p-sortIcon\", 59)(22, \"p-columnFilter\", 60);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_42_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 36)(1, \"td\", 45);\n    i0.ɵɵelement(2, \"p-tableCheckbox\", 61);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rm_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", rm_r32);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", rm_r32);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r32.blBlCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r32.flFlCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r32.rmCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r32.rmcatRmCat);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r32.rmtypeRmType);\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_42_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nfunction RmcatRmtypeSvgComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 41)(1, \"p-table\", 44);\n    i0.ɵɵlistener(\"selectionChange\", function RmcatRmtypeSvgComponent_div_42_Template_p_table_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.selectedRooms = $event);\n    })(\"onFilter\", function RmcatRmtypeSvgComponent_div_42_Template_p_table_onFilter_1_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.onInnerFilterRm($event));\n    })(\"onSort\", function RmcatRmtypeSvgComponent_div_42_Template_p_table_onSort_1_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.onSortRm($event));\n    });\n    i0.ɵɵtemplate(2, RmcatRmtypeSvgComponent_div_42_ng_template_2_Template, 23, 0, \"ng-template\", 28);\n    i0.ɵɵtemplate(3, RmcatRmtypeSvgComponent_div_42_ng_template_3_Template, 13, 7, \"ng-template\", 29);\n    i0.ɵɵtemplate(4, RmcatRmtypeSvgComponent_div_42_ng_template_4_Template, 3, 1, \"ng-template\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 31)(6, \"p-paginator\", 32);\n    i0.ɵɵlistener(\"onPageChange\", function RmcatRmtypeSvgComponent_div_42_Template_p_paginator_onPageChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.onPageChangeRm($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r5.allRoomData)(\"paginator\", false)(\"rows\", ctx_r5.rowCount)(\"selection\", ctx_r5.selectedRooms)(\"rowHover\", false)(\"scrollable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"rows\", ctx_r5.rowCount)(\"totalRecords\", ctx_r5.totalElementsRm)(\"first\", ctx_r5.paginationObjRm.pageNo * ctx_r5.paginationObjRm.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(11, _c0));\n  }\n}\nfunction RmcatRmtypeSvgComponent_ngx_spinner_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 62)(1, \"p\", 63);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport class RmcatRmtypeSvgComponent {\n  constructor(blServ, formBuilder, cdr, spinner, rmcatSrv, messageService, confirmationService, enumservice) {\n    this.blServ = blServ;\n    this.formBuilder = formBuilder;\n    this.cdr = cdr;\n    this.spinner = spinner;\n    this.rmcatSrv = rmcatSrv;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.enumservice = enumservice;\n    this.allBl = [];\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.viewSvg = false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.rmcatdata = [];\n    this.rmtypeData = [];\n    this.showrmtypetable = false;\n    this.selectedRmCat = '';\n    this.selectedRmType = '';\n    this.selectedRmCatId = null;\n    this.selectedRmTypeId = null;\n    this.selectedSvgElementIds = [];\n    this.roomSelectedSvgElementIds = [];\n    this.allSVGRoomsData = [];\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.allRoomData = [];\n    this.selectedRooms = [];\n    this.showrmcattable = false;\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.searchedSvgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.enumView = [{\n      id: 'list',\n      value: 'List'\n    }, {\n      id: 'svg',\n      value: 'SVG'\n    }];\n    this.enableAssignButton = false;\n    this.enableUnAssignButton = false;\n    this.enableClearButton = false;\n    this.paginationObjRmCat = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmcatId\"],\n      sortOrder: \"ASC\"\n    };\n    this.totalElementsRmCat = 0;\n    this.isFilteredRmCat = false;\n    this.filterCriteriaListRmCat = [];\n    this.isSortedRmCat = false;\n    this.paginationObjRmType = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmtypeId\"],\n      sortOrder: \"ASC\"\n    };\n    this.totalElementsRmType = 0;\n    this.isFilteredRmType = false;\n    this.filterCriteriaListRmType = [];\n    this.isSortedRmType = false;\n    this.paginationObjRm = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmId\"],\n      sortOrder: \"ASC\"\n    };\n    this.totalElementsRm = 0;\n    this.isFilteredRm = false;\n    this.filterCriteriaListRm = [];\n    this.isSortedRm = false;\n    this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n    this.svgInputData = new SvgRoomDataInput(null, null, null, false, false, false, false, false, \"\", null, \"\", \"\", null, null);\n    this.selectedBl = {};\n    this.selectedFl = {};\n    this.filterPanel = this.formBuilder.group({\n      blId: [null],\n      flId: [null],\n      view: [null]\n    });\n  }\n  ngOnInit() {\n    this.loadAllRmCat();\n    this.loadNoneCommonAreaEnum();\n    this.filterPanel.patchValue({\n      view: this.enumView[0].id\n    });\n    this.showrmcattable = true;\n    this.loadGridData();\n  }\n  onSelectBlCode($event) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        flId: null\n      });\n    }, 10);\n    if ($event.blId != null) {\n      this.selectedBl = $event;\n      this.selectedFl = {};\n    } else {\n      this.selectedBl = {};\n      this.selectedBl = {};\n    }\n  }\n  onSelectFlCode(event) {\n    if (event.flId != null) {\n      this.selectedFl = event;\n      const blData = {\n        blId: event.blId,\n        blNameString: event.blNameString\n      };\n      this.selectedBl = blData;\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId\n        });\n      }, 10);\n    } else {}\n  }\n  loadAllRmCat() {\n    let data = {\n      paginationDTO: this.paginationObjRmCat,\n      filterCriteria: this.filterCriteriaListRmCat\n    };\n    this.isFilteredRmCat = false;\n    this.rmcatSrv.getALLRmcatsPaginated(data).subscribe(res => {\n      if (res) {\n        this.isFilteredRmCat = false;\n        this.rmcatdata = res.content ? res.content : [];\n        this.totalElementsRmCat = res.totalElements ? res.totalElements : 0;\n      } else {\n        this.rmcatdata = [];\n      }\n    });\n  }\n  onSearch() {\n    this.showrmcattable = false;\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.selectedSvgElementIds = [];\n    this.roomSelectedSvgElementIds = [];\n    this.displayNoFloorPlanInfo = false;\n    this.showrmtypetable = false;\n    this.selectedRmCat = '';\n    this.selectedRmType = '';\n    this.selectedRmCatId = null;\n    this.selectedRmTypeId = null;\n    this.viewSvg = false;\n    this.selectedRooms = [];\n    this.showSpinner = true;\n    this.spinner.show();\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    let view = this.filterPanel.controls.view.value;\n    if (view == 'svg') {\n      if (blId != null && flId != null) {\n        this.svgInputData = new SvgRoomDataInput(blId, flId, null, false, false, false, true, false, \"\", null, \"\", \"rmcat-rmtype\", null, null);\n        this.selectionMessage = \"Please select a Room Category\";\n        this.viewSvg = true;\n      } else {\n        this.spinner.hide();\n        this.showSpinner = false;\n        this.selectionMessage = \"Please select Building and Floor\";\n        this.displayNoFloorPlanInfo = true;\n      }\n    } else {\n      this.loadGridData();\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.selectionMessage = \"Please select a Room Category\";\n    }\n    this.showrmcattable = true;\n  }\n  onClear() {\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.viewSvg = false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.showrmcattable = false;\n    this.selectedSvgElementIds = [];\n    this.roomSelectedSvgElementIds = [];\n    this.selectedRooms = [];\n    this.svgInputData = new SvgRoomDataInput(null, null, null, false, false, false, false, false, \"\", null, \"\", \"\", null, null);\n    this.searchedSvgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.showrmtypetable = false;\n    this.selectedRmCat = '';\n    this.selectedRmType = '';\n    this.selectedRmCatId = null;\n    this.selectedRmTypeId = null;\n    this.allSVGRoomsData = [];\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null,\n      view: this.enumView[0].id\n    });\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.paginationObjRmCat = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmcatId\"],\n      sortOrder: \"ASC\"\n    };\n    this.totalElementsRmCat = 0;\n    this.filterCriteriaListRmCat = [];\n    this.isFilteredRmCat = false;\n    this.paginationObjRmType = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmtypeId\"],\n      sortOrder: \"ASC\"\n    };\n    this.totalElementsRmType = 0;\n    this.filterCriteriaListRmType = [];\n    this.isFilteredRmType = false;\n    this.paginationObjRm = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmId\"],\n      sortOrder: \"ASC\"\n    };\n    this.totalElementsRm = 0;\n    this.filterCriteriaListRm = [];\n    this.isFilteredRm = false;\n    this.loadAllRmCat();\n    this.onSearch();\n    this.selectedBl = {};\n    this.selectedFl = {};\n  }\n  roomOnClickListener(data) {\n    this.selectedRoomsMessage = '';\n    let svgelid = '';\n    if (data.elementIdName != null && data.elementIdName != \"\") {\n      if (data.elementIdName.startsWith(\"label\")) {\n        svgelid = data.elementIdName.substring(\"label_\".length);\n      } else {\n        svgelid = data.elementIdName;\n      }\n      if (!this.selectedSvgElementIds.includes(svgelid)) {\n        this.selectedSvgElementIds.push(svgelid);\n      }\n      this.selectedSvgElementIds.forEach(id => {\n        data.svgRoomData.content.forEach(svgData => {\n          if (svgData.svgElementId.roomElementId == id) {\n            this.roomSelectedSvgElementIds.push(id);\n            if (this.selectionHighlightColor.length > 0) {\n              svgData.highlightRoom = true;\n              svgData.color.roomColor = this.selectionHighlightColor;\n            } else {\n              svgData.highlightRoom = false;\n              svgData.color.roomColor = \"\";\n            }\n            if (this.selectedRoomsMessage.length == 0) {\n              this.selectedRoomsMessage += \"Selected Rooms : \" + svgData.rmCode;\n            } else {\n              this.selectedRoomsMessage += \", \" + svgData.rmCode;\n            }\n          }\n        });\n      });\n      this.allSVGRoomsData = [...data.allSVGRoomsData];\n      this.cdr.detectChanges();\n      this.svgViewComp.loadByDetails();\n    }\n  }\n  onAssigntoRooms() {\n    this.messageService.clear();\n    let saveRoomData = [];\n    const saveRequests = [];\n    if (this.viewSvg) {\n      this.roomSelectedSvgElementIds.forEach(id => {\n        const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId == id);\n        if (matchingObj) {\n          saveRoomData.push(matchingObj);\n        }\n      });\n      saveRoomData.forEach(room => {\n        if (this.selectedRmCatId != null) {\n          room.rmcatId = this.selectedRmCatId;\n        }\n        if (this.selectedRmTypeId != null) {\n          room.rmtypeId = this.selectedRmTypeId;\n        } else {\n          room.rmtypeId = null;\n        }\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      });\n    } else {\n      saveRoomData = [...this.selectedRooms];\n      saveRoomData.forEach(room => {\n        if (this.selectedRmCatId != null) {\n          room.rmcatId = this.selectedRmCatId;\n        }\n        if (this.selectedRmTypeId != null) {\n          room.rmtypeId = this.selectedRmTypeId;\n        } else {\n          room.rmtypeId = null;\n        }\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      });\n    }\n    forkJoin(saveRequests).subscribe(res => {\n      this.messageService.add({\n        key: 'rmcatrmtypesvgMsg',\n        severity: 'success',\n        summary: 'Record updated',\n        detail: 'Room updated successfully'\n      });\n      this.onSearch();\n    }, error => {\n      console.error('Failed to save records:', error);\n    });\n  }\n  userConfirmUnAssign() {\n    this.confirmationService.confirm({\n      message: 'This will remove the selected room\\'s category and type. Do you wish to continue?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.onUnAssigntoRooms();\n      },\n      key: \"rmcatrmtypesvgGrid\"\n    });\n  }\n  onrmcatrowselect(event) {\n    this.rmtypeData = [];\n    this.selectedSvgElementIds = [];\n    this.roomSelectedSvgElementIds = [];\n    this.selectedRooms = [];\n    this.showrmtypetable = true;\n    this.selectedRmCat = event.data.rmCat;\n    this.selectedRmCatId = event.data.rmcatId;\n    this.selectionMessage = \"Please select a Room Type\";\n    this.loadRmType(event.data.rmcatId);\n    this.cdr.detectChanges();\n  }\n  loadRmType(rmcatId) {\n    let data = {\n      rmcatId: rmcatId,\n      filterDto: {\n        paginationDTO: this.paginationObjRmType,\n        filterCriteria: this.filterCriteriaListRmType\n      }\n    };\n    this.isFilteredRmType = false;\n    this.rmcatSrv.getRmTypeListPaginated(data).subscribe(res => {\n      if (res) {\n        this.isFilteredRmType = false;\n        this.rmtypeData = res.content ? res.content : [];\n        this.totalElementsRmType = res.totalElements ? res.totalElements : 0;\n      }\n    });\n  }\n  onrmtyperowselect(event) {\n    this.selectedRmType = event.data.rmType;\n    this.selectedRmTypeId = event.data.rmtypeId;\n    this.selectionHighlightColor = event.data.highlightColor;\n    this.selectionMessage = \"Please select rooms to be assigned for \" + this.selectedRmCat + \" | \" + this.selectedRmType;\n    this.selectedSvgElementIds = [];\n    this.roomSelectedSvgElementIds = [];\n    this.selectedRooms = [];\n    this.cdr.detectChanges();\n  }\n  onCancelSelection() {\n    if (this.viewSvg) {\n      this.onSearch();\n    } else {\n      this.selectedRooms = [];\n    }\n  }\n  onUnAssigntoRooms() {\n    this.messageService.clear();\n    let saveRoomData = [];\n    const saveRequests = [];\n    if (this.viewSvg) {\n      this.roomSelectedSvgElementIds.forEach(id => {\n        const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId == id);\n        if (matchingObj) {\n          saveRoomData.push(matchingObj);\n        }\n      });\n      saveRoomData.forEach(room => {\n        room.rmcatId = null;\n        room.rmtypeId = null;\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      });\n    } else {\n      saveRoomData = [...this.selectedRooms];\n      saveRoomData.forEach(room => {\n        room.rmcatId = null;\n        room.rmtypeId = null;\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      });\n    }\n    forkJoin(saveRequests).subscribe(res => {\n      this.messageService.add({\n        key: 'rmcatrmtypesvgMsg',\n        severity: 'success',\n        summary: 'Record updated',\n        detail: 'Room updated successfully'\n      });\n      this.onSearch();\n    }, error => {\n      console.error('Failed to save records:', error);\n    });\n  }\n  loadGridData() {\n    this.loadAllRoom();\n    this.selectionMessage = \"Please select a Room Category\";\n  }\n  loadAllRoom() {\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    let data = {\n      blId: blId,\n      flId: flId,\n      filterDto: {\n        paginationDTO: this.paginationObjRm,\n        filterCriteria: this.filterCriteriaListRm\n      }\n    };\n    this.isFilteredRm = false;\n    this.blServ.getRmListByPagination(data).subscribe(res => {\n      this.isFilteredRm = false;\n      let content = res.content ? res.content : [];\n      this.totalElementsRm = res.totalElements ? res.totalElements : 0;\n      this.allRoomData = content.filter(each => each.commonAreaType == this.commonAreaTypeNoneEnumValue);\n    });\n  }\n  loadNoneCommonAreaEnum() {\n    this.enumservice.getEnums().subscribe(res => {\n      let commonareaEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase() && t.enumValue.toLocaleUpperCase() === 'None'.toLocaleUpperCase());\n      this.commonAreaTypeNoneEnumValue = commonareaEnumList[0].enumKey;\n    });\n  }\n  onPageChangeRmCat(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObjRmCat.pageNo = pageNo;\n    this.paginationObjRmCat.pageSize = pageSize;\n    this.loadAllRmCat();\n  }\n  onSortRmCat(event) {\n    //this.isSortedRmCat = true;\n  }\n  onInnerFilterRmCat(event) {\n    this.isSortedRmCat = false;\n    setTimeout(() => {\n      if (this.isFilteredRmCat && !this.isSortedRmCat) {\n        this.isSortedRmCat = false;\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteriaRmCat = {\n              fieldName: field,\n              value: filterValue,\n              matchMode: matchMode\n            };\n            this.updateFilterCriteriaListRmCat(filterCriteriaRmCat);\n          }\n        });\n        this.paginationObjRmCat.pageNo = 0;\n        this.loadAllRmCat();\n      }\n      this.isFilteredRmCat = true;\n    }, 0);\n  }\n  updateFilterCriteriaListRmCat(filterCriteria) {\n    let index = this.filterCriteriaListRmCat.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaListRmCat.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaListRmCat[index] = filterCriteria;\n      } else {\n        this.filterCriteriaListRmCat.push(filterCriteria);\n      }\n    }\n  }\n  onPageChangeRmType(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObjRmType.pageNo = pageNo;\n    this.paginationObjRmType.pageSize = pageSize;\n    this.loadRmType(this.selectedRmCatId);\n  }\n  onSortRmType(event) {\n    // this.isSortedRmType= true;\n  }\n  onInnerFilterRmType(event) {\n    this.isSortedRmType = false;\n    setTimeout(() => {\n      if (this.isFilteredRmType && !this.isSortedRmType) {\n        this.isSortedRmType = false;\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteriaRmType = {\n              fieldName: field,\n              value: filterValue,\n              matchMode: matchMode\n            };\n            this.updateFilterCriteriaListRmType(filterCriteriaRmType);\n          }\n        });\n        this.paginationObjRmType.pageNo = 0;\n        this.loadRmType(this.selectedRmCatId);\n      }\n      this.isFilteredRmType = true;\n    }, 0);\n  }\n  updateFilterCriteriaListRmType(filterCriteria) {\n    let index = this.filterCriteriaListRmType.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaListRmType.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaListRmType[index] = filterCriteria;\n      } else {\n        this.filterCriteriaListRmType.push(filterCriteria);\n      }\n    }\n  }\n  onPageChangeRm(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObjRm.pageNo = pageNo;\n    this.paginationObjRm.pageSize = pageSize;\n    this.selectedRooms = [];\n    this.loadAllRoom();\n  }\n  onSortRm(event) {\n    // this.isSortedRm = true;\n  }\n  onInnerFilterRm(event) {\n    this.isSortedRm = false;\n    setTimeout(() => {\n      if (this.isFilteredRm && !this.isSortedRm) {\n        this.isSortedRm = false;\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteriaRm = {};\n            if (field == \"blBlCode\") {\n              filterCriteriaRm = {\n                fieldName: 'bl.blCode',\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"flFlCode\") {\n              filterCriteriaRm = {\n                fieldName: 'fl.flCode',\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == 'rmcatRmCat') {\n              filterCriteriaRm = {\n                fieldName: 'rmcat.rmCat',\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == 'rmtypeRmType') {\n              filterCriteriaRm = {\n                fieldName: 'rmtype.rmType',\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              filterCriteriaRm = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n            this.updateFilterCriteriaListRm(filterCriteriaRm);\n          }\n        });\n        this.paginationObjRm.pageNo = 0;\n        this.selectedRooms = [];\n        this.loadAllRoom();\n      }\n      this.isFilteredRm = true;\n    }, 0);\n  }\n  updateFilterCriteriaListRm(filterCriteria) {\n    let index = this.filterCriteriaListRm.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaListRm.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaListRm[index] = filterCriteria;\n      } else {\n        this.filterCriteriaListRm.push(filterCriteria);\n      }\n    }\n  }\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blServ.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    });\n  }\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blServ.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n      this.enumFL = res;\n      this.updateFlList(this.selectedFl);\n    });\n  }\n  searchBl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"blName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndBl();\n  }\n  searchFl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"flName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndFl();\n  }\n  loadSvgDetails() {\n    if (this.viewSvg) {\n      this.svgViewComp.loadByDetails();\n    }\n  }\n  updateBlList(blData) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n  updateFlList(flData) {\n    if (flData.flId) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n    }\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.scrollToEndBl();\n  }\n  onOpenFl() {\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    if (this.selectedBl.blId) {\n      this.filterCriteria = {\n        fieldName: \"bl.blId\",\n        value: this.selectedBl.blId,\n        matchMode: \"equals\",\n        limit: 0,\n        offset: 0\n      };\n    } else {\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n    }\n    this.scrollToEndFl();\n  }\n  static #_ = this.ɵfac = function RmcatRmtypeSvgComponent_Factory(t) {\n    return new (t || RmcatRmtypeSvgComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i4.RmcatService), i0.ɵɵdirectiveInject(i5.MessageService), i0.ɵɵdirectiveInject(i5.ConfirmationService), i0.ɵɵdirectiveInject(i6.EnumService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RmcatRmtypeSvgComponent,\n    selectors: [[\"app-rmcat-rmtype-svg\"]],\n    viewQuery: function RmcatRmtypeSvgComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SvgViewComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 46,\n    vars: 22,\n    consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"view\", \"bindLabel\", \"value\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"margin\", \"5px 5px 0 5px\", \"display\", \"flex\", \"justify-content\", \"flex-end\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"600px\"], [1, \"rmcat-selection-container\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [4, \"ngIf\"], [1, \"room-selection-container\"], [1, \"room-selection-control-container\"], [1, \"room-selection-control-message\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Assign\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Unassign\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"75px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", \"matTooltip\", \"Clear Selection\", \"matTooltipPosition\", \"below\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"style\", \"height:500px;\", 4, \"ngIf\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [\"key\", \"rmcatrmtypesvgMsg\", \"position\", \"top-center\"], [\"key\", \"rmcatrmtypesvgGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"selectionMode\", \"single\", \"scrollHeight\", \"205px\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"scrollable\", \"onRowSelect\", \"onFilter\", \"onSort\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"pSortableColumn\", \"rmCat\"], [\"field\", \"rmCat\"], [\"type\", \"text\", \"field\", \"rmCat\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [1, \"td-class\"], [\"pSortableColumn\", \"rmType\"], [\"field\", \"rmType\"], [\"type\", \"text\", \"field\", \"rmType\", \"display\", \"menu\"], [2, \"height\", \"500px\"], [3, \"svgInputData\", \"onRoomClick\"], [1, \"card\", \"no-file-found\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"480px\", 3, \"value\", \"paginator\", \"rows\", \"selection\", \"rowHover\", \"scrollable\", \"selectionChange\", \"onFilter\", \"onSort\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"blBlCode\"], [\"field\", \"blBlCode\"], [\"type\", \"text\", \"field\", \"blBlCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"flFlCode\"], [\"field\", \"flFlCode\"], [\"type\", \"text\", \"field\", \"flFlCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmCode\"], [\"field\", \"rmCode\"], [\"type\", \"text\", \"field\", \"rmCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmcatRmCat\"], [\"field\", \"rmcatRmCat\"], [\"type\", \"text\", \"field\", \"rmcatRmCat\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmtypeRmType\"], [\"field\", \"rmtypeRmType\"], [\"type\", \"text\", \"field\", \"rmtypeRmType\", \"display\", \"menu\"], [3, \"value\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function RmcatRmtypeSvgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 6);\n        i0.ɵɵlistener(\"change\", function RmcatRmtypeSvgComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.onSelectBlCode($event);\n        })(\"scrollToEnd\", function RmcatRmtypeSvgComponent_Template_ng_select_scrollToEnd_8_listener() {\n          return ctx.scrollToEndBl();\n        })(\"search\", function RmcatRmtypeSvgComponent_Template_ng_select_search_8_listener($event) {\n          return ctx.searchBl($event);\n        })(\"open\", function RmcatRmtypeSvgComponent_Template_ng_select_open_8_listener() {\n          return ctx.onOpenBl();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ng-select\", 7);\n        i0.ɵɵlistener(\"change\", function RmcatRmtypeSvgComponent_Template_ng_select_change_13_listener($event) {\n          return ctx.onSelectFlCode($event);\n        })(\"scrollToEnd\", function RmcatRmtypeSvgComponent_Template_ng_select_scrollToEnd_13_listener() {\n          return ctx.scrollToEndFl();\n        })(\"search\", function RmcatRmtypeSvgComponent_Template_ng_select_search_13_listener($event) {\n          return ctx.searchFl($event);\n        })(\"open\", function RmcatRmtypeSvgComponent_Template_ng_select_open_13_listener() {\n          return ctx.onOpenFl();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"td\", 3)(15, \"div\", 4)(16, \"label\", 5);\n        i0.ɵɵtext(17, \"View\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"ng-select\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(19, \"td\", 3);\n        i0.ɵɵelementStart(20, \"td\", 3)(21, \"div\", 9)(22, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function RmcatRmtypeSvgComponent_Template_button_click_22_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function RmcatRmtypeSvgComponent_Template_button_click_23_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(24, \"div\", 0)(25, \"div\", 12)(26, \"div\", 13)(27, \"div\", 14);\n        i0.ɵɵtemplate(28, RmcatRmtypeSvgComponent_div_28_Template, 7, 11, \"div\", 15);\n        i0.ɵɵtemplate(29, RmcatRmtypeSvgComponent_div_29_Template, 7, 11, \"div\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 16)(31, \"div\", 17)(32, \"div\", 18)(33, \"div\");\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, RmcatRmtypeSvgComponent_div_35_Template, 2, 1, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\")(37, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function RmcatRmtypeSvgComponent_Template_button_click_37_listener() {\n          return ctx.onAssigntoRooms();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function RmcatRmtypeSvgComponent_Template_button_click_38_listener() {\n          return ctx.userConfirmUnAssign();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function RmcatRmtypeSvgComponent_Template_button_click_39_listener() {\n          return ctx.onCancelSelection();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(40, RmcatRmtypeSvgComponent_div_40_Template, 2, 1, \"div\", 22);\n        i0.ɵɵtemplate(41, RmcatRmtypeSvgComponent_div_41_Template, 3, 0, \"div\", 23);\n        i0.ɵɵtemplate(42, RmcatRmtypeSvgComponent_div_42_Template, 7, 12, \"div\", 22);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(43, RmcatRmtypeSvgComponent_ngx_spinner_43_Template, 3, 1, \"ngx-spinner\", 24);\n        i0.ɵɵelement(44, \"p-toast\", 25)(45, \"p-confirmDialog\", 26);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumView)(\"searchable\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.showrmcattable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showrmtypetable);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.selectionMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.roomSelectedSvgElementIds.length > 0 || ctx.selectedRooms.length > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(ctx.selectedRmType.length > 0 && (ctx.roomSelectedSvgElementIds.length > 0 || ctx.selectedRooms.length > 0)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !(ctx.roomSelectedSvgElementIds.length > 0 || ctx.selectedRooms.length > 0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !(ctx.roomSelectedSvgElementIds.length > 0 || ctx.selectedRooms.length > 0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayNoFloorPlanInfo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.viewSvg && !ctx.displayNoFloorPlanInfo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    dependencies: [i7.NgIf, i8.NgSelectComponent, i5.PrimeTemplate, i9.Table, i9.SortableColumn, i9.SelectableRow, i9.SortIcon, i9.TableCheckbox, i9.TableHeaderCheckbox, i9.ColumnFilter, i10.ButtonDirective, i11.Toast, i12.ConfirmDialog, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.NgxSpinnerComponent, i13.SvgViewComponent, i14.MatTooltip, i15.Paginator],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  background-color: #879cc9;\\n  color: black;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n  height: 10px !important;\\n}\\n\\n.no-file-found[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 500px;\\n}\\n\\n.td-class[_ngcontent-%COMP%] {\\n  background-color: inherit;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 20px;\\n  margin: 10px auto auto auto;\\n  border: 1px solid black;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-scrollable-body {\\n  overflow-y: auto !important;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-scrollable-header-box {\\n  padding: 0px !important;\\n}\\n\\n.room-selection-control-container[_ngcontent-%COMP%] {\\n  max-height: 80px;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.rmcat-selection-container[_ngcontent-%COMP%] {\\n  width: 22%;\\n}\\n\\n.room-selection-container[_ngcontent-%COMP%] {\\n  width: 77%;\\n  margin: 5px;\\n  height: 550px;\\n}\\n\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n  .room-selection-control-message[_ngcontent-%COMP%] {\\n    max-width: 50%;\\n  }\\n  .rmcat-selection-container[_ngcontent-%COMP%] {\\n    width: 28%;\\n  }\\n  .room-selection-container[_ngcontent-%COMP%] {\\n    width: 70%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvcm1jYXQtcm10eXBlLXN2Zy9ybWNhdC1ybXR5cGUtc3ZnLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vc3JjL3Njc3MvX3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vTWFuYXYlMjBHdXB0YS9Eb3dubG9hZHMvZm1zL2Ztcy9mcm9udGVuZC9mbXNfZnJvbnRlbmQvc3JjL2FwcC91aS9ybWNhdC1ybXR5cGUtc3ZnL3JtY2F0LXJtdHlwZS1zdmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSx5QkNPSztFRE5MLFlBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSx1QkFBQTtBRURKOztBRklBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FFREo7O0FGSUE7RUFDSSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSwyQkFBQTtFQUNBLHVCQUFBO0FFREo7O0FGSUE7RUFDSSwyQkFBQTtBRURKOztBRklBO0VBQ0ksdUJBQUE7QUVESjs7QUZJQTtFQUNJLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLDhCQUFBO0FFREo7O0FGSUE7RUFDSSxVQUFBO0FFREo7O0FGR0E7RUFDSSxVQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7QUVBSjs7QUZHQTtFQUNJO0lBQ0ksY0FBQTtFRUFOO0VGRUU7SUFDSSxVQUFBO0VFQU47RUZFRTtJQUNJLFVBQUE7RUVBTjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnL3NyYy9zY3NzL3ZhcmlhYmxlcyc7XG5cbjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRvb2xiYXI7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLm5vLWZpbGUtZm91bmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogNTAwcHg7XG59XG5cbi50ZC1jbGFzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbjogMTBweCBhdXRvIGF1dG8gYXV0bztcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgfVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtYm9keSB7XG4gICAgb3ZlcmZsb3cteTogYXV0byAhaW1wb3J0YW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtaGVhZGVyLWJveHtcbiAgICBwYWRkaW5nOjBweCAhaW1wb3J0YW50O1xufVxuXG4ucm9vbS1zZWxlY3Rpb24tY29udHJvbC1jb250YWluZXJ7XG4gICAgbWF4LWhlaWdodDogODBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLnJtY2F0LXNlbGVjdGlvbi1jb250YWluZXJ7XG4gICAgd2lkdGg6MjIlO1xufVxuLnJvb20tc2VsZWN0aW9uLWNvbnRhaW5lcntcbiAgICB3aWR0aDo3NyU7XG4gICAgbWFyZ2luOjVweDtcbiAgICBoZWlnaHQ6NTUwcHhcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHRhYmxldFBvdHJhaXRNaW5XaWR0aCkgYW5kIChtYXgtd2lkdGg6JHRhYmxldFBvdHJhaXRNYXhXaWR0aCApe1xuICAgIC5yb29tLXNlbGVjdGlvbi1jb250cm9sLW1lc3NhZ2V7XG4gICAgICAgIG1heC13aWR0aDo1MCU7XG4gICAgfVxuICAgIC5ybWNhdC1zZWxlY3Rpb24tY29udGFpbmVye1xuICAgICAgICB3aWR0aDoyOCU7XG4gICAgfVxuICAgIC5yb29tLXNlbGVjdGlvbi1jb250YWluZXJ7XG4gICAgICAgIHdpZHRoOjcwJTtcbiAgICB9XG59IiwiLy8gVHlwb2dyYXBoeSB2YXJpYWJsZXNcbiRmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4kdXJsOiAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwJztcblxuXG4vLyBUaGVtaW5nIHZhcmlhYmxlXG4kcHJpbWFyeS1jb2xvcjogIzBiOWU2ZDtcbiR3aGl0ZTogI2ZmZmZmZjtcbiRtYWluLWJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4kdGV4dC1zaXplOjEycHg7XG4kdG9vbGJhcjojODc5Y2M5O1xuJHNpZGUtbmF2OiMzNDNhNDA7XG4kbWFuZGF0b3J5RmllbGQ6I2UwMTUxNTtcbiR0YWJCZ0NvbG9yOiAjODc5Y2M5O1xuJHRhYkFjdGl2ZUJnQ29sb3I6ICNmZmZmZmY7XG4kdGFiSGVpZ2h0OiAyLjM1O1xuJHRhYldpZHRoOiA4MHB4O1xuJHRhYkJvcmRlclJhZGl1czogNnB4IDZweCAwIDA7XG4kdGFiQm9yZGVyQm90dG9tOiAzcHggc29saWQgIzg3OWNjOSAhaW1wb3J0YW50O1xuJHRhYkZvbnRDb2xvcjogI2ZmZmZmZjtcbiR0YWJQYW5lQmFja2dyb3VuZENvbG9yOiAjRjBGMkY1O1xuJEFjdGl2ZVRhYkZvbnRDb2xvcjogIzAwMDAwMDtcblxuJHRhYmxldFBvdHJhaXRNaW5XaWR0aDo2MDBweCA7XG4kdGFibGV0UG90cmFpdE1heFdpZHRoOiA5NTlweDtcbiR0YWJsZXRMYW5kc2NhcGVNaW5XaWR0aDogOTYwcHg7XG4kdGFibGV0TGFuZHNwYWNlTWF4V2lkdGg6IDE0MzlweDtcbiIsIjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4NzljYzk7XG4gIGNvbG9yOiBibGFjaztcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gIGhlaWdodDogMTBweCAhaW1wb3J0YW50O1xufVxuXG4ubm8tZmlsZS1mb3VuZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDUwMHB4O1xufVxuXG4udGQtY2xhc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgbWFyZ2luOiAxMHB4IGF1dG8gYXV0byBhdXRvO1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWJvZHkge1xuICBvdmVyZmxvdy15OiBhdXRvICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1oZWFkZXItYm94IHtcbiAgcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5yb29tLXNlbGVjdGlvbi1jb250cm9sLWNvbnRhaW5lciB7XG4gIG1heC1oZWlnaHQ6IDgwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLnJtY2F0LXNlbGVjdGlvbi1jb250YWluZXIge1xuICB3aWR0aDogMjIlO1xufVxuXG4ucm9vbS1zZWxlY3Rpb24tY29udGFpbmVyIHtcbiAgd2lkdGg6IDc3JTtcbiAgbWFyZ2luOiA1cHg7XG4gIGhlaWdodDogNTUwcHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMHB4KSBhbmQgKG1heC13aWR0aDogOTU5cHgpIHtcbiAgLnJvb20tc2VsZWN0aW9uLWNvbnRyb2wtbWVzc2FnZSB7XG4gICAgbWF4LXdpZHRoOiA1MCU7XG4gIH1cbiAgLnJtY2F0LXNlbGVjdGlvbi1jb250YWluZXIge1xuICAgIHdpZHRoOiAyOCU7XG4gIH1cbiAgLnJvb20tc2VsZWN0aW9uLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDcwJTtcbiAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MessageService","forkJoin","SvgRoomData","SvgRoomDataInput","UtilConstant","BuildingFilterInputDTO","FloorFilterInputDTO","SvgViewComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵproperty","rmcat_r10","ɵɵadvance","ɵɵtextInterpolate","rmCat","ɵɵstyleProp","highlightColor","ɵɵattribute","ɵɵlistener","RmcatRmtypeSvgComponent_div_28_Template_p_table_onRowSelect_1_listener","$event","ɵɵrestoreView","_r13","ctx_r12","ɵɵnextContext","ɵɵresetView","onrmcatrowselect","RmcatRmtypeSvgComponent_div_28_Template_p_table_onFilter_1_listener","ctx_r14","onInnerFilterRmCat","RmcatRmtypeSvgComponent_div_28_Template_p_table_onSort_1_listener","ctx_r15","onSortRmCat","ɵɵtemplate","RmcatRmtypeSvgComponent_div_28_ng_template_2_Template","RmcatRmtypeSvgComponent_div_28_ng_template_3_Template","RmcatRmtypeSvgComponent_div_28_ng_template_4_Template","RmcatRmtypeSvgComponent_div_28_Template_p_paginator_onPageChange_6_listener","ctx_r16","onPageChangeRmCat","ctx_r0","rmcatdata","rowCount","totalElementsRmCat","paginationObjRmCat","pageNo","pageSize","ɵɵpureFunction0","_c0","rmtype_r20","rmType","RmcatRmtypeSvgComponent_div_29_Template_p_table_onRowSelect_1_listener","_r23","ctx_r22","onrmtyperowselect","RmcatRmtypeSvgComponent_div_29_Template_p_table_onFilter_1_listener","ctx_r24","onInnerFilterRmType","RmcatRmtypeSvgComponent_div_29_Template_p_table_onSort_1_listener","ctx_r25","onSortRmType","RmcatRmtypeSvgComponent_div_29_ng_template_2_Template","RmcatRmtypeSvgComponent_div_29_ng_template_3_Template","RmcatRmtypeSvgComponent_div_29_ng_template_4_Template","RmcatRmtypeSvgComponent_div_29_Template_p_paginator_onPageChange_6_listener","ctx_r26","onPageChangeRmType","ctx_r1","rmtypeData","totalElementsRmType","paginationObjRmType","ɵɵtextInterpolate1","ctx_r2","selectedRoomsMessage","RmcatRmtypeSvgComponent_div_40_Template_app_svg_view_onRoomClick_1_listener","_r28","ctx_r27","roomOnClickListener","ctx_r3","svgInputData","rm_r32","blBlCode","flFlCode","rmCode","rmcatRmCat","rmtypeRmType","RmcatRmtypeSvgComponent_div_42_Template_p_table_selectionChange_1_listener","_r35","ctx_r34","selectedRooms","RmcatRmtypeSvgComponent_div_42_Template_p_table_onFilter_1_listener","ctx_r36","onInnerFilterRm","RmcatRmtypeSvgComponent_div_42_Template_p_table_onSort_1_listener","ctx_r37","onSortRm","RmcatRmtypeSvgComponent_div_42_ng_template_2_Template","RmcatRmtypeSvgComponent_div_42_ng_template_3_Template","RmcatRmtypeSvgComponent_div_42_ng_template_4_Template","RmcatRmtypeSvgComponent_div_42_Template_p_paginator_onPageChange_6_listener","ctx_r38","onPageChangeRm","ctx_r5","allRoomData","totalElementsRm","paginationObjRm","RmcatRmtypeSvgComponent","constructor","blServ","formBuilder","cdr","spinner","rmcatSrv","messageService","confirmationService","enumservice","allBl","enumBL","enumFL","enumAllFL","ROW_COUNT","viewSvg","showSpinner","displayNoFloorPlanInfo","showrmtypetable","selectedRmCat","selectedRmType","selectedRmCatId","selectedRmTypeId","selectedSvgElementIds","roomSelectedSvgElementIds","allSVGRoomsData","selectionMessage","selectionHighlightColor","showrmcattable","limitBl","offsetBl","limitFl","offsetFl","filterCriteria","fieldName","value","matchMode","limit","offset","searchedSvgRoomData","enumView","id","enableAssignButton","enableUnAssignButton","enableClearButton","sortBy","sortOrder","isFilteredRmCat","filterCriteriaListRmCat","isSortedRmCat","isFilteredRmType","filterCriteriaListRmType","isSortedRmType","isFilteredRm","filterCriteriaListRm","isSortedRm","scrollLimit","SCROLL_LIMIT","selectedBl","selectedFl","filterPanel","group","blId","flId","view","ngOnInit","loadAllRmCat","loadNoneCommonAreaEnum","patchValue","loadGridData","onSelectBlCode","setTimeout","onSelectFlCode","event","blData","blNameString","updateBlList","data","paginationDTO","getALLRmcatsPaginated","subscribe","res","content","totalElements","onSearch","show","controls","hide","onClear","svgelid","elementIdName","startsWith","substring","length","includes","push","forEach","svgRoomData","svgData","svgElementId","roomElementId","highlightRoom","color","roomColor","detectChanges","svgViewComp","loadByDetails","onAssigntoRooms","clear","saveRoomData","saveRequests","matchingObj","find","rm","room","rmcatId","rmtypeId","updateRoomProp","add","key","severity","summary","detail","error","console","userConfirmUnAssign","confirm","message","header","icon","accept","onUnAssigntoRooms","loadRmType","filterDto","getRmTypeListPaginated","onCancelSelection","loadAllRoom","getRmListByPagination","filter","each","commonAreaType","commonAreaTypeNoneEnumValue","getEnums","commonareaEnumList","t","tableName","toLocaleUpperCase","enumValue","enumKey","first","rows","Object","keys","filters","field","filterValue","undefined","filterCriteriaRmCat","updateFilterCriteriaListRmCat","index","findIndex","item","splice","filterCriteriaRmType","updateFilterCriteriaListRmType","filterCriteriaRm","updateFilterCriteriaListRm","scrollToEndBl","getALLBuildingByScroll","scrollToEndFl","getALLFloorByScroll","updateFlList","searchBl","term","searchFl","loadSvgDetails","unshift","flData","onOpenBl","onOpenFl","_","ɵɵdirectiveInject","i1","BuildingService","i2","UntypedFormBuilder","ChangeDetectorRef","i3","NgxSpinnerService","i4","RmcatService","i5","ConfirmationService","i6","EnumService","_2","selectors","viewQuery","RmcatRmtypeSvgComponent_Query","rf","ctx","decls","vars","consts","template","RmcatRmtypeSvgComponent_Template","RmcatRmtypeSvgComponent_Template_ng_select_change_8_listener","RmcatRmtypeSvgComponent_Template_ng_select_scrollToEnd_8_listener","RmcatRmtypeSvgComponent_Template_ng_select_search_8_listener","RmcatRmtypeSvgComponent_Template_ng_select_open_8_listener","RmcatRmtypeSvgComponent_Template_ng_select_change_13_listener","RmcatRmtypeSvgComponent_Template_ng_select_scrollToEnd_13_listener","RmcatRmtypeSvgComponent_Template_ng_select_search_13_listener","RmcatRmtypeSvgComponent_Template_ng_select_open_13_listener","RmcatRmtypeSvgComponent_Template_button_click_22_listener","RmcatRmtypeSvgComponent_Template_button_click_23_listener","RmcatRmtypeSvgComponent_div_28_Template","RmcatRmtypeSvgComponent_div_29_Template","RmcatRmtypeSvgComponent_div_35_Template","RmcatRmtypeSvgComponent_Template_button_click_37_listener","RmcatRmtypeSvgComponent_Template_button_click_38_listener","RmcatRmtypeSvgComponent_Template_button_click_39_listener","RmcatRmtypeSvgComponent_div_40_Template","RmcatRmtypeSvgComponent_div_41_Template","RmcatRmtypeSvgComponent_div_42_Template","RmcatRmtypeSvgComponent_ngx_spinner_43_Template","valid"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\rmcat-rmtype-svg\\rmcat-rmtype-svg.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\rmcat-rmtype-svg\\rmcat-rmtype-svg.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { forkJoin } from 'rxjs';\nimport { PaginationObj } from 'src/app/model/pagination-model';\nimport { SvgElementOnClickData } from 'src/app/model/svgelementonclickdata.interface';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { SvgRoomDataInput } from 'src/app/model/svgroomdatainput.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { RmcatService } from 'src/app/services/rmcat.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from '../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../background-loc/model/DTO/FloorFilterInputDTO.model';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\n\n@Component({\n  selector: 'app-rmcat-rmtype-svg',\n  templateUrl: './rmcat-rmtype-svg.component.html',\n  styleUrls: ['./rmcat-rmtype-svg.component.scss'],\n  providers: [MessageService]\n})\nexport class RmcatRmtypeSvgComponent implements OnInit {\n  filterPanel!: UntypedFormGroup;\n  allBl: any[] = [];\n  enumBL: BuildingFilterInputDTO[] = [];\n  enumFL: FloorFilterInputDTO[] = [];\n  enumAllFL: FloorFilterInputDTO[] = [];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  viewSvg: boolean = false;\n  showSpinner: boolean = false;\n  displayNoFloorPlanInfo: boolean = false;\n  @ViewChild(SvgViewComponent, { static: false }) svgViewComp!: SvgViewComponent;\n  rmcatdata:any[]=[];\n  rmtypeData:any[]=[];\n  showrmtypetable:boolean = false;\n  selectedRmCat:string='';\n  selectedRmType:string='';\n  selectedRmCatId:number|null=null;\n  selectedRmTypeId:number|null=null;\n  selectedSvgElementIds :any[]=[];\n  roomSelectedSvgElementIds :any[]=[];\n  allSVGRoomsData:any[]=[];\n  selectionMessage:string='';\n  selectionHighlightColor:string='';\n  selectedRoomsMessage:string='';\n  allRoomData:any[]=[];\n  selectedRooms:any[]=[];\n  commonAreaTypeNoneEnumValue!: number;\n  showrmcattable: boolean = false;\n  limitBl: number = 0;\n  offsetBl: number = 0;\n  limitFl: number = 0;\n  offsetFl: number = 0;\n  filterCriteria: any = {\n    fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n  };\n  searchedSvgRoomData: SvgRoomData = new SvgRoomData(null, null, \"\", []);\n  enumView = [\n    {\n      id: 'list',\n      value: 'List',\n    },\n    {\n      id: 'svg',\n      value: 'SVG'\n    }\n  ]\n  enableAssignButton: boolean = false;\n  enableUnAssignButton: boolean = false;\n  enableClearButton: boolean = false;\n  paginationObjRmCat: PaginationObj = {\n    pageNo: 0,\n    pageSize: this.rowCount,\n    sortBy: [\"rmcatId\"],\n    sortOrder: \"ASC\"\n  }\n  totalElementsRmCat: number = 0;\n  isFilteredRmCat: boolean = false;\n  filterCriteriaListRmCat: any[] = [];\n  isSortedRmCat: boolean = false;\n  paginationObjRmType: PaginationObj = {\n    pageNo: 0,\n    pageSize: this.rowCount,\n    sortBy: [\"rmtypeId\"],\n    sortOrder: \"ASC\"\n  }\n  totalElementsRmType: number = 0;\n  isFilteredRmType: boolean = false;\n  filterCriteriaListRmType: any[] = [];\n  isSortedRmType: boolean = false;\n  paginationObjRm: PaginationObj = {\n    pageNo: 0,\n    pageSize: this.rowCount,\n    sortBy: [\"rmId\"],\n    sortOrder: \"ASC\"\n  }\n  totalElementsRm:number = 0;\n  isFilteredRm:boolean = false;\n  filterCriteriaListRm :any[]=[];\n  isSortedRm : boolean = false;\n  scrollLimit:number = UtilConstant.SCROLL_LIMIT;\n  svgInputData :SvgRoomDataInput = new SvgRoomDataInput(null,null,null,false,false,false,false,false,\"\",null,\"\",\"\",null,null);\n  selectedBl: any = {};\n  selectedFl: any = {};\n  constructor(\n    private blServ: BuildingService,\n    private formBuilder: UntypedFormBuilder,\n    private cdr: ChangeDetectorRef,\n    private spinner: NgxSpinnerService,\n    private rmcatSrv: RmcatService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private enumservice: EnumService,\n  ) {\n    this.filterPanel = this.formBuilder.group({\n      blId: [null],\n      flId: [null],\n      view: [null],\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadAllRmCat();\n    this.loadNoneCommonAreaEnum();\n    this.filterPanel.patchValue({\n      view: this.enumView[0].id\n    });\n    this.showrmcattable = true;\n    this.loadGridData();\n  }\n\n \n\n  onSelectBlCode($event: any) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        flId: null,\n      });\n    }, 10);\n    if ($event.blId != null) {\n      this.selectedBl = $event;\n      this.selectedFl = {};\n    }\n    else {\n     this.selectedBl = {};\n     this.selectedBl = {};\n    }\n  }\n\n  onSelectFlCode(event: any) {\n    if (event.flId != null) {\n      this.selectedFl = event;\n      const blData: any = {\n        blId: event.blId,\n        blNameString: event.blNameString,\n      }\n      this.selectedBl = blData;\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n        });\n      }, 10);\n    }\n    else {\n\n    }\n  }\n\n  loadAllRmCat() {\n    let data = { paginationDTO: this.paginationObjRmCat, filterCriteria: this.filterCriteriaListRmCat };\n    this.isFilteredRmCat = false;\n    this.rmcatSrv.getALLRmcatsPaginated(data).subscribe((res: any) => {\n      if (res) {\n        this.isFilteredRmCat = false;\n        this.rmcatdata = res.content ? res.content : [];\n        this.totalElementsRmCat = res.totalElements ? res.totalElements : 0;\n      }\n      else {\n        this.rmcatdata = [];\n      }\n    })\n  }\n\n  onSearch() {\n    this.showrmcattable = false;\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.selectedSvgElementIds = [];\n    this.roomSelectedSvgElementIds = [];\n    this.displayNoFloorPlanInfo = false;\n    this.showrmtypetable = false;\n    this.selectedRmCat = '';\n    this.selectedRmType = '';\n    this.selectedRmCatId = null;\n    this.selectedRmTypeId = null;\n    this.viewSvg = false;\n    this.selectedRooms = [];\n    this.showSpinner = true;\n    this.spinner.show();\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    let view = this.filterPanel.controls.view.value;\n    if(view=='svg'){\n      if(blId!=null && flId !=null){\n        this.svgInputData = new SvgRoomDataInput(blId,flId,null,false,false,false,true,false,\"\",null,\"\",\"rmcat-rmtype\",null,null);\n        this.selectionMessage = \"Please select a Room Category\";\n        this.viewSvg = true;\n      }else{\n        this.spinner.hide();\n        this.showSpinner = false;\n        this.selectionMessage = \"Please select Building and Floor\";\n        this.displayNoFloorPlanInfo = true;\n      }\n    } else {\n      this.loadGridData();\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.selectionMessage = \"Please select a Room Category\";\n    }\n    this.showrmcattable= true;\n  }\n\n  onClear() {\n    this.filterCriteria = {\n      fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n    };\n    this.viewSvg = false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.showrmcattable = false;\n    this.selectedSvgElementIds =[];\n    this.roomSelectedSvgElementIds=[];\n    this.selectedRooms=[];\n    this.svgInputData = new SvgRoomDataInput(null,null,null,false,false,false,false,false,\"\",null,\"\",\"\",null,null);\n    this.searchedSvgRoomData =  new SvgRoomData(null,null,\"\",[]);\n    this.showrmtypetable= false;\n    this.selectedRmCat='';\n    this.selectedRmType='';\n    this.selectedRmCatId=null;\n    this.selectedRmTypeId=null;\n    this.allSVGRoomsData=[];\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null,\n      view: this.enumView[0].id\n    });\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.paginationObjRmCat = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmcatId\"],\n      sortOrder: \"ASC\"\n    }\n    this.totalElementsRmCat = 0;\n    this.filterCriteriaListRmCat = [];\n    this.isFilteredRmCat = false;\n    this.paginationObjRmType = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmtypeId\"],\n      sortOrder: \"ASC\"\n    }\n    this.totalElementsRmType = 0;\n    this.filterCriteriaListRmType = [];\n    this.isFilteredRmType = false;\n    this.paginationObjRm = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"rmId\"],\n      sortOrder: \"ASC\"\n    }\n    this.totalElementsRm = 0;\n    this.filterCriteriaListRm = [];\n    this.isFilteredRm = false;\n    this.loadAllRmCat();\n    this.onSearch();\n   this.selectedBl = {};\n   this.selectedFl = {};\n  }\n\n  roomOnClickListener(data: SvgElementOnClickData) {\n    this.selectedRoomsMessage = '';\n    let svgelid ='';\n    if(data.elementIdName!=null && data.elementIdName!=\"\"){\n      if(data.elementIdName.startsWith(\"label\")){\n        svgelid = data.elementIdName.substring(\"label_\".length)\n      }else{\n        svgelid = data.elementIdName;\n      }\n      if(!this.selectedSvgElementIds.includes(svgelid)){\n        this.selectedSvgElementIds.push(svgelid);\n      }\n      this.selectedSvgElementIds.forEach((id:string)=>{\n        data.svgRoomData.content.forEach((svgData:any)=>{\n          if(svgData.svgElementId.roomElementId==id){\n            this.roomSelectedSvgElementIds.push(id);\n            if(this.selectionHighlightColor.length>0){\n              svgData.highlightRoom=true;\n              svgData.color.roomColor=this.selectionHighlightColor;\n            }else{\n              svgData.highlightRoom=false;\n              svgData.color.roomColor=\"\";\n            }\n            if(this.selectedRoomsMessage.length==0){\n              this.selectedRoomsMessage += \"Selected Rooms : \" + svgData.rmCode;\n            }else{\n              this.selectedRoomsMessage += \", \"+svgData.rmCode;\n            }\n          }\n        })\n      })\n      this.allSVGRoomsData = [...data.allSVGRoomsData]\n      this.cdr.detectChanges();\n      this.svgViewComp.loadByDetails();\n    }\n  }\n\n  onAssigntoRooms(){\n    this.messageService.clear();\n    let saveRoomData: any[] = [];\n    const saveRequests: any[] = [];\n    if (this.viewSvg) {\n      this.roomSelectedSvgElementIds.forEach((id: string) => {\n        const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId == id);\n        if (matchingObj) {\n          saveRoomData.push(matchingObj);\n        }\n      })\n      saveRoomData.forEach((room: any) => {\n        if (this.selectedRmCatId != null) {\n          room.rmcatId = this.selectedRmCatId;\n        }\n        if (this.selectedRmTypeId != null) {\n          room.rmtypeId = this.selectedRmTypeId;\n        } else {\n          room.rmtypeId = null;\n        }\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      })\n    } else {\n      saveRoomData = [...this.selectedRooms];\n      saveRoomData.forEach((room: any) => {\n        if (this.selectedRmCatId != null) {\n          room.rmcatId = this.selectedRmCatId;\n        }\n        if (this.selectedRmTypeId != null) {\n          room.rmtypeId = this.selectedRmTypeId;\n        } else {\n          room.rmtypeId = null;\n        }\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      })\n    }\n    forkJoin(saveRequests)\n      .subscribe((res: any[]) => {\n        this.messageService.add({ key: 'rmcatrmtypesvgMsg', severity: 'success', summary: 'Record updated', detail: 'Room updated successfully' });\n        this.onSearch();\n      }, (error: any) => {\n        console.error('Failed to save records:', error);\n      });\n  }\n\n  userConfirmUnAssign(): void {\n    this.confirmationService.confirm({\n      message: 'This will remove the selected room\\'s category and type. Do you wish to continue?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.onUnAssigntoRooms();\n      },\n      key: \"rmcatrmtypesvgGrid\"\n    });\n  }\n\n  onrmcatrowselect(event:any){\n    this.rmtypeData=[];\n    this.selectedSvgElementIds=[];\n    this.roomSelectedSvgElementIds=[];\n    this.selectedRooms=[];\n    this.showrmtypetable = true;\n    this.selectedRmCat = event.data.rmCat;\n    this.selectedRmCatId = event.data.rmcatId;\n    this.selectionMessage = \"Please select a Room Type\";\n    this.loadRmType(event.data.rmcatId);\n    this.cdr.detectChanges();\n  }\n\n  loadRmType(rmcatId: number | null) {\n    let data = {\n      rmcatId: rmcatId,\n      filterDto: { paginationDTO: this.paginationObjRmType, filterCriteria: this.filterCriteriaListRmType }\n    }\n    this.isFilteredRmType = false;\n    this.rmcatSrv.getRmTypeListPaginated(data).subscribe((res: any) => {\n      if (res) {\n        this.isFilteredRmType = false;\n        this.rmtypeData = res.content ? res.content : [];\n        this.totalElementsRmType = res.totalElements ? res.totalElements : 0;\n      }\n    })\n  }\n\n  onrmtyperowselect(event: any) {\n    this.selectedRmType = event.data.rmType;\n    this.selectedRmTypeId = event.data.rmtypeId;\n    this.selectionHighlightColor = event.data.highlightColor;\n    this.selectionMessage =\"Please select rooms to be assigned for \"+this.selectedRmCat+\" | \"+ this.selectedRmType;\n    this.selectedSvgElementIds=[];\n    this.roomSelectedSvgElementIds=[];\n    this.selectedRooms=[];\n    this.cdr.detectChanges();\n  }\n\n  onCancelSelection() {\n    if (this.viewSvg) {\n      this.onSearch();\n    } else {\n      this.selectedRooms = [];\n    }\n  }\n\n  onUnAssigntoRooms(){\n     this.messageService.clear();\n    let saveRoomData:any[]=[];\n    const saveRequests:any[] = [];\n    if(this.viewSvg){\n      this.roomSelectedSvgElementIds.forEach((id:string)=>{\n        const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId ==id);\n        if(matchingObj){\n          saveRoomData.push(matchingObj);\n        }\n      })\n      saveRoomData.forEach((room: any) => {\n        room.rmcatId = null;\n        room.rmtypeId = null;\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      })\n    } else {\n      saveRoomData = [...this.selectedRooms];\n      saveRoomData.forEach((room: any) => {\n        room.rmcatId = null;\n        room.rmtypeId = null;\n        saveRequests.push(this.blServ.updateRoomProp(room));\n      })\n    }\n    forkJoin(saveRequests)\n      .subscribe((res: any[]) => {\n        this.messageService.add({ key: 'rmcatrmtypesvgMsg', severity: 'success', summary: 'Record updated', detail: 'Room updated successfully' });\n        this.onSearch();\n      }, (error: any) => {\n        console.error('Failed to save records:', error);\n      });\n  }\n\n  loadGridData() {\n    this.loadAllRoom();\n    this.selectionMessage = \"Please select a Room Category\";\n  }\n\n  loadAllRoom() {\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    let data = {\n      blId: blId,\n      flId: flId,\n      filterDto: { paginationDTO: this.paginationObjRm, filterCriteria: this.filterCriteriaListRm }\n    }\n    this.isFilteredRm = false;\n    this.blServ.getRmListByPagination(data).subscribe((res: any) => {\n      this.isFilteredRm = false;\n      let content = res.content ? res.content : [];\n      this.totalElementsRm = res.totalElements ? res.totalElements : 0;\n      this.allRoomData = content.filter((each: any) => each.commonAreaType == this.commonAreaTypeNoneEnumValue);\n    });\n  }\n\n  loadNoneCommonAreaEnum() {\n    this.enumservice.getEnums().subscribe((res: any) => {\n      let commonareaEnumList = res.filter((t: any) =>\n        t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() &&\n        t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase() &&\n        t.enumValue.toLocaleUpperCase() === 'None'.toLocaleUpperCase());\n      this.commonAreaTypeNoneEnumValue = commonareaEnumList[0].enumKey;\n    })\n  }\n\n  onPageChangeRmCat(event: any) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObjRmCat.pageNo = pageNo;\n    this.paginationObjRmCat.pageSize = pageSize;\n    this.loadAllRmCat();\n  }\n\n  onSortRmCat(event: any) {\n    //this.isSortedRmCat = true;\n  }\n\n  onInnerFilterRmCat(event: any) {\n    this.isSortedRmCat = false;\n    setTimeout(() => {\n      if (this.isFilteredRmCat && !this.isSortedRmCat) {\n        this.isSortedRmCat = false;\n        Object.keys(event.filters).forEach((field) => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteriaRmCat = { fieldName: field, value: filterValue, matchMode: matchMode };\n            this.updateFilterCriteriaListRmCat(filterCriteriaRmCat);\n          }\n        });\n        this.paginationObjRmCat.pageNo = 0;\n        this.loadAllRmCat();\n      }\n      this.isFilteredRmCat = true;\n    }, 0);\n  }\n\n  updateFilterCriteriaListRmCat(filterCriteria: any) {\n    let index = this.filterCriteriaListRmCat.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaListRmCat.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaListRmCat[index] = filterCriteria;\n      } else {\n        this.filterCriteriaListRmCat.push(filterCriteria);\n      }\n    }\n  }\n\n  onPageChangeRmType(event: any) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObjRmType.pageNo = pageNo;\n    this.paginationObjRmType.pageSize = pageSize;\n    this.loadRmType(this.selectedRmCatId);\n  }\n\n  onSortRmType(event: any) {\n    // this.isSortedRmType= true;\n  }\n\n  onInnerFilterRmType(event: any) {\n    this.isSortedRmType = false;\n    setTimeout(() => {\n      if (this.isFilteredRmType && !this.isSortedRmType) {\n        this.isSortedRmType = false;\n        Object.keys(event.filters).forEach((field) => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteriaRmType = { fieldName: field, value: filterValue, matchMode: matchMode };\n            this.updateFilterCriteriaListRmType(filterCriteriaRmType);\n          }\n        });\n        this.paginationObjRmType.pageNo = 0;\n        this.loadRmType(this.selectedRmCatId);\n      }\n      this.isFilteredRmType = true;\n    }, 0);\n  }\n\n  updateFilterCriteriaListRmType(filterCriteria: any) {\n    let index = this.filterCriteriaListRmType.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaListRmType.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaListRmType[index] = filterCriteria;\n      } else {\n        this.filterCriteriaListRmType.push(filterCriteria);\n      }\n    }\n  }\n\n  onPageChangeRm(event: any) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObjRm.pageNo = pageNo;\n    this.paginationObjRm.pageSize = pageSize;\n    this.selectedRooms = [];\n    this.loadAllRoom();\n  }\n\n  onSortRm(event: any) {\n    // this.isSortedRm = true;\n  }\n\n  onInnerFilterRm(event: any) {\n    this.isSortedRm = false;\n    setTimeout(() => {\n      if (this.isFilteredRm && !this.isSortedRm) {\n        this.isSortedRm = false;\n        Object.keys(event.filters).forEach((field) => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteriaRm = {};\n            if (field == \"blBlCode\") {\n              filterCriteriaRm = { fieldName: 'bl.blCode', value: filterValue, matchMode: matchMode };\n            } else if (field == \"flFlCode\") {\n              filterCriteriaRm = { fieldName: 'fl.flCode', value: filterValue, matchMode: matchMode };\n            } else if (field == 'rmcatRmCat') {\n              filterCriteriaRm = { fieldName: 'rmcat.rmCat', value: filterValue, matchMode: matchMode };\n            } else if (field == 'rmtypeRmType') {\n              filterCriteriaRm = { fieldName: 'rmtype.rmType', value: filterValue, matchMode: matchMode };\n            } else {\n              filterCriteriaRm = { fieldName: field, value: filterValue, matchMode: matchMode };\n            }\n            this.updateFilterCriteriaListRm(filterCriteriaRm);\n          }\n        });\n        this.paginationObjRm.pageNo = 0;\n        this.selectedRooms = [];\n        this.loadAllRoom();\n      }\n      this.isFilteredRm = true;\n    }, 0);\n  }\n\n  updateFilterCriteriaListRm(filterCriteria: any) {\n    let index = this.filterCriteriaListRm.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaListRm.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaListRm[index] = filterCriteria;\n      } else {\n        this.filterCriteriaListRm.push(filterCriteria);\n      }\n    }\n  }\n\n\n\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blServ.getALLBuildingByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    })\n  }\n\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blServ.getALLFloorByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumFL = res;\n      this.updateFlList(this.selectedFl);\n    })\n  }\n\n\n  searchBl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"blName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndBl();\n  }\n\n  searchFl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"flName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndFl();\n  }\n\n  loadSvgDetails() {\n    if (this.viewSvg) {\n      this.svgViewComp.loadByDetails();\n    }\n  }\n\n  updateBlList(blData: any) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  updateFlList(flData: any) {\n    if (flData.flId) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n    }\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n    }\n    this.scrollToEndBl();\n  }\n\n  onOpenFl() {\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    if (this.selectedBl.blId) {\n      this.filterCriteria = { fieldName: \"bl.blId\", value: this.selectedBl.blId, matchMode: \"equals\", limit: 0, offset: 0 }\n    } else {\n      this.filterCriteria = {\n        fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n      };\n    }\n    this.scrollToEndFl();\n  }\n\n}\n","<div class=\"card\">\n    <form [formGroup]=\"filterPanel\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable '>Building </label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\" [searchable]=\"true\"\n                            bindLabel=\"blNameString\" bindValue=\"blId\" (change)=\"onSelectBlCode($event)\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\" (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\" (open)=\"onOpenBl()\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable '>Floor</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\" [searchable]=\"true\"\n                            bindLabel=\"flNameString\" bindValue=\"flId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                            (change)=\"onSelectFlCode($event)\" (scrollToEnd)=\"scrollToEndFl()\" (search)=\"searchFl($event)\" (open)=\"onOpenFl()\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable '>View</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumView\" formControlName=\"view\"\n                            [searchable]=\"true\" bindLabel=\"value\" bindValue=\"id\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\"></td>\n                <td style=\"width: 20%\">\n                    <div style=\"margin: 5px 5px 0 5px;display: flex;justify-content: flex-end;\">\n                        <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple label=\"Search\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </form>\n</div>\n\n\n<div class=\"card\">\n    <div style=\"display: flex; justify-content: space-between;height:600px;\">\n        <div class=\"rmcat-selection-container\">\n            <div style=\"display: flex;flex-direction: column;\">\n                <div *ngIf=\"showrmcattable\">\n                    <p-table [value]=\"rmcatdata\" [paginator]=\"false\" [rows]=\"rowCount\"\n                        styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\" [rowHover]=\"true\"\n                        [scrollable]=\"true\" scrollDirection=\"both\" selectionMode=\"single\"\n                        (onRowSelect)=\"onrmcatrowselect($event)\" scrollHeight=\"205px\"\n                        (onFilter)=\"onInnerFilterRmCat($event)\" (onSort)=\"onSortRmCat($event)\">\n                        <ng-template pTemplate=\"header\">\n                            <tr>\n                                <th pSortableColumn=\"rmCat\">\n                                    Room Category <p-sortIcon field=\"rmCat\"></p-sortIcon>\n                                    <p-columnFilter type=\"text\" field=\"rmCat\" display=\"menu\"></p-columnFilter>\n                                </th>\n                                <th>Highlight Color</th>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-rmcat>\n                            <tr [pSelectableRow]=\"rmcat\">\n                                <td>{{rmcat.rmCat}}</td>\n                                <td>\n                                    <div [style.background-color]=\"rmcat.highlightColor\" class=\"td-class\">\n                                    </div>\n                                </td>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"emptymessage\" let-columns>\n                            <tr>\n                                <td [attr.colspan]=\"2\">\n                                    No records found\n                                </td>\n                            </tr>\n                        </ng-template>\n                    </p-table>\n                    <div class=\"paginator\">\n                        <p-paginator [rows]=\"rowCount\" [totalRecords]=\"totalElementsRmCat\"\n                            (onPageChange)=\"onPageChangeRmCat($event)\" [first]=\"paginationObjRmCat.pageNo * paginationObjRmCat.pageSize\"\n                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                            [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n                    </div>\n                </div>\n                <div *ngIf=\"showrmtypetable\">\n                    <p-table [value]=\"rmtypeData\" [paginator]=\"false\" [rows]=\"rowCount\"\n                        styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\" [rowHover]=\"true\"\n                        [scrollable]=\"true\" scrollDirection=\"both\" selectionMode=\"single\"\n                        (onRowSelect)=\"onrmtyperowselect($event)\" scrollHeight=\"205px\"\n                        (onFilter)=\"onInnerFilterRmType($event)\" (onSort)=\"onSortRmType($event)\">\n                        <ng-template pTemplate=\"header\">\n                            <tr>\n                                <th pSortableColumn=\"rmType\">\n                                    Room Type <p-sortIcon field=\"rmType\"></p-sortIcon>\n                                    <p-columnFilter type=\"text\" field=\"rmType\" display=\"menu\"></p-columnFilter>\n                                </th>\n                                <th>Highlight Color</th>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-rmtype>\n                            <tr [pSelectableRow]=\"rmtype\">\n                                <td>{{rmtype.rmType}}</td>\n                                <td>\n                                    <div [style.background-color]=\"rmtype.highlightColor\" class=\"td-class\">\n                                    </div>\n                                </td>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"emptymessage\" let-columns>\n                            <tr>\n                                <td [attr.colspan]=\"9\">\n                                    No records found\n                                </td>\n                            </tr>\n                        </ng-template>\n                    </p-table>\n                    <div class=\"paginator\">\n                        <p-paginator [rows]=\"rowCount\" [totalRecords]=\"totalElementsRmType\"\n                            (onPageChange)=\"onPageChangeRmType($event)\" [first]=\"paginationObjRmType.pageNo * paginationObjRmType.pageSize\"\n                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                            [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"room-selection-container\">\n            <div class=\"room-selection-control-container\">\n                <div class=\"room-selection-control-message\">\n                    <div>{{selectionMessage}}</div>\n                    <div *ngIf=\"roomSelectedSvgElementIds.length>0 || selectedRooms.length>0\">\n                        {{selectedRoomsMessage}}\n                    </div>\n                </div>\n                <div>\n                    <button (click)=\"onAssigntoRooms()\" pButton pRipple label=\"Assign\" [disabled]=\"!((selectedRmType.length>0)&&((roomSelectedSvgElementIds.length>0)\n                    || (selectedRooms.length>0)))\" style=\"width: 60px;\"\n                        class=\"p-button-primary p-button-sm pull right\"></button>\n                    <button (click)=\"userConfirmUnAssign()\" pButton pRipple label=\"Unassign\"\n                        [disabled]=\"!((roomSelectedSvgElementIds.length>0)|| (selectedRooms.length>0))\"\n                        style=\"width: 75px; margin-left: 5px;\" class=\"p-button-primary p-button-sm pull right\"></button>\n                    <button (click)=\"onCancelSelection()\" pButton pRipple label=\"Clear\"\n                        [disabled]=\"!((roomSelectedSvgElementIds.length>0)|| (selectedRooms.length>0))\"\n                        style=\"width: 60px; margin-left: 5px;\" class=\"p-button-primary p-button-sm pull right\"\n                        matTooltip=\"Clear Selection\" matTooltipPosition=\"below\"></button>\n                </div>\n            </div>\n            <div *ngIf=\"viewSvg\" style=\"height:500px;\">\n                <app-svg-view  [svgInputData]=\"svgInputData\" (onRoomClick)=\"roomOnClickListener($event)\"></app-svg-view>\n            </div>\n            <div class=\"card no-file-found\" *ngIf=\"displayNoFloorPlanInfo\">\n                <h1>No Floorplan available</h1>\n            </div>\n            <div style=\"height:500px;\" *ngIf=\"!viewSvg && !displayNoFloorPlanInfo\">\n                <p-table [value]=\"allRoomData\" [paginator]=\"false\" [rows]=\"rowCount\" [(selection)]=\"selectedRooms\"\n                    styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\" [rowHover]=\"false\" [scrollable]=\"true\"\n                    scrollDirection=\"both\" scrollHeight=\"480px\" (onFilter)=\"onInnerFilterRm($event)\" (onSort)=\"onSortRm($event)\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width:4rem\">\n                                <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n                            </th>\n                            <th pSortableColumn=\"blBlCode\">\n                                Building Code <p-sortIcon field=\"blBlCode\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"blBlCode\" display=\"menu\"></p-columnFilter>\n                            </th>\n                            <th pSortableColumn=\"flFlCode\">\n                                Floor Code<p-sortIcon field=\"flFlCode\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"flFlCode\" display=\"menu\"></p-columnFilter>\n                            </th>\n                            <th pSortableColumn=\"rmCode\">\n                                Room Code <p-sortIcon field=\"rmCode\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"rmCode\" display=\"menu\"></p-columnFilter>\n                            </th>\n                            <th pSortableColumn=\"rmcatRmCat\">\n                                Room Category <p-sortIcon field=\"rmcatRmCat\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"rmcatRmCat\" display=\"menu\"></p-columnFilter>\n                            </th>\n                            <th pSortableColumn=\"rmtypeRmType\">\n                                Room Type <p-sortIcon field=\"rmtypeRmType\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"rmtypeRmType\" display=\"menu\"></p-columnFilter>\n                            </th>\n\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rm>\n                        <tr [pSelectableRow]=\"rm\">\n                            <td style=\"width:4rem\">\n                                <p-tableCheckbox [value]=\"rm\"></p-tableCheckbox>\n                            </td>\n                            <td>{{rm.blBlCode}}</td>\n                            <td>{{rm.flFlCode}}</td>\n                            <td>{{rm.rmCode}}</td>\n                            <td>{{rm.rmcatRmCat}}</td>\n                            <td>{{rm.rmtypeRmType}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\" let-columns>\n                        <tr>\n                            <td [attr.colspan]=\"9\">\n                                No records found\n                            </td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n                <div class=\"paginator\">\n                    <p-paginator [rows]=\"rowCount\" [totalRecords]=\"totalElementsRm\"\n                        (onPageChange)=\"onPageChangeRm($event)\" [first]=\"paginationObjRm.pageNo * paginationObjRm.pageSize\"\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                        [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#879cc9\" class=\"spinner-color\" type=\"ball-spin-clockwise\"\n    *ngIf=\"showSpinner\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n</ngx-spinner>\n\n<p-toast key=\"rmcatrmtypesvgMsg\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"rmcatrmtypesvgGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}