{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/ui/app-params/services/app-params.service\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"@angular/material/legacy-card\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/confirmdialog\";\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nexport class AddEditFinancialYearComponent {\n  constructor(data, dialog, dialogRef, formBuilder, confirmationService, appParamsService) {\n    this.data = data;\n    this.dialog = dialog;\n    this.dialogRef = dialogRef;\n    this.formBuilder = formBuilder;\n    this.confirmationService = confirmationService;\n    this.appParamsService = appParamsService;\n    this.fromMonthData = [];\n    this.months = [{\n      id: 0,\n      label: 'Make a selection'\n    }, {\n      id: 1,\n      label: \"January\"\n    }, {\n      id: 2,\n      label: \"February\"\n    }, {\n      id: 3,\n      label: \"March\"\n    }, {\n      id: 4,\n      label: \"April\"\n    }, {\n      id: 5,\n      label: \"May\"\n    }, {\n      id: 6,\n      label: \"June\"\n    }, {\n      id: 7,\n      label: \"July\"\n    }, {\n      id: 8,\n      label: \"August\"\n    }, {\n      id: 9,\n      label: \"September\"\n    }, {\n      id: 10,\n      label: \"October\"\n    }, {\n      id: 11,\n      label: \"November\"\n    }, {\n      id: 12,\n      label: \"December\"\n    }];\n    this.yearFormPanel = this.formBuilder.group({\n      fromMonth: [null, [Validators.required]],\n      toMonth: [null],\n      paramId: [null],\n      compId: [null],\n      description: [null],\n      paramValue: [null],\n      isEditable: [null]\n    });\n  }\n  ngOnInit() {\n    this.fromMonthData = this.months;\n    if (this.data.appParams !== null) {\n      setTimeout(() => {\n        this.yearFormPanel.patchValue({\n          paramId: this.data.appParams.paramId,\n          description: this.data.appParams.description,\n          compId: this.data.appParams.compId,\n          isEditable: this.data.appParams.isEditable\n        });\n      }, 0);\n    }\n  }\n  calculateFinancialYear(startingMonth) {\n    const today = new Date(); // Get the current date\n    const currentYear = today.getFullYear(); // Get the current year\n    // Create a new date object for the start of the financial year\n    const financialYearStart = new Date(currentYear, startingMonth - 1, 1);\n    // Get the start day of the financial year\n    const startDay = financialYearStart.getDate();\n    // Create a new date object for the end of the financial year\n    const financialYearEnd = new Date(currentYear + 1, startingMonth - 1, 0);\n    // Get the end day of the financial year\n    const endDay = financialYearEnd.getDate();\n    const endMonth = financialYearEnd.getMonth() + 1;\n    const SelectedEndMonthLable = this.months.find(month => month.id === endMonth);\n    const endMonthLable = SelectedEndMonthLable.label;\n    // Format the start and end dates as full dates\n    const startDate = financialYearStart.toLocaleDateString();\n    const endDate = financialYearEnd.toLocaleDateString();\n    // Return the start and end dates\n    return {\n      startDay,\n      startDate,\n      endDay,\n      endDate,\n      endMonthLable\n    };\n  }\n  onSelectFromMonth(event) {\n    if (event.id !== 0) {\n      const endYearData = this.calculateFinancialYear(event.id);\n      setTimeout(() => {\n        this.yearFormPanel.patchValue({\n          toMonth: endYearData.endMonthLable,\n          paramValue: this.yearFormPanel.value.fromMonth\n        });\n      }, 0);\n    } else {\n      setTimeout(() => {\n        this.yearFormPanel.patchValue({\n          toMonth: null,\n          fromMonth: null,\n          paramValue: null\n        });\n      }, 0);\n    }\n  }\n  confirmDialog() {\n    this.confirmationService.confirm({\n      message: UtilConstant.CANCEL_Msg,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.dialogRef.close(false);\n      },\n      key: \"year\"\n    });\n  }\n  onSave() {\n    if (this.yearFormPanel.valid) {\n      const data = this.yearFormPanel.value;\n      this.appParamsService.saveAppParam(data).subscribe(res => {\n        if (res.status != 202) {\n          this.dialogRef.close(res);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AddEditFinancialYearComponent_Factory(t) {\n    return new (t || AddEditFinancialYearComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.AppParamsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditFinancialYearComponent,\n    selectors: [[\"app-add-edit-financial-year\"]],\n    decls: 22,\n    vars: 11,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [\"id\", \"yearForm\"], [3, \"formGroup\"], [\"width\", \"100%\"], [\"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"fromMonth\", \"bindLabel\", \"label\", \"bindValue\", \"label\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"toMonth\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"readonly\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"key\", \"year\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"]],\n    template: function AddEditFinancialYearComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Edit Financial Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"mat-card\")(4, \"mat-card-content\", 2)(5, \"form\", 3)(6, \"table\", 4)(7, \"tr\")(8, \"td\", 5)(9, \"div\", 6)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"From Month\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ng-select\", 8);\n        i0.ɵɵlistener(\"change\", function AddEditFinancialYearComponent_Template_ng_select_change_12_listener($event) {\n          return ctx.onSelectFromMonth($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"td\", 5)(14, \"div\", 6)(15, \"label\", 7);\n        i0.ɵɵtext(16, \"To Month\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"ng-select\", 9);\n        i0.ɵɵelementEnd()()()()()()()();\n        i0.ɵɵelementStart(18, \"mat-dialog-actions\", 10)(19, \"p-button\", 11);\n        i0.ɵɵlistener(\"click\", function AddEditFinancialYearComponent_Template_p_button_click_19_listener() {\n          return ctx.onSave();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p-button\", 12);\n        i0.ɵɵlistener(\"click\", function AddEditFinancialYearComponent_Template_p_button_click_20_listener() {\n          return ctx.confirmDialog();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"p-confirmDialog\", 13);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.yearFormPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.fromMonthData)(\"searchable\", false);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"readonly\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.yearFormPanel.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(10, _c0));\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.NgSelectComponent, i6.MatLegacyCard, i6.MatLegacyCardContent, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i7.Button, i8.ConfirmDialog],\n    styles: [\"\\n\\n.mat-dialog-title-ext[_ngcontent-%COMP%] {\\n  background-color: #879cc9;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n}\\n\\n.mat-dialog-content-ext[_ngcontent-%COMP%] {\\n  \\n\\n  margin: 0;\\n  padding: 10px;\\n}\\n\\n.mat-dialog-actions-ext[_ngcontent-%COMP%] {\\n  border-top: none;\\n  padding: 3px;\\n  min-height: 36px !important;\\n  margin-bottom: 5px;\\n  margin-right: 15px;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 70px;\\n}\\n\\n.margin-left-20[_ngcontent-%COMP%] {\\n  margin-left: 20px;\\n}\\n\\n.margin-5[_ngcontent-%COMP%] {\\n  margin: 5px !important;\\n}\\n\\n.mat-card[_ngcontent-%COMP%] {\\n  border-radius: 0px;\\n}\\n\\n.mat-expansion-panel[_ngcontent-%COMP%] {\\n  background-color: #879cc9;\\n}\\n\\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n}\\n\\n\\n\\n\\n\\n\\n.mat-card-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n  font-size: 13px;\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header-text[_ngcontent-%COMP%] {\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header[_ngcontent-%COMP%] {\\n  padding: 5px !important;\\n  margin-left: -15px;\\n}\\n\\n.mat-card-content[_ngcontent-%COMP%] {\\n  background-color: white !important;\\n  \\n\\n}\\n\\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\\n  background-color: white !important;\\n}\\n\\n.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%] {\\n  line-height: inherit !important;\\n}\\n\\n.btn-filter[_ngcontent-%COMP%] {\\n  margin-left: 4px;\\n  margin-right: 5px;\\n  width: 50px;\\n  margin-top: 17px;\\n}\\n\\n.btn-ggb-orange[_ngcontent-%COMP%] {\\n  width: 90px !important;\\n}\\n\\n.btn-ggb-default-custom[_ngcontent-%COMP%] {\\n  margin: 16px !important;\\n}\\n\\n.form-field-lable[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  margin-bottom: 0px;\\n  font-weight: 500;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  margin-top: -3px;\\n  padding-left: 5px;\\n}\\n\\n[_ngcontent-%COMP%]::placeholder {\\n  \\n\\n  color: #555;\\n  opacity: 1;\\n  \\n\\n}\\n\\n[_ngcontent-%COMP%]:-ms-input-placeholder {\\n  \\n\\n  color: #555;\\n}\\n\\n[_ngcontent-%COMP%]::-ms-input-placeholder {\\n  \\n\\n  color: #555;\\n}\\n\\n.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%] {\\n  border-radius: 0px !important;\\n}\\n\\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n}\\n\\n.mat-card[_ngcontent-%COMP%] {\\n  padding: 0px;\\n}\\n\\n.mat-card-title[_ngcontent-%COMP%] {\\n  color: white;\\n  letter-spacing: 1px;\\n  font-size: 13px;\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header-text[_ngcontent-%COMP%] {\\n  margin: 0px !important;\\n}\\n\\n.mat-card-header[_ngcontent-%COMP%] {\\n  padding: 5px !important;\\n  margin-left: -15px;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 70px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvZmluYW5jaWFsLXllYXIvd2lkZ2V0cy9hZGQtZWRpdC1maW5jYW5jaWFsLXllYXIvYWRkLWVkaXQtZmluYW5jaWFsLXllYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQUE7QUFFQTtFQUNJLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0FBQUo7O0FBR0E7RUFDSSwrQkFBQTtFQUNBLFNBQUE7RUFDQSxhQUFBO0FBQUo7O0FBR0E7RUFDSSxnQkFBQTtFQUNBLFlBQUE7RUFDQSwyQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUFBSjs7QUFHQTtFQUNJLFlBQUE7RUFDQSxXQUFBO0FBQUo7O0FBR0E7RUFDSSxpQkFBQTtBQUFKOztBQUdBO0VBQ0ksc0JBQUE7QUFBSjs7QUFHQTtFQUNJLGtCQUFBO0FBQUo7O0FBR0E7RUFDSSx5QkFBQTtBQUFKOztBQUdBO0VBQ0ksWUFBQTtFQUNBLG1CQUFBO0FBQUo7O0FBR0E7OztLQUFBO0FBS0E7RUFDSSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7QUFESjs7QUFJQTtFQUNJLHNCQUFBO0FBREo7O0FBSUE7RUFDSSx1QkFBQTtFQUNBLGtCQUFBO0FBREo7O0FBSUE7RUFDSSxrQ0FBQTtFQUNBLGtCQUFBO0FBREo7O0FBSUE7RUFDSSxrQ0FBQTtBQURKOztBQUlBOzs7O0VBSUksK0JBQUE7QUFESjs7QUFJQTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7QUFESjs7QUFJQTtFQUNJLHNCQUFBO0FBREo7O0FBS0E7RUFDSSx1QkFBQTtBQUZKOztBQUtBO0VBQ0ksZUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFGSjs7QUFLQTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7QUFGSjs7QUFNQTtFQUNJLHlDQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0FBSEo7O0FBTUE7RUFDSSw0QkFBQTtFQUNBLFdBQUE7QUFISjs7QUFNQTtFQUNJLG1CQUFBO0VBQ0EsV0FBQTtBQUhKOztBQVNBO0VBQ0ksNkJBQUE7QUFOSjs7QUFTQTtFQUNJLFlBQUE7RUFDQSxtQkFBQTtBQU5KOztBQVNBO0VBQ0ksWUFBQTtBQU5KOztBQVNBO0VBQ0ksWUFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0FBTko7O0FBU0E7RUFDSSxzQkFBQTtBQU5KOztBQVNBO0VBQ0ksdUJBQUE7RUFDQSxrQkFBQTtBQU5KOztBQVNBO0VBQ0ksWUFBQTtFQUNBLFdBQUE7QUFOSiIsInNvdXJjZXNDb250ZW50IjpbIi8qQGltcG9ydCAnL3NyYy9zY3NzL3ZhcmlhYmxlcyc7Ki9cblxuLm1hdC1kaWFsb2ctdGl0bGUtZXh0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODc5Y2M5O1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbn1cblxuLm1hdC1kaWFsb2ctY29udGVudC1leHQge1xuICAgIC8qYm9yZGVyOiB0aGluIGRvdWJsZSAjODc5Y2M5OyovXG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5cbi5tYXQtZGlhbG9nLWFjdGlvbnMtZXh0IHtcbiAgICBib3JkZXItdG9wOiBub25lO1xuICAgIHBhZGRpbmc6IDNweDtcbiAgICBtaW4taGVpZ2h0OiAzNnB4ICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgIG1hcmdpbi1yaWdodDogMTVweDtcbn1cblxuLmFjdGlvbi1idXR0b25zIHtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgd2lkdGg6IDcwcHg7XG59XG5cbi5tYXJnaW4tbGVmdC0yMCB7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cbi5tYXJnaW4tNSB7XG4gICAgbWFyZ2luOiA1cHggIWltcG9ydGFudDtcbn1cblxuLm1hdC1jYXJkIHtcbiAgICBib3JkZXItcmFkaXVzOiAwcHg7XG59XG5cbi5tYXQtZXhwYW5zaW9uLXBhbmVsIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODc5Y2M5O1xufVxuXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xufVxuXG4vKiAubWF0LWNhcmQge1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBib3JkZXI6IHRoaW4gZG91YmxlIHJnYigxODEsIDE1NSwgOTApO1xuICB9ICovXG5cbi5tYXQtY2FyZC10aXRsZSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gICAgbWFyZ2luOiAwcHggIWltcG9ydGFudDtcbn1cblxuLm1hdC1jYXJkLWhlYWRlciB7XG4gICAgcGFkZGluZzogNXB4ICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLWxlZnQ6IC0xNXB4O1xufVxuXG4ubWF0LWNhcmQtY29udGVudCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgICAvKiBwYWRkaW5nOiA1cHg7ICovXG59XG5cbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtYnV0dG9uLFxuLm1hdC1mbGF0LWJ1dHRvbixcbi5tYXQtaWNvbi1idXR0b24sXG4ubWF0LXN0cm9rZWQtYnV0dG9uIHtcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdCAhaW1wb3J0YW50O1xufVxuXG4uYnRuLWZpbHRlciB7XG4gICAgbWFyZ2luLWxlZnQ6IDRweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICB3aWR0aDogNTBweDtcbiAgICBtYXJnaW4tdG9wOiAxN3B4O1xufVxuXG4uYnRuLWdnYi1vcmFuZ2Uge1xuICAgIHdpZHRoOiA5MHB4ICFpbXBvcnRhbnQ7XG59XG5cblxuLmJ0bi1nZ2ItZGVmYXVsdC1jdXN0b20ge1xuICAgIG1hcmdpbjogMTZweCAhaW1wb3J0YW50XG59XG5cbi5mb3JtLWZpZWxkLWxhYmxlIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5mb3JtLWNvbnRyb2wge1xuICAgIG1hcmdpbi10b3A6IC0zcHg7XG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XG59XG5cblxuOjpwbGFjZWhvbGRlciB7XG4gICAgLyogQ2hyb21lLCBGaXJlZm94LCBPcGVyYSwgU2FmYXJpIDEwLjErICovXG4gICAgY29sb3I6ICM1NTU7XG4gICAgb3BhY2l0eTogMTtcbiAgICAvKiBGaXJlZm94ICovXG59XG5cbjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIC8qIEludGVybmV0IEV4cGxvcmVyIDEwLTExICovXG4gICAgY29sb3I6ICM1NTU7XG59XG5cbjo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAvKiBNaWNyb3NvZnQgRWRnZSAqL1xuICAgIGNvbG9yOiAjNTU1O1xufVxuXG5cblxuXG4ubmctc2VsZWN0Lm5nLXNlbGVjdC1zaW5nbGUgLm5nLXNlbGVjdC1jb250YWluZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDBweCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xufVxuXG4ubWF0LWNhcmQge1xuICAgIHBhZGRpbmc6IDBweDtcbn1cblxuLm1hdC1jYXJkLXRpdGxlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgbWFyZ2luOiAwcHggIWltcG9ydGFudDtcbn1cblxuLm1hdC1jYXJkLWhlYWRlci10ZXh0IHtcbiAgICBtYXJnaW46IDBweCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LWNhcmQtaGVhZGVyIHtcbiAgICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDtcbiAgICBtYXJnaW4tbGVmdDogLTE1cHg7XG59XG5cbi5hY3Rpb24tYnV0dG9ucyB7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiA3MHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","MAT_DIALOG_DATA","UtilConstant","AddEditFinancialYearComponent","constructor","data","dialog","dialogRef","formBuilder","confirmationService","appParamsService","fromMonthData","months","id","label","yearFormPanel","group","fromMonth","required","toMonth","paramId","compId","description","paramValue","isEditable","ngOnInit","appParams","setTimeout","patchValue","calculateFinancialYear","startingMonth","today","Date","currentYear","getFullYear","financialYearStart","startDay","getDate","financialYearEnd","endDay","endMonth","getMonth","SelectedEndMonthLable","find","month","endMonthLable","startDate","toLocaleDateString","endDate","onSelectFromMonth","event","endYearData","value","confirmDialog","confirm","message","CANCEL_Msg","header","icon","accept","close","key","onSave","valid","saveAppParam","subscribe","res","status","_","i0","ɵɵdirectiveInject","i1","MatDialog","MatDialogRef","i2","UntypedFormBuilder","i3","ConfirmationService","i4","AppParamsService","_2","selectors","decls","vars","consts","template","AddEditFinancialYearComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddEditFinancialYearComponent_Template_ng_select_change_12_listener","$event","ɵɵelement","AddEditFinancialYearComponent_Template_p_button_click_19_listener","AddEditFinancialYearComponent_Template_p_button_click_20_listener","ɵɵadvance","ɵɵproperty","ɵɵstyleMap","ɵɵpureFunction0","_c0"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/financial-year/widgets/add-edit-fincancial-year/add-edit-financial-year.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/financial-year/widgets/add-edit-fincancial-year/add-edit-financial-year.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AppParamsService } from 'src/app/ui/app-params/services/app-params.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\n\n@Component({\n  selector: 'app-add-edit-financial-year',\n  templateUrl: './add-edit-financial-year.component.html',\n  styleUrls: ['./add-edit-financial-year.component.scss']\n})\nexport class AddEditFinancialYearComponent implements OnInit {\n\n  fromMonthData: any[] = [];\n  yearFormPanel: UntypedFormGroup;\n\n  months: any = [\n    {\n      id: 0,\n      label: 'Make a selection'\n    },\n    {\n      id: 1,\n      label: \"January\"\n    },\n    {\n      id: 2,\n      label: \"February\"\n    },\n    {\n      id: 3,\n      label: \"March\"\n    },\n    {\n      id: 4,\n      label: \"April\"\n    },\n    {\n      id: 5,\n      label: \"May\"\n    },\n    {\n      id: 6,\n      label: \"June\"\n    },\n    {\n      id: 7,\n      label: \"July\"\n    },\n    {\n      id: 8,\n      label: \"August\"\n    },\n    {\n      id: 9,\n      label: \"September\"\n    },\n    {\n      id: 10,\n      label: \"October\"\n    },\n    {\n      id: 11,\n      label: \"November\"\n    },\n    {\n      id: 12,\n      label: \"December\"\n    }\n  ];\n\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef<AddEditFinancialYearComponent>,\n    private formBuilder: UntypedFormBuilder,\n    private confirmationService: ConfirmationService,\n    private appParamsService: AppParamsService,\n  ) {\n    this.yearFormPanel = this.formBuilder.group({\n      fromMonth: [null, [Validators.required]],\n      toMonth: [null],\n      paramId: [null],\n      compId: [null],\n      description: [null],\n      paramValue: [null],\n      isEditable: [null]\n    });\n  }\n\n  ngOnInit(): void {\n    this.fromMonthData = this.months;\n    if (this.data.appParams !== null) {\n      setTimeout(() => {\n        this.yearFormPanel.patchValue({\n          paramId: this.data.appParams.paramId,\n          description: this.data.appParams.description,\n          compId: this.data.appParams.compId,\n          isEditable: this.data.appParams.isEditable\n        })\n      }, 0);\n    }\n  }\n\n  calculateFinancialYear(startingMonth: any) {\n    const today = new Date(); // Get the current date\n    const currentYear = today.getFullYear(); // Get the current year\n\n    // Create a new date object for the start of the financial year\n    const financialYearStart = new Date(currentYear, startingMonth - 1, 1);\n\n    // Get the start day of the financial year\n    const startDay = financialYearStart.getDate();\n\n    // Create a new date object for the end of the financial year\n    const financialYearEnd = new Date(currentYear + 1, startingMonth - 1, 0);\n\n    // Get the end day of the financial year\n    const endDay = financialYearEnd.getDate();\n\n    const endMonth = financialYearEnd.getMonth() + 1;\n\n    const SelectedEndMonthLable = this.months.find((month: any) => month.id === endMonth);\n    const endMonthLable = SelectedEndMonthLable.label;\n    // Format the start and end dates as full dates\n    const startDate = financialYearStart.toLocaleDateString();\n    const endDate = financialYearEnd.toLocaleDateString();\n\n    // Return the start and end dates\n    return {\n      startDay,\n      startDate,\n      endDay,\n      endDate,\n      endMonthLable\n    };\n  }\n\n  onSelectFromMonth(event: any) {\n    if (event.id !== 0) {\n      const endYearData = this.calculateFinancialYear(event.id)\n      setTimeout(() => {\n        this.yearFormPanel.patchValue({\n          toMonth: endYearData.endMonthLable,\n          paramValue: this.yearFormPanel.value.fromMonth\n        })\n      }, 0);\n    } else {\n      setTimeout(() => {\n        this.yearFormPanel.patchValue({\n          toMonth: null,\n          fromMonth: null,\n          paramValue: null\n        })\n      }, 0);\n    }\n  }\n\n  confirmDialog(): void {\n    this.confirmationService.confirm({\n      message: UtilConstant.CANCEL_Msg,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.dialogRef.close(false);\n      },\n      key: \"year\"\n    });\n  }\n\n  onSave() {\n    if (this.yearFormPanel.valid) {\n      const data = this.yearFormPanel.value;\n      this.appParamsService.saveAppParam(data).subscribe((res: any) => {\n        if (res.status != 202) {\n          this.dialogRef.close(res);\n        }\n      })\n\n    }\n  }\n\n}\n","<h2 mat-dialog-title class=\"mat-dialog-title-ext\">Edit Financial Year</h2>\n<mat-dialog-content class=\"mat-typography mat-dialog-content-ext\">\n    <mat-card>\n        <mat-card-content id=\"yearForm\">\n            <form [formGroup]=\"yearFormPanel\">\n                <table width=\"100%\">\n                    <tr>\n                        <td width=\"50%\">\n                            <div class=\"input-label-custom \">\n                                <label class='form-field-lable control-label'>From Month</label>\n                                <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"fromMonthData\"\n                                    formControlName=\"fromMonth\" [searchable]=\"false\" bindLabel=\"label\" bindValue=\"label\"\n                                    placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                                    (change)=\"onSelectFromMonth($event)\">\n                                </ng-select>\n                            </div>\n                        </td>\n                        <td width=\"50%\">\n                            <div class=\"input-label-custom \">\n                                <label class='form-field-lable control-label'>To Month</label>\n                                <ng-select appendTo=\"body\" [clearable]=\"false\" formControlName=\"toMonth\"\n                                    [searchable]=\"false\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                                    [readonly]=\"true\">\n                                </ng-select>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\" class=\"mat-dialog-actions-ext\">\n    <p-button label=\"Save\" icon=\"pi pi-check\" [disabled]=\"!yearFormPanel.valid\" (click)=\"onSave()\"></p-button>\n    <p-button label=\"Cancel\" icon=\"pi pi-times\" styleClass=\"p-button-secondary\" [style]=\"{'margin-left': '.5em'}\"\n        (click)=\"confirmDialog()\"></p-button>\n</mat-dialog-actions>\n<p-confirmDialog key=\"year\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}