{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport let SgServices = /*#__PURE__*/(() => {\n  class SgServices {\n    constructor(sgServices) {\n      this.sgServices = sgServices;\n    }\n    getAll() {\n      return this.sgServices.getAll('sg', 'getSgList');\n    }\n    getScurityGroupPaginated(data) {\n      return this.sgServices.search('sg', 'getSgListPaginated', data);\n    }\n    getSgBySecurityGroupId(securityGroupId) {\n      return this.sgServices.getSingleById(\"sg\", \"getSgBySecurityGroupId\", securityGroupId);\n    }\n    save(data) {\n      return this.sgServices.add('sg', 'save', data);\n    }\n    checkExists(geoupName) {\n      return this.sgServices.getSingleById('sg', 'check', geoupName);\n    }\n    getAssignedSg(data) {\n      return this.sgServices.search('sg', 'getAssignedSg', data);\n    }\n    getUnAssignedSg(data) {\n      return this.sgServices.search('sg', 'getUnAssignedSg', data);\n    }\n    saveUserSecurityGroup(data) {\n      return this.sgServices.add('usg', 'save', data);\n    }\n    deleteUserSecurityGroup(data) {\n      return this.sgServices.add('usg', 'delete', data);\n    }\n    static #_ = this.ɵfac = function SgServices_Factory(t) {\n      return new (t || SgServices)(i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SgServices,\n      factory: SgServices.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SgServices;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}