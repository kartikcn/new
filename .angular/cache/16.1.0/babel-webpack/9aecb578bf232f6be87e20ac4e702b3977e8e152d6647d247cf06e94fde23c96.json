{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, SkipSelf, Optional, Inject, Directive, Input, ContentChildren, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ElementRef, Host, ViewChild, forwardRef, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, merge, combineLatest } from 'rxjs';\nimport { map, mergeMap, filter, mapTo, auditTime, distinctUntilChanged, takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i4 from '@angular/router';\nimport { NavigationEnd, RouterLink } from '@angular/router';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i7 from '@angular/cdk/overlay';\nimport { CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport { POSITION_MAP, getPlacementName } from 'ng-zorro-antd/core/overlay';\nimport * as i3$1 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i5 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i4$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { collapseMotion, zoomBigMotion, slideMotion } from 'ng-zorro-antd/core/animation';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"nz-submenu-title\", \"\"];\nfunction NzSubMenuTitleComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.nzIcon);\n  }\n}\nfunction NzSubMenuTitleComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.nzTitle);\n  }\n}\nfunction NzSubMenuTitleComponent_span_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n}\nfunction NzSubMenuTitleComponent_span_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n  }\n}\nfunction NzSubMenuTitleComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, NzSubMenuTitleComponent_span_3_span_1_Template, 1, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, NzSubMenuTitleComponent_span_3_span_2_Template, 1, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r2.dir);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"rtl\");\n  }\n}\nfunction NzSubMenuTitleComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n}\nconst _c1 = [\"*\"];\nconst _c2 = [\"nz-submenu-inline-child\", \"\"];\nfunction NzSubmenuInlineChildComponent_ng_template_0_Template(rf, ctx) {}\nconst _c3 = [\"nz-submenu-none-inline-child\", \"\"];\nfunction NzSubmenuNoneInlineChildComponent_ng_template_1_Template(rf, ctx) {}\nconst _c4 = [\"nz-submenu\", \"\"];\nfunction NzSubMenuComponent_ng_content_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"!nzTitle\"]);\n  }\n}\nfunction NzSubMenuComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(7);\n    i0.ɵɵproperty(\"mode\", ctx_r2.mode)(\"nzOpen\", ctx_r2.nzOpen)(\"@.disabled\", !!(ctx_r2.noAnimation == null ? null : ctx_r2.noAnimation.nzNoAnimation))(\"nzNoAnimation\", ctx_r2.noAnimation == null ? null : ctx_r2.noAnimation.nzNoAnimation)(\"menuClass\", ctx_r2.nzMenuClassName)(\"templateOutlet\", _r5);\n  }\n}\nfunction NzSubMenuComponent_ng_template_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"subMenuMouseState\", function NzSubMenuComponent_ng_template_4_ng_template_0_Template_div_subMenuMouseState_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.setMouseEnterState($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    const _r5 = i0.ɵɵreference(7);\n    i0.ɵɵproperty(\"theme\", ctx_r7.theme)(\"mode\", ctx_r7.mode)(\"nzOpen\", ctx_r7.nzOpen)(\"position\", ctx_r7.position)(\"nzDisabled\", ctx_r7.nzDisabled)(\"isMenuInsideDropDown\", ctx_r7.isMenuInsideDropDown)(\"templateOutlet\", _r5)(\"menuClass\", ctx_r7.nzMenuClassName)(\"@.disabled\", !!(ctx_r7.noAnimation == null ? null : ctx_r7.noAnimation.nzNoAnimation))(\"nzNoAnimation\", ctx_r7.noAnimation == null ? null : ctx_r7.noAnimation.nzNoAnimation);\n  }\n}\nfunction NzSubMenuComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtemplate(0, NzSubMenuComponent_ng_template_4_ng_template_0_Template, 1, 10, \"ng-template\", 7);\n    i0.ɵɵlistener(\"positionChange\", function NzSubMenuComponent_ng_template_4_Template_ng_template_positionChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onPositionChange($event));\n    });\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"cdkConnectedOverlayPositions\", ctx_r4.overlayPositions)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayWidth\", ctx_r4.triggerWidth)(\"cdkConnectedOverlayOpen\", ctx_r4.nzOpen)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-menu-submenu\");\n  }\n}\nfunction NzSubMenuComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nconst _c5 = [[[\"\", \"title\", \"\"]], \"*\"];\nconst _c6 = [\"[title]\", \"*\"];\nconst _c7 = [\"titleElement\"];\nconst _c8 = [\"nz-menu-group\", \"\"];\nfunction NzMenuGroupComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.nzTitle);\n  }\n}\nfunction NzMenuGroupComponent_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"!nzTitle\"]);\n  }\n}\nconst _c9 = [\"*\", [[\"\", \"title\", \"\"]]];\nconst _c10 = [\"*\", \"[title]\"];\nconst NzIsMenuInsideDropDownToken = new InjectionToken('NzIsInDropDownMenuToken');\nconst NzMenuServiceLocalToken = new InjectionToken('NzMenuServiceLocalToken');\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet MenuService = /*#__PURE__*/(() => {\n  class MenuService {\n    constructor() {\n      /** all descendant menu click **/\n      this.descendantMenuItemClick$ = new Subject();\n      /** child menu item click **/\n      this.childMenuItemClick$ = new Subject();\n      this.theme$ = new BehaviorSubject('light');\n      this.mode$ = new BehaviorSubject('vertical');\n      this.inlineIndent$ = new BehaviorSubject(24);\n      this.isChildSubMenuOpen$ = new BehaviorSubject(false);\n    }\n    onDescendantMenuItemClick(menu) {\n      this.descendantMenuItemClick$.next(menu);\n    }\n    onChildMenuItemClick(menu) {\n      this.childMenuItemClick$.next(menu);\n    }\n    setMode(mode) {\n      this.mode$.next(mode);\n    }\n    setTheme(theme) {\n      this.theme$.next(theme);\n    }\n    setInlineIndent(indent) {\n      this.inlineIndent$.next(indent);\n    }\n    static #_ = this.ɵfac = function MenuService_Factory(t) {\n      return new (t || MenuService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MenuService,\n      factory: MenuService.ɵfac\n    });\n  }\n  return MenuService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzSubmenuService = /*#__PURE__*/(() => {\n  class NzSubmenuService {\n    /**\n     * menu item inside submenu clicked\n     *\n     * @param menu\n     */\n    onChildMenuItemClick(menu) {\n      this.childMenuItemClick$.next(menu);\n    }\n    setOpenStateWithoutDebounce(value) {\n      this.isCurrentSubMenuOpen$.next(value);\n    }\n    setMouseEnterTitleOrOverlayState(value) {\n      this.isMouseEnterTitleOrOverlay$.next(value);\n    }\n    constructor(nzHostSubmenuService, nzMenuService, isMenuInsideDropDown) {\n      this.nzHostSubmenuService = nzHostSubmenuService;\n      this.nzMenuService = nzMenuService;\n      this.isMenuInsideDropDown = isMenuInsideDropDown;\n      this.mode$ = this.nzMenuService.mode$.pipe(map(mode => {\n        if (mode === 'inline') {\n          return 'inline';\n          /** if inside another submenu, set the mode to vertical **/\n        } else if (mode === 'vertical' || this.nzHostSubmenuService) {\n          return 'vertical';\n        } else {\n          return 'horizontal';\n        }\n      }));\n      this.level = 1;\n      this.isCurrentSubMenuOpen$ = new BehaviorSubject(false);\n      this.isChildSubMenuOpen$ = new BehaviorSubject(false);\n      /** submenu title & overlay mouse enter status **/\n      this.isMouseEnterTitleOrOverlay$ = new Subject();\n      this.childMenuItemClick$ = new Subject();\n      this.destroy$ = new Subject();\n      if (this.nzHostSubmenuService) {\n        this.level = this.nzHostSubmenuService.level + 1;\n      }\n      /** close if menu item clicked **/\n      const isClosedByMenuItemClick = this.childMenuItemClick$.pipe(mergeMap(() => this.mode$), filter(mode => mode !== 'inline' || this.isMenuInsideDropDown), mapTo(false));\n      const isCurrentSubmenuOpen$ = merge(this.isMouseEnterTitleOrOverlay$, isClosedByMenuItemClick);\n      /** combine the child submenu status with current submenu status to calculate host submenu open **/\n      const isSubMenuOpenWithDebounce$ = combineLatest([this.isChildSubMenuOpen$, isCurrentSubmenuOpen$]).pipe(map(([isChildSubMenuOpen, isCurrentSubmenuOpen]) => isChildSubMenuOpen || isCurrentSubmenuOpen), auditTime(150), distinctUntilChanged(), takeUntil(this.destroy$));\n      isSubMenuOpenWithDebounce$.pipe(distinctUntilChanged()).subscribe(data => {\n        this.setOpenStateWithoutDebounce(data);\n        if (this.nzHostSubmenuService) {\n          /** set parent submenu's child submenu open status **/\n          this.nzHostSubmenuService.isChildSubMenuOpen$.next(data);\n        } else {\n          this.nzMenuService.isChildSubMenuOpen$.next(data);\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzSubmenuService_Factory(t) {\n      return new (t || NzSubmenuService)(i0.ɵɵinject(NzSubmenuService, 12), i0.ɵɵinject(MenuService), i0.ɵɵinject(NzIsMenuInsideDropDownToken));\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzSubmenuService,\n      factory: NzSubmenuService.ɵfac\n    });\n  }\n  return NzSubmenuService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzMenuItemDirective = /*#__PURE__*/(() => {\n  class NzMenuItemDirective {\n    /** clear all item selected status except this */\n    clickMenuItem(e) {\n      if (this.nzDisabled) {\n        e.preventDefault();\n        e.stopPropagation();\n      } else {\n        this.nzMenuService.onDescendantMenuItemClick(this);\n        if (this.nzSubmenuService) {\n          /** menu item inside the submenu **/\n          this.nzSubmenuService.onChildMenuItemClick(this);\n        } else {\n          /** menu item inside the root menu **/\n          this.nzMenuService.onChildMenuItemClick(this);\n        }\n      }\n    }\n    setSelectedState(value) {\n      this.nzSelected = value;\n      this.selected$.next(value);\n    }\n    updateRouterActive() {\n      if (!this.listOfRouterLink || !this.router || !this.router.navigated || !this.nzMatchRouter) {\n        return;\n      }\n      Promise.resolve().then(() => {\n        const hasActiveLinks = this.hasActiveLinks();\n        if (this.nzSelected !== hasActiveLinks) {\n          this.nzSelected = hasActiveLinks;\n          this.setSelectedState(this.nzSelected);\n          this.cdr.markForCheck();\n        }\n      });\n    }\n    hasActiveLinks() {\n      const isActiveCheckFn = this.isLinkActive(this.router);\n      return this.routerLink && isActiveCheckFn(this.routerLink) || this.listOfRouterLink.some(isActiveCheckFn);\n    }\n    isLinkActive(router) {\n      return link => router.isActive(link.urlTree || '', {\n        paths: this.nzMatchRouterExact ? 'exact' : 'subset',\n        queryParams: this.nzMatchRouterExact ? 'exact' : 'subset',\n        fragment: 'ignored',\n        matrixParams: 'ignored'\n      });\n    }\n    constructor(nzMenuService, cdr, nzSubmenuService, isMenuInsideDropDown, directionality, routerLink, router) {\n      this.nzMenuService = nzMenuService;\n      this.cdr = cdr;\n      this.nzSubmenuService = nzSubmenuService;\n      this.isMenuInsideDropDown = isMenuInsideDropDown;\n      this.directionality = directionality;\n      this.routerLink = routerLink;\n      this.router = router;\n      this.destroy$ = new Subject();\n      this.level = this.nzSubmenuService ? this.nzSubmenuService.level + 1 : 1;\n      this.selected$ = new Subject();\n      this.inlinePaddingLeft = null;\n      this.dir = 'ltr';\n      this.nzDisabled = false;\n      this.nzSelected = false;\n      this.nzDanger = false;\n      this.nzMatchRouterExact = false;\n      this.nzMatchRouter = false;\n      if (router) {\n        this.router.events.pipe(takeUntil(this.destroy$), filter(e => e instanceof NavigationEnd)).subscribe(() => {\n          this.updateRouterActive();\n        });\n      }\n    }\n    ngOnInit() {\n      /** store origin padding in padding */\n      combineLatest([this.nzMenuService.mode$, this.nzMenuService.inlineIndent$]).pipe(takeUntil(this.destroy$)).subscribe(([mode, inlineIndent]) => {\n        this.inlinePaddingLeft = mode === 'inline' ? this.level * inlineIndent : null;\n      });\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n      });\n    }\n    ngAfterContentInit() {\n      this.listOfRouterLink.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateRouterActive());\n      this.updateRouterActive();\n    }\n    ngOnChanges(changes) {\n      if (changes.nzSelected) {\n        this.setSelectedState(this.nzSelected);\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzMenuItemDirective_Factory(t) {\n      return new (t || NzMenuItemDirective)(i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzSubmenuService, 8), i0.ɵɵdirectiveInject(NzIsMenuInsideDropDownToken), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i4.RouterLink, 8), i0.ɵɵdirectiveInject(i4.Router, 8));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzMenuItemDirective,\n      selectors: [[\"\", \"nz-menu-item\", \"\"]],\n      contentQueries: function NzMenuItemDirective_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, RouterLink, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfRouterLink = _t);\n        }\n      },\n      hostVars: 20,\n      hostBindings: function NzMenuItemDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NzMenuItemDirective_click_HostBindingHandler($event) {\n            return ctx.clickMenuItem($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"padding-left\", ctx.dir === \"rtl\" ? null : ctx.nzPaddingLeft || ctx.inlinePaddingLeft, \"px\")(\"padding-right\", ctx.dir === \"rtl\" ? ctx.nzPaddingLeft || ctx.inlinePaddingLeft : null, \"px\");\n          i0.ɵɵclassProp(\"ant-dropdown-menu-item\", ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-item-selected\", ctx.isMenuInsideDropDown && ctx.nzSelected)(\"ant-dropdown-menu-item-danger\", ctx.isMenuInsideDropDown && ctx.nzDanger)(\"ant-dropdown-menu-item-disabled\", ctx.isMenuInsideDropDown && ctx.nzDisabled)(\"ant-menu-item\", !ctx.isMenuInsideDropDown)(\"ant-menu-item-selected\", !ctx.isMenuInsideDropDown && ctx.nzSelected)(\"ant-menu-item-danger\", !ctx.isMenuInsideDropDown && ctx.nzDanger)(\"ant-menu-item-disabled\", !ctx.isMenuInsideDropDown && ctx.nzDisabled);\n        }\n      },\n      inputs: {\n        nzPaddingLeft: \"nzPaddingLeft\",\n        nzDisabled: \"nzDisabled\",\n        nzSelected: \"nzSelected\",\n        nzDanger: \"nzDanger\",\n        nzMatchRouterExact: \"nzMatchRouterExact\",\n        nzMatchRouter: \"nzMatchRouter\"\n      },\n      exportAs: [\"nzMenuItem\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  __decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzDisabled\", void 0);\n  __decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzSelected\", void 0);\n  __decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzDanger\", void 0);\n  __decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzMatchRouterExact\", void 0);\n  __decorate([InputBoolean()], NzMenuItemDirective.prototype, \"nzMatchRouter\", void 0);\n  return NzMenuItemDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzSubMenuTitleComponent = /*#__PURE__*/(() => {\n  class NzSubMenuTitleComponent {\n    constructor(cdr, directionality) {\n      this.cdr = cdr;\n      this.directionality = directionality;\n      this.nzIcon = null;\n      this.nzTitle = null;\n      this.isMenuInsideDropDown = false;\n      this.nzDisabled = false;\n      this.paddingLeft = null;\n      this.mode = 'vertical';\n      this.toggleSubMenu = new EventEmitter();\n      this.subMenuMouseState = new EventEmitter();\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    setMouseState(state) {\n      if (!this.nzDisabled) {\n        this.subMenuMouseState.next(state);\n      }\n    }\n    clickTitle() {\n      if (this.mode === 'inline' && !this.nzDisabled) {\n        this.toggleSubMenu.emit();\n      }\n    }\n    static #_ = this.ɵfac = function NzSubMenuTitleComponent_Factory(t) {\n      return new (t || NzSubMenuTitleComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSubMenuTitleComponent,\n      selectors: [[\"\", \"nz-submenu-title\", \"\"]],\n      hostVars: 8,\n      hostBindings: function NzSubMenuTitleComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NzSubMenuTitleComponent_click_HostBindingHandler() {\n            return ctx.clickTitle();\n          })(\"mouseenter\", function NzSubMenuTitleComponent_mouseenter_HostBindingHandler() {\n            return ctx.setMouseState(true);\n          })(\"mouseleave\", function NzSubMenuTitleComponent_mouseleave_HostBindingHandler() {\n            return ctx.setMouseState(false);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"padding-left\", ctx.dir === \"rtl\" ? null : ctx.paddingLeft, \"px\")(\"padding-right\", ctx.dir === \"rtl\" ? ctx.paddingLeft : null, \"px\");\n          i0.ɵɵclassProp(\"ant-dropdown-menu-submenu-title\", ctx.isMenuInsideDropDown)(\"ant-menu-submenu-title\", !ctx.isMenuInsideDropDown);\n        }\n      },\n      inputs: {\n        nzIcon: \"nzIcon\",\n        nzTitle: \"nzTitle\",\n        isMenuInsideDropDown: \"isMenuInsideDropDown\",\n        nzDisabled: \"nzDisabled\",\n        paddingLeft: \"paddingLeft\",\n        mode: \"mode\"\n      },\n      outputs: {\n        toggleSubMenu: \"toggleSubMenu\",\n        subMenuMouseState: \"subMenuMouseState\"\n      },\n      exportAs: [\"nzSubmenuTitle\"],\n      attrs: _c0,\n      ngContentSelectors: _c1,\n      decls: 6,\n      vars: 4,\n      consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"class\", \"ant-dropdown-menu-submenu-expand-icon\", 3, \"ngSwitch\", 4, \"ngIf\", \"ngIfElse\"], [\"notDropdownTpl\", \"\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-dropdown-menu-submenu-expand-icon\", 3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"left\", \"class\", \"ant-dropdown-menu-submenu-arrow-icon\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"right\", \"class\", \"ant-dropdown-menu-submenu-arrow-icon\", 4, \"ngSwitchDefault\"], [\"nz-icon\", \"\", \"nzType\", \"left\", 1, \"ant-dropdown-menu-submenu-arrow-icon\"], [\"nz-icon\", \"\", \"nzType\", \"right\", 1, \"ant-dropdown-menu-submenu-arrow-icon\"], [1, \"ant-menu-submenu-arrow\"]],\n      template: function NzSubMenuTitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, NzSubMenuTitleComponent_span_0_Template, 1, 1, \"span\", 0);\n          i0.ɵɵtemplate(1, NzSubMenuTitleComponent_ng_container_1_Template, 3, 1, \"ng-container\", 1);\n          i0.ɵɵprojection(2);\n          i0.ɵɵtemplate(3, NzSubMenuTitleComponent_span_3_Template, 3, 2, \"span\", 2);\n          i0.ɵɵtemplate(4, NzSubMenuTitleComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r3 = i0.ɵɵreference(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.nzIcon);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzTitle);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isMenuInsideDropDown)(\"ngIfElse\", _r3);\n        }\n      },\n      dependencies: [i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault, i3.NzIconDirective, i4$1.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzSubMenuTitleComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzSubmenuInlineChildComponent = /*#__PURE__*/(() => {\n  class NzSubmenuInlineChildComponent {\n    constructor(elementRef, renderer, directionality) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.directionality = directionality;\n      this.templateOutlet = null;\n      this.menuClass = '';\n      this.mode = 'vertical';\n      this.nzOpen = false;\n      this.listOfCacheClassName = [];\n      this.expandState = 'collapsed';\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n    }\n    calcMotionState() {\n      if (this.nzOpen) {\n        this.expandState = 'expanded';\n      } else {\n        this.expandState = 'collapsed';\n      }\n    }\n    ngOnInit() {\n      this.calcMotionState();\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        mode,\n        nzOpen,\n        menuClass\n      } = changes;\n      if (mode || nzOpen) {\n        this.calcMotionState();\n      }\n      if (menuClass) {\n        if (this.listOfCacheClassName.length) {\n          this.listOfCacheClassName.filter(item => !!item).forEach(className => {\n            this.renderer.removeClass(this.elementRef.nativeElement, className);\n          });\n        }\n        if (this.menuClass) {\n          this.listOfCacheClassName = this.menuClass.split(' ');\n          this.listOfCacheClassName.filter(item => !!item).forEach(className => {\n            this.renderer.addClass(this.elementRef.nativeElement, className);\n          });\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzSubmenuInlineChildComponent_Factory(t) {\n      return new (t || NzSubmenuInlineChildComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSubmenuInlineChildComponent,\n      selectors: [[\"\", \"nz-submenu-inline-child\", \"\"]],\n      hostAttrs: [1, \"ant-menu\", \"ant-menu-inline\", \"ant-menu-sub\"],\n      hostVars: 3,\n      hostBindings: function NzSubmenuInlineChildComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵsyntheticHostProperty(\"@collapseMotion\", ctx.expandState);\n          i0.ɵɵclassProp(\"ant-menu-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        templateOutlet: \"templateOutlet\",\n        menuClass: \"menuClass\",\n        mode: \"mode\",\n        nzOpen: \"nzOpen\"\n      },\n      exportAs: [\"nzSubmenuInlineChild\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      attrs: _c2,\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"ngTemplateOutlet\"]],\n      template: function NzSubmenuInlineChildComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzSubmenuInlineChildComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.templateOutlet);\n        }\n      },\n      dependencies: [i2.NgTemplateOutlet],\n      encapsulation: 2,\n      data: {\n        animation: [collapseMotion]\n      },\n      changeDetection: 0\n    });\n  }\n  return NzSubmenuInlineChildComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NzSubmenuNoneInlineChildComponent = /*#__PURE__*/(() => {\n  class NzSubmenuNoneInlineChildComponent {\n    constructor(directionality) {\n      this.directionality = directionality;\n      this.menuClass = '';\n      this.theme = 'light';\n      this.templateOutlet = null;\n      this.isMenuInsideDropDown = false;\n      this.mode = 'vertical';\n      this.position = 'right';\n      this.nzDisabled = false;\n      this.nzOpen = false;\n      this.subMenuMouseState = new EventEmitter();\n      this.expandState = 'collapsed';\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n    }\n    setMouseState(state) {\n      if (!this.nzDisabled) {\n        this.subMenuMouseState.next(state);\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    calcMotionState() {\n      if (this.nzOpen) {\n        if (this.mode === 'horizontal') {\n          this.expandState = 'bottom';\n        } else if (this.mode === 'vertical') {\n          this.expandState = 'active';\n        }\n      } else {\n        this.expandState = 'collapsed';\n      }\n    }\n    ngOnInit() {\n      this.calcMotionState();\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        mode,\n        nzOpen\n      } = changes;\n      if (mode || nzOpen) {\n        this.calcMotionState();\n      }\n    }\n    static #_ = this.ɵfac = function NzSubmenuNoneInlineChildComponent_Factory(t) {\n      return new (t || NzSubmenuNoneInlineChildComponent)(i0.ɵɵdirectiveInject(i1.Directionality, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSubmenuNoneInlineChildComponent,\n      selectors: [[\"\", \"nz-submenu-none-inline-child\", \"\"]],\n      hostAttrs: [1, \"ant-menu-submenu\", \"ant-menu-submenu-popup\"],\n      hostVars: 14,\n      hostBindings: function NzSubmenuNoneInlineChildComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseenter\", function NzSubmenuNoneInlineChildComponent_mouseenter_HostBindingHandler() {\n            return ctx.setMouseState(true);\n          })(\"mouseleave\", function NzSubmenuNoneInlineChildComponent_mouseleave_HostBindingHandler() {\n            return ctx.setMouseState(false);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵsyntheticHostProperty(\"@slideMotion\", ctx.expandState)(\"@zoomBigMotion\", ctx.expandState);\n          i0.ɵɵclassProp(\"ant-menu-light\", ctx.theme === \"light\")(\"ant-menu-dark\", ctx.theme === \"dark\")(\"ant-menu-submenu-placement-bottom\", ctx.mode === \"horizontal\")(\"ant-menu-submenu-placement-right\", ctx.mode === \"vertical\" && ctx.position === \"right\")(\"ant-menu-submenu-placement-left\", ctx.mode === \"vertical\" && ctx.position === \"left\")(\"ant-menu-submenu-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        menuClass: \"menuClass\",\n        theme: \"theme\",\n        templateOutlet: \"templateOutlet\",\n        isMenuInsideDropDown: \"isMenuInsideDropDown\",\n        mode: \"mode\",\n        position: \"position\",\n        nzDisabled: \"nzDisabled\",\n        nzOpen: \"nzOpen\"\n      },\n      outputs: {\n        subMenuMouseState: \"subMenuMouseState\"\n      },\n      exportAs: [\"nzSubmenuNoneInlineChild\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      attrs: _c3,\n      decls: 2,\n      vars: 16,\n      consts: [[3, \"ngClass\"], [3, \"ngTemplateOutlet\"]],\n      template: function NzSubmenuNoneInlineChildComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, NzSubmenuNoneInlineChildComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-dropdown-menu\", ctx.isMenuInsideDropDown)(\"ant-menu\", !ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-vertical\", ctx.isMenuInsideDropDown)(\"ant-menu-vertical\", !ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-sub\", ctx.isMenuInsideDropDown)(\"ant-menu-sub\", !ctx.isMenuInsideDropDown)(\"ant-menu-rtl\", ctx.dir === \"rtl\");\n          i0.ɵɵproperty(\"ngClass\", ctx.menuClass);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.templateOutlet);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgTemplateOutlet],\n      encapsulation: 2,\n      data: {\n        animation: [zoomBigMotion, slideMotion]\n      },\n      changeDetection: 0\n    });\n  }\n  return NzSubmenuNoneInlineChildComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst listOfVerticalPositions = [POSITION_MAP.rightTop, POSITION_MAP.right, POSITION_MAP.rightBottom, POSITION_MAP.leftTop, POSITION_MAP.left, POSITION_MAP.leftBottom];\nconst listOfHorizontalPositions = [POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight, POSITION_MAP.topRight, POSITION_MAP.topLeft];\nlet NzSubMenuComponent = /*#__PURE__*/(() => {\n  class NzSubMenuComponent {\n    /** set the submenu host open status directly **/\n    setOpenStateWithoutDebounce(open) {\n      this.nzSubmenuService.setOpenStateWithoutDebounce(open);\n    }\n    toggleSubMenu() {\n      this.setOpenStateWithoutDebounce(!this.nzOpen);\n    }\n    setMouseEnterState(value) {\n      this.isActive = value;\n      if (this.mode !== 'inline') {\n        this.nzSubmenuService.setMouseEnterTitleOrOverlayState(value);\n      }\n    }\n    setTriggerWidth() {\n      if (this.mode === 'horizontal' && this.platform.isBrowser && this.cdkOverlayOrigin && this.nzPlacement === 'bottomLeft') {\n        /** TODO: fast dom **/\n        this.triggerWidth = this.cdkOverlayOrigin.nativeElement.getBoundingClientRect().width;\n      }\n    }\n    onPositionChange(position) {\n      const placement = getPlacementName(position);\n      if (placement === 'rightTop' || placement === 'rightBottom' || placement === 'right') {\n        this.position = 'right';\n      } else if (placement === 'leftTop' || placement === 'leftBottom' || placement === 'left') {\n        this.position = 'left';\n      }\n    }\n    constructor(nzMenuService, cdr, nzSubmenuService, platform, isMenuInsideDropDown, directionality, noAnimation) {\n      this.nzMenuService = nzMenuService;\n      this.cdr = cdr;\n      this.nzSubmenuService = nzSubmenuService;\n      this.platform = platform;\n      this.isMenuInsideDropDown = isMenuInsideDropDown;\n      this.directionality = directionality;\n      this.noAnimation = noAnimation;\n      this.nzMenuClassName = '';\n      this.nzPaddingLeft = null;\n      this.nzTitle = null;\n      this.nzIcon = null;\n      this.nzOpen = false;\n      this.nzDisabled = false;\n      this.nzPlacement = 'bottomLeft';\n      this.nzOpenChange = new EventEmitter();\n      this.cdkOverlayOrigin = null;\n      // fix errors about circular dependency\n      // Can't construct a query for the property ... since the query selector wasn't defined\"\n      this.listOfNzSubMenuComponent = null;\n      this.listOfNzMenuItemDirective = null;\n      this.level = this.nzSubmenuService.level;\n      this.destroy$ = new Subject();\n      this.position = 'right';\n      this.triggerWidth = null;\n      this.theme = 'light';\n      this.mode = 'vertical';\n      this.inlinePaddingLeft = null;\n      this.overlayPositions = listOfVerticalPositions;\n      this.isSelected = false;\n      this.isActive = false;\n      this.dir = 'ltr';\n    }\n    ngOnInit() {\n      /** submenu theme update **/\n      this.nzMenuService.theme$.pipe(takeUntil(this.destroy$)).subscribe(theme => {\n        this.theme = theme;\n        this.cdr.markForCheck();\n      });\n      /** submenu mode update **/\n      this.nzSubmenuService.mode$.pipe(takeUntil(this.destroy$)).subscribe(mode => {\n        this.mode = mode;\n        if (mode === 'horizontal') {\n          this.overlayPositions = [POSITION_MAP[this.nzPlacement], ...listOfHorizontalPositions];\n        } else if (mode === 'vertical') {\n          this.overlayPositions = listOfVerticalPositions;\n        }\n        this.cdr.markForCheck();\n      });\n      /** inlineIndent update **/\n      combineLatest([this.nzSubmenuService.mode$, this.nzMenuService.inlineIndent$]).pipe(takeUntil(this.destroy$)).subscribe(([mode, inlineIndent]) => {\n        this.inlinePaddingLeft = mode === 'inline' ? this.level * inlineIndent : null;\n        this.cdr.markForCheck();\n      });\n      /** current submenu open status **/\n      this.nzSubmenuService.isCurrentSubMenuOpen$.pipe(takeUntil(this.destroy$)).subscribe(open => {\n        this.isActive = open;\n        if (open !== this.nzOpen) {\n          this.setTriggerWidth();\n          this.nzOpen = open;\n          this.nzOpenChange.emit(this.nzOpen);\n          this.cdr.markForCheck();\n        }\n      });\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.markForCheck();\n      });\n    }\n    ngAfterContentInit() {\n      this.setTriggerWidth();\n      const listOfNzMenuItemDirective = this.listOfNzMenuItemDirective;\n      const changes = listOfNzMenuItemDirective.changes;\n      const mergedObservable = merge(...[changes, ...listOfNzMenuItemDirective.map(menu => menu.selected$)]);\n      changes.pipe(startWith(listOfNzMenuItemDirective), switchMap(() => mergedObservable), startWith(true), map(() => listOfNzMenuItemDirective.some(e => e.nzSelected)), takeUntil(this.destroy$)).subscribe(selected => {\n        this.isSelected = selected;\n        this.cdr.markForCheck();\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        nzOpen\n      } = changes;\n      if (nzOpen) {\n        this.nzSubmenuService.setOpenStateWithoutDebounce(this.nzOpen);\n        this.setTriggerWidth();\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzSubMenuComponent_Factory(t) {\n      return new (t || NzSubMenuComponent)(i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NzSubmenuService), i0.ɵɵdirectiveInject(i3$1.Platform), i0.ɵɵdirectiveInject(NzIsMenuInsideDropDownToken), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i5.NzNoAnimationDirective, 9));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzSubMenuComponent,\n      selectors: [[\"\", \"nz-submenu\", \"\"]],\n      contentQueries: function NzSubMenuComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzSubMenuComponent, 5);\n          i0.ɵɵcontentQuery(dirIndex, NzMenuItemDirective, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzSubMenuComponent = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzMenuItemDirective = _t);\n        }\n      },\n      viewQuery: function NzSubMenuComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkOverlayOrigin, 7, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);\n        }\n      },\n      hostVars: 34,\n      hostBindings: function NzSubMenuComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-dropdown-menu-submenu\", ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-submenu-disabled\", ctx.isMenuInsideDropDown && ctx.nzDisabled)(\"ant-dropdown-menu-submenu-open\", ctx.isMenuInsideDropDown && ctx.nzOpen)(\"ant-dropdown-menu-submenu-selected\", ctx.isMenuInsideDropDown && ctx.isSelected)(\"ant-dropdown-menu-submenu-vertical\", ctx.isMenuInsideDropDown && ctx.mode === \"vertical\")(\"ant-dropdown-menu-submenu-horizontal\", ctx.isMenuInsideDropDown && ctx.mode === \"horizontal\")(\"ant-dropdown-menu-submenu-inline\", ctx.isMenuInsideDropDown && ctx.mode === \"inline\")(\"ant-dropdown-menu-submenu-active\", ctx.isMenuInsideDropDown && ctx.isActive)(\"ant-menu-submenu\", !ctx.isMenuInsideDropDown)(\"ant-menu-submenu-disabled\", !ctx.isMenuInsideDropDown && ctx.nzDisabled)(\"ant-menu-submenu-open\", !ctx.isMenuInsideDropDown && ctx.nzOpen)(\"ant-menu-submenu-selected\", !ctx.isMenuInsideDropDown && ctx.isSelected)(\"ant-menu-submenu-vertical\", !ctx.isMenuInsideDropDown && ctx.mode === \"vertical\")(\"ant-menu-submenu-horizontal\", !ctx.isMenuInsideDropDown && ctx.mode === \"horizontal\")(\"ant-menu-submenu-inline\", !ctx.isMenuInsideDropDown && ctx.mode === \"inline\")(\"ant-menu-submenu-active\", !ctx.isMenuInsideDropDown && ctx.isActive)(\"ant-menu-submenu-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        nzMenuClassName: \"nzMenuClassName\",\n        nzPaddingLeft: \"nzPaddingLeft\",\n        nzTitle: \"nzTitle\",\n        nzIcon: \"nzIcon\",\n        nzOpen: \"nzOpen\",\n        nzDisabled: \"nzDisabled\",\n        nzPlacement: \"nzPlacement\"\n      },\n      outputs: {\n        nzOpenChange: \"nzOpenChange\"\n      },\n      exportAs: [\"nzSubmenu\"],\n      features: [i0.ɵɵProvidersFeature([NzSubmenuService]), i0.ɵɵNgOnChangesFeature],\n      attrs: _c4,\n      ngContentSelectors: _c6,\n      decls: 8,\n      vars: 9,\n      consts: [[\"nz-submenu-title\", \"\", \"cdkOverlayOrigin\", \"\", 3, \"nzIcon\", \"nzTitle\", \"mode\", \"nzDisabled\", \"isMenuInsideDropDown\", \"paddingLeft\", \"subMenuMouseState\", \"toggleSubMenu\"], [\"origin\", \"cdkOverlayOrigin\"], [4, \"ngIf\"], [\"nz-submenu-inline-child\", \"\", 3, \"mode\", \"nzOpen\", \"nzNoAnimation\", \"menuClass\", \"templateOutlet\", 4, \"ngIf\", \"ngIfElse\"], [\"nonInlineTemplate\", \"\"], [\"subMenuTemplate\", \"\"], [\"nz-submenu-inline-child\", \"\", 3, \"mode\", \"nzOpen\", \"nzNoAnimation\", \"menuClass\", \"templateOutlet\"], [\"cdkConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayTransformOriginOn\", \"positionChange\"], [\"nz-submenu-none-inline-child\", \"\", 3, \"theme\", \"mode\", \"nzOpen\", \"position\", \"nzDisabled\", \"isMenuInsideDropDown\", \"templateOutlet\", \"menuClass\", \"nzNoAnimation\", \"subMenuMouseState\"]],\n      template: function NzSubMenuComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c5);\n          i0.ɵɵelementStart(0, \"div\", 0, 1);\n          i0.ɵɵlistener(\"subMenuMouseState\", function NzSubMenuComponent_Template_div_subMenuMouseState_0_listener($event) {\n            return ctx.setMouseEnterState($event);\n          })(\"toggleSubMenu\", function NzSubMenuComponent_Template_div_toggleSubMenu_0_listener() {\n            return ctx.toggleSubMenu();\n          });\n          i0.ɵɵtemplate(2, NzSubMenuComponent_ng_content_2_Template, 1, 0, \"ng-content\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, NzSubMenuComponent_div_3_Template, 1, 6, \"div\", 3);\n          i0.ɵɵtemplate(4, NzSubMenuComponent_ng_template_4_Template, 1, 5, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(6, NzSubMenuComponent_ng_template_6_Template, 1, 0, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r3 = i0.ɵɵreference(5);\n          i0.ɵɵproperty(\"nzIcon\", ctx.nzIcon)(\"nzTitle\", ctx.nzTitle)(\"mode\", ctx.mode)(\"nzDisabled\", ctx.nzDisabled)(\"isMenuInsideDropDown\", ctx.isMenuInsideDropDown)(\"paddingLeft\", ctx.nzPaddingLeft || ctx.inlinePaddingLeft);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.nzTitle);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"inline\")(\"ngIfElse\", _r3);\n        }\n      },\n      dependencies: [i2.NgIf, i7.CdkConnectedOverlay, i7.CdkOverlayOrigin, i5.NzNoAnimationDirective, NzSubMenuTitleComponent, NzSubmenuInlineChildComponent, NzSubmenuNoneInlineChildComponent],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzSubMenuComponent.prototype, \"nzOpen\", void 0);\n  __decorate([InputBoolean()], NzSubMenuComponent.prototype, \"nzDisabled\", void 0);\n  return NzSubMenuComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction MenuServiceFactory(serviceInsideDropDown, serviceOutsideDropDown) {\n  return serviceInsideDropDown ? serviceInsideDropDown : serviceOutsideDropDown;\n}\nfunction MenuDropDownTokenFactory(isMenuInsideDropDownToken) {\n  return isMenuInsideDropDownToken ? isMenuInsideDropDownToken : false;\n}\nlet NzMenuDirective = /*#__PURE__*/(() => {\n  class NzMenuDirective {\n    setInlineCollapsed(inlineCollapsed) {\n      this.nzInlineCollapsed = inlineCollapsed;\n      this.inlineCollapsed$.next(inlineCollapsed);\n    }\n    updateInlineCollapse() {\n      if (this.listOfNzMenuItemDirective) {\n        if (this.nzInlineCollapsed) {\n          this.listOfOpenedNzSubMenuComponent = this.listOfNzSubMenuComponent.filter(submenu => submenu.nzOpen);\n          this.listOfNzSubMenuComponent.forEach(submenu => submenu.setOpenStateWithoutDebounce(false));\n        } else {\n          this.listOfOpenedNzSubMenuComponent.forEach(submenu => submenu.setOpenStateWithoutDebounce(true));\n          this.listOfOpenedNzSubMenuComponent = [];\n        }\n      }\n    }\n    constructor(nzMenuService, isMenuInsideDropDown, cdr, directionality) {\n      this.nzMenuService = nzMenuService;\n      this.isMenuInsideDropDown = isMenuInsideDropDown;\n      this.cdr = cdr;\n      this.directionality = directionality;\n      this.nzInlineIndent = 24;\n      this.nzTheme = 'light';\n      this.nzMode = 'vertical';\n      this.nzInlineCollapsed = false;\n      this.nzSelectable = !this.isMenuInsideDropDown;\n      this.nzClick = new EventEmitter();\n      this.actualMode = 'vertical';\n      this.dir = 'ltr';\n      this.inlineCollapsed$ = new BehaviorSubject(this.nzInlineCollapsed);\n      this.mode$ = new BehaviorSubject(this.nzMode);\n      this.destroy$ = new Subject();\n      this.listOfOpenedNzSubMenuComponent = [];\n    }\n    ngOnInit() {\n      combineLatest([this.inlineCollapsed$, this.mode$]).pipe(takeUntil(this.destroy$)).subscribe(([inlineCollapsed, mode]) => {\n        this.actualMode = inlineCollapsed ? 'vertical' : mode;\n        this.nzMenuService.setMode(this.actualMode);\n        this.cdr.markForCheck();\n      });\n      this.nzMenuService.descendantMenuItemClick$.pipe(takeUntil(this.destroy$)).subscribe(menu => {\n        this.nzClick.emit(menu);\n        if (this.nzSelectable && !menu.nzMatchRouter) {\n          this.listOfNzMenuItemDirective.forEach(item => item.setSelectedState(item === menu));\n        }\n      });\n      this.dir = this.directionality.value;\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.nzMenuService.setMode(this.actualMode);\n        this.cdr.markForCheck();\n      });\n    }\n    ngAfterContentInit() {\n      this.inlineCollapsed$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.updateInlineCollapse();\n        this.cdr.markForCheck();\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        nzInlineCollapsed,\n        nzInlineIndent,\n        nzTheme,\n        nzMode\n      } = changes;\n      if (nzInlineCollapsed) {\n        this.inlineCollapsed$.next(this.nzInlineCollapsed);\n      }\n      if (nzInlineIndent) {\n        this.nzMenuService.setInlineIndent(this.nzInlineIndent);\n      }\n      if (nzTheme) {\n        this.nzMenuService.setTheme(this.nzTheme);\n      }\n      if (nzMode) {\n        this.mode$.next(this.nzMode);\n        if (!changes.nzMode.isFirstChange() && this.listOfNzSubMenuComponent) {\n          this.listOfNzSubMenuComponent.forEach(submenu => submenu.setOpenStateWithoutDebounce(false));\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n    }\n    static #_ = this.ɵfac = function NzMenuDirective_Factory(t) {\n      return new (t || NzMenuDirective)(i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(NzIsMenuInsideDropDownToken), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzMenuDirective,\n      selectors: [[\"\", \"nz-menu\", \"\"]],\n      contentQueries: function NzMenuDirective_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzMenuItemDirective, 5);\n          i0.ɵɵcontentQuery(dirIndex, NzSubMenuComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzMenuItemDirective = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzSubMenuComponent = _t);\n        }\n      },\n      hostVars: 34,\n      hostBindings: function NzMenuDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-dropdown-menu\", ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-root\", ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-light\", ctx.isMenuInsideDropDown && ctx.nzTheme === \"light\")(\"ant-dropdown-menu-dark\", ctx.isMenuInsideDropDown && ctx.nzTheme === \"dark\")(\"ant-dropdown-menu-vertical\", ctx.isMenuInsideDropDown && ctx.actualMode === \"vertical\")(\"ant-dropdown-menu-horizontal\", ctx.isMenuInsideDropDown && ctx.actualMode === \"horizontal\")(\"ant-dropdown-menu-inline\", ctx.isMenuInsideDropDown && ctx.actualMode === \"inline\")(\"ant-dropdown-menu-inline-collapsed\", ctx.isMenuInsideDropDown && ctx.nzInlineCollapsed)(\"ant-menu\", !ctx.isMenuInsideDropDown)(\"ant-menu-root\", !ctx.isMenuInsideDropDown)(\"ant-menu-light\", !ctx.isMenuInsideDropDown && ctx.nzTheme === \"light\")(\"ant-menu-dark\", !ctx.isMenuInsideDropDown && ctx.nzTheme === \"dark\")(\"ant-menu-vertical\", !ctx.isMenuInsideDropDown && ctx.actualMode === \"vertical\")(\"ant-menu-horizontal\", !ctx.isMenuInsideDropDown && ctx.actualMode === \"horizontal\")(\"ant-menu-inline\", !ctx.isMenuInsideDropDown && ctx.actualMode === \"inline\")(\"ant-menu-inline-collapsed\", !ctx.isMenuInsideDropDown && ctx.nzInlineCollapsed)(\"ant-menu-rtl\", ctx.dir === \"rtl\");\n        }\n      },\n      inputs: {\n        nzInlineIndent: \"nzInlineIndent\",\n        nzTheme: \"nzTheme\",\n        nzMode: \"nzMode\",\n        nzInlineCollapsed: \"nzInlineCollapsed\",\n        nzSelectable: \"nzSelectable\"\n      },\n      outputs: {\n        nzClick: \"nzClick\"\n      },\n      exportAs: [\"nzMenu\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NzMenuServiceLocalToken,\n        useClass: MenuService\n      }, /** use the top level service **/\n      {\n        provide: MenuService,\n        useFactory: MenuServiceFactory,\n        deps: [[new SkipSelf(), new Optional(), MenuService], NzMenuServiceLocalToken]\n      }, /** check if menu inside dropdown-menu component **/\n      {\n        provide: NzIsMenuInsideDropDownToken,\n        useFactory: MenuDropDownTokenFactory,\n        deps: [[new SkipSelf(), new Optional(), NzIsMenuInsideDropDownToken]]\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  __decorate([InputBoolean()], NzMenuDirective.prototype, \"nzInlineCollapsed\", void 0);\n  __decorate([InputBoolean()], NzMenuDirective.prototype, \"nzSelectable\", void 0);\n  return NzMenuDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction MenuGroupFactory(isMenuInsideDropDownToken) {\n  return isMenuInsideDropDownToken ? isMenuInsideDropDownToken : false;\n}\nlet NzMenuGroupComponent = /*#__PURE__*/(() => {\n  class NzMenuGroupComponent {\n    constructor(elementRef, renderer, isMenuInsideDropDown) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.isMenuInsideDropDown = isMenuInsideDropDown;\n      const className = this.isMenuInsideDropDown ? 'ant-dropdown-menu-item-group' : 'ant-menu-item-group';\n      this.renderer.addClass(elementRef.nativeElement, className);\n    }\n    ngAfterViewInit() {\n      const ulElement = this.titleElement.nativeElement.nextElementSibling;\n      if (ulElement) {\n        /** add classname to ul **/\n        const className = this.isMenuInsideDropDown ? 'ant-dropdown-menu-item-group-list' : 'ant-menu-item-group-list';\n        this.renderer.addClass(ulElement, className);\n      }\n    }\n    static #_ = this.ɵfac = function NzMenuGroupComponent_Factory(t) {\n      return new (t || NzMenuGroupComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NzIsMenuInsideDropDownToken));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzMenuGroupComponent,\n      selectors: [[\"\", \"nz-menu-group\", \"\"]],\n      viewQuery: function NzMenuGroupComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c7, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titleElement = _t.first);\n        }\n      },\n      inputs: {\n        nzTitle: \"nzTitle\"\n      },\n      exportAs: [\"nzMenuGroup\"],\n      features: [i0.ɵɵProvidersFeature([/** check if menu inside dropdown-menu component **/\n      {\n        provide: NzIsMenuInsideDropDownToken,\n        useFactory: MenuGroupFactory,\n        deps: [[new SkipSelf(), new Optional(), NzIsMenuInsideDropDownToken]]\n      }])],\n      attrs: _c8,\n      ngContentSelectors: _c10,\n      decls: 5,\n      vars: 6,\n      consts: [[\"titleElement\", \"\"], [4, \"nzStringTemplateOutlet\"], [4, \"ngIf\"]],\n      template: function NzMenuGroupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c9);\n          i0.ɵɵelementStart(0, \"div\", null, 0);\n          i0.ɵɵtemplate(2, NzMenuGroupComponent_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵtemplate(3, NzMenuGroupComponent_ng_content_3_Template, 1, 0, \"ng-content\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(4);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ant-menu-item-group-title\", !ctx.isMenuInsideDropDown)(\"ant-dropdown-menu-item-group-title\", ctx.isMenuInsideDropDown);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzTitle);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.nzTitle);\n        }\n      },\n      dependencies: [i2.NgIf, i4$1.NzStringTemplateOutletDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return NzMenuGroupComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzMenuDividerDirective = /*#__PURE__*/(() => {\n  class NzMenuDividerDirective {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n    }\n    static #_ = this.ɵfac = function NzMenuDividerDirective_Factory(t) {\n      return new (t || NzMenuDividerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzMenuDividerDirective,\n      selectors: [[\"\", \"nz-menu-divider\", \"\"]],\n      hostAttrs: [1, \"ant-dropdown-menu-item-divider\"],\n      exportAs: [\"nzMenuDivider\"]\n    });\n  }\n  return NzMenuDividerDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzMenuModule = /*#__PURE__*/(() => {\n  class NzMenuModule {\n    static #_ = this.ɵfac = function NzMenuModule_Factory(t) {\n      return new (t || NzMenuModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzMenuModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BidiModule, CommonModule, PlatformModule, OverlayModule, NzIconModule, NzNoAnimationModule, NzOutletModule]\n    });\n  }\n  return NzMenuModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MenuDropDownTokenFactory, MenuGroupFactory, MenuService, MenuServiceFactory, NzIsMenuInsideDropDownToken, NzMenuDirective, NzMenuDividerDirective, NzMenuGroupComponent, NzMenuItemDirective, NzMenuModule, NzMenuServiceLocalToken, NzSubMenuComponent, NzSubMenuTitleComponent, NzSubmenuInlineChildComponent, NzSubmenuNoneInlineChildComponent, NzSubmenuService };\n//# sourceMappingURL=ng-zorro-antd-menu.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}