{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/ui/Helpdesk/craftsperson/services/craftsperson.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../services/request_technician.service\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"ng-zorro-antd/table\";\nimport * as i7 from \"primeng/calendar\";\nimport * as i8 from \"../../../../../../../directive/numbers-only.directive\";\nimport * as i9 from \"../../../../../../../directive/directive/two-digit-decimal-number\";\nfunction AddRequestTechniciansComponent_label_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 12);\n    i0.ɵɵtext(1, \"Technician Name already exists\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"width\": \"70%\"\n  };\n};\nexport class AddRequestTechniciansComponent {\n  constructor(formBuilder, cfSrv, datePipe, reqiestTechnicianSrv) {\n    this.formBuilder = formBuilder;\n    this.cfSrv = cfSrv;\n    this.datePipe = datePipe;\n    this.reqiestTechnicianSrv = reqiestTechnicianSrv;\n    this.today = new Date();\n    this.subscriptions = [];\n    this.technicianData = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumRequestTechnicianData = [];\n    this.enumTechnicianId = [];\n    this.technicianExist = false;\n    this.enableDetailsBtn = false;\n    this.isRequestor = false;\n    this.isApprover = false;\n    this.isTechnician = false;\n    this.isSupervisor = false;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.reqTechnicianFormPanel = this.formBuilder.group({\n      technicianId: [null, [Validators.required]],\n      hoursRequired: [null, [Validators.required, Validators.min(1)]],\n      dateAssign: [null, [Validators.required]],\n      timeAssign: [null, [Validators.required]],\n      requestTechnicianId: [null],\n      requestId: [null],\n      actualHoursStd: [null],\n      actualHoursDouble: [null],\n      actualHoursOvertime: [null],\n      totalHours: [null],\n      teamId: [null]\n    });\n    this.subscriptions.push(this.reqTechnicianFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadTechinician();\n    if (this.isView) {\n      this.reqTechnicianFormPanel.disable();\n    }\n  }\n  get value() {\n    const trequestTechnician = {\n      technicianId: this.reqTechnicianFormPanel.controls.technicianId.value,\n      hoursRequired: this.reqTechnicianFormPanel.controls.hoursRequired.value,\n      requestTechnicianId: this.reqTechnicianFormPanel.controls.requestTechnicianId.value,\n      requestId: this.reqTechnicianFormPanel.controls.requestId.value,\n      dateAssign: this.reqTechnicianFormPanel.controls.dateAssign.value,\n      timeAssign: this.reqTechnicianFormPanel.controls.timeAssign.value,\n      actualHoursStd: this.reqTechnicianFormPanel.controls.actualHoursStd.value,\n      actualHoursDouble: this.reqTechnicianFormPanel.controls.actualHoursDouble.value,\n      actualHoursOvertime: this.reqTechnicianFormPanel.controls.actualHoursOvertime.value,\n      teamId: this.reqTechnicianFormPanel.controls.teamId.value\n    };\n    return trequestTechnician;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.reqTechnicianFormPanel.patchValue({\n        technicianId: value.technicianId,\n        hoursRequired: value.hoursRequired,\n        dateAssign: this.formatDate(value.dateAssign),\n        timeAssign: this.convertToTime(value.timeAssign),\n        requestTechnicianId: value.requestTechnicianId,\n        requestId: value.requestId,\n        actualHoursStd: value.actualHoursStd,\n        actualHoursDouble: value.actualHoursDouble,\n        actualHoursOvertime: value.actualHoursOvertime,\n        totalHours: parseFloat(value.actualHoursStd) + parseFloat(value.actualHoursDouble) + parseFloat(value.actualHoursOvertime),\n        teamId: value.teamId\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const validationErros = [];\n    return validationErros;\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.reqTechnicianFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate(_) {\n    return this.reqTechnicianFormPanel.valid ? null : {\n      reqTechnicianFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  loadTechinician() {\n    this.cfSrv.getAllCraftsperson().subscribe(res => {\n      if (res) {\n        this.technicianData = res;\n      } else {\n        this.technicianData = [];\n      }\n    });\n  }\n  formatDate(date) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n  convertToTime(value) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      return currDate;\n    } else {\n      return null;\n    }\n  }\n  onChangeHours(event) {\n    let actualHoursStd = this.reqTechnicianFormPanel.controls.actualHoursStd.value;\n    let actualHoursDouble = this.reqTechnicianFormPanel.controls.actualHoursDouble.value;\n    let actualHoursOvertime = this.reqTechnicianFormPanel.controls.actualHoursOvertime.value;\n    let totalHours = parseFloat(actualHoursStd) + parseFloat(actualHoursDouble) + parseFloat(actualHoursOvertime);\n    setTimeout(() => {\n      this.reqTechnicianFormPanel.patchValue({\n        totalHours: totalHours\n      });\n    });\n  }\n  selectTechnician(event) {\n    if (this.previousTechnician != event.cfId) {\n      let requestId = this.reqTechnicianFormPanel.controls.requestId.value;\n      let technicianId = event.cfId;\n      this.reqiestTechnicianSrv.checkTechnicianExist(requestId, technicianId).subscribe(res => {\n        this.technicianExist = false;\n        if (res) {\n          this.technicianExist = true;\n        } else {\n          this.technicianExist = false;\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AddRequestTechniciansComponent_Factory(t) {\n    return new (t || AddRequestTechniciansComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.CraftspersonService), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.RequestTechnicianService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddRequestTechniciansComponent,\n    selectors: [[\"app-add-request-technicians\"]],\n    inputs: {\n      isNew: \"isNew\",\n      isView: \"isView\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddRequestTechniciansComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddRequestTechniciansComponent),\n      multi: true\n    }])],\n    decls: 34,\n    vars: 17,\n    consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [\"colspan\", \"3\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"name\", \"technicianId\", \"formControlName\", \"technicianId\", \"bindLabel\", \"name\", \"bindValue\", \"cfId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 2, \"width\", \"350px\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"hoursRequired\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"hoursRequired\", 1, \"form-control\", 2, \"width\", \"110px\", 3, \"readonly\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateAssign\", \"formControlName\", \"dateAssign\", \"inputId\", \"icon\", 3, \"minDate\", \"showIcon\", \"inputStyle\", \"disabled\"], [2, \"width\", \"80px\"], [1, \"input-label-custom\", 2, \"margin-left\", \"-40px\"], [\"appendTo\", \"body\", \"name\", \"timeAssign\", \"formControlName\", \"timeAssign\", 3, \"timeOnly\", \"disabled\"], [1, \"form-field-lable\", 2, \"color\", \"red\"]],\n    template: function AddRequestTechniciansComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"div\")(3, \"tr\")(4, \"td\", 2)(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Technician Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 5);\n        i0.ɵɵlistener(\"change\", function AddRequestTechniciansComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.selectTechnician($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(9, \"td\")(10, \"td\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"tr\")(12, \"td\");\n        i0.ɵɵtemplate(13, AddRequestTechniciansComponent_label_13_Template, 2, 0, \"label\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"td\")(15, \"td\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"tr\")(17, \"td\")(18, \"div\", 3)(19, \"label\", 4);\n        i0.ɵɵtext(20, \"Required Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\")(22, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"td\")(24, \"div\", 3)(25, \"label\", 4);\n        i0.ɵɵtext(26, \"Scheduled Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"br\")(28, \"p-calendar\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"td\", 9)(30, \"div\", 10)(31, \"label\", 4);\n        i0.ɵɵtext(32, \"Scheduled Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"p-calendar\", 11);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.reqTechnicianFormPanel);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.technicianData)(\"searchable\", true)(\"readonly\", !ctx.isSupervisor && !ctx.isNew);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.technicianExist);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"readonly\", !ctx.isSupervisor && !ctx.isNew);\n        i0.ɵɵadvance(6);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(15, _c0));\n        i0.ɵɵproperty(\"minDate\", ctx.today)(\"showIcon\", false)(\"inputStyle\", i0.ɵɵpureFunction0(16, _c0))(\"disabled\", !ctx.isSupervisor && !ctx.isNew || ctx.isView);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"timeOnly\", true)(\"disabled\", !ctx.isSupervisor && !ctx.isNew || ctx.isView);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.NgSelectComponent, i6.NzTableCellDirective, i6.NzTrDirective, i7.Calendar, i8.NumbersOnlyDirective, i9.TwoDigitDecimalNumberDirective],\n    styles: [\".actual-hours-container[_ngcontent-%COMP%] {\\n  width: 97%;\\n}\\n\\nfieldset.scheduler-border[_ngcontent-%COMP%] {\\n  border: 1px groove #ddd !important;\\n  padding: 0 1.4em 1.4em 1.4em !important;\\n  margin: 0 0 1.5em 0 !important;\\n  box-shadow: 0px 0px 0px 0px #000;\\n  margin-top: 30px !important;\\n}\\n\\nlegend.scheduler-border[_ngcontent-%COMP%] {\\n  font-size: 1em !important;\\n  text-align: left !important;\\n  width: auto;\\n  padding: 0 10px;\\n  border-bottom: none;\\n  margin-top: -10px;\\n  background-color: white;\\n  width: 90px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svd29yay1yZXF1ZXN0LWRldGFpbHMvd2lkZ2V0cy9yZXF1ZXN0LXRlY2huaWNpYW4vd2lkZ2V0cy9hZGQtcmVxdWVzdC10ZWNobmljaWFucy9hZGQtcmVxdWVzdC10ZWNobmljaWFucy5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLy4uLy4uLy4uL01hbmF2JTIwR3VwdGEvRG93bmxvYWRzL2Ztcy9mbXMvZnJvbnRlbmQvZm1zX2Zyb250ZW5kL3NyYy9hcHAvdWkvSGVscGRlc2svd29yay1yZXF1ZXN0LWRldGFpbHMvd2lkZ2V0cy9yZXF1ZXN0LXRlY2huaWNpYW4vd2lkZ2V0cy9hZGQtcmVxdWVzdC10ZWNobmljaWFucy9hZGQtcmVxdWVzdC10ZWNobmljaWFucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0Qks7RUFFSSxVQUFBO0FDNUJUOztBRGdDSztFQUNJLGtDQUFBO0VBQ0EsdUNBQUE7RUFDQSw4QkFBQTtFQUVBLGdDQUFBO0VBQ0EsMkJBQUE7QUM3QlQ7O0FEZ0NPO0VBQ0UseUJBQUE7RUFFQSwyQkFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0VBQ0EsV0FBQTtBQzlCVCIsInNvdXJjZXNDb250ZW50IjpbIi8vIC5hY3R1YWwtaG91cnMtY29udGFpbmVyXG4vLyB7XG4vLyAgICAgd2lkdGg6IDk3JTtcbiAgIFxuLy8gfVxuXG4vLyBmaWVsZHNldC5zY2hlZHVsZXItYm9yZGVyIHtcbi8vICAgICBib3JkZXI6IDFweCBncm9vdmUgI2RkZCAhaW1wb3J0YW50O1xuLy8gICAgIHBhZGRpbmc6IDAgMS40ZW0gMS40ZW0gMS40ZW0gIWltcG9ydGFudDtcbi8vICAgICBtYXJnaW46IDAgMCAxLjVlbSAwICFpbXBvcnRhbnQ7XG4vLyAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggIzAwMDtcbi8vICAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggIzAwMDtcbi8vICAgICBtYXJnaW4tdG9wOiAxMHB4ICFpbXBvcnRhbnQ7XG4vLyAgIH1cbiAgXG4vLyAgIGxlZ2VuZC5zY2hlZHVsZXItYm9yZGVyIHtcbi8vICAgICBmb250LXNpemU6IDFlbSAhaW1wb3J0YW50O1xuICAgXG4vLyAgICAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xuLy8gICAgIHdpZHRoOiBhdXRvO1xuLy8gICAgIHBhZGRpbmc6LTEwcHggMTBweDtcbi8vICAgICBib3JkZXItYm90dG9tOiBub25lO1xuLy8gICAgIG1hcmdpbi10b3A6IC0xMHB4O1xuLy8gICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuLy8gICAgIHdpZHRoOjkwcHg7XG4gIFxuLy8gICAgICB9XG5cbiAgICAgLmFjdHVhbC1ob3Vycy1jb250YWluZXJcbiAgICAge1xuICAgICAgICAgd2lkdGg6IDk3JTtcbiAgICAgICAgLy8gYm9yZGVyOiAxcHggc29saWQgI2NjY2RlZjtcbiAgICAgfVxuICAgICBcbiAgICAgZmllbGRzZXQuc2NoZWR1bGVyLWJvcmRlciB7XG4gICAgICAgICBib3JkZXI6IDFweCBncm9vdmUgI2RkZCAhaW1wb3J0YW50O1xuICAgICAgICAgcGFkZGluZzogMCAxLjRlbSAxLjRlbSAxLjRlbSAhaW1wb3J0YW50O1xuICAgICAgICAgbWFyZ2luOiAwIDAgMS41ZW0gMCAhaW1wb3J0YW50O1xuICAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggIzAwMDtcbiAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggMHB4IDBweCAjMDAwO1xuICAgICAgICAgbWFyZ2luLXRvcDogMzBweCAhaW1wb3J0YW50O1xuICAgICAgIH1cbiAgICAgICBcbiAgICAgICBsZWdlbmQuc2NoZWR1bGVyLWJvcmRlciB7XG4gICAgICAgICBmb250LXNpemU6IDFlbSAhaW1wb3J0YW50O1xuICAgICAgICAgLy9mb250LXdlaWdodDogYm9sZCAhaW1wb3J0YW50O1xuICAgICAgICAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xuICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgICAgbWFyZ2luLXRvcDogLTEwcHg7XG4gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgIHdpZHRoOjkwcHg7XG4gICAgICAgIC8vIGNvbG9yOiBibGFjaztcbiAgICAgICB9XG5cbiIsIi5hY3R1YWwtaG91cnMtY29udGFpbmVyIHtcbiAgd2lkdGg6IDk3JTtcbn1cblxuZmllbGRzZXQuc2NoZWR1bGVyLWJvcmRlciB7XG4gIGJvcmRlcjogMXB4IGdyb292ZSAjZGRkICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgMS40ZW0gMS40ZW0gMS40ZW0gIWltcG9ydGFudDtcbiAgbWFyZ2luOiAwIDAgMS41ZW0gMCAhaW1wb3J0YW50O1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAwcHggMHB4IDBweCAjMDAwO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggIzAwMDtcbiAgbWFyZ2luLXRvcDogMzBweCAhaW1wb3J0YW50O1xufVxuXG5sZWdlbmQuc2NoZWR1bGVyLWJvcmRlciB7XG4gIGZvbnQtc2l6ZTogMWVtICFpbXBvcnRhbnQ7XG4gIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDtcbiAgd2lkdGg6IGF1dG87XG4gIHBhZGRpbmc6IDAgMTBweDtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgbWFyZ2luLXRvcDogLTEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICB3aWR0aDogOTBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALIDATORS","NG_VALUE_ACCESSOR","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AddRequestTechniciansComponent","constructor","formBuilder","cfSrv","datePipe","reqiestTechnicianSrv","today","Date","subscriptions","technicianData","enumList","enumClonedList","enumRequestTechnicianData","enumTechnicianId","technicianExist","enableDetailsBtn","isRequestor","isApprover","isTechnician","isSupervisor","onChange","onTouched","reqTechnicianFormPanel","group","technicianId","required","hoursRequired","min","dateAssign","timeAssign","requestTechnicianId","requestId","actualHoursStd","actualHoursDouble","actualHoursOvertime","totalHours","teamId","push","valueChanges","subscribe","value","ngOnInit","loadTechinician","isView","disable","trequestTechnician","controls","setTimeout","patchValue","formatDate","convertToTime","parseFloat","isValid","getValidationErrors","length","validationErros","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","forEach","s","unsubscribe","getAllCraftsperson","res","date","dateCreated","currDate","data","split","time","setHours","setMinutes","onChangeHours","event","selectTechnician","previousTechnician","cfId","checkTechnicianExist","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","CraftspersonService","i3","DatePipe","i4","RequestTechnicianService","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddRequestTechniciansComponent_Template","rf","ctx","ɵɵlistener","AddRequestTechniciansComponent_Template_ng_select_change_8_listener","$event","ɵɵelement","ɵɵtemplate","AddRequestTechniciansComponent_label_13_Template","ɵɵproperty","ɵɵadvance","ɵɵstyleMap","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\work-request-details\\widgets\\request-technician\\widgets\\add-request-technicians\\add-request-technicians.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\work-request-details\\widgets\\request-technician\\widgets\\add-request-technicians\\add-request-technicians.component.html"],"sourcesContent":["import { Component, Input, OnInit, forwardRef } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { Subscription } from 'rxjs';\nimport { Enums } from 'src/app/model/enums.model';\nimport { CraftspersonService } from 'src/app/ui/Helpdesk/craftsperson/services/craftsperson.service';\nimport { DatePipe } from '@angular/common';\nimport { RequestTechnicianService } from '../services/request_technician.service';\n\n@Component({\n  selector: 'app-add-request-technicians',\n  templateUrl: './add-request-technicians.component.html',\n  styleUrls: ['./add-request-technicians.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddRequestTechniciansComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddRequestTechniciansComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddRequestTechniciansComponent implements OnInit {\n  today: Date = new Date();\n  reqTechnicianFormPanel!: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  hoursRequired!: number;\n  technicianData: any[] = [];\n  enumList: Enums[] = [];\n  enumClonedList: Enums[] = [];\n  enumRequestTechnicianData: Enums[] = [];\n  enumTechnicianId: any[] = [];\n  technicianExist: boolean = false;\n  enableDetailsBtn: boolean = false;\n  previousTechnician: any;\n  isRequestor: boolean = false;\n  isApprover: boolean = false;\n  isTechnician: boolean = false;\n  isSupervisor: boolean = false;\n  @Input() isNew!: boolean;\n  @Input() isView!: boolean;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private cfSrv: CraftspersonService,\n    private datePipe: DatePipe,\n    private reqiestTechnicianSrv: RequestTechnicianService,\n\n  ) {\n    this.reqTechnicianFormPanel = this.formBuilder.group({\n      technicianId: [null, [Validators.required]],\n      hoursRequired: [null, [Validators.required, Validators.min(1)]],\n      dateAssign: [null, [Validators.required]],\n      timeAssign: [null, [Validators.required]],\n      requestTechnicianId: [null],\n      requestId: [null],\n      actualHoursStd: [null],\n      actualHoursDouble: [null],\n      actualHoursOvertime: [null],\n      totalHours: [null],\n      teamId: [null]\n    });\n\n    this.subscriptions.push(\n      this.reqTechnicianFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n  ngOnInit(): void {\n    this.loadTechinician();\n    if(this.isView) {\n      this.reqTechnicianFormPanel.disable();\n    }\n  }\n  get value(): any {\n    const trequestTechnician: any = {\n      technicianId: this.reqTechnicianFormPanel.controls.technicianId.value,\n      hoursRequired: this.reqTechnicianFormPanel.controls.hoursRequired.value,\n      requestTechnicianId: this.reqTechnicianFormPanel.controls.requestTechnicianId.value,\n      requestId: this.reqTechnicianFormPanel.controls.requestId.value,\n      dateAssign: this.reqTechnicianFormPanel.controls.dateAssign.value,\n      timeAssign: this.reqTechnicianFormPanel.controls.timeAssign.value,\n      actualHoursStd: this.reqTechnicianFormPanel.controls.actualHoursStd.value,\n      actualHoursDouble: this.reqTechnicianFormPanel.controls.actualHoursDouble.value,\n      actualHoursOvertime: this.reqTechnicianFormPanel.controls.actualHoursOvertime.value,\n      teamId: this.reqTechnicianFormPanel.controls.teamId.value\n    };\n    return trequestTechnician;\n  }\n\n  set value(value: any) {\n    setTimeout(() => {\n      this.reqTechnicianFormPanel.patchValue({\n        technicianId: value.technicianId,\n        hoursRequired: value.hoursRequired,\n        dateAssign: this.formatDate(value.dateAssign),\n        timeAssign: this.convertToTime(value.timeAssign),\n        requestTechnicianId: value.requestTechnicianId,\n        requestId: value.requestId,\n        actualHoursStd: value.actualHoursStd,\n        actualHoursDouble: value.actualHoursDouble,\n        actualHoursOvertime: value.actualHoursOvertime,\n        totalHours: parseFloat(value.actualHoursStd) + parseFloat(value.actualHoursDouble) + parseFloat(value.actualHoursOvertime),\n        teamId: value.teamId\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const validationErros: VaildationError[] = [];\n    return validationErros;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.reqTechnicianFormPanel.reset();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  validate(_: UntypedFormControl) {\n    return this.reqTechnicianFormPanel.valid ? null : { reqTechnicianFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  loadTechinician() {\n    this.cfSrv.getAllCraftsperson().subscribe((res: any) => {\n      if (res) {\n        this.technicianData = res;\n      } else {\n        this.technicianData = []\n      }\n    })\n  }\n\n  formatDate(date: Date | null) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n  convertToTime(value: any) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      return currDate;\n    } else {\n      return null;\n    }\n  }\n\n  onChangeHours(event: any) {\n    let actualHoursStd = this.reqTechnicianFormPanel.controls.actualHoursStd.value;\n    let actualHoursDouble = this.reqTechnicianFormPanel.controls.actualHoursDouble.value;\n    let actualHoursOvertime = this.reqTechnicianFormPanel.controls.actualHoursOvertime.value;\n    let totalHours = parseFloat(actualHoursStd) + parseFloat(actualHoursDouble) + parseFloat(actualHoursOvertime);\n    setTimeout(() => {\n      this.reqTechnicianFormPanel.patchValue({\n        totalHours: totalHours,\n      });\n    });\n  }\n\n  selectTechnician(event: any) {\n    if (this.previousTechnician != event.cfId) {\n      let requestId = this.reqTechnicianFormPanel.controls.requestId.value;\n      let technicianId = event.cfId;\n      this.reqiestTechnicianSrv.checkTechnicianExist(requestId, technicianId).subscribe((res: any) => {\n        this.technicianExist = false;\n        if (res) {\n          this.technicianExist = true;\n        } else {\n          this.technicianExist = false;\n        }\n      })\n    }\n  }\n}\n","<form [formGroup]=\"reqTechnicianFormPanel\">\n    <table width=\"100%\">\n        <div>\n            <tr>\n                <td colspan=\"3\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Technician Name</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"technicianData\" name=\"technicianId\"\n                            formControlName=\"technicianId\" [searchable]=\"true\" bindLabel=\"name\" bindValue=\"cfId\"\n                            placeholder=\"Make a selection\" class=\"ng-select-dropdown\"(change)=\"selectTechnician($event)\"\n                            [readonly]=\"!isSupervisor && !isNew\" style=\"width: 350px;\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td></td>\n                <td></td>\n            </tr>\n            <tr>\n                <td>\n                    <label class='form-field-lable' *ngIf=\"technicianExist\" style=\"color:red;\">Technician Name already exists</label>\n                </td>\n                <td></td>\n                <td></td>\n            </tr>\n            <tr>\n                <td>\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Required Hours</label><br>\n                        <input type=\"text\" class=\"form-control\" name=\"hoursRequired\" NumbersOnly TwoDigitDecimalNumber\n                            formControlName=\"hoursRequired\" style=\"width: 110px;\" [readonly]=\"!isSupervisor && !isNew\">\n                    </div>\n                </td>\n                <td>\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Scheduled Date</label><br>\n                        <p-calendar appendTo=\"body\" [minDate]=\"today\" dateFormat=\"dd M yy\" name=\"dateAssign\"\n                            formControlName=\"dateAssign\" [showIcon]=\"false\" inputId=\"icon\"[style]=\"{'width':'70%'}\" [inputStyle]=\"{'width':'70%'}\"\n                            [disabled]=\"(!isSupervisor && !isNew) || isView\"></p-calendar>\n                    </div>\n                </td>\n                <td style=\"width:80px;\">\n                    <div class=\"input-label-custom \" style=\"margin-left: -40px;\">\n                        <label class='form-field-lable control-label'>Scheduled Time</label>\n                        <p-calendar appendTo=\"body\" name=\"timeAssign\" formControlName=\"timeAssign\"\n                            [timeOnly]=\"true\" [disabled]=\"(!isSupervisor && !isNew) || isView\"></p-calendar>\n                    </div>\n                </td>\n            </tr>\n        </div>\n<!--    hide on 17-05-2023 by sai    -->\n        <!-- <div class=\"actual-hours-container\" [hidden]=\"isNew\">\n            <fieldset class=\"scheduler-border form-field-lable\">\n                <legend class=\"scheduler-border\">Actual Hours</legend>\n                <tr>\n                    <td style=\"width: 30%;\">\n                        <div class=\"input-label-custom \" style=\"margin-left: -95px;margin-top: 10px\">\n                            <label class='form-field-lable'>Standard Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursStd\" [readOnly]=\"true\" NumbersOnly\n                                TwoDigitDecimalNumber formControlName=\"actualHoursStd\"  (change)=\"onChangeHours($event)\">\n                            \n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"input-label-custom \" style=\"margin-right: 10px;\">\n                            <label class='form-field-lable'> Overtime Hours </label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursOvertime\" NumbersOnly\n                                TwoDigitDecimalNumber formControlName=\"actualHoursOvertime\"\n                                (change)=\"onChangeHours($event)\"  [readOnly]=\"true\"style=\"width: 150px;\">\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div class=\"input-label-custom \" style=\"margin-left: -95px;\">\n                            <label class='form-field-lable'>Double Time Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursDouble\" [readOnly]=\"true\" NumbersOnly\n                                TwoDigitDecimalNumber formControlName=\"actualHoursDouble\"\n                                (change)=\"onChangeHours($event)\">\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"input-label-custom \" style=\"margin-right: 10px;\">\n                            <label class='form-field-lable'>Total Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"totalHours\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"totalHours\" [readOnly]=\"true\" (change)=\"onChangeHours($event)\" style=\"width: 150px;\">\n                        </div>\n                    </td>\n\n                </tr>\n            </fieldset>\n        </div> -->\n    </table>\n\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}