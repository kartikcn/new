{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport class BookingService {\n  constructor(bookingService) {\n    this.bookingService = bookingService;\n  }\n  saveBooking(data) {\n    return this.bookingService.add('reservation', 'save', data);\n  }\n  saveRecurrenceBookings(data) {\n    return this.bookingService.add('recurrenceReservation', 'save', data);\n  }\n  getCountOfOccurence(data) {\n    return this.bookingService.add('reservation', 'getListOfOccurances', data);\n  }\n  getAllBookingIds() {\n    return this.bookingService.getAll('reservation', 'getallIds');\n  }\n  SearchBookingsByFilter(data) {\n    return this.bookingService.search('reservation', 'searchbyfilter', data);\n  }\n  SearchBookingsByFilterPaginated(data) {\n    return this.bookingService.search('reservation', 'searchbyfilterPaginated', data);\n  }\n  getStatusReservations(status) {\n    return this.bookingService.getAllById('reservation', 'getbystatus', status);\n  }\n  getStatusReservationsPaginated(data) {\n    return this.bookingService.search('reservation', 'getbystatusPaginated', data);\n  }\n  getReqCheckBookings() {\n    return this.bookingService.getAll('reservation', 'getallreqcheckin');\n  }\n  getReqCheckBookingsPaginated(data) {\n    return this.bookingService.search('reservation', 'getallreqcheckinPaginated', data);\n  }\n  deleteAttendeById(id) {\n    return this.bookingService.deleteById('reservation', 'deletereserveattendee', id);\n  }\n  getReserveRsQtnInUse(data) {\n    return this.bookingService.search('reserveRs', 'getQuanitiyInUse', data);\n  }\n  updateRecurrenceBookings(data) {\n    return this.bookingService.add('recurrenceReservation', 'updateAll', data);\n  }\n  getAllBookings() {\n    return this.bookingService.getAll('reservation', 'getall');\n  }\n  getCountByMonth(data) {\n    return this.bookingService.search('reservation', 'countTotalByMonth', data);\n  }\n  getReservationRequestByMonth(data) {\n    return this.bookingService.search(\"reservation\", \"countTotalReservationByMonth\", data);\n  }\n  printPdf(data) {\n    return this.bookingService.downloadFile('booking', 'printPdf', data);\n  }\n  static #_ = this.ɵfac = function BookingService_Factory(t) {\n    return new (t || BookingService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookingService,\n    factory: BookingService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BookingService","constructor","bookingService","saveBooking","data","add","saveRecurrenceBookings","getCountOfOccurence","getAllBookingIds","getAll","SearchBookingsByFilter","search","SearchBookingsByFilterPaginated","getStatusReservations","status","getAllById","getStatusReservationsPaginated","getReqCheckBookings","getReqCheckBookingsPaginated","deleteAttendeById","id","deleteById","getReserveRsQtnInUse","updateRecurrenceBookings","getAllBookings","getCountByMonth","getReservationRequestByMonth","printPdf","downloadFile","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/booking/services/booking.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from '../../../services/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n  constructor(\n    private bookingService: DataService<any>,\n  ) { }\n\n  public saveBooking(data: any):Observable<any> {\n    return this.bookingService.add('reservation', 'save', data);\n  }\n\n  \n  public saveRecurrenceBookings(data: any):Observable<any> {\n    return this.bookingService.add('recurrenceReservation', 'save', data);\n  }\n\n  public getCountOfOccurence(data: any):Observable<any> {\n    return this.bookingService.add('reservation', 'getListOfOccurances', data);\n  }\n\n  public getAllBookingIds():Observable<any[]>{\n    return this.bookingService.getAll('reservation', 'getallIds');\n  }\n\n  public SearchBookingsByFilter(data:any){\n    return this.bookingService.search('reservation', 'searchbyfilter',data);\n  }\n\n  public SearchBookingsByFilterPaginated(data:any){\n    return this.bookingService.search('reservation', 'searchbyfilterPaginated',data);\n  }\n\n  public getStatusReservations(status:any){\n    return this.bookingService.getAllById('reservation', 'getbystatus',status)\n  }\n\n  public getStatusReservationsPaginated(data:any){\n    return this.bookingService.search('reservation', 'getbystatusPaginated',data)\n  }\n\n  public getReqCheckBookings(){\n    return this.bookingService.getAll('reservation', 'getallreqcheckin');\n  }\n\n  public getReqCheckBookingsPaginated(data:any){\n    return this.bookingService.search('reservation', 'getallreqcheckinPaginated',data);\n  }\n\n  public deleteAttendeById(id:any){\n    return this.bookingService.deleteById('reservation', 'deletereserveattendee',id);\n }\n\n public getReserveRsQtnInUse(data:any){\n  return this.bookingService.search('reserveRs', 'getQuanitiyInUse',data);\n}\n\npublic updateRecurrenceBookings(data: any):Observable<any> {\n  return this.bookingService.add('recurrenceReservation', 'updateAll', data);\n}\npublic getAllBookings():Observable<any>{\n  return this.bookingService.getAll('reservation','getall');\n}\n\npublic getCountByMonth(data:any) {\n  return this.bookingService.search('reservation', 'countTotalByMonth',data);\n}\n\npublic getReservationRequestByMonth(data: any){\n  return this.bookingService.search(\"reservation\", \"countTotalReservationByMonth\", data);\n}\n\npublic printPdf(data: any){\n  return this.bookingService.downloadFile('booking', 'printPdf', data);\n}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}