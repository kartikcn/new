{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class EqStdService {\n  constructor(equipmentService) {\n    this.equipmentService = equipmentService;\n  }\n  getAllEqStds() {\n    return this.equipmentService.getAll('eqStd', 'getAll');\n  }\n  getAllEqStdsPaginated(data) {\n    return this.equipmentService.search('eqStd', 'getAllPaginated', data);\n  }\n  getEqStdById(id) {\n    return this.equipmentService.getSingleById(\"eqStd\", \"geteqStdById\", id);\n  }\n  saveEqStd(data) {\n    return this.equipmentService.add('eqStd', 'save', data);\n  }\n  validateEqStd(eqStd) {\n    return this.equipmentService.getSingleById('eqStd', 'check', eqStd);\n  }\n  deleteById(eqStd) {\n    return this.equipmentService.deleteById(\"eqStd\", \"deleteById\", eqStd);\n  }\n  static #_ = this.ɵfac = function EqStdService_Factory(t) {\n    return new (t || EqStdService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EqStdService,\n    factory: EqStdService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EqStdService","constructor","equipmentService","getAllEqStds","getAll","getAllEqStdsPaginated","data","search","getEqStdById","id","getSingleById","saveEqStd","add","validateEqStd","eqStd","deleteById","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\eq-std\\services\\eq-std.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EqStdService {\n\n  constructor(\n    private equipmentService: DataService<any>,\n\n  ) { }\n\n\n  public getAllEqStds() {\n    return this.equipmentService.getAll('eqStd', 'getAll');\n  }\n\n  public getAllEqStdsPaginated(data:any) {\n    return this.equipmentService.search('eqStd', 'getAllPaginated',data);\n  }\n\n  public getEqStdById(id: any) {\n    return this.equipmentService.getSingleById(\"eqStd\", \"geteqStdById\", id);\n  }\n\n  public saveEqStd(data: any): Observable<any> {\n    return this.equipmentService.add('eqStd', 'save', data);\n  }\n\n  public validateEqStd(eqStd: any) {\n    return this.equipmentService.getSingleById('eqStd', 'check', eqStd);\n  }\n\n  public deleteById(eqStd: any) {\n    return this.equipmentService.deleteById(\"eqStd\", \"deleteById\", eqStd);\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YACUC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;EAEtB;EAGGC,YAAYA,CAAA;IACjB,OAAO,IAAI,CAACD,gBAAgB,CAACE,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC;EACxD;EAEOC,qBAAqBA,CAACC,IAAQ;IACnC,OAAO,IAAI,CAACJ,gBAAgB,CAACK,MAAM,CAAC,OAAO,EAAE,iBAAiB,EAACD,IAAI,CAAC;EACtE;EAEOE,YAAYA,CAACC,EAAO;IACzB,OAAO,IAAI,CAACP,gBAAgB,CAACQ,aAAa,CAAC,OAAO,EAAE,cAAc,EAAED,EAAE,CAAC;EACzE;EAEOE,SAASA,CAACL,IAAS;IACxB,OAAO,IAAI,CAACJ,gBAAgB,CAACU,GAAG,CAAC,OAAO,EAAE,MAAM,EAAEN,IAAI,CAAC;EACzD;EAEOO,aAAaA,CAACC,KAAU;IAC7B,OAAO,IAAI,CAACZ,gBAAgB,CAACQ,aAAa,CAAC,OAAO,EAAE,OAAO,EAAEI,KAAK,CAAC;EACrE;EAEOC,UAAUA,CAACD,KAAU;IAC1B,OAAO,IAAI,CAACZ,gBAAgB,CAACa,UAAU,CAAC,OAAO,EAAE,YAAY,EAAED,KAAK,CAAC;EACvE;EAAC,QAAAE,CAAA,G;qBA9BUhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}