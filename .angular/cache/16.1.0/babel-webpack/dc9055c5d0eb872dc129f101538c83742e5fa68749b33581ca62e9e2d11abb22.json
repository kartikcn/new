{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MessageService } from 'primeng/api';\nimport { forkJoin } from 'rxjs';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/room-teams.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/confirmdialog\";\nimport * as i11 from \"ng-zorro-antd/table\";\nimport * as i12 from \"../../../../directive/numbers-only.directive\";\nfunction UnassignRoomsComponent_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Assigned Rooms for \", ctx_r11.presentTeamId, \"\");\n  }\n}\nfunction UnassignRoomsComponent_ng_template_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1, \"Assigned Rooms\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UnassignRoomsComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵtemplate(2, UnassignRoomsComponent_ng_template_2_div_2_Template, 3, 1, \"div\", 20);\n    i0.ɵɵtemplate(3, UnassignRoomsComponent_ng_template_2_ng_template_3_Template, 2, 0, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function UnassignRoomsComponent_ng_template_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onUnAssign());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r12 = i0.ɵɵreference(4);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.presentTeamId.length > 0)(\"ngIfElse\", _r12);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.selectedScreens.length > 0));\n  }\n}\nfunction UnassignRoomsComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 23);\n    i0.ɵɵelement(2, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"th\", 23);\n    i0.ɵɵelementStart(4, \"th\", 24)(5, \"div\", 25)(6, \"div\", 26)(7, \"p\", 27);\n    i0.ɵɵtext(8, \"Building Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 28);\n    i0.ɵɵelement(10, \"p-sortIcon\", 29)(11, \"p-columnFilter\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"th\", 31)(13, \"div\", 25)(14, \"div\", 26)(15, \"p\", 27);\n    i0.ɵɵtext(16, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 28);\n    i0.ɵɵelement(18, \"p-sortIcon\", 32)(19, \"p-columnFilter\", 33);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"th\", 34)(21, \"div\", 25)(22, \"div\", 26)(23, \"p\", 27);\n    i0.ɵɵtext(24, \"Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 28);\n    i0.ɵɵelement(26, \"p-sortIcon\", 35)(27, \"p-columnFilter\", 36);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"th\");\n    i0.ɵɵtext(29, \" Occupied Space (%) \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UnassignRoomsComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 37)(1, \"td\", 23);\n    i0.ɵɵelement(2, \"p-tableCheckbox\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 23)(4, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function UnassignRoomsComponent_ng_template_4_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const room_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.openEditItem(room_r16));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const room_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", room_r16);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", room_r16);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(room_r16.blId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r16.flId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r16.rmId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r16.allocation);\n  }\n}\nfunction UnassignRoomsComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nfunction UnassignRoomsComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 40)(1, \"td\", 13);\n    i0.ɵɵtext(2, \"Building Code : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r4.selectedRoom.blId);\n  }\n}\nfunction UnassignRoomsComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 41)(1, \"td\", 13);\n    i0.ɵɵtext(2, \"Floor Code : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r5.selectedRoom.flId);\n  }\n}\nfunction UnassignRoomsComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 41)(1, \"td\", 13);\n    i0.ɵɵtext(2, \"Room Code : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r6.selectedRoom.rmId);\n  }\n}\nfunction UnassignRoomsComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 41)(1, \"td\", 13);\n    i0.ɵɵtext(2, \"Occupied Space (%) : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedRoom.allocation);\n  }\n}\nfunction UnassignRoomsComponent_tr_22_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Required Space (%) cannot be greater than Available Space (%) : \", ctx_r20.maxOccupancyValue, \"\");\n  }\n}\nfunction UnassignRoomsComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 13);\n    i0.ɵɵelementStart(2, \"td\", 13);\n    i0.ɵɵtemplate(3, UnassignRoomsComponent_tr_22_label_3_Template, 2, 1, \"label\", 42);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r9.assignRoom.controls[\"occupancyValue\"] == null ? null : ctx_r9.assignRoom.controls[\"occupancyValue\"].errors.required));\n  }\n}\nfunction UnassignRoomsComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 44)(2, \"div\")(3, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function UnassignRoomsComponent_ng_template_23_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.saveOccupancyValue());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\")(5, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function UnassignRoomsComponent_ng_template_23_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.cancelOccupancyValue());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r10.assignRoom.valid);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nconst _c1 = function () {\n  return {\n    width: \"26vw\"\n  };\n};\nexport class UnassignRoomsComponent {\n  constructor(rmteamsrv, messageService, confirmationService, authSrv, formBuilder) {\n    this.rmteamsrv = rmteamsrv;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.authSrv = authSrv;\n    this.formBuilder = formBuilder;\n    this.roomsData = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.selectedScreens = [];\n    this.unAssignSgPanels = new EventEmitter();\n    this.presentTeamId = '';\n    this.maxOccupancyValue = 100;\n    this.allRmTeamsData = [];\n    this.displayUnAssignScreen = false;\n    this.assignRoom = this.formBuilder.group({\n      occupancyValue: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n  }\n  loadRecords(teamId) {\n    this.rmteamsrv.getAssignedRooms(teamId).subscribe(res => {\n      if (res) {\n        this.roomsData = res;\n      }\n    });\n    this.loadAllRmTeamData();\n  }\n  onUnAssign() {\n    this.messageService.clear();\n    const deleteRequests = [];\n    this.selectedScreens.forEach(screen => {\n      let data = {\n        compId: 0,\n        blId: screen.blId,\n        flId: screen.flId,\n        rmId: screen.rmId,\n        teamId: screen.teamId,\n        allocation: screen.allocation\n      };\n      deleteRequests.push(this.rmteamsrv.deleteRmTeam(data));\n    });\n    forkJoin(deleteRequests).subscribe(res => {\n      this.messageService.add({\n        key: 'UsgGrid',\n        severity: 'success',\n        summary: 'Team unassigned successfully',\n        detail: 'Team unassigned successfully'\n      });\n      this.refreshPanel();\n    });\n  }\n  refreshPanel() {\n    this.unAssignSgPanels.emit(true);\n  }\n  openEditItem(room) {\n    this.assignRoom.patchValue({\n      occupancyValue: null\n    });\n    this.allRmTeamsData.forEach(rm => {\n      if (rm.blId == room.blId && rm.flId == room.flId && rm.rmId == room.rmId && rm.teamId != room.teamId) {\n        this.maxOccupancyValue -= rm.allocation;\n      }\n    });\n    this.displayUnAssignScreen = true;\n    this.selectedRoom = room;\n  }\n  loadAllRmTeamData() {\n    this.maxOccupancyValue = 100;\n    this.rmteamsrv.getAllRmTeams().subscribe(res => {\n      this.allRmTeamsData = res;\n    });\n  }\n  saveOccupancyValue() {\n    this.messageService.clear();\n    let data = {\n      compId: this.compId,\n      blId: this.selectedRoom.blId,\n      flId: this.selectedRoom.flId,\n      rmId: this.selectedRoom.rmId,\n      teamId: this.selectedRoom.teamId,\n      allocation: this.assignRoom.controls.occupancyValue.value\n    };\n    this.rmteamsrv.updateRmTeam(data).subscribe(res => {\n      if (res) {\n        this.displayUnAssignScreen = false;\n        this.messageService.add({\n          key: 'UsgGrid',\n          severity: 'success',\n          summary: 'Team updated successfully',\n          detail: 'Team updated successfully'\n        });\n        this.refreshPanel();\n      }\n    });\n  }\n  cancelOccupancyValue() {\n    this.displayUnAssignScreen = false;\n    this.assignRoom.patchValue({\n      occupancyValue: null\n    });\n  }\n  checkOccupancyValue(control) {\n    if (control.value !== undefined && control.value != null && control.value.length > 0 && this.displayUnAssignScreen) {\n      this.assignRoom.controls['occupancyValue'].setErrors(null);\n      this.assignRoom.clearAsyncValidators();\n      this.assignRoom.updateValueAndValidity();\n      if (parseInt(control.value) > this.maxOccupancyValue) {\n        this.assignRoom.controls['occupancyValue'].setErrors({\n          'incorrect': true\n        });\n        this.assignRoom.updateValueAndValidity();\n        return {\n          'incorrect': true\n        };\n      } else {\n        return null;\n      }\n    }\n    return null;\n  }\n  limitToThreeDigits(event) {\n    const input = event.target.value;\n    if (input.length > 3) {\n      this.assignRoom.patchValue({\n        occupancyValue: input.slice(0, 3)\n      });\n    }\n  }\n  static #_ = this.ɵfac = function UnassignRoomsComponent_Factory(t) {\n    return new (t || UnassignRoomsComponent)(i0.ɵɵdirectiveInject(i1.RmTeamsService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UnassignRoomsComponent,\n    selectors: [[\"app-unassign-rooms\"]],\n    inputs: {\n      presentTeamId: \"presentTeamId\"\n    },\n    outputs: {\n      unAssignSgPanels: \"unAssignSgPanels\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 24,\n    vars: 23,\n    consts: [[1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"400px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"selection\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"selectionChange\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"key\", \"UsgGrid\", \"position\", \"top-right\"], [\"key\", \"positionDialog\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Update Room\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [3, \"formGroup\"], [\"width\", \"100%\", 2, \"margin-top\", \"20px\"], [\"style\", \"font-size: 1.2rem;margin-top:20px;margin-bottom:5px;\", 4, \"ngIf\"], [\"style\", \"font-size: 1.2rem;margin-top:5px;margin-bottom:5px;\", 4, \"ngIf\"], [2, \"width\", \"5rem\"], [1, \"form-field-lable\", \"control-label\", 2, \"font-size\", \"1.2rem\"], [\"type\", \"text\", \"name\", \"occupancyValue\", \"formControlName\", \"occupancyValue\", \"NumbersOnly\", \"\", 1, \"form-control\", 3, \"blur\", \"input\"], [\"occupancyValue\", \"\"], [4, \"ngIf\"], [1, \"d-flex\", \"flex-row\"], [2, \"flex\", \"auto\"], [4, \"ngIf\", \"ngIfElse\"], [\"noTeam\", \"\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"UnAssign\", \"icon\", \"pi pi-plus\", 1, \"p-button-primary\", \"p-button-sm\", \"p-mr-2\", 3, \"disabled\", \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"blId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"blId\"], [\"type\", \"text\", \"field\", \"blId\", \"display\", \"menu\"], [\"pSortableColumn\", \"flId\"], [\"field\", \"flId\"], [\"type\", \"text\", \"field\", \"flId\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmId\"], [\"field\", \"rmId\"], [\"type\", \"text\", \"field\", \"rmId\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [3, \"value\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 1, \"p-button-text\", \"p-button\", \"mr5\", 2, \"margin-left\", \"3.5px\", 3, \"click\"], [2, \"font-size\", \"1.2rem\", \"margin-top\", \"20px\", \"margin-bottom\", \"5px\"], [2, \"font-size\", \"1.2rem\", \"margin-top\", \"5px\", \"margin-bottom\", \"5px\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [2, \"display\", \"flex\", \"justify-content\", \"center\", \"margin-top\", \"20px\", \"width\", \"100%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-primary\", \"p-button-sm\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"8px\", 3, \"click\"]],\n    template: function UnassignRoomsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r24 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-table\", 1);\n        i0.ɵɵlistener(\"selectionChange\", function UnassignRoomsComponent_Template_p_table_selectionChange_1_listener($event) {\n          return ctx.selectedScreens = $event;\n        });\n        i0.ɵɵtemplate(2, UnassignRoomsComponent_ng_template_2_Template, 7, 3, \"ng-template\", 2);\n        i0.ɵɵtemplate(3, UnassignRoomsComponent_ng_template_3_Template, 30, 0, \"ng-template\", 3);\n        i0.ɵɵtemplate(4, UnassignRoomsComponent_ng_template_4_Template, 13, 6, \"ng-template\", 4);\n        i0.ɵɵtemplate(5, UnassignRoomsComponent_ng_template_5_Template, 3, 1, \"ng-template\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(6, \"p-toast\", 6)(7, \"p-confirmDialog\", 7);\n        i0.ɵɵelementStart(8, \"p-dialog\", 8);\n        i0.ɵɵlistener(\"visibleChange\", function UnassignRoomsComponent_Template_p_dialog_visibleChange_8_listener($event) {\n          return ctx.displayUnAssignScreen = $event;\n        });\n        i0.ɵɵelementStart(9, \"form\", 9)(10, \"table\", 10);\n        i0.ɵɵtemplate(11, UnassignRoomsComponent_tr_11_Template, 5, 1, \"tr\", 11);\n        i0.ɵɵtemplate(12, UnassignRoomsComponent_tr_12_Template, 5, 1, \"tr\", 12);\n        i0.ɵɵtemplate(13, UnassignRoomsComponent_tr_13_Template, 5, 1, \"tr\", 12);\n        i0.ɵɵtemplate(14, UnassignRoomsComponent_tr_14_Template, 5, 1, \"tr\", 12);\n        i0.ɵɵelementStart(15, \"tr\")(16, \"td\", 13)(17, \"label\", 14);\n        i0.ɵɵtext(18, \"Required Space (%)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"td\", 13)(20, \"input\", 15, 16);\n        i0.ɵɵlistener(\"blur\", function UnassignRoomsComponent_Template_input_blur_20_listener() {\n          i0.ɵɵrestoreView(_r24);\n          const _r8 = i0.ɵɵreference(21);\n          return i0.ɵɵresetView(ctx.checkOccupancyValue(_r8));\n        })(\"input\", function UnassignRoomsComponent_Template_input_input_20_listener($event) {\n          return ctx.limitToThreeDigits($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(22, UnassignRoomsComponent_tr_22_Template, 4, 1, \"tr\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(23, UnassignRoomsComponent_ng_template_23_Template, 6, 1, \"ng-template\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.roomsData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"selection\", ctx.selectedScreens)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(21, _c0))(\"rowHover\", false)(\"scrollable\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c1));\n        i0.ɵɵproperty(\"visible\", ctx.displayUnAssignScreen)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.assignRoom);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedRoom);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedRoom);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedRoom);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedRoom);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", (ctx.assignRoom.controls[\"occupancyValue\"] == null ? null : ctx.assignRoom.controls[\"occupancyValue\"].errors) && ctx.assignRoom.controls[\"occupancyValue\"].dirty);\n      }\n    },\n    dependencies: [i5.NgIf, i2.PrimeTemplate, i6.Table, i6.SortableColumn, i6.SelectableRow, i6.SortIcon, i6.TableCheckbox, i6.TableHeaderCheckbox, i6.ColumnFilter, i7.ButtonDirective, i8.Dialog, i9.Toast, i10.ConfirmDialog, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i11.NzTableCellDirective, i11.NzThMeasureDirective, i11.NzTrDirective, i12.NumbersOnlyDirective],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  background-color: #879cc9;\\n  color: black;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n  height: 10px !important;\\n}\\n\\n[_nghost-%COMP%]     .p-confirm-dialog .p-dialog-header .p-dialog-content {\\n  align-items: center;\\n  background-color: #f9fcfc;\\n  display: flex;\\n  padding: 10px;\\n}\\n\\n[_nghost-%COMP%]     .p-confirm-dialog .p-dialog-header {\\n  align-items: center;\\n  background-color: #f9fcfc;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvcm9vbS10ZWFtcy93aWRnZXRzL3VuYXNzaWduLXJvb21zL3VuYXNzaWduLXJvb21zLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vc3JjL3Njc3MvX3ZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0kseUJDT0s7RUROTCxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsdUJBQUE7QUFESjs7QUFHQTtFQUNJLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtBQUFKOztBQUVBO0VBQ0ksbUJBQUE7RUFDQSx5QkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnL3NyYy9zY3NzL3ZhcmlhYmxlcyc7XG5cbjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRvb2xiYXI7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cbjpob3N0IDo6bmctZGVlcCAucC1jb25maXJtLWRpYWxvZyAucC1kaWFsb2ctaGVhZGVyIC5wLWRpYWxvZy1jb250ZW50IHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWZjZmM7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuOmhvc3QgOjpuZy1kZWVwIC5wLWNvbmZpcm0tZGlhbG9nIC5wLWRpYWxvZy1oZWFkZXIgIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWZjZmM7XG4gICAgXG59IiwiLy8gVHlwb2dyYXBoeSB2YXJpYWJsZXNcbiRmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4kdXJsOiAnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwJztcblxuXG4vLyBUaGVtaW5nIHZhcmlhYmxlXG4kcHJpbWFyeS1jb2xvcjogIzBiOWU2ZDtcbiR3aGl0ZTogI2ZmZmZmZjtcbiRtYWluLWJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4kdGV4dC1zaXplOjEycHg7XG4kdG9vbGJhcjojODc5Y2M5O1xuJHNpZGUtbmF2OiMzNDNhNDA7XG4kbWFuZGF0b3J5RmllbGQ6I2UwMTUxNTtcbiR0YWJCZ0NvbG9yOiAjODc5Y2M5O1xuJHRhYkFjdGl2ZUJnQ29sb3I6ICNmZmZmZmY7XG4kdGFiSGVpZ2h0OiAyLjM1O1xuJHRhYldpZHRoOiA4MHB4O1xuJHRhYkJvcmRlclJhZGl1czogNnB4IDZweCAwIDA7XG4kdGFiQm9yZGVyQm90dG9tOiAzcHggc29saWQgIzg3OWNjOSAhaW1wb3J0YW50O1xuJHRhYkZvbnRDb2xvcjogI2ZmZmZmZjtcbiR0YWJQYW5lQmFja2dyb3VuZENvbG9yOiAjRjBGMkY1O1xuJEFjdGl2ZVRhYkZvbnRDb2xvcjogIzAwMDAwMDtcblxuJHRhYmxldFBvdHJhaXRNaW5XaWR0aDo2MDBweCA7XG4kdGFibGV0UG90cmFpdE1heFdpZHRoOiA5NTlweDtcbiR0YWJsZXRMYW5kc2NhcGVNaW5XaWR0aDogOTYwcHg7XG4kdGFibGV0TGFuZHNwYWNlTWF4V2lkdGg6IDE0MzlweDtcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","UtilConstant","MessageService","forkJoin","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r11","presentTeamId","ɵɵtemplate","UnassignRoomsComponent_ng_template_2_div_2_Template","UnassignRoomsComponent_ng_template_2_ng_template_3_Template","ɵɵtemplateRefExtractor","ɵɵlistener","UnassignRoomsComponent_ng_template_2_Template_button_click_6_listener","ɵɵrestoreView","_r15","ctx_r14","ɵɵnextContext","ɵɵresetView","onUnAssign","ɵɵproperty","ctx_r0","length","_r12","selectedScreens","ɵɵelement","UnassignRoomsComponent_ng_template_4_Template_button_click_4_listener","restoredCtx","_r18","room_r16","$implicit","ctx_r17","openEditItem","ɵɵtextInterpolate","blId","flId","rmId","allocation","ɵɵattribute","ctx_r4","selectedRoom","ctx_r5","ctx_r6","ctx_r7","ctx_r20","maxOccupancyValue","UnassignRoomsComponent_tr_22_label_3_Template","ctx_r9","assignRoom","controls","errors","required","UnassignRoomsComponent_ng_template_23_Template_button_click_3_listener","_r22","ctx_r21","saveOccupancyValue","UnassignRoomsComponent_ng_template_23_Template_button_click_5_listener","ctx_r23","cancelOccupancyValue","ctx_r10","valid","UnassignRoomsComponent","constructor","rmteamsrv","messageService","confirmationService","authSrv","formBuilder","roomsData","rowCount","ROW_COUNT","unAssignSgPanels","allRmTeamsData","displayUnAssignScreen","group","occupancyValue","ngOnInit","compId","getLoggedInUserCompId","loadRecords","teamId","getAssignedRooms","subscribe","res","loadAllRmTeamData","clear","deleteRequests","forEach","screen","data","push","deleteRmTeam","add","key","severity","summary","detail","refreshPanel","emit","room","patchValue","rm","getAllRmTeams","value","updateRmTeam","checkOccupancyValue","control","undefined","setErrors","clearAsyncValidators","updateValueAndValidity","parseInt","limitToThreeDigits","event","input","target","slice","_","ɵɵdirectiveInject","i1","RmTeamsService","i2","ConfirmationService","i3","AuthService","i4","UntypedFormBuilder","_2","selectors","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","UnassignRoomsComponent_Template","rf","ctx","UnassignRoomsComponent_Template_p_table_selectionChange_1_listener","$event","UnassignRoomsComponent_ng_template_2_Template","UnassignRoomsComponent_ng_template_3_Template","UnassignRoomsComponent_ng_template_4_Template","UnassignRoomsComponent_ng_template_5_Template","UnassignRoomsComponent_Template_p_dialog_visibleChange_8_listener","UnassignRoomsComponent_tr_11_Template","UnassignRoomsComponent_tr_12_Template","UnassignRoomsComponent_tr_13_Template","UnassignRoomsComponent_tr_14_Template","UnassignRoomsComponent_Template_input_blur_20_listener","_r24","_r8","ɵɵreference","UnassignRoomsComponent_Template_input_input_20_listener","UnassignRoomsComponent_tr_22_Template","UnassignRoomsComponent_ng_template_23_Template","ɵɵpureFunction0","_c0","ɵɵstyleMap","_c1","dirty"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/room-teams/widgets/unassign-rooms/unassign-rooms.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/room-teams/widgets/unassign-rooms/unassign-rooms.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { RmTeamsService } from '../../service/room-teams.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { forkJoin } from 'rxjs';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-unassign-rooms',\n  templateUrl: './unassign-rooms.component.html',\n  styleUrls: ['./unassign-rooms.component.scss'],\n  providers: [MessageService]\n})\nexport class UnassignRoomsComponent implements OnInit {\n  assignRoom!: UntypedFormGroup;\n  roomsData:any[]=[];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  selectedScreens: any[] = [];\n  @Output() unAssignSgPanels= new EventEmitter();\n  @Input() presentTeamId :string ='';\n  selectedRoom :any;\n  maxOccupancyValue:number = 100;\n  allRmTeamsData :any[]=[];\n  displayUnAssignScreen:boolean = false;\n  compId!: number;\n  constructor(\n    private rmteamsrv:RmTeamsService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private authSrv: AuthService,\n    private formBuilder: UntypedFormBuilder,\n  ) { \n    this.assignRoom = this.formBuilder.group({\n      occupancyValue: [null,[Validators.required]],\n    })\n  }\n\n  ngOnInit(): void {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n  }\n\n  loadRecords(teamId:any){\n    this.rmteamsrv.getAssignedRooms(teamId).subscribe((res:any)=>{\n      if(res){\n        this.roomsData = res;\n      }\n    })\n    this.loadAllRmTeamData();\n  }\n\n  onUnAssign(){\n    this.messageService.clear();\n    const deleteRequests:any[] = [];\n    this.selectedScreens.forEach((screen:any)=>{\n      let data ={\n        compId:0,\n        blId:screen.blId,\n        flId:screen.flId,\n        rmId:screen.rmId,\n        teamId:screen.teamId,\n        allocation:screen.allocation\n      }\n      deleteRequests.push(this.rmteamsrv.deleteRmTeam(data));\n    })\n    forkJoin(deleteRequests)\n      .subscribe((res:any[])=>{\n        this.messageService.add({ key: 'UsgGrid', severity: 'success', summary: 'Team unassigned successfully', detail: 'Team unassigned successfully' });\n        this.refreshPanel();\n      });\n  }\n\n  refreshPanel() {\n    this.unAssignSgPanels.emit(true);\n  }\n\n  openEditItem(room:any){\n    this.assignRoom.patchValue({\n      occupancyValue: null,\n    })\n    this.allRmTeamsData.forEach((rm:any)=>{\n      if(rm.blId==room.blId && rm.flId==room.flId && rm.rmId==room.rmId &&rm.teamId!=room.teamId){\n        this.maxOccupancyValue -= rm.allocation;\n      }\n    });\n    this.displayUnAssignScreen = true;\n    this.selectedRoom = room;\n  }\n\n  loadAllRmTeamData(){\n    this.maxOccupancyValue =100;\n    this.rmteamsrv.getAllRmTeams().subscribe((res:any)=>{\n      this.allRmTeamsData = res;\n    });\n  }\n\n  saveOccupancyValue(){\n    this.messageService.clear();\n    let data = {\n      compId:this.compId,\n      blId:this.selectedRoom.blId,\n      flId:this.selectedRoom.flId,\n      rmId:this.selectedRoom.rmId,\n      teamId:this.selectedRoom.teamId,\n      allocation:this.assignRoom.controls.occupancyValue.value\n    }\n    this.rmteamsrv.updateRmTeam(data).subscribe((res:any)=>{\n      if(res){\n        this.displayUnAssignScreen = false;\n        this.messageService.add({ key: 'UsgGrid', severity: 'success', summary: 'Team updated successfully', detail: 'Team updated successfully' });\n        this.refreshPanel();\n      }\n    })\n  }\n\n  cancelOccupancyValue(){\n    this.displayUnAssignScreen = false;\n    this.assignRoom.patchValue({\n      occupancyValue: null,\n    })\n  }\n\n  checkOccupancyValue(control:any){\n    if (control.value !== undefined && control.value != null && control.value.length > 0 && this.displayUnAssignScreen ) {\n      this.assignRoom.controls['occupancyValue'].setErrors(null);\n      this.assignRoom.clearAsyncValidators();\n      this.assignRoom.updateValueAndValidity();\n      if(parseInt(control.value)> this.maxOccupancyValue){\n        this.assignRoom.controls['occupancyValue'].setErrors({ 'incorrect': true });\n          this.assignRoom.updateValueAndValidity();\n          return { 'incorrect': true };\n      }\n      else{\n        return null;\n      }\n    }\n    return null;\n  }\n\n  limitToThreeDigits(event:any){\n    const input = event.target.value ;\n    if(input.length>3){\n      this.assignRoom.patchValue({\n        occupancyValue: input.slice(0,3),\n      })\n    }\n  }\n\n}\n","<div class=\"card\">\n    <p-table [value]=\"roomsData\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [(selection)]=\"selectedScreens\"\n        [rowsPerPageOptions]=\"[5,10,25]\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n        [rowHover]=\"false\" [scrollable]=\"true\" scrollDirection=\"both\" scrollHeight=\"400px\">\n        <ng-template pTemplate=\"caption\">\n            <div class=\"d-flex flex-row\">\n                <div style=\"flex: auto;\">\n                    <div *ngIf=\"presentTeamId.length>0; else noTeam\">\n                        <h4>Assigned Rooms for {{presentTeamId}}</h4>\n                    </div>\n\n                    <ng-template #noTeam>\n                        <h4>Assigned Rooms</h4>\n                    </ng-template>\n                </div>\n                <div>\n                    <button pButton pRipple label=\"UnAssign\" icon=\"pi pi-plus\"\n                        class=\"p-button-primary p-button-sm p-mr-2\" (click)=\"onUnAssign()\"\n                        [disabled]=\"!(selectedScreens.length>0)\"></button>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <th style=\"width: 4rem\">\n                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n                </th>\n                <th style=\"width: 4rem\">\n                </th>\n                <th pSortableColumn=\"blId\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Building Code</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"blId\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"blId\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"flId\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Floor Code</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"flId\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"flId\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"rmId\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Room Code</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"rmId\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"rmId\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th>\n                    Occupied Space (%)\n                </th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-room>\n            <tr [pSelectableRow]=\"room\">\n                <td style=\"width: 4rem\">\n                    <p-tableCheckbox [value]=\"room\"></p-tableCheckbox>\n                </td>\n                <td style=\"width: 4rem\">\n                    <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" style=\"margin-left:3.5px;\"\n                        (click)=\"openEditItem(room)\" class=\"p-button-text p-button mr5\"></button>\n                </td>\n                <td>{{room.blId}}</td>\n                <td>{{room.flId}}</td>\n                <td>{{room.rmId}}</td>\n                <td>{{room.allocation}}</td>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\" let-columns>\n            <tr>\n                <td [attr.colspan]=\"3\">\n                    No records found\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n</div>\n\n<p-toast key=\"UsgGrid\" position=\"top-right\"></p-toast>\n<p-confirmDialog key='positionDialog' header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n\n<p-dialog header=\"Update Room\" [(visible)]=\"displayUnAssignScreen\" [modal]=\"true\" [style]=\"{width: '26vw'}\"\n    [maximizable]=\"true\" [draggable]=\"false\" [resizable]=\"false\">\n    <form [formGroup]=\"assignRoom\">\n        <table width=\"100%\" style=\"margin-top:20px;\">\n            <tr *ngIf=\"selectedRoom\" style=\"font-size: 1.2rem;margin-top:20px;margin-bottom:5px;\">\n                <td style=\"width:5rem;\">Building Code : </td>\n                <td style=\"width:5rem;\">{{selectedRoom.blId}}</td>\n            </tr>\n            <tr *ngIf=\"selectedRoom\" style=\"font-size: 1.2rem;margin-top:5px;margin-bottom:5px;\">\n                <td style=\"width:5rem;\">Floor Code : </td>\n                <td style=\"width:5rem;\">{{selectedRoom.flId}}</td>\n            </tr>\n            <tr *ngIf=\"selectedRoom\" style=\"font-size: 1.2rem;margin-top:5px;margin-bottom:5px;\">\n                <td style=\"width:5rem;\">Room Code : </td>\n                <td style=\"width:5rem;\">{{selectedRoom.rmId}}</td>\n                <!-- <tr *ngIf=\"selectedRoom\" style=\"font-size: 1.2rem;margin-top:5px;margin-bottom:5px;\">\n                Available Space (%):{{maxOccupancyValue}}\n            </tr> -->\n            <tr *ngIf=\"selectedRoom\" style=\"font-size: 1.2rem;margin-top:5px;margin-bottom:5px;\">\n                <td style=\"width:5rem;\">Occupied Space (%) : </td>\n                <td style=\"width:5rem;\">{{selectedRoom.allocation}}</td>\n            </tr>\n            <tr>\n                <td style=\"width:5rem;\">\n                    <label class='form-field-lable control-label' style=\"font-size: 1.2rem;\">Required Space (%)</label>\n                </td>\n                <td style=\"width:5rem;\">\n                    <input type=\"text\" class=\"form-control\" name=\"occupancyValue\" formControlName=\"occupancyValue\"\n                        (blur)=\"checkOccupancyValue(occupancyValue)\" (input)=\"limitToThreeDigits($event)\"\n                        #occupancyValue NumbersOnly>\n                </td>\n                <!-- <div class=\"input-label-custom \" style=\"padding:0px !important; margin-top:5px; display:flex;align-items: center;\">\n                    <div>\n                        <label class='form-field-lable control-label' style=\"font-size: 1.2rem;\">Required Space (%)</label>\n                    </div>\n                    <div>\n                        <input type=\"text\" class=\"form-control\" name=\"occupancyValue\" formControlName=\"occupancyValue\"\n                        (blur)=\"checkOccupancyValue(occupancyValue)\" (input)=\"limitToThreeDigits($event)\" \n                        #occupancyValue NumbersOnly>\n                    </div>\n                </div> -->\n            </tr>\n            <tr *ngIf=\"(assignRoom.controls['occupancyValue']?.errors && assignRoom.controls['occupancyValue'].dirty)\">\n                <td style=\"width:5rem;\">\n                </td>\n                <td style=\"width:5rem;\">\n                    <label *ngIf=\"!assignRoom.controls['occupancyValue']?.errors.required\" class='form-field-lable'\n                        style=\"color:red;\">Required Space (%) cannot be greater than Available Space (%) :\n                        {{maxOccupancyValue}}</label>\n\n                </td>\n            </tr>\n        </table>\n    </form>\n    <ng-template pTemplate=\"caption\">\n        <div class=\"d-flex flex-row\">\n            <div style=\"display:flex;justify-content:center;margin-top:20px;width:100%;\">\n                <div>\n                    <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-primary p-button-sm\"\n                        [disabled]=\"!assignRoom.valid\" (click)=\"saveOccupancyValue()\"></button>\n                </div>\n                <div>\n                    <button pButton pRipple label=\"Cancel\" class=\"p-button-primary p-button-sm\" style=\"margin-left:8px\"\n                        (click)=\"cancelOccupancyValue()\"></button>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n</p-dialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}