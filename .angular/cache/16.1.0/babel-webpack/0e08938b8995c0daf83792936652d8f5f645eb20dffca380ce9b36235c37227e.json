{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class RequestOtherCostService {\n  constructor(service) {\n    this.service = service;\n  }\n  getAllByRquestId(id) {\n    return this.service.getAllById('requestOtherCost', 'getAllCostType', id);\n  }\n  getById(id) {\n    return this.service.getSingleById(\"requestOtherCost\", \"getByrequestOtherCostId\", id);\n  }\n  saveRequestCost(data) {\n    return this.service.add('requestOtherCost', 'save', data);\n  }\n  deleteById(id) {\n    return this.service.deleteById(\"requestOtherCost\", \"deleteByRequestOtherCostId\", id);\n  }\n  checkCostExist(requestId, costType) {\n    return this.service.getAllByIds(\"requestOtherCost\", \"checkExist\", requestId, costType);\n  }\n  static #_ = this.ɵfac = function RequestOtherCostService_Factory(t) {\n    return new (t || RequestOtherCostService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestOtherCostService,\n    factory: RequestOtherCostService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RequestOtherCostService","constructor","service","getAllByRquestId","id","getAllById","getById","getSingleById","saveRequestCost","data","add","deleteById","checkCostExist","requestId","costType","getAllByIds","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\work-request-details\\widgets\\request-other-cost\\services\\request-other-cost-services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { DataService } from 'src/app/services/data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestOtherCostService {\n\n  constructor(\n    private service: DataService<any>,\n    \n  ) { }\n\n  \n  public getAllByRquestId(id:any){\n    return this.service.getAllById('requestOtherCost', 'getAllCostType',id);\n  }\n  \n  public getById(id: any) {\n    return this.service.getSingleById(\"requestOtherCost\", \"getByrequestOtherCostId\",id);\n  }\n\n  public saveRequestCost(data: any): Observable<any> {\n    return this.service.add('requestOtherCost', 'save', data);\n  }\n\n  public deleteById(id: any) {\n    return this.service.deleteById(\"requestOtherCost\", \"deleteByRequestOtherCostId\", id);\n  }\n\n  public checkCostExist(requestId:any,costType:any) {\n    return this.service.getAllByIds(\"requestOtherCost\", \"checkExist\", requestId,costType);\n  }\n \n}\n"],"mappings":";;AAQA,OAAM,MAAOA,uBAAuB;EAElCC,YACUC,OAAyB;IAAzB,KAAAA,OAAO,GAAPA,OAAO;EAEb;EAGGC,gBAAgBA,CAACC,EAAM;IAC5B,OAAO,IAAI,CAACF,OAAO,CAACG,UAAU,CAAC,kBAAkB,EAAE,gBAAgB,EAACD,EAAE,CAAC;EACzE;EAEOE,OAAOA,CAACF,EAAO;IACpB,OAAO,IAAI,CAACF,OAAO,CAACK,aAAa,CAAC,kBAAkB,EAAE,yBAAyB,EAACH,EAAE,CAAC;EACrF;EAEOI,eAAeA,CAACC,IAAS;IAC9B,OAAO,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAC,kBAAkB,EAAE,MAAM,EAAED,IAAI,CAAC;EAC3D;EAEOE,UAAUA,CAACP,EAAO;IACvB,OAAO,IAAI,CAACF,OAAO,CAACS,UAAU,CAAC,kBAAkB,EAAE,4BAA4B,EAAEP,EAAE,CAAC;EACtF;EAEOQ,cAAcA,CAACC,SAAa,EAACC,QAAY;IAC9C,OAAO,IAAI,CAACZ,OAAO,CAACa,WAAW,CAAC,kBAAkB,EAAE,YAAY,EAAEF,SAAS,EAACC,QAAQ,CAAC;EACvF;EAAC,QAAAE,CAAA,G;qBA1BUhB,uBAAuB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAvBrB,uBAAuB;IAAAsB,OAAA,EAAvBtB,uBAAuB,CAAAuB,IAAA;IAAAC,UAAA,EAFtB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}