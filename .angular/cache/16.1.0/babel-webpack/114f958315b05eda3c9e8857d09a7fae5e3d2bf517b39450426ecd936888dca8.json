{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as FileSaver from 'file-saver';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport html2canvas from 'html2canvas';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport { BuildingFilterInputDTO } from '../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../background-loc/model/DTO/FloorFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../division-department/services/division.services\";\nimport * as i4 from \"../division-department/services/department.services\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"src/app/services/enum.service\";\nimport * as i7 from \"../booking/services/booking.services\";\nimport * as i8 from \"primeng/api\";\nimport * as i9 from \"../division-department/services/subDepartment.services\";\nimport * as i10 from \"src/app/services/breakpoint.service\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/calendar\";\nimport * as i13 from \"primeng/button\";\nimport * as i14 from \"primeng/dialog\";\nimport * as i15 from \"primeng/toast\";\nimport * as i16 from \"primeng/panel\";\nimport * as i17 from \"primeng/confirmdialog\";\nimport * as i18 from \"@ng-select/ng-select\";\nimport * as i19 from \"@angular/material/tooltip\";\nimport * as i20 from \"../space-allocation-statistics/widgets/space-allocation-room-list/space-allocation-room-list.component\";\nimport * as i21 from \"@swimlane/ngx-charts\";\nimport * as i22 from \"../view-room-report/widgets/add-room-report-table/add-room-report-table.component\";\nimport * as i23 from \"primeng/paginator\";\nconst _c0 = [\"chartContainer\"];\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_div_27_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.exportGridToExcel());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p-button\", 32);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_div_28_Template_p_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r14.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_tr_29_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 34);\n    i0.ɵɵtext(1, \"Date To should be greater than Date From\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 13);\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_tr_29_label_2_Template, 2, 0, \"label\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 13)(4, \"td\", 13)(5, \"td\", 13)(6, \"td\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r11.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r11.filterPanel.controls[\"dateTo\"].errors) && (ctx_r11.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r11.filterPanel.controls[\"dateTo\"].errors.incorrect));\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 12)(1, \"tr\")(2, \"td\", 13)(3, \"div\", 14)(4, \"div\", 15)(5, \"label\", 16);\n    i0.ɵɵtext(6, \"Date From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p-calendar\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_p_calendar_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(8, \"td\", 13)(9, \"div\", 14)(10, \"div\", 15)(11, \"label\", 16);\n    i0.ɵɵtext(12, \"Date To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p-calendar\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_p_calendar_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(14, \"td\", 13)(15, \"div\", 14)(16, \"label\", 16);\n    i0.ɵɵtext(17, \"View By\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"ng-select\", 19);\n    i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_change_18_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.changeViewBy($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"td\", 13)(20, \"div\", 14)(21, \"label\", 20);\n    i0.ɵɵtext(22, \"Display Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"ng-select\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"td\", 13)(25, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onClear());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(27, SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_div_27_Template, 2, 0, \"div\", 24);\n    i0.ɵɵtemplate(28, SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_div_28_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(29, SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_tr_29_Template, 7, 1, \"tr\", 2);\n    i0.ɵɵelementStart(30, \"tr\")(31, \"td\", 13)(32, \"div\", 14)(33, \"label\", 20);\n    i0.ɵɵtext(34, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"ng-select\", 25);\n    i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_change_35_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onSelectBlCode($event));\n    })(\"open\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_open_35_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.onOpenBl());\n    })(\"scrollToEnd\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_scrollToEnd_35_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.scrollToEndBl());\n    })(\"search\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_search_35_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.searchBl($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"td\", 13)(37, \"div\", 14)(38, \"label\", 20);\n    i0.ɵɵtext(39, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"ng-select\", 26);\n    i0.ɵɵlistener(\"open\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_open_40_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.onOpenFl());\n    })(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_change_40_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_scrollToEnd_40_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.scrollToEndFl());\n    })(\"search\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_search_40_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.searchFl($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"td\", 13)(42, \"div\", 14)(43, \"label\", 20);\n    i0.ɵɵtext(44, \"Division \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"ng-select\", 27);\n    i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_change_45_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.onSelectDivision($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(46, \"td\", 13)(47, \"div\", 14)(48, \"label\", 20);\n    i0.ɵɵtext(49, \"Department \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"ng-select\", 28);\n    i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template_ng_select_change_50_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.onSelectDepartment($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(51, \"td\", 13)(52, \"div\", 14)(53, \"label\", 20);\n    i0.ɵɵtext(54, \"Sub Department\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(55, \"ng-select\", 29);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r7.viewByData);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx_r7.displayTypeData);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r7.filterPanel.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.showGrid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.showbarchart && ctx_r7.barchartData.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r7.filterPanel.controls[\"dateTo\"].errors);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r7.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r7.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r7.enumDivision)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r7.departmentData)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r7.enumSubDepartment)(\"searchable\", true);\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_tr_24_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 34);\n    i0.ɵɵtext(1, \"Date To should be greater than Date From\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 35);\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_tr_24_label_2_Template, 2, 0, \"label\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 35)(4, \"td\", 35)(5, \"td\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r33.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r33.filterPanel.controls[\"dateTo\"].errors) && (ctx_r33.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r33.filterPanel.controls[\"dateTo\"].errors.incorrect));\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_div_55_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r37.exportGridToExcel());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p-button\", 38);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_div_56_Template_p_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r39.exportChartToPDF());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 12)(1, \"tr\")(2, \"td\", 35)(3, \"div\", 14)(4, \"div\", 15)(5, \"label\", 16);\n    i0.ɵɵtext(6, \"Date From\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p-calendar\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_p_calendar_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r41.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(8, \"td\", 35)(9, \"div\", 14)(10, \"div\", 15)(11, \"label\", 16);\n    i0.ɵɵtext(12, \"Date To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p-calendar\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_p_calendar_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r43.checkDates($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(14, \"td\", 35)(15, \"div\", 14)(16, \"label\", 16);\n    i0.ɵɵtext(17, \"View By\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"ng-select\", 19);\n    i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_change_18_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r44 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r44.changeViewBy($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"td\", 35)(20, \"div\", 14)(21, \"label\", 20);\n    i0.ɵɵtext(22, \"Display Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"ng-select\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(24, SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_tr_24_Template, 6, 1, \"tr\", 2);\n    i0.ɵɵelementStart(25, \"tr\")(26, \"td\", 35)(27, \"div\", 14)(28, \"label\", 20);\n    i0.ɵɵtext(29, \"Building \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"ng-select\", 25);\n    i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_change_30_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r45.onSelectBlCode($event));\n    })(\"open\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_open_30_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r46 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r46.onOpenBl());\n    })(\"scrollToEnd\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_scrollToEnd_30_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r47 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r47.scrollToEndBl());\n    })(\"search\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_search_30_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r48 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r48.searchBl($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(31, \"td\", 35)(32, \"div\", 14)(33, \"label\", 20);\n    i0.ɵɵtext(34, \"Floor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"ng-select\", 26);\n    i0.ɵɵlistener(\"open\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_open_35_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r49 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r49.onOpenFl());\n    })(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_change_35_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r50.onSelectFlCode($event));\n    })(\"scrollToEnd\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_scrollToEnd_35_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r51 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r51.scrollToEndFl());\n    })(\"search\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_search_35_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r52 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r52.searchFl($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(36, \"td\", 35)(37, \"div\", 14)(38, \"label\", 20);\n    i0.ɵɵtext(39, \"Division \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"ng-select\", 27);\n    i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_change_40_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r53 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r53.onSelectDivision($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"td\", 35)(42, \"div\", 14)(43, \"label\", 20);\n    i0.ɵɵtext(44, \"Department \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"ng-select\", 28);\n    i0.ɵɵlistener(\"change\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_ng_select_change_45_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r54 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r54.onSelectDepartment($event));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(46, \"tr\")(47, \"td\", 13)(48, \"div\", 14)(49, \"label\", 20);\n    i0.ɵɵtext(50, \"Sub Department\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(51, \"ng-select\", 29);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(52, \"td\", 35)(53, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_button_click_53_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r55 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r55.onSearch());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(54, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template_button_click_54_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r56 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r56.onClear());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(55, SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_div_55_Template, 2, 0, \"div\", 24);\n    i0.ɵɵtemplate(56, SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_div_56_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"showIcon\", false)(\"readonlyInput\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r8.viewByData);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", false)(\"items\", ctx_r8.displayTypeData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.filterPanel.controls[\"dateTo\"] == null ? null : ctx_r8.filterPanel.controls[\"dateTo\"].errors);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r8.enumBL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r8.enumFL)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r8.enumDivision)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r8.departmentData)(\"searchable\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r8.enumSubDepartment)(\"searchable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r8.filterPanel.valid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.showGrid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.showbarchart && ctx_r8.barchartData.length > 0);\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"p-panel\", 9)(2, \"form\", 10);\n    i0.ɵɵtemplate(3, SpaceAllocationStatisticsByDivDepComponent_div_0_table_3_Template, 56, 29, \"table\", 11);\n    i0.ɵɵtemplate(4, SpaceAllocationStatisticsByDivDepComponent_div_0_table_4_Template, 57, 29, \"table\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"toggleable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.filterPanel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r0.useTabletProtrait || ctx_r0.useTabletLandscape));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.useTabletProtrait || ctx_r0.useTabletLandscape);\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_2_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 55)(1, \"div\", 45)(2, \"div\", 46)(3, \"p\", 47);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 48);\n    i0.ɵɵelement(6, \"p-sortIcon\", 56)(7, \"p-columnFilter\", 57);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r60 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r60.secondParamName, \"\");\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_2_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 58)(1, \"div\", 45)(2, \"div\", 46)(3, \"p\", 47);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 48);\n    i0.ɵɵelement(6, \"p-sortIcon\", 59)(7, \"p-columnFilter\", 60);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r61 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r61.thirdParamName, \"\");\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 44)(2, \"div\", 45)(3, \"div\", 46)(4, \"p\", 47);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 48);\n    i0.ɵɵelement(7, \"p-sortIcon\", 49)(8, \"p-columnFilter\", 50);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(9, SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_2_th_9_Template, 8, 1, \"th\", 51);\n    i0.ɵɵtemplate(10, SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_2_th_10_Template, 8, 1, \"th\", 52);\n    i0.ɵɵelementStart(11, \"th\", 53)(12, \"div\", 45)(13, \"div\", 46)(14, \"p\", 47);\n    i0.ɵɵtext(15, \"Allocated Area (sq.ft)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 48);\n    i0.ɵɵelement(17, \"p-sortIcon\", 54);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r57 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r57.firstParamName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r57.showSecondParam);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r57.showThirdParam);\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 62);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const room_r62 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.firstvalue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.secondvalue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.occupiedarea.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 62);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const room_r62 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.firstvalue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.secondvalue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.thirdvalue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.occupiedarea.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 62);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const room_r62 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.firstvalue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r62.occupiedarea.toFixed(2));\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r70 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 61);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r70);\n      const room_r62 = restoredCtx.$implicit;\n      const ctx_r69 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r69.getRoomData(room_r62));\n    });\n    i0.ɵɵtemplate(1, SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_ng_container_1_Template, 7, 3, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_ng_container_2_Template, 9, 4, \"ng-container\", 2);\n    i0.ɵɵtemplate(3, SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_ng_container_3_Template, 5, 2, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r58 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r58.showSecondParam && !ctx_r58.showThirdParam);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r58.showSecondParam && ctx_r58.showThirdParam);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r58.showSecondParam && !ctx_r58.showThirdParam);\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c1 = function () {\n  return [25, 50, 100];\n};\nfunction SpaceAllocationStatisticsByDivDepComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r73 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p-table\", 40);\n    i0.ɵɵlistener(\"onFilter\", function SpaceAllocationStatisticsByDivDepComponent_div_1_Template_p_table_onFilter_1_listener($event) {\n      i0.ɵɵrestoreView(_r73);\n      const ctx_r72 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r72.onInnerFilter($event));\n    });\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_2_Template, 18, 3, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_3_Template, 4, 3, \"ng-template\", 5);\n    i0.ɵɵtemplate(4, SpaceAllocationStatisticsByDivDepComponent_div_1_ng_template_4_Template, 3, 1, \"ng-template\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 42)(6, \"p-paginator\", 43);\n    i0.ɵɵlistener(\"onPageChange\", function SpaceAllocationStatisticsByDivDepComponent_div_1_Template_p_paginator_onPageChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r73);\n      const ctx_r74 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r74.onPageChange($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r1.gridblfldata)(\"paginator\", false)(\"rows\", ctx_r1.rowCount)(\"rowHover\", false)(\"scrollable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"rows\", ctx_r1.rowCount)(\"totalRecords\", ctx_r1.totalElements)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c1));\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_2_div_2_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r82 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 73)(1, \"li\", 74);\n    i0.ɵɵlistener(\"click\", function SpaceAllocationStatisticsByDivDepComponent_div_2_div_2_ul_8_Template_li_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r82);\n      const item_r79 = restoredCtx.$implicit;\n      const ctx_r81 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r81.onLegendItemClick(item_r79));\n    });\n    i0.ɵɵelementStart(2, \"span\", 75);\n    i0.ɵɵelement(3, \"span\", 76);\n    i0.ɵɵelementStart(4, \"span\", 77);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r79 = ctx.$implicit;\n    const i_r80 = ctx.index;\n    const ctx_r78 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"title\", item_r79.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r78.customColor.domain[i_r80]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r79.name);\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r84 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 66)(1, \"div\", 67)(2, \"ngx-charts-bar-vertical\", 68);\n    i0.ɵɵlistener(\"select\", function SpaceAllocationStatisticsByDivDepComponent_div_2_div_2_Template_ngx_charts_bar_vertical_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r84);\n      const ctx_r83 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r83.onSelectBarChart($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 69)(4, \"div\", 70)(5, \"p\", 71);\n    i0.ɵɵtext(6, \"Legend\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtemplate(8, SpaceAllocationStatisticsByDivDepComponent_div_2_div_2_ul_8_Template, 6, 4, \"ul\", 72);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r76 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"view\", ctx_r76.view)(\"scheme\", ctx_r76.customColor)(\"results\", ctx_r76.barchartData)(\"xAxis\", ctx_r76.showXAxis)(\"yAxis\", ctx_r76.showYAxis)(\"legend\", ctx_r76.showLegend)(\"showXAxisLabel\", ctx_r76.showXAxisLabel)(\"showYAxisLabel\", ctx_r76.showYAxisLabel)(\"xAxisLabel\", ctx_r76.xAxisLabel)(\"yAxisLabel\", ctx_r76.yAxisLabel)(\"showGridLines\", ctx_r76.showGridLines)(\"barPadding\", 25)(\"trimXAxisTicks\", ctx_r76.trimXAxisTicks)(\"maxXAxisTickLength\", ctx_r76.maxXAxisTickLength);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r76.legendItems);\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 78)(1, \"div\")(2, \"h1\");\n    i0.ɵɵtext(3, \"No data found\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", null, 63);\n    i0.ɵɵtemplate(2, SpaceAllocationStatisticsByDivDepComponent_div_2_div_2_Template, 9, 15, \"div\", 64);\n    i0.ɵɵtemplate(3, SpaceAllocationStatisticsByDivDepComponent_div_2_div_3_Template, 4, 0, \"div\", 65);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.barchartData.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r2.barchartData.length > 0));\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 79);\n    i0.ɵɵtext(1, \"Room List\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-space-allocation-room-list\", 80);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r4.roomData);\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 79);\n    i0.ɵɵtext(1, \"Room List\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpaceAllocationStatisticsByDivDepComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-room-report-table\", 80);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r6.allroomData);\n  }\n}\nconst _c2 = function () {\n  return {\n    width: \"75vw\"\n  };\n};\nconst _c3 = function () {\n  return {\n    width: \"66vw\"\n  };\n};\nclass roomfilter {\n  constructor(blId, flId, divId, depId, dateFrom, dateTo, viewBy, subDepId) {\n    this.blId = blId;\n    this.flId = flId;\n    this.divId = divId;\n    this.depId = depId;\n    this.dateFrom = dateFrom;\n    this.dateTo = dateTo;\n    this.viewBy = viewBy;\n    this.subDepId = subDepId;\n  }\n}\nexport let SpaceAllocationStatisticsByDivDepComponent = /*#__PURE__*/(() => {\n  class SpaceAllocationStatisticsByDivDepComponent {\n    constructor(blServ, formBuilder, cdr, divisionservice, departmentservice, datePipe, enumsrv, bookingSrv, messageService, subDeptService, bps) {\n      this.blServ = blServ;\n      this.formBuilder = formBuilder;\n      this.cdr = cdr;\n      this.divisionservice = divisionservice;\n      this.departmentservice = departmentservice;\n      this.datePipe = datePipe;\n      this.enumsrv = enumsrv;\n      this.bookingSrv = bookingSrv;\n      this.messageService = messageService;\n      this.subDeptService = subDeptService;\n      this.bps = bps;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.departmentData = [];\n      this.alldepartmentData = [];\n      this.enumAllSubDepartment = [];\n      this.enumSubDepartment = [];\n      this.enumDivision = [];\n      this.enumBL = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.showGrid = false;\n      this.showGridLines = false;\n      this.showAllocatedPopup = false;\n      this.showAllRoomsPopup = false;\n      this.gridblfldata = [];\n      this.chartblfldata = [];\n      this.firstParamName = '';\n      this.secondParamName = '';\n      this.showSecondParam = false;\n      this.thirdParamName = '';\n      this.showThirdParam = false;\n      this.roomData = [];\n      this.allroomData = [];\n      this.filter = new roomfilter(null, null, null, null, null, null, null, null);\n      this.viewByData = [{\n        \"id\": 0,\n        \"lable\": 'Division',\n        \"value\": \"div_id\"\n      }, {\n        \"id\": 1,\n        \"lable\": 'Department',\n        \"value\": \"dep_id\"\n      }, {\n        \"id\": 2,\n        \"lable\": 'Sub Department',\n        \"value\": \"sub_dep_id\"\n      }];\n      this.displayTypeData = [{\n        \"id\": 0,\n        \"lable\": 'Grid',\n        \"value\": \"grid\"\n      }, {\n        \"id\": 1,\n        \"lable\": 'Bar Chart',\n        \"value\": \"bar_chart\"\n      }];\n      this.monthStart = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n      this.monthEnd = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);\n      this.view = [1000, 495];\n      this.showXAxis = true;\n      this.showXAxisLabel = true;\n      this.xAxisLabel = '';\n      this.barchartData = [];\n      this.legendItems = [];\n      this.showYAxis = true;\n      this.gradient = false;\n      this.showLegend = false;\n      this.showYAxisLabel = true;\n      this.yAxisLabel = 'Area (sq.ft)';\n      this.showbarchart = false;\n      this.chartImg = [];\n      this.grid_array = [];\n      this.rotateXAxisTicks = false;\n      this.trimXAxisTicks = true;\n      this.maxXAxisTickLength = 12;\n      this.isDashboardUse = false;\n      this.useTabletProtrait = false;\n      this.useTabletLandscape = false;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"divId\"],\n        sortOrder: \"ASC\"\n      };\n      this.totalElements = 0;\n      this.pagfilterCriteriaList = [];\n      this.isFiltered = false;\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.filterPanel = this.formBuilder.group({\n        divId: [null],\n        depId: [null],\n        subDepId: [null],\n        dateFrom: [null, [Validators.required]],\n        dateTo: [null, [Validators.required]],\n        blId: [null],\n        flId: [null],\n        viewBy: [null, [Validators.required]],\n        displayType: [null]\n      });\n    }\n    ngOnInit() {\n      this.bps.register(this);\n      this.loadAllDivisions();\n      this.loadAllDepartments();\n      this.loadSubDepartment();\n      this.loadCommonAreaEnums();\n      this.filterPanel.patchValue({\n        displayType: this.displayTypeData[0].value,\n        dateFrom: this.monthStart,\n        dateTo: this.monthEnd\n      });\n      this.checkIsDashboardUse();\n    }\n    notify() {\n      this.useTabletProtrait = BreakpointService.useTabletProtrait;\n      this.useTabletLandscape = BreakpointService.useTabletLandscape;\n    }\n    loadAllDivisions() {\n      this.enumDivision = [];\n      this.divisionservice.getAllDivisions().subscribe(res => {\n        this.enumDivision = res;\n        this.enumDivision.unshift({\n          divId: null,\n          divCode: 'Make a selection'\n        });\n      });\n    }\n    loadAllDepartments() {\n      this.alldepartmentData = [];\n      this.departmentservice.getAllDepartments().subscribe(res => {\n        this.alldepartmentData = res;\n        this.alldepartmentData.unshift({\n          depId: null,\n          depCode: 'Make a selection',\n          divId: null\n        });\n        this.departmentData = [...this.alldepartmentData];\n      });\n    }\n    loadSubDepartment() {\n      this.enumAllSubDepartment = [];\n      this.subDeptService.getAllSubDepartments().subscribe(res => {\n        if (res) {\n          this.enumAllSubDepartment = res;\n          this.enumAllSubDepartment.unshift({\n            subDepCode: 'Make a Selection',\n            depId: null,\n            divId: null,\n            subDepId: null\n          });\n          this.enumSubDepartment = [...this.enumAllSubDepartment];\n        }\n      });\n    }\n    onSelectDivision(event) {\n      if (event.divId != null) {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            depId: null,\n            subDepId: null\n          });\n          this.loadDepartmentCode(event.divId);\n          this.loadSubDepartmentCode(event.divId, null);\n        }, 10);\n      } else {\n        this.departmentData = [...this.alldepartmentData];\n      }\n    }\n    loadDepartmentCode(divId) {\n      if (divId != null) {\n        this.departmentData = [];\n        this.departmentData = this.alldepartmentData.filter(t => t.divId == divId);\n        this.departmentData.unshift({\n          depId: null,\n          depCode: 'Make a selection',\n          divId: null\n        });\n      } else {\n        this.departmentData = [];\n        this.departmentData = [...this.alldepartmentData];\n      }\n    }\n    onSelectDepartment(event) {\n      if (event.depId != null) {\n        this.filterPanel.patchValue({\n          divId: event.divId\n        });\n        this.loadSubDepartmentCode(event.divId, event.depId);\n      } else {\n        this.filterPanel.patchValue({\n          divId: null\n        });\n        this.enumSubDepartment = [...this.enumAllSubDepartment];\n      }\n    }\n    loadSubDepartmentCode(divId, depId) {\n      this.enumSubDepartment = [];\n      if (divId != null) {\n        this.enumSubDepartment = this.enumAllSubDepartment.filter(t => t.divId == divId);\n      }\n      if (depId != null) {\n        this.enumSubDepartment = this.enumSubDepartment.filter(t => t.depId == depId);\n      }\n      this.enumSubDepartment.unshift({\n        subDepCode: 'Make a Selection',\n        depId: null,\n        divId: null,\n        subDepId: null\n      });\n    }\n    loadAllBuilding() {\n      this.blServ.getALLBuilding().subscribe(res => {\n        this.enumBL = res;\n        this.enumBL.unshift({\n          blId: null,\n          blNameString: 'Make a selection'\n        });\n      });\n    }\n    loadAllFloor() {\n      this.blServ.getALLFloor().subscribe(res => {\n        this.enumAllFL = res;\n        this.enumAllFL.unshift({\n          flId: null,\n          flNameString: 'Make a selection',\n          blId: null\n        });\n        this.enumFL = this.enumAllFL;\n      });\n    }\n    onSelectBlCode($event) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n      }, 10);\n      if ($event.blId != null) {\n        this.selectedBl = $event;\n        this.selectedFl = {};\n      } else {\n        this.selectedBl = {};\n        this.selectedFl = {};\n      }\n    }\n    onSelectFlCode(event) {\n      if (event.flId != null) {\n        const blData = {\n          blId: event.blId,\n          blNameString: event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: event.blId\n          });\n        }, 10);\n      } else {}\n    }\n    loadCommonAreaEnums() {\n      this.enumsrv.getEnums().subscribe(res => {\n        let resultCommonArea = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase() && t.enumValue.toLocaleUpperCase() == 'None'.toLocaleUpperCase());\n        this.enumCommonAreaNoneType = resultCommonArea[0].enumKey;\n      });\n    }\n    checkDates(control) {\n      if (control !== undefined && control != null) {\n        this.filterPanel.controls['dateTo'].setErrors(null);\n        this.filterPanel.clearAsyncValidators();\n        this.filterPanel.updateValueAndValidity();\n        let dateFrom = this.formatDate(this.filterPanel.controls.dateFrom.value);\n        let dateTo = this.formatDate(this.filterPanel.controls.dateTo.value);\n        if (dateFrom != null && dateTo != null) {\n          if (dateTo <= dateFrom) {\n            this.filterPanel.controls['dateTo'].setErrors({\n              'incorrect': true\n            });\n            this.filterPanel.updateValueAndValidity();\n            return {\n              'incorrect': true\n            };\n          } else {\n            return null;\n          }\n        } else {\n          this.filterPanel.controls['dateTo'].setErrors({\n            'isnull': true\n          });\n          this.filterPanel.updateValueAndValidity();\n          return null;\n        }\n      }\n      return null;\n    }\n    formatDate(date) {\n      if (date != null) {\n        var d = new Date(date);\n        return d;\n      } else {\n        return null;\n      }\n    }\n    onSearch() {\n      this.gridblfldata = [];\n      this.chartblfldata = [];\n      this.showGrid = false;\n      this.showbarchart = false;\n      this.firstParamName = '';\n      this.showSecondParam = false;\n      this.secondParamName = '';\n      this.showThirdParam = false;\n      this.thirdParamName = '';\n      let blId = this.filterPanel.controls.blId.value;\n      let flId = this.filterPanel.controls.flId.value;\n      let divId = this.filterPanel.controls.divId.value;\n      let depId = this.filterPanel.controls.depId.value;\n      let subDepId = this.filterPanel.controls.subDepId.value;\n      let viewBy = this.filterPanel.controls.viewBy.value;\n      let displayType = this.filterPanel.controls.displayType.value;\n      this.filter.blId = blId != null ? blId : null;\n      this.filter.flId = flId != null ? flId : null;\n      this.filter.divId = divId != null ? divId : null;\n      this.filter.depId = depId != null ? depId : null;\n      this.filter.subDepId = subDepId != null ? subDepId : null;\n      this.filter.viewBy = viewBy;\n      this.filter.dateFrom = this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\");\n      this.filter.dateTo = this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\");\n      let data = {\n        dateFrom: this.datePipe.transform(this.filterPanel.controls.dateFrom.value, \"yyyy-MM-dd\"),\n        dateTo: this.datePipe.transform(this.filterPanel.controls.dateTo.value, \"yyyy-MM-dd\"),\n        blId: blId,\n        flId: flId,\n        divId: divId,\n        depId: depId,\n        viewBy: viewBy,\n        subDepId: subDepId\n      };\n      if (displayType == 'grid') {\n        this.loadGridBlFlData();\n      } else {\n        this.blServ.getspaceallocationstatictics(data).subscribe(res => {\n          if (res) {\n            this.chartblfldata = res;\n            if (viewBy == 'div_id') {\n              this.chartblfldata = this.chartblfldata.map(each => {\n                return {\n                  ...each,\n                  \"name\": each.firstvalue\n                };\n              });\n            } else if (viewBy == 'dep_id') {\n              this.chartblfldata = this.chartblfldata.map(each => {\n                return {\n                  ...each,\n                  \"name\": each.firstvalue + \"-\" + each.secondvalue\n                };\n              });\n            } else if (viewBy == 'sub_dep_id') {\n              this.chartblfldata = this.chartblfldata.map(each => {\n                return {\n                  ...each,\n                  \"name\": each.firstvalue + \"-\" + each.secondvalue + \"-\" + each.thirdvalue\n                };\n              });\n            }\n            this.setChartData();\n            this.showbarchart = true;\n          }\n        });\n      }\n    }\n    loadGridBlFlData() {\n      let viewBy = this.filterPanel.controls.viewBy.value;\n      let data = {\n        dateFrom: this.filter.dateFrom,\n        dateTo: this.filter.dateTo,\n        blId: this.filter.blId,\n        flId: this.filter.flId,\n        divId: this.filter.divId,\n        depId: this.filter.depId,\n        viewBy: this.filter.viewBy,\n        subDepId: this.filter.subDepId,\n        filterDto: {\n          paginationDTO: this.paginationObj,\n          filterCriteria: this.pagfilterCriteriaList\n        }\n      };\n      this.blServ.getspaceallocationstaticticsPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFiltered = false;\n          let content = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n          this.gridblfldata = content;\n          if (viewBy == 'div_id') {\n            this.firstParamName = 'Division code';\n            this.showSecondParam = false;\n            this.secondParamName = '';\n            if (this.filter.divId != null) {\n              this.gridblfldata = this.gridblfldata.filter(each => each.divId == this.filter.divId);\n            }\n          } else if (viewBy == 'dep_id') {\n            this.firstParamName = 'Division code';\n            this.showSecondParam = true;\n            this.secondParamName = 'Department Code';\n            if (this.filter.divId != null) {\n              this.gridblfldata = this.gridblfldata.filter(each => each.divId == this.filter.divId);\n            }\n            if (this.filter.depId != null) {\n              this.gridblfldata = this.gridblfldata.filter(each => each.depId == this.filter.depId);\n            }\n          } else if (viewBy == 'sub_dep_id') {\n            this.firstParamName = 'Division code';\n            this.showSecondParam = true;\n            this.secondParamName = 'Department Code';\n            this.showThirdParam = true;\n            this.thirdParamName = 'Sub Department Code';\n            if (this.filter.divId != null) {\n              this.gridblfldata = this.gridblfldata.filter(each => each.divId == this.filter.divId);\n            }\n            if (this.filter.depId != null) {\n              this.gridblfldata = this.gridblfldata.filter(each => each.depId == this.filter.depId);\n            }\n            if (this.filter.subDepId != null) {\n              this.gridblfldata = this.gridblfldata.filter(each => each.subDepId == this.filter.subDepId);\n            }\n          }\n          this.showGrid = true;\n        }\n      });\n    }\n    onClear() {\n      this.gridblfldata = [];\n      this.legendItems = [];\n      this.firstParamName = '';\n      this.secondParamName = '';\n      this.showSecondParam = false;\n      this.showThirdParam = false;\n      this.thirdParamName = '';\n      this.roomData = [];\n      this.allroomData = [];\n      this.showGrid = false;\n      this.showbarchart = false;\n      this.showAllocatedPopup = false;\n      this.showAllRoomsPopup = false;\n      this.chartImg = [];\n      this.filterPanel.patchValue({\n        divId: null,\n        depId: null,\n        dateFrom: this.monthStart,\n        dateTo: this.monthEnd,\n        blId: null,\n        flId: null,\n        viewBy: null,\n        displayType: this.displayTypeData[0].value,\n        subDepId: null\n      });\n      this.filter = {\n        blId: null,\n        flId: null,\n        divId: null,\n        depId: null,\n        dateFrom: null,\n        dateTo: null,\n        viewBy: null,\n        subDepId: null\n      };\n      this.pagfilterCriteriaList = [];\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.selectedBl = {};\n      this.selectedFl = {};\n    }\n    getRoomData(room) {\n      this.showAllRoomsPopup = false;\n      this.showAllocatedPopup = false;\n      this.roomData = [];\n      let viewByValue = this.filterPanel.controls.viewBy.value;\n      if (viewByValue == 'div_id') {\n        this.filter.divId = room.divId;\n      } else if (viewByValue == 'dep_id') {\n        this.filter.divId = room.divId;\n        this.filter.depId = room.depId;\n      } else if (viewByValue == 'sub_dep_id') {\n        this.filter.divId = room.divId;\n        this.filter.depId = room.depId;\n        this.filter.subDepId = room.subDepId;\n      }\n      this.blServ.getspaceallocationstaticticsroomdata(this.filter).subscribe(res => {\n        if (res) {\n          this.roomData = res;\n          this.showAllocatedPopup = true;\n        }\n      });\n    }\n    setChartData() {\n      this.barchartData = [];\n      const barChartData = [];\n      this.generateColors();\n      Object.values(this.chartblfldata).forEach((each, index) => {\n        if (each.occupiedarea > 0) {\n          let dataobj = {\n            name: each.name,\n            value: each.occupiedarea\n          };\n          barChartData.push(dataobj);\n        }\n      });\n      if (barChartData.length < 5) {\n        let empty = '  ';\n        for (let i = 0; i < 5 - barChartData.length; i++) {\n          barChartData.push({\n            name: empty.repeat(i + 1),\n            value: 0\n          });\n        }\n      }\n      this.barchartData = barChartData;\n      this.legendItems = this.barchartData.filter(item => item.value > 0);\n      this.cdr.detectChanges();\n    }\n    generateColors() {\n      const dynamicColors = [];\n      Object.values(this.chartblfldata).forEach((each, index) => {\n        if (each.occupiedarea > 0) {\n          let color = '';\n          do {\n            color = `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n          } while (color === 'rgb(255, 255, 255)' || this.isWhiteColorShade(color) || dynamicColors.includes(color));\n          {\n            color = `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)})`;\n          }\n          ;\n          dynamicColors.push(color);\n        }\n      });\n      this.customColor = {\n        domain: [...dynamicColors]\n      };\n    }\n    isWhiteColorShade(color) {\n      const rgbValues = color.match(/\\d+/g);\n      const r = parseInt(rgbValues[0]);\n      const g = parseInt(rgbValues[1]);\n      const b = parseInt(rgbValues[2]);\n      const threshold = 200;\n      const average = (r + g + b) / 3;\n      return average > threshold;\n    }\n    onSelectBarChart(event) {\n      this.roomData = [];\n      this.allroomData = [];\n      this.showAllocatedPopup = false;\n      this.showAllRoomsPopup = false;\n      let viewByValue = this.filterPanel.controls.viewBy.value;\n      if (typeof event === \"object\" && event !== null) {\n        let parts = event.name.split('-');\n        if (viewByValue == \"div_id\") {\n          this.filter.divId = this.searchInDivDepData(parts[0], null, null).divId;\n        } else if (viewByValue == \"dep_id\") {\n          let searchResultObj = this.searchInDivDepData(parts[0], parts[1], null);\n          this.filter.divId = searchResultObj.divId;\n          this.filter.depId = searchResultObj.depId;\n        } else if (viewByValue == \"sub_dep_id\") {\n          let searchResultObj = this.searchInDivDepData(parts[0], parts[1], parts[2]);\n          this.filter.divId = searchResultObj.divId;\n          this.filter.depId = searchResultObj.depId;\n          this.filter.subDepId = searchResultObj.subDepId;\n        }\n      } else {\n        let parts = event.split('-');\n        if (viewByValue == \"div_id\") {\n          this.filter.divId = this.searchInDivDepData(parts[0], null, null).divId;\n        } else if (viewByValue == \"dep_id\") {\n          let searchResultObj = this.searchInDivDepData(parts[0], parts[1], null);\n          this.filter.divId = searchResultObj.divId;\n          this.filter.depId = searchResultObj.depId;\n        } else if (viewByValue == \"sub_dep_id\") {\n          let searchResultObj = this.searchInDivDepData(parts[0], parts[1], parts[2]);\n          this.filter.divId = searchResultObj.divId;\n          this.filter.depId = searchResultObj.depId;\n          this.filter.subDepId = searchResultObj.subDepId;\n        }\n      }\n      this.blServ.getspaceallocationstaticticsroomdata(this.filter).subscribe(res => {\n        if (res) {\n          this.roomData = res;\n          this.showAllocatedPopup = true;\n        }\n      });\n    }\n    exportChartToPDF() {\n      const divElement = this.chartContainer.nativeElement;\n      html2canvas(divElement).then(canvas => {\n        const imgData = canvas.toDataURL('image/png');\n        this.chartImg = [];\n        this.chartImg.push(imgData);\n        this.printPDF();\n      });\n    }\n    printPDF() {\n      this.messageService.clear();\n      var reportDetails = {\n        chartImg: this.chartImg,\n        title: 'View By ' + this.getlabelfromviewbyvalue(this.filterPanel.controls.viewBy.value)\n      };\n      this.bookingSrv.printPdf(reportDetails).subscribe(res => {\n        if (res != null) {\n          this.messageService.add({\n            key: 'spaceallocationMsg',\n            severity: 'success',\n            summary: 'PDF Created',\n            detail: 'PDF created successfully'\n          });\n          var file = new Blob([res], {\n            type: 'application/pdf'\n          });\n          var fileURL = URL.createObjectURL(file);\n          window.open(fileURL);\n        }\n      });\n    }\n    exportGridToExcel() {\n      this.getDestructuredData(this.gridblfldata);\n      let excelHeaders = [];\n      import(\"xlsx\").then(xlsx => {\n        const worksheet = xlsx.utils.json_to_sheet(this.grid_array);\n        worksheet['!cols'] = [];\n        let lengthObj = Object.keys(this.gridblfldata[0]).length;\n        for (let i = 0; i < lengthObj; i++) {\n          worksheet['!cols'].push({\n            wch: 20\n          });\n        }\n        if (this.showSecondParam && !this.showThirdParam) {\n          excelHeaders = [this.firstParamName, this.secondParamName, \"Allocated Area (sq.ft)\"];\n        } else if (this.showSecondParam && this.showThirdParam) {\n          excelHeaders = [this.firstParamName, this.secondParamName, this.thirdParamName, \"Allocated Area (sq.ft)\"];\n        } else {\n          excelHeaders = [this.firstParamName, \"Allocated Area (sq.ft)\"];\n        }\n        const headers = excelHeaders.map((header, index) => ({\n          v: header,\n          position: String.fromCharCode(65 + index) + 1\n        }));\n        headers.forEach(header => {\n          worksheet[header.position] = {\n            v: header.v\n          };\n        });\n        const workbook = {\n          Sheets: {\n            'data': worksheet\n          },\n          SheetNames: ['data']\n        };\n        const excelBuffer = xlsx.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array'\n        });\n        this.saveAsExcelFile(excelBuffer, \"allocation\");\n      });\n    }\n    getDestructuredData(data) {\n      this.grid_array = data.map(item => {\n        if (this.showSecondParam && !this.showThirdParam) {\n          return {\n            [this.firstParamName]: item['divCode'],\n            [this.secondParamName]: item['depCode'],\n            \"Allocated Area (sq.ft)\": item['occupiedarea']\n          };\n        } else if (this.showSecondParam && this.showThirdParam) {\n          return {\n            [this.firstParamName]: item['divCode'],\n            [this.secondParamName]: item['depCode'],\n            [this.thirdParamName]: item['subDepCode'],\n            \"Allocated Area (sq.ft)\": item['occupiedarea']\n          };\n        } else {\n          return {\n            [this.firstParamName]: item['divCode'],\n            \"Allocated Area (sq.ft)\": item['occupiedarea']\n          };\n        }\n      });\n    }\n    saveAsExcelFile(buffer, fileName) {\n      let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n      let EXCEL_EXTENSION = '.xlsx';\n      const data = new Blob([buffer], {\n        type: EXCEL_TYPE\n      });\n      FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n    }\n    getlabelfromviewbyvalue(value) {\n      let result = this.viewByData.filter(each => each.value == value);\n      return result[0].lable;\n    }\n    checkactive(event) {\n      event.entries = [];\n      event.value = null;\n    }\n    onLegendItemClick(item) {\n      this.roomData = [];\n      this.allroomData = [];\n      this.showAllocatedPopup = false;\n      this.showAllRoomsPopup = false;\n      let viewByValue = this.filterPanel.controls.viewBy.value;\n      let parts = item.name.split('-');\n      if (viewByValue == \"div_id\") {\n        this.filter.divId = this.searchInDivDepData(parts[0], null, null).divId;\n      } else if (viewByValue == \"dep_id\") {\n        let searchResultObj = this.searchInDivDepData(parts[0], parts[1], null);\n        this.filter.divId = searchResultObj.divId;\n        this.filter.depId = searchResultObj.depId;\n      } else if (viewByValue == \"sub_dep_id\") {\n        let searchResultObj = this.searchInDivDepData(parts[0], parts[1], parts[2]);\n        this.filter.divId = searchResultObj.divId;\n        this.filter.depId = searchResultObj.depId;\n        this.filter.subDepId = searchResultObj.subDepId;\n      }\n      this.blServ.getspaceallocationstaticticsroomdata(this.filter).subscribe(res => {\n        if (res) {\n          this.roomData = res;\n          this.showAllocatedPopup = true;\n        }\n      });\n    }\n    searchInDivDepData(divCode, depCode, subDepCode) {\n      let returnData = {\n        divId: null,\n        depId: null,\n        subDepId: null\n      };\n      returnData.divId = this.chartblfldata.find(each => each.divCode == divCode)?.divId;\n      if (depCode != null) {\n        returnData.depId = this.chartblfldata.find(each => each.divCode == divCode && each.depCode == depCode)?.depId;\n      }\n      if (subDepCode != null) {\n        returnData.subDepId = this.chartblfldata.find(each => each.divCode == divCode && each.depCode == depCode && each.subDepCode == subDepCode)?.subDepId;\n      }\n      return returnData;\n    }\n    checkIsDashboardUse() {\n      if (this.isDashboardUse) {\n        this.view = [500, 400];\n        this.filterPanel.patchValue({\n          divId: null,\n          depId: null,\n          dateFrom: this.dashboardDateRange.dateFrom,\n          dateTo: this.dashboardDateRange.dateTo,\n          blId: null,\n          flId: null,\n          viewBy: this.viewByData[0].value,\n          displayType: this.displayTypeData[1].value,\n          subDepId: null\n        });\n        this.onSearch();\n      }\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadGridBlFlData();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined && filterValue !== null && filterValue !== '') {\n            let fieldname = '';\n            if (field == \"firstvalue\") {\n              fieldname = \"div_code\";\n            } else if (field == \"secondvalue\") {\n              fieldname = \"dep_code\";\n            } else {\n              fieldname = \"sub_dep_code\";\n            }\n            let pagfilterCriteria = {\n              fieldName: fieldname,\n              value: filterValue,\n              matchMode: matchMode\n            };\n            this.updateFilterCriteriaList(pagfilterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        setTimeout(() => {\n          this.loadGridBlFlData();\n        }, 100);\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.pagfilterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.pagfilterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.pagfilterCriteriaList[index] = filterCriteria;\n        } else {\n          this.pagfilterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.bps.unregister(this);\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blServ.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blServ.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.updateFlList(this.selectedFl);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      if (flData.flId) {\n        this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n        this.enumFL = this.enumFL.filter(t => t.flId !== null);\n        this.enumFL.unshift(flData);\n      }\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    changeViewBy(event) {}\n    static #_ = this.ɵfac = function SpaceAllocationStatisticsByDivDepComponent_Factory(t) {\n      return new (t || SpaceAllocationStatisticsByDivDepComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.DivisionService), i0.ɵɵdirectiveInject(i4.DepartmentService), i0.ɵɵdirectiveInject(i5.DatePipe), i0.ɵɵdirectiveInject(i6.EnumService), i0.ɵɵdirectiveInject(i7.BookingService), i0.ɵɵdirectiveInject(i8.MessageService), i0.ɵɵdirectiveInject(i9.SubDepartmentService), i0.ɵɵdirectiveInject(i10.BreakpointService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SpaceAllocationStatisticsByDivDepComponent,\n      selectors: [[\"app-space-allocation-statistics-by-div-dep\"]],\n      viewQuery: function SpaceAllocationStatisticsByDivDepComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartContainer = _t.first);\n        }\n      },\n      inputs: {\n        isDashboardUse: \"isDashboardUse\",\n        dashboardDateRange: \"dashboardDateRange\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 11,\n      vars: 19,\n      consts: [[\"class\", \"card\", 4, \"ngIf\"], [\"class\", \"card\", \"style\", \"height:64vh;\", 4, \"ngIf\"], [4, \"ngIf\"], [\"styleClass\", \"dark-panel\", \"id\", \"preview\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"key\", \"spaceallocationMsg\", \"position\", \"top-center\"], [\"key\", \"spaceallocationGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"card\"], [\"header\", \"Room Summary\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"p-fluid\", \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"dateFrom\", \"inputId\", \"icon\", 3, \"showIcon\", \"readonlyInput\", \"ngModelChange\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"dateTo\", \"inputId\", \"icon\", 3, \"showIcon\", \"readonlyInput\", \"ngModelChange\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"viewBy\", \"bindLabel\", \"lable\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"displayType\", \"bindLabel\", \"lable\", \"bindValue\", \"value\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", 2, \"width\", \"67px\", \"margin-left\", \"32%\", \"margin-top\", \"20px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", 2, \"width\", \"67px\", \"margin-left\", \"5px\", \"margin-top\", \"20px\", 3, \"click\"], [\"style\", \"width:30px; display:inline-flex;margin-top:20px;\", 4, \"ngIf\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"open\", \"scrollToEnd\", \"search\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"open\", \"change\", \"scrollToEnd\", \"search\"], [\"appendTo\", \"body\", \"formControlName\", \"divId\", \"bindLabel\", \"divCode\", \"bindValue\", \"divId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"depId\", \"bindLabel\", \"depCode\", \"bindValue\", \"depId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"subDepId\", \"bindLabel\", \"subDepCode\", \"bindValue\", \"subDepId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"width\", \"30px\", \"display\", \"inline-flex\", \"margin-top\", \"20px\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-excel\", \"matTooltip\", \"XLS\", \"matTooltipPosition\", \"below\", 1, \"p-button-success\", \"p-mr-2\", \"pull-right\", 2, \"margin-left\", \"5px\", 3, \"click\"], [\"icon\", \"pi pi-file-pdf\", \"matTooltip\", \"Generate PDF\", \"matTooltipPosition\", \"below\", \"styleClass\", \"p-button-raised p-button-danger\", 2, \"width\", \"30px\", \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;margin-left:5px;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\", \"margin-left\", \"5px\"], [2, \"width\", \"25%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", 2, \"margin-top\", \"20px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", 2, \"margin-left\", \"5px\", \"margin-top\", \"20px\", 3, \"click\"], [\"icon\", \"pi pi-file-pdf\", \"matTooltip\", \"Generate PDF\", \"matTooltipPosition\", \"below\", \"styleClass\", \"p-button-raised p-button-danger\", 2, \"width\", \"20px\", \"margin-left\", \"5px\", 3, \"click\"], [1, \"card\", 2, \"height\", \"64vh\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"430px\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"scrollable\", \"onFilter\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"pSortableColumn\", \"firstvalue\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"firstvalue\"], [\"type\", \"text\", \"field\", \"firstvalue\", \"display\", \"menu\"], [\"pSortableColumn\", \"secondvalue\", 4, \"ngIf\"], [\"pSortableColumn\", \"thirdvalue\", 4, \"ngIf\"], [\"pSortableColumn\", \"occupiedarea\"], [\"field\", \"occupiedarea\"], [\"pSortableColumn\", \"secondvalue\"], [\"field\", \"secondParamValue\"], [\"type\", \"text\", \"field\", \"secondvalue\", \"display\", \"menu\"], [\"pSortableColumn\", \"thirdvalue\"], [\"field\", \"thirdvalue\"], [\"type\", \"text\", \"field\", \"thirdvalue\", \"display\", \"menu\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [2, \"text-align\", \"right\"], [\"chartContainer\", \"\"], [\"style\", \"overflow-x: auto; \", 4, \"ngIf\"], [\"style\", \"width:100%;height:450px; display:flex;justify-content: center;align-items: center;\", 4, \"ngIf\"], [2, \"overflow-x\", \"auto\"], [2, \"display\", \"flex\"], [3, \"view\", \"scheme\", \"results\", \"xAxis\", \"yAxis\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"yAxisLabel\", \"showGridLines\", \"barPadding\", \"trimXAxisTicks\", \"maxXAxisTickLength\", \"select\"], [1, \"legend\"], [1, \"legend-title-container\"], [1, \"legend-title\"], [\"class\", \"legend-labels\", 4, \"ngFor\", \"ngForOf\"], [1, \"legend-labels\"], [1, \"legend-label\", 3, \"click\"], [3, \"title\"], [1, \"legend-label-color\"], [1, \"legend-label-text\"], [2, \"width\", \"100%\", \"height\", \"450px\", \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [2, \"margin\", \"0px\"], [3, \"data\"]],\n      template: function SpaceAllocationStatisticsByDivDepComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, SpaceAllocationStatisticsByDivDepComponent_div_0_Template, 5, 4, \"div\", 0);\n          i0.ɵɵtemplate(1, SpaceAllocationStatisticsByDivDepComponent_div_1_Template, 7, 10, \"div\", 1);\n          i0.ɵɵtemplate(2, SpaceAllocationStatisticsByDivDepComponent_div_2_Template, 4, 2, \"div\", 2);\n          i0.ɵɵelementStart(3, \"p-dialog\", 3);\n          i0.ɵɵlistener(\"visibleChange\", function SpaceAllocationStatisticsByDivDepComponent_Template_p_dialog_visibleChange_3_listener($event) {\n            return ctx.showAllocatedPopup = $event;\n          });\n          i0.ɵɵtemplate(4, SpaceAllocationStatisticsByDivDepComponent_ng_template_4_Template, 2, 0, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, SpaceAllocationStatisticsByDivDepComponent_ng_template_5_Template, 1, 1, \"ng-template\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"p-dialog\", 3);\n          i0.ɵɵlistener(\"visibleChange\", function SpaceAllocationStatisticsByDivDepComponent_Template_p_dialog_visibleChange_6_listener($event) {\n            return ctx.showAllRoomsPopup = $event;\n          });\n          i0.ɵɵtemplate(7, SpaceAllocationStatisticsByDivDepComponent_ng_template_7_Template, 2, 0, \"ng-template\", 4);\n          i0.ɵɵtemplate(8, SpaceAllocationStatisticsByDivDepComponent_ng_template_8_Template, 1, 1, \"ng-template\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"p-toast\", 6)(10, \"p-confirmDialog\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.isDashboardUse);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showGrid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showbarchart);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(17, _c2));\n          i0.ɵɵproperty(\"visible\", ctx.showAllocatedPopup)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(18, _c3));\n          i0.ɵɵproperty(\"visible\", ctx.showAllRoomsPopup)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i8.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SortIcon, i11.ColumnFilter, i12.Calendar, i13.ButtonDirective, i13.Button, i14.Dialog, i15.Toast, i16.Panel, i17.ConfirmDialog, i18.NgSelectComponent, i19.MatTooltip, i20.SpaceAllocationRoomListComponent, i21.BarVerticalComponent, i22.AddRoomReportTableComponent, i23.Paginator],\n      styles: [\"[_nghost-%COMP%]     .p-dialog-mask{z-index:1000!important}[_nghost-%COMP%]     #preview .p-dialog .p-dialog-header{padding:.7rem!important}[_nghost-%COMP%]     #preview .p-dialog .p-dialog-content{padding:.25rem!important}[_nghost-%COMP%]     .dark-panel.p-dialog .p-dialog-header{border:5px!important}[_nghost-%COMP%]     .ngx-charts-outer{animation:chartFadeIn linear 0!important}[_nghost-%COMP%]     .ngx-charts .grid-panel.odd rect{fill:none!important}.legend[_ngcontent-%COMP%]{display:inline-block;padding:0;width:100%;max-width:280px}.legend-title-container[_ngcontent-%COMP%]{width:166px}.legend-title[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.legend-labels[_ngcontent-%COMP%]{line-height:85%;list-style:none;text-align:left;float:left;width:100%;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05);margin-bottom:0}.legend-label[_ngcontent-%COMP%]{cursor:pointer;font-size:90%;margin:8px}.legend-label-color[_ngcontent-%COMP%]{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.legend-label-text[_ngcontent-%COMP%]{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}@media screen and (min-width: 600px) and (max-width: 959px){  .p-button{padding:.25rem .5rem}}@media screen and (min-width: 960px) and (max-width: 1439px){  .p-button{padding:.25rem .5rem}}\"]\n    });\n  }\n  return SpaceAllocationStatisticsByDivDepComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}