{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/enum.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ng-select/ng-select\";\nimport * as i5 from \"ng-zorro-antd/table\";\nimport * as i6 from \"ng-zorro-antd/input\";\nimport * as i7 from \"../../../../../directive/directive/trim-input.directive\";\nfunction AddTeamComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 11)(2, \"div\", 3)(3, \"label\", 4);\n    i0.ɵɵtext(4, \"Team Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"ng-select\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx_r0.enumTeamType);\n  }\n}\nexport let AddTeamComponent = /*#__PURE__*/(() => {\n  class AddTeamComponent {\n    constructor(formBuilder, enumsrv) {\n      this.formBuilder = formBuilder;\n      this.enumsrv = enumsrv;\n      this.subscriptions = [];\n      this.enumTeamType = [];\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.teamFormPanel = this.formBuilder.group({\n        teamId: [null, [Validators.required]],\n        teamCode: ['', [Validators.required]],\n        teamType: ['', [Validators.required]],\n        description: [''],\n        highlightColor: ['#a6a6a6']\n      });\n      this.subscriptions.push(this.teamFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {\n      this.loadEnums();\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumTeamType = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'team'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'team_type'.toLocaleUpperCase());\n        this.enumTeamType.unshift({\n          enumKey: '',\n          enumValue: \"Make a selection\"\n        });\n      }, error => {});\n    }\n    get value() {\n      const teamDetails = {\n        teamId: this.teamFormPanel.controls.teamId.value,\n        teamCode: this.teamFormPanel.controls.teamCode.value,\n        teamType: this.teamFormPanel.controls.teamType.value,\n        description: this.teamFormPanel.controls.description.value,\n        highlightColor: this.teamFormPanel.controls.highlightColor.value\n      };\n      return teamDetails;\n    }\n    set value(value) {\n      setTimeout(() => {\n        this.teamFormPanel.patchValue({\n          teamId: value.teamId,\n          teamCode: value.teamCode,\n          teamType: value.teamType,\n          description: value.description,\n          highlightColor: value.highlightColor ?? '#a6a6a6'\n        });\n      });\n      this.onChange(value);\n      this.onTouched();\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.teamFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    validate(_) {\n      return this.teamFormPanel.valid ? null : {\n        teamFormPanel: {\n          valid: false\n        }\n      };\n    }\n    isValid() {\n      return this.getValidationErrors().length === 0;\n    }\n    getValidationErrors() {\n      const me = this;\n      const validationErros = [];\n      return validationErros;\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    static #_ = this.ɵfac = function AddTeamComponent_Factory(t) {\n      return new (t || AddTeamComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.EnumService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddTeamComponent,\n      selectors: [[\"app-add-team\"]],\n      inputs: {\n        isNew: \"isNew\",\n        showType: \"showType\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddTeamComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddTeamComponent),\n        multi: true\n      }])],\n      decls: 21,\n      vars: 2,\n      consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"teamCode\", \"formControlName\", \"teamCode\", \"maxlength\", \"32\", \"appTrimInput\", \"\", 1, \"form-control\"], [4, \"ngIf\"], [\"colspan\", \"2\"], [1, \"form-field-lable\"], [\"name\", \"description\", \"formControlName\", \"description\", \"rows\", \"2\", \"nz-input\", \"\", \"maxlength\", \"256\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [\"type\", \"color\", \"name\", \"highlightColor\", \"formControlName\", \"highlightColor\", \"maxlength\", \"32\", 1, \"form-control\", 2, \"width\", \"100px\", \"padding\", \"0.375rem\"], [2, \"width\", \"25%\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"teamType\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\"]],\n      template: function AddTeamComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Team Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(8, AddTeamComponent_tr_8_Template, 6, 3, \"tr\", 6);\n          i0.ɵɵelementStart(9, \"tr\")(10, \"td\", 7)(11, \"div\", 3)(12, \"label\", 8);\n          i0.ɵɵtext(13, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"textarea\", 9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"tr\")(16, \"td\", 2)(17, \"div\", 3)(18, \"label\", 4);\n          i0.ɵɵtext(19, \"Highlight Color \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 10);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.teamFormPanel);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.showType);\n        }\n      },\n      dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i4.NgSelectComponent, i5.NzTableCellDirective, i5.NzTrDirective, i6.NzInputDirective, i7.TrimInputDirective]\n    });\n  }\n  return AddTeamComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}