{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { EqStdDTO } from 'src/app/ui/Helpdesk/eq-std/model/eqStdDto';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport { BuildingFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/FloorFilterInputDTO.model';\nimport { RoomFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/RoomFilterInputDTO.model';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/ui/background-loc/services/bl.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/ui/Helpdesk/eq-std/services/eq-std.services\";\nimport * as i4 from \"src/app/services/enum.service\";\nimport * as i5 from \"src/app/ui/Helpdesk/eq-std/providers/eq-std.provider\";\nimport * as i6 from \"src/app/ui/background-loc/provider/bl.provider\";\nimport * as i7 from \"src/app/ui/background-loc/provider/fl.provider\";\nimport * as i8 from \"src/app/ui/background-loc/provider/rm.provider\";\nimport * as i9 from \"src/app/ui/division-department/providers/division-provider\";\nimport * as i10 from \"src/app/ui/division-department/providers/department-provider\";\nimport * as i11 from \"src/app/ui/division-department/services/division.services\";\nimport * as i12 from \"src/app/ui/division-department/services/department.services\";\nimport * as i13 from \"@ng-select/ng-select\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"primeng/selectbutton\";\nimport * as i16 from \"../../../../../../directive/numbers-only.directive\";\nimport * as i17 from \"../../../../../../directive/directive/trim-input.directive\";\nimport * as i18 from \"primeng/button\";\nexport let AddEqFormComponent = /*#__PURE__*/(() => {\n  class AddEqFormComponent {\n    constructor(blSrv, formBuilder, eqStdService, enumsrv, eqStdProvider, blProvider, flProvider, rmProvider, divisionProvider, departmentProvider, divisionservice, departmentservice) {\n      this.blSrv = blSrv;\n      this.formBuilder = formBuilder;\n      this.eqStdService = eqStdService;\n      this.enumsrv = enumsrv;\n      this.eqStdProvider = eqStdProvider;\n      this.blProvider = blProvider;\n      this.flProvider = flProvider;\n      this.rmProvider = rmProvider;\n      this.divisionProvider = divisionProvider;\n      this.departmentProvider = departmentProvider;\n      this.divisionservice = divisionservice;\n      this.departmentservice = departmentservice;\n      this.subscriptions = [];\n      this.enumList = [];\n      this.enumBL = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.enumAllRm = [];\n      this.enumRm = [];\n      this.eqStdData = [];\n      this.enumClonedList = []; //Enums\n      this.enumEq = [];\n      this.enumStatus = [];\n      this.enumStatusData = [];\n      this.presentEquipment = '';\n      this.docBucketId = 0;\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n      this.enumResApprovalReq = [];\n      this.enumDepreciationType = [];\n      this.enumOwnerShipType = [];\n      this.displayAssetClass = '';\n      this.enumDivision = [];\n      this.enumAllDepartment = [];\n      this.enumDepartment = [];\n      this.selectedBl = {};\n      this.selectedFl = {};\n      this.selectedRm = {};\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.eqFormPanel = this.formBuilder.group({\n        eqId: [null],\n        eqCode: [null, [Validators.required]],\n        eqStdId: [null, [Validators.required]],\n        status: [null, [Validators.required]],\n        description: [''],\n        svgElementId: [null],\n        docBucketId: [null],\n        depreciationType: [null, [Validators.required]],\n        stock: [null, [Validators.required]],\n        isReusable: [null],\n        resApprovalReq: [null],\n        ownershipType: [null, [Validators.required]],\n        minStockReq: [null, [Validators.required]],\n        blId: [null],\n        flId: [null],\n        rmId: [null],\n        divId: [null],\n        depId: [null]\n      });\n      this.subscriptions.push(this.eqFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    isValid() {\n      return this.getValidationErrors().length === 0;\n    }\n    ngOnInit() {\n      this.loadAllDivision();\n      this.loadAllDepartment();\n      this.loadEqStandard();\n      this.loadEnums();\n    }\n    loadEqStandard() {\n      this.eqStdService.getAllEqStds().subscribe(res => {\n        this.eqStdData = res;\n        this.eqStdData.unshift(new EqStdDTO('', \"Make a Selection\", '', 0));\n      });\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumEq = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'eq'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'eq'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n        this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'eq'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n        this.enumResApprovalReq = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'eq'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'res_approval_req'.toLocaleUpperCase());\n        this.enumDepreciationType = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'eq'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'depreciation_type'.toLocaleUpperCase());\n        this.enumOwnerShipType = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'eq'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'ownership_type'.toLocaleUpperCase());\n        this.enumStatusData = this.enumStatus;\n        this.enumStatusData.unshift(new EnumList(null, \"\", \"\", 'Make a selection', null));\n      }, error => {});\n    }\n    onSelectBlCode($event) {\n      setTimeout(() => {\n        this.eqFormPanel.patchValue({\n          flId: null,\n          rmId: null\n        });\n      }, 10);\n      if ($event.blId != null) {\n        this.selectedBl = $event;\n        this.selectedFl = {};\n      } else {\n        this.selectedBl = {};\n        this.selectedFl = {};\n      }\n    }\n    onSelectFlCode(event) {\n      if (event.flId != null) {\n        this.selectedFl = event;\n        const blData = {\n          blId: event.blId,\n          blNameString: event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        setTimeout(() => {\n          this.eqFormPanel.patchValue({\n            blId: event.blId,\n            rmId: null\n          });\n          this.selectedRm = {};\n        }, 10);\n      } else {\n        this.selectedFl = {};\n        this.selectedRm = {};\n      }\n    }\n    onSelectRmCode($event) {\n      if ($event.rmId != null) {\n        this.selectedRm = $event;\n        const blData = {\n          blId: $event.blId,\n          blNameString: $event.blNameString,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n        const flData = {\n          flId: $event.flId,\n          flNameString: $event.flNameString,\n          blId: $event.blId,\n          blNameString: $event.blNameString\n        };\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n        setTimeout(() => {\n          this.eqFormPanel.patchValue({\n            blId: $event.blId,\n            flId: $event.flId\n          });\n        }, 10);\n      } else {}\n    }\n    getValidationErrors() {\n      const me = this;\n      const validationErros = [];\n      return validationErros;\n    }\n    get value() {\n      const eqDetails = {\n        eqId: this.eqFormPanel.controls.eqId.value,\n        eqCode: this.eqFormPanel.controls.eqCode.value,\n        eqStdId: this.eqFormPanel.controls.eqStdId.value,\n        status: this.eqFormPanel.controls.status.value,\n        description: this.eqFormPanel.controls.description.value,\n        svgElementId: this.eqFormPanel.controls.svgElementId.value,\n        docBucketId: this.eqFormPanel.controls.docBucketId.value,\n        depreciationType: this.eqFormPanel.controls.depreciationType.value,\n        stock: this.eqFormPanel.controls.stock.value,\n        isReusable: this.eqFormPanel.controls.isReusable.value,\n        resApprovalReq: this.eqFormPanel.controls.resApprovalReq.value,\n        ownershipType: this.eqFormPanel.controls.ownershipType.value,\n        minStockReq: this.eqFormPanel.controls.minStockReq.value,\n        blId: this.eqFormPanel.controls.blId.value,\n        flId: this.eqFormPanel.controls.flId.value,\n        rmId: this.eqFormPanel.controls.rmId.value,\n        divId: this.eqFormPanel.controls.divId.value,\n        depId: this.eqFormPanel.controls.depId.value\n      };\n      return eqDetails;\n    }\n    set value(value) {\n      this.docBucketId = value.docBucketId ? value.docBucketId : 0;\n      if (value.blId) {\n        const blData = {\n          blId: value.blId,\n          blNameString: value.bl.blName != null ? value.bl.blCode + \" - \" + value.bl.blName : value.bl.blCode,\n          site: null\n        };\n        this.selectedBl = blData;\n        this.updateBlList(blData);\n      }\n      if (value.flId) {\n        const flData = {\n          flId: value.flId,\n          flNameString: value.fl.flName != null ? value.fl.flCode + \" - \" + value.fl.flName : value.fl.flCode,\n          blId: value.blId,\n          blNameString: value.bl.blName != null ? value.bl.blCode + \" - \" + value.bl.blName : value.bl.blCode\n        };\n        this.selectedFl = flData;\n        this.updateFlList(flData);\n      }\n      if (value.rmId) {\n        const rmData = {\n          rmId: value.rmId,\n          rmNameString: value.rm.rmName != null ? value.rm.rmCode + \" - \" + value.rm.rmName : value.rm.rmCode,\n          flId: value.rm.flId,\n          blId: value.rm.blId\n        };\n        this.selectedRm = rmData;\n        this.updateRmList(rmData);\n      }\n      setTimeout(() => {\n        this.eqFormPanel.patchValue({\n          eqId: value.eqId,\n          eqCode: value.eqCode,\n          eqStdId: value.eqStdId,\n          status: value.status ? value.status : \"In Service\",\n          description: value.description,\n          svgElementId: value.svgElementId,\n          docBucketId: value.docBucketId,\n          soldPrice: value.soldPrice,\n          costToReplace: value.costToReplace,\n          lifeExpectancy: value.lifeExpectancy,\n          depreciationType: value.depreciationType ? value.depreciationType : \"Straight-Line\",\n          stock: value.stock ? value.stock : 0,\n          isReusable: value.isReusable ? value.isReusable : \"Yes\",\n          resApprovalReq: value.resApprovalReq ? value.resApprovalReq : \"No\",\n          ownershipType: value.ownershipType ? value.ownershipType : \"Owned\",\n          minStockReq: value.minStockReq ? value.minStockReq : 0,\n          blId: value.blId,\n          flId: value.flId,\n          rmId: value.rmId,\n          divId: value.divId,\n          depId: value.depId\n        });\n      });\n      this.onChange(value);\n      this.onTouched();\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.eqFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    validate(_) {\n      return this.eqFormPanel.valid ? null : {\n        eqFormPanel: {\n          valid: false\n        }\n      };\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    onAddEqStandard() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        isEdit: false,\n        eqStdId: null,\n        newRecord: true\n      };\n      this.eqStdProvider.openDialog(dialogConfig);\n      this.eqStdProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.loadEqStandard();\n          this.setLatestEqStd(result);\n        }\n      });\n    }\n    setLatestEqStd(eqStdId) {\n      setTimeout(() => {\n        this.eqFormPanel.patchValue({\n          eqStdId: eqStdId\n        });\n      }, 100);\n    }\n    formatDate(date) {\n      if (date != null) {\n        var dateCreated = new Date(date);\n        return dateCreated;\n      } else {\n        return null;\n      }\n    }\n    loadAllDivision() {\n      this.divisionservice.getAllDivisions().subscribe(res => {\n        this.enumDivision = res;\n        this.enumDivision.unshift({\n          divId: null,\n          divCode: 'Make a selection'\n        });\n      });\n    }\n    loadAllDepartment() {\n      this.departmentservice.getAllDepartments().subscribe(res => {\n        this.enumAllDepartment = res;\n        this.enumAllDepartment.unshift({\n          depId: null,\n          depCode: 'Make a selection',\n          divId: null\n        });\n        this.enumDepartment = this.enumAllDepartment;\n      });\n    }\n    onSelectDivision(event) {\n      if (event.divId != null) {\n        setTimeout(() => {\n          this.eqFormPanel.patchValue({\n            depId: null\n          });\n          this.loadDepartmentCode(event.divId);\n        }, 10);\n      } else {\n        this.enumDepartment = [...this.enumAllDepartment];\n      }\n    }\n    onSelectDepartment(event) {\n      if (event.depId != null) {\n        setTimeout(() => {\n          this.eqFormPanel.patchValue({\n            divId: event.divId\n          });\n        }, 10);\n      } else {}\n    }\n    loadDepartmentCode(divId) {\n      if (divId != null) {\n        this.enumDepartment = [];\n        this.enumDepartment = this.enumAllDepartment.filter(t => t.divId == divId);\n        this.enumDepartment.unshift({\n          depId: null,\n          depCode: 'Make a selection',\n          divId: null\n        });\n      }\n    }\n    onAddBuilding() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        bl_id: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.blProvider.openDialog(dialogConfig);\n      this.blProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          const blData = this.createBlData(result[1]);\n          this.selectedBl = blData;\n          this.updateBlList(blData);\n          this.onSelectBlCode(result[1]);\n          this.setLatestBl(result[1].blId);\n        }\n      });\n    }\n    setLatestBl(blId) {\n      setTimeout(() => {\n        this.eqFormPanel.patchValue({\n          blId: blId\n        });\n      }, 100);\n    }\n    onAddFloor() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        fl_id: null,\n        bl_id: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.flProvider.openDialog(dialogConfig);\n      this.flProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          const blData = this.createBlData(result.bl);\n          this.selectedBl = blData;\n          this.updateBlList(blData);\n          const flData = this.createFlData(result);\n          this.selectedFl = flData;\n          this.updateFlList(flData);\n          this.onSelectBlCode(result);\n          this.onSelectFlCode(flData);\n          this.setLatestFl(result.flId);\n        }\n      });\n    }\n    setLatestFl(flId) {\n      setTimeout(() => {\n        this.eqFormPanel.patchValue({\n          flId: flId\n        });\n      }, 100);\n    }\n    onAddRoom() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        bl_id: null,\n        fl_id: null,\n        rm_id: null,\n        isEdit: true,\n        newRecord: true\n      };\n      this.rmProvider.openDialog(dialogConfig);\n      this.rmProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          const blData = this.createBlData(result.bl);\n          this.selectedBl = blData;\n          this.updateBlList(blData);\n          const flData = this.createFlData(result);\n          this.selectedFl = flData;\n          this.updateFlList(flData);\n          const rmData = {\n            rmId: result.rmId,\n            rmNameString: result.rmName != null ? result.rmCode + \" - \" + result.rmName : result.rmCode,\n            flId: result.flId,\n            blId: result.blId\n          };\n          this.selectedRm = rmData;\n          this.updateRmList(rmData);\n          this.setLatestRm(result);\n          this.onSelectBlCode(blData);\n          this.onSelectFlCode(flData);\n        }\n      });\n    }\n    setLatestRm(event) {\n      setTimeout(() => {\n        this.eqFormPanel.patchValue({\n          flId: event.flId,\n          rmId: event.rmId\n        });\n      }, 100);\n    }\n    scrollToEndBl() {\n      this.offsetBl = this.limitBl;\n      this.limitBl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitBl;\n      this.filterCriteria.offset = this.offsetBl;\n      this.blSrv.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n        this.enumBL = res;\n        this.updateBlList(this.selectedBl);\n      });\n    }\n    scrollToEndFl() {\n      this.offsetFl = this.limitFl;\n      this.limitFl += this.scrollLimit;\n      this.filterCriteria.limit = this.limitFl;\n      this.filterCriteria.offset = this.offsetFl;\n      this.blSrv.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n        this.enumFL = res;\n        this.updateFlList(this.selectedFl);\n      });\n    }\n    scrollToEndRm() {\n      this.offsetRm = this.limitRm;\n      this.limitRm += this.scrollLimit;\n      this.filterCriteria.limit = this.limitRm;\n      this.filterCriteria.offset = this.offsetRm;\n      this.blSrv.getALLRoomByScroll(this.filterCriteria).subscribe(res => {\n        this.enumRm = res;\n        this.updateRmList(this.selectedRm);\n      });\n    }\n    searchBl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"blName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndBl();\n    }\n    searchFl(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"flName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndFl();\n    }\n    searchRm(event) {\n      this.filterCriteria = {};\n      this.filterCriteria = {\n        fieldName: \"rmName\",\n        value: event.term,\n        matchMode: \"contains\"\n      };\n      this.scrollToEndRm();\n    }\n    updateBlList(blData) {\n      if (blData.blId) {\n        this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n        this.enumBL = this.enumBL.filter(t => t.blId !== null);\n        this.enumBL.unshift(blData);\n      }\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateFlList(flData) {\n      if (flData.flId) {\n        this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n        this.enumFL = this.enumFL.filter(t => t.flId !== null);\n        this.enumFL.unshift(flData);\n      }\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    }\n    updateRmList(rmData) {\n      if (rmData.rmId) {\n        this.enumRm = this.enumRm.filter(t => t.rmId !== rmData.rmId);\n        this.enumRm = this.enumRm.filter(t => t.rmId !== null);\n        this.enumRm.unshift(rmData);\n      }\n      this.enumRm.unshift(new RoomFilterInputDTO(null, 'Make a selection', null, null));\n    }\n    createBlData(bl) {\n      const blData = {\n        blId: bl.blId,\n        blNameString: bl.blName != null ? bl.blCode + \" - \" + bl.blName : bl.blCode,\n        site: null\n      };\n      return blData;\n    }\n    createFlData(fl) {\n      const flData = {\n        flId: fl.flId,\n        flNameString: fl.flName != null ? fl.flCode + \" - \" + fl.flName : fl.flCode,\n        blId: fl.blId,\n        blNameString: fl.bl.blName != null ? fl.bl.blCode + \" - \" + fl.bl.blName : fl.bl.blCode\n      };\n      return flData;\n    }\n    onOpenBl() {\n      this.limitBl = 0;\n      this.offsetBl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndBl();\n    }\n    onOpenFl() {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndFl();\n    }\n    onOpenRm() {\n      this.limitRm = 0;\n      this.offsetRm = 0;\n      if (this.selectedFl.flId) {\n        this.filterCriteria = {\n          fieldName: \"fl.flId\",\n          value: this.selectedFl.flId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else if (this.selectedBl.blId) {\n        this.filterCriteria = {\n          fieldName: \"bl.blId\",\n          value: this.selectedBl.blId,\n          matchMode: \"equals\",\n          limit: 0,\n          offset: 0\n        };\n      } else {\n        this.filterCriteria = {\n          fieldName: null,\n          value: null,\n          matchMode: \"contains\",\n          limit: 0,\n          offset: 0\n        };\n      }\n      this.scrollToEndRm();\n    }\n    onddDivision() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        newRecord: true\n      };\n      this.divisionProvider.openDialog(dialogConfig);\n      this.divisionProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.loadAllDivision();\n          this.setLatestDivision(result);\n        }\n      });\n    }\n    setLatestDivision(divId) {\n      setTimeout(() => {\n        this.eqFormPanel.patchValue({\n          divId: divId\n        });\n      }, 100);\n    }\n    onddDepartment() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '550px';\n      dialogConfig.data = {\n        newRecord: true\n      };\n      this.departmentProvider.openDialog(dialogConfig);\n      this.departmentProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.loadAllDepartment();\n          this.setLatestDepartment(result);\n        }\n      });\n    }\n    setLatestDepartment(depId) {\n      setTimeout(() => {\n        this.eqFormPanel.patchValue({\n          depId: depId\n        });\n      }, 100);\n    }\n    static #_ = this.ɵfac = function AddEqFormComponent_Factory(t) {\n      return new (t || AddEqFormComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.EqStdService), i0.ɵɵdirectiveInject(i4.EnumService), i0.ɵɵdirectiveInject(i5.EqStdDialogueProvider), i0.ɵɵdirectiveInject(i6.BLModalDialogueProvider), i0.ɵɵdirectiveInject(i7.FLModalDialogueProvider), i0.ɵɵdirectiveInject(i8.RMModalDialogueProvider), i0.ɵɵdirectiveInject(i9.DivisionDialogueProvider), i0.ɵɵdirectiveInject(i10.DepartmentDialogueProvider), i0.ɵɵdirectiveInject(i11.DivisionService), i0.ɵɵdirectiveInject(i12.DepartmentService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEqFormComponent,\n      selectors: [[\"app-add-eq-form\"]],\n      inputs: {\n        isNew: \"isNew\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddEqFormComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddEqFormComponent),\n        multi: true\n      }])],\n      decls: 95,\n      vars: 29,\n      consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"30%\"], [1, \"input-label-custom\", 2, \"width\", \"90%\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"eqCode\", \"formControlName\", \"eqCode\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [2, \"display\", \"flex\"], [\"appendTo\", \"body\", \"formControlName\", \"eqStdId\", \"bindLabel\", \"eqStd\", \"bindValue\", \"eqStdId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"margin\", \"16px 0px 0px -5px\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Asset Standard\", 1, \"pull-right\", \"m-3\", 3, \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"status\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Building\", 1, \"pull-right\", \"m-3\", 3, \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Floor\", 1, \"pull-right\", \"m-3\", 3, \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"rmId\", \"bindLabel\", \"rmNameString\", \"bindValue\", \"rmId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Room\", 1, \"pull-right\", \"m-3\", 3, \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"divId\", \"bindLabel\", \"divCode\", \"bindValue\", \"divId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"margin\", \"12px 0px 0px -5px\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Division\", 1, \"pull-right\", \"m-3\", 3, \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"depId\", \"bindLabel\", \"depCode\", \"bindValue\", \"depId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"id\", \"add-btn\", \"icon\", \"pi pi-plus\", \"matTooltip\", \"Add Department\", 1, \"pull-right\", \"m-3\", 3, \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"ownershipType\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"colspan\", \"1\"], [\"name\", \"description\", \"formControlName\", \"description\", \"rows\", \"3\", \"nz-input\", \"\", \"maxlength\", \"256\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [1, \"input-label-custom\"], [\"formControlName\", \"resApprovalReq\", \"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", 3, \"options\"], [\"appendTo\", \"body\", \"formControlName\", \"depreciationType\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"display\", \"flex\", \"width\", \"90%\"], [\"type\", \"text\", \"name\", \"stock\", \"NumbersOnly\", \"\", \"formControlName\", \"stock\", \"maxlength\", \"10\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"minStockReq\", \"NumbersOnly\", \"\", \"formControlName\", \"minStockReq\", \"maxlength\", \"10\", \"appTrimInput\", \"\", 1, \"form-control\"]],\n      template: function AddEqFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Asset Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"td\", 2)(9, \"div\", 6)(10, \"div\", 3)(11, \"label\", 4);\n          i0.ɵɵtext(12, \"Asset Standard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"ng-select\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 8)(15, \"p-button\", 9);\n          i0.ɵɵlistener(\"click\", function AddEqFormComponent_Template_p_button_click_15_listener() {\n            return ctx.onAddEqStandard();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(16, \"td\", 2)(17, \"div\", 3)(18, \"label\", 4);\n          i0.ɵɵtext(19, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"ng-select\", 10);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"tr\")(22, \"td\")(23, \"div\", 6)(24, \"div\", 3)(25, \"label\", 11);\n          i0.ɵɵtext(26, \"Building Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"ng-select\", 12);\n          i0.ɵɵlistener(\"change\", function AddEqFormComponent_Template_ng_select_change_27_listener($event) {\n            return ctx.onSelectBlCode($event);\n          })(\"scrollToEnd\", function AddEqFormComponent_Template_ng_select_scrollToEnd_27_listener() {\n            return ctx.scrollToEndBl();\n          })(\"search\", function AddEqFormComponent_Template_ng_select_search_27_listener($event) {\n            return ctx.searchBl($event);\n          })(\"open\", function AddEqFormComponent_Template_ng_select_open_27_listener() {\n            return ctx.onOpenBl();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 8)(29, \"p-button\", 13);\n          i0.ɵɵlistener(\"click\", function AddEqFormComponent_Template_p_button_click_29_listener() {\n            return ctx.onAddBuilding();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(30, \"td\")(31, \"div\", 6)(32, \"div\", 3)(33, \"label\", 11);\n          i0.ɵɵtext(34, \"Floor Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"ng-select\", 14);\n          i0.ɵɵlistener(\"change\", function AddEqFormComponent_Template_ng_select_change_35_listener($event) {\n            return ctx.onSelectFlCode($event);\n          })(\"scrollToEnd\", function AddEqFormComponent_Template_ng_select_scrollToEnd_35_listener() {\n            return ctx.scrollToEndFl();\n          })(\"search\", function AddEqFormComponent_Template_ng_select_search_35_listener($event) {\n            return ctx.searchFl($event);\n          })(\"open\", function AddEqFormComponent_Template_ng_select_open_35_listener() {\n            return ctx.onOpenFl();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"div\", 8)(37, \"p-button\", 15);\n          i0.ɵɵlistener(\"click\", function AddEqFormComponent_Template_p_button_click_37_listener() {\n            return ctx.onAddFloor();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(38, \"td\")(39, \"div\", 6)(40, \"div\", 3)(41, \"label\", 11);\n          i0.ɵɵtext(42, \"Room Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"ng-select\", 16);\n          i0.ɵɵlistener(\"change\", function AddEqFormComponent_Template_ng_select_change_43_listener($event) {\n            return ctx.onSelectRmCode($event);\n          })(\"scrollToEnd\", function AddEqFormComponent_Template_ng_select_scrollToEnd_43_listener() {\n            return ctx.scrollToEndRm();\n          })(\"search\", function AddEqFormComponent_Template_ng_select_search_43_listener($event) {\n            return ctx.searchRm($event);\n          })(\"open\", function AddEqFormComponent_Template_ng_select_open_43_listener() {\n            return ctx.onOpenRm();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(44, \"div\", 8)(45, \"p-button\", 17);\n          i0.ɵɵlistener(\"click\", function AddEqFormComponent_Template_p_button_click_45_listener() {\n            return ctx.onAddRoom();\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(46, \"tr\")(47, \"td\")(48, \"div\", 6)(49, \"div\", 3)(50, \"label\", 11);\n          i0.ɵɵtext(51, \"Division\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(52, \"ng-select\", 18);\n          i0.ɵɵlistener(\"change\", function AddEqFormComponent_Template_ng_select_change_52_listener($event) {\n            return ctx.onSelectDivision($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(53, \"div\", 19)(54, \"p-button\", 20);\n          i0.ɵɵlistener(\"click\", function AddEqFormComponent_Template_p_button_click_54_listener() {\n            return ctx.onddDivision();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(55, \"td\")(56, \"div\", 6)(57, \"div\", 3)(58, \"label\", 11);\n          i0.ɵɵtext(59, \"Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(60, \"ng-select\", 21);\n          i0.ɵɵlistener(\"change\", function AddEqFormComponent_Template_ng_select_change_60_listener($event) {\n            return ctx.onSelectDepartment($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(61, \"div\", 19)(62, \"p-button\", 22);\n          i0.ɵɵlistener(\"click\", function AddEqFormComponent_Template_p_button_click_62_listener() {\n            return ctx.onddDepartment();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(63, \"td\")(64, \"div\", 3)(65, \"label\", 4);\n          i0.ɵɵtext(66, \"Ownership Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(67, \"ng-select\", 23);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(68, \"tr\")(69, \"td\", 24)(70, \"div\", 3)(71, \"label\", 11);\n          i0.ɵɵtext(72, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(73, \"textarea\", 25);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(74, \"td\")(75, \"div\", 26)(76, \"label\", 4);\n          i0.ɵɵtext(77, \"Booking Approval Required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(78, \"p-selectButton\", 27);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(79, \"tr\")(80, \"td\")(81, \"div\", 3)(82, \"label\", 4);\n          i0.ɵɵtext(83, \"Depreciation Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(84, \"ng-select\", 28);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(85, \"td\")(86, \"div\", 29)(87, \"div\", 3)(88, \"label\", 4);\n          i0.ɵɵtext(89, \"Stock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(90, \"input\", 30);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(91, \"div\", 3)(92, \"label\", 4);\n          i0.ɵɵtext(93, \"Minimum Stock Required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(94, \"input\", 31);\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.eqFormPanel);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.eqStdData)(\"searchable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumStatusData)(\"searchable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumRm)(\"searchable\", true);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDivision)(\"searchable\", true);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDepartment)(\"searchable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumOwnerShipType)(\"searchable\", true);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"options\", ctx.enumResApprovalReq);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumDepreciationType)(\"searchable\", true);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i13.NgSelectComponent, i14.MatTooltip, i15.SelectButton, i16.NumbersOnlyDirective, i17.TrimInputDirective, i18.Button],\n      styles: [\".ng-select.ng-select-single .ng-select-container .ng-value-container, .ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]   .ng-value-container[_ngcontent-%COMP%]   .ng-value[_ngcontent-%COMP%]{overflow:hidden!important;text-overflow:ellipsis!important;white-space:nowrap!important;max-width:300px!important}[_nghost-%COMP%]     #add-btn .p-button{background-color:#fff!important;border-radius:50%;border:2px solid #2196F3;color:#2196f3;height:20px!important;width:20px}[_nghost-%COMP%]     .ng-select-container{display:flex;justify-content:space-between}.search-icon[_ngcontent-%COMP%]{margin:16px 0 0 7px;display:flex;align-self:center;justify-content:center}\"]\n    });\n  }\n  return AddEqFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}