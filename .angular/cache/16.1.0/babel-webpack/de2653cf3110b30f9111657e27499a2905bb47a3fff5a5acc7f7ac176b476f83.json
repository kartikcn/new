{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport * as i2 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i6 from '@angular/cdk/portal';\nimport { ComponentPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, TemplateRef, EventEmitter, Type, Injector, Component, ChangeDetectionStrategy, Optional, Inject, Input, Output, ViewChild, ContentChild, NgModule, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { toCssPixel, InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i3 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i7 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i8 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i9 from 'ng-zorro-antd/core/no-animation';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst _c0 = [\"drawerTemplate\"];\nfunction NzDrawerComponent_ng_template_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function NzDrawerComponent_ng_template_0_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.maskClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.nzMaskStyle);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_5_button_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const closeIcon_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzType\", closeIcon_r15);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_5_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function NzDrawerComponent_ng_template_0_div_5_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r16.closeClick());\n    });\n    i0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_5_button_2_ng_container_1_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r11.nzCloseIcon);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_5_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r18.nzTitle, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_5_div_3_ng_container_1_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r12.nzTitle);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_5_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r19.nzExtra, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_5_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_5_div_4_ng_container_1_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r13.nzExtra);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵtemplate(2, NzDrawerComponent_ng_template_0_div_5_button_2_Template, 2, 1, \"button\", 14);\n    i0.ɵɵtemplate(3, NzDrawerComponent_ng_template_0_div_5_div_3_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, NzDrawerComponent_ng_template_0_div_5_div_4_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"ant-drawer-header-close-only\", !ctx_r3.nzTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.nzClosable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.nzTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.nzExtra);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_ng_template_7_Template(rf, ctx) {}\nfunction NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r20.nzContent)(\"ngTemplateOutletContext\", ctx_r20.templateContext);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_Template, 2, 2, \"ng-container\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isTemplateRef(ctx_r5.nzContent));\n  }\n}\nfunction NzDrawerComponent_ng_template_0_ng_template_9_ng_container_0_ng_template_1_Template(rf, ctx) {}\nfunction NzDrawerComponent_ng_template_0_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_ng_template_9_ng_container_0_ng_template_1_Template, 0, 0, \"ng-template\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r22.contentFromContentChild);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzDrawerComponent_ng_template_0_ng_template_9_ng_container_0_Template, 2, 1, \"ng-container\", 23);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.contentFromContentChild && (ctx_r7.isOpen || ctx_r7.inAnimation));\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r24.nzFooter, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_11_ng_container_1_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r8.nzFooter);\n  }\n}\nfunction NzDrawerComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_1_Template, 1, 1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\")(3, \"div\", 3)(4, \"div\", 4);\n    i0.ɵɵtemplate(5, NzDrawerComponent_ng_template_0_div_5_Template, 5, 5, \"div\", 5);\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵtemplate(7, NzDrawerComponent_ng_template_0_ng_template_7_Template, 0, 0, \"ng-template\", 7);\n    i0.ɵɵtemplate(8, NzDrawerComponent_ng_template_0_ng_container_8_Template, 2, 1, \"ng-container\", 8);\n    i0.ɵɵtemplate(9, NzDrawerComponent_ng_template_0_ng_template_9_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, NzDrawerComponent_ng_template_0_div_11_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(10);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"transform\", ctx_r1.offsetTransform)(\"transition\", ctx_r1.placementChanging ? \"none\" : null)(\"z-index\", ctx_r1.nzZIndex);\n    i0.ɵɵclassProp(\"ant-drawer-rtl\", ctx_r1.dir === \"rtl\")(\"ant-drawer-open\", ctx_r1.isOpen)(\"no-mask\", !ctx_r1.nzMask)(\"ant-drawer-top\", ctx_r1.nzPlacement === \"top\")(\"ant-drawer-bottom\", ctx_r1.nzPlacement === \"bottom\")(\"ant-drawer-right\", ctx_r1.nzPlacement === \"right\")(\"ant-drawer-left\", ctx_r1.nzPlacement === \"left\");\n    i0.ɵɵproperty(\"nzNoAnimation\", ctx_r1.nzNoAnimation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.nzMask);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"ant-drawer-content-wrapper \", ctx_r1.nzWrapClassName, \"\");\n    i0.ɵɵstyleProp(\"width\", ctx_r1.width)(\"height\", ctx_r1.height)(\"transform\", ctx_r1.transform)(\"transition\", ctx_r1.placementChanging ? \"none\" : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"height\", ctx_r1.isLeftOrRight ? \"100%\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.nzTitle || ctx_r1.nzClosable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.nzBodyStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.nzContent)(\"ngIfElse\", _r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.nzFooter);\n  }\n}\nlet NzDrawerContentDirective = /*#__PURE__*/(() => {\n  class NzDrawerContentDirective {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n    }\n    static #_ = this.ɵfac = function NzDrawerContentDirective_Factory(t) {\n      return new (t || NzDrawerContentDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NzDrawerContentDirective,\n      selectors: [[\"\", \"nzDrawerContent\", \"\"]],\n      exportAs: [\"nzDrawerContent\"]\n    });\n  }\n  return NzDrawerContentDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst DRAWER_DEFAULT_SIZE = 378;\nconst DRAWER_LARGE_SIZE = 736;\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzDrawerRef {}\nconst DRAWER_ANIMATE_DURATION = 300;\nconst NZ_CONFIG_MODULE_NAME = 'drawer';\nlet NzDrawerComponent = /*#__PURE__*/(() => {\n  class NzDrawerComponent extends NzDrawerRef {\n    set nzVisible(value) {\n      this.isOpen = value;\n    }\n    get nzVisible() {\n      return this.isOpen;\n    }\n    get offsetTransform() {\n      if (!this.isOpen || this.nzOffsetX + this.nzOffsetY === 0) {\n        return null;\n      }\n      switch (this.nzPlacement) {\n        case 'left':\n          return `translateX(${this.nzOffsetX}px)`;\n        case 'right':\n          return `translateX(-${this.nzOffsetX}px)`;\n        case 'top':\n          return `translateY(${this.nzOffsetY}px)`;\n        case 'bottom':\n          return `translateY(-${this.nzOffsetY}px)`;\n      }\n    }\n    get transform() {\n      if (this.isOpen) {\n        return null;\n      }\n      switch (this.nzPlacement) {\n        case 'left':\n          return `translateX(-100%)`;\n        case 'right':\n          return `translateX(100%)`;\n        case 'top':\n          return `translateY(-100%)`;\n        case 'bottom':\n          return `translateY(100%)`;\n      }\n    }\n    get width() {\n      if (this.isLeftOrRight) {\n        const defaultWidth = this.nzSize === 'large' ? DRAWER_LARGE_SIZE : DRAWER_DEFAULT_SIZE;\n        return this.nzWidth === undefined ? toCssPixel(defaultWidth) : toCssPixel(this.nzWidth);\n      }\n      return null;\n    }\n    get height() {\n      if (!this.isLeftOrRight) {\n        const defaultHeight = this.nzSize === 'large' ? DRAWER_LARGE_SIZE : DRAWER_DEFAULT_SIZE;\n        return this.nzHeight === undefined ? toCssPixel(defaultHeight) : toCssPixel(this.nzHeight);\n      }\n      return null;\n    }\n    get isLeftOrRight() {\n      return this.nzPlacement === 'left' || this.nzPlacement === 'right';\n    }\n    get afterOpen() {\n      return this.nzAfterOpen.asObservable();\n    }\n    get afterClose() {\n      return this.nzAfterClose.asObservable();\n    }\n    isTemplateRef(value) {\n      return value instanceof TemplateRef;\n    }\n    constructor(cdr,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    document, nzConfigService, renderer, overlay, injector, changeDetectorRef, focusTrapFactory, viewContainerRef, overlayKeyboardDispatcher, directionality) {\n      super();\n      this.cdr = cdr;\n      this.document = document;\n      this.nzConfigService = nzConfigService;\n      this.renderer = renderer;\n      this.overlay = overlay;\n      this.injector = injector;\n      this.changeDetectorRef = changeDetectorRef;\n      this.focusTrapFactory = focusTrapFactory;\n      this.viewContainerRef = viewContainerRef;\n      this.overlayKeyboardDispatcher = overlayKeyboardDispatcher;\n      this.directionality = directionality;\n      this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n      this.nzCloseIcon = 'close';\n      this.nzClosable = true;\n      this.nzMaskClosable = true;\n      this.nzMask = true;\n      this.nzCloseOnNavigation = true;\n      this.nzNoAnimation = false;\n      this.nzKeyboard = true;\n      this.nzPlacement = 'right';\n      this.nzSize = 'default';\n      this.nzMaskStyle = {};\n      this.nzBodyStyle = {};\n      this.nzZIndex = 1000;\n      this.nzOffsetX = 0;\n      this.nzOffsetY = 0;\n      this.componentInstance = null;\n      this.nzOnViewInit = new EventEmitter();\n      this.nzOnClose = new EventEmitter();\n      this.nzVisibleChange = new EventEmitter();\n      this.destroy$ = new Subject();\n      this.placementChanging = false;\n      this.placementChangeTimeoutId = -1;\n      this.isOpen = false;\n      this.inAnimation = false;\n      this.templateContext = {\n        $implicit: undefined,\n        drawerRef: this\n      };\n      this.nzAfterOpen = new Subject();\n      this.nzAfterClose = new Subject();\n      // from service config\n      this.nzDirection = undefined;\n      this.dir = 'ltr';\n    }\n    ngOnInit() {\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.nzDirection || this.directionality.value;\n      this.attachOverlay();\n      this.updateOverlayStyle();\n      this.updateBodyOverflow();\n      this.templateContext = {\n        $implicit: this.nzContentParams,\n        drawerRef: this\n      };\n      this.changeDetectorRef.detectChanges();\n    }\n    ngAfterViewInit() {\n      this.attachBodyContent();\n      // The `setTimeout` triggers change detection. There's no sense to schedule the DOM timer if anyone is\n      // listening to the `nzOnViewInit` event inside the template, for instance `<nz-drawer (nzOnViewInit)=\"...\">`.\n      if (this.nzOnViewInit.observers.length) {\n        setTimeout(() => {\n          this.nzOnViewInit.emit();\n        });\n      }\n    }\n    ngOnChanges(changes) {\n      const {\n        nzPlacement,\n        nzVisible\n      } = changes;\n      if (nzVisible) {\n        const value = changes.nzVisible.currentValue;\n        if (value) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n      if (nzPlacement && !nzPlacement.isFirstChange()) {\n        this.triggerPlacementChangeCycleOnce();\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      clearTimeout(this.placementChangeTimeoutId);\n      this.disposeOverlay();\n    }\n    getAnimationDuration() {\n      return this.nzNoAnimation ? 0 : DRAWER_ANIMATE_DURATION;\n    }\n    // Disable the transition animation temporarily when the placement changing\n    triggerPlacementChangeCycleOnce() {\n      if (!this.nzNoAnimation) {\n        this.placementChanging = true;\n        this.changeDetectorRef.markForCheck();\n        clearTimeout(this.placementChangeTimeoutId);\n        this.placementChangeTimeoutId = setTimeout(() => {\n          this.placementChanging = false;\n          this.changeDetectorRef.markForCheck();\n        }, this.getAnimationDuration());\n      }\n    }\n    close(result) {\n      this.isOpen = false;\n      this.inAnimation = true;\n      this.nzVisibleChange.emit(false);\n      this.updateOverlayStyle();\n      this.overlayKeyboardDispatcher.remove(this.overlayRef);\n      this.changeDetectorRef.detectChanges();\n      setTimeout(() => {\n        this.updateBodyOverflow();\n        this.restoreFocus();\n        this.inAnimation = false;\n        this.nzAfterClose.next(result);\n        this.nzAfterClose.complete();\n        this.componentInstance = null;\n      }, this.getAnimationDuration());\n    }\n    open() {\n      this.attachOverlay();\n      this.isOpen = true;\n      this.inAnimation = true;\n      this.nzVisibleChange.emit(true);\n      this.overlayKeyboardDispatcher.add(this.overlayRef);\n      this.updateOverlayStyle();\n      this.updateBodyOverflow();\n      this.savePreviouslyFocusedElement();\n      this.trapFocus();\n      this.changeDetectorRef.detectChanges();\n      setTimeout(() => {\n        this.inAnimation = false;\n        this.changeDetectorRef.detectChanges();\n        this.nzAfterOpen.next();\n      }, this.getAnimationDuration());\n    }\n    getContentComponent() {\n      return this.componentInstance;\n    }\n    closeClick() {\n      this.nzOnClose.emit();\n    }\n    maskClick() {\n      if (this.nzMaskClosable && this.nzMask) {\n        this.nzOnClose.emit();\n      }\n    }\n    attachBodyContent() {\n      this.bodyPortalOutlet.dispose();\n      if (this.nzContent instanceof Type) {\n        const childInjector = Injector.create({\n          parent: this.injector,\n          providers: [{\n            provide: NzDrawerRef,\n            useValue: this\n          }]\n        });\n        const componentPortal = new ComponentPortal(this.nzContent, null, childInjector);\n        const componentRef = this.bodyPortalOutlet.attachComponentPortal(componentPortal);\n        this.componentInstance = componentRef.instance;\n        Object.assign(componentRef.instance, this.nzContentParams);\n        componentRef.changeDetectorRef.detectChanges();\n      }\n    }\n    attachOverlay() {\n      if (!this.overlayRef) {\n        this.portal = new TemplatePortal(this.drawerTemplate, this.viewContainerRef);\n        this.overlayRef = this.overlay.create(this.getOverlayConfig());\n      }\n      if (this.overlayRef && !this.overlayRef.hasAttached()) {\n        this.overlayRef.attach(this.portal);\n        this.overlayRef.keydownEvents().pipe(takeUntil(this.destroy$)).subscribe(event => {\n          if (event.keyCode === ESCAPE && this.isOpen && this.nzKeyboard) {\n            this.nzOnClose.emit();\n          }\n        });\n        this.overlayRef.detachments().pipe(takeUntil(this.destroy$)).subscribe(() => {\n          this.disposeOverlay();\n        });\n      }\n    }\n    disposeOverlay() {\n      this.overlayRef?.dispose();\n      this.overlayRef = null;\n    }\n    getOverlayConfig() {\n      return new OverlayConfig({\n        disposeOnNavigation: this.nzCloseOnNavigation,\n        positionStrategy: this.overlay.position().global(),\n        scrollStrategy: this.overlay.scrollStrategies.block()\n      });\n    }\n    updateOverlayStyle() {\n      if (this.overlayRef && this.overlayRef.overlayElement) {\n        this.renderer.setStyle(this.overlayRef.overlayElement, 'pointer-events', this.isOpen ? 'auto' : 'none');\n      }\n    }\n    updateBodyOverflow() {\n      if (this.overlayRef) {\n        if (this.isOpen) {\n          this.overlayRef.getConfig().scrollStrategy.enable();\n        } else {\n          this.overlayRef.getConfig().scrollStrategy.disable();\n        }\n      }\n    }\n    savePreviouslyFocusedElement() {\n      if (this.document && !this.previouslyFocusedElement) {\n        this.previouslyFocusedElement = this.document.activeElement;\n        // We need the extra check, because IE's svg element has no blur method.\n        if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.blur === 'function') {\n          this.previouslyFocusedElement.blur();\n        }\n      }\n    }\n    trapFocus() {\n      if (!this.focusTrap && this.overlayRef && this.overlayRef.overlayElement) {\n        this.focusTrap = this.focusTrapFactory.create(this.overlayRef.overlayElement);\n        this.focusTrap.focusInitialElement();\n      }\n    }\n    restoreFocus() {\n      // We need the extra check, because IE can set the `activeElement` to null in some cases.\n      if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\n        this.previouslyFocusedElement.focus();\n      }\n      if (this.focusTrap) {\n        this.focusTrap.destroy();\n      }\n    }\n    static #_ = this.ɵfac = function NzDrawerComponent_Factory(t) {\n      return new (t || NzDrawerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.Overlay), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.FocusTrapFactory), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.OverlayKeyboardDispatcher), i0.ɵɵdirectiveInject(i4.Directionality, 8));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NzDrawerComponent,\n      selectors: [[\"nz-drawer\"]],\n      contentQueries: function NzDrawerComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NzDrawerContentDirective, 7, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentFromContentChild = _t.first);\n        }\n      },\n      viewQuery: function NzDrawerComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n          i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.drawerTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bodyPortalOutlet = _t.first);\n        }\n      },\n      inputs: {\n        nzContent: \"nzContent\",\n        nzCloseIcon: \"nzCloseIcon\",\n        nzClosable: \"nzClosable\",\n        nzMaskClosable: \"nzMaskClosable\",\n        nzMask: \"nzMask\",\n        nzCloseOnNavigation: \"nzCloseOnNavigation\",\n        nzNoAnimation: \"nzNoAnimation\",\n        nzKeyboard: \"nzKeyboard\",\n        nzTitle: \"nzTitle\",\n        nzExtra: \"nzExtra\",\n        nzFooter: \"nzFooter\",\n        nzPlacement: \"nzPlacement\",\n        nzSize: \"nzSize\",\n        nzMaskStyle: \"nzMaskStyle\",\n        nzBodyStyle: \"nzBodyStyle\",\n        nzWrapClassName: \"nzWrapClassName\",\n        nzWidth: \"nzWidth\",\n        nzHeight: \"nzHeight\",\n        nzZIndex: \"nzZIndex\",\n        nzOffsetX: \"nzOffsetX\",\n        nzOffsetY: \"nzOffsetY\",\n        nzVisible: \"nzVisible\"\n      },\n      outputs: {\n        nzOnViewInit: \"nzOnViewInit\",\n        nzOnClose: \"nzOnClose\",\n        nzVisibleChange: \"nzVisibleChange\"\n      },\n      exportAs: [\"nzDrawer\"],\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n      decls: 2,\n      vars: 0,\n      consts: [[\"drawerTemplate\", \"\"], [1, \"ant-drawer\", 3, \"nzNoAnimation\"], [\"class\", \"ant-drawer-mask\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [1, \"ant-drawer-content\"], [1, \"ant-drawer-wrapper-body\"], [\"class\", \"ant-drawer-header\", 3, \"ant-drawer-header-close-only\", 4, \"ngIf\"], [1, \"ant-drawer-body\", 3, \"ngStyle\"], [\"cdkPortalOutlet\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"contentElseTemp\", \"\"], [\"class\", \"ant-drawer-footer\", 4, \"ngIf\"], [1, \"ant-drawer-mask\", 3, \"ngStyle\", \"click\"], [1, \"ant-drawer-header\"], [1, \"ant-drawer-header-title\"], [\"aria-label\", \"Close\", \"class\", \"ant-drawer-close\", \"style\", \"--scroll-bar: 0px;\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ant-drawer-title\", 4, \"ngIf\"], [\"class\", \"ant-drawer-extra\", 4, \"ngIf\"], [\"aria-label\", \"Close\", 1, \"ant-drawer-close\", 2, \"--scroll-bar\", \"0px\", 3, \"click\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-drawer-title\"], [3, \"innerHTML\"], [1, \"ant-drawer-extra\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngTemplateOutlet\"], [1, \"ant-drawer-footer\"]],\n      template: function NzDrawerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NzDrawerComponent_ng_template_0_Template, 12, 40, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n      },\n      dependencies: [i5.NgIf, i5.NgTemplateOutlet, i5.NgStyle, i6.CdkPortalOutlet, i7.NzIconDirective, i8.NzStringTemplateOutletDirective, i9.NzNoAnimationDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  __decorate([InputBoolean()], NzDrawerComponent.prototype, \"nzClosable\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzDrawerComponent.prototype, \"nzMaskClosable\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzDrawerComponent.prototype, \"nzMask\", void 0);\n  __decorate([WithConfig(), InputBoolean()], NzDrawerComponent.prototype, \"nzCloseOnNavigation\", void 0);\n  __decorate([InputBoolean()], NzDrawerComponent.prototype, \"nzNoAnimation\", void 0);\n  __decorate([InputBoolean()], NzDrawerComponent.prototype, \"nzKeyboard\", void 0);\n  __decorate([WithConfig()], NzDrawerComponent.prototype, \"nzDirection\", void 0);\n  return NzDrawerComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzDrawerServiceModule = /*#__PURE__*/(() => {\n  class NzDrawerServiceModule {\n    static #_ = this.ɵfac = function NzDrawerServiceModule_Factory(t) {\n      return new (t || NzDrawerServiceModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzDrawerServiceModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return NzDrawerServiceModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzDrawerModule = /*#__PURE__*/(() => {\n  class NzDrawerModule {\n    static #_ = this.ɵfac = function NzDrawerModule_Factory(t) {\n      return new (t || NzDrawerModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NzDrawerModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BidiModule, CommonModule, OverlayModule, PortalModule, NzIconModule, NzOutletModule, NzNoAnimationModule, NzDrawerServiceModule]\n    });\n  }\n  return NzDrawerModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass DrawerBuilderForService {\n  constructor(overlay, options) {\n    this.overlay = overlay;\n    this.options = options;\n    this.unsubscribe$ = new Subject();\n    /** pick {@link NzDrawerOptions.nzOnCancel} and omit this option */\n    const {\n      nzOnCancel,\n      ...componentOption\n    } = this.options;\n    this.overlayRef = this.overlay.create();\n    this.drawerRef = this.overlayRef.attach(new ComponentPortal(NzDrawerComponent)).instance;\n    this.updateOptions(componentOption);\n    // Prevent repeatedly open drawer when tap focus element.\n    this.drawerRef.savePreviouslyFocusedElement();\n    this.drawerRef.nzOnViewInit.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.drawerRef.open();\n    });\n    this.drawerRef.nzOnClose.subscribe(() => {\n      if (nzOnCancel) {\n        nzOnCancel().then(canClose => {\n          if (canClose !== false) {\n            this.drawerRef.close();\n          }\n        });\n      } else {\n        this.drawerRef.close();\n      }\n    });\n    this.drawerRef.afterClose.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.overlayRef.dispose();\n      this.drawerRef = null;\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    });\n  }\n  getInstance() {\n    return this.drawerRef;\n  }\n  updateOptions(options) {\n    Object.assign(this.drawerRef, options);\n  }\n}\nlet NzDrawerService = /*#__PURE__*/(() => {\n  class NzDrawerService {\n    constructor(overlay) {\n      this.overlay = overlay;\n    }\n    create(options) {\n      return new DrawerBuilderForService(this.overlay, options).getInstance();\n    }\n    static #_ = this.ɵfac = function NzDrawerService_Factory(t) {\n      return new (t || NzDrawerService)(i0.ɵɵinject(i2.Overlay));\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NzDrawerService,\n      factory: NzDrawerService.ɵfac,\n      providedIn: NzDrawerServiceModule\n    });\n  }\n  return NzDrawerService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DRAWER_ANIMATE_DURATION, DRAWER_DEFAULT_SIZE, DRAWER_LARGE_SIZE, DrawerBuilderForService, NzDrawerComponent, NzDrawerContentDirective, NzDrawerModule, NzDrawerRef, NzDrawerService, NzDrawerServiceModule };\n//# sourceMappingURL=ng-zorro-antd-drawer.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}