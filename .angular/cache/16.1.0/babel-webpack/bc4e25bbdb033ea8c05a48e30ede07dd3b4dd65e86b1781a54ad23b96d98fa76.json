{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/ui/employee/services/employee.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"primeng/table\";\nimport * as i4 from \"ng-zorro-antd/table\";\nimport * as i5 from \"primeng/paginator\";\nfunction EmListComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 7)(2, \"div\", 8)(3, \"div\", 9)(4, \"p\", 10);\n    i0.ɵɵtext(5, \"Employee Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 11);\n    i0.ɵɵelement(7, \"p-sortIcon\", 12)(8, \"p-columnFilter\", 13);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 14)(10, \"div\", 8)(11, \"div\", 9)(12, \"p\", 10);\n    i0.ɵɵtext(13, \"Email\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 11);\n    i0.ɵɵelement(15, \"p-sortIcon\", 15)(16, \"p-columnFilter\", 16);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction EmListComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 17)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const em_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", em_r4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(em_r4.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(em_r4.email);\n  }\n}\nfunction EmListComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 1);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let EmListComponent = /*#__PURE__*/(() => {\n  class EmListComponent {\n    constructor(empServ) {\n      this.empServ = empServ;\n      this.parentFun = new EventEmitter();\n      this.emData = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"emId\"],\n        sortOrder: \"ASC\"\n      };\n      this.totalElements = 0;\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n      this.isSorted = false;\n    }\n    ngOnInit() {\n      this.loadRecords();\n    }\n    loadRecords() {\n      let data = {\n        filterDto: {\n          paginationDTO: this.paginationObj,\n          filterCriteria: this.filterCriteriaList\n        }\n      };\n      this.isFiltered = false;\n      this.empServ.getAllEmployeeListPaginated(data).subscribe(res => {\n        if (res.status != 202) {\n          this.isFiltered = false;\n          let content = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n          this.emData = [...content];\n        } else {\n          this.emData = [];\n        }\n      });\n    }\n    onRowSelect(event) {\n      this.parentFun.emit(event);\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onSort(event) {\n      //this.isSorted = true;\n    }\n    onInnerFilter(event) {\n      this.isSorted = false;\n      setTimeout(() => {\n        if (this.isFiltered && !this.isSorted) {\n          this.isSorted = false;\n          Object.keys(event.filters).forEach(field => {\n            const filterValue = event.filters[field][0].value;\n            const matchMode = event.filters[field][0].matchMode;\n            if (filterValue !== undefined) {\n              let filterCriteria = {};\n              if (field == \"name\") {\n                filterCriteria = {\n                  fieldName: \"firstName\",\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              } else {\n                filterCriteria = {\n                  fieldName: field,\n                  value: filterValue,\n                  matchMode: matchMode\n                };\n              }\n              this.updateFilterCriteriaList(filterCriteria);\n            }\n          });\n          // if (this.filterCriteriaList.length!=0) {\n          //   this.paginationObj.pageNo = 0;\n          // }\n          this.paginationObj.pageNo = 0;\n          this.loadRecords();\n        }\n        this.isFiltered = true;\n      }, 0);\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function EmListComponent_Factory(t) {\n      return new (t || EmListComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EmListComponent,\n      selectors: [[\"app-em-list\"]],\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      decls: 7,\n      vars: 11,\n      consts: [[\"styleClass\", \"p-datatable-responsive-demo\", \"selectionMode\", \"single\", \"dataKey\", \"emId\", \"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"scrollable\", \"onRowSelect\", \"onFilter\", \"onSort\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"pSortableColumn\", \"firstName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"firstName\"], [\"type\", \"text\", \"field\", \"firstName\", \"display\", \"menu\"], [\"pSortableColumn\", \"email\"], [\"field\", \"email\"], [\"type\", \"text\", \"field\", \"email\", \"display\", \"menu\"], [3, \"pSelectableRow\"]],\n      template: function EmListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n          i0.ɵɵlistener(\"onRowSelect\", function EmListComponent_Template_p_table_onRowSelect_0_listener($event) {\n            return ctx.onRowSelect($event);\n          })(\"onFilter\", function EmListComponent_Template_p_table_onFilter_0_listener($event) {\n            return ctx.onInnerFilter($event);\n          })(\"onSort\", function EmListComponent_Template_p_table_onSort_0_listener($event) {\n            return ctx.onSort($event);\n          });\n          i0.ɵɵtemplate(2, EmListComponent_ng_template_2_Template, 17, 0, \"ng-template\", 2);\n          i0.ɵɵtemplate(3, EmListComponent_ng_template_3_Template, 5, 3, \"ng-template\", 3);\n          i0.ɵɵtemplate(4, EmListComponent_ng_template_4_Template, 3, 1, \"ng-template\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"p-paginator\", 6);\n          i0.ɵɵlistener(\"onPageChange\", function EmListComponent_Template_p_paginator_onPageChange_6_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"value\", ctx.emData)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"rowHover\", true)(\"scrollable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i2.PrimeTemplate, i3.Table, i3.SortableColumn, i3.SelectableRow, i3.SortIcon, i3.ColumnFilter, i4.NzTableCellDirective, i4.NzThMeasureDirective, i4.NzTrDirective, i5.Paginator]\n    });\n  }\n  return EmListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}