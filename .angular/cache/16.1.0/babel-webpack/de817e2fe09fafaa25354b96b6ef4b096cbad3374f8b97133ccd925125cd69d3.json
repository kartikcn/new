{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../providers/team.provider\";\nimport * as i2 from \"../services/team.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/enum.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"primeng/panel\";\nimport * as i10 from \"primeng/confirmdialog\";\nimport * as i11 from \"@angular/material/tooltip\";\nimport * as i12 from \"primeng/paginator\";\nfunction TeamComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TeamComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAdd());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TeamComponent_ng_template_5_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 26)(1, \"div\", 16)(2, \"div\", 17)(3, \"p\", 18);\n    i0.ɵɵtext(4, \"Team Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 19);\n    i0.ɵɵelement(6, \"p-sortIcon\", 27)(7, \"p-columnFilter\", 28);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction TeamComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 14);\n    i0.ɵɵelementStart(2, \"th\", 15)(3, \"div\", 16)(4, \"div\", 17)(5, \"p\", 18);\n    i0.ɵɵtext(6, \"Team Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 19);\n    i0.ɵɵelement(8, \"p-sortIcon\", 20)(9, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(10, TeamComponent_ng_template_5_th_10_Template, 8, 0, \"th\", 22);\n    i0.ɵɵelementStart(11, \"th\", 23)(12, \"div\", 16)(13, \"div\", 17)(14, \"p\", 18);\n    i0.ɵɵtext(15, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 19);\n    i0.ɵɵelement(17, \"p-sortIcon\", 24)(18, \"p-columnFilter\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"th\");\n    i0.ɵɵtext(20, \"Highlight color\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showType);\n  }\n}\nfunction TeamComponent_ng_template_6_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const team_r7 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.getEnumValueById(team_r7.teamType));\n  }\n}\nfunction TeamComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 29)(1, \"td\", 14)(2, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function TeamComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const team_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onEdit(team_r7.teamId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function TeamComponent_ng_template_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const team_r7 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onDelete(team_r7));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, TeamComponent_ng_template_6_td_6_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementStart(7, \"td\", 33);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"div\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const team_r7 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", team_r7);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(team_r7.teamCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", team_r7.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(team_r7.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", team_r7.highlightColor);\n  }\n}\nfunction TeamComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let TeamComponent = /*#__PURE__*/(() => {\n  class TeamComponent {\n    constructor(teamProvider, teamService, messageService, confirmationService, enumsrv) {\n      this.teamProvider = teamProvider;\n      this.teamService = teamService;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.enumsrv = enumsrv;\n      this.showType = true;\n      this.teamsData = [];\n      this.loading = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.enumTeamType = [];\n      this.enumClonedList = [];\n      // enumTechnicianType!: number;\n      this.enumEmployeeType = null;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"teamId\"],\n        sortOrder: \"ASC\"\n      };\n      this.totalElements = 0;\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n      this.isSorted = false;\n    }\n    ngOnInit() {\n      this.loadEnums();\n      this.loadRecords();\n    }\n    loadEnums() {\n      this.enumClonedList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumClonedList = res.map(x => Object.assign({}, x));\n        this.enumTeamType = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'team'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'team_type'.toLocaleUpperCase());\n        let enumEmployee = this.enumTeamType.filter(t => t.enumValue.toLocaleUpperCase() === 'Employee'.toLocaleUpperCase());\n        this.enumEmployeeType = enumEmployee[0].enumKey;\n      });\n    }\n    loadRecords() {\n      this.loading = true;\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.isFiltered = false;\n      this.teamService.getAllTeamsPaginated(data).subscribe(res => {\n        if (res.status != 202) {\n          this.isFiltered = false;\n          let content = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n          if (!this.showType) {\n            this.teamsData = content.filter(each => each.teamType == this.enumEmployeeType);\n          } else {\n            this.teamsData = content;\n          }\n        } else {\n          this.teamsData = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    onAdd() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        isEdit: false,\n        newRecord: true,\n        showType: this.showType,\n        enumEmployeeType: this.enumEmployeeType\n      };\n      this.teamProvider.openDialog(dialogConfig);\n      this.teamProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'teamSave',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onEdit(id) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        id: id,\n        isEdit: true,\n        newRecord: false,\n        showType: this.showType,\n        enumEmployeeType: this.enumEmployeeType\n      };\n      this.teamProvider.openDialog(dialogConfig);\n      this.teamProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'teamSave',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onDelete(team) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ' + team.teamCode + '?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deleteEqStandard(team.teamId);\n        },\n        key: \"mygrid\"\n      });\n    }\n    deleteEqStandard(id) {\n      this.teamService.deleteById(id).subscribe(res => {\n        if (res != null && res.code == 200) {\n          this.messageService.add({\n            key: 'teamSave',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadRecords();\n        } else {\n          this.messageService.add({\n            key: 'teamSave',\n            severity: 'error',\n            summary: 'error',\n            detail: res.text\n          });\n        }\n      }, error => {});\n    }\n    getEnumValueById(id) {\n      return id ? this.enumTeamType.find(t => t.enumKey == id)?.enumValue : '';\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onSort(event) {\n      // this.isSorted = true;\n    }\n    onInnerFilter(event) {\n      this.isSorted = false;\n      setTimeout(() => {\n        if (this.isFiltered && !this.isSorted) {\n          this.isSorted = false;\n          Object.keys(event.filters).forEach(field => {\n            const filterValue = event.filters[field][0].value;\n            const matchMode = event.filters[field][0].matchMode;\n            if (filterValue !== undefined) {\n              let filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n              this.updateFilterCriteriaList(filterCriteria);\n            }\n          });\n          this.paginationObj.pageNo = 0;\n          this.loadRecords();\n        }\n        this.isFiltered = true;\n      }, 0);\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function TeamComponent_Factory(t) {\n      return new (t || TeamComponent)(i0.ɵɵdirectiveInject(i1.TeamDialogueProvider), i0.ɵɵdirectiveInject(i2.TeamService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.EnumService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TeamComponent,\n      selectors: [[\"app-team\"]],\n      inputs: {\n        showType: \"showType\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 13,\n      vars: 10,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Team Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", 3, \"value\", \"paginator\", \"scrollable\", \"rowHover\", \"onFilter\", \"onSort\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"teamSave\", \"position\", \"top-right\"], [\"key\", \"teamDelete\", \"position\", \"top-center\"], [\"key\", \"mygrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"teamCode\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"teamCode\"], [\"type\", \"text\", \"field\", \"teamCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"teamType\", 4, \"ngIf\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [\"pSortableColumn\", \"teamType\"], [\"field\", \"teamType\"], [\"type\", \"text\", \"field\", \"teamType\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [4, \"ngIf\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"], [1, \"td-class\"]],\n      template: function TeamComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, TeamComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4);\n          i0.ɵɵlistener(\"onFilter\", function TeamComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          })(\"onSort\", function TeamComponent_Template_p_table_onSort_4_listener($event) {\n            return ctx.onSort($event);\n          });\n          i0.ɵɵtemplate(5, TeamComponent_ng_template_5_Template, 21, 1, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, TeamComponent_ng_template_6_Template, 11, 7, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, TeamComponent_ng_template_7_Template, 3, 1, \"ng-template\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 8)(9, \"p-paginator\", 9);\n          i0.ɵɵlistener(\"onPageChange\", function TeamComponent_Template_p_paginator_onPageChange_9_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(10, \"p-toast\", 10)(11, \"p-toast\", 11)(12, \"p-confirmDialog\", 12);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.teamsData)(\"paginator\", false)(\"scrollable\", true)(\"rowHover\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0));\n        }\n      },\n      dependencies: [i5.NgIf, i3.PrimeTemplate, i6.Table, i6.SortableColumn, i6.SelectableRow, i6.SortIcon, i6.ColumnFilter, i7.ButtonDirective, i8.Toast, i9.Panel, i10.ConfirmDialog, i11.MatTooltip, i12.Paginator],\n      styles: [\".ellipsis[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.td-class[_ngcontent-%COMP%]{background-color:inherit;display:flex;align-items:center;justify-content:center;width:40px;height:20px;margin:10px auto auto;border:1px solid black}[_nghost-%COMP%]     .p-datatable-table{table-layout:fixed}\"]\n    });\n  }\n  return TeamComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}