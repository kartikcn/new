{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/connector.services\";\nimport * as i3 from \"@ng-select/ng-select\";\nexport let AddConnectorFldsComponent = /*#__PURE__*/(() => {\n  class AddConnectorFldsComponent {\n    constructor(formBuilder, connectorService) {\n      this.formBuilder = formBuilder;\n      this.connectorService = connectorService;\n      this.subscriptions = [];\n      this.columnsList = [];\n      this.tablesList = [];\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.connectorFormPanel = this.formBuilder.group({\n        connectorFldsId: [null],\n        connectorId: [null, [Validators.required]],\n        fieldName: [null, [Validators.required]],\n        fieldTitle: [null, [Validators.required]],\n        defaultValue: [null],\n        refTable: [null]\n      });\n      this.subscriptions.push(this.connectorFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {\n      this.loadColumns();\n      this.loadTables();\n    }\n    loadColumns() {\n      this.connectorService.getAllColumns().subscribe(res => {\n        this.columnsList = res;\n      });\n    }\n    loadTables() {\n      this.connectorService.getAllTabes().subscribe(res => {\n        this.tablesList = res;\n      });\n    }\n    getValidationErrors() {\n      const validationErros = [];\n      return validationErros;\n    }\n    get value() {\n      const eqDetails = {\n        connectorId: this.connectorFormPanel.controls.connectorId.value,\n        connectorFldsId: this.connectorFormPanel.controls.connectorFldsId.value,\n        fieldName: this.connectorFormPanel.controls.fieldName.value,\n        fieldTitle: this.connectorFormPanel.controls.fieldTitle.value,\n        defaultValue: this.connectorFormPanel.controls.defaultValue.value,\n        refTable: this.connectorFormPanel.controls.refTable.value\n      };\n      return eqDetails;\n    }\n    set value(value) {\n      setTimeout(() => {\n        this.connectorFormPanel.patchValue({\n          connectorId: value.connectorId,\n          connectorFldsId: value.connectorFldsId,\n          fieldName: value.fieldName,\n          fieldTitle: value.fieldTitle,\n          defaultValue: value.defaultValue,\n          refTable: value.refTable\n        });\n      });\n      this.onChange(value);\n      this.onTouched();\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.connectorFormPanel.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    validate(_) {\n      return this.connectorFormPanel.valid ? null : {\n        connectorFormPanel: {\n          valid: false\n        }\n      };\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    static #_ = this.ɵfac = function AddConnectorFldsComponent_Factory(t) {\n      return new (t || AddConnectorFldsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ConnectorService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddConnectorFldsComponent,\n      selectors: [[\"app-add-connector-flds\"]],\n      inputs: {\n        isNew: \"isNew\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddConnectorFldsComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddConnectorFldsComponent),\n        multi: true\n      }])],\n      decls: 24,\n      vars: 7,\n      consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"fieldName\", \"bindLabel\", \"columnName\", \"bindValue\", \"columnName\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"width\", \"25%\"], [\"type\", \"text\", \"name\", \"fieldTitle\", \"formControlName\", \"fieldTitle\", \"maxlength\", \"128\", 1, \"form-control\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"defaultValue\", \"formControlName\", \"defaultValue\", \"maxlength\", \"128\", 1, \"form-control\"], [\"appendTo\", \"body\", \"formControlName\", \"refTable\", \"bindLabel\", \"tableName\", \"bindValue\", \"tableName\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"]],\n      template: function AddConnectorFldsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Fiield Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"ng-select\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"td\", 6)(9, \"div\", 3)(10, \"label\", 4);\n          i0.ɵɵtext(11, \" Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"tr\")(14, \"td\", 6)(15, \"div\", 3)(16, \"label\", 8);\n          i0.ɵɵtext(17, \"Default Value\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"td\", 2)(20, \"div\", 3)(21, \"label\", 8);\n          i0.ɵɵtext(22, \"Reference Table Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"ng-select\", 10);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.connectorFormPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.columnsList)(\"searchable\", true);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.tablesList)(\"searchable\", true);\n        }\n      },\n      dependencies: [i3.NgSelectComponent, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName]\n    });\n  }\n  return AddConnectorFldsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}