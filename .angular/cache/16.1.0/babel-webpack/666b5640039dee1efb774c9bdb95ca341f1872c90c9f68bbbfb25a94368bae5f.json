{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class MessagesService {\n  constructor(MessagesSrv) {\n    this.MessagesSrv = MessagesSrv;\n  }\n  getAllMessages() {\n    return this.MessagesSrv.getAll(\"msg\", \"allMsgs\");\n  }\n  getAllMessagesPaginated(data) {\n    return this.MessagesSrv.search(\"msg\", \"allMsgsPaginated\", data);\n  }\n  getMsgsById(data) {\n    return this.MessagesSrv.search(\"msg\", \"getMsgsById\", data);\n  }\n  updateMessages(msg) {\n    return this.MessagesSrv.add(\"msg\", \"saveMsg\", msg);\n  }\n  deleteMessageById(data) {\n    return this.MessagesSrv.delete(\"msg\", \"deleteMsg\", data);\n  }\n  getAllProcesses() {\n    return this.MessagesSrv.getAll(\"msg\", \"allProcesses\");\n  }\n  checkMsgIdExists(data) {\n    return this.MessagesSrv.getSingle(\"msg\", \"checkMsgId\", data);\n  }\n  static #_ = this.ɵfac = function MessagesService_Factory(t) {\n    return new (t || MessagesService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MessagesService,\n    factory: MessagesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["MessagesService","constructor","MessagesSrv","getAllMessages","getAll","getAllMessagesPaginated","data","search","getMsgsById","updateMessages","msg","add","deleteMessageById","delete","getAllProcesses","checkMsgIdExists","getSingle","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\messages\\services\\messages.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { Messages } from \"../model/messages.model\";\nimport { MessagesFilterInputDTO } from \"../model/messagesFilterInput.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MessagesService{\n    constructor(\n        private MessagesSrv:DataService<Messages>\n        ){}\n\n    public getAllMessages():Observable<Messages[]>{\n        return this.MessagesSrv.getAll(\"msg\",\"allMsgs\");\n    }\n\n    public getAllMessagesPaginated(data:any){\n        return this.MessagesSrv.search(\"msg\",\"allMsgsPaginated\",data);\n    }\n\n    public getMsgsById(data:MessagesFilterInputDTO){\n        return this.MessagesSrv.search(\"msg\",\"getMsgsById\",data)\n    }\n\n    public updateMessages(msg:Messages):Observable<Messages>{\n        return this.MessagesSrv.add(\"msg\",\"saveMsg\",msg);\n    }\n\n    public deleteMessageById(data:MessagesFilterInputDTO){\n        return this.MessagesSrv.delete(\"msg\",\"deleteMsg\",data);\n    }\n    public getAllProcesses():Observable<any[]>{\n        return this.MessagesSrv.getAll(\"msg\",\"allProcesses\");\n    }\n\n    public checkMsgIdExists(data:any) {\n        return this.MessagesSrv.getSingle(\"msg\", \"checkMsgId\", data);\n    }\n}"],"mappings":";;AAUA,OAAM,MAAOA,eAAe;EACxBC,YACYC,WAAiC;IAAjC,KAAAA,WAAW,GAAXA,WAAW;EACjB;EAECC,cAAcA,CAAA;IACjB,OAAO,IAAI,CAACD,WAAW,CAACE,MAAM,CAAC,KAAK,EAAC,SAAS,CAAC;EACnD;EAEOC,uBAAuBA,CAACC,IAAQ;IACnC,OAAO,IAAI,CAACJ,WAAW,CAACK,MAAM,CAAC,KAAK,EAAC,kBAAkB,EAACD,IAAI,CAAC;EACjE;EAEOE,WAAWA,CAACF,IAA2B;IAC1C,OAAO,IAAI,CAACJ,WAAW,CAACK,MAAM,CAAC,KAAK,EAAC,aAAa,EAACD,IAAI,CAAC;EAC5D;EAEOG,cAAcA,CAACC,GAAY;IAC9B,OAAO,IAAI,CAACR,WAAW,CAACS,GAAG,CAAC,KAAK,EAAC,SAAS,EAACD,GAAG,CAAC;EACpD;EAEOE,iBAAiBA,CAACN,IAA2B;IAChD,OAAO,IAAI,CAACJ,WAAW,CAACW,MAAM,CAAC,KAAK,EAAC,WAAW,EAACP,IAAI,CAAC;EAC1D;EACOQ,eAAeA,CAAA;IAClB,OAAO,IAAI,CAACZ,WAAW,CAACE,MAAM,CAAC,KAAK,EAAC,cAAc,CAAC;EACxD;EAEOW,gBAAgBA,CAACT,IAAQ;IAC5B,OAAO,IAAI,CAACJ,WAAW,CAACc,SAAS,CAAC,KAAK,EAAE,YAAY,EAAEV,IAAI,CAAC;EAChE;EAAC,QAAAW,CAAA,G;qBA9BQjB,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAftB,eAAe;IAAAuB,OAAA,EAAfvB,eAAe,CAAAwB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}