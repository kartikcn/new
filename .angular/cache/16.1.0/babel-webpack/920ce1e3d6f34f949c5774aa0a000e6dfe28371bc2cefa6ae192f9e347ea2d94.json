{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../provider/request-documents.provider\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../services/request-documents.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ng-zorro-antd/table\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/panel\";\nimport * as i11 from \"primeng/confirmdialog\";\nfunction RequestDocumentsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function RequestDocumentsComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAddDocuments());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isReadOnly || ctx_r0.isTechnician);\n  }\n}\nfunction RequestDocumentsComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 12);\n    i0.ɵɵelementStart(2, \"th\", 13)(3, \"div\", 14)(4, \"div\", 15)(5, \"p\", 16);\n    i0.ɵɵtext(6, \"Document Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 17);\n    i0.ɵɵelement(8, \"p-sortIcon\", 18)(9, \"p-columnFilter\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 20)(11, \"div\", 14)(12, \"div\", 15)(13, \"p\", 16);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 17);\n    i0.ɵɵelement(16, \"p-sortIcon\", 21)(17, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 23)(19, \"div\", 14)(20, \"div\", 15)(21, \"p\", 16);\n    i0.ɵɵtext(22, \"Date Added\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 17);\n    i0.ɵɵelement(24, \"p-sortIcon\", 24)(25, \"p-columnFilter\", 25);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction RequestDocumentsComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 26)(1, \"td\", 12)(2, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function RequestDocumentsComponent_ng_template_5_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const doc_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.showDocumentDialog(doc_r6));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function RequestDocumentsComponent_ng_template_5_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const doc_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onDelete(doc_r6.requestDocId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const doc_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", doc_r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isTechnician);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doc_r6.documentName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doc_r6.docDescription);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 5, doc_r6.dateAdded, \"d MMM yyyy\"));\n  }\n}\nfunction RequestDocumentsComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtext(2, \" No Records Found \");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nconst _c1 = function () {\n  return {\n    width: \"30vw\"\n  };\n};\nexport let RequestDocumentsComponent = /*#__PURE__*/(() => {\n  class RequestDocumentsComponent {\n    constructor(requestDocumentsProvider, messageService, requestDocumentsService, confirmSerive, datePipe) {\n      this.requestDocumentsProvider = requestDocumentsProvider;\n      this.messageService = messageService;\n      this.requestDocumentsService = requestDocumentsService;\n      this.confirmSerive = confirmSerive;\n      this.datePipe = datePipe;\n      this.savedFiles = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.requestId = 0;\n      this.isRequestor = false;\n      this.isApprover = false;\n      this.isTechnician = false;\n      this.isSupervisor = false;\n      this.displayImage = false;\n      this.isReadOnly = false;\n    }\n    ngOnInit() {}\n    onAddDocuments() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '600px';\n      dialogConfig.data = {\n        requestId: this.requestId,\n        // isView: false,\n        userChecks: {\n          isRequestor: this.isRequestor,\n          isApprover: this.isApprover,\n          isSupervisor: this.isSupervisor,\n          isTechnician: this.isTechnician\n        }\n      };\n      this.requestDocumentsProvider.openDialog(dialogConfig);\n      this.requestDocumentsProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result) {\n          this.messageService.add({\n            key: 'requestDoc',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadDocumentsByRequest(this.requestId);\n        }\n      });\n    }\n    loadDocumentsByRequest(requestId) {\n      this.requestDocumentsService.getDocumentsById(parseInt(requestId)).subscribe(res => {\n        if (res.length > 0) {\n          this.savedFiles = res.map(each => {\n            return {\n              ...each,\n              formatedDateAdded: this.datePipe.transform(each.dateAdded, 'd MMM yyyy')\n            };\n          });\n        } else {\n          this.savedFiles = [];\n        }\n      });\n    }\n    onDelete(id) {\n      this.confirmSerive.confirm({\n        message: 'Are you sure that you want to delete?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        key: 'deleteDoc',\n        accept: () => {\n          this.deleteDocument(id);\n        }\n      });\n    }\n    deleteDocument(id) {\n      this.requestDocumentsService.deleteRequestDocument(id).subscribe(res => {\n        if (res.code === 200) {\n          this.messageService.add({\n            key: 'requestDoc',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadDocumentsByRequest(this.requestId);\n        }\n      });\n    }\n    showDocumentDialog(doc) {\n      if (doc.docType === 'png' || doc.docType === 'jpeg' || doc.docType === 'jpg') {\n        this.src = \"data:image/png;base64,\" + doc.documentContent;\n        this.displayImage = true;\n        return false;\n      } else {\n        const byteCharacters = atob(doc.documentContent);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        let mimeType;\n        // Determine the MIME type based on the file extension or type\n        if (doc.docType === 'pdf') {\n          mimeType = 'application/pdf';\n        } else if (doc.docType === 'doc' || doc.docType === 'docx') {\n          mimeType = 'application/msword';\n        } else if (doc.docType === 'xlsx' || doc.docType === 'xls') {\n          mimeType = 'application/vnd.ms-excel';\n        } else if (doc.docType === 'ppt') {\n          mimeType = 'application/vnd.ms-powerpoint';\n        } else {\n          // Fallback to a generic binary file\n          mimeType = 'application/octet-stream';\n        }\n        const blob = new Blob([byteArray], {\n          type: mimeType\n        });\n        const url = URL.createObjectURL(blob);\n        const anchor = document.createElement('a');\n        anchor.href = url;\n        anchor.target = '_blank';\n        anchor.setAttribute('download', doc.documentName); // Set the download attribute to the desired filename\n        anchor.style.display = 'none';\n        document.body.appendChild(anchor);\n        anchor.click();\n        document.body.removeChild(anchor);\n        return false;\n      }\n    }\n    static #_ = this.ɵfac = function RequestDocumentsComponent_Factory(t) {\n      return new (t || RequestDocumentsComponent)(i0.ɵɵdirectiveInject(i1.RequestDocumentsProvider), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.RequestDocumentsService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i4.DatePipe));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RequestDocumentsComponent,\n      selectors: [[\"app-request-documents\"]],\n      inputs: {\n        isReadOnly: \"isReadOnly\"\n      },\n      decls: 11,\n      vars: 17,\n      consts: [[\"header\", \" \"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"header\", \" \", 3, \"visible\", \"closable\", \"draggable\", \"resizable\", \"modal\", \"visibleChange\"], [\"width\", \"90%\", \"height\", \"90%\", 3, \"src\", \"alt\"], [\"key\", \"requestDoc\", \"position\", \"top-right\"], [\"key\", \"deleteDoc\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"disabled\", \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"documentName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"documentName\"], [\"type\", \"text\", \"field\", \"documentName\", \"display\", \"menu\"], [\"pSortableColumn\", \"docDescription\"], [\"field\", \"docDescription\"], [\"type\", \"text\", \"field\", \"docDescription\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateAdded\"], [\"field\", \"formatedDateAdded\"], [\"type\", \"text\", \"field\", \"formatedDateAdded\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-eye\", 1, \"p-button-text\", 2, \"font-size\", \"5rem\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"type\", \"button\", 1, \"p-button-text\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"disabled\", \"click\"], [\"colspan\", \"4\", 2, \"text-align\", \"center\"]],\n      template: function RequestDocumentsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0);\n          i0.ɵɵtemplate(1, RequestDocumentsComponent_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"p-table\", 3);\n          i0.ɵɵtemplate(4, RequestDocumentsComponent_ng_template_4_Template, 26, 0, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, RequestDocumentsComponent_ng_template_5_Template, 11, 8, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, RequestDocumentsComponent_ng_template_6_Template, 3, 0, \"ng-template\", 6);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"p-dialog\", 7);\n          i0.ɵɵlistener(\"visibleChange\", function RequestDocumentsComponent_Template_p_dialog_visibleChange_7_listener($event) {\n            return ctx.displayImage = $event;\n          });\n          i0.ɵɵelement(8, \"img\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"p-toast\", 9)(10, \"p-confirmDialog\", 10);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"value\", ctx.savedFiles)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(15, _c0))(\"rowHover\", true)(\"scrollable\", true);\n          i0.ɵɵadvance(4);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(16, _c1));\n          i0.ɵɵproperty(\"visible\", ctx.displayImage)(\"closable\", true)(\"draggable\", false)(\"resizable\", false)(\"modal\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"src\", ctx.src, i0.ɵɵsanitizeUrl);\n        }\n      },\n      dependencies: [i5.NzTableCellDirective, i5.NzThMeasureDirective, i5.NzTrDirective, i2.PrimeTemplate, i6.Table, i6.SortableColumn, i6.SelectableRow, i6.SortIcon, i6.ColumnFilter, i7.ButtonDirective, i8.Dialog, i9.Toast, i10.Panel, i11.ConfirmDialog, i4.DatePipe],\n      styles: [\".p-fileupload .p-fileupload-buttonbar{display:flex;justify-content:flex-end}\"]\n    });\n  }\n  return RequestDocumentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}