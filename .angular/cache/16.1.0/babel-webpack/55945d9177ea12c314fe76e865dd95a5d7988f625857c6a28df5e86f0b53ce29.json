{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-zorro-antd/table\";\nimport * as i4 from \"ng-zorro-antd/input\";\nimport * as i5 from \"primeng/calendar\";\nimport * as i6 from \"../../../../directive/directive/trim-input.directive\";\nfunction AddHolidayFormComponent_input_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 9);\n  }\n}\nfunction AddHolidayFormComponent_p_calendar_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-calendar\", 10);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"showIcon\", false);\n  }\n}\nexport class AddHolidayFormComponent {\n  constructor(formBuilder, datePipe) {\n    this.formBuilder = formBuilder;\n    this.datePipe = datePipe;\n    this.subscriptions = [];\n    this.newRecord = true;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.holidayFormPanel = this.formBuilder.group({\n      holidayDate: ['', [Validators.required]],\n      holidaysId: [0],\n      holidayDesc: ['', [Validators.required]]\n    });\n    this.subscriptions.push(\n    // any time the inner form changes update the parent of any change\n    this.holidayFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {}\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const me = this;\n    const validationErros = [];\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n  get value() {\n    const holidayDetails = {\n      holidayDate: this.holidayFormPanel.controls.holidayDate.value,\n      holidaysId: this.holidayFormPanel.controls.holidaysId.value,\n      holidayDesc: this.holidayFormPanel.controls.holidayDesc.value\n    };\n    return holidayDetails;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.holidayFormPanel.patchValue({\n        holidayDate: value.holidayDate != null ? this.setDate(value.holidayDate) : '',\n        holidaysId: value.holidaysId,\n        holidayDesc: value.holidayDesc\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  setDate(date) {\n    var val = new Date(date);\n    var userTimezoneOffset = val.getTimezoneOffset() * 60000;\n    let fdate = new Date(val.getTime() - userTimezoneOffset);\n    return this.datePipe.transform(fdate, 'dd MMM yyyy');\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.holidayFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  // communicate the inner form validation to the parent form\n  validate(_) {\n    return this.holidayFormPanel.valid ? null : {\n      holidayFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  static #_ = this.ɵfac = function AddHolidayFormComponent_Factory(t) {\n    return new (t || AddHolidayFormComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.DatePipe));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddHolidayFormComponent,\n    selectors: [[\"app-add-holiday-form\"]],\n    inputs: {\n      isNew: \"isNew\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddHolidayFormComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddHolidayFormComponent),\n      multi: true\n    }])],\n    decls: 17,\n    vars: 3,\n    consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"class\", \"form-control\", \"name\", \"holidayDate\", \"formControlName\", \"holidayDate\", 4, \"ngIf\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"disabled\", \"!isNew\", \"name\", \"holidayDate\", \"formControlName\", \"holidayDate\", \"inputId\", \"icon\", 3, \"showIcon\", 4, \"ngIf\"], [\"name\", \"holidayDesc\", \"formControlName\", \"holidayDesc\", \"rows\", \"2\", \"nz-input\", \"\", \"maxlength\", \"128\", \"appTrimInput\", \"\", 1, \"form-control\", \"note-border\"], [\"type\", \"text\", \"name\", \"holidayDate\", \"formControlName\", \"holidayDate\", 1, \"form-control\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"disabled\", \"!isNew\", \"name\", \"holidayDate\", \"formControlName\", \"holidayDate\", \"inputId\", \"icon\", 3, \"showIcon\"]],\n    template: function AddHolidayFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\")(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Holiday Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, AddHolidayFormComponent_input_9_Template, 1, 0, \"input\", 6);\n        i0.ɵɵtemplate(10, AddHolidayFormComponent_p_calendar_10_Template, 1, 1, \"p-calendar\", 7);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(11, \"tr\")(12, \"td\")(13, \"div\", 2)(14, \"label\", 5);\n        i0.ɵɵtext(15, \"Holiday Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"textarea\", 8);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.holidayFormPanel);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isNew);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isNew);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i3.NzTableCellDirective, i3.NzTrDirective, i4.NzInputDirective, i5.Calendar, i6.TrimInputDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","Validators","NG_VALUE_ACCESSOR","NG_VALIDATORS","i0","ɵɵelement","ɵɵproperty","AddHolidayFormComponent","constructor","formBuilder","datePipe","subscriptions","newRecord","onChange","onTouched","holidayFormPanel","group","holidayDate","required","holidaysId","holidayDesc","push","valueChanges","subscribe","value","ngOnInit","isValid","getValidationErrors","length","me","validationErros","holidayDetails","controls","setTimeout","patchValue","setDate","date","val","Date","userTimezoneOffset","getTimezoneOffset","fdate","getTime","transform","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","forEach","s","unsubscribe","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","DatePipe","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddHolidayFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddHolidayFormComponent_input_9_Template","AddHolidayFormComponent_p_calendar_10_Template","ɵɵadvance"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/holidays/widgets/add-holiday-form/add-holiday-form.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/holidays/widgets/add-holiday-form/add-holiday-form.component.html"],"sourcesContent":["import { Component, OnInit, forwardRef, OnDestroy, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators, ValidationErrors } from '@angular/forms';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, UntypedFormControl, NG_VALIDATORS } from '@angular/forms';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-add-holiday-form',\n  templateUrl: './add-holiday-form.component.html',\n  styleUrls: ['./add-holiday-form.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddHolidayFormComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddHolidayFormComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddHolidayFormComponent implements ControlValueAccessor, OnDestroy {\n\n  holidayFormPanel: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  newRecord: boolean = true;\n  //isNew!: boolean=true;\n  @Input() isNew!: boolean;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private datePipe:DatePipe\n  ) {\n    this.holidayFormPanel = this.formBuilder.group({\n      holidayDate: ['', [Validators.required]],\n      holidaysId: [0,],\n      holidayDesc: ['', [Validators.required]],\n    });\n\n    this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.holidayFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n  }\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const me = this;\n    const validationErros: VaildationError[] = [];\n\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n  get value(): any {\n    const holidayDetails: any = {\n      holidayDate: this.holidayFormPanel.controls.holidayDate.value,\n      holidaysId: this.holidayFormPanel.controls.holidaysId.value,\n      holidayDesc: this.holidayFormPanel.controls.holidayDesc.value,\n\n    };\n    return holidayDetails;\n  }\n\n  set value(value: any) {\n    setTimeout(() => {\n      this.holidayFormPanel.patchValue({\n        holidayDate: value.holidayDate != null ? this.setDate(value.holidayDate) : '',\n        holidaysId: value.holidaysId,\n        holidayDesc: value.holidayDesc,\n\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  setDate(date: any) {\n    var val = new Date(date);\n    var userTimezoneOffset = val.getTimezoneOffset() * 60000;\n    let fdate =  new Date(val.getTime() - userTimezoneOffset);\n   return  this.datePipe.transform(fdate,'dd MMM yyyy');\n  }\n\n  writeValue(value: any) {\n\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.holidayFormPanel.reset();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  // communicate the inner form validation to the parent form\n  validate(_: UntypedFormControl) {\n    return this.holidayFormPanel.valid ? null : { holidayFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n","<form [formGroup]=\"holidayFormPanel\">\n  <table width=\"100%\">\n    <tr>\n      <td>\n        <div class=\"input-label-custom\">\n          <div class=\"p-fluid\">\n            <div class=\"p-field\">\n              <label class='form-field-lable control-label'>Holiday Date</label>\n              <input type=\"text\" *ngIf=\"!isNew\" class=\"form-control\" name=\"holidayDate\" formControlName=\"holidayDate\">\n              <p-calendar appendTo=\"body\" *ngIf=\"isNew\" dateFormat=\"dd M yy\" disabled=\"!isNew\" name=\"holidayDate\" formControlName=\"holidayDate\"  [showIcon]=\"false\" inputId=\"icon\"></p-calendar>\n            </div>\n            </div>\n          </div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable  control-label'>Holiday Description</label>\n          <textarea class=\"form-control note-border\" name=\"holidayDesc\" formControlName=\"holidayDesc\" rows=\"2\" nz-input maxlength=\"128\" appTrimInput></textarea>\n        </div>\n      </td>\n    </tr>\n  </table>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}