{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { RMFilterInputDTO } from '../background-loc/model/DTO/rmFilterInput.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../rm-config/rm-config/services/rm-config.service\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"../employee/services/employee.service\";\nimport * as i5 from \"../svg-view/services/svg-view.service\";\nimport * as i6 from \"../background-loc/services/bl.service\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/radiobutton\";\nimport * as i12 from \"../svg-view/svg-view.component\";\nfunction RoomEmployeeSvgComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 3)(2, \"div\", 7)(3, \"label\", 15);\n    i0.ɵɵtext(4, \"Employee \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"ng-select\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"td\")(7, \"td\")(8, \"td\")(9, \"td\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumEm)(\"searchable\", true);\n  }\n}\nfunction RoomEmployeeSvgComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RoomEmployeeSvgComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵelement(1, \"app-svg-view\", 24);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RoomEmployeeSvgComponent_ngx_spinner_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 25)(1, \"p\", 26);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport let RoomEmployeeSvgComponent = /*#__PURE__*/(() => {\n  class RoomEmployeeSvgComponent {\n    constructor(formBuilder, rmConfigSrv, authSrv, emSrv, svgViewSrv, blServ, cdr, spinner) {\n      this.formBuilder = formBuilder;\n      this.rmConfigSrv = rmConfigSrv;\n      this.authSrv = authSrv;\n      this.emSrv = emSrv;\n      this.svgViewSrv = svgViewSrv;\n      this.blServ = blServ;\n      this.cdr = cdr;\n      this.spinner = spinner;\n      this.allBl = [];\n      this.enumBL = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.allRmDdata = [];\n      this.rm_data = [];\n      this.isRoomView = true;\n      this.isEmployeeView = false;\n      this.enumEm = [];\n      this.allEmployees = [];\n      this.viewSvg = false;\n      this.fileString = '';\n      this.fileName = '';\n      this.defaultLoadColor = \"\";\n      this.assignedColor = \"#ff0000\";\n      this.roomDetails = [];\n      this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n      this.noSVGFound = false;\n      this.showSpinner = true;\n      this.filterPanel = this.formBuilder.group({\n        viewFor: ['Room'],\n        blId: [null],\n        flId: [null],\n        rmId: [null],\n        emId: [null]\n      });\n    }\n    ngOnInit() {\n      this.compId = this.authSrv.getLoggedInUserCompId();\n      this.loadAllBuilding();\n      this.loadAllFloor();\n      this.loadAllRoom();\n      this.loadAllEmployees();\n      this.onRoom();\n    }\n    ngAfterViewInit() {\n      if (this.viewSvg) {\n        this.svgViewComp;\n      }\n    }\n    loadAllBuilding() {\n      this.blServ.getALLBuilding().subscribe(res => {\n        this.enumBL = res;\n        this.enumBL = res.map(i => {\n          i.name = i.blNameString;\n          return i;\n        });\n        this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n      });\n    }\n    loadAllFloor() {\n      this.blServ.getALLFloor().subscribe(res => {\n        this.enumAllFL = res;\n        this.enumAllFL = res.map(i => {\n          i.name = i.flNameString;\n          return i;\n        });\n        this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n        this.enumFL = this.enumAllFL;\n      });\n    }\n    loadAllRoom() {\n      this.blServ.getALLRoom().subscribe(res => {\n        this.allRmDdata = res;\n        this.allRmDdata = res.map(i => {\n          i.name = i.rmNameString;\n          return i;\n        });\n        this.allRmDdata.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n        this.rm_data = this.allRmDdata;\n      });\n    }\n    loadAllEmployees() {\n      this.emSrv.getAllEmployeeList().subscribe(res => {\n        this.allEmployees = res;\n        this.enumEm = this.allEmployees.map(({\n          emId,\n          firstName,\n          lastName,\n          blId,\n          flId,\n          rmId\n        }) => ({\n          emId,\n          firstName,\n          lastName,\n          blId,\n          flId,\n          rmId\n        }));\n        this.enumEm.map(i => {\n          i.fullName = i.firstName + ' ' + i.lastName;\n          return i;\n        });\n      });\n    }\n    onRoom() {\n      this.isRoomView = true;\n      this.isEmployeeView = false;\n      let blField = this.filterPanel.controls['blId'];\n      let flField = this.filterPanel.controls['flId'];\n      let rmField = this.filterPanel.controls['rmId'];\n      let emField = this.filterPanel.controls['emId'];\n      emField.setValidators(null);\n      blField.setValidators([Validators.required]);\n      flField.setValidators([Validators.required]);\n      rmField.setValidators([Validators.required]);\n      emField.updateValueAndValidity();\n      blField.updateValueAndValidity();\n      flField.updateValueAndValidity();\n      rmField.updateValueAndValidity();\n    }\n    onEmployee() {\n      let blId = this.filterPanel.controls['blId'].value;\n      let flId = this.filterPanel.controls['flId'].value;\n      let rmId = this.filterPanel.controls['rmId'].value;\n      let emId = this.filterPanel.controls['emId'].value;\n      if (blId !== null && flId !== null && rmId !== null && emId !== null) {\n        this.isRoomView = true;\n        this.isEmployeeView = true;\n      } else {\n        this.isRoomView = false;\n        this.isEmployeeView = true;\n      }\n      let blField = this.filterPanel.controls['blId'];\n      let flField = this.filterPanel.controls['flId'];\n      let rmField = this.filterPanel.controls['rmId'];\n      let emField = this.filterPanel.controls['emId'];\n      blField.setValidators(null);\n      flField.setValidators(null);\n      rmField.setValidators(null);\n      emField.setValidators([Validators.required]);\n      blField.updateValueAndValidity();\n      flField.updateValueAndValidity();\n      rmField.updateValueAndValidity();\n      emField.updateValueAndValidity();\n    }\n    onSelectBlCode($event) {\n      if ($event.id != null) {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            flId: null,\n            rmId: null\n          });\n          this.loadFloorCode($event.id);\n        }, 10);\n      } else {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            flId: null,\n            rmId: null\n          });\n        }, 10);\n        this.enumFL = this.enumAllFL;\n        this.rm_data = this.allRmDdata;\n      }\n    }\n    loadFloorCode(bl_id) {\n      if (bl_id != null) {\n        this.enumFL = [];\n        this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n        this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n        this.rm_data = this.allRmDdata.filter(t => t.blId == bl_id);\n        this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n      }\n    }\n    onSelectFlCode(event) {\n      if (event.id != null) {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: event.blId,\n            rmId: null\n          });\n          this.loadRmCode(event.id, event.blId);\n        }, 10);\n      } else {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            rmId: null\n          });\n        }, 10);\n        this.rm_data = this.allRmDdata;\n        this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      }\n    }\n    loadRmCode(flId, blId) {\n      if (flId != null) {\n        this.rm_data = [];\n        this.rm_data = this.allRmDdata.filter(t => t.blId == blId && t.flId == flId);\n        this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n      }\n    }\n    onSelectRmCode(event) {\n      if (event.id != null) {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: event.blId,\n            flId: event.flId\n          });\n        }, 10);\n      }\n    }\n    onSearch() {\n      this.roomDetails = [];\n      this.noSVGFound = false;\n      this.viewSvg = false;\n      this.showSpinner = true;\n      this.spinner.show();\n      this.fileName = '';\n      this.fileString = '';\n      this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n      if (this.isRoomView && !this.isEmployeeView) {\n        let blId = this.filterPanel.controls.blId.value;\n        let flId = this.filterPanel.controls.flId.value;\n        let rmId = this.filterPanel.controls.rmId.value;\n        this.getRoomDetails(blId, flId, rmId, \"\");\n        let data = {\n          id: flId,\n          blId: blId,\n          compId: this.compId,\n          name: '',\n          flInfo: '',\n          svgName: '',\n          units: ''\n        };\n        setTimeout(() => {\n          if (this.svgRoomData.content[0].svgElementId !== null) {\n            this.svgViewSrv.getSVGFile(data).subscribe(res => {\n              if (res.code != 409) {\n                this.fileName = res.fileName;\n                this.fileString = res.fileContent;\n                this.filterPanel.patchValue({\n                  emId: null\n                });\n                this.viewSvg = true;\n                this.cdr.detectChanges();\n                this.spinner.hide();\n                this.showSpinner = false;\n              } else {\n                this.spinner.hide();\n                this.showSpinner = false;\n                this.noSVGFound = true;\n              }\n            });\n          } else {\n            this.spinner.hide();\n            this.showSpinner = false;\n            this.noSVGFound = true;\n          }\n        }, 100);\n      } else if (this.isEmployeeView) {\n        let emId = this.filterPanel.controls.emId.value;\n        const emArray = this.enumEm.filter(each => each.emId == emId);\n        if (emArray[0].blId == null) {\n          this.filterPanel.patchValue({\n            blId: null,\n            flId: null,\n            rmId: null\n          });\n        } else {\n          this.loadFloorCode(emArray[0].blId);\n          this.loadRmCode(emArray[0].flId, emArray[0].blId);\n          this.filterPanel.patchValue({\n            blId: emArray[0].blId,\n            flId: emArray[0].flId,\n            rmId: emArray[0].rmId\n          });\n        }\n        if (emArray[0].blId !== null && emArray[0].flId !== null && emArray[0].rmId !== null) {\n          this.getRoomDetails(emArray[0].blId, emArray[0].flId, emArray[0].rmId, emArray[0].fullName);\n          let data = {\n            id: emArray[0].flId,\n            blId: emArray[0].blId,\n            compId: this.compId,\n            name: '',\n            flInfo: '',\n            svgName: '',\n            units: ''\n          };\n          setTimeout(() => {\n            if (this.svgRoomData.content[0].svgElementId !== null) {\n              this.roomDetails[0].em = emArray;\n              this.svgViewSrv.getSVGFile(data).subscribe(res => {\n                if (res.code != 409) {\n                  this.fileName = res.fileName;\n                  this.fileString = res.fileContent;\n                  this.isRoomView = true;\n                  this.viewSvg = true;\n                  this.cdr.detectChanges();\n                  this.spinner.hide();\n                  this.showSpinner = false;\n                } else {\n                  this.noSVGFound = true;\n                  this.spinner.hide();\n                  this.showSpinner = false;\n                }\n                error => {\n                  console.log(error);\n                };\n              });\n            } else {\n              this.noSVGFound = true;\n              this.spinner.hide();\n              this.showSpinner = false;\n            }\n          }, 100);\n        } else {\n          this.noSVGFound = true;\n          this.spinner.hide();\n          this.showSpinner = false;\n        }\n      }\n    }\n    getRoomDetails(blId, flId, rmId, empLabel) {\n      let data = {\n        id: rmId,\n        name: '',\n        blId: blId,\n        flId: flId,\n        svgElementId: '',\n        compId: this.compId\n      };\n      this.blServ.getRmById(data).subscribe(res => {\n        let idObj = {\n          roomElementId: res.rm.svgElementId,\n          assetElementId: null\n        };\n        let colorObj = {\n          roomColor: \"#ff0000\",\n          assetColor: null\n        };\n        let contentData = {\n          blId: blId,\n          flId: flId,\n          rmId: res.rm.rmId,\n          label: empLabel != \"\" ? [res.rm.rmId, empLabel] : [res.rm.rmId],\n          showLabel: true,\n          highlightRoom: true,\n          svgElementId: idObj,\n          color: colorObj,\n          rmCode: '',\n          zoomAtRoom: false\n        };\n        this.svgRoomData.content.push(contentData);\n        this.roomDetails.push(res);\n      });\n      this.svgRoomData.blId = blId;\n      this.svgRoomData.flId = flId;\n      this.svgRoomData.locate = \"room\";\n    }\n    onClear() {\n      this.roomDetails = [];\n      this.viewSvg = false;\n      this.fileName = '';\n      this.fileString = '';\n      this.filterPanel.patchValue({\n        blId: null,\n        flId: null,\n        rmId: null,\n        emId: null\n      });\n      if (this.isRoomView && this.isEmployeeView) {\n        this.isRoomView = false;\n      }\n      ;\n      this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    }\n    static #_ = this.ɵfac = function RoomEmployeeSvgComponent_Factory(t) {\n      return new (t || RoomEmployeeSvgComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.RmConfigService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.EmployeeService), i0.ɵɵdirectiveInject(i5.SvgViewService), i0.ɵɵdirectiveInject(i6.BuildingService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i7.NgxSpinnerService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RoomEmployeeSvgComponent,\n      selectors: [[\"app-room-employee-svg\"]],\n      viewQuery: function RoomEmployeeSvgComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(SvgViewComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n        }\n      },\n      decls: 47,\n      vars: 18,\n      consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [2, \"display\", \"flex\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"margin-left\", \"5px\"], [1, \"form-field-lable\", 2, \"margin-right\", \"5px\"], [1, \"input-label-custom\"], [\"name\", \"viewFor\", \"value\", \"Room\", \"formControlName\", \"viewFor\", 3, \"click\"], [1, \"form-field-lable\", 2, \"margin-left\", \"5px\"], [\"name\", \"viewFor\", \"value\", \"Employee\", \"formControlName\", \"viewFor\", 3, \"click\"], [2, \"margin\", \"5px 0 0 5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [4, \"ngIf\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"rmId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-fussion\", 3, \"fullScreen\", 4, \"ngIf\"], [\"appendTo\", \"body\", \"formControlName\", \"emId\", \"bindLabel\", \"fullName\", \"bindValue\", \"emId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [1, \"card\", \"no-file-found\"], [2, \"height\", \"500px\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-fussion\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n      template: function RoomEmployeeSvgComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Locate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 7)(11, \"p-radioButton\", 8);\n          i0.ɵɵlistener(\"click\", function RoomEmployeeSvgComponent_Template_p_radioButton_click_11_listener() {\n            return ctx.onRoom();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"label\", 9);\n          i0.ɵɵtext(13, \"Room\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 7)(15, \"p-radioButton\", 10);\n          i0.ɵɵlistener(\"click\", function RoomEmployeeSvgComponent_Template_p_radioButton_click_15_listener() {\n            return ctx.onEmployee();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"label\", 9);\n          i0.ɵɵtext(17, \"Employee\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(18, \"td\")(19, \"td\")(20, \"td\");\n          i0.ɵɵelementStart(21, \"td\", 3)(22, \"div\", 11)(23, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function RoomEmployeeSvgComponent_Template_button_click_23_listener() {\n            return ctx.onSearch();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function RoomEmployeeSvgComponent_Template_button_click_24_listener() {\n            return ctx.onClear();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(25, RoomEmployeeSvgComponent_tr_25_Template, 10, 3, \"tr\", 14);\n          i0.ɵɵelementStart(26, \"tr\")(27, \"td\", 3)(28, \"div\", 7)(29, \"label\", 15);\n          i0.ɵɵtext(30, \"Building \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"ng-select\", 16);\n          i0.ɵɵlistener(\"change\", function RoomEmployeeSvgComponent_Template_ng_select_change_31_listener($event) {\n            return ctx.onSelectBlCode($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(32, \"td\", 3)(33, \"div\", 7)(34, \"label\", 15);\n          i0.ɵɵtext(35, \"Floor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"ng-select\", 17);\n          i0.ɵɵlistener(\"change\", function RoomEmployeeSvgComponent_Template_ng_select_change_36_listener($event) {\n            return ctx.onSelectFlCode($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(37, \"td\", 3)(38, \"div\", 7)(39, \"label\", 15);\n          i0.ɵɵtext(40, \"Room\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"ng-select\", 18);\n          i0.ɵɵlistener(\"change\", function RoomEmployeeSvgComponent_Template_ng_select_change_41_listener($event) {\n            return ctx.onSelectRmCode($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(42, \"td\", 3)(43, \"td\", 3);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(44, RoomEmployeeSvgComponent_div_44_Template, 3, 0, \"div\", 19);\n          i0.ɵɵtemplate(45, RoomEmployeeSvgComponent_div_45_Template, 2, 0, \"div\", 20);\n          i0.ɵɵtemplate(46, RoomEmployeeSvgComponent_ngx_spinner_46_Template, 3, 1, \"ngx-spinner\", 21);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n          i0.ɵɵadvance(22);\n          i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isEmployeeView);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true)(\"readonly\", ctx.isEmployeeView);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true)(\"readonly\", ctx.isEmployeeView);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.rm_data)(\"searchable\", true)(\"readonly\", ctx.isEmployeeView);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.noSVGFound);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n        }\n      },\n      dependencies: [i8.NgIf, i9.NgSelectComponent, i10.ButtonDirective, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i11.RadioButton, i7.NgxSpinnerComponent, i12.SvgViewComponent],\n      styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header{background-color:#879cc9;color:#000;padding-left:10px;font-weight:400;margin-bottom:0;height:10px!important}.no-file-found[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:500px}\"]\n    });\n  }\n  return RoomEmployeeSvgComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}