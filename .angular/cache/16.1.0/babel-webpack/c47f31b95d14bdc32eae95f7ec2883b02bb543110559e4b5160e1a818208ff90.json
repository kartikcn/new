{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport let AddWorkRequestService = /*#__PURE__*/(() => {\n  class AddWorkRequestService {\n    constructor(addWorkRequestService) {\n      this.addWorkRequestService = addWorkRequestService;\n    }\n    saveWorkRequest(data) {\n      return this.addWorkRequestService.add('wr', 'saveWr', data);\n    }\n    getAllWr() {\n      return this.addWorkRequestService.getAll('wr', 'getAll');\n    }\n    getAllWrByFilter(filteData) {\n      return this.addWorkRequestService.search('wr', 'getAllByFilter', filteData);\n    }\n    getAllWrByFilterPaginated(filteData) {\n      return this.addWorkRequestService.search('wr', 'getAllByFilterPaginated', filteData);\n    }\n    getWrById(id) {\n      return this.addWorkRequestService.getSingleById('wr', 'getWrById', id);\n    }\n    getRequestLogByRequestId(requestId) {\n      return this.addWorkRequestService.getAllById('requestLog', 'getByRequestId', requestId);\n    }\n    getEscaltionDateAndTime(dateAndTime) {\n      return this.addWorkRequestService.add('wr', 'getEscaltionDateAndTime', dateAndTime);\n    }\n    getAllStatusWithCount(filteData) {\n      return this.addWorkRequestService.search('wr', 'getAllStatusWithCount', filteData);\n    }\n    static #_ = this.ɵfac = function AddWorkRequestService_Factory(t) {\n      return new (t || AddWorkRequestService)(i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AddWorkRequestService,\n      factory: AddWorkRequestService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AddWorkRequestService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}