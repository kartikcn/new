{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport class PlanToolService {\n  constructor(planToolService) {\n    this.planToolService = planToolService;\n  }\n  getAllPlanTools(planStepId) {\n    return this.planToolService.getAllById('planTool', 'getByPlanStepId', planStepId);\n  }\n  getPlanToolById(id) {\n    return this.planToolService.getSingleById('planTool', 'getplanToolById', id);\n  }\n  savePlanTool(data) {\n    return this.planToolService.add('planTool', 'save', data);\n  }\n  deletePlanTool(id) {\n    return this.planToolService.getSingleById('planTool', 'deleteplanToolById', id);\n  }\n  checkIsPlanToolExists(planStepId, toolId) {\n    return this.planToolService.getAllByIds('planTool', 'checkExist', planStepId, toolId);\n  }\n  static #_ = this.ɵfac = function PlanToolService_Factory(t) {\n    return new (t || PlanToolService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlanToolService,\n    factory: PlanToolService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PlanToolService","constructor","planToolService","getAllPlanTools","planStepId","getAllById","getPlanToolById","id","getSingleById","savePlanTool","data","add","deletePlanTool","checkIsPlanToolExists","toolId","getAllByIds","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/plan-tool/services/plan-tool-services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlanToolService {\n   \n    constructor(\n        private planToolService: DataService<any>,\n    ) { }\n\n    public getAllPlanTools(planStepId:any) {\n        return this.planToolService.getAllById('planTool', 'getByPlanStepId',planStepId);\n    }\n\n    public getPlanToolById(id: any) {\n        return this.planToolService.getSingleById('planTool', 'getplanToolById', id);\n    }\n\n    public savePlanTool(data: any): Observable<any> {\n        return this.planToolService.add('planTool', 'save', data);\n    }\n\n    public deletePlanTool(id: any) {\n        return this.planToolService.getSingleById('planTool', 'deleteplanToolById', id);\n    }\n\n    public checkIsPlanToolExists(planStepId:any, toolId:any) {\n        return this.planToolService.getAllByIds('planTool','checkExist',planStepId,toolId)\n    }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAExBC,YACYC,eAAiC;IAAjC,KAAAA,eAAe,GAAfA,eAAe;EACvB;EAEGC,eAAeA,CAACC,UAAc;IACjC,OAAO,IAAI,CAACF,eAAe,CAACG,UAAU,CAAC,UAAU,EAAE,iBAAiB,EAACD,UAAU,CAAC;EACpF;EAEOE,eAAeA,CAACC,EAAO;IAC1B,OAAO,IAAI,CAACL,eAAe,CAACM,aAAa,CAAC,UAAU,EAAE,iBAAiB,EAAED,EAAE,CAAC;EAChF;EAEOE,YAAYA,CAACC,IAAS;IACzB,OAAO,IAAI,CAACR,eAAe,CAACS,GAAG,CAAC,UAAU,EAAE,MAAM,EAAED,IAAI,CAAC;EAC7D;EAEOE,cAAcA,CAACL,EAAO;IACzB,OAAO,IAAI,CAACL,eAAe,CAACM,aAAa,CAAC,UAAU,EAAE,oBAAoB,EAAED,EAAE,CAAC;EACnF;EAEOM,qBAAqBA,CAACT,UAAc,EAAEU,MAAU;IACnD,OAAO,IAAI,CAACZ,eAAe,CAACa,WAAW,CAAC,UAAU,EAAC,YAAY,EAACX,UAAU,EAACU,MAAM,CAAC;EACtF;EAAC,QAAAE,CAAA,G;qBAxBQhB,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrB,eAAe;IAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}