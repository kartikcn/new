{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TwoDigitDecimalNumberDirective {\n  constructor(el) {\n    this.el = el;\n    // Allow decimal numbers and negative values\n    this.regex = new RegExp(/^\\d*\\.?\\d{0,2}$/g);\n    // Allow key codes for special events. Reflect :\n    // Backspace, tab, end, home\n    this.specialKeys = ['Backspace', 'Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];\n  }\n  onKeyDown(event) {\n    // Allow Backspace, tab, end, and home keys\n    if (this.specialKeys.indexOf(event.key) !== -1) {\n      return;\n    }\n    let current = this.el.nativeElement.value;\n    const position = this.el.nativeElement.selectionStart;\n    const next = [current.slice(0, position), event.key == 'Decimal' ? '.' : event.key, current.slice(position)].join('');\n    if (next && !String(next).match(this.regex)) {\n      event.preventDefault();\n    }\n  }\n  static #_ = this.ɵfac = function TwoDigitDecimalNumberDirective_Factory(t) {\n    return new (t || TwoDigitDecimalNumberDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TwoDigitDecimalNumberDirective,\n    selectors: [[\"\", \"TwoDigitDecimalNumber\", \"\"]],\n    hostBindings: function TwoDigitDecimalNumberDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function TwoDigitDecimalNumberDirective_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n    }\n  });\n}","map":{"version":3,"names":["TwoDigitDecimalNumberDirective","constructor","el","regex","RegExp","specialKeys","onKeyDown","event","indexOf","key","current","nativeElement","value","position","selectionStart","next","slice","join","String","match","preventDefault","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors","hostBindings","TwoDigitDecimalNumberDirective_HostBindings","rf","ctx","$event"],"sources":["/home/admin7/Documents/fms_frontend/src/app/directive/directive/two-digit-decimal-number.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[TwoDigitDecimalNumber]'\n})\nexport class TwoDigitDecimalNumberDirective {\n  // Allow decimal numbers and negative values\n  private regex: RegExp = new RegExp(/^\\d*\\.?\\d{0,2}$/g);\n  // Allow key codes for special events. Reflect :\n  // Backspace, tab, end, home\n  private specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];\n\n  constructor(private el: ElementRef) {\n  }\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // Allow Backspace, tab, end, and home keys\n    if (this.specialKeys.indexOf(event.key) !== -1) {\n      return;\n    }\n    let current: string = this.el.nativeElement.value;\n    const position = this.el.nativeElement.selectionStart;\n    const next: string = [current.slice(0, position), event.key == 'Decimal' ? '.' : event.key, current.slice(position)].join('');\n    if (next && !String(next).match(this.regex)) {\n      event.preventDefault();\n    }\n  }\n}"],"mappings":";AAKA,OAAM,MAAOA,8BAA8B;EAOzCC,YAAoBC,EAAc;IAAd,KAAAA,EAAE,GAAFA,EAAE;IANtB;IACQ,KAAAC,KAAK,GAAW,IAAIC,MAAM,CAAC,kBAAkB,CAAC;IACtD;IACA;IACQ,KAAAC,WAAW,GAAkB,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,QAAQ,CAAC;EAGzH;EAEAC,SAASA,CAACC,KAAoB;IAC5B;IACA,IAAI,IAAI,CAACF,WAAW,CAACG,OAAO,CAACD,KAAK,CAACE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC9C;;IAEF,IAAIC,OAAO,GAAW,IAAI,CAACR,EAAE,CAACS,aAAa,CAACC,KAAK;IACjD,MAAMC,QAAQ,GAAG,IAAI,CAACX,EAAE,CAACS,aAAa,CAACG,cAAc;IACrD,MAAMC,IAAI,GAAW,CAACL,OAAO,CAACM,KAAK,CAAC,CAAC,EAAEH,QAAQ,CAAC,EAAEN,KAAK,CAACE,GAAG,IAAI,SAAS,GAAG,GAAG,GAAGF,KAAK,CAACE,GAAG,EAAEC,OAAO,CAACM,KAAK,CAACH,QAAQ,CAAC,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC;IAC7H,IAAIF,IAAI,IAAI,CAACG,MAAM,CAACH,IAAI,CAAC,CAACI,KAAK,CAAC,IAAI,CAAChB,KAAK,CAAC,EAAE;MAC3CI,KAAK,CAACa,cAAc,EAAE;;EAE1B;EAAC,QAAAC,CAAA,G;qBArBUrB,8BAA8B,EAAAsB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA9BzB,8BAA8B;IAAA0B,SAAA;IAAAC,YAAA,WAAAC,4CAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAA9BC,GAAA,CAAAxB,SAAA,CAAAyB,MAAA,CAAiB;QAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}