{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/craftsperson.service\";\nimport * as i2 from \"../provider/craftsperson.provider\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"src/app/services/enum.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dropdown\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/panel\";\nimport * as i11 from \"primeng/confirmdialog\";\nimport * as i12 from \"../../../../core/level-status/level-status.component\";\nimport * as i13 from \"primeng/paginator\";\nfunction CraftspersonComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function CraftspersonComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAddCf());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CraftspersonComponent_ng_template_6_ng_template_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 36);\n    i0.ɵɵlistener(\"onChange\", function CraftspersonComponent_ng_template_6_ng_template_42_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const filter_r9 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r9($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r8)(\"options\", ctx_r7.enumstatus)(\"showClear\", true);\n  }\n}\nfunction CraftspersonComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 15);\n    i0.ɵɵelementStart(2, \"th\", 16)(3, \"div\", 17)(4, \"div\", 18)(5, \"p\", 19);\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 20);\n    i0.ɵɵelement(8, \"p-sortIcon\", 21)(9, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 23)(11, \"div\", 17)(12, \"div\", 18)(13, \"p\", 19);\n    i0.ɵɵtext(14, \"Email\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 20);\n    i0.ɵɵelement(16, \"p-sortIcon\", 24)(17, \"p-columnFilter\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 26)(19, \"div\", 17)(20, \"div\", 18)(21, \"p\", 19);\n    i0.ɵɵtext(22, \"Phone Number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 20);\n    i0.ɵɵelement(24, \"p-sortIcon\", 27)(25, \"p-columnFilter\", 28);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\", 29)(27, \"div\", 17)(28, \"div\", 18)(29, \"p\", 19);\n    i0.ɵɵtext(30, \"Primary Trade\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 20);\n    i0.ɵɵelement(32, \"p-sortIcon\", 30)(33, \"p-columnFilter\", 31);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"th\", 32)(35, \"div\", 17)(36, \"div\", 18)(37, \"p\", 19);\n    i0.ɵɵtext(38, \"Status\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 20);\n    i0.ɵɵelement(40, \"p-sortIcon\", 33);\n    i0.ɵɵelementStart(41, \"p-columnFilter\", 34);\n    i0.ɵɵtemplate(42, CraftspersonComponent_ng_template_6_ng_template_42_Template, 1, 3, \"ng-template\", 35);\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nfunction CraftspersonComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 37)(1, \"td\", 15)(2, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function CraftspersonComponent_ng_template_7_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const cf_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onEditCf(cf_r12.cfId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function CraftspersonComponent_ng_template_7_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const cf_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onDelete(cf_r12.cfId, cf_r12.name));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"level-status\", 40);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cf_r12 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", cf_r12);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(cf_r12.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cf_r12.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cf_r12.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cf_r12.trades.tradeCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"status\", ctx_r3.getNameById(cf_r12.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getNameById(cf_r12.status), \" \");\n  }\n}\nfunction CraftspersonComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 5);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let CraftspersonComponent = /*#__PURE__*/(() => {\n  class CraftspersonComponent {\n    constructor(service, craftsPersonDilogueProvider, confirmationService, messageService, enumsrv) {\n      this.service = service;\n      this.craftsPersonDilogueProvider = craftsPersonDilogueProvider;\n      this.confirmationService = confirmationService;\n      this.messageService = messageService;\n      this.enumsrv = enumsrv;\n      this.cf_data = [];\n      this.subscriptions = [];\n      this.loading = false;\n      this.enumstatus = [];\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumCraftsPerson = [];\n      this.enumsYesOrNo = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"cfId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n    }\n    ngOnInit() {\n      this.loadEnums();\n      this.loadRecords();\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        // this.enumCraftsPerson = this.enumClonedList.filter(t => t.tableName.toLowerCase() === 'craftsperson'.toLowerCase()); // need to change table name Here!!\n        this.enumstatus = this.enumClonedList.filter(t => t.tableName.toLowerCase() === 'craftsperson'.toLowerCase() && t.fieldName.toLowerCase() === 'status'.toLowerCase());\n        this.enumsYesOrNo = this.enumClonedList.filter(t => t.tableName.toLowerCase() === 'craftsperson'.toLowerCase() && t.fieldName.toLowerCase() === 'is_supervisor'.toLowerCase());\n        this.enumsYesOrNo.forEach(t => {\n          if (t.enumValue === 'No') {\n            this.isSupervisor = t.enumKey;\n          }\n        });\n      }, error => {});\n    }\n    loadRecords() {\n      this.loading = true;\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.service.getAllCraftspersonPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFiltered = false;\n          this.cf_data = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.cf_data = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    getNameById(enumKey) {\n      return enumKey ? this.enumstatus.find(t => t.enumKey == enumKey) != null ? this.enumstatus.find(t => t.enumKey == enumKey)?.enumValue : '' : '';\n    }\n    onAddCf() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '700px';\n      dialogConfig.data = {\n        cfId: null,\n        isEdit: true,\n        newRecord: true,\n        isSupervisor: this.isSupervisor,\n        enumsYesOrNo: this.enumsYesOrNo\n      };\n      this.craftsPersonDilogueProvider.openDialog(dialogConfig);\n      this.craftsPersonDilogueProvider.onDialogueClosed.subscribe(result => {\n        if (result === true) {\n          this.messageService.clear();\n          this.messageService.add({\n            key: 'cfSave',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onEditCf(cfId) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '700px';\n      dialogConfig.data = {\n        cfId: cfId,\n        isEdit: true,\n        newRecord: false\n      };\n      this.craftsPersonDilogueProvider.openDialog(dialogConfig);\n      this.craftsPersonDilogueProvider.onDialogueClosed.subscribe(result => {\n        if (result == true) {\n          this.messageService.clear();\n          this.messageService.add({\n            key: 'cfSave',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onDelete(id, name) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ' + name + '?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deleteCf(id);\n        },\n        key: \"cfGrid\"\n      });\n    }\n    deleteCf(id) {\n      this.service.deleteById(id).subscribe(res => {\n        this.messageService.clear();\n        if (res != null && res.code == 200) {\n          this.messageService.add({\n            key: 'cfSave',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadRecords();\n        } else {\n          this.messageService.add({\n            key: 'cfSave',\n            severity: 'error',\n            summary: 'error',\n            detail: res.text\n          });\n        }\n      }, error => {});\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        this.filterCriteria = {};\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {};\n            if (field == \"primaryTrade\") {\n              filterCriteria = {\n                fieldName: \"trades.tradeCode\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function CraftspersonComponent_Factory(t) {\n      return new (t || CraftspersonComponent)(i0.ɵɵdirectiveInject(i1.CraftspersonService), i0.ɵɵdirectiveInject(i2.craftsPersonDialogueProvider), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.EnumService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CraftspersonComponent,\n      selectors: [[\"app-craftsperson\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 14,\n      vars: 11,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Technician Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"dataKey\", \"id\", 3, \"value\", \"paginator\", \"loading\", \"scrollable\", \"rowHover\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"cfDelete\", \"position\", \"top-center\"], [\"key\", \"cfSave\", \"position\", \"top-right\"], [\"key\", \"cfGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"name\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"name\"], [\"type\", \"text\", \"field\", \"name\", \"display\", \"menu\"], [\"pSortableColumn\", \"email\"], [\"field\", \"email\"], [\"type\", \"text\", \"field\", \"email\", \"display\", \"menu\"], [\"pSortableColumn\", \"phone\"], [\"field\", \"phone\"], [\"type\", \"text\", \"field\", \"phone\", \"display\", \"menu\"], [\"pSortableColumn\", \"trades.tradeCode\"], [\"field\", \"trades.tradeCode\"], [\"type\", \"text\", \"field\", \"trades.tradeCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"status\"], [\"field\", \"status\"], [\"type\", \"text\", \"field\", \"status\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Status\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 2, \"font-size\", \"5rem\", 3, \"click\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [3, \"status\"]],\n      template: function CraftspersonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, CraftspersonComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4, 5);\n          i0.ɵɵlistener(\"onFilter\", function CraftspersonComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(6, CraftspersonComponent_ng_template_6_Template, 43, 0, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, CraftspersonComponent_ng_template_7_Template, 15, 7, \"ng-template\", 7);\n          i0.ɵɵtemplate(8, CraftspersonComponent_ng_template_8_Template, 3, 1, \"ng-template\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 9)(10, \"p-paginator\", 10);\n          i0.ɵɵlistener(\"onPageChange\", function CraftspersonComponent_Template_p_paginator_onPageChange_10_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(11, \"p-toast\", 11)(12, \"p-toast\", 12)(13, \"p-confirmDialog\", 13);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.cf_data)(\"paginator\", false)(\"loading\", ctx.loading)(\"scrollable\", true)(\"rowHover\", false);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i5.NgControlStatus, i5.NgModel, i3.PrimeTemplate, i6.Table, i6.SortableColumn, i6.SelectableRow, i6.SortIcon, i6.ColumnFilter, i7.ButtonDirective, i8.Dropdown, i9.Toast, i10.Panel, i11.ConfirmDialog, i12.LevelStatusComponent, i13.Paginator]\n    });\n  }\n  return CraftspersonComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}