{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/data.service\";\nexport let BookingService = /*#__PURE__*/(() => {\n  class BookingService {\n    constructor(bookingService) {\n      this.bookingService = bookingService;\n    }\n    saveBooking(data) {\n      return this.bookingService.add('reservation', 'save', data);\n    }\n    saveRecurrenceBookings(data) {\n      return this.bookingService.add('recurrenceReservation', 'save', data);\n    }\n    getCountOfOccurence(data) {\n      return this.bookingService.add('reservation', 'getListOfOccurances', data);\n    }\n    getAllBookingIds() {\n      return this.bookingService.getAll('reservation', 'getallIds');\n    }\n    SearchBookingsByFilter(data) {\n      return this.bookingService.search('reservation', 'searchbyfilter', data);\n    }\n    SearchBookingsByFilterPaginated(data) {\n      return this.bookingService.search('reservation', 'searchbyfilterPaginated', data);\n    }\n    getStatusReservations(status) {\n      return this.bookingService.getAllById('reservation', 'getbystatus', status);\n    }\n    getStatusReservationsPaginated(data) {\n      return this.bookingService.search('reservation', 'getbystatusPaginated', data);\n    }\n    getReqCheckBookings() {\n      return this.bookingService.getAll('reservation', 'getallreqcheckin');\n    }\n    getReqCheckBookingsPaginated(data) {\n      return this.bookingService.search('reservation', 'getallreqcheckinPaginated', data);\n    }\n    deleteAttendeById(id) {\n      return this.bookingService.deleteById('reservation', 'deletereserveattendee', id);\n    }\n    getReserveRsQtnInUse(data) {\n      return this.bookingService.search('reserveRs', 'getQuanitiyInUse', data);\n    }\n    updateRecurrenceBookings(data) {\n      return this.bookingService.add('recurrenceReservation', 'updateAll', data);\n    }\n    getAllBookings() {\n      return this.bookingService.getAll('reservation', 'getall');\n    }\n    getCountByMonth(data) {\n      return this.bookingService.search('reservation', 'countTotalByMonth', data);\n    }\n    getReservationRequestByMonth(data) {\n      return this.bookingService.search(\"reservation\", \"countTotalReservationByMonth\", data);\n    }\n    printPdf(data) {\n      return this.bookingService.downloadFile('booking', 'printPdf', data);\n    }\n    static #_ = this.ɵfac = function BookingService_Factory(t) {\n      return new (t || BookingService)(i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BookingService,\n      factory: BookingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return BookingService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}