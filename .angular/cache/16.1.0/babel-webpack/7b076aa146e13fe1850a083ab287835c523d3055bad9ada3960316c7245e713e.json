{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../booking/services/booking.services\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"src/app/services/enum.service\";\nimport * as i7 from \"primeng/table\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/dialog\";\nimport * as i10 from \"primeng/dropdown\";\nimport * as i11 from \"primeng/toast\";\nimport * as i12 from \"primeng/panel\";\nimport * as i13 from \"primeng/confirmdialog\";\nimport * as i14 from \"../../../directive/directive/trim-input.directive\";\nimport * as i15 from \"primeng/radiobutton\";\nimport * as i16 from \"@angular/material/tooltip\";\nimport * as i17 from \"primeng/paginator\";\nfunction ApproveBookingComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"h4\", 22);\n    i0.ɵɵtext(2, \"Select a Reservation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_5_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.ApproveReservation());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_5_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.RejectReservation());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r1.selectedScreens.length > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r1.selectedScreens.length > 0));\n  }\n}\nfunction ApproveBookingComponent_ng_template_6_ng_template_74_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 61);\n    i0.ɵɵlistener(\"onChange\", function ApproveBookingComponent_ng_template_6_ng_template_74_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const filter_r14 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r14($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r13)(\"options\", ctx_r12.enumStatusData)(\"showClear\", true);\n  }\n}\nfunction ApproveBookingComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 25);\n    i0.ɵɵtext(2, \"Approve\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\", 25);\n    i0.ɵɵtext(4, \"Reject\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 26)(6, \"div\", 27)(7, \"div\", 28)(8, \"p\", 29);\n    i0.ɵɵtext(9, \"Booking Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 30);\n    i0.ɵɵelement(11, \"p-sortIcon\", 31)(12, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"th\", 33)(14, \"div\", 27)(15, \"div\", 28)(16, \"p\", 29);\n    i0.ɵɵtext(17, \"Meeting Id \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 30);\n    i0.ɵɵelement(19, \"p-sortIcon\", 34)(20, \"p-columnFilter\", 35);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"th\", 36)(22, \"div\", 27)(23, \"div\", 28)(24, \"p\", 29);\n    i0.ɵɵtext(25, \"Building\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 30);\n    i0.ɵɵelement(27, \"p-sortIcon\", 37)(28, \"p-columnFilter\", 38);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(29, \"th\", 39)(30, \"div\", 27)(31, \"div\", 28)(32, \"p\", 29);\n    i0.ɵɵtext(33, \"Floor\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 30);\n    i0.ɵɵelement(35, \"p-sortIcon\", 40)(36, \"p-columnFilter\", 41);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(37, \"th\", 42)(38, \"div\", 27)(39, \"div\", 28)(40, \"p\", 29);\n    i0.ɵɵtext(41, \"Room\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(42, \"div\", 30);\n    i0.ɵɵelement(43, \"p-sortIcon\", 43)(44, \"p-columnFilter\", 44);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(45, \"th\", 45)(46, \"div\", 27)(47, \"div\", 28)(48, \"p\", 29);\n    i0.ɵɵtext(49, \"Date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(50, \"div\", 30);\n    i0.ɵɵelement(51, \"p-sortIcon\", 46);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(52, \"th\", 47)(53, \"div\", 27)(54, \"div\", 28)(55, \"p\", 29);\n    i0.ɵɵtext(56, \"From Time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(57, \"div\", 30);\n    i0.ɵɵelement(58, \"p-sortIcon\", 48);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(59, \"th\", 49)(60, \"div\", 27)(61, \"div\", 28)(62, \"p\", 29);\n    i0.ɵɵtext(63, \"To Time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(64, \"div\", 30);\n    i0.ɵɵelement(65, \"p-sortIcon\", 50);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(66, \"th\", 51)(67, \"div\", 27)(68, \"div\", 28)(69, \"p\", 29);\n    i0.ɵɵtext(70, \"Status\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(71, \"div\", 30);\n    i0.ɵɵelement(72, \"p-sortIcon\", 52);\n    i0.ɵɵelementStart(73, \"p-columnFilter\", 53);\n    i0.ɵɵtemplate(74, ApproveBookingComponent_ng_template_6_ng_template_74_Template, 1, 3, \"ng-template\", 54);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(75, \"th\", 55)(76, \"div\", 27)(77, \"div\", 28)(78, \"p\", 29);\n    i0.ɵɵtext(79, \" Meeting Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(80, \"div\", 30);\n    i0.ɵɵelement(81, \"p-sortIcon\", 56)(82, \"p-columnFilter\", 57);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(83, \"th\", 58)(84, \"div\", 27)(85, \"div\", 28)(86, \"p\", 29);\n    i0.ɵɵtext(87, \"Requested By\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(88, \"div\", 30);\n    i0.ɵɵelement(89, \"p-sortIcon\", 59)(90, \"p-columnFilter\", 60);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ApproveBookingComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 62)(1, \"td\", 25)(2, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_7_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const book_r17 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.appReserv(book_r17));\n    });\n    i0.ɵɵtext(3, \" Approve\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\", 25)(5, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_7_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const book_r17 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.rejReserv(book_r17));\n    });\n    i0.ɵɵtext(6, \" Reject\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"td\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"td\", 64);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"td\");\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const book_r17 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", book_r17);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(book_r17.bookingType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.reserveId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.blDataBlCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.flDataFlCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.rmDataRmCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(19, 13, book_r17.dateStart, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.convertToDisplayTime(book_r17.timeStart));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.convertToDisplayTime(book_r17.timeEnd));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", book_r17.meetingName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(book_r17.meetingName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r17.requestedByUserUserName);\n  }\n}\nfunction ApproveBookingComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nfunction ApproveBookingComponent_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 65)(1, \"div\", 66)(2, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_22_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.saveRejectionReason());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 68);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_22_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.cancelRejectionReason());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r5.rejectBook.valid);\n  }\n}\nfunction ApproveBookingComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 69);\n    i0.ɵɵtext(1, \"Confirmation\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ApproveBookingComponent_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 14)(1, \"div\", 70)(2, \"div\", 71)(3, \"label\", 72);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 71);\n    i0.ɵɵelement(6, \"p-radioButton\", 73);\n    i0.ɵɵelementStart(7, \"label\", 72);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 71);\n    i0.ɵɵelement(10, \"p-radioButton\", 74);\n    i0.ɵɵelementStart(11, \"label\", 72);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r7.editDialog);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Do you want \", ctx_r7.action, \" all occurrences of the recurring reservation or just this one ?\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.action, \" this occurence only.\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.action, \" this reservation and all future occurrences.\");\n  }\n}\nfunction ApproveBookingComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 75);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.closeUpdateRecurrence());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 76);\n    i0.ɵɵlistener(\"click\", function ApproveBookingComponent_ng_template_26_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.confirmUpdateResevation());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"width\": \"1800px\"\n  };\n};\nconst _c1 = function () {\n  return [25, 50, 100];\n};\nconst _c2 = function () {\n  return {\n    width: \"35vw\"\n  };\n};\nconst _c3 = function () {\n  return {\n    width: \"30vw\"\n  };\n};\nexport class ApproveBookingComponent {\n  constructor(bookingSrv, confirmationService, authSrv, messageService, formBuilder, datePipe, enumsrv) {\n    this.bookingSrv = bookingSrv;\n    this.confirmationService = confirmationService;\n    this.authSrv = authSrv;\n    this.messageService = messageService;\n    this.formBuilder = formBuilder;\n    this.datePipe = datePipe;\n    this.enumsrv = enumsrv;\n    this.reqReservationData = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.selectedScreens = [];\n    this.isApproved = false;\n    this.isRejected = false;\n    this.displayRejectScreen = false;\n    this.rejectReason = '';\n    this.rejectionData = [];\n    this.upDateAll = false;\n    this.reserveDataToUpdate = [];\n    this.displayUpdateScreen = false;\n    this.reservationInputDTOList = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumStatusData = [];\n    this.totalElements = 0;\n    this.paginationObj = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"reserveId\"],\n      sortOrder: \"ASC\"\n    };\n    this.filterCriteriaList = [];\n    this.isFiltered = false;\n    this.rejectBook = this.formBuilder.group({\n      rejectionReason: [null, [Validators.required]]\n    });\n    this.editDialog = this.formBuilder.group({\n      edit: ['updateOne']\n    });\n  }\n  ngOnInit() {\n    this.loggedInUser = this.authSrv.getLoggedInUserId();\n    this.loadEnums();\n  }\n  loadReservationData() {\n    let enumWaitForAprvl = this.getIdByStatus(\"Waiting for Approval\");\n    let data = {\n      filterDto: {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      },\n      status: enumWaitForAprvl\n    };\n    this.isFiltered = false;\n    this.bookingSrv.getStatusReservationsPaginated(data).subscribe(res => {\n      if (res) {\n        this.isFiltered = false;\n        this.reqReservationData = res.content ? res.content : [];\n        this.totalElements = res.totalElements ? res.totalElements : 0;\n      }\n    });\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      this.enumStatusData = this.enumClonedList.filter(t => t.tableName.toLowerCase() === 'reserve' && t.fieldName.toLowerCase() === 'status');\n      //  this.enumStatusData.unshift(new Enums(0, \"\", \"\", 'Make a selection'));\n      this.loadReservationData();\n    });\n  }\n  ApproveReservation() {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to approve the selected reservations?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.updateReservation(this.selectedScreens, \"Approved\");\n      },\n      key: \"approveBookingGrid\"\n    });\n  }\n  RejectReservation() {\n    this.rejectionData = this.selectedScreens;\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to reject the selected reservations?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.displayRejectScreen = true;\n      },\n      key: \"approveBookingGrid\"\n    });\n  }\n  appReserv(data) {\n    this.selectedReservation = data;\n    this.action = 'Approve';\n    if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n      this.displayUpdateScreen = true;\n    } else {\n      this.confirmDialog([this.selectedReservation], this.action);\n    }\n  }\n  rejReserv(data) {\n    this.selectedReservation = data;\n    this.action = 'Reject';\n    setTimeout(() => {\n      this.rejectBook.patchValue({\n        rejectionReason: null\n      });\n    }, 10);\n    this.displayRejectScreen = true;\n  }\n  saveRejectionReason() {\n    this.rejectReason = this.rejectBook.controls.rejectionReason.value;\n    this.displayRejectScreen = true;\n    if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n      this.displayUpdateScreen = true;\n    } else {\n      this.confirmDialog([this.selectedReservation], this.action);\n    }\n  }\n  cancelRejectionReason() {\n    this.rejectReason = '';\n    this.displayRejectScreen = false;\n  }\n  updateReservation(screen, statusText) {\n    statusText = statusText == 'Approve' ? 'Approved' : \"Rejected\";\n    let statusId = this.getIdByStatus(statusText);\n    this.isApproved = false;\n    this.isRejected = false;\n    this.reservationInputDTOList = [];\n    screen.forEach(each => {\n      var reserveDTO = {\n        reserveId: each.reserveId,\n        loggedBy: this.loggedInUser,\n        requestedBy: each.requestedBy,\n        requestedFor: this.loggedInUser,\n        status: statusId,\n        meetingName: each.meetingName,\n        comments: each.comments,\n        bookingType: each.bookingType,\n        recurringRule: each.recurringRule,\n        dateStart: this.datePipe.transform(each.dateStart, \"yyyy-MM-dd HH:mm:ss\"),\n        dateEnd: this.datePipe.transform(each.dateEnd, \"yyyy-MM-dd HH:mm:ss\"),\n        timeStart: this.convertToTime(each.timeStart),\n        timeEnd: this.convertToTime(each.timeEnd),\n        blId: each.blId,\n        flId: each.flId,\n        rmId: each.rmId,\n        configId: each.configId,\n        rejectionReason: statusText == \"Rejected\" ? this.rejectReason : null,\n        rejectedBy: statusText == \"Rejected\" ? this.loggedInUser : null,\n        dateRejected: statusText == \"Rejected\" ? this.datePipe.transform(new Date(), \"yyyy-MM-dd HH:mm:ss\") : null,\n        approvedBy: statusText == \"Approved\" ? this.loggedInUser : null,\n        dateApproved: statusText == \"Approved\" ? this.datePipe.transform(new Date(), \"yyyy-MM-dd HH:mm:ss\") : null,\n        parentId: each.parentId,\n        dateCreated: this.datePipe.transform(each.dateCreated, \"yyyy-MM-dd HH:mm:ss\"),\n        timeCreated: this.convertToTime(each.timeCreated),\n        isDateOrTimeChanged: false,\n        checkInNotifyCount: each.checkInNotifyCount\n      };\n      var reserveAttendeesDTO = each.reserveAttendees.slice(0);\n      ;\n      var reserveResourcesDTO = [];\n      var bookingData = {\n        reserveDTO: reserveDTO,\n        reserveAttendeesDTO: reserveAttendeesDTO,\n        reserveResourcesDTO: reserveResourcesDTO\n      };\n      this.reservationInputDTOList.push(bookingData);\n    });\n    this.bookingSrv.updateRecurrenceBookings(this.reservationInputDTOList).subscribe(res => {\n      this.loadReservationData();\n      setTimeout(() => {\n        this.messageService.clear();\n        this.messageService.add({\n          key: 'approveBookingMsg',\n          severity: 'success',\n          summary: 'Record updated',\n          detail: 'The reservation is ' + statusText\n        });\n      }, 1000);\n    });\n  }\n  formatDate(date) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n  convertToTime(value) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      currDate.setSeconds(0);\n      currDate.setMilliseconds(0);\n      return this.datePipe.transform(currDate, \"HH:mm:ss\");\n    } else {\n      return this.datePipe.transform(new Date(), \"HH:mm:ss\");\n    }\n  }\n  convertTimeCreated(value) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      currDate.setSeconds(data[2]);\n      currDate.setMilliseconds(0);\n      return currDate;\n    } else {\n      return null;\n    }\n  }\n  convertToDisplayTime(value) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n  getDataToUpdate(reservation) {\n    this.upDateAll = this.editDialog.controls.edit.value === 'updateAll';\n    if (this.upDateAll) {\n      this.reserveDataToUpdate = this.reqReservationData.filter(res => res.reserveId >= reservation.reserveId && res.parentId === reservation.parentId);\n    } else {\n      this.reserveDataToUpdate = this.reqReservationData.filter(res => res.reserveId === reservation.reserveId);\n    }\n    return this.reserveDataToUpdate;\n  }\n  confirmUpdateResevation() {\n    this.displayUpdateScreen = false;\n    var appData = [];\n    if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n      appData = this.getDataToUpdate(this.selectedReservation);\n    } else {\n      appData.push(this.selectedReservation);\n    }\n    this.confirmDialog(appData, this.action);\n  }\n  confirmDialog(data, action) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to ' + action + ' this reservation?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.displayRejectScreen = false;\n        this.updateReservation(data, action);\n      },\n      reject: () => {\n        if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n          this.displayUpdateScreen = true;\n        }\n      },\n      key: \"approveBookingGrid\"\n    });\n  }\n  closeUpdateRecurrence() {\n    this.displayUpdateScreen = false;\n  }\n  getEnumByid(id) {\n    return this.enumStatusData.find(t => t.enumKey === id)?.enumValue;\n  }\n  getIdByStatus(status) {\n    return this.enumStatusData.find(t => t.enumValue === status)?.enumKey;\n  }\n  onPageChange(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadReservationData();\n  }\n  onInnerFilter(event) {\n    if (this.isFiltered) {\n      Object.keys(event.filters).forEach(field => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined) {\n          let filterCriteria = {};\n          if (field == \"blDataBlCode\") {\n            filterCriteria = {\n              fieldName: \"blData.blCode\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          } else if (field == \"flDataFlCode\") {\n            filterCriteria = {\n              fieldName: \"flData.flCode\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          } else if (field == \"rmDataRmCode\") {\n            filterCriteria = {\n              fieldName: \"rmData.rmCode\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          } else if (field == \"requestedByUserUserName\") {\n            filterCriteria = {\n              fieldName: \"requestedByUser.userName\",\n              value: filterValue,\n              matchMode: matchMode\n            };\n          } else {\n            filterCriteria = {\n              fieldName: field,\n              value: filterValue,\n              matchMode: matchMode\n            };\n          }\n          this.updateFilterCriteriaList(filterCriteria);\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadReservationData();\n    }\n    this.isFiltered = true;\n  }\n  updateFilterCriteriaList(filterCriteria) {\n    let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaList.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaList[index] = filterCriteria;\n      } else {\n        this.filterCriteriaList.push(filterCriteria);\n      }\n    }\n  }\n  static #_ = this.ɵfac = function ApproveBookingComponent_Factory(t) {\n    return new (t || ApproveBookingComponent)(i0.ɵɵdirectiveInject(i1.BookingService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i5.DatePipe), i0.ɵɵdirectiveInject(i6.EnumService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ApproveBookingComponent,\n    selectors: [[\"app-approve-booking\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 27,\n    vars: 29,\n    consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Manage Bookings Approval\"], [1, \"card\"], [\"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"scrollHeight\", \"450px\", 3, \"value\", \"paginator\", \"selection\", \"tableStyle\", \"scrollable\", \"selectionChange\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"approveBookingMsg\", \"position\", \"top-right\"], [\"header\", \"Confirmation\", \"key\", \"approveBookingGrid\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Rejection\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [3, \"formGroup\"], [2, \"margin-top\", \"10px\", \"width\", \"80%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"rejectionReason\", \"formControlName\", \"rejectionReason\", \"colspa\", \"\", \"maxlength\", \"256\", \"appTrimInput\", \"\", 1, \"form-control\"], [3, \"visible\", \"closable\", \"draggable\", \"resizable\", \"modal\", \"visibleChange\"], [\"pTemplate\", \"footer\"], [1, \"d-flex\", \"flex-row\", \"justify-content-between\"], [2, \"font-size\", \"13px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Approve\", 1, \"p-button-primary\", \"p-button\", 2, \"margin-right\", \"1rem\", 3, \"hidden\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Reject\", 1, \"p-button-primary\", \"p-button\", 2, \"margin-right\", \"1rem\", 3, \"hidden\", \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"bookingType\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"bookingType\"], [\"type\", \"text\", \"field\", \"bookingType\", \"display\", \"menu\"], [\"pSortableColumn\", \"reserveId\"], [\"field\", \"reserveId\"], [\"type\", \"numeric\", \"field\", \"reserveId\", \"display\", \"menu\"], [\"pSortableColumn\", \"blDataBlCode\"], [\"field\", \"blDataBlCode\"], [\"type\", \"text\", \"field\", \"blDataBlCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"flDataFlCode\"], [\"field\", \"flDataFlCode\"], [\"type\", \"text\", \"field\", \"flDataFlCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmDataRmCode\"], [\"field\", \"rmDataRmCode\"], [\"type\", \"text\", \"field\", \"rmDataRmCode\", \"display\", \"menu\"], [\"pSortableColumn\", \"dateStart\"], [\"field\", \"dateStart\"], [\"pSortableColumn\", \"timeStart\"], [\"field\", \"timeStart\"], [\"pSortableColumn\", \"timeEnd\"], [\"field\", \"timeEnd\"], [\"pSortableColumn\", \"status\"], [\"field\", \"status\"], [\"field\", \"status\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"pSortableColumn\", \"meetingName\"], [\"field\", \"meetingName\"], [\"type\", \"text\", \"field\", \"meetingName\", \"display\", \"menu\"], [\"pSortableColumn\", \"requestedByUserUserName\"], [\"field\", \"requestedByUserUserName\"], [\"type\", \"text\", \"field\", \"requestedByUserUserName\", \"display\", \"menu\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Type\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [3, \"pSelectableRow\"], [\"type\", \"button\", \"pButton\", \"\", 1, \"p-button-primary\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"], [1, \"d-flex\", \"flex-row\"], [2, \"display\", \"flex\", \"padding-left\", \"6px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-primary\", \"p-button-sm\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"8px\", 3, \"click\"], [2, \"margin-top\", \"20px !important\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [1, \"input-label-custom\", 2, \"margin-top\", \"10px\"], [1, \"form-field-lable\", 2, \"margin-left\", \"5px\"], [\"name\", \"edit\", \"value\", \"updateOne\", \"formControlName\", \"edit\"], [\"name\", \"edit\", \"value\", \"updateAll\", \"formControlName\", \"edit\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"label\", \"Close\", \"styleClass\", \"p-button-text\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-check\", \"label\", \"Ok\", 3, \"click\"]],\n    template: function ApproveBookingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"div\", 2)(3, \"p-table\", 3, 4);\n        i0.ɵɵlistener(\"selectionChange\", function ApproveBookingComponent_Template_p_table_selectionChange_3_listener($event) {\n          return ctx.selectedScreens = $event;\n        })(\"onFilter\", function ApproveBookingComponent_Template_p_table_onFilter_3_listener($event) {\n          return ctx.onInnerFilter($event);\n        });\n        i0.ɵɵtemplate(5, ApproveBookingComponent_ng_template_5_Template, 6, 2, \"ng-template\", 5);\n        i0.ɵɵtemplate(6, ApproveBookingComponent_ng_template_6_Template, 91, 0, \"ng-template\", 6);\n        i0.ɵɵtemplate(7, ApproveBookingComponent_ng_template_7_Template, 30, 16, \"ng-template\", 7);\n        i0.ɵɵtemplate(8, ApproveBookingComponent_ng_template_8_Template, 3, 1, \"ng-template\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 9)(10, \"p-paginator\", 10);\n        i0.ɵɵlistener(\"onPageChange\", function ApproveBookingComponent_Template_p_paginator_onPageChange_10_listener($event) {\n          return ctx.onPageChange($event);\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(11, \"p-toast\", 11)(12, \"p-confirmDialog\", 12);\n        i0.ɵɵelementStart(13, \"p-dialog\", 13);\n        i0.ɵɵlistener(\"visibleChange\", function ApproveBookingComponent_Template_p_dialog_visibleChange_13_listener($event) {\n          return ctx.displayRejectScreen = $event;\n        });\n        i0.ɵɵelementStart(14, \"form\", 14)(15, \"table\", 15)(16, \"tr\")(17, \"td\")(18, \"div\", 16)(19, \"label\", 17);\n        i0.ɵɵtext(20, \"Rejection Reason\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 18);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(22, ApproveBookingComponent_ng_template_22_Template, 4, 1, \"ng-template\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p-dialog\", 19);\n        i0.ɵɵlistener(\"visibleChange\", function ApproveBookingComponent_Template_p_dialog_visibleChange_23_listener($event) {\n          return ctx.displayUpdateScreen = $event;\n        });\n        i0.ɵɵtemplate(24, ApproveBookingComponent_ng_template_24_Template, 2, 0, \"ng-template\", 6);\n        i0.ɵɵtemplate(25, ApproveBookingComponent_ng_template_25_Template, 13, 4, \"ng-template\", 7);\n        i0.ɵɵtemplate(26, ApproveBookingComponent_ng_template_26_Template, 2, 0, \"ng-template\", 20);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", ctx.reqReservationData)(\"paginator\", false)(\"selection\", ctx.selectedScreens)(\"tableStyle\", i0.ɵɵpureFunction0(25, _c0))(\"scrollable\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(26, _c1));\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c2));\n        i0.ɵɵproperty(\"visible\", ctx.displayRejectScreen)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.rejectBook);\n        i0.ɵɵadvance(9);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(28, _c3));\n        i0.ɵɵproperty(\"visible\", ctx.displayUpdateScreen)(\"closable\", false)(\"draggable\", false)(\"resizable\", false)(\"modal\", true);\n      }\n    },\n    dependencies: [i2.PrimeTemplate, i7.Table, i7.SortableColumn, i7.SelectableRow, i7.SortIcon, i7.ColumnFilter, i8.ButtonDirective, i9.Dialog, i10.Dropdown, i11.Toast, i12.Panel, i13.ConfirmDialog, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MaxLengthValidator, i4.NgModel, i4.FormGroupDirective, i4.FormControlName, i14.TrimInputDirective, i15.RadioButton, i16.MatTooltip, i17.Paginator, i5.DatePipe],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  background-color: #879cc9;\\n  color: black;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n  height: 10px !important;\\n}\\n\\n[_nghost-%COMP%]     .p-confirm-dialog .p-dialog-header .p-dialog-content {\\n  align-items: center;\\n  background-color: #f9fcfc;\\n  display: flex;\\n  padding: 10px;\\n}\\n\\n[_nghost-%COMP%]     .p-confirm-dialog .p-dialog-header {\\n  align-items: center;\\n  background-color: #f9fcfc;\\n}\\n\\n.ellipsis[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-table {\\n  table-layout: fixed;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvYXBwcm92ZS1ib29raW5nL21vZGFsL2FwcHJvdmUtYm9va2luZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxtQkFBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7QUFFSjs7QUFBQTtFQUNJLG1CQUFBO0VBQ0EseUJBQUE7QUFHSjs7QUFBQTtFQUNJLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQUdKOztBQUFFO0VBQ0UsbUJBQUE7QUFHSiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzg3OWNjOTtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgIGhlaWdodDogMTBweCAhaW1wb3J0YW50O1xufVxuOmhvc3QgOjpuZy1kZWVwIC5wLWNvbmZpcm0tZGlhbG9nIC5wLWRpYWxvZy1oZWFkZXIgLnAtZGlhbG9nLWNvbnRlbnQge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZmNmYztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG46aG9zdCA6Om5nLWRlZXAgLnAtY29uZmlybS1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciAge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZmNmYztcbiAgICBcbn1cbi5lbGxpcHNpc3tcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyBcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyBcbiAgfVxuXG4gIDpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtdGFibGV7XG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","MessageService","UtilConstant","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ApproveBookingComponent_ng_template_5_Template_button_click_4_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","ApproveReservation","ApproveBookingComponent_ng_template_5_Template_button_click_5_listener","ctx_r11","RejectReservation","ɵɵadvance","ɵɵproperty","ctx_r1","selectedScreens","length","ApproveBookingComponent_ng_template_6_ng_template_74_Template_p_dropdown_onChange_0_listener","$event","restoredCtx","_r16","filter_r14","filterCallback","value","value_r13","ctx_r12","enumStatusData","ɵɵelement","ɵɵtemplate","ApproveBookingComponent_ng_template_6_ng_template_74_Template","ApproveBookingComponent_ng_template_7_Template_button_click_2_listener","_r19","book_r17","$implicit","ctx_r18","appReserv","ApproveBookingComponent_ng_template_7_Template_button_click_5_listener","ctx_r20","rejReserv","ɵɵtextInterpolate","bookingType","reserveId","blDataBlCode","flDataFlCode","rmDataRmCode","ɵɵpipeBind2","dateStart","ctx_r3","convertToDisplayTime","timeStart","timeEnd","status","ɵɵpropertyInterpolate","meetingName","requestedByUserUserName","ɵɵattribute","ApproveBookingComponent_ng_template_22_Template_button_click_2_listener","_r23","ctx_r22","saveRejectionReason","ApproveBookingComponent_ng_template_22_Template_button_click_3_listener","ctx_r24","cancelRejectionReason","ctx_r5","rejectBook","valid","ctx_r7","editDialog","ɵɵtextInterpolate1","action","ApproveBookingComponent_ng_template_26_Template_button_click_0_listener","_r26","ctx_r25","closeUpdateRecurrence","ApproveBookingComponent_ng_template_26_Template_button_click_1_listener","ctx_r27","confirmUpdateResevation","ApproveBookingComponent","constructor","bookingSrv","confirmationService","authSrv","messageService","formBuilder","datePipe","enumsrv","reqReservationData","rowCount","ROW_COUNT","isApproved","isRejected","displayRejectScreen","rejectReason","rejectionData","upDateAll","reserveDataToUpdate","displayUpdateScreen","reservationInputDTOList","enumList","enumClonedList","totalElements","paginationObj","pageNo","pageSize","sortBy","sortOrder","filterCriteriaList","isFiltered","group","rejectionReason","required","edit","ngOnInit","loggedInUser","getLoggedInUserId","loadEnums","loadReservationData","enumWaitForAprvl","getIdByStatus","data","filterDto","paginationDTO","filterCriteria","getStatusReservationsPaginated","subscribe","res","content","getEnums","map","x","Object","assign","filter","t","tableName","toLowerCase","fieldName","confirm","message","header","icon","accept","updateReservation","key","selectedReservation","toLocaleUpperCase","confirmDialog","setTimeout","patchValue","controls","screen","statusText","statusId","forEach","each","reserveDTO","loggedBy","requestedBy","requestedFor","comments","recurringRule","transform","dateEnd","convertToTime","blId","flId","rmId","configId","rejectedBy","dateRejected","Date","approvedBy","dateApproved","parentId","dateCreated","timeCreated","isDateOrTimeChanged","checkInNotifyCount","reserveAttendeesDTO","reserveAttendees","slice","reserveResourcesDTO","bookingData","push","updateRecurrenceBookings","clear","add","severity","summary","detail","formatDate","date","currDate","split","time","setHours","setMinutes","setSeconds","setMilliseconds","convertTimeCreated","getDataToUpdate","reservation","appData","reject","getEnumByid","id","find","enumKey","enumValue","onPageChange","event","first","rows","onInnerFilter","keys","filters","field","filterValue","matchMode","undefined","updateFilterCriteriaList","index","findIndex","item","splice","_","ɵɵdirectiveInject","i1","BookingService","i2","ConfirmationService","i3","AuthService","i4","UntypedFormBuilder","i5","DatePipe","i6","EnumService","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","ApproveBookingComponent_Template","rf","ctx","ApproveBookingComponent_Template_p_table_selectionChange_3_listener","ApproveBookingComponent_Template_p_table_onFilter_3_listener","ApproveBookingComponent_ng_template_5_Template","ApproveBookingComponent_ng_template_6_Template","ApproveBookingComponent_ng_template_7_Template","ApproveBookingComponent_ng_template_8_Template","ApproveBookingComponent_Template_p_paginator_onPageChange_10_listener","ApproveBookingComponent_Template_p_dialog_visibleChange_13_listener","ApproveBookingComponent_ng_template_22_Template","ApproveBookingComponent_Template_p_dialog_visibleChange_23_listener","ApproveBookingComponent_ng_template_24_Template","ApproveBookingComponent_ng_template_25_Template","ApproveBookingComponent_ng_template_26_Template","ɵɵpureFunction0","_c0","_c1","ɵɵstyleMap","_c2","_c3"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/approve-booking/modal/approve-booking.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/approve-booking/modal/approve-booking.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Enums } from 'src/app/model/enums.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { ReserveAttendeesDTO } from '../../booking/model/reserveAttendeesDTO';\nimport { ReserveDTO } from '../../booking/model/reserveDTO';\nimport { ReserveResourcesDTO } from '../../booking/model/reserveResourcesDTO';\nimport { BookingService } from '../../booking/services/booking.services';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport { PaginationObj } from 'src/app/model/pagination-model';\n\n@Component({\n  selector: 'app-approve-booking',\n  templateUrl: './approve-booking.component.html',\n  styleUrls: ['./approve-booking.component.scss'],\n  providers: [MessageService]\n})\nexport class ApproveBookingComponent implements OnInit {\n  reqReservationData: any[] = [];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  selectedScreens: any[] = [];\n  loggedInUser!: number;\n  isApproved: boolean = false;\n  isRejected: boolean = false;\n  rejectBook!: UntypedFormGroup;\n  editDialog: UntypedFormGroup;\n  displayRejectScreen: boolean = false;\n  rejectReason: string = '';\n  rejectionData: any[] = [];\n  upDateAll: boolean = false;\n  reserveDataToUpdate: any[] = [];\n  displayUpdateScreen: boolean = false;\n  selectedReservation!:any;\n  action!:string;\n  reservationInputDTOList: any[] = [];\n  enumList: EnumList[] = [];\n  enumClonedList: EnumList[] = [];\n  enumStatusData: EnumList[] = [];\n  totalElements:number = 0;\n  paginationObj:PaginationObj = {\n    pageNo:0,\n    pageSize:this.rowCount,\n    sortBy:[\"reserveId\"],\n    sortOrder:\"ASC\"\n  }\n  filterCriteriaList :any[]=[];\n  isFiltered:boolean = false;\n  constructor(\n    private bookingSrv: BookingService,\n    private confirmationService: ConfirmationService,\n    private authSrv: AuthService,\n    private messageService: MessageService,\n    private formBuilder: UntypedFormBuilder,\n    private datePipe: DatePipe,\n    private enumsrv: EnumService,\n  ) {\n    this.rejectBook = this.formBuilder.group({\n      rejectionReason: [null, [Validators.required]],\n    })\n    this.editDialog = this.formBuilder.group({\n      edit: ['updateOne'],\n    })\n  }\n\n  ngOnInit(): void {\n    this.loggedInUser = this.authSrv.getLoggedInUserId();\n    this.loadEnums();\n  }\n\n  loadReservationData() {\n    let enumWaitForAprvl = this.getIdByStatus(\"Waiting for Approval\")\n    let data ={\n      filterDto:{paginationDTO:this.paginationObj,filterCriteria:this.filterCriteriaList},\n      status:enumWaitForAprvl\n    }\n    this.isFiltered= false;\n    this.bookingSrv.getStatusReservationsPaginated(data).subscribe((res: any) => {\n      if(res){\n        this.isFiltered= false;\n        this.reqReservationData = res.content ? res.content : [];\n        this.totalElements = res.totalElements ? res.totalElements : 0;\n      }\n    })\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: EnumList[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumStatusData = this.enumClonedList.filter(t =>\n          t.tableName.toLowerCase() === 'reserve' && t.fieldName.toLowerCase() === 'status'\n        );\n       //  this.enumStatusData.unshift(new Enums(0, \"\", \"\", 'Make a selection'));\n         this.loadReservationData();\n      })\n  }\n\n\n  ApproveReservation() {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to approve the selected reservations?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.updateReservation(this.selectedScreens, \"Approved\");\n      },\n      key: \"approveBookingGrid\"\n    });\n  }\n\n  RejectReservation() {\n    this.rejectionData = this.selectedScreens;\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to reject the selected reservations?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.displayRejectScreen = true;\n      },\n      key: \"approveBookingGrid\"\n    });\n  }\n\n  appReserv(data: any) {\n    this.selectedReservation = data;\n    this.action = 'Approve'\n    if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n      this.displayUpdateScreen = true;\n    } else {\n      this.confirmDialog([this.selectedReservation],this.action);\n    }\n  }\n\n  rejReserv(data: any) {\n    this.selectedReservation = data;\n    this.action = 'Reject';\n    setTimeout(() => {\n      this.rejectBook.patchValue({\n        rejectionReason: null,\n      });}, 10);\n    this.displayRejectScreen = true;\n  }\n\n  saveRejectionReason() {\n    this.rejectReason = this.rejectBook.controls.rejectionReason.value;\n    this.displayRejectScreen = true;\n    if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n      this.displayUpdateScreen = true;\n    } else {\n      this.confirmDialog([this.selectedReservation],this.action);\n    }\n  }\n  cancelRejectionReason() {\n    this.rejectReason = '';\n    this.displayRejectScreen = false;\n  }\n\n  updateReservation(screen: any[], statusText: string) {\n    statusText = statusText == 'Approve'? 'Approved' : \"Rejected\";\n    let statusId = this.getIdByStatus(statusText);\n    this.isApproved = false;\n    this.isRejected = false;\n    this.reservationInputDTOList = [];\n    screen.forEach(each => {\n      var reserveDTO: ReserveDTO = {\n        reserveId: each.reserveId,\n        loggedBy: this.loggedInUser,\n        requestedBy: each.requestedBy,\n        requestedFor: this.loggedInUser,\n        status: statusId,\n        meetingName: each.meetingName,\n        comments: each.comments,\n        bookingType: each.bookingType,\n        recurringRule: each.recurringRule,\n        dateStart: this.datePipe.transform(each.dateStart, \"yyyy-MM-dd HH:mm:ss\"),\n        dateEnd: this.datePipe.transform(each.dateEnd, \"yyyy-MM-dd HH:mm:ss\"),\n        timeStart: this.convertToTime(each.timeStart),\n        timeEnd: this.convertToTime(each.timeEnd),\n        blId: each.blId,\n        flId: each.flId,\n        rmId: each.rmId,\n        configId: each.configId,\n        rejectionReason: statusText == \"Rejected\" ? this.rejectReason : null,\n        rejectedBy: statusText == \"Rejected\" ? this.loggedInUser : null,\n        dateRejected: statusText == \"Rejected\" ? this.datePipe.transform(new Date(), \"yyyy-MM-dd HH:mm:ss\") : null,\n        approvedBy: statusText == \"Approved\" ? this.loggedInUser : null,\n        dateApproved: statusText == \"Approved\" ? this.datePipe.transform(new Date(), \"yyyy-MM-dd HH:mm:ss\") : null,\n        parentId: each.parentId,\n        dateCreated: this.datePipe.transform(each.dateCreated, \"yyyy-MM-dd HH:mm:ss\"),\n        timeCreated: this.convertToTime(each.timeCreated),\n        isDateOrTimeChanged: false,\n        checkInNotifyCount: each.checkInNotifyCount\n      }\n\n      var reserveAttendeesDTO: ReserveAttendeesDTO[] = each.reserveAttendees.slice(0);;\n\n      var reserveResourcesDTO: ReserveResourcesDTO[] = [];\n      var bookingData = {\n        reserveDTO: reserveDTO,\n        reserveAttendeesDTO: reserveAttendeesDTO,\n        reserveResourcesDTO: reserveResourcesDTO\n      }\n      this.reservationInputDTOList.push(bookingData);\n     })\n     this.bookingSrv.updateRecurrenceBookings(this.reservationInputDTOList).subscribe((res) => {\n        this.loadReservationData();\n        setTimeout(() => {\n          this.messageService.clear();\n          this.messageService.add({ key: 'approveBookingMsg', severity: 'success', summary: 'Record updated', detail: 'The reservation is ' + statusText });  \n        }, 1000)\n    });\n  }\n\n\n  formatDate(date: Date | null) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n  convertToTime(value: any) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      currDate.setSeconds(0);\n      currDate.setMilliseconds(0);\n      return this.datePipe.transform(currDate, \"HH:mm:ss\");\n    } else {\n      return this.datePipe.transform(new Date(), \"HH:mm:ss\");\n    }\n  }\n\n  convertTimeCreated(value: any) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      currDate.setSeconds(data[2]);\n      currDate.setMilliseconds(0);\n      return currDate;\n    } else {\n      return null;\n    }\n  }\n\n  convertToDisplayTime(value: any) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n\n  getDataToUpdate(reservation: any) {\n    this.upDateAll = this.editDialog.controls.edit.value === 'updateAll';\n    if (this.upDateAll) {\n      this.reserveDataToUpdate = this.reqReservationData.filter((res: any) => res.reserveId >= reservation.reserveId && res.parentId === reservation.parentId);\n    } else {\n      this.reserveDataToUpdate = this.reqReservationData.filter((res: any) => res.reserveId === reservation.reserveId);\n    }\n\n    return this.reserveDataToUpdate;\n  }\n\n  confirmUpdateResevation(){\n     this.displayUpdateScreen = false;\n     var appData: any[] = [];\n     if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n       appData = this.getDataToUpdate(this.selectedReservation);\n     } else {\n       appData.push(this.selectedReservation);\n     }\n     this.confirmDialog(appData,this.action)\n  }\n\n  confirmDialog(data:any, action:any){\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to '+ action + ' this reservation?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.displayRejectScreen = false;\n        this.updateReservation(data, action);\n      },\n      reject:() => {\n        if (this.selectedReservation.bookingType.toLocaleUpperCase() === \"Recurring\".toLocaleUpperCase()) {\n          this.displayUpdateScreen = true;\n        }\n      },\n      key: \"approveBookingGrid\"\n    });\n  }\n\n  closeUpdateRecurrence(){\n    this.displayUpdateScreen = false\n  }\n  getEnumByid(id: any) {\n    return this.enumStatusData.find((t: any) => t.enumKey === id)?.enumValue\n  }\n\n  getIdByStatus(status: any) {\n    return this.enumStatusData.find((t: any) => t.enumValue === status)?.enumKey\n  }\n\n  onPageChange(event:any){\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadReservationData();\n  }\n\n  onInnerFilter(event: any) {\n    if(this.isFiltered){\n      Object.keys(event.filters).forEach((field) => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined ) {\n          let filterCriteria ={};\n          if(field==\"blDataBlCode\"){\n            filterCriteria = { fieldName: \"blData.blCode\", value: filterValue, matchMode: matchMode };\n          }else if(field==\"flDataFlCode\"){\n            filterCriteria = { fieldName: \"flData.flCode\", value: filterValue, matchMode: matchMode };\n          }else if(field==\"rmDataRmCode\"){\n            filterCriteria = { fieldName: \"rmData.rmCode\", value: filterValue, matchMode: matchMode };\n          }else if(field==\"requestedByUserUserName\"){\n            filterCriteria = { fieldName: \"requestedByUser.userName\", value: filterValue, matchMode: matchMode };\n          }else{\n            filterCriteria = { fieldName: field, value: filterValue, matchMode: matchMode };\n          }\n          this.updateFilterCriteriaList(filterCriteria);\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadReservationData();\n    }\n    this.isFiltered = true;\n  }\n\n  updateFilterCriteriaList(filterCriteria:any){\n    let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if(filterCriteria['value']==null){\n      if(index !==-1){\n        this.filterCriteriaList.splice(index, 1);\n      }\n    }else {\n      if (index !== -1) {\n        this.filterCriteriaList[index] = filterCriteria;\n      } else {\n        this.filterCriteriaList.push(filterCriteria);\n      }\n    }\n  }\n\n}\n","<div class=\"card\" style=\"height:92vh;\">\n    <p-panel header=\"Manage Bookings Approval\">\n        <div class=\"card\">\n            <p-table #dt1 [value]=\"reqReservationData\" [paginator]=\"false\" [(selection)]=\"selectedScreens\"\n                (onFilter)=\"onInnerFilter($event)\" styleClass=\"p-datatable-customers p-datatable-gridlines\"\n                [tableStyle]=\"{'width': '1800px'}\" [scrollable]=\"true\" scrollHeight=\"450px\">\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"d-flex flex-row justify-content-between\">\n                        <h4 style=\"font-size: 13px\">Select a Reservation</h4>\n                        <div>\n                            <button pButton pRipple label=\"Approve\" class=\"p-button-primary p-button\"\n                                style=\"margin-right: 1rem\" [hidden]=\"!(selectedScreens.length >0)\"\n                                (click)=\"ApproveReservation()\"></button>\n                            <button pButton pRipple label=\"Reject\" class=\"p-button-primary p-button\"\n                                style=\"margin-right: 1rem\" [hidden]=\"!(selectedScreens.length >0)\"\n                                (click)=\"RejectReservation()\"></button>\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <!-- <th style=\"width:4rem\">\n                            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n                        </th> -->\n                        <th style=\"width:8rem\">Approve</th>\n                        <th style=\"width:8rem\">Reject</th>\n                        <th pSortableColumn=\"bookingType\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">Booking Type</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"bookingType\"></p-sortIcon>\n                                    <p-columnFilter type=\"text\" field=\"bookingType\" display=\"menu\"></p-columnFilter>\n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"reserveId\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">Meeting Id </p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"reserveId\"></p-sortIcon>\n                                    <p-columnFilter type=\"numeric\" field=\"reserveId\" display=\"menu\"></p-columnFilter>\n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"blDataBlCode\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">Building</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"blDataBlCode\"></p-sortIcon>\n                                    <p-columnFilter type=\"text\" field=\"blDataBlCode\" display=\"menu\"></p-columnFilter>\n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"flDataFlCode\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">Floor</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"flDataFlCode\"></p-sortIcon>\n                                    <p-columnFilter type=\"text\" field=\"flDataFlCode\" display=\"menu\"></p-columnFilter>\n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"rmDataRmCode\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">Room</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"rmDataRmCode\"></p-sortIcon>\n                                    <p-columnFilter type=\"text\" field=\"rmDataRmCode\" display=\"menu\"></p-columnFilter>\n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"dateStart\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">Date</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"dateStart\"></p-sortIcon>\n                                    \n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"timeStart\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">From Time</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"timeStart\"></p-sortIcon>\n                                    \n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"timeEnd\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">To Time</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"timeEnd\"></p-sortIcon>\n                                   \n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"status\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">Status</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"status\"></p-sortIcon>\n                                    <p-columnFilter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                                        <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                                            <p-dropdown [ngModel]=\"value\" [options]=\"enumStatusData\" optionLabel=\"enumValue\"\n                                                optionValue=\"enumKey\" (onChange)=\"filter($event.value)\"\n                                                placeholder=\"Select a Type\" [showClear]=\"true\"></p-dropdown>\n                                        </ng-template>\n                                    </p-columnFilter>\n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"meetingName\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\"> Meeting Name</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"meetingName\"></p-sortIcon>\n                                    <p-columnFilter type=\"text\" field=\"meetingName\" display=\"menu\"></p-columnFilter>\n                                </div>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"requestedByUserUserName\">\n                            <div class=\"grid-header-column\">\n                                <div class=\"grid-header-label\">\n                                    <p class=\"grid-label-paragraph\">Requested By</p>\n                                </div>\n                                <div class=\"grid-sort-icon\">\n                                    <p-sortIcon field=\"requestedByUserUserName\"></p-sortIcon>\n                                    <p-columnFilter type=\"text\" field=\"requestedByUserUserName\" display=\"menu\"></p-columnFilter>\n                                </div>\n                            </div>\n                        </th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-book>\n                    <tr [pSelectableRow]=\"book\">\n                        <!-- <td style=\"width:4rem\">\n                            <p-tableCheckbox [value]=\"book\"></p-tableCheckbox>\n                        </td> -->\n                        <td style=\"width:8rem\">\n                            <button type=\"button\" pButton class=\"p-button-primary\" (click)=\"appReserv(book)\">\n                                Approve</button>\n                        </td>\n                        <td style=\"width:8rem\">\n                            <button type=\"button\" pButton class=\"p-button-primary\" (click)=\"rejReserv(book)\">\n                                Reject</button>\n                        </td>\n                        <td>{{book.bookingType}}</td>\n                        <td>{{book.reserveId}}</td>\n                        <td>{{book.blDataBlCode}}</td>\n                        <td>{{book.flDataFlCode}}</td>\n                        <td>{{book.rmDataRmCode}}</td>\n                        <td>{{book.dateStart | date :\"dd MMM yyyy\"}}</td>\n                        <td>{{convertToDisplayTime(book.timeStart) }}</td>\n                        <td>{{convertToDisplayTime(book.timeEnd) }}</td>\n                        <td>{{book.status }}</td>\n                        <td matTooltip=\"{{book.meetingName}}\" matTooltipPosition=\"below\" class=\"ellipsis\">{{book.meetingName}}</td>\n                        <td>{{book.requestedByUserUserName}}</td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\" let-columns>\n                    <tr>\n                        <td [attr.colspan]=\"9\">\n                            No records found\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n            <div class=\"paginator\">\n                <p-paginator  [rows]=\"rowCount\" [totalRecords]=\"totalElements\" (onPageChange)=\"onPageChange($event)\" [first]=\"paginationObj.pageNo * paginationObj.pageSize\"\n                  currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\"\n                  [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n            </div>\n        </div>\n    </p-panel>\n</div>\n<p-toast key=\"approveBookingMsg\" position=\"top-right\"></p-toast>\n<p-confirmDialog header=\"Confirmation\" key=\"approveBookingGrid\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n<p-dialog header=\"Rejection\" [(visible)]=\"displayRejectScreen\" [modal]=\"true\" [style]=\"{width: '35vw'}\"\n    [maximizable]=\"true\" [draggable]=\"false\" [resizable]=\"false\">\n    <form [formGroup]=\"rejectBook\">\n        <table style=\"margin-top: 10px; width: 80%;\">\n            <tr>\n                <td>\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Rejection Reason</label>\n                        <input type=\"text\" class=\"form-control\" name=\"rejectionReason\" formControlName=\"rejectionReason\"\n                            colspa maxlength=\"256\" appTrimInput>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </form>\n    <ng-template pTemplate=\"caption\">\n        <div class=\"d-flex flex-row\">\n            <div style=\"display: flex; padding-left: 6px;\">\n                <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-primary p-button-sm\"\n                    [disabled]=\"!rejectBook.valid\" (click)=\"saveRejectionReason()\"></button>\n                <button pButton pRipple label=\"Cancel\" class=\"p-button-primary p-button-sm\" style=\"margin-left:8px\"\n                    (click)=\"cancelRejectionReason()\"></button>\n            </div>\n        </div>\n    </ng-template>\n</p-dialog>\n\n<!-- Update recurring reservation -->\n<p-dialog [(visible)]=\"displayUpdateScreen\" [style]=\"{width: '30vw'}\" [closable]=\"false\" [draggable]=\"false\"\n    [resizable]=\"false\" [modal]=\"true\">\n    <ng-template pTemplate=\"header\">\n        <h3 style=\"margin-top: 20px !important;\">Confirmation</h3>\n    </ng-template>\n    <ng-template pTemplate=\"body\">\n        <form [formGroup]=\"editDialog\">\n            <div style=\"display: flex; flex-direction:column;\">\n                <div class=\"input-label-custom \" style=\"margin-top: 10px;\">\n                    <label class='form-field-lable' style=\"margin-left: 5px;\">Do you want {{action}} all occurrences of\n                        the recurring reservation or just this one ?</label>\n                </div>\n                <div class=\"input-label-custom \" style=\"margin-top: 10px;\">\n                    <p-radioButton name=\"edit\" value=\"updateOne\" formControlName=\"edit\">\n                    </p-radioButton>\n                    <label class='form-field-lable' style=\"margin-left: 5px;\">{{action}} this occurence only.</label>\n                </div>\n                <div class=\"input-label-custom \" style=\"margin-top: 10px;\">\n                    <p-radioButton name=\"edit\" value=\"updateAll\" formControlName=\"edit\">\n                    </p-radioButton>\n                    <label class='form-field-lable' style=\"margin-left: 5px;\">{{action}} this reservation and all future\n                        occurrences.</label>\n                </div>\n            </div>\n        </form>\n    </ng-template>\n    <ng-template pTemplate=\"footer\">\n        <button icon=\"pi pi-times\" pButton (click)=\"closeUpdateRecurrence()\" label=\"Close\"\n            styleClass=\"p-button-text\"></button>\n        <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Ok\" (click)=\"confirmUpdateResevation()\"></button>\n    </ng-template>\n</p-dialog>"],"mappings":"AAEA,SAA+CA,UAAU,QAAQ,gBAAgB;AACjF,SAA8BC,cAAc,QAAQ,aAAa;AAIjE,SAASC,YAAY,QAAQ,yBAAyB;;;;;;;;;;;;;;;;;;;;;;ICAlCC,EAAA,CAAAC,cAAA,cAAqD;IACrBD,EAAA,CAAAE,MAAA,2BAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACrDH,EAAA,CAAAC,cAAA,UAAK;IAGGD,EAAA,CAAAI,UAAA,mBAAAC,uEAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,IAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,kBAAA,EAAoB;IAAA,EAAC;IAACX,EAAA,CAAAG,YAAA,EAAS;IAC5CH,EAAA,CAAAC,cAAA,iBAEkC;IAA9BD,EAAA,CAAAI,UAAA,mBAAAQ,uEAAA;MAAAZ,EAAA,CAAAM,aAAA,CAAAC,IAAA;MAAA,MAAAM,OAAA,GAAAb,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAG,OAAA,CAAAC,iBAAA,EAAmB;IAAA,EAAC;IAACd,EAAA,CAAAG,YAAA,EAAS;;;;IAJZH,EAAA,CAAAe,SAAA,GAAuC;IAAvCf,EAAA,CAAAgB,UAAA,aAAAC,MAAA,CAAAC,eAAA,CAAAC,MAAA,MAAuC;IAGvCnB,EAAA,CAAAe,SAAA,GAAuC;IAAvCf,EAAA,CAAAgB,UAAA,aAAAC,MAAA,CAAAC,eAAA,CAAAC,MAAA,MAAuC;;;;;;IA6GtDnB,EAAA,CAAAC,cAAA,qBAEmD;IADzBD,EAAA,CAAAI,UAAA,sBAAAgB,6FAAAC,MAAA;MAAA,MAAAC,WAAA,GAAAtB,EAAA,CAAAM,aAAA,CAAAiB,IAAA;MAAA,MAAAC,UAAA,GAAAF,WAAA,CAAAG,cAAA;MAAA,OAAYzB,EAAA,CAAAU,WAAA,CAAAc,UAAA,CAAAH,MAAA,CAAAK,KAAA,CAAoB;IAAA,EAAC;IACR1B,EAAA,CAAAG,YAAA,EAAa;;;;;IAFpDH,EAAA,CAAAgB,UAAA,YAAAW,SAAA,CAAiB,YAAAC,OAAA,CAAAC,cAAA;;;;;IAvGrD7B,EAAA,CAAAC,cAAA,SAAI;IAIuBD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACnCH,EAAA,CAAAC,cAAA,aAAuB;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClCH,EAAA,CAAAC,cAAA,aAAkC;IAGUD,EAAA,CAAAE,MAAA,mBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEpDH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAA6C;IAEjD9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAAgC;IAGYD,EAAA,CAAAE,MAAA,mBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEnDH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAA2C;IAE/C9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAAmC;IAGSD,EAAA,CAAAE,MAAA,gBAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEhDH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAA8C;IAElD9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAAmC;IAGSD,EAAA,CAAAE,MAAA,aAAK;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE7CH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAA8C;IAElD9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAAmC;IAGSD,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE5CH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAA8C;IAElD9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAAgC;IAGYD,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE5CH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAA2C;IAE/C9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAAgC;IAGYD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEjDH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAA2C;IAE/C9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAA8B;IAGcD,EAAA,CAAAE,MAAA,eAAO;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE/CH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAAyC;IAE7C9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAA6B;IAGeD,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE9CH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAAwC;IACxC9B,EAAA,CAAAC,cAAA,0BAAiE;IAC7DD,EAAA,CAAA+B,UAAA,KAAAC,6DAAA,0BAIc;IAClBhC,EAAA,CAAAG,YAAA,EAAiB;IAI7BH,EAAA,CAAAC,cAAA,cAAkC;IAGWD,EAAA,CAAAE,MAAA,qBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAErDH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAA6C;IAEjD9B,EAAA,CAAAG,YAAA,EAAM;IAGdH,EAAA,CAAAC,cAAA,cAA8C;IAGFD,EAAA,CAAAE,MAAA,oBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEpDH,EAAA,CAAAC,cAAA,eAA4B;IACxBD,EAAA,CAAA8B,SAAA,sBAAyD;IAE7D9B,EAAA,CAAAG,YAAA,EAAM;;;;;;IAMlBH,EAAA,CAAAC,cAAA,aAA4B;IAKmCD,EAAA,CAAAI,UAAA,mBAAA6B,uEAAA;MAAA,MAAAX,WAAA,GAAAtB,EAAA,CAAAM,aAAA,CAAA4B,IAAA;MAAA,MAAAC,QAAA,GAAAb,WAAA,CAAAc,SAAA;MAAA,MAAAC,OAAA,GAAArC,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAA2B,OAAA,CAAAC,SAAA,CAAAH,QAAA,CAAe;IAAA,EAAC;IAC5EnC,EAAA,CAAAE,MAAA,eAAO;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAExBH,EAAA,CAAAC,cAAA,aAAuB;IACoCD,EAAA,CAAAI,UAAA,mBAAAmC,uEAAA;MAAA,MAAAjB,WAAA,GAAAtB,EAAA,CAAAM,aAAA,CAAA4B,IAAA;MAAA,MAAAC,QAAA,GAAAb,WAAA,CAAAc,SAAA;MAAA,MAAAI,OAAA,GAAAxC,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAA8B,OAAA,CAAAC,SAAA,CAAAN,QAAA,CAAe;IAAA,EAAC;IAC5EnC,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAEvBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,IAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9BH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9BH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9BH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAwC;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjDH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAyC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClDH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAuC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAChDH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzBH,EAAA,CAAAC,cAAA,cAAkF;IAAAD,EAAA,CAAAE,MAAA,IAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3GH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAgC;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IAtBzCH,EAAA,CAAAgB,UAAA,mBAAAmB,QAAA,CAAuB;IAYnBnC,EAAA,CAAAe,SAAA,GAAoB;IAApBf,EAAA,CAAA0C,iBAAA,CAAAP,QAAA,CAAAQ,WAAA,CAAoB;IACpB3C,EAAA,CAAAe,SAAA,GAAkB;IAAlBf,EAAA,CAAA0C,iBAAA,CAAAP,QAAA,CAAAS,SAAA,CAAkB;IAClB5C,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAA0C,iBAAA,CAAAP,QAAA,CAAAU,YAAA,CAAqB;IACrB7C,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAA0C,iBAAA,CAAAP,QAAA,CAAAW,YAAA,CAAqB;IACrB9C,EAAA,CAAAe,SAAA,GAAqB;IAArBf,EAAA,CAAA0C,iBAAA,CAAAP,QAAA,CAAAY,YAAA,CAAqB;IACrB/C,EAAA,CAAAe,SAAA,GAAwC;IAAxCf,EAAA,CAAA0C,iBAAA,CAAA1C,EAAA,CAAAgD,WAAA,SAAAb,QAAA,CAAAc,SAAA,iBAAwC;IACxCjD,EAAA,CAAAe,SAAA,GAAyC;IAAzCf,EAAA,CAAA0C,iBAAA,CAAAQ,MAAA,CAAAC,oBAAA,CAAAhB,QAAA,CAAAiB,SAAA,EAAyC;IACzCpD,EAAA,CAAAe,SAAA,GAAuC;IAAvCf,EAAA,CAAA0C,iBAAA,CAAAQ,MAAA,CAAAC,oBAAA,CAAAhB,QAAA,CAAAkB,OAAA,EAAuC;IACvCrD,EAAA,CAAAe,SAAA,GAAgB;IAAhBf,EAAA,CAAA0C,iBAAA,CAAAP,QAAA,CAAAmB,MAAA,CAAgB;IAChBtD,EAAA,CAAAe,SAAA,GAAiC;IAAjCf,EAAA,CAAAuD,qBAAA,eAAApB,QAAA,CAAAqB,WAAA,CAAiC;IAA6CxD,EAAA,CAAAe,SAAA,GAAoB;IAApBf,EAAA,CAAA0C,iBAAA,CAAAP,QAAA,CAAAqB,WAAA,CAAoB;IAClGxD,EAAA,CAAAe,SAAA,GAAgC;IAAhCf,EAAA,CAAA0C,iBAAA,CAAAP,QAAA,CAAAsB,uBAAA,CAAgC;;;;;IAIxCzD,EAAA,CAAAC,cAAA,SAAI;IAEID,EAAA,CAAAE,MAAA,yBACJ;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;IAFDH,EAAA,CAAAe,SAAA,GAAkB;IAAlBf,EAAA,CAAA0D,WAAA,cAAkB;;;;;;IAgCtC1D,EAAA,CAAAC,cAAA,cAA6B;IAGcD,EAAA,CAAAI,UAAA,mBAAAuD,wEAAA;MAAA3D,EAAA,CAAAM,aAAA,CAAAsD,IAAA;MAAA,MAAAC,OAAA,GAAA7D,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAmD,OAAA,CAAAC,mBAAA,EAAqB;IAAA,EAAC;IAAC9D,EAAA,CAAAG,YAAA,EAAS;IAC5EH,EAAA,CAAAC,cAAA,iBACsC;IAAlCD,EAAA,CAAAI,UAAA,mBAAA2D,wEAAA;MAAA/D,EAAA,CAAAM,aAAA,CAAAsD,IAAA;MAAA,MAAAI,OAAA,GAAAhE,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAsD,OAAA,CAAAC,qBAAA,EAAuB;IAAA,EAAC;IAACjE,EAAA,CAAAG,YAAA,EAAS;;;;IAF3CH,EAAA,CAAAe,SAAA,GAA8B;IAA9Bf,EAAA,CAAAgB,UAAA,cAAAkD,MAAA,CAAAC,UAAA,CAAAC,KAAA,CAA8B;;;;;IAY1CpE,EAAA,CAAAC,cAAA,aAAyC;IAAAD,EAAA,CAAAE,MAAA,mBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IAG1DH,EAAA,CAAAC,cAAA,eAA+B;IAGuCD,EAAA,CAAAE,MAAA,GACV;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAE5DH,EAAA,CAAAC,cAAA,cAA2D;IACvDD,EAAA,CAAA8B,SAAA,wBACgB;IAChB9B,EAAA,CAAAC,cAAA,gBAA0D;IAAAD,EAAA,CAAAE,MAAA,GAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAErGH,EAAA,CAAAC,cAAA,cAA2D;IACvDD,EAAA,CAAA8B,SAAA,yBACgB;IAChB9B,EAAA,CAAAC,cAAA,iBAA0D;IAAAD,EAAA,CAAAE,MAAA,IAC1C;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;IAf9BH,EAAA,CAAAgB,UAAA,cAAAqD,MAAA,CAAAC,UAAA,CAAwB;IAGwCtE,EAAA,CAAAe,SAAA,GACV;IADUf,EAAA,CAAAuE,kBAAA,iBAAAF,MAAA,CAAAG,MAAA,qEACV;IAKUxE,EAAA,CAAAe,SAAA,GAA+B;IAA/Bf,EAAA,CAAAuE,kBAAA,KAAAF,MAAA,CAAAG,MAAA,0BAA+B;IAK/BxE,EAAA,CAAAe,SAAA,GAC1C;IAD0Cf,EAAA,CAAAuE,kBAAA,KAAAF,MAAA,CAAAG,MAAA,kDAC1C;;;;;;IAM5BxE,EAAA,CAAAC,cAAA,iBAC+B;IADID,EAAA,CAAAI,UAAA,mBAAAqE,wEAAA;MAAAzE,EAAA,CAAAM,aAAA,CAAAoE,IAAA;MAAA,MAAAC,OAAA,GAAA3E,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAiE,OAAA,CAAAC,qBAAA,EAAuB;IAAA,EAAC;IACrC5E,EAAA,CAAAG,YAAA,EAAS;IACxCH,EAAA,CAAAC,cAAA,iBAAgG;IAApCD,EAAA,CAAAI,UAAA,mBAAAyE,wEAAA;MAAA7E,EAAA,CAAAM,aAAA,CAAAoE,IAAA;MAAA,MAAAI,OAAA,GAAA9E,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAoE,OAAA,CAAAC,uBAAA,EAAyB;IAAA,EAAC;IAAC/E,EAAA,CAAAG,YAAA,EAAS;;;;;;;;;;;;;;;;;;;;;AD3OjH,OAAM,MAAO6E,uBAAuB;EA8BlCC,YACUC,UAA0B,EAC1BC,mBAAwC,EACxCC,OAAoB,EACpBC,cAA8B,EAC9BC,WAA+B,EAC/BC,QAAkB,EAClBC,OAAoB;IANpB,KAAAN,UAAU,GAAVA,UAAU;IACV,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,OAAO,GAAPA,OAAO;IApCjB,KAAAC,kBAAkB,GAAU,EAAE;IAC9B,KAAAC,QAAQ,GAAW3F,YAAY,CAAC4F,SAAS;IACzC,KAAAzE,eAAe,GAAU,EAAE;IAE3B,KAAA0E,UAAU,GAAY,KAAK;IAC3B,KAAAC,UAAU,GAAY,KAAK;IAG3B,KAAAC,mBAAmB,GAAY,KAAK;IACpC,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,aAAa,GAAU,EAAE;IACzB,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,mBAAmB,GAAU,EAAE;IAC/B,KAAAC,mBAAmB,GAAY,KAAK;IAGpC,KAAAC,uBAAuB,GAAU,EAAE;IACnC,KAAAC,QAAQ,GAAe,EAAE;IACzB,KAAAC,cAAc,GAAe,EAAE;IAC/B,KAAAzE,cAAc,GAAe,EAAE;IAC/B,KAAA0E,aAAa,GAAU,CAAC;IACxB,KAAAC,aAAa,GAAiB;MAC5BC,MAAM,EAAC,CAAC;MACRC,QAAQ,EAAC,IAAI,CAAChB,QAAQ;MACtBiB,MAAM,EAAC,CAAC,WAAW,CAAC;MACpBC,SAAS,EAAC;KACX;IACD,KAAAC,kBAAkB,GAAQ,EAAE;IAC5B,KAAAC,UAAU,GAAW,KAAK;IAUxB,IAAI,CAAC3C,UAAU,GAAG,IAAI,CAACmB,WAAW,CAACyB,KAAK,CAAC;MACvCC,eAAe,EAAE,CAAC,IAAI,EAAE,CAACnH,UAAU,CAACoH,QAAQ,CAAC;KAC9C,CAAC;IACF,IAAI,CAAC3C,UAAU,GAAG,IAAI,CAACgB,WAAW,CAACyB,KAAK,CAAC;MACvCG,IAAI,EAAE,CAAC,WAAW;KACnB,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAAChC,OAAO,CAACiC,iBAAiB,EAAE;IACpD,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,mBAAmBA,CAAA;IACjB,IAAIC,gBAAgB,GAAG,IAAI,CAACC,aAAa,CAAC,sBAAsB,CAAC;IACjE,IAAIC,IAAI,GAAE;MACRC,SAAS,EAAC;QAACC,aAAa,EAAC,IAAI,CAACpB,aAAa;QAACqB,cAAc,EAAC,IAAI,CAAChB;MAAkB,CAAC;MACnFvD,MAAM,EAACkE;KACR;IACD,IAAI,CAACV,UAAU,GAAE,KAAK;IACtB,IAAI,CAAC5B,UAAU,CAAC4C,8BAA8B,CAACJ,IAAI,CAAC,CAACK,SAAS,CAAEC,GAAQ,IAAI;MAC1E,IAAGA,GAAG,EAAC;QACL,IAAI,CAAClB,UAAU,GAAE,KAAK;QACtB,IAAI,CAACrB,kBAAkB,GAAGuC,GAAG,CAACC,OAAO,GAAGD,GAAG,CAACC,OAAO,GAAG,EAAE;QACxD,IAAI,CAAC1B,aAAa,GAAGyB,GAAG,CAACzB,aAAa,GAAGyB,GAAG,CAACzB,aAAa,GAAG,CAAC;;IAElE,CAAC,CAAC;EACJ;EAEAe,SAASA,CAAA;IACP,IAAI,CAACjB,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACb,OAAO,CAAC0C,QAAQ,EAAE,CAACH,SAAS,CAC9BC,GAAe,IAAI;MAClB,IAAI,CAAC3B,QAAQ,GAAG2B,GAAG;MACnB,IAAI,CAAC1B,cAAc,GAAG,IAAI,CAACD,QAAQ,CAAC8B,GAAG,CAACC,CAAC,IAAIC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEF,CAAC,CAAC,CAAC;MAClE,IAAI,CAACvG,cAAc,GAAG,IAAI,CAACyE,cAAc,CAACiC,MAAM,CAACC,CAAC,IAChDA,CAAC,CAACC,SAAS,CAACC,WAAW,EAAE,KAAK,SAAS,IAAIF,CAAC,CAACG,SAAS,CAACD,WAAW,EAAE,KAAK,QAAQ,CAClF;MACF;MACE,IAAI,CAACnB,mBAAmB,EAAE;IAC7B,CAAC,CAAC;EACN;EAGA5G,kBAAkBA,CAAA;IAChB,IAAI,CAACwE,mBAAmB,CAACyD,OAAO,CAAC;MAC/BC,OAAO,EAAE,kEAAkE;MAC3EC,MAAM,EAAE,cAAc;MACtBC,IAAI,EAAE,4BAA4B;MAClCC,MAAM,EAAEA,CAAA,KAAK;QACX,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAAC/H,eAAe,EAAE,UAAU,CAAC;MAC1D,CAAC;MACDgI,GAAG,EAAE;KACN,CAAC;EACJ;EAEApI,iBAAiBA,CAAA;IACf,IAAI,CAACkF,aAAa,GAAG,IAAI,CAAC9E,eAAe;IACzC,IAAI,CAACiE,mBAAmB,CAACyD,OAAO,CAAC;MAC/BC,OAAO,EAAE,iEAAiE;MAC1EC,MAAM,EAAE,cAAc;MACtBC,IAAI,EAAE,4BAA4B;MAClCC,MAAM,EAAEA,CAAA,KAAK;QACX,IAAI,CAAClD,mBAAmB,GAAG,IAAI;MACjC,CAAC;MACDoD,GAAG,EAAE;KACN,CAAC;EACJ;EAEA5G,SAASA,CAACoF,IAAS;IACjB,IAAI,CAACyB,mBAAmB,GAAGzB,IAAI;IAC/B,IAAI,CAAClD,MAAM,GAAG,SAAS;IACvB,IAAI,IAAI,CAAC2E,mBAAmB,CAACxG,WAAW,CAACyG,iBAAiB,EAAE,KAAK,WAAW,CAACA,iBAAiB,EAAE,EAAE;MAChG,IAAI,CAACjD,mBAAmB,GAAG,IAAI;KAChC,MAAM;MACL,IAAI,CAACkD,aAAa,CAAC,CAAC,IAAI,CAACF,mBAAmB,CAAC,EAAC,IAAI,CAAC3E,MAAM,CAAC;;EAE9D;EAEA/B,SAASA,CAACiF,IAAS;IACjB,IAAI,CAACyB,mBAAmB,GAAGzB,IAAI;IAC/B,IAAI,CAAClD,MAAM,GAAG,QAAQ;IACtB8E,UAAU,CAAC,MAAK;MACd,IAAI,CAACnF,UAAU,CAACoF,UAAU,CAAC;QACzBvC,eAAe,EAAE;OAClB,CAAC;IAAC,CAAC,EAAE,EAAE,CAAC;IACX,IAAI,CAAClB,mBAAmB,GAAG,IAAI;EACjC;EAEAhC,mBAAmBA,CAAA;IACjB,IAAI,CAACiC,YAAY,GAAG,IAAI,CAAC5B,UAAU,CAACqF,QAAQ,CAACxC,eAAe,CAACtF,KAAK;IAClE,IAAI,CAACoE,mBAAmB,GAAG,IAAI;IAC/B,IAAI,IAAI,CAACqD,mBAAmB,CAACxG,WAAW,CAACyG,iBAAiB,EAAE,KAAK,WAAW,CAACA,iBAAiB,EAAE,EAAE;MAChG,IAAI,CAACjD,mBAAmB,GAAG,IAAI;KAChC,MAAM;MACL,IAAI,CAACkD,aAAa,CAAC,CAAC,IAAI,CAACF,mBAAmB,CAAC,EAAC,IAAI,CAAC3E,MAAM,CAAC;;EAE9D;EACAP,qBAAqBA,CAAA;IACnB,IAAI,CAAC8B,YAAY,GAAG,EAAE;IACtB,IAAI,CAACD,mBAAmB,GAAG,KAAK;EAClC;EAEAmD,iBAAiBA,CAACQ,MAAa,EAAEC,UAAkB;IACjDA,UAAU,GAAGA,UAAU,IAAI,SAAS,GAAE,UAAU,GAAG,UAAU;IAC7D,IAAIC,QAAQ,GAAG,IAAI,CAAClC,aAAa,CAACiC,UAAU,CAAC;IAC7C,IAAI,CAAC9D,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACO,uBAAuB,GAAG,EAAE;IACjCqD,MAAM,CAACG,OAAO,CAACC,IAAI,IAAG;MACpB,IAAIC,UAAU,GAAe;QAC3BlH,SAAS,EAAEiH,IAAI,CAACjH,SAAS;QACzBmH,QAAQ,EAAE,IAAI,CAAC3C,YAAY;QAC3B4C,WAAW,EAAEH,IAAI,CAACG,WAAW;QAC7BC,YAAY,EAAE,IAAI,CAAC7C,YAAY;QAC/B9D,MAAM,EAAEqG,QAAQ;QAChBnG,WAAW,EAAEqG,IAAI,CAACrG,WAAW;QAC7B0G,QAAQ,EAAEL,IAAI,CAACK,QAAQ;QACvBvH,WAAW,EAAEkH,IAAI,CAAClH,WAAW;QAC7BwH,aAAa,EAAEN,IAAI,CAACM,aAAa;QACjClH,SAAS,EAAE,IAAI,CAACsC,QAAQ,CAAC6E,SAAS,CAACP,IAAI,CAAC5G,SAAS,EAAE,qBAAqB,CAAC;QACzEoH,OAAO,EAAE,IAAI,CAAC9E,QAAQ,CAAC6E,SAAS,CAACP,IAAI,CAACQ,OAAO,EAAE,qBAAqB,CAAC;QACrEjH,SAAS,EAAE,IAAI,CAACkH,aAAa,CAACT,IAAI,CAACzG,SAAS,CAAC;QAC7CC,OAAO,EAAE,IAAI,CAACiH,aAAa,CAACT,IAAI,CAACxG,OAAO,CAAC;QACzCkH,IAAI,EAAEV,IAAI,CAACU,IAAI;QACfC,IAAI,EAAEX,IAAI,CAACW,IAAI;QACfC,IAAI,EAAEZ,IAAI,CAACY,IAAI;QACfC,QAAQ,EAAEb,IAAI,CAACa,QAAQ;QACvB1D,eAAe,EAAE0C,UAAU,IAAI,UAAU,GAAG,IAAI,CAAC3D,YAAY,GAAG,IAAI;QACpE4E,UAAU,EAAEjB,UAAU,IAAI,UAAU,GAAG,IAAI,CAACtC,YAAY,GAAG,IAAI;QAC/DwD,YAAY,EAAElB,UAAU,IAAI,UAAU,GAAG,IAAI,CAACnE,QAAQ,CAAC6E,SAAS,CAAC,IAAIS,IAAI,EAAE,EAAE,qBAAqB,CAAC,GAAG,IAAI;QAC1GC,UAAU,EAAEpB,UAAU,IAAI,UAAU,GAAG,IAAI,CAACtC,YAAY,GAAG,IAAI;QAC/D2D,YAAY,EAAErB,UAAU,IAAI,UAAU,GAAG,IAAI,CAACnE,QAAQ,CAAC6E,SAAS,CAAC,IAAIS,IAAI,EAAE,EAAE,qBAAqB,CAAC,GAAG,IAAI;QAC1GG,QAAQ,EAAEnB,IAAI,CAACmB,QAAQ;QACvBC,WAAW,EAAE,IAAI,CAAC1F,QAAQ,CAAC6E,SAAS,CAACP,IAAI,CAACoB,WAAW,EAAE,qBAAqB,CAAC;QAC7EC,WAAW,EAAE,IAAI,CAACZ,aAAa,CAACT,IAAI,CAACqB,WAAW,CAAC;QACjDC,mBAAmB,EAAE,KAAK;QAC1BC,kBAAkB,EAAEvB,IAAI,CAACuB;OAC1B;MAED,IAAIC,mBAAmB,GAA0BxB,IAAI,CAACyB,gBAAgB,CAACC,KAAK,CAAC,CAAC,CAAC;MAAC;MAEhF,IAAIC,mBAAmB,GAA0B,EAAE;MACnD,IAAIC,WAAW,GAAG;QAChB3B,UAAU,EAAEA,UAAU;QACtBuB,mBAAmB,EAAEA,mBAAmB;QACxCG,mBAAmB,EAAEA;OACtB;MACD,IAAI,CAACpF,uBAAuB,CAACsF,IAAI,CAACD,WAAW,CAAC;IAC/C,CAAC,CAAC;IACF,IAAI,CAACvG,UAAU,CAACyG,wBAAwB,CAAC,IAAI,CAACvF,uBAAuB,CAAC,CAAC2B,SAAS,CAAEC,GAAG,IAAI;MACtF,IAAI,CAACT,mBAAmB,EAAE;MAC1B+B,UAAU,CAAC,MAAK;QACd,IAAI,CAACjE,cAAc,CAACuG,KAAK,EAAE;QAC3B,IAAI,CAACvG,cAAc,CAACwG,GAAG,CAAC;UAAE3C,GAAG,EAAE,mBAAmB;UAAE4C,QAAQ,EAAE,SAAS;UAAEC,OAAO,EAAE,gBAAgB;UAAEC,MAAM,EAAE,qBAAqB,GAAGtC;QAAU,CAAE,CAAC;MACnJ,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC;EACJ;EAGAuC,UAAUA,CAACC,IAAiB;IAC1B,IAAIA,IAAI,IAAI,IAAI,EAAE;MAChB,IAAIjB,WAAW,GAAG,IAAIJ,IAAI,CAACqB,IAAI,CAAC;MAChC,OAAOjB,WAAW;KACnB,MAAM;MACL,OAAO,IAAI;;EAEf;EACAX,aAAaA,CAAC5I,KAAU;IACtB,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,IAAIyK,QAAQ,GAAG,IAAItB,IAAI,EAAE;MACzB,IAAInD,IAAI,GAAGhG,KAAK,CAAC0K,KAAK,CAAC,GAAG,CAAC;MAC3B,IAAIC,IAAI,GAAG3E,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,IAAI,CAAC,CAAC,CAAC;MAClCyE,QAAQ,CAACG,QAAQ,CAAC5E,IAAI,CAAC,CAAC,CAAC,CAAC;MAC1ByE,QAAQ,CAACI,UAAU,CAAC7E,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5ByE,QAAQ,CAACK,UAAU,CAAC,CAAC,CAAC;MACtBL,QAAQ,CAACM,eAAe,CAAC,CAAC,CAAC;MAC3B,OAAO,IAAI,CAAClH,QAAQ,CAAC6E,SAAS,CAAC+B,QAAQ,EAAE,UAAU,CAAC;KACrD,MAAM;MACL,OAAO,IAAI,CAAC5G,QAAQ,CAAC6E,SAAS,CAAC,IAAIS,IAAI,EAAE,EAAE,UAAU,CAAC;;EAE1D;EAEA6B,kBAAkBA,CAAChL,KAAU;IAC3B,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,IAAIyK,QAAQ,GAAG,IAAItB,IAAI,EAAE;MACzB,IAAInD,IAAI,GAAGhG,KAAK,CAAC0K,KAAK,CAAC,GAAG,CAAC;MAC3BD,QAAQ,CAACG,QAAQ,CAAC5E,IAAI,CAAC,CAAC,CAAC,CAAC;MAC1ByE,QAAQ,CAACI,UAAU,CAAC7E,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5ByE,QAAQ,CAACK,UAAU,CAAC9E,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5ByE,QAAQ,CAACM,eAAe,CAAC,CAAC,CAAC;MAC3B,OAAON,QAAQ;KAChB,MAAM;MACL,OAAO,IAAI;;EAEf;EAEAhJ,oBAAoBA,CAACzB,KAAU;IAC7B,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,IAAIgG,IAAI,GAAGhG,KAAK,CAAC0K,KAAK,CAAC,GAAG,CAAC;MAC3B,IAAIC,IAAI,GAAG3E,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,IAAI,CAAC,CAAC,CAAC;MAClC,OAAO2E,IAAI;KACZ,MAAM;MACL,OAAO,EAAE;;EAEb;EAEAM,eAAeA,CAACC,WAAgB;IAC9B,IAAI,CAAC3G,SAAS,GAAG,IAAI,CAAC3B,UAAU,CAACkF,QAAQ,CAACtC,IAAI,CAACxF,KAAK,KAAK,WAAW;IACpE,IAAI,IAAI,CAACuE,SAAS,EAAE;MAClB,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACT,kBAAkB,CAAC8C,MAAM,CAAEP,GAAQ,IAAKA,GAAG,CAACpF,SAAS,IAAIgK,WAAW,CAAChK,SAAS,IAAIoF,GAAG,CAACgD,QAAQ,KAAK4B,WAAW,CAAC5B,QAAQ,CAAC;KACzJ,MAAM;MACL,IAAI,CAAC9E,mBAAmB,GAAG,IAAI,CAACT,kBAAkB,CAAC8C,MAAM,CAAEP,GAAQ,IAAKA,GAAG,CAACpF,SAAS,KAAKgK,WAAW,CAAChK,SAAS,CAAC;;IAGlH,OAAO,IAAI,CAACsD,mBAAmB;EACjC;EAEAnB,uBAAuBA,CAAA;IACpB,IAAI,CAACoB,mBAAmB,GAAG,KAAK;IAChC,IAAI0G,OAAO,GAAU,EAAE;IACvB,IAAI,IAAI,CAAC1D,mBAAmB,CAACxG,WAAW,CAACyG,iBAAiB,EAAE,KAAK,WAAW,CAACA,iBAAiB,EAAE,EAAE;MAChGyD,OAAO,GAAG,IAAI,CAACF,eAAe,CAAC,IAAI,CAACxD,mBAAmB,CAAC;KACzD,MAAM;MACL0D,OAAO,CAACnB,IAAI,CAAC,IAAI,CAACvC,mBAAmB,CAAC;;IAExC,IAAI,CAACE,aAAa,CAACwD,OAAO,EAAC,IAAI,CAACrI,MAAM,CAAC;EAC1C;EAEA6E,aAAaA,CAAC3B,IAAQ,EAAElD,MAAU;IAChC,IAAI,CAACW,mBAAmB,CAACyD,OAAO,CAAC;MAC/BC,OAAO,EAAE,gCAAgC,GAAErE,MAAM,GAAG,oBAAoB;MACxEsE,MAAM,EAAE,cAAc;MACtBC,IAAI,EAAE,4BAA4B;MAClCC,MAAM,EAAEA,CAAA,KAAK;QACX,IAAI,CAAClD,mBAAmB,GAAG,KAAK;QAChC,IAAI,CAACmD,iBAAiB,CAACvB,IAAI,EAAElD,MAAM,CAAC;MACtC,CAAC;MACDsI,MAAM,EAACA,CAAA,KAAK;QACV,IAAI,IAAI,CAAC3D,mBAAmB,CAACxG,WAAW,CAACyG,iBAAiB,EAAE,KAAK,WAAW,CAACA,iBAAiB,EAAE,EAAE;UAChG,IAAI,CAACjD,mBAAmB,GAAG,IAAI;;MAEnC,CAAC;MACD+C,GAAG,EAAE;KACN,CAAC;EACJ;EAEAtE,qBAAqBA,CAAA;IACnB,IAAI,CAACuB,mBAAmB,GAAG,KAAK;EAClC;EACA4G,WAAWA,CAACC,EAAO;IACjB,OAAO,IAAI,CAACnL,cAAc,CAACoL,IAAI,CAAEzE,CAAM,IAAKA,CAAC,CAAC0E,OAAO,KAAKF,EAAE,CAAC,EAAEG,SAAS;EAC1E;EAEA1F,aAAaA,CAACnE,MAAW;IACvB,OAAO,IAAI,CAACzB,cAAc,CAACoL,IAAI,CAAEzE,CAAM,IAAKA,CAAC,CAAC2E,SAAS,KAAK7J,MAAM,CAAC,EAAE4J,OAAO;EAC9E;EAEAE,YAAYA,CAACC,KAAS;IACpB,MAAM5G,MAAM,GAAG4G,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACE,IAAI,GAAG,CAAC;IACzD,MAAM7G,QAAQ,GAAG2G,KAAK,CAACE,IAAI;IAC3B,IAAI,CAAC/G,aAAa,CAACC,MAAM,GAAGA,MAAM;IAClC,IAAI,CAACD,aAAa,CAACE,QAAQ,GAAGA,QAAQ;IACtC,IAAI,CAACa,mBAAmB,EAAE;EAC5B;EAEAiG,aAAaA,CAACH,KAAU;IACtB,IAAG,IAAI,CAACvG,UAAU,EAAC;MACjBuB,MAAM,CAACoF,IAAI,CAACJ,KAAK,CAACK,OAAO,CAAC,CAAC9D,OAAO,CAAE+D,KAAK,IAAI;QAC3C,MAAMC,WAAW,GAAGP,KAAK,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACjM,KAAK;QACjD,MAAMmM,SAAS,GAAGR,KAAK,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,SAAS;QACnD,IAAID,WAAW,KAAKE,SAAS,EAAG;UAC9B,IAAIjG,cAAc,GAAE,EAAE;UACtB,IAAG8F,KAAK,IAAE,cAAc,EAAC;YACvB9F,cAAc,GAAG;cAAEc,SAAS,EAAE,eAAe;cAAEjH,KAAK,EAAEkM,WAAW;cAAEC,SAAS,EAAEA;YAAS,CAAE;WAC1F,MAAK,IAAGF,KAAK,IAAE,cAAc,EAAC;YAC7B9F,cAAc,GAAG;cAAEc,SAAS,EAAE,eAAe;cAAEjH,KAAK,EAAEkM,WAAW;cAAEC,SAAS,EAAEA;YAAS,CAAE;WAC1F,MAAK,IAAGF,KAAK,IAAE,cAAc,EAAC;YAC7B9F,cAAc,GAAG;cAAEc,SAAS,EAAE,eAAe;cAAEjH,KAAK,EAAEkM,WAAW;cAAEC,SAAS,EAAEA;YAAS,CAAE;WAC1F,MAAK,IAAGF,KAAK,IAAE,yBAAyB,EAAC;YACxC9F,cAAc,GAAG;cAAEc,SAAS,EAAE,0BAA0B;cAAEjH,KAAK,EAAEkM,WAAW;cAAEC,SAAS,EAAEA;YAAS,CAAE;WACrG,MAAI;YACHhG,cAAc,GAAG;cAAEc,SAAS,EAAEgF,KAAK;cAAEjM,KAAK,EAAEkM,WAAW;cAAEC,SAAS,EAAEA;YAAS,CAAE;;UAEjF,IAAI,CAACE,wBAAwB,CAAClG,cAAc,CAAC;;MAEjD,CAAC,CAAC;MACF,IAAI,CAACrB,aAAa,CAACC,MAAM,GAAG,CAAC;MAC7B,IAAI,CAACc,mBAAmB,EAAE;;IAE5B,IAAI,CAACT,UAAU,GAAG,IAAI;EACxB;EAEAiH,wBAAwBA,CAAClG,cAAkB;IACzC,IAAImG,KAAK,GAAG,IAAI,CAACnH,kBAAkB,CAACoH,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACvF,SAAS,KAAKd,cAAc,CAAC,WAAW,CAAC,CAAC;IACrG,IAAGA,cAAc,CAAC,OAAO,CAAC,IAAE,IAAI,EAAC;MAC/B,IAAGmG,KAAK,KAAI,CAAC,CAAC,EAAC;QACb,IAAI,CAACnH,kBAAkB,CAACsH,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;KAE3C,MAAK;MACJ,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAACnH,kBAAkB,CAACmH,KAAK,CAAC,GAAGnG,cAAc;OAChD,MAAM;QACL,IAAI,CAAChB,kBAAkB,CAAC6E,IAAI,CAAC7D,cAAc,CAAC;;;EAGlD;EAAC,QAAAuG,CAAA,G;qBAzVUpJ,uBAAuB,EAAAhF,EAAA,CAAAqO,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAvO,EAAA,CAAAqO,iBAAA,CAAAG,EAAA,CAAAC,mBAAA,GAAAzO,EAAA,CAAAqO,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAA3O,EAAA,CAAAqO,iBAAA,CAAAG,EAAA,CAAA1O,cAAA,GAAAE,EAAA,CAAAqO,iBAAA,CAAAO,EAAA,CAAAC,kBAAA,GAAA7O,EAAA,CAAAqO,iBAAA,CAAAS,EAAA,CAAAC,QAAA,GAAA/O,EAAA,CAAAqO,iBAAA,CAAAW,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvBlK,uBAAuB;IAAAmK,SAAA;IAAAC,QAAA,GAAApP,EAAA,CAAAqP,kBAAA,CAFvB,CAACvP,cAAc,CAAC;IAAAwP,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCnB7B3P,EAAA,CAAAC,cAAA,aAAuC;QAGoCD,EAAA,CAAAI,UAAA,6BAAAyP,oEAAAxO,MAAA;UAAA,OAAAuO,GAAA,CAAA1O,eAAA,GAAAG,MAAA;QAAA,EAA+B,sBAAAyO,6DAAAzO,MAAA;UAAA,OAC9EuO,GAAA,CAAApC,aAAA,CAAAnM,MAAA,CAAqB;QAAA,EADyD;QAG1FrB,EAAA,CAAA+B,UAAA,IAAAgO,8CAAA,yBAYc;QACd/P,EAAA,CAAA+B,UAAA,IAAAiO,8CAAA,0BAuIc;QACdhQ,EAAA,CAAA+B,UAAA,IAAAkO,8CAAA,2BAyBc;QACdjQ,EAAA,CAAA+B,UAAA,IAAAmO,8CAAA,yBAMc;QAClBlQ,EAAA,CAAAG,YAAA,EAAU;QACVH,EAAA,CAAAC,cAAA,aAAuB;QAC4CD,EAAA,CAAAI,UAAA,0BAAA+P,sEAAA9O,MAAA;UAAA,OAAgBuO,GAAA,CAAAxC,YAAA,CAAA/L,MAAA,CAAoB;QAAA,EAAC;QAE/DrB,EAAA,CAAAG,YAAA,EAAc;QAKnEH,EAAA,CAAA8B,SAAA,mBAAgE;QAEhE9B,EAAA,CAAAC,cAAA,oBACiE;QADpCD,EAAA,CAAAI,UAAA,2BAAAgQ,oEAAA/O,MAAA;UAAA,OAAAuO,GAAA,CAAA9J,mBAAA,GAAAzE,MAAA;QAAA,EAAiC;QAE1DrB,EAAA,CAAAC,cAAA,gBAA+B;QAKmCD,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACtEH,EAAA,CAAA8B,SAAA,iBACwC;QAC5C9B,EAAA,CAAAG,YAAA,EAAM;QAKtBH,EAAA,CAAA+B,UAAA,KAAAsO,+CAAA,yBASc;QAClBrQ,EAAA,CAAAG,YAAA,EAAW;QAGXH,EAAA,CAAAC,cAAA,oBACuC;QAD7BD,EAAA,CAAAI,UAAA,2BAAAkQ,oEAAAjP,MAAA;UAAA,OAAAuO,GAAA,CAAAzJ,mBAAA,GAAA9E,MAAA;QAAA,EAAiC;QAEvCrB,EAAA,CAAA+B,UAAA,KAAAwO,+CAAA,yBAEc;QACdvQ,EAAA,CAAA+B,UAAA,KAAAyO,+CAAA,0BAoBc;QACdxQ,EAAA,CAAA+B,UAAA,KAAA0O,+CAAA,0BAIc;QAClBzQ,EAAA,CAAAG,YAAA,EAAW;;;QA/PeH,EAAA,CAAAe,SAAA,GAA4B;QAA5Bf,EAAA,CAAAgB,UAAA,UAAA4O,GAAA,CAAAnK,kBAAA,CAA4B,kCAAAmK,GAAA,CAAA1O,eAAA,gBAAAlB,EAAA,CAAA0Q,eAAA,KAAAC,GAAA;QA2LxB3Q,EAAA,CAAAe,SAAA,GAAiB;QAAjBf,EAAA,CAAAgB,UAAA,SAAA4O,GAAA,CAAAlK,QAAA,CAAiB,iBAAAkK,GAAA,CAAArJ,aAAA,WAAAqJ,GAAA,CAAApJ,aAAA,CAAAC,MAAA,GAAAmJ,GAAA,CAAApJ,aAAA,CAAAE,QAAA,uDAAA1G,EAAA,CAAA0Q,eAAA,KAAAE,GAAA;QAS+B5Q,EAAA,CAAAe,SAAA,GAAyB;QAAzBf,EAAA,CAAA6Q,UAAA,CAAA7Q,EAAA,CAAA0Q,eAAA,KAAAI,GAAA,EAAyB;QAA1E9Q,EAAA,CAAAgB,UAAA,YAAA4O,GAAA,CAAA9J,mBAAA,CAAiC;QAEpD9F,EAAA,CAAAe,SAAA,GAAwB;QAAxBf,EAAA,CAAAgB,UAAA,cAAA4O,GAAA,CAAAzL,UAAA,CAAwB;QA0BUnE,EAAA,CAAAe,SAAA,GAAyB;QAAzBf,EAAA,CAAA6Q,UAAA,CAAA7Q,EAAA,CAAA0Q,eAAA,KAAAK,GAAA,EAAyB;QAA3D/Q,EAAA,CAAAgB,UAAA,YAAA4O,GAAA,CAAAzJ,mBAAA,CAAiC"},"metadata":{},"sourceType":"module","externalDependencies":[]}