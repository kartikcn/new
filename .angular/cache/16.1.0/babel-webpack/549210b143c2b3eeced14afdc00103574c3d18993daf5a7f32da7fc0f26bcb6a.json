{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"../../services/booking.services\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/calendar\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"primeng/multiselect\";\nimport * as i10 from \"primeng/confirmdialog\";\nimport * as i11 from \"primeng/checkbox\";\nimport * as i12 from \"@angular/material/legacy-card\";\nimport * as i13 from \"ng-zorro-antd/table\";\nimport * as i14 from \"../../../../directive/numbers-only.directive\";\nfunction AddRecurrenceDetailsComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 49);\n    i0.ɵɵtext(2, \"Start date should be less than end date\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddRecurrenceDetailsComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 49);\n    i0.ɵɵtext(2, \"Value Can not be less than one\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a0) {\n  return [a0];\n};\nfunction AddRecurrenceDetailsComponent_ul_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\", 50)(1, \"div\", 51)(2, \"p-checkbox\", 52);\n    i0.ɵɵlistener(\"onChange\", function AddRecurrenceDetailsComponent_ul_51_Template_p_checkbox_onChange_2_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.checked());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 53);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const week_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", i0.ɵɵpureFunction1(5, _c0, week_r10.dayName))(\"value\", week_r10.dayName)(\"inputId\", week_r10.dayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", week_r10.dayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(week_r10.dayName);\n  }\n}\nfunction AddRecurrenceDetailsComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 49);\n    i0.ɵɵtext(2, \"Value Can not be less than one\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddRecurrenceDetailsComponent_div_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 49);\n    i0.ɵɵtext(2, \"Provide the required information\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddRecurrenceDetailsComponent_div_89_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 49);\n    i0.ɵɵtext(2, \"Value Can not be less than one\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddRecurrenceDetailsComponent_ng_template_95_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55)(1, \"p\", 20);\n    i0.ɵɵtext(2, \"Week Days : \");\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r13.weekNamesString);\n  }\n}\nfunction AddRecurrenceDetailsComponent_ng_template_95_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55)(1, \"p\", 20);\n    i0.ɵɵtext(2, \"weeks : \");\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r14.recurrenceDetails.weeks);\n  }\n}\nfunction AddRecurrenceDetailsComponent_ng_template_95_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55)(1, \"p\", 20);\n    i0.ɵɵtext(2, \"Month Days : \");\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r15.recurrenceDetails.monthDays);\n  }\n}\nfunction AddRecurrenceDetailsComponent_ng_template_95_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54)(1, \"div\", 55)(2, \"p\", 20);\n    i0.ɵɵtext(3, \"Type : \");\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 55)(7, \"p\", 20);\n    i0.ɵɵtext(8, \"Frequency : \");\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 55)(12, \"p\", 20);\n    i0.ɵɵtext(13, \"Date Start : \");\n    i0.ɵɵelementStart(14, \"span\");\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 55)(18, \"p\", 20);\n    i0.ɵɵtext(19, \"Date End : \");\n    i0.ɵɵelementStart(20, \"span\");\n    i0.ɵɵtext(21);\n    i0.ɵɵpipe(22, \"date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(23, AddRecurrenceDetailsComponent_ng_template_95_div_23_Template, 5, 1, \"div\", 56);\n    i0.ɵɵtemplate(24, AddRecurrenceDetailsComponent_ng_template_95_div_24_Template, 5, 1, \"div\", 56);\n    i0.ɵɵtemplate(25, AddRecurrenceDetailsComponent_ng_template_95_div_25_Template, 5, 1, \"div\", 56);\n    i0.ɵɵelementStart(26, \"div\", 55)(27, \"p\", 57);\n    i0.ɵɵtext(28, \"Total Occurences : \");\n    i0.ɵɵelementStart(29, \"span\", 20);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r8.recurrenceDetails.type);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r8.recurrenceDetails.frequency);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(16, 8, ctx_r8.recurrenceDetails.dateStart, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(22, 11, ctx_r8.recurrenceDetails.dateEnd, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.recurrenceDetails.weekDays != \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.recurrenceDetails.weeks != \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.recurrenceDetails.monthDays != \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r8.totalOccurence);\n  }\n}\nfunction AddRecurrenceDetailsComponent_ng_template_96_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 58);\n    i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_ng_template_96_Template_p_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.displayRecurrencePatern = false);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"p-button\", 59);\n    i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_ng_template_96_Template_p_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onContinue());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nconst _c2 = function () {\n  return {\n    \"width\": \"150px\"\n  };\n};\nconst _c3 = function () {\n  return {\n    \"width\": \"200px\"\n  };\n};\nconst _c4 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nconst _c5 = function () {\n  return {\n    width: \"35vw\"\n  };\n};\nexport let AddRecurrenceDetailsComponent = /*#__PURE__*/(() => {\n  class AddRecurrenceDetailsComponent {\n    constructor(data, dialog, dialogRef, formBuilder, confirmationService, bookingService) {\n      this.data = data;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef;\n      this.formBuilder = formBuilder;\n      this.confirmationService = confirmationService;\n      this.bookingService = bookingService;\n      this.today = new Date();\n      this.radioValue = '';\n      this.tab_name_clicked = \"\";\n      this.typeOfMonthSelection = 'dayOfMonth';\n      this.weekNames = [{\n        dayName: \"Monday\"\n      }, {\n        dayName: \"Tuesday\"\n      }, {\n        dayName: \"Wednesday\"\n      }, {\n        dayName: \"Thursday\"\n      }, {\n        dayName: \"Friday\"\n      }, {\n        dayName: \"Saturday\"\n      }, {\n        dayName: \"Sunday\"\n      }];\n      this.weekNums = [{\n        id: '1'\n      }, {\n        id: '2'\n      }, {\n        id: '3'\n      }, {\n        id: '4'\n      }];\n      this.dayOfMonth = [{\n        day: '1'\n      }, {\n        day: '2'\n      }, {\n        day: '3'\n      }, {\n        day: '4'\n      }, {\n        day: '5'\n      }, {\n        day: '6'\n      }, {\n        day: '7'\n      }, {\n        day: '8'\n      }, {\n        day: '9'\n      }, {\n        day: '10'\n      }, {\n        day: '11'\n      }, {\n        day: '12'\n      }, {\n        day: '13'\n      }, {\n        day: '14'\n      }, {\n        day: '15'\n      }, {\n        day: '16'\n      }, {\n        day: '17'\n      }, {\n        day: '18'\n      }, {\n        day: '19'\n      }, {\n        day: '20'\n      }, {\n        day: '21'\n      }, {\n        day: '22'\n      }, {\n        day: '23'\n      }, {\n        day: '24'\n      }, {\n        day: '25'\n      }, {\n        day: '26'\n      }, {\n        day: '27'\n      }, {\n        day: '28'\n      }, {\n        day: '29'\n      }, {\n        day: '30'\n      }, {\n        day: '31'\n      }];\n      this.isDayOfMonthVisible = true;\n      this.isWeekOfMonthVisible = false;\n      this.weeksArray = ['0', '0', '0', '0', '0', '0', '0'];\n      this.recurrenceMsg = '';\n      this.isError = false;\n      this.weeksIncluded = [];\n      this.totalOccurence = 0;\n      this.displayRecurrencePatern = false;\n      this.weekNamesString = '';\n      this.allDates = [];\n      this.errorMsg = '';\n      this.recurrenceDetailsForm = this.formBuilder.group({\n        dateStart: [null, [Validators.required, this.checkDateValidation()]],\n        dateEnd: [null, [Validators.required, this.checkDateValidation()]],\n        noOfOccurence: [''],\n        daysFrequency: [1],\n        weeksFrequency: [1],\n        Sunday: [''],\n        Monday: [''],\n        Tuesday: [''],\n        Wednesday: [''],\n        Thursday: [''],\n        Friday: [''],\n        Saturday: [''],\n        selectedWeekNumbers: [\"\"],\n        selectedDayNumbers: [\"\"],\n        monthsFrequency: [1],\n        selectedWeekNames: [''],\n        monthsFrequency2: [1],\n        yearFrequency: [1]\n      });\n    }\n    ngOnInit() {\n      this.loadTabData('daily');\n      var month = new Date().getMonth() + 6;\n      this.maxDate = new Date(new Date().setMonth(month));\n      var date = this.data.dateStart;\n      // var nextDay = date.setDate(date.getDate() + 1);\n      var nextDate = new Date(new Date().setDate(date.getDate() + 1));\n      setTimeout(() => {\n        this.recurrenceDetailsForm.patchValue({\n          dateStart: date,\n          dateEnd: nextDate\n        });\n      }, 10);\n    }\n    saveRecurrence() {\n      var startDate = this.formatDate(this.recurrenceDetailsForm.controls.dateStart.value);\n      var endDate = this.formatDate(this.recurrenceDetailsForm.controls.dateEnd.value);\n      switch (this.tab_name_clicked) {\n        case \"daily\":\n          {\n            this.recurrenceMsg = '';\n            var frequency = this.recurrenceDetailsForm.controls.daysFrequency.value;\n            if (!frequency) {\n              return;\n            }\n            this.recurrenceMsg = \"Every \" + (frequency > 1 ? frequency : '') + ' day(s)';\n            this.recurrenceDetails = {\n              dateStart: startDate,\n              dateEnd: endDate,\n              type: \"daily\",\n              frequency: frequency,\n              monthDays: '',\n              weekDays: '',\n              weeks: ''\n            };\n            break;\n          }\n        case \"weekly\":\n          {\n            var Sunday = '';\n            var Monday = '';\n            var Tuesday = '';\n            var Wednesday = '';\n            var Thursday = '';\n            var Friday = '';\n            var Saturday = '';\n            this.weeksIncluded = [];\n            this.recurrenceMsg = '';\n            if (this.recurrenceDetailsForm.controls.Sunday.value != '') {\n              Sunday = \"1\";\n              this.recurrenceMsg = this.recurrenceMsg + this.recurrenceDetailsForm.controls.Sunday.value + \", \";\n              this.weeksIncluded.push('Sunday');\n            } else {\n              Sunday = \"0\";\n            }\n            if (this.recurrenceDetailsForm.controls.Monday.value != '') {\n              Monday = \"1\";\n              this.recurrenceMsg = this.recurrenceMsg + this.recurrenceDetailsForm.controls.Monday.value + \", \";\n              this.weeksIncluded.push(\"Monday\");\n            } else {\n              Monday = \"0\";\n            }\n            if (this.recurrenceDetailsForm.controls.Tuesday.value != '') {\n              Tuesday = \"1\";\n              this.recurrenceMsg = this.recurrenceMsg + this.recurrenceDetailsForm.controls.Tuesday.value + \", \";\n              this.weeksIncluded.push(\"Tuesday\");\n            } else {\n              Tuesday = \"0\";\n            }\n            if (this.recurrenceDetailsForm.controls.Wednesday.value != '') {\n              Wednesday = \"1\";\n              this.recurrenceMsg = this.recurrenceMsg + this.recurrenceDetailsForm.controls.Wednesday.value + \", \";\n              this.weeksIncluded.push('Wednesday');\n            } else {\n              Wednesday = \"0\";\n            }\n            if (this.recurrenceDetailsForm.controls.Thursday.value != '') {\n              Thursday = \"1\";\n              this.recurrenceMsg = this.recurrenceMsg + this.recurrenceDetailsForm.controls.Thursday.value + \", \";\n              this.weeksIncluded.push('Thursday');\n            } else {\n              Thursday = \"0\";\n            }\n            if (this.recurrenceDetailsForm.controls.Friday.value != '') {\n              Friday = \"1\";\n              this.recurrenceMsg = this.recurrenceMsg + this.recurrenceDetailsForm.controls.Friday.value + \", \";\n              this.weeksIncluded.push('Friday');\n            } else {\n              Friday = \"0\";\n            }\n            if (this.recurrenceDetailsForm.controls.Saturday.value != '') {\n              Saturday = \"1\";\n              this.recurrenceMsg = this.recurrenceMsg + this.recurrenceDetailsForm.controls.Saturday.value + \", \";\n              this.weeksIncluded.push('Saturday');\n            } else {\n              Saturday = \"0\";\n            }\n            var frequency = this.recurrenceDetailsForm.controls.weeksFrequency.value;\n            if (this.weeksIncluded.length == 0 || !frequency) {\n              this.isError = true;\n              return;\n            }\n            this.recurrenceMsg = \"Every \" + (frequency > 1 ? frequency : '') + \" week(s) on \" + this.recurrenceMsg.slice(0, this.recurrenceMsg.lastIndexOf(','));\n            this.weekNamesString = this.weeksIncluded.toString();\n            this.recurrenceDetails = {\n              dateStart: startDate,\n              dateEnd: endDate,\n              type: \"weekly\",\n              frequency: frequency,\n              monthDays: '',\n              weekDays: Monday + \",\" + Tuesday + \",\" + Wednesday + \",\" + Thursday + \",\" + Friday + \",\" + Saturday + \",\" + Sunday,\n              weeks: ''\n            };\n            break;\n          }\n        case \"monthly\":\n          {\n            if (this.typeOfMonthSelection == 'dayOfMonth') {\n              this.recurrenceMsg = '';\n              this.isError = false;\n              var days = [];\n              this.recurrenceDetailsForm.controls.selectedDayNumbers.value ? this.recurrenceDetailsForm.controls.selectedDayNumbers.value.forEach(element => {\n                days.push(element.day);\n              }) : '';\n              days = days.sort();\n              var Stringdays = days.toString();\n              this.recurrenceMsg = \"Every \" + this.recurrenceDetailsForm.controls.monthsFrequency.value + \" month(s) on day(s) \" + Stringdays + \" of month\";\n              if (!Stringdays || this.recurrenceDetailsForm.controls.monthsFrequency.value <= 0) {\n                this.isError = true;\n                return;\n              }\n              this.recurrenceDetails = {\n                dateStart: startDate,\n                dateEnd: endDate,\n                type: \"monthly\",\n                frequency: this.recurrenceDetailsForm.controls.monthsFrequency.value,\n                monthDays: Stringdays,\n                weekDays: '',\n                weeks: ''\n              };\n            } else if (this.typeOfMonthSelection == 'weekOfMonth') {\n              this.recurrenceMsg = '';\n              this.isError = false;\n              this.weeksArray = [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"];\n              this.weekNamesString = '';\n              this.recurrenceDetailsForm.controls.selectedWeekNames.value ? this.recurrenceDetailsForm.controls.selectedWeekNames.value.forEach(element => {\n                switch (element.dayName) {\n                  case \"Monday\":\n                    {\n                      this.weeksArray[0] = '1';\n                      this.weekNamesString = this.weekNamesString + element.dayName + \", \";\n                      break;\n                    }\n                  case \"Tuesday\":\n                    {\n                      this.weeksArray[1] = '1';\n                      this.weekNamesString = this.weekNamesString + element.dayName + \", \";\n                      break;\n                    }\n                  case \"Wednesday\":\n                    {\n                      this.weeksArray[2] = '1';\n                      this.weekNamesString = this.weekNamesString + element.dayName + \", \";\n                      break;\n                    }\n                  case \"Thursday\":\n                    {\n                      this.weeksArray[3] = '1';\n                      this.weekNamesString = this.weekNamesString + element.dayName + \", \";\n                      break;\n                    }\n                  case \"Friday\":\n                    {\n                      this.weeksArray[4] = '1';\n                      this.weekNamesString = this.weekNamesString + element.dayName + \", \";\n                      break;\n                    }\n                  case \"Saturday\":\n                    {\n                      this.weeksArray[5] = '1';\n                      this.weekNamesString = this.weekNamesString + element.dayName + \", \";\n                      break;\n                    }\n                  case \"Sunday\":\n                    {\n                      this.weeksArray[6] = '1';\n                      this.weekNamesString = this.weekNamesString + element.dayName + \", \";\n                      break;\n                    }\n                  default:\n                    {\n                      break;\n                    }\n                }\n              }) : \"\";\n              this.weekNamesString = this.weekNamesString.slice(0, this.weekNamesString.lastIndexOf(','));\n              var weeks = '';\n              var daysOfWek = this.weeksArray.toString();\n              this.recurrenceDetailsForm.controls.selectedWeekNumbers.value ? this.recurrenceDetailsForm.controls.selectedWeekNumbers.value.forEach(element => {\n                weeks = weeks + element.id + \",\";\n              }) : '';\n              weeks = weeks.slice(0, weeks.lastIndexOf(\",\"));\n              if (!weeks || !this.recurrenceDetailsForm.controls.selectedWeekNames.value.length || this.recurrenceDetailsForm.controls.monthsFrequency2.value <= 0) {\n                this.isError = true;\n                return;\n              }\n              this.recurrenceMsg = \"Every \" + this.recurrenceDetailsForm.controls.monthsFrequency2.value + \" month(s) on \" + weeks + \" \" + this.weekNamesString + \" of month\";\n              this.recurrenceDetails = {\n                dateStart: startDate,\n                dateEnd: endDate,\n                type: \"monthly\",\n                frequency: this.recurrenceDetailsForm.controls.monthsFrequency2.value,\n                monthDays: '',\n                weekDays: daysOfWek,\n                weeks: weeks\n              };\n            }\n            break;\n          }\n        case \"annually\":\n          {\n            this.recurrenceMsg = '';\n            this.isError = false;\n            var frequency = this.recurrenceDetailsForm.controls.yearFrequency.value;\n            if (!frequency) {\n              //this.isError = true;\n              return;\n            }\n            this.recurrenceMsg = \"Every \" + frequency + \" year(s)\";\n            this.recurrenceDetails = {\n              dateStart: startDate,\n              dateEnd: endDate,\n              type: \"annually\",\n              frequency: frequency,\n              monthDays: \"\",\n              weekDays: \"\",\n              weeks: ''\n            };\n            break;\n          }\n        default:\n          {\n            break;\n          }\n      }\n      this.bookingService.getCountOfOccurence(this.recurrenceDetails).subscribe(res => {\n        this.allDates = res;\n        this.totalOccurence = res.length;\n        this.displayRecurrencePatern = true;\n        this.confirmRecurrenceDialog();\n      });\n      // this.dialogRef.close(result);\n    }\n\n    onSelection(event, name) {\n      this.loadTabData(name);\n      event.preventDefault();\n    }\n    loadTabData(name) {\n      this.hidePrevTab(this.tab_name_clicked);\n      this.tab_name_clicked = name;\n      $(\"#locTabContent\").hide();\n      switch (this.tab_name_clicked) {\n        case \"daily\":\n          {\n            $(\"#locTabContent,#daily\").show();\n            this.isError = false;\n            break;\n          }\n        case \"weekly\":\n          {\n            $(\"#locTabContent,#weekly\").show();\n            this.isError = false;\n            break;\n          }\n        case \"monthly\":\n          {\n            $(\"#locTabContent,#monthly\").show();\n            this.isError = false;\n            break;\n          }\n        case \"annually\":\n          {\n            $(\"#locTabContent,#annually\").show();\n            var year = new Date().getFullYear() + 10;\n            this.maxDate = new Date(new Date().setFullYear(year));\n            this.isError = false;\n            break;\n          }\n        default:\n          {\n            break;\n          }\n      }\n    }\n    hidePrevTab(name) {\n      switch (name) {\n        case \"daily\":\n          {\n            $(\"#daily\").hide();\n            break;\n          }\n        case \"weekly\":\n          {\n            $(\"#weekly\").hide();\n            break;\n          }\n        case \"monthly\":\n          {\n            $(\"#monthly\").hide();\n            break;\n          }\n        case \"annually\":\n          {\n            $(\"#annually\").hide();\n            break;\n          }\n        default:\n          {\n            break;\n          }\n      }\n    }\n    onSelectMonthlyType(event) {\n      if (event.currentTarget.id == 'dayOfMonth') {\n        this.isError = false;\n        this.isDayOfMonthVisible = true;\n        this.isWeekOfMonthVisible = false;\n        this.typeOfMonthSelection = 'dayOfMonth';\n        setTimeout(() => {\n          this.recurrenceDetailsForm.patchValue({\n            monthsFrequency2: 1,\n            selectedWeekNames: '',\n            selectedWeekNumbers: ''\n          });\n        }, 10);\n      } else if (event.currentTarget.id == 'weekOfMonth_months') {\n        this.isError = false;\n        this.isWeekOfMonthVisible = true;\n        this.isDayOfMonthVisible = false;\n        this.typeOfMonthSelection = 'weekOfMonth';\n        setTimeout(() => {\n          this.recurrenceDetailsForm.patchValue({\n            monthsFrequency: 1,\n            selectedDayNumbers: ''\n          });\n        }, 10);\n      }\n    }\n    confirmDialog() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        key: 'onCancel',\n        accept: () => {\n          this.dialogRef.close(false);\n        }\n      });\n    }\n    confirmRecurrenceDialog() {\n      this.confirmationService.confirm({\n        icon: 'pi pi-exclamation-triangle',\n        key: 'onSaveRecurrence',\n        accept: () => {\n          this.dialogRef.close();\n        }\n      });\n    }\n    clickWeekName(event) {}\n    onContinue() {\n      this.displayRecurrencePatern = false;\n      var result = [this.recurrenceDetails, this.recurrenceMsg, this.totalOccurence, this.allDates];\n      this.dialogRef.close(result);\n    }\n    formatDate(date) {\n      if (date != null) {\n        var date = new Date(date);\n        var userTimezoneOffset = date.getTimezoneOffset() * 60000;\n        var a = new Date(date.getTime() - userTimezoneOffset);\n        return a;\n      } else {\n        return null;\n      }\n    }\n    checkDateValidation() {\n      return control => {\n        if (control.value !== undefined && control.value != null) {\n          this.recurrenceDetailsForm.controls['dateStart'].setErrors(null);\n          this.recurrenceDetailsForm.controls['dateEnd'].setErrors(null);\n          this.recurrenceDetailsForm.clearAsyncValidators();\n          this.recurrenceDetailsForm.updateValueAndValidity();\n          var dateFrom = new Date(this.recurrenceDetailsForm.controls['dateStart'].value);\n          var dateTo = new Date(this.recurrenceDetailsForm.controls['dateEnd'].value);\n          if (dateFrom.getTime() >= dateTo.getTime() && this.recurrenceDetailsForm.controls['dateEnd'].value != null) {\n            this.recurrenceDetailsForm.controls['dateStart'].setErrors({\n              'incorrect': true\n            });\n            this.recurrenceDetailsForm.updateValueAndValidity();\n            this.errorMsg = ' date end should be greater than date start.';\n            return {\n              'incorrect': true\n            };\n          } else {\n            return null;\n          }\n        }\n        return null;\n      };\n    }\n    checked() {\n      this.isError = false;\n    }\n    static #_ = this.ɵfac = function AddRecurrenceDetailsComponent_Factory(t) {\n      return new (t || AddRecurrenceDetailsComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.BookingService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddRecurrenceDetailsComponent,\n      selectors: [[\"app-add-recurrence-details\"]],\n      decls: 97,\n      vars: 51,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [3, \"formGroup\"], [\"id\", \"recurrenceDetailsForm\"], [2, \"width\", \"30%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateStart\", \"formControlName\", \"dateStart\", \"inputId\", \"icon\", 3, \"minDate\", \"showIcon\", \"maxDate\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"dateEnd\", \"formControlName\", \"dateEnd\", \"inputId\", \"icon\", 3, \"minDate\", \"showIcon\", \"maxDate\"], [4, \"ngIf\"], [1, \"tabs-rounded\"], [\"id\", \"asset_tabs\", 1, \"nav\", \"nav-tabs\", 2, \"font-size\", \"12px\", \"border-bottom\", \"0\"], [1, \"perform-li\", 3, \"ngClass\"], [\"href\", \"/\", \"prevent-default\", \"\", \"data-toggle\", \"tab\", 3, \"click\"], [\"href\", \"/\", \"data-toggle\", \"tab\", 3, \"click\"], [\"id\", \"locTabContent\", 1, \"tab-content\"], [\"id\", \"daily\", 1, \"tab-pane\"], [1, \"input-label-custom\", 2, \"display\", \"flex\", \"justify-content\", \"baseline\", \"margin-top\", \"15px\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"daysFrequency\", \"maxlength\", \"9\", 1, \"form-control\"], [\"id\", \"weekly\", 1, \"tab-pane\"], [2, \"margin-top\", \"15px\", \"display\", \"flex\"], [\"class\", \"field-checkbox\", 4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"flex\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"weeksFrequency\", \"maxlength\", \"9\", 1, \"form-control\"], [\"id\", \"monthly\", 1, \"tab-pane\"], [\"mydiv1\", \"\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"margin-top\", \"15px\"], [\"type\", \"radio\", \"name\", \"monthly_type\", \"id\", \"dayOfMonth\", \"checked\", \"true\", 3, \"click\"], [\"appendTo\", \"body\", \"formControlName\", \"selectedDayNumbers\", \"optionLabel\", \"day\", 3, \"options\", \"placeholder\", \"readonly\", \"panelStyle\", \"onChange\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"monthsFrequency\", \"maxlength\", \"9\", 1, \"form-control\", 3, \"readonly\"], [1, \"form-field-lable\", 2, \"margin-left\", \"4px\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\"], [\"mydiv\", \"\"], [\"type\", \"radio\", \"name\", \"monthly_type\", \"id\", \"weekOfMonth_months\", \"placeholder\", \"1\", 3, \"click\"], [\"formControlName\", \"selectedWeekNumbers\", \"appendTo\", \"body\", \"optionLabel\", \"id\", 3, \"options\", \"placeholder\", \"readonly\", \"panelStyle\", \"onChange\"], [\"formControlName\", \"selectedWeekNames\", \"appendTo\", \"body\", \"optionLabel\", \"dayName\", 3, \"options\", \"readonly\", \"placeholder\", \"panelStyle\", \"onPanelHide\", \"onChange\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"monthsFrequency2\", \"id\", \"dayOfMonth_months\", \"maxlength\", \"9\", 1, \"form-control\", 3, \"readonly\"], [\"id\", \"annually\", 1, \"tab-pane\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"formControlName\", \"yearFrequency\", \"maxlength\", \"9\", 1, \"form-control\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"header\", \"Confirmation\", \"key\", \"onCancel\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Recurrence Details\", 3, \"visible\", \"closable\", \"visibleChange\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"footer\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [1, \"field-checkbox\"], [1, \"card-container\"], [\"name\", \"group2\", 3, \"formControlName\", \"value\", \"inputId\", \"onChange\"], [3, \"for\"], [1, \"recurrence-details-container\"], [1, \"recurrence-details-item\"], [\"class\", \"recurrence-details-item\", 4, \"ngIf\"], [1, \"total-occurence\"], [\"icon\", \"pi pi-times\", \"label\", \"Back\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"icon\", \"pi pi-check\", \"label\", \"Continue\", 3, \"click\"]],\n      template: function AddRecurrenceDetailsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Define Recurrence Pattern\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"form\", 2)(4, \"mat-card-content\", 3)(5, \"table\")(6, \"tr\")(7, \"td\", 4)(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"p-calendar\", 9);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(14, \"td\", 4)(15, \"div\", 5)(16, \"div\", 6)(17, \"div\", 7)(18, \"label\", 8);\n          i0.ɵɵtext(19, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"p-calendar\", 10);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(21, \"tr\")(22, \"td\");\n          i0.ɵɵtemplate(23, AddRecurrenceDetailsComponent_div_23_Template, 3, 0, \"div\", 11);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"div\", 12)(25, \"ul\", 13)(26, \"li\", 14)(27, \"a\", 15);\n          i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_Template_a_click_27_listener($event) {\n            return ctx.onSelection($event, \"daily\");\n          });\n          i0.ɵɵtext(28, \"Daily\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"li\", 14)(30, \"a\", 16);\n          i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_Template_a_click_30_listener($event) {\n            return ctx.onSelection($event, \"weekly\");\n          });\n          i0.ɵɵtext(31, \"Weekly\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(32, \"li\", 14)(33, \"a\", 16);\n          i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_Template_a_click_33_listener($event) {\n            return ctx.onSelection($event, \"monthly\");\n          });\n          i0.ɵɵtext(34, \"Monthly\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"li\", 14)(36, \"a\", 16);\n          i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_Template_a_click_36_listener($event) {\n            return ctx.onSelection($event, \"annually\");\n          });\n          i0.ɵɵtext(37, \"Annually\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(38, \"div\", 17)(39, \"div\", 18)(40, \"div\", 19)(41, \"label\", 20);\n          i0.ɵɵtext(42, \"Every:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(43, \"input\", 21);\n          i0.ɵɵelementStart(44, \"label\", 20);\n          i0.ɵɵtext(45, \"day(s)\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(46, AddRecurrenceDetailsComponent_div_46_Template, 3, 0, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"div\", 22)(48, \"div\", 23)(49, \"label\", 20);\n          i0.ɵɵtext(50, \"Every:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(51, AddRecurrenceDetailsComponent_ul_51_Template, 5, 7, \"ul\", 24);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(52, \"div\", 25)(53, \"label\", 20);\n          i0.ɵɵtext(54, \"for every\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(55, \"input\", 26);\n          i0.ɵɵelementStart(56, \"label\", 20);\n          i0.ɵɵtext(57, \"week(s)\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(58, AddRecurrenceDetailsComponent_div_58_Template, 3, 0, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(59, \"div\", 27, 28)(61, \"div\", 29)(62, \"input\", 30);\n          i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_Template_input_click_62_listener($event) {\n            return ctx.onSelectMonthlyType($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"p-multiSelect\", 31);\n          i0.ɵɵlistener(\"onChange\", function AddRecurrenceDetailsComponent_Template_p_multiSelect_onChange_63_listener() {\n            return ctx.checked();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(64, \"label\", 20);\n          i0.ɵɵtext(65, \"day(s)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(66, \"label\", 20);\n          i0.ɵɵtext(67, \" every\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(68, \"input\", 32);\n          i0.ɵɵelementStart(69, \"label\", 33);\n          i0.ɵɵtext(70, \"month(s)\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(71, \"div\", 34, 35)(73, \"input\", 36);\n          i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_Template_input_click_73_listener($event) {\n            return ctx.onSelectMonthlyType($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(74, \"p-multiSelect\", 37);\n          i0.ɵɵlistener(\"onChange\", function AddRecurrenceDetailsComponent_Template_p_multiSelect_onChange_74_listener() {\n            return ctx.checked();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(75, \"p-multiSelect\", 38);\n          i0.ɵɵlistener(\"onPanelHide\", function AddRecurrenceDetailsComponent_Template_p_multiSelect_onPanelHide_75_listener($event) {\n            return ctx.clickWeekName($event);\n          })(\"onChange\", function AddRecurrenceDetailsComponent_Template_p_multiSelect_onChange_75_listener() {\n            return ctx.checked();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(76, \"label\", 20);\n          i0.ɵɵtext(77, \"every\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(78, \"input\", 39);\n          i0.ɵɵelementStart(79, \"label\", 33);\n          i0.ɵɵtext(80, \"month(s)\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(81, AddRecurrenceDetailsComponent_div_81_Template, 3, 0, \"div\", 11);\n          i0.ɵɵelementStart(82, \"div\", 40)(83, \"div\", 19)(84, \"label\", 20);\n          i0.ɵɵtext(85, \"Every:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(86, \"input\", 41);\n          i0.ɵɵelementStart(87, \"label\", 20);\n          i0.ɵɵtext(88, \"year(s)\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(89, AddRecurrenceDetailsComponent_div_89_Template, 3, 0, \"div\", 11);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(90, \"mat-dialog-actions\", 42)(91, \"p-button\", 43);\n          i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_Template_p_button_click_91_listener() {\n            return ctx.saveRecurrence();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(92, \"p-button\", 44);\n          i0.ɵɵlistener(\"click\", function AddRecurrenceDetailsComponent_Template_p_button_click_92_listener() {\n            return ctx.confirmDialog();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(93, \"p-confirmDialog\", 45);\n          i0.ɵɵelementStart(94, \"p-dialog\", 46);\n          i0.ɵɵlistener(\"visibleChange\", function AddRecurrenceDetailsComponent_Template_p_dialog_visibleChange_94_listener($event) {\n            return ctx.displayRecurrencePatern = $event;\n          });\n          i0.ɵɵtemplate(95, AddRecurrenceDetailsComponent_ng_template_95_Template, 31, 14, \"ng-template\", 47);\n          i0.ɵɵtemplate(96, AddRecurrenceDetailsComponent_ng_template_96_Template, 2, 0, \"ng-template\", 48);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.recurrenceDetailsForm);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"minDate\", ctx.today)(\"showIcon\", false)(\"maxDate\", ctx.maxDate);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"minDate\", ctx.today)(\"showIcon\", false)(\"maxDate\", ctx.maxDate);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", (ctx.recurrenceDetailsForm.controls[\"dateStart\"] == null ? null : ctx.recurrenceDetailsForm.controls[\"dateStart\"].errors) && ctx.recurrenceDetailsForm.controls[\"dateStart\"].dirty || (ctx.recurrenceDetailsForm.controls[\"dateEnd\"] == null ? null : ctx.recurrenceDetailsForm.controls[\"dateEnd\"].errors) && ctx.recurrenceDetailsForm.controls[\"dateEnd\"].dirty);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(38, _c1, ctx.tab_name_clicked === \"daily\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(40, _c1, ctx.tab_name_clicked === \"weekly\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(42, _c1, ctx.tab_name_clicked === \"monthly\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(44, _c1, ctx.tab_name_clicked === \"annually\"));\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngIf\", ctx.recurrenceDetailsForm.controls.daysFrequency.value < 1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.weekNames);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.recurrenceDetailsForm.controls.weeksFrequency.value < 1);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"options\", ctx.dayOfMonth)(\"placeholder\", \"Select day(s)\")(\"readonly\", !ctx.isDayOfMonthVisible)(\"panelStyle\", i0.ɵɵpureFunction0(46, _c2));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"readonly\", !ctx.isDayOfMonthVisible);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"options\", ctx.weekNums)(\"placeholder\", \"Select week(s)\")(\"readonly\", !ctx.isWeekOfMonthVisible)(\"panelStyle\", i0.ɵɵpureFunction0(47, _c2));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"options\", ctx.weekNames)(\"readonly\", !ctx.isWeekOfMonthVisible)(\"placeholder\", \"Select day(s) of week\")(\"panelStyle\", i0.ɵɵpureFunction0(48, _c3));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"readonly\", !ctx.isWeekOfMonthVisible);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isError);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.recurrenceDetailsForm.controls.yearFrequency.value < 1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.recurrenceDetailsForm.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(49, _c4));\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(50, _c5));\n          i0.ɵɵproperty(\"visible\", ctx.displayRecurrencePatern)(\"closable\", false);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i3.PrimeTemplate, i6.Calendar, i7.Button, i8.Dialog, i9.MultiSelect, i10.ConfirmDialog, i11.Checkbox, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i12.MatLegacyCardContent, i13.NzTableCellDirective, i13.NzTrDirective, i14.NumbersOnlyDirective, i5.DatePipe],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px;background-color:#fff!important}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;background-color:#fff!important}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}[_ngcontent-%COMP%]::placeholder{color:#555;opacity:1}[_ngcontent-%COMP%]:-ms-input-placeholder{color:#555}[_ngcontent-%COMP%]::-ms-input-placeholder{color:#555}.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{border-radius:0!important}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card[_ngcontent-%COMP%]{padding:0;border:thin double rgb(181,155,90)}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}input[type=text][_ngcontent-%COMP%], input[type=time][_ngcontent-%COMP%]{background-color:#fff!important;border-color:#879cc9!important;height:20px!important;width:10%;margin:0 5px}#noOfOccurence[_ngcontent-%COMP%]{background-color:#fff!important;border-color:#879cc9!important;height:24px!important;width:100%!important;margin:0 5px}input[type=radio][_ngcontent-%COMP%], input[type=checkbox][_ngcontent-%COMP%]{box-sizing:border-box;padding:0;margin:5px 5px 15px}.tabs-rounded[_ngcontent-%COMP%] > ul[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{border-top-left-radius:7px;border-top-right-radius:7px;border-bottom:3px solid #879cc9!important;outline:none;margin-top:20px}span[_ngcontent-%COMP%]{height:24px!important;font-size:10px!important}.trFont[_ngcontent-%COMP%]{font-size:11px!important}.panel-group-custom[_ngcontent-%COMP%]{margin:-12px!important}label[_ngcontent-%COMP%]{font-size:10px;font-weight:500;padding:0 0 0 3px;margin-bottom:-10px!important;margin-left:1px}.nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{position:relative;display:block}.nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{position:relative;display:block;background-color:#879cc9;color:#fff;padding:5px 10px}.nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{text-decoration:none;color:#000;background-color:#fff}.nav[_ngcontent-%COMP%] > li.disabled[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{color:#777}.nav[_ngcontent-%COMP%] > li.disabled[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav[_ngcontent-%COMP%] > li.disabled[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{color:#777;text-decoration:none;cursor:not-allowed;background-color:transparent}.nav[_ngcontent-%COMP%]   .open[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .nav[_ngcontent-%COMP%]   .open[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav[_ngcontent-%COMP%]   .open[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{background-color:#eee;border-color:#337ab7}.nav[_ngcontent-%COMP%]   .nav-divider[_ngcontent-%COMP%]{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.nav[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%] > img[_ngcontent-%COMP%]{max-width:none}.nav-tabs[_ngcontent-%COMP%]{border-bottom:1px solid #ddd}.nav-tabs[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{float:left;margin-bottom:-1px}.nav-tabs[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{margin-right:2px;line-height:1.25;min-width:80px;border:1px solid transparent;border-radius:6px 6px 0 0}.nav-tabs[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover{border-color:#eee #eee #ddd}.nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover, .nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:focus{color:#000;cursor:default;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent}.nav-tabs.nav-justified[_ngcontent-%COMP%]{width:100%;border-bottom:0}.nav-tabs.nav-justified[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{float:none}.nav-tabs.nav-justified[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{margin-bottom:5px;text-align:center}.nav-tabs.nav-justified[_ngcontent-%COMP%] > .dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{top:auto;left:auto}[_nghost-%COMP%]     .p-multiselect{margin:0 7px 10px 5px;max-width:15px;max-height:1.6rem}[_nghost-%COMP%]     .multiselect-custom-virtual-scroll .p-multiselect{min-width:10rem}.grid-container[_ngcontent-%COMP%]{padding-top:10px}.card-container[_ngcontent-%COMP%]{display:flex;flex-direction:row}.form-control[_ngcontent-%COMP%]:disabled, input[type=text][_ngcontent-%COMP%]:disabled, .p-multiselect[_ngcontent-%COMP%]:disabled, .form-control[_ngcontent-%COMP%]:read-only, .ng-select-disabled[_ngcontent-%COMP%]{background-color:#e9ecef!important;opacity:1;cursor:no-drop!important}[_nghost-%COMP%]     .p-multiselect .p-multiselect-label.p-placeholder{color:#6c757d;padding-top:7px;font-family:Roboto}ul[_ngcontent-%COMP%]{padding-left:1rem!important}.recurrence-details-container[_ngcontent-%COMP%]{display:grid;grid-template-columns:auto auto;grid-gap:1rem}.recurrence-details-item[_ngcontent-%COMP%]{display:flex;justify-content:space-between;text-align:start;height:24px}.total-occurence[_ngcontent-%COMP%]{font-size:13px;font-weight:700}span[_ngcontent-%COMP%]{font-size:12px;font-weight:500}\"]\n    });\n  }\n  return AddRecurrenceDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}