{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class RoleService {\n  constructor(roleSrv, roleSaveSrv) {\n    this.roleSrv = roleSrv;\n    this.roleSaveSrv = roleSaveSrv;\n    this.API_NAME = \"userRole\";\n    this.EVENT = \"\";\n  }\n  getUserRoles(data) {\n    this.EVENT = \"all\";\n    return this.roleSrv.search(this.API_NAME, this.EVENT, data);\n  }\n  getUserRoleById(id) {\n    this.EVENT = \"get\";\n    return this.roleSrv.getSingleById(this.API_NAME, this.EVENT, id);\n  }\n  saveRecord(items) {\n    this.EVENT = \"save\";\n    return this.roleSaveSrv.add(this.API_NAME, this.EVENT, items);\n  }\n  deleteRecord(id) {\n    this.EVENT = \"delete\";\n    return this.roleSrv.delete(this.API_NAME, this.EVENT, id);\n  }\n  checkUserRoleExists(user_role) {\n    return this.roleSrv.getSingleById(this.API_NAME, 'check', user_role);\n  }\n  static #_ = this.ɵfac = function RoleService_Factory(t) {\n    return new (t || RoleService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoleService,\n    factory: RoleService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RoleService","constructor","roleSrv","roleSaveSrv","API_NAME","EVENT","getUserRoles","data","search","getUserRoleById","id","getSingleById","saveRecord","items","add","deleteRecord","delete","checkUserRoleExists","user_role","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\system\\roles\\service\\role.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { UserRoles } from '../model/user-role.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n  API_NAME: string =\"userRole\";\n  EVENT:string=\"\";\n  constructor(\n    private roleSrv:DataService<any>,\n    private roleSaveSrv:DataService<any>\n  ) { }\n\n  public getUserRoles(data:any){\n    this.EVENT=\"all\";\n    return this.roleSrv.search(this.API_NAME, this.EVENT,data);\n  }\n  public getUserRoleById(id:any){\n    this.EVENT = \"get\";\n    return this.roleSrv.getSingleById(this.API_NAME,this.EVENT,id);\n  }\n  public saveRecord(items:any){\n    this.EVENT = \"save\";\n    return this.roleSaveSrv.add(this.API_NAME,this.EVENT,items);\n  }\n  public deleteRecord(id:any){\n    this.EVENT = \"delete\";\n    return this.roleSrv.delete(this.API_NAME,this.EVENT,id);\n  }\n  public checkUserRoleExists(user_role: any) {\n    return this.roleSrv.getSingleById(this.API_NAME, 'check', user_role);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YACUC,OAAwB,EACxBC,WAA4B;IAD5B,KAAAD,OAAO,GAAPA,OAAO;IACP,KAAAC,WAAW,GAAXA,WAAW;IAJrB,KAAAC,QAAQ,GAAU,UAAU;IAC5B,KAAAC,KAAK,GAAQ,EAAE;EAIX;EAEGC,YAAYA,CAACC,IAAQ;IAC1B,IAAI,CAACF,KAAK,GAAC,KAAK;IAChB,OAAO,IAAI,CAACH,OAAO,CAACM,MAAM,CAAC,IAAI,CAACJ,QAAQ,EAAE,IAAI,CAACC,KAAK,EAACE,IAAI,CAAC;EAC5D;EACOE,eAAeA,CAACC,EAAM;IAC3B,IAAI,CAACL,KAAK,GAAG,KAAK;IAClB,OAAO,IAAI,CAACH,OAAO,CAACS,aAAa,CAAC,IAAI,CAACP,QAAQ,EAAC,IAAI,CAACC,KAAK,EAACK,EAAE,CAAC;EAChE;EACOE,UAAUA,CAACC,KAAS;IACzB,IAAI,CAACR,KAAK,GAAG,MAAM;IACnB,OAAO,IAAI,CAACF,WAAW,CAACW,GAAG,CAAC,IAAI,CAACV,QAAQ,EAAC,IAAI,CAACC,KAAK,EAACQ,KAAK,CAAC;EAC7D;EACOE,YAAYA,CAACL,EAAM;IACxB,IAAI,CAACL,KAAK,GAAG,QAAQ;IACrB,OAAO,IAAI,CAACH,OAAO,CAACc,MAAM,CAAC,IAAI,CAACZ,QAAQ,EAAC,IAAI,CAACC,KAAK,EAACK,EAAE,CAAC;EACzD;EACOO,mBAAmBA,CAACC,SAAc;IACvC,OAAO,IAAI,CAAChB,OAAO,CAACS,aAAa,CAAC,IAAI,CAACP,QAAQ,EAAE,OAAO,EAAEc,SAAS,CAAC;EACtE;EAAC,QAAAC,CAAA,G;qBA1BUnB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}