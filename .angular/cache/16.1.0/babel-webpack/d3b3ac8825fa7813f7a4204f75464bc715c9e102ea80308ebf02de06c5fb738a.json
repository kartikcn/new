{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from '../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../background-loc/model/DTO/FloorFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"../svg-view/services/svg-view.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"src/app/services/enum.service\";\nimport * as i8 from \"../employee/services/employee.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@ng-select/ng-select\";\nimport * as i11 from \"primeng/button\";\nimport * as i12 from \"primeng/toast\";\nimport * as i13 from \"primeng/confirmdialog\";\nimport * as i14 from \"../svg-view/svg-view.component\";\nimport * as i15 from \"../Helpdesk/work-teams/widgets/em-list/em-list.component\";\nfunction AssignEmployeeRoomComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AssignEmployeeRoomComponent_div_21_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.selectedRoomsMessage, \" \");\n  }\n}\nfunction AssignEmployeeRoomComponent_div_21_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"app-svg-view\", 28);\n    i0.ɵɵlistener(\"onRoomClick\", function AssignEmployeeRoomComponent_div_21_div_14_Template_app_svg_view_onRoomClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.roomOnClickListener($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AssignEmployeeRoomComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 17)(2, \"div\", 18)(3, \"div\", 19)(4, \"app-em-list\", 20);\n    i0.ɵɵlistener(\"parentFun\", function AssignEmployeeRoomComponent_div_21_Template_app_em_list_parentFun_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.getData($event));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 21)(6, \"div\", 22)(7, \"div\")(8, \"div\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, AssignEmployeeRoomComponent_div_21_div_10_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\")(12, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AssignEmployeeRoomComponent_div_21_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onAssigntoRooms());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function AssignEmployeeRoomComponent_div_21_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onCancelSelection());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(14, AssignEmployeeRoomComponent_div_21_div_14_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r1.selectionMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedSvgElementId.length > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.selectedSvgElementId.length > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r1.selectedSvgElementId.length > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.viewSvg);\n  }\n}\nfunction AssignEmployeeRoomComponent_ngx_spinner_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 29)(1, \"p\", 30);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport class AssignEmployeeRoomComponent {\n  constructor(blServ, authSrv, svgViewSrv, formBuilder, cdr, spinner, messageService, enumservice, employeeservice) {\n    this.blServ = blServ;\n    this.authSrv = authSrv;\n    this.svgViewSrv = svgViewSrv;\n    this.formBuilder = formBuilder;\n    this.cdr = cdr;\n    this.spinner = spinner;\n    this.messageService = messageService;\n    this.enumservice = enumservice;\n    this.employeeservice = employeeservice;\n    this.allBl = [];\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.rowCount = 5;\n    this.viewSvg = false;\n    this.fileString = '';\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.rmcatdata = [];\n    this.rmtypeData = [];\n    this.showrmtypetable = false;\n    this.selectedRmCat = '';\n    this.selectedRmType = '';\n    this.selectedSvgElementId = '';\n    this.allSVGRoomsData = [];\n    this.allowSave = false;\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.selectedEmployeeId = '';\n    this.selectedEmployeeName = '';\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    this.limitRm = 0;\n    this.offsetRm = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n    this.filterPanel = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    // this.compId = this.authSrv.getLoggedInUserCompId();\n    // this.loadAllBuilding();\n    // this.loadAllFloor();\n    this.scrollToEndBl();\n    this.scrollToEndFl();\n    this.loadNoneCommonAreaEnum();\n  }\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe(res => {\n      this.enumBL = res;\n      this.enumBL = res.map(i => {\n        i.name = i.id + ' - ' + i.name;\n        return i;\n      });\n      //this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe(res => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map(i => {\n        i.name = i.blId + '-' + i.id + ' - ' + i.name;\n        return i;\n      });\n      //this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n  loadNoneCommonAreaEnum() {\n    this.enumservice.getEnums().subscribe(res => {\n      let commonareaEnumList = res.filter(t => t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase() && t.enumValue.toLocaleUpperCase() === 'None'.toLocaleUpperCase());\n      this.commonAreaTypeNoneEnumValue = commonareaEnumList[0].id;\n    });\n  }\n  onSelectBlCode($event) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        flId: null\n      });\n      this.loadFloorCode($event.id);\n    }, 10);\n    if ($event.id != null) {\n      this.loadFloorCode($event.id);\n    } else {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndFl();\n    }\n  }\n  loadFloorCode(bl_id) {\n    if (bl_id != null) {\n      // this.enumFL = [];\n      // this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id)\n      // this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.filterCriteria = {\n        fieldName: \"bl.blId\",\n        value: bl_id,\n        matchMode: \"equals\",\n        limit: 0,\n        offset: 0\n      };\n      this.scrollToEndFl();\n    }\n  }\n  onSelectFlCode(event) {\n    if (event.id != null) {\n      const blData = {\n        blId: event.blId,\n        blNameString: event.blNameString\n      };\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId\n        });\n      }, 10);\n    } else {\n      // this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n  onSearch() {\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n    this.selectedSvgElementId = '';\n    this.displayNoFloorPlanInfo = false;\n    this.allowSave = false;\n    this.showrmtypetable = false;\n    this.selectedRmCat = '';\n    this.selectedRmType = '';\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.getAllRoomsOfSvg(blId, flId);\n    let flData = this.enumFL.filter(i => i.blId == blId && i.id == flId);\n    //@ts-ignore\n    if (flData[0].svgName != null) {\n      let data = {\n        id: flId,\n        blId: blId,\n        name: '',\n        compId: this.compId,\n        svgName: '',\n        flInfo: '',\n        units: ''\n      };\n      this.svgViewSrv.getSVGFile(data).subscribe(res => {\n        if (res.code != 409) {\n          setTimeout(() => {\n            this.fileString = res.fileContent;\n            this.viewSvg = true;\n            this.cdr.detectChanges();\n            this.spinner.hide();\n            this.showSpinner = false;\n            this.selectionMessage = \"Please select Employee\";\n          }, 1000);\n        } else {\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.displayNoFloorPlanInfo = true;\n        }\n      });\n    } else {\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = true;\n    }\n  }\n  getAllRoomsOfSvg(blId, flId) {\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.allSVGRoomsData = [];\n    let data = {\n      id: '',\n      name: '',\n      blId: blId,\n      flId: flId,\n      svgElementId: '',\n      compId: this.compId\n    };\n    this.blServ.getRmList(data).subscribe(res => {\n      if (res) {\n        this.allSVGRoomsData = res.filter(each => each.svgElementId != null && each.commonAreaType == this.commonAreaTypeNoneEnumValue);\n        this.allSVGRoomsData.forEach(rm => {\n          let idObj = {\n            roomElementId: rm.svgElementId,\n            assetElementId: null\n          };\n          let colorObj = {\n            roomColor: \"#ff6666\",\n            assetColor: null\n          };\n          let contentData = {\n            blId: parseInt(blId),\n            flId: parseInt(flId),\n            rmId: rm.rmId,\n            label: [rm.rmId],\n            showLabel: true,\n            highlightRoom: true,\n            svgElementId: idObj,\n            color: colorObj,\n            rmCode: '',\n            zoomAtRoom: false\n          };\n          this.svgRoomData.content.push(contentData);\n        });\n        this.svgRoomData.blId = parseInt(blId);\n        this.svgRoomData.flId = parseInt(flId);\n        this.svgRoomData.locate = \"room\";\n      }\n    });\n  }\n  onClear() {\n    this.viewSvg = false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.selectedSvgElementId = '';\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.showrmtypetable = false;\n    this.selectedRmCat = '';\n    this.selectedRmType = '';\n    this.allSVGRoomsData = [];\n    this.allowSave = false;\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null\n    });\n    this.selectionMessage = '';\n    this.selectionHighlightColor = '';\n    this.selectedRoomsMessage = '';\n  }\n  getData(event) {\n    this.selectedEmployeeId = event.data.emId;\n    this.selectedEmployeeName = event.data.firstName;\n    this.allowSave = true;\n    this.selectionMessage = \"Please select a room assign to : \" + this.selectedEmployeeName;\n    this.employeeservice.getEmById(this.selectedEmployeeId).subscribe(res => {\n      if (res) {\n        this.selectedEmployee = res;\n      }\n    });\n  }\n  roomOnClickListener(elementN) {\n    if (this.allowSave) {\n      this.selectedRoomsMessage = '';\n      let svgelid = '';\n      if (elementN.startsWith(\"label\")) {\n        svgelid = elementN.substring(\"label_\".length);\n      } else {\n        svgelid = elementN;\n      }\n      this.selectedSvgElementId = svgelid;\n      this.svgRoomData.content.forEach(svgData => {\n        if (svgData.svgElementId.roomElementId == this.selectedSvgElementId) {\n          svgData.highlightRoom = true;\n          svgData.color.roomColor = \"#6666ff\";\n          this.selectedRoomsMessage = \"Selected Room : \" + svgData.rmId;\n        } else {\n          svgData.highlightRoom = true;\n          svgData.color.roomColor = \"#ff6666\";\n        }\n      });\n      this.cdr.detectChanges();\n      this.svgViewComp.loadByDetails();\n    }\n  }\n  onAssigntoRooms() {\n    this.messageService.clear();\n    const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId == this.selectedSvgElementId);\n    let empData = this.selectedEmployee;\n    empData.employeeLocation.blId = matchingObj.blId;\n    empData.employeeLocation.flId = matchingObj.flId;\n    empData.employeeLocation.rmId = matchingObj.rmId;\n    this.employeeservice.saveEmployee(empData).subscribe(res => {\n      if (res.code == 200) {\n        this.messageService.add({\n          key: 'employeeroomMsg',\n          severity: 'success',\n          summary: 'Record updated',\n          detail: 'Employee updated successfully'\n        });\n        this.onSearch();\n      }\n    });\n  }\n  onCancelSelection() {\n    this.onSearch();\n  }\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blServ.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n      this.enumBL = res;\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n    });\n  }\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blServ.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n      this.enumFL = res;\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n    });\n  }\n  searchBl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"blName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndBl();\n  }\n  searchFl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"flName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndFl();\n  }\n  updateBlList(blData) {\n    this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n    this.enumBL = this.enumBL.filter(t => t.blId !== null);\n    this.enumBL.unshift(blData);\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n  updateFlList(flData) {\n    this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n    this.enumFL = this.enumFL.filter(t => t.flId !== null);\n    this.enumFL.unshift(flData);\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n  static #_ = this.ɵfac = function AssignEmployeeRoomComponent_Factory(t) {\n    return new (t || AssignEmployeeRoomComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.SvgViewService), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i5.NgxSpinnerService), i0.ɵɵdirectiveInject(i6.MessageService), i0.ɵɵdirectiveInject(i7.EnumService), i0.ɵɵdirectiveInject(i8.EmployeeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AssignEmployeeRoomComponent,\n    selectors: [[\"app-assign-employee-room\"]],\n    viewQuery: function AssignEmployeeRoomComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SvgViewComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 25,\n    vars: 11,\n    consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\"], [2, \"margin\", \"5px 0 0 5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [\"key\", \"employeeroomMsg\", \"position\", \"top-center\"], [\"key\", \"employeeroomGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"card\", \"no-file-found\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"600px\"], [2, \"width\", \"25%\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\"], [3, \"parentFun\"], [2, \"width\", \"70%\", \"margin\", \"5px\", \"height\", \"550px\"], [2, \"height\", \"50px\", \"display\", \"flex\", \"justify-content\", \"space-between\"], [4, \"ngIf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"style\", \"height:500px;\", 4, \"ngIf\"], [2, \"height\", \"500px\"], [3, \"onRoomClick\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function AssignEmployeeRoomComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 6);\n        i0.ɵɵlistener(\"change\", function AssignEmployeeRoomComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.onSelectBlCode($event);\n        })(\"scrollToEnd\", function AssignEmployeeRoomComponent_Template_ng_select_scrollToEnd_8_listener() {\n          return ctx.scrollToEndBl();\n        })(\"search\", function AssignEmployeeRoomComponent_Template_ng_select_search_8_listener($event) {\n          return ctx.searchBl($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ng-select\", 7);\n        i0.ɵɵlistener(\"change\", function AssignEmployeeRoomComponent_Template_ng_select_change_13_listener($event) {\n          return ctx.onSelectFlCode($event);\n        })(\"scrollToEnd\", function AssignEmployeeRoomComponent_Template_ng_select_scrollToEnd_13_listener() {\n          return ctx.scrollToEndFl();\n        })(\"search\", function AssignEmployeeRoomComponent_Template_ng_select_search_13_listener($event) {\n          return ctx.searchFl($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"td\", 3)(15, \"td\", 3);\n        i0.ɵɵelementStart(16, \"td\", 3)(17, \"div\", 8)(18, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function AssignEmployeeRoomComponent_Template_button_click_18_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AssignEmployeeRoomComponent_Template_button_click_19_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵtemplate(20, AssignEmployeeRoomComponent_div_20_Template, 3, 0, \"div\", 11);\n        i0.ɵɵtemplate(21, AssignEmployeeRoomComponent_div_21_Template, 15, 5, \"div\", 12);\n        i0.ɵɵtemplate(22, AssignEmployeeRoomComponent_ngx_spinner_22_Template, 3, 1, \"ngx-spinner\", 13);\n        i0.ɵɵelement(23, \"p-toast\", 14)(24, \"p-confirmDialog\", 15);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayNoFloorPlanInfo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    dependencies: [i9.NgIf, i10.NgSelectComponent, i11.ButtonDirective, i12.Toast, i13.ConfirmDialog, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.NgxSpinnerComponent, i14.SvgViewComponent, i15.EmListComponent],\n    styles: [\".no-file-found[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 600px;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-scrollable-body {\\n  overflow-y: auto !important;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-scrollable-header-box {\\n  padding: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvYXNzaWduLWVtcGxveWVlLXJvb20vYXNzaWduLWVtcGxveWVlLXJvb20uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8uLi8uLi8uLi9NYW5hdiUyMEd1cHRhL0Rvd25sb2Fkcy9mbXMvZm1zL2Zyb250ZW5kL2Ztc19mcm9udGVuZC9zcmMvYXBwL3VpL2Fzc2lnbi1lbXBsb3llZS1yb29tL2Fzc2lnbi1lbXBsb3llZS1yb29tLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FDVko7O0FEY0E7RUFDSSwyQkFBQTtBQ1hKOztBRGNBO0VBQ0ksdUJBQUE7QUNYSiIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy9zcmMvc2Nzcy92YXJpYWJsZXMnO1xuXG4vLyA6aG9zdCA6Om5nLWRlZXAgLnAtZGlhbG9nIC5wLWRpYWxvZy1oZWFkZXIge1xuLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICR0b29sYmFyO1xuLy8gICAgIGNvbG9yOiBibGFjaztcbi8vICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4vLyAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbi8vICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XG4vLyAgICAgaGVpZ2h0OiAxMHB4ICFpbXBvcnRhbnQ7XG4vLyB9XG5cbi5uby1maWxlLWZvdW5ke1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDYwMHB4O1xufVxuXG5cbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1ib2R5IHtcbiAgICBvdmVyZmxvdy15OiBhdXRvICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1oZWFkZXItYm94e1xuICAgIHBhZGRpbmc6MHB4ICFpbXBvcnRhbnQ7XG59IiwiLm5vLWZpbGUtZm91bmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA2MDBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWJvZHkge1xuICBvdmVyZmxvdy15OiBhdXRvICFpbXBvcnRhbnQ7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1oZWFkZXItYm94IHtcbiAgcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","MessageService","SvgRoomData","SvgViewComponent","UtilConstant","BuildingFilterInputDTO","FloorFilterInputDTO","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r3","selectedRoomsMessage","ɵɵlistener","AssignEmployeeRoomComponent_div_21_div_14_Template_app_svg_view_onRoomClick_1_listener","$event","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","roomOnClickListener","AssignEmployeeRoomComponent_div_21_Template_app_em_list_parentFun_4_listener","_r8","ctx_r7","getData","ɵɵtemplate","AssignEmployeeRoomComponent_div_21_div_10_Template","AssignEmployeeRoomComponent_div_21_Template_button_click_12_listener","ctx_r9","onAssigntoRooms","AssignEmployeeRoomComponent_div_21_Template_button_click_13_listener","ctx_r10","onCancelSelection","AssignEmployeeRoomComponent_div_21_div_14_Template","ɵɵtextInterpolate","ctx_r1","selectionMessage","ɵɵproperty","selectedSvgElementId","length","viewSvg","AssignEmployeeRoomComponent","constructor","blServ","authSrv","svgViewSrv","formBuilder","cdr","spinner","messageService","enumservice","employeeservice","allBl","enumBL","enumFL","enumAllFL","rowCount","fileString","showSpinner","displayNoFloorPlanInfo","svgRoomData","rmcatdata","rmtypeData","showrmtypetable","selectedRmCat","selectedRmType","allSVGRoomsData","allowSave","selectionHighlightColor","selectedEmployeeId","selectedEmployeeName","limitBl","offsetBl","limitFl","offsetFl","limitRm","offsetRm","filterCriteria","fieldName","value","matchMode","limit","offset","scrollLimit","SCROLL_LIMIT","filterPanel","group","blId","required","flId","ngOnInit","scrollToEndBl","scrollToEndFl","loadNoneCommonAreaEnum","loadAllBuilding","getALLBuilding","subscribe","res","map","i","name","id","loadAllFloor","getALLFloor","getEnums","commonareaEnumList","filter","t","tableName","toLocaleUpperCase","enumValue","commonAreaTypeNoneEnumValue","onSelectBlCode","setTimeout","patchValue","loadFloorCode","bl_id","onSelectFlCode","event","blData","blNameString","updateBlList","onSearch","controls","show","getAllRoomsOfSvg","flData","svgName","data","compId","flInfo","units","getSVGFile","code","fileContent","detectChanges","hide","svgElementId","getRmList","each","commonAreaType","forEach","rm","idObj","roomElementId","assetElementId","colorObj","roomColor","assetColor","contentData","parseInt","rmId","label","showLabel","highlightRoom","color","rmCode","zoomAtRoom","content","push","locate","onClear","emId","firstName","getEmById","selectedEmployee","elementN","svgelid","startsWith","substring","svgData","svgViewComp","loadByDetails","clear","matchingObj","find","empData","employeeLocation","saveEmployee","add","key","severity","summary","detail","getALLBuildingByScroll","unshift","getALLFloorByScroll","searchBl","term","searchFl","updateFlList","_","ɵɵdirectiveInject","i1","BuildingService","i2","AuthService","i3","SvgViewService","i4","UntypedFormBuilder","ChangeDetectorRef","i5","NgxSpinnerService","i6","i7","EnumService","i8","EmployeeService","_2","selectors","viewQuery","AssignEmployeeRoomComponent_Query","rf","ctx","decls","vars","consts","template","AssignEmployeeRoomComponent_Template","AssignEmployeeRoomComponent_Template_ng_select_change_8_listener","AssignEmployeeRoomComponent_Template_ng_select_scrollToEnd_8_listener","AssignEmployeeRoomComponent_Template_ng_select_search_8_listener","AssignEmployeeRoomComponent_Template_ng_select_change_13_listener","AssignEmployeeRoomComponent_Template_ng_select_scrollToEnd_13_listener","AssignEmployeeRoomComponent_Template_ng_select_search_13_listener","ɵɵelement","AssignEmployeeRoomComponent_Template_button_click_18_listener","AssignEmployeeRoomComponent_Template_button_click_19_listener","AssignEmployeeRoomComponent_div_20_Template","AssignEmployeeRoomComponent_div_21_Template","AssignEmployeeRoomComponent_ngx_spinner_22_Template","valid"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\assign-employee-room\\assign-employee-room.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\assign-employee-room\\assign-employee-room.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MessageService } from 'primeng/api';\nimport { SvgElementColorType } from 'src/app/model/svgelementcolortype.model';\nimport { SvgElementIdType } from 'src/app/model/svgelementidtype.model';\nimport { SvgRoomContentData } from 'src/app/model/svgroomcontentdata.model';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { SvgViewService } from '../svg-view/services/svg-view.service';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { EmployeeService } from '../employee/services/employee.service';\nimport { EmployeeOutput } from '../user/model/employeOutput.model';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from '../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../background-loc/model/DTO/FloorFilterInputDTO.model';\n\n@Component({\n  selector: 'app-assign-employee-room',\n  templateUrl: './assign-employee-room.component.html',\n  styleUrls: ['./assign-employee-room.component.scss'],\n  providers: [MessageService]\n})\nexport class AssignEmployeeRoomComponent {\n  filterPanel!: UntypedFormGroup;\n  compId!: number;\n  allBl: any[] = [];\n  enumBL: BuildingFilterInputDTO[] = [];\n  enumFL: FloorFilterInputDTO[] = [];\n  enumAllFL: FloorFilterInputDTO[] = [];\n  rowCount: number = 5;\n  viewSvg: boolean = false;\n  fileString: string = '';\n  showSpinner: boolean = false;\n  displayNoFloorPlanInfo:boolean = false;\n  @ViewChild(SvgViewComponent, { static: false }) svgViewComp!: SvgViewComponent;\n  svgRoomData : SvgRoomData = new SvgRoomData(null,null,\"\",[]);\n  rmcatdata:any[]=[];\n  rmtypeData:any[]=[];\n  showrmtypetable:boolean = false;\n  selectedRmCat:string='';\n  selectedRmType:string='';\n  selectedSvgElementId :string ='';\n  allSVGRoomsData:any[]=[];\n  allowSave:boolean = false;\n  selectionMessage:string='';\n  selectionHighlightColor:string='';\n  selectedRoomsMessage:string='';\n  commonAreaTypeNoneEnumValue!: number;\n  selectedEmployeeId:string='';\n  selectedEmployeeName: string ='';\n  selectedEmployee: any;\n  limitBl: number = 0;\n  offsetBl: number = 0;\n  limitFl: number = 0;\n  offsetFl: number = 0;\n  limitRm: number = 0;\n  offsetRm: number = 0;\n  filterCriteria: any = {\n    fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n  };\n  scrollLimit:number = UtilConstant.SCROLL_LIMIT;\n  constructor(\n    private blServ: BuildingService,\n    private authSrv: AuthService,\n    private svgViewSrv: SvgViewService,\n    private formBuilder: UntypedFormBuilder,\n    private cdr: ChangeDetectorRef,\n    private spinner: NgxSpinnerService,\n    private messageService: MessageService,\n    private enumservice: EnumService,\n    private employeeservice : EmployeeService\n  ) { \n    this.filterPanel = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]],\n    });\n  }\n\n  ngOnInit(): void {\n    // this.compId = this.authSrv.getLoggedInUserCompId();\n    // this.loadAllBuilding();\n    // this.loadAllFloor();\n    this.scrollToEndBl();\n    this.scrollToEndFl();\n    this.loadNoneCommonAreaEnum();\n  }\n\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe((res: any) => {\n      this.enumBL = res;\n      this.enumBL = res.map((i: any) => { i.name = i.id + ' - ' + i.name; return i; });\n      //this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe((res: any) => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map((i: any) => { i.name = i.blId + '-' + i.id + ' - ' + i.name; return i; });\n      //this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n\n  loadNoneCommonAreaEnum(){\n    this.enumservice.getEnums().subscribe((res:any)=>{\n      let commonareaEnumList = res.filter( (t:any) => \n        t.tableName.toLocaleUpperCase() === 'rm'.toLocaleUpperCase() &&\n        t.fieldName.toLocaleUpperCase() === 'common_area_type'.toLocaleUpperCase() && \n        t.enumValue.toLocaleUpperCase()==='None'.toLocaleUpperCase());\n        this.commonAreaTypeNoneEnumValue = commonareaEnumList[0].id;\n    })\n  }\n\n  onSelectBlCode($event: any) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        flId: null,\n      });\n      this.loadFloorCode($event.id);\n    }, 10);\n    if ($event.id != null) {\n      this.loadFloorCode($event.id);\n\n    }\n    else {\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.filterCriteria = { fieldName:null, value: null, matchMode: \"contains\", limit: 0, offset: 0 }\n      this.scrollToEndFl();\n    }\n  }\n\n  loadFloorCode(bl_id: any) {\n    if (bl_id != null) {\n      // this.enumFL = [];\n      // this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id)\n      // this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.limitFl = 0;\n      this.offsetFl = 0;\n      this.filterCriteria = { fieldName: \"bl.blId\", value: bl_id, matchMode: \"equals\", limit: 0, offset: 0 }\n      this.scrollToEndFl();\n    }\n  }\n\n  onSelectFlCode(event: any) {\n    if (event.id != null) {\n      const blData: any = {\n        blId: event.blId,\n        blNameString: event.blNameString,\n      }\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n        });\n      }, 10);\n    }\n    else {\n      // this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n\n\n  onSearch(){\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    this.selectionMessage='';\n    this.selectionHighlightColor='';\n    this.selectedRoomsMessage='';\n    this.selectedSvgElementId ='';\n    this.displayNoFloorPlanInfo = false;\n    this.allowSave = false;\n    this.showrmtypetable= false;\n    this.selectedRmCat='';\n    this.selectedRmType='';\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.getAllRoomsOfSvg(blId,flId);\n    let flData = this.enumFL.filter((i: any) => i.blId == blId && i.id == flId);\n    //@ts-ignore\n    if (flData[0].svgName != null) {\n      let data = {\n        id: flId,\n        blId: blId,\n        name: '',\n        compId: this.compId,\n        svgName: '',\n        flInfo: '',\n        units:''\n      }\n      this.svgViewSrv.getSVGFile(data).subscribe((res: any) => {\n        if (res.code != 409) {\n          setTimeout(() => {\n            this.fileString = res.fileContent;\n            this.viewSvg = true;\n            this.cdr.detectChanges();\n            this.spinner.hide();\n            this.showSpinner = false;\n            this.selectionMessage = \"Please select Employee\";\n          }, 1000);\n        }\n        else{\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.displayNoFloorPlanInfo = true;\n        }\n      })\n    } else {\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = true;\n    }\n  }\n\n  getAllRoomsOfSvg(blId:string,flId:string){\n    this.svgRoomData  = new SvgRoomData(null,null,\"\",[]);\n    this.allSVGRoomsData=[];\n    let data={\n      id:'',\n      name:'',\n      blId:blId,\n      flId:flId,\n      svgElementId:'',\n      compId:this.compId\n    }\n    this.blServ.getRmList(data).subscribe((res:any)=>{\n      if(res){\n        this.allSVGRoomsData = res.filter( (each:any) => each.svgElementId!=null && each.commonAreaType==this.commonAreaTypeNoneEnumValue);\n        this.allSVGRoomsData.forEach((rm:any)=>{\n          let idObj:SvgElementIdType ={\n            roomElementId:rm.svgElementId,\n            assetElementId : null\n          }\n          let colorObj: SvgElementColorType ={\n            roomColor:\"#ff6666\",\n            assetColor: null\n          }\n          let contentData:SvgRoomContentData ={\n            blId:parseInt(blId),\n            flId:parseInt(flId),\n            rmId:rm.rmId,\n            label:[rm.rmId],\n            showLabel:true,\n            highlightRoom:true,\n            svgElementId :idObj,\n            color:colorObj,\n            rmCode:'',\n            zoomAtRoom:false\n          }\n          this.svgRoomData.content.push(contentData);\n        })\n        this.svgRoomData.blId = parseInt(blId);\n        this.svgRoomData.flId = parseInt(flId);\n        this.svgRoomData.locate =\"room\";\n      }\n    })\n  }\n\n  onClear(){\n    this.viewSvg= false;\n    this.showSpinner = false;\n    this.displayNoFloorPlanInfo = false;\n    this.selectedSvgElementId ='';\n    this.svgRoomData  = new SvgRoomData(null,null,\"\",[]);\n    this.showrmtypetable= false;\n    this.selectedRmCat='';\n    this.selectedRmType='';\n    this.allSVGRoomsData=[];\n    this.allowSave = false;\n    this.filterPanel.patchValue({\n      blId:null,\n      flId: null,\n    });\n    this.selectionMessage='';\n    this.selectionHighlightColor='';\n    this.selectedRoomsMessage='';\n  }\n\n  getData(event:any){\n    this.selectedEmployeeId = event.data.emId;\n    this.selectedEmployeeName = event.data.firstName;\n    this.allowSave = true;\n    this.selectionMessage =\"Please select a room assign to : \"+this.selectedEmployeeName;\n    this.employeeservice.getEmById(this.selectedEmployeeId).subscribe((res:any)=>{\n      if(res){\n        this.selectedEmployee = res;\n      }\n    })\n  }\n\n  roomOnClickListener(elementN: any) {\n    if(this.allowSave){\n      this.selectedRoomsMessage = '';\n    let svgelid ='';\n    if(elementN.startsWith(\"label\")){\n      svgelid = elementN.substring(\"label_\".length)\n    }else{\n      svgelid = elementN;\n    }\n    this.selectedSvgElementId = svgelid;\n    this.svgRoomData.content.forEach((svgData:any)=>{\n      if(svgData.svgElementId.roomElementId==this.selectedSvgElementId){\n        svgData.highlightRoom=true;\n        svgData.color.roomColor=\"#6666ff\";\n        this.selectedRoomsMessage = \"Selected Room : \" + svgData.rmId;\n      }else{\n        svgData.highlightRoom=true;\n        svgData.color.roomColor=\"#ff6666\";\n      }\n    })\n    this.cdr.detectChanges();\n    this.svgViewComp.loadByDetails();\n    }\n  }\n\n  onAssigntoRooms(){\n    this.messageService.clear();\n    const matchingObj = this.allSVGRoomsData.find(rm => rm.svgElementId ==this.selectedSvgElementId);\n    let empData: EmployeeOutput= this.selectedEmployee;\n    empData.employeeLocation.blId = matchingObj.blId;\n    empData.employeeLocation.flId = matchingObj.flId;\n    empData.employeeLocation.rmId = matchingObj.rmId;\n    this.employeeservice.saveEmployee(empData).subscribe((res:any)=>{\n      if(res.code ==200){\n        this.messageService.add({ key: 'employeeroomMsg', severity: 'success', summary: 'Record updated', detail: 'Employee updated successfully' });\n        this.onSearch();\n      }\n    })\n  }\n\n  onCancelSelection(){\n    this.onSearch();\n  }\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blServ.getALLBuildingByScroll(this.filterCriteria).subscribe((res:any) => {\n     this.enumBL = res;\n     this.enumBL.unshift(new BuildingFilterInputDTO(null,'Make a selection',null));\n    })\n   }\n\n   scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blServ.getALLFloorByScroll(this.filterCriteria).subscribe((res:any) => {\n     this.enumFL = res;\n     this.enumFL.unshift(new FloorFilterInputDTO(null,'Make a selection',null));\n    })\n   }\n\n   searchBl(event:any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"blName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndBl();\n   }\n\n   searchFl(event:any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"flName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndFl();\n   }\n\n   updateBlList(blData:any) {\n    this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n      this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n   }\n\n   updateFlList(flData:any) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n      this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection',null));\n   }\n   \n}\n","<div class=\"card\">\n    <form [formGroup]=\"filterPanel\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Building </label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" (change)=\"onSelectBlCode($event)\"\n                            placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n                            (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Floor</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\" (change)=\"onSelectFlCode($event)\"\n                            (scrollToEnd)=\"scrollToEndFl()\" (search)=\"searchFl($event)\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\"></td>\n                <td style=\"width: 20%\"></td>\n                <td style=\"width: 20%\">\n                    <div style=\"margin: 5px 0 0 5px \">\n                        <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple label=\"Search\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </form>\n</div>\n<div class=\"card no-file-found\" *ngIf=\"displayNoFloorPlanInfo\">\n    <h1>No Floorplan available</h1>\n</div>\n\n<div class=\"card\" *ngIf=\"viewSvg\">\n    <div style=\"display: flex; justify-content: space-between;height:600px;\">\n        <div style=\"width:25%\">\n            <div style=\"display: flex;flex-direction: column;\">\n                <app-em-list (parentFun)=\"getData($event)\"></app-em-list>\n            </div>  \n        </div>\n        <div style=\"width:70%;margin:5px;height:550px\">\n            <div style=\"height: 50px; display: flex; justify-content: space-between;\">\n                <div>\n                    <div>{{selectionMessage}}</div>\n                <div *ngIf=\"selectedSvgElementId.length>0\">\n                    {{selectedRoomsMessage}}\n                </div>\n                </div>\n                <div>\n                    <button (click)=\"onAssigntoRooms()\" pButton pRipple label=\"Save\"  [disabled]=\"!(selectedSvgElementId.length>0)\"\n                    style=\"width: 60px;\" class=\"p-button-primary p-button-sm pull right\"></button>\n                    <button (click)=\"onCancelSelection()\" pButton pRipple label=\"Cancel\"  [disabled]=\"!(selectedSvgElementId.length>0)\"\n                    style=\"width: 60px; margin-left: 5px;\" class=\"p-button-primary p-button-sm pull right\"></button>\n                </div>\n            </div>\n            <div *ngIf=\"viewSvg\" style=\"height:500px;\">\n                <app-svg-view  (onRoomClick)=\"roomOnClickListener($event)\"></app-svg-view>\n            </div>\n            \n        </div>\n    </div>\n</div>\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#879cc9\" class=\"spinner-color\" type=\"ball-spin-clockwise\"\n    *ngIf=\"showSpinner\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n</ngx-spinner>\n\n<p-toast key=\"employeeroomMsg\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"employeeroomGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}