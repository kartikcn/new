{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MessageService } from 'primeng/api';\nimport { forkJoin } from 'rxjs';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/room-teams.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/confirmdialog\";\nimport * as i11 from \"ng-zorro-antd/table\";\nimport * as i12 from \"../../../../directive/numbers-only.directive\";\nfunction UnassignRoomsComponent_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Assigned Rooms for \", ctx_r11.presentTeamId, \"\");\n  }\n}\nfunction UnassignRoomsComponent_ng_template_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1, \"Assigned Rooms\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UnassignRoomsComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵtemplate(2, UnassignRoomsComponent_ng_template_2_div_2_Template, 3, 1, \"div\", 20);\n    i0.ɵɵtemplate(3, UnassignRoomsComponent_ng_template_2_ng_template_3_Template, 2, 0, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function UnassignRoomsComponent_ng_template_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onUnAssign());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r12 = i0.ɵɵreference(4);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.presentTeamId.length > 0)(\"ngIfElse\", _r12);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.selectedScreens.length > 0));\n  }\n}\nfunction UnassignRoomsComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 23);\n    i0.ɵɵelement(2, \"p-tableHeaderCheckbox\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"th\", 23);\n    i0.ɵɵelementStart(4, \"th\", 24)(5, \"div\", 25)(6, \"div\", 26)(7, \"p\", 27);\n    i0.ɵɵtext(8, \"Building Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 28);\n    i0.ɵɵelement(10, \"p-sortIcon\", 29)(11, \"p-columnFilter\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"th\", 31)(13, \"div\", 25)(14, \"div\", 26)(15, \"p\", 27);\n    i0.ɵɵtext(16, \"Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 28);\n    i0.ɵɵelement(18, \"p-sortIcon\", 32)(19, \"p-columnFilter\", 33);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"th\", 34)(21, \"div\", 25)(22, \"div\", 26)(23, \"p\", 27);\n    i0.ɵɵtext(24, \"Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 28);\n    i0.ɵɵelement(26, \"p-sortIcon\", 35)(27, \"p-columnFilter\", 36);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"th\");\n    i0.ɵɵtext(29, \" Occupied Space (%) \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UnassignRoomsComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 37)(1, \"td\", 23);\n    i0.ɵɵelement(2, \"p-tableCheckbox\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 23)(4, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function UnassignRoomsComponent_ng_template_4_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const room_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.openEditItem(room_r16));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const room_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", room_r16);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", room_r16);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(room_r16.blId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r16.flId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r16.rmId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(room_r16.allocation);\n  }\n}\nfunction UnassignRoomsComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nfunction UnassignRoomsComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 40)(1, \"td\", 13);\n    i0.ɵɵtext(2, \"Building Code : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r4.selectedRoom.blId);\n  }\n}\nfunction UnassignRoomsComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 41)(1, \"td\", 13);\n    i0.ɵɵtext(2, \"Floor Code : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r5.selectedRoom.flId);\n  }\n}\nfunction UnassignRoomsComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 41)(1, \"td\", 13);\n    i0.ɵɵtext(2, \"Room Code : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r6.selectedRoom.rmId);\n  }\n}\nfunction UnassignRoomsComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 41)(1, \"td\", 13);\n    i0.ɵɵtext(2, \"Occupied Space (%) : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r7.selectedRoom.allocation);\n  }\n}\nfunction UnassignRoomsComponent_tr_22_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Required Space (%) cannot be greater than Available Space (%) : \", ctx_r20.maxOccupancyValue, \"\");\n  }\n}\nfunction UnassignRoomsComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 13);\n    i0.ɵɵelementStart(2, \"td\", 13);\n    i0.ɵɵtemplate(3, UnassignRoomsComponent_tr_22_label_3_Template, 2, 1, \"label\", 42);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r9.assignRoom.controls[\"occupancyValue\"] == null ? null : ctx_r9.assignRoom.controls[\"occupancyValue\"].errors.required));\n  }\n}\nfunction UnassignRoomsComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 44)(2, \"div\")(3, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function UnassignRoomsComponent_ng_template_23_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.saveOccupancyValue());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\")(5, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function UnassignRoomsComponent_ng_template_23_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.cancelOccupancyValue());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r10.assignRoom.valid);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nconst _c1 = function () {\n  return {\n    width: \"26vw\"\n  };\n};\nexport let UnassignRoomsComponent = /*#__PURE__*/(() => {\n  class UnassignRoomsComponent {\n    constructor(rmteamsrv, messageService, confirmationService, authSrv, formBuilder) {\n      this.rmteamsrv = rmteamsrv;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.authSrv = authSrv;\n      this.formBuilder = formBuilder;\n      this.roomsData = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.selectedScreens = [];\n      this.unAssignSgPanels = new EventEmitter();\n      this.presentTeamId = '';\n      this.maxOccupancyValue = 100;\n      this.allRmTeamsData = [];\n      this.displayUnAssignScreen = false;\n      this.assignRoom = this.formBuilder.group({\n        occupancyValue: [null, [Validators.required]]\n      });\n    }\n    ngOnInit() {\n      this.compId = this.authSrv.getLoggedInUserCompId();\n    }\n    loadRecords(teamId) {\n      this.rmteamsrv.getAssignedRooms(teamId).subscribe(res => {\n        if (res) {\n          this.roomsData = res;\n        }\n      });\n      this.loadAllRmTeamData();\n    }\n    onUnAssign() {\n      this.messageService.clear();\n      const deleteRequests = [];\n      this.selectedScreens.forEach(screen => {\n        let data = {\n          compId: 0,\n          blId: screen.blId,\n          flId: screen.flId,\n          rmId: screen.rmId,\n          teamId: screen.teamId,\n          allocation: screen.allocation\n        };\n        deleteRequests.push(this.rmteamsrv.deleteRmTeam(data));\n      });\n      forkJoin(deleteRequests).subscribe(res => {\n        this.messageService.add({\n          key: 'UsgGrid',\n          severity: 'success',\n          summary: 'Team unassigned successfully',\n          detail: 'Team unassigned successfully'\n        });\n        this.refreshPanel();\n      });\n    }\n    refreshPanel() {\n      this.unAssignSgPanels.emit(true);\n    }\n    openEditItem(room) {\n      this.assignRoom.patchValue({\n        occupancyValue: null\n      });\n      this.allRmTeamsData.forEach(rm => {\n        if (rm.blId == room.blId && rm.flId == room.flId && rm.rmId == room.rmId && rm.teamId != room.teamId) {\n          this.maxOccupancyValue -= rm.allocation;\n        }\n      });\n      this.displayUnAssignScreen = true;\n      this.selectedRoom = room;\n    }\n    loadAllRmTeamData() {\n      this.maxOccupancyValue = 100;\n      this.rmteamsrv.getAllRmTeams().subscribe(res => {\n        this.allRmTeamsData = res;\n      });\n    }\n    saveOccupancyValue() {\n      this.messageService.clear();\n      let data = {\n        compId: this.compId,\n        blId: this.selectedRoom.blId,\n        flId: this.selectedRoom.flId,\n        rmId: this.selectedRoom.rmId,\n        teamId: this.selectedRoom.teamId,\n        allocation: this.assignRoom.controls.occupancyValue.value\n      };\n      this.rmteamsrv.updateRmTeam(data).subscribe(res => {\n        if (res) {\n          this.displayUnAssignScreen = false;\n          this.messageService.add({\n            key: 'UsgGrid',\n            severity: 'success',\n            summary: 'Team updated successfully',\n            detail: 'Team updated successfully'\n          });\n          this.refreshPanel();\n        }\n      });\n    }\n    cancelOccupancyValue() {\n      this.displayUnAssignScreen = false;\n      this.assignRoom.patchValue({\n        occupancyValue: null\n      });\n    }\n    checkOccupancyValue(control) {\n      if (control.value !== undefined && control.value != null && control.value.length > 0 && this.displayUnAssignScreen) {\n        this.assignRoom.controls['occupancyValue'].setErrors(null);\n        this.assignRoom.clearAsyncValidators();\n        this.assignRoom.updateValueAndValidity();\n        if (parseInt(control.value) > this.maxOccupancyValue) {\n          this.assignRoom.controls['occupancyValue'].setErrors({\n            'incorrect': true\n          });\n          this.assignRoom.updateValueAndValidity();\n          return {\n            'incorrect': true\n          };\n        } else {\n          return null;\n        }\n      }\n      return null;\n    }\n    limitToThreeDigits(event) {\n      const input = event.target.value;\n      if (input.length > 3) {\n        this.assignRoom.patchValue({\n          occupancyValue: input.slice(0, 3)\n        });\n      }\n    }\n    static #_ = this.ɵfac = function UnassignRoomsComponent_Factory(t) {\n      return new (t || UnassignRoomsComponent)(i0.ɵɵdirectiveInject(i1.RmTeamsService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.UntypedFormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UnassignRoomsComponent,\n      selectors: [[\"app-unassign-rooms\"]],\n      inputs: {\n        presentTeamId: \"presentTeamId\"\n      },\n      outputs: {\n        unAssignSgPanels: \"unAssignSgPanels\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 24,\n      vars: 23,\n      consts: [[1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"400px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"selection\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"selectionChange\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"key\", \"UsgGrid\", \"position\", \"top-right\"], [\"key\", \"positionDialog\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"header\", \"Update Room\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [3, \"formGroup\"], [\"width\", \"100%\", 2, \"margin-top\", \"20px\"], [\"style\", \"font-size: 1.2rem;margin-top:20px;margin-bottom:5px;\", 4, \"ngIf\"], [\"style\", \"font-size: 1.2rem;margin-top:5px;margin-bottom:5px;\", 4, \"ngIf\"], [2, \"width\", \"5rem\"], [1, \"form-field-lable\", \"control-label\", 2, \"font-size\", \"1.2rem\"], [\"type\", \"text\", \"name\", \"occupancyValue\", \"formControlName\", \"occupancyValue\", \"NumbersOnly\", \"\", 1, \"form-control\", 3, \"blur\", \"input\"], [\"occupancyValue\", \"\"], [4, \"ngIf\"], [1, \"d-flex\", \"flex-row\"], [2, \"flex\", \"auto\"], [4, \"ngIf\", \"ngIfElse\"], [\"noTeam\", \"\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"UnAssign\", \"icon\", \"pi pi-plus\", 1, \"p-button-primary\", \"p-button-sm\", \"p-mr-2\", 3, \"disabled\", \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"blId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"blId\"], [\"type\", \"text\", \"field\", \"blId\", \"display\", \"menu\"], [\"pSortableColumn\", \"flId\"], [\"field\", \"flId\"], [\"type\", \"text\", \"field\", \"flId\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmId\"], [\"field\", \"rmId\"], [\"type\", \"text\", \"field\", \"rmId\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [3, \"value\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 1, \"p-button-text\", \"p-button\", \"mr5\", 2, \"margin-left\", \"3.5px\", 3, \"click\"], [2, \"font-size\", \"1.2rem\", \"margin-top\", \"20px\", \"margin-bottom\", \"5px\"], [2, \"font-size\", \"1.2rem\", \"margin-top\", \"5px\", \"margin-bottom\", \"5px\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [2, \"display\", \"flex\", \"justify-content\", \"center\", \"margin-top\", \"20px\", \"width\", \"100%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Save\", \"icon\", \"pi pi-check\", 1, \"p-button-primary\", \"p-button-sm\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Cancel\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"margin-left\", \"8px\", 3, \"click\"]],\n      template: function UnassignRoomsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r24 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-table\", 1);\n          i0.ɵɵlistener(\"selectionChange\", function UnassignRoomsComponent_Template_p_table_selectionChange_1_listener($event) {\n            return ctx.selectedScreens = $event;\n          });\n          i0.ɵɵtemplate(2, UnassignRoomsComponent_ng_template_2_Template, 7, 3, \"ng-template\", 2);\n          i0.ɵɵtemplate(3, UnassignRoomsComponent_ng_template_3_Template, 30, 0, \"ng-template\", 3);\n          i0.ɵɵtemplate(4, UnassignRoomsComponent_ng_template_4_Template, 13, 6, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, UnassignRoomsComponent_ng_template_5_Template, 3, 1, \"ng-template\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(6, \"p-toast\", 6)(7, \"p-confirmDialog\", 7);\n          i0.ɵɵelementStart(8, \"p-dialog\", 8);\n          i0.ɵɵlistener(\"visibleChange\", function UnassignRoomsComponent_Template_p_dialog_visibleChange_8_listener($event) {\n            return ctx.displayUnAssignScreen = $event;\n          });\n          i0.ɵɵelementStart(9, \"form\", 9)(10, \"table\", 10);\n          i0.ɵɵtemplate(11, UnassignRoomsComponent_tr_11_Template, 5, 1, \"tr\", 11);\n          i0.ɵɵtemplate(12, UnassignRoomsComponent_tr_12_Template, 5, 1, \"tr\", 12);\n          i0.ɵɵtemplate(13, UnassignRoomsComponent_tr_13_Template, 5, 1, \"tr\", 12);\n          i0.ɵɵtemplate(14, UnassignRoomsComponent_tr_14_Template, 5, 1, \"tr\", 12);\n          i0.ɵɵelementStart(15, \"tr\")(16, \"td\", 13)(17, \"label\", 14);\n          i0.ɵɵtext(18, \"Required Space (%)\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"td\", 13)(20, \"input\", 15, 16);\n          i0.ɵɵlistener(\"blur\", function UnassignRoomsComponent_Template_input_blur_20_listener() {\n            i0.ɵɵrestoreView(_r24);\n            const _r8 = i0.ɵɵreference(21);\n            return i0.ɵɵresetView(ctx.checkOccupancyValue(_r8));\n          })(\"input\", function UnassignRoomsComponent_Template_input_input_20_listener($event) {\n            return ctx.limitToThreeDigits($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(22, UnassignRoomsComponent_tr_22_Template, 4, 1, \"tr\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(23, UnassignRoomsComponent_ng_template_23_Template, 6, 1, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.roomsData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"selection\", ctx.selectedScreens)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(21, _c0))(\"rowHover\", false)(\"scrollable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c1));\n          i0.ɵɵproperty(\"visible\", ctx.displayUnAssignScreen)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.assignRoom);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedRoom);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedRoom);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedRoom);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedRoom);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", (ctx.assignRoom.controls[\"occupancyValue\"] == null ? null : ctx.assignRoom.controls[\"occupancyValue\"].errors) && ctx.assignRoom.controls[\"occupancyValue\"].dirty);\n        }\n      },\n      dependencies: [i5.NgIf, i2.PrimeTemplate, i6.Table, i6.SortableColumn, i6.SelectableRow, i6.SortIcon, i6.TableCheckbox, i6.TableHeaderCheckbox, i6.ColumnFilter, i7.ButtonDirective, i8.Dialog, i9.Toast, i10.ConfirmDialog, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i11.NzTableCellDirective, i11.NzThMeasureDirective, i11.NzTrDirective, i12.NumbersOnlyDirective],\n      styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header{background-color:#879cc9;color:#000;padding-left:10px;font-weight:400;margin-bottom:0;height:10px!important}[_nghost-%COMP%]     .p-confirm-dialog .p-dialog-header .p-dialog-content{align-items:center;background-color:#f9fcfc;display:flex;padding:10px}[_nghost-%COMP%]     .p-confirm-dialog .p-dialog-header{align-items:center;background-color:#f9fcfc}\"]\n    });\n  }\n  return UnassignRoomsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}