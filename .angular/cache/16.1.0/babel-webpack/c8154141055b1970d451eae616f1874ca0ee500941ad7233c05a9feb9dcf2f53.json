{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInput } from '../../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../../background-loc/model/DTO/flFilterInput.model';\nimport { RMFilterInputDTO } from '../../background-loc/model/DTO/rmFilterInput.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../background-loc/services/bl.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../Helpdesk/equipment/services/equipment.services\";\nimport * as i4 from \"../../ppm-plan/services/ppm-plan-services\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../ppm-schedule/services/plan-schedule-services\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"../../Helpdesk/trades/services/trades.services\";\nimport * as i9 from \"../../Helpdesk/parts/services/parts.service\";\nimport * as i10 from \"../../Helpdesk/tools/services/tools.services\";\nimport * as i11 from \"primeng/api\";\nimport * as i12 from \"primeng/accordion\";\nimport * as i13 from \"primeng/table\";\nimport * as i14 from \"primeng/calendar\";\nimport * as i15 from \"primeng/button\";\nimport * as i16 from \"primeng/dialog\";\nimport * as i17 from \"primeng/panel\";\nimport * as i18 from \"primeng/confirmdialog\";\nimport * as i19 from \"@ng-select/ng-select\";\nimport * as i20 from \"@angular/material/legacy-card\";\nimport * as i21 from \"../../common-components/trade-details/modal/trade-details.component\";\nimport * as i22 from \"../../common-components/part-details/modal/part-details.component\";\nimport * as i23 from \"../../Helpdesk/tools/widgets/add-tools/add-tools.component\";\nimport * as i24 from \"../widgets/forecast-plan-details/forecast-plan-details/forecast-plan-details.component\";\nimport * as i25 from \"@angular/material/tooltip\";\nfunction ForecastDetailsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"div\", 46)(2, \"label\", 14);\n    i0.ɵɵtext(3, \"Forecast\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ForecastDetailsComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 47);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMsg);\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Standard Hours\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Available Quantity\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \" Required Hours\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Required Quantity\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Allocated Hours\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Allocated Quantity\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 52);\n    i0.ɵɵelementStart(2, \"th\");\n    i0.ɵɵtext(3, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_4_Template, 2, 0, \"th\", 12);\n    i0.ɵɵtemplate(5, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_5_Template, 2, 0, \"th\", 12);\n    i0.ɵɵtemplate(6, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_6_Template, 2, 0, \"th\", 12);\n    i0.ɵɵtemplate(7, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_7_Template, 2, 0, \"th\", 12);\n    i0.ɵɵtemplate(8, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_8_Template, 2, 0, \"th\", 12);\n    i0.ɵɵtemplate(9, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_9_Template, 2, 0, \"th\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const title_r16 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id != \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id == \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id != \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id == \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id != \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id == \"Parts\");\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r27.availableHours);\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r27.availableQuantity);\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r27.requiredHours);\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r27.requiredQuantity);\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r27.hoursInUse);\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r27.inUseQuantity);\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 53);\n    i0.ɵɵlistener(\"click\", function ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_Template_tr_click_0_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r40 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r40.getPlanDetails());\n    });\n    i0.ɵɵelementStart(1, \"td\", 52)(2, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r41);\n      const type_r27 = restoredCtx.$implicit;\n      const title_r16 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r42.onClickDetails(type_r27, title_r16.id));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_5_Template, 2, 1, \"td\", 12);\n    i0.ɵɵtemplate(6, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_6_Template, 2, 1, \"td\", 12);\n    i0.ɵɵtemplate(7, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_7_Template, 2, 1, \"td\", 12);\n    i0.ɵɵtemplate(8, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_8_Template, 2, 1, \"td\", 12);\n    i0.ɵɵtemplate(9, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_9_Template, 2, 1, \"td\", 12);\n    i0.ɵɵtemplate(10, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_10_Template, 2, 1, \"td\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r27 = ctx.$implicit;\n    const title_r16 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", type_r27);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(type_r27.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id != \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id == \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id != \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id == \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id != \"Parts\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id == \"Parts\");\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-table\", 51);\n    i0.ɵɵtemplate(2, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_Template, 10, 6, \"ng-template\", 0);\n    i0.ɵɵtemplate(3, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_Template, 11, 8, \"ng-template\", 36);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r17.cardData)(\"rowHover\", true)(\"rows\", 5)(\"paginator\", true)(\"showCurrentPageReport\", true)(\"scrollable\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(7, _c0));\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-accordionTab\", 50);\n    i0.ɵɵtemplate(1, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_Template, 4, 8, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const title_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"header\", title_r16.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", title_r16.id != null);\n  }\n}\nfunction ForecastDetailsComponent_p_accordion_72_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-accordion\", 48);\n    i0.ɵɵlistener(\"onOpen\", function ForecastDetailsComponent_p_accordion_72_Template_p_accordion_onOpen_0_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.onTabOpen($event));\n    });\n    i0.ɵɵtemplate(1, ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_Template, 2, 2, \"p-accordionTab\", 49);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.cardTitles);\n  }\n}\nfunction ForecastDetailsComponent_ng_template_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 55)(2, \"div\", 56)(3, \"div\", 57)(4, \"p\", 58);\n    i0.ɵɵtext(5, \"Requested Date \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 59);\n    i0.ɵɵelement(7, \"p-sortIcon\", 60)(8, \"p-columnFilter\", 61);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 62)(10, \"div\", 56)(11, \"div\", 57)(12, \"p\", 58);\n    i0.ɵɵtext(13, \"Date To Respond\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 59);\n    i0.ɵɵelement(15, \"p-sortIcon\", 63)(16, \"p-columnFilter\", 64);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 62)(18, \"div\", 56)(19, \"div\", 57)(20, \"p\", 58);\n    i0.ɵɵtext(21, \"Date To Perform\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 59);\n    i0.ɵɵelement(23, \"p-sortIcon\", 63)(24, \"p-columnFilter\", 64);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"th\", 65)(26, \"div\", 56)(27, \"div\", 57)(28, \"p\", 58);\n    i0.ɵɵtext(29, \"Date To Complete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 59);\n    i0.ɵɵelement(31, \"p-sortIcon\", 66)(32, \"p-columnFilter\", 67);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"th\", 68)(34, \"div\", 56)(35, \"div\", 57)(36, \"p\", 58);\n    i0.ɵɵtext(37, \"Building\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"div\", 59);\n    i0.ɵɵelement(39, \"p-sortIcon\", 69)(40, \"p-columnFilter\", 70);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"th\", 71)(42, \"div\", 56)(43, \"div\", 57)(44, \"p\", 58);\n    i0.ɵɵtext(45, \"Floor\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(46, \"div\", 59);\n    i0.ɵɵelement(47, \"p-sortIcon\", 72)(48, \"p-columnFilter\", 73);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(49, \"th\", 74)(50, \"div\", 56)(51, \"div\", 57)(52, \"p\", 58);\n    i0.ɵɵtext(53, \"Room \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(54, \"div\", 59);\n    i0.ɵɵelement(55, \"p-sortIcon\", 75)(56, \"p-columnFilter\", 76);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(57, \"th\", 77)(58, \"div\", 56)(59, \"div\", 57)(60, \"p\", 58);\n    i0.ɵɵtext(61, \"Asset \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(62, \"div\", 59);\n    i0.ɵɵelement(63, \"p-sortIcon\", 78)(64, \"p-columnFilter\", 79);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ForecastDetailsComponent_ng_template_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 80)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const wr_r47 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", wr_r47);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 12, wr_r47.dateRequested, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(6, 15, wr_r47.escDateResponded, \"dd MMM yyyy\"), \" \", ctx_r5.convertToDisplayTime(wr_r47.escTimeResponded), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(9, 18, wr_r47.dateToPerform, \"dd MMM yyyy\"), \" \", ctx_r5.convertToDisplayTime(wr_r47.escTimeResponded), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(12, 21, wr_r47.escDateCompleted, \"dd MMM yyyy\"), \" \", ctx_r5.convertToDisplayTime(wr_r47.escTimeCompleted), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(wr_r47.building);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r47.floor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r47.room);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(wr_r47.eqCode);\n  }\n}\nfunction ForecastDetailsComponent_ng_template_78_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 8);\n  }\n}\nfunction ForecastDetailsComponent_ng_template_79_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 81);\n    i0.ɵɵlistener(\"click\", function ForecastDetailsComponent_ng_template_79_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.displayRequestList = false);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function () {\n  return {\n    width: \"40vw\"\n  };\n};\nfunction ForecastDetailsComponent_p_dialog_80_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 82);\n    i0.ɵɵlistener(\"visibleChange\", function ForecastDetailsComponent_p_dialog_80_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.showTradeDetails = $event);\n    });\n    i0.ɵɵelement(1, \"app-trade-details\", 83);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c1));\n    i0.ɵɵproperty(\"visible\", ctx_r8.showTradeDetails)(\"modal\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selectedTrade\", ctx_r8.selectedTrade);\n  }\n}\nconst _c2 = function () {\n  return {\n    width: \"32vw\"\n  };\n};\nfunction ForecastDetailsComponent_p_dialog_81_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 84);\n    i0.ɵɵlistener(\"visibleChange\", function ForecastDetailsComponent_p_dialog_81_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r54);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.showPartDetails = $event);\n    });\n    i0.ɵɵelement(1, \"app-part-details\", 85);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c2));\n    i0.ɵɵproperty(\"visible\", ctx_r9.showPartDetails)(\"modal\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selectedPart\", ctx_r9.selectedPart);\n  }\n}\nconst _c3 = function () {\n  return {\n    width: \"35vw\"\n  };\n};\nfunction ForecastDetailsComponent_p_dialog_82_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 86);\n    i0.ɵɵlistener(\"visibleChange\", function ForecastDetailsComponent_p_dialog_82_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r56);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r55.showToolDetails = $event);\n    });\n    i0.ɵɵelementStart(1, \"form\", 87)(2, \"mat-card\")(3, \"mat-card-content\", 88);\n    i0.ɵɵelement(4, \"app-add-tools\", 89);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(5, _c3));\n    i0.ɵɵproperty(\"visible\", ctx_r10.showToolDetails)(\"modal\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r10.frmToolsDetail);\n  }\n}\nfunction ForecastDetailsComponent_ng_template_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1, \"Message\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDetailsComponent_ng_template_86_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r58 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 90);\n    i0.ɵɵlistener(\"click\", function ForecastDetailsComponent_ng_template_86_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r58);\n      i0.ɵɵnextContext();\n      const _r11 = i0.ɵɵreference(84);\n      return i0.ɵɵresetView(_r11.accept());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDetailsComponent_p_dialog_87_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r60 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dialog\", 91);\n    i0.ɵɵlistener(\"visibleChange\", function ForecastDetailsComponent_p_dialog_87_Template_p_dialog_visibleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r60);\n      const ctx_r59 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r59.showPlanDetails = $event);\n    });\n    i0.ɵɵelement(1, \"app-forecast-plan-details\", 92);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"visible\", ctx_r14.showPlanDetails)(\"modal\", true)(\"draggable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"planData\", ctx_r14.planData);\n  }\n}\nconst _c4 = function () {\n  return {\n    width: \"70vw\"\n  };\n};\nconst _c5 = function () {\n  return {\n    width: \"20vw\"\n  };\n};\nexport class ForecastDetailsComponent {\n  constructor(blService, formBuilder, eqService, ppmPlanService, datePipe, planScheduleSrv, spinner, tradeService, partsService, toolsService, confirmationService) {\n    this.blService = blService;\n    this.formBuilder = formBuilder;\n    this.eqService = eqService;\n    this.ppmPlanService = ppmPlanService;\n    this.datePipe = datePipe;\n    this.planScheduleSrv = planScheduleSrv;\n    this.spinner = spinner;\n    this.tradeService = tradeService;\n    this.partsService = partsService;\n    this.toolsService = toolsService;\n    this.confirmationService = confirmationService;\n    this.enumBL = [];\n    this.enumAllBl = [];\n    this.enumFL = [];\n    this.enumRM = [];\n    this.enumAllEquipment = [];\n    this.enumEquipment = [];\n    this.enumAllFL = [];\n    this.allRmDdata = [];\n    this.rm_data = [];\n    this.eqData = [];\n    this.planList = [];\n    this.errorMsg = '';\n    this.today = new Date();\n    this.requestsList = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.tradeHoursMap = {};\n    this.toolHoursMap = {};\n    this.partQuantityMap = {};\n    this.displayRequestList = false;\n    this.showTradeDetails = false;\n    this.tradeList = [];\n    this.showPartDetails = false;\n    this.partsList = [];\n    this.showToolDetails = false;\n    this.toolsList = [];\n    this.cardTitles = [{\n      id: \"Trades\"\n    }, {\n      id: \"Tools\"\n    }, {\n      id: \"Parts\"\n    }];\n    this.cardData = [];\n    this.isReload = false;\n    this.planData = [];\n    this.showPlanDetails = false;\n    this.filterPanel = this.formBuilder.group({\n      blId: [null],\n      flId: [null],\n      rmId: [null],\n      eqId: [null],\n      planId: [null],\n      fromDate: [null, [Validators.required, this.checkDateValidation()]],\n      toDate: [null, [Validators.required, this.checkDateValidation()]]\n    });\n    this.frmToolsDetail = this.formBuilder.group({\n      toolsFormPanel: []\n    });\n  }\n  ngOnInit() {\n    this.loadBuilding();\n    this.loadFloors();\n    this.loadRooms();\n    this.loadequipments();\n    this.loadPlansData();\n    let month = new Date().getMonth();\n    this.maxDate = new Date(new Date().setMonth(month + 6));\n    var date = new Date();\n    var nextDate = new Date(new Date().setMonth(month + 1));\n    this.setDefaultDates(date, nextDate);\n    this.loadTrades();\n    this.loadParts();\n    this.loadTools();\n  }\n  setDefaultDates(fromDate, toDate) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        fromDate: fromDate,\n        toDate: toDate\n      });\n    }, 0);\n  }\n  loadBuilding() {\n    this.blService.getALLBuilding().subscribe(res => {\n      this.enumAllBl = res;\n      this.enumAllBl = res.map(i => {\n        i.name = i.blNameString;\n        return i;\n      });\n      this.enumAllBl.unshift(new BuildingFilterInput('', 'Make a selection', '', 0));\n      this.enumBL = this.enumAllBl;\n    });\n  }\n  loadFloors() {\n    this.blService.getALLFloor().subscribe(res => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map(i => {\n        i.name = i.flNameString;\n        return i;\n      });\n      this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', 0));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n  loadRooms() {\n    this.blService.getALLRoom().subscribe(res => {\n      this.allRmDdata = res;\n      this.allRmDdata = res.map(i => {\n        i.name = i.rmNameString;\n        return i;\n      });\n      this.allRmDdata.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', 0));\n      this.rm_data = this.allRmDdata;\n    });\n  }\n  loadTrades() {\n    this.tradeService.getAllTrades().subscribe(res => {\n      this.tradeList = res;\n    });\n  }\n  loadParts() {\n    this.partsService.getAllParts().subscribe(res => {\n      this.partsList = res;\n    });\n  }\n  loadTools() {\n    this.toolsService.getAllTools().subscribe(res => {\n      this.toolsList = res;\n    });\n  }\n  onSelectBlCode($event) {\n    if ($event.id != null && $event.id != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null,\n          siteId: $event.siteId,\n          eqId: null\n        });\n        this.filterFloorCode($event.id);\n        this.filterAssets($event.id, null, null);\n      }, 0);\n    } else {\n      this.enumFL = this.enumAllFL;\n      this.filterAssets(null, null, null);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null,\n          blId: null,\n          eqId: null\n        });\n      }, 0);\n    }\n    this.enumBL.unshift(new BuildingFilterInput('Make a selection', '', '', 0));\n  }\n  filterFloorCode(bl_id) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', 0));\n      this.rm_data = this.allRmDdata.filter(t => t.blId == bl_id);\n      this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', 0));\n    }\n  }\n  onSelectFlCode($event) {\n    if ($event.id != null && $event.id != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId,\n          rmId: null,\n          eqId: null\n        });\n        this.filterRmCode($event.id, $event.blId);\n        this.filterAssets($event.blId, $event.id, null);\n      }, 10);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          rmId: null,\n          flId: null,\n          eqId: null\n        });\n      }, 0);\n      this.enumFL = this.enumAllFL;\n      this.filterAssets(null, null, null);\n    }\n    this.rm_data = this.allRmDdata;\n  }\n  filterRmCode(flId, blId) {\n    if (flId != null) {\n      this.rm_data = [];\n      this.rm_data = this.allRmDdata.filter(t => t.blId == blId);\n      this.rm_data = this.rm_data.filter(t => t.flId == flId);\n      this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', 0));\n    }\n  }\n  onSelectRmCode($event) {\n    if ($event.id != null && $event.id != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId,\n          flId: $event.flId,\n          eqId: null\n        });\n      }, 0);\n      this.filterAssets($event.blId, $event.flId, $event.id);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          rmId: null,\n          eqId: null\n        });\n        this.filterAssets(null, null, null);\n      }, 0);\n    }\n  }\n  onSelectAsset($event) {\n    if ($event.eqId != null && $event.eqId != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId,\n          flId: $event.flId,\n          rmId: $event.rmId\n        });\n      }, 0);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: null,\n          flId: null,\n          rmId: null\n        });\n      }, 0);\n    }\n  }\n  filterAssets(blId, flId, rmId) {\n    this.enumEquipment = this.enumAllEquipment;\n    blId ? this.enumEquipment = this.enumAllEquipment.filter(asset => asset.blId == blId) : '';\n    flId ? this.enumEquipment = this.enumEquipment.filter(asset => asset.blId == blId && asset.flId == flId) : '';\n    rmId ? this.enumEquipment = this.enumEquipment.filter(asset => asset.blId == blId && asset.flId == flId && asset.rmId == rmId) : '';\n    //this.enumEquipment.unshift(new Object({ eqId: \"Make a selection\", description: '', compId: 1 }))\n  }\n\n  loadequipments() {\n    this.eqService.getAllEquipments().subscribe(res => {\n      if (res.status != 202) {\n        this.enumAllEquipment = res;\n        this.enumEquipment = this.enumAllEquipment;\n        this.enumEquipment.unshift(new Object({\n          eqId: \"Make a selection\",\n          description: '',\n          compId: 1\n        }));\n      }\n    });\n  }\n  loadPlansData() {\n    this.ppmPlanService.getAllPlans().subscribe(res => {\n      if (res.status != 202) {\n        this.planList = res;\n        this.planList.unshift(new Object({\n          planId: null,\n          planName: \"Make a selection\"\n        }));\n      } else {\n        this.planList = [];\n      }\n    });\n  }\n  checkDateValidation() {\n    return control => {\n      if (control.value !== undefined && control.value != null) {\n        this.errorMsg = '';\n        this.filterPanel.controls['fromDate'].setErrors(null);\n        this.filterPanel.controls['toDate'].setErrors(null);\n        this.filterPanel.clearAsyncValidators();\n        this.filterPanel.updateValueAndValidity();\n        var dateFrom = new Date(this.filterPanel.controls['fromDate'].value);\n        var dateTo = new Date(this.filterPanel.controls['toDate'].value);\n        if (dateFrom.getTime() > dateTo.getTime() && this.filterPanel.controls['toDate'].value != null) {\n          this.filterPanel.controls['fromDate'].setErrors({\n            'incorrect': true\n          });\n          this.filterPanel.updateValueAndValidity();\n          this.errorMsg = ' date end should be greater than date start.';\n          return {\n            'incorrect': true\n          };\n        } else {\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n  onSearch() {\n    this.spinner.show();\n    this.filterData = {\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      rmId: this.filterPanel.controls.rmId.value,\n      eqId: this.filterPanel.controls.eqId.value,\n      planId: this.filterPanel.controls.planId.value ? this.filterPanel.controls.planId.value : 0,\n      fromDate: this.datePipe.transform(this.filterPanel.controls.fromDate.value, \"yyyy-MM-dd\"),\n      toDate: this.datePipe.transform(this.filterPanel.controls.toDate.value, \"yyyy-MM-dd\")\n    };\n    this.requestsList = [];\n    this.isReload = false;\n    this.planScheduleSrv.getForecastDetails(this.filterData).subscribe(res => {\n      // if (res.forecastDetails.length == 0) {\n      //   this.noRequestsFoundAlert();\n      // } else {\n      //   this.requestsList = res.forecastDetails;\n      //   this.getCompleteDetails(res);\n      // }\n      this.requestsList = res.requestsList;\n      this.finalObject = res;\n      this.isReload = true;\n      this.spinner.hide();\n    });\n  }\n  onClickRequest() {\n    this.displayRequestList = true;\n  }\n  convertToDisplayTime(value) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n  onClickDetails(type, title) {\n    if (title == \"Trades\") {\n      this.selectedTrade = this.getSelectedTrade(type.id);\n      this.showTradeDetails = true;\n    } else if (title == \"Parts\") {\n      this.selectedPart = this.getSelectedPart(type.id);\n      this.showPartDetails = true;\n    } else {\n      let selectedTool = this.getSelectedTool(type.id);\n      this.setToolForm(selectedTool);\n      this.showToolDetails = true;\n    }\n  }\n  getSelectedTrade(tradeId) {\n    let selectedTrade = this.tradeList.find(t => t.tradeId === tradeId);\n    if (selectedTrade) {\n      return selectedTrade;\n    }\n  }\n  getSelectedPart(partCode) {\n    let selectedPart = this.partsList.find(t => t.partCode === partCode);\n    if (selectedPart) {\n      return selectedPart;\n    }\n  }\n  getSelectedTool(toolId) {\n    let selectedTool = this.toolsList.find(t => t.tool === toolId);\n    if (selectedTool) {\n      return selectedTool;\n    }\n  }\n  setToolForm(value) {\n    setTimeout(() => {\n      this.frmToolsDetail.patchValue({\n        toolsFormPanel: value\n      });\n    }, 0);\n  }\n  getCompleteDetails(data) {\n    const trades = {};\n    const parts = {};\n    const tools = {};\n    // Aggregate forecastDetails for trades, parts, and tools\n    data.forecastDetails.forEach(forecast => {\n      forecast.planTradeList.forEach(trade => {\n        trades[trade.tradeId] = trades[trade.tradeId] || {\n          id: trade.tradeId,\n          requiredHours: 0,\n          hoursInUse: 0,\n          availableHours: 0\n        };\n        trades[trade.tradeId].requiredHours += trade.hoursRequired;\n      });\n      forecast.planToolList.forEach(tool => {\n        tools[tool.toolId] = tools[tool.toolId] || {\n          id: tool.toolId,\n          requiredHours: 0,\n          hoursInUse: 0,\n          availableHours: 0\n        };\n        tools[tool.toolId].requiredHours += tool.hoursRequired;\n      });\n      forecast.planPartsList.forEach(part => {\n        parts[part.partId] = parts[part.partId] || {\n          id: part.partId,\n          requiredQuantity: 0,\n          inUseQuantity: 0,\n          availableQuantity: 0\n        };\n        parts[part.partId].requiredQuantity += part.qunatityRequired;\n      });\n    });\n    // Aggregate actualDetails for trades, parts, and tools\n    data.actualDetails.forEach(each => {\n      each.trade.forEach(trade => {\n        trades[trade.id] = trades[trade.id] || {\n          id: trade.id,\n          requiredHours: 0,\n          hoursInUse: 0,\n          availableHours: 0\n        };\n        trades[trade.id].availableHours += parseFloat(trade.availableCount);\n        trades[trade.id].hoursInUse += parseFloat(trade.count);\n      });\n      each.part.forEach(part => {\n        parts[part.id] = parts[part.id] || {\n          id: part.id,\n          requiredQuantity: 0,\n          inUseQuantity: 0,\n          availableQuantity: 0\n        };\n        parts[part.id].availableQuantity += parseFloat(part.availableCount);\n        parts[part.id].inUseQuantity += parseFloat(part.count);\n      });\n      each.tool.forEach(tool => {\n        tools[tool.id] = tools[tool.id] || {\n          id: tool.id,\n          requiredHours: 0,\n          hoursInUse: 0,\n          availableHours: 0\n        };\n        tools[tool.id].availableHours += parseFloat(tool.availableCount);\n        tools[tool.id].hoursInUse += parseFloat(tool.count);\n      });\n    });\n    // Construct the final object\n    this.finalObject = {\n      Trades: Object.entries(trades).map(([name, {\n        id,\n        requiredHours,\n        hoursInUse,\n        availableHours\n      }]) => ({\n        name,\n        id,\n        requiredHours,\n        hoursInUse,\n        availableHours\n      })),\n      Parts: Object.entries(parts).map(([name, {\n        id,\n        requiredQuantity,\n        inUseQuantity,\n        availableQuantity\n      }]) => ({\n        name,\n        id,\n        requiredQuantity,\n        inUseQuantity,\n        availableQuantity\n      })),\n      Tools: Object.entries(tools).map(([name, {\n        id,\n        requiredHours,\n        hoursInUse,\n        availableHours\n      }]) => ({\n        name,\n        id,\n        requiredHours,\n        hoursInUse,\n        availableHours\n      }))\n    };\n    this.isReload = true;\n    this.spinner.hide();\n    console.log(this.finalObject);\n  }\n  noRequestsFoundAlert() {\n    this.confirmationService.confirm({\n      message: UtilConstant.NO_REQUESTS_FOUND,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      key: 'noReqFound',\n      accept: () => {\n        this.onClear();\n      }\n    });\n  }\n  onClear() {\n    this.filterPanel.reset();\n    this.requestsList = [];\n    this.tradeHoursMap = {};\n    this.toolHoursMap = {};\n    this.partQuantityMap = {};\n    this.isReload = false;\n  }\n  onTabOpen(event) {\n    this.cardData = [];\n    var selectedTab = this.cardTitles[event.index];\n    switch (selectedTab.id) {\n      case 'Trades':\n        this.cardData = this.finalObject.Trades.map(trade => {\n          // this.selectedTrade = this.getSelectedTrade(trade.id);\n          trade.availableHours = trade.standardHours;\n          return trade;\n        });\n        break;\n      case 'Parts':\n        this.cardData = this.finalObject.Parts.map(part => {\n          this.selectedPart = this.getSelectedPart(part.id);\n          part.availableQuantity = this.selectedPart.qutOnHand;\n          return part;\n        });\n        break;\n      case 'Tools':\n        this.cardData = this.finalObject.Tools.map(tool => {\n          let selectedTool = this.getSelectedTool(tool.id);\n          tool.availableHours = selectedTool.standardAvalTime * this.getNumberOfDays(this.filterData.fromDate, this.filterData.toDate);\n          return tool;\n        });\n        break;\n      default:\n        this.cardData = [];\n        break;\n    }\n  }\n  getNumberOfDays(from, to) {\n    var date1 = new Date(from);\n    var date2 = new Date(to);\n    // To calculate the time difference of two dates\n    var Difference_In_Time = date2.getTime() - date1.getTime();\n    // To calculate the no. of days between two dates\n    var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\n    return Difference_In_Days + 1; //return including both days\n  }\n\n  getPlanDetails() {\n    this.showPlanDetails = false;\n    this.planScheduleSrv.getForecastPlanDetails(this.filterData).subscribe(res => {\n      this.planData = res;\n      this.showPlanDetails = true;\n    });\n  }\n  static #_ = this.ɵfac = function ForecastDetailsComponent_Factory(t) {\n    return new (t || ForecastDetailsComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.EquipmentService), i0.ɵɵdirectiveInject(i4.PpmPlanService), i0.ɵɵdirectiveInject(i5.DatePipe), i0.ɵɵdirectiveInject(i6.PlanScheduleService), i0.ɵɵdirectiveInject(i7.NgxSpinnerService), i0.ɵɵdirectiveInject(i8.TradesService), i0.ɵɵdirectiveInject(i9.PartsService), i0.ɵɵdirectiveInject(i10.ToolsService), i0.ɵɵdirectiveInject(i11.ConfirmationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForecastDetailsComponent,\n    selectors: [[\"app-forecast-details\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 88,\n    vars: 51,\n    consts: [[\"pTemplate\", \"header\"], [2, \"display\", \"flex\"], [1, \"card\", 2, \"width\", \"25%\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"25%\"], [1, \"input-label-custom\"], [1, \"p-fluid\"], [1, \"p-field\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"fromDate\", \"inputId\", \"icon\", 3, \"minDate\", \"showIcon\"], [\"appendTo\", \"body\", \"dateFormat\", \"dd M yy\", \"name\", \"date\", \"formControlName\", \"toDate\", \"inputId\", \"icon\", 3, \"showIcon\", \"minDate\", \"maxDate\"], [4, \"ngIf\"], [\"width\", \"25%\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"formControlName\", \"rmId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"searchable\", \"items\", \"change\"], [\"appendTo\", \"body\", \"placeholder\", \"Make a selection\", \"bindLabel\", \"eqId\", \"bindValue\", \"eqId\", \"formControlName\", \"eqId\", 1, \"ng-select-dropdown\", 3, \"items\", \"clearable\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"planId\", \"bindLabel\", \"planName\", \"bindValue\", \"planId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [1, \"input-label-custom\", 2, \"display\", \"flex\", \"flex-direction\", \"row\", \"justify-content\", \"end\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull-right\", 2, \"width\", \"60px\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Forecast\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"width\", \"60px\", \"margin\", \"0px 5px 0px 10px\", 3, \"disabled\", \"click\"], [1, \"card\", 2, \"width\", \"75%\"], [1, \"row\", 3, \"click\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-content\", \"hover-pointer\", 2, \"display\", \"flex\"], [1, \"card-content-title\"], [\"id\", \"requestCount\", 2, \"margin-right\", \"10px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-info-circle\", \"matTooltip\", \"View Part Details\", 1, \"p-button-rounded\", \"pull-right\", 2, \"margin-top\", \"1.5px\", 3, \"hidden\", \"click\"], [1, \"row\"], [3, \"onOpen\", 4, \"ngIf\"], [\"header\", \"Requests List\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"closable\", \"visibleChange\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", 3, \"value\", \"paginator\", \"rows\", \"scrollable\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\"], [\"tt\", \"\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"pTemplate\", \"footer\"], [\"id\", \"Trade Details\", 3, \"visible\", \"style\", \"modal\", \"visibleChange\", 4, \"ngIf\"], [\"header\", \"Part Details\", 3, \"visible\", \"style\", \"modal\", \"visibleChange\", 4, \"ngIf\"], [\"header\", \"Tool Details\", 3, \"visible\", \"style\", \"modal\", \"visibleChange\", 4, \"ngIf\"], [\"key\", \"noReqFound\"], [\"cd\", \"\"], [\"header\", \"Plans\", 3, \"visible\", \"modal\", \"draggable\", \"visibleChange\", 4, \"ngIf\"], [1, \"header-container\"], [1, \"header-label\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [3, \"onOpen\"], [3, \"header\", 4, \"ngFor\", \"ngForOf\"], [3, \"header\"], [\"selectionMode\", \"single\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", 3, \"value\", \"rowHover\", \"rows\", \"paginator\", \"showCurrentPageReport\", \"scrollable\", \"rowsPerPageOptions\"], [2, \"width\", \"1rem\"], [3, \"pSelectableRow\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-info-circle\", \"matTooltip\", \"View Part Details\", 1, \"p-button-rounded\", \"pull-right\", 3, \"click\"], [\"pSortableColumn\", \"dateRequested\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"dateRequested\"], [\"type\", \"text\", \"field\", \"dateRequested\", \"display\", \"menu\"], [\"pSortableColumn\", \"escDateResponded\"], [\"field\", \"escDateResponded\"], [\"type\", \"text\", \"field\", \"escDateResponded\", \"display\", \"menu\"], [\"pSortableColumn\", \"escDateCompleted\"], [\"field\", \"escDateCompleted\"], [\"type\", \"text\", \"field\", \"escDateCompleted\", \"display\", \"menu\"], [\"pSortableColumn\", \"building\"], [\"field\", \"building\"], [\"type\", \"text\", \"field\", \"building\", \"display\", \"menu\"], [\"pSortableColumn\", \"floor\"], [\"field\", \"floor\"], [\"type\", \"text\", \"field\", \"floor\", \"display\", \"menu\"], [\"pSortableColumn\", \"room\"], [\"field\", \"room\"], [\"type\", \"text\", \"field\", \"room\", \"display\", \"menu\"], [\"pSortableColumn\", \"eqCode\"], [\"field\", \"eqCode\"], [\"type\", \"text\", \"field\", \"eqCode\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"label\", \"Close\", \"styleClass\", \"p-button-text\", 3, \"click\"], [\"id\", \"Trade Details\", 3, \"visible\", \"modal\", \"visibleChange\"], [3, \"selectedTrade\"], [\"header\", \"Part Details\", 3, \"visible\", \"modal\", \"visibleChange\"], [3, \"selectedPart\"], [\"header\", \"Tool Details\", 3, \"visible\", \"modal\", \"visibleChange\"], [1, \"disabled-form\", 3, \"formGroup\"], [\"id\", \"tool\"], [\"formControlName\", \"toolsFormPanel\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-check\", \"label\", \"Ok\", 3, \"click\"], [\"header\", \"Plans\", 3, \"visible\", \"modal\", \"draggable\", \"visibleChange\"], [3, \"planData\"]],\n    template: function ForecastDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-panel\");\n        i0.ɵɵtemplate(1, ForecastDetailsComponent_ng_template_1_Template, 4, 0, \"ng-template\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"form\", 3)(5, \"table\", 4)(6, \"tr\")(7, \"td\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"From Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"p-calendar\", 10);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(14, \"tr\")(15, \"td\", 5)(16, \"div\", 6)(17, \"div\", 7)(18, \"div\", 8)(19, \"label\", 9);\n        i0.ɵɵtext(20, \"To Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"p-calendar\", 11);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(22, \"tr\")(23, \"td\", 5);\n        i0.ɵɵtemplate(24, ForecastDetailsComponent_div_24_Template, 3, 1, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"tr\")(26, \"td\", 13)(27, \"div\", 6)(28, \"label\", 14);\n        i0.ɵɵtext(29, \"Building\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ng-select\", 15);\n        i0.ɵɵlistener(\"change\", function ForecastDetailsComponent_Template_ng_select_change_30_listener($event) {\n          return ctx.onSelectBlCode($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(31, \"tr\")(32, \"td\", 13)(33, \"div\", 6)(34, \"label\", 14);\n        i0.ɵɵtext(35, \"Floor \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"ng-select\", 16);\n        i0.ɵɵlistener(\"change\", function ForecastDetailsComponent_Template_ng_select_change_36_listener($event) {\n          return ctx.onSelectFlCode($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(37, \"tr\")(38, \"td\", 13)(39, \"div\", 6)(40, \"label\", 14);\n        i0.ɵɵtext(41, \"Room \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"ng-select\", 17);\n        i0.ɵɵlistener(\"change\", function ForecastDetailsComponent_Template_ng_select_change_42_listener($event) {\n          return ctx.onSelectRmCode($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(43, \"tr\")(44, \"td\", 5)(45, \"div\", 6)(46, \"label\", 14);\n        i0.ɵɵtext(47, \"Asset\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"ng-select\", 18);\n        i0.ɵɵlistener(\"change\", function ForecastDetailsComponent_Template_ng_select_change_48_listener($event) {\n          return ctx.onSelectAsset($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(49, \"tr\")(50, \"td\", 5)(51, \"div\", 6)(52, \"label\", 14);\n        i0.ɵɵtext(53, \"Plan Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"ng-select\", 19);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(55, \"tr\")(56, \"td\", 5)(57, \"div\", 20)(58, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function ForecastDetailsComponent_Template_button_click_58_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function ForecastDetailsComponent_Template_button_click_59_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(60, \"div\", 23)(61, \"div\", 24);\n        i0.ɵɵlistener(\"click\", function ForecastDetailsComponent_Template_div_click_61_listener() {\n          return ctx.onClickRequest();\n        });\n        i0.ɵɵelementStart(62, \"div\", 25)(63, \"div\", 26);\n        i0.ɵɵtext(64, \"Requests\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"div\", 27)(66, \"p\", 28);\n        i0.ɵɵtext(67, \"Total Request:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"span\", 29);\n        i0.ɵɵtext(69);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"button\", 30);\n        i0.ɵɵlistener(\"click\", function ForecastDetailsComponent_Template_button_click_70_listener() {\n          return ctx.onClickRequest();\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(71, \"div\", 31);\n        i0.ɵɵtemplate(72, ForecastDetailsComponent_p_accordion_72_Template, 2, 1, \"p-accordion\", 32);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(73, \"p-dialog\", 33);\n        i0.ɵɵlistener(\"visibleChange\", function ForecastDetailsComponent_Template_p_dialog_visibleChange_73_listener($event) {\n          return ctx.displayRequestList = $event;\n        });\n        i0.ɵɵelementStart(74, \"p-table\", 34, 35);\n        i0.ɵɵtemplate(76, ForecastDetailsComponent_ng_template_76_Template, 65, 0, \"ng-template\", 0);\n        i0.ɵɵtemplate(77, ForecastDetailsComponent_ng_template_77_Template, 21, 24, \"ng-template\", 36);\n        i0.ɵɵtemplate(78, ForecastDetailsComponent_ng_template_78_Template, 3, 1, \"ng-template\", 37);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(79, ForecastDetailsComponent_ng_template_79_Template, 1, 0, \"ng-template\", 38);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(80, ForecastDetailsComponent_p_dialog_80_Template, 2, 6, \"p-dialog\", 39);\n        i0.ɵɵtemplate(81, ForecastDetailsComponent_p_dialog_81_Template, 2, 6, \"p-dialog\", 40);\n        i0.ɵɵtemplate(82, ForecastDetailsComponent_p_dialog_82_Template, 5, 6, \"p-dialog\", 41);\n        i0.ɵɵelementStart(83, \"p-confirmDialog\", 42, 43);\n        i0.ɵɵtemplate(85, ForecastDetailsComponent_ng_template_85_Template, 2, 0, \"ng-template\", 0);\n        i0.ɵɵtemplate(86, ForecastDetailsComponent_ng_template_86_Template, 1, 0, \"ng-template\", 38);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(87, ForecastDetailsComponent_p_dialog_87_Template, 2, 4, \"p-dialog\", 44);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"minDate\", ctx.today)(\"showIcon\", false);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"showIcon\", false)(\"minDate\", ctx.today)(\"maxDate\", ctx.maxDate);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMsg.length > 0);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumBL);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.enumFL);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"searchable\", true)(\"items\", ctx.rm_data)(\"searchable\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"items\", ctx.enumEquipment)(\"clearable\", false)(\"searchable\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.planList)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate(ctx.requestsList.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.requestsList.length == 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isReload);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(48, _c4));\n        i0.ɵɵproperty(\"visible\", ctx.displayRequestList)(\"modal\", true)(\"maximizable\", false)(\"draggable\", false)(\"resizable\", false)(\"closable\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.requestsList)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"scrollable\", true)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(49, _c0))(\"rowHover\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTradeDetails);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPartDetails);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showToolDetails);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(50, _c5));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPlanDetails);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i12.Accordion, i12.AccordionTab, i11.PrimeTemplate, i13.Table, i13.SortableColumn, i13.SelectableRow, i13.SortIcon, i13.ColumnFilter, i14.Calendar, i15.ButtonDirective, i16.Dialog, i17.Panel, i18.ConfirmDialog, i19.NgSelectComponent, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i20.MatLegacyCard, i20.MatLegacyCardContent, i21.TradeDetailsComponent, i22.PartDetailsComponent, i23.AddToolsComponent, i24.ForecastPlanDetailsComponent, i25.MatTooltip, i5.DatePipe],\n    styles: [\".row[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  margin: 10px;\\n}\\n\\n.column[_ngcontent-%COMP%] {\\n  flex-basis: 33%;\\n  overflow-x: scroll;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  padding: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  padding: 5px 5px 5px 0px;\\n  font-size: 14px;\\n}\\n\\n.card-content[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  max-height: 350px;\\n  overflow-y: scroll;\\n}\\n\\n.card-content-title[_ngcontent-%COMP%] {\\n  margin-right: 5px;\\n  font-weight: 400;\\n  font-size: 11px;\\n}\\n\\n.table-header[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  font-size: 12px;\\n}\\n\\n.hover-pointer[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  transition: background-color 0.2s, color 0.2s, border-color 0.2s, box-shadow 0.5s;\\n}\\n\\n.hover-pointer[_ngcontent-%COMP%]:hover {\\n  background-color: #cdefed;\\n  transform: scale(1);\\n}\\n\\n.disabled-form[_ngcontent-%COMP%] {\\n  opacity: 0.8;\\n  \\n\\n  pointer-events: none;\\n}\\n\\n[_nghost-%COMP%]     .p-button.p-button-icon-only {\\n  padding: 0.5rem 0;\\n  width: 16px !important;\\n  height: 16px !important;\\n  cursor: pointer;\\n}\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n  background: lightgray;\\n  border-radius: 2px;\\n}\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 4px;\\n  height: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvZm9yZWNhc3QtZGV0YWlscy9tb2RhbC9mb3JlY2FzdC1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vTWFuYXYlMjBHdXB0YS9Eb3dubG9hZHMvZm1zL2Ztcy9mcm9udGVuZC9mbXNfZnJvbnRlbmQvc3JjL2FwcC91aS9mb3JlY2FzdC1kZXRhaWxzL21vZGFsL2ZvcmVjYXN0LWRldGFpbHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxZQUFBO0FDQ0o7O0FERUE7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLHdCQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUNJLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTtFQUNJLGVBQUE7RUFDQSxpRkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxtQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLG1EQUFBO0VBQ0Esb0JBQUE7QUNDSjs7QURFQTtFQUVJLGlCQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLGVBQUE7QUNBSjs7QURHQTtFQUNJLHFCQUFBO0VBQ0Esa0JBQUE7QUNBSjs7QURHQTtFQUNJLFVBQUE7RUFDQSxXQUFBO0FDQUoiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW46IDEwcHg7XG59XG5cbi5jb2x1bW4ge1xuICAgIGZsZXgtYmFzaXM6IDMzJTtcbiAgICBvdmVyZmxvdy14OiBzY3JvbGw7XG59XG5cbi5jYXJkIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIHBhZGRpbmc6IDVweCA1cHggNXB4IDBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5jYXJkLWNvbnRlbnQge1xuICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG59XG5cbi5jYXJkLWNvbnRlbnQtdGl0bGUge1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMXB4O1xufVxuXG4udGFibGUtaGVhZGVyIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLmhvdmVyLXBvaW50ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMsIGNvbG9yIDAuMnMsIGJvcmRlci1jb2xvciAwLjJzLCBib3gtc2hhZG93IDAuNXM7XG59XG5cbi5ob3Zlci1wb2ludGVyOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2RlZmVkO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG5cbi5kaXNhYmxlZC1mb3JtIHtcbiAgICBvcGFjaXR5OiAwLjg7XG4gICAgLyogWW91IGNhbiBjdXN0b21pemUgdGhlIGRpc2FibGVkIGZvcm0gc3R5bGUgaGVyZSAqL1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnAtYnV0dG9uLnAtYnV0dG9uLWljb24tb25seSB7XG4gICAgLy8gd2lkdGg6IDIuMzU3cmVtO1xuICAgIHBhZGRpbmc6IDAuNXJlbSAwO1xuICAgIHdpZHRoOiAxNnB4ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAxNnB4ICFpbXBvcnRhbnQ7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xufVxuXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICB3aWR0aDogNHB4O1xuICAgIGhlaWdodDogMHB4O1xufSIsIi5yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbjogMTBweDtcbn1cblxuLmNvbHVtbiB7XG4gIGZsZXgtYmFzaXM6IDMzJTtcbiAgb3ZlcmZsb3cteDogc2Nyb2xsO1xufVxuXG4uY2FyZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHBhZGRpbmc6IDVweCA1cHggNXB4IDBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4uY2FyZC1jb250ZW50IHtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBtYXgtaGVpZ2h0OiAzNTBweDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4uY2FyZC1jb250ZW50LXRpdGxlIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTFweDtcbn1cblxuLnRhYmxlLWhlYWRlciB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLmhvdmVyLXBvaW50ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycywgY29sb3IgMC4ycywgYm9yZGVyLWNvbG9yIDAuMnMsIGJveC1zaGFkb3cgMC41cztcbn1cblxuLmhvdmVyLXBvaW50ZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2RlZmVkO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xufVxuXG4uZGlzYWJsZWQtZm9ybSB7XG4gIG9wYWNpdHk6IDAuODtcbiAgLyogWW91IGNhbiBjdXN0b21pemUgdGhlIGRpc2FibGVkIGZvcm0gc3R5bGUgaGVyZSAqL1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5wLWJ1dHRvbi5wLWJ1dHRvbi1pY29uLW9ubHkge1xuICBwYWRkaW5nOiAwLjVyZW0gMDtcbiAgd2lkdGg6IDE2cHggIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxNnB4ICFpbXBvcnRhbnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gIGJhY2tncm91bmQ6IGxpZ2h0Z3JheTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xufVxuXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDRweDtcbiAgaGVpZ2h0OiAwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","MessageService","UtilConstant","BuildingFilterInput","FLFilterInputDTO","RMFilterInputDTO","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","errorMsg","ɵɵelement","ɵɵtemplate","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_4_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_5_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_6_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_7_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_8_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_th_9_Template","ɵɵproperty","title_r16","id","type_r27","availableHours","availableQuantity","requiredHours","requiredQuantity","hoursInUse","inUseQuantity","ɵɵlistener","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_Template_tr_click_0_listener","ɵɵrestoreView","_r41","ctx_r40","ɵɵnextContext","ɵɵresetView","getPlanDetails","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_Template_button_click_2_listener","restoredCtx","$implicit","ctx_r42","onClickDetails","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_5_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_6_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_7_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_8_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_9_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_td_10_Template","name","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_2_Template","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_ng_template_3_Template","ctx_r17","cardData","ɵɵpureFunction0","_c0","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_div_1_Template","ForecastDetailsComponent_p_accordion_72_Template_p_accordion_onOpen_0_listener","$event","_r46","ctx_r45","onTabOpen","ForecastDetailsComponent_p_accordion_72_p_accordionTab_1_Template","ctx_r2","cardTitles","wr_r47","ɵɵpipeBind2","dateRequested","ɵɵtextInterpolate2","escDateResponded","ctx_r5","convertToDisplayTime","escTimeResponded","dateToPerform","escDateCompleted","escTimeCompleted","building","floor","room","eqCode","ɵɵattribute","ForecastDetailsComponent_ng_template_79_Template_button_click_0_listener","_r50","ctx_r49","displayRequestList","ForecastDetailsComponent_p_dialog_80_Template_p_dialog_visibleChange_0_listener","_r52","ctx_r51","showTradeDetails","ɵɵstyleMap","_c1","ctx_r8","selectedTrade","ForecastDetailsComponent_p_dialog_81_Template_p_dialog_visibleChange_0_listener","_r54","ctx_r53","showPartDetails","_c2","ctx_r9","selectedPart","ForecastDetailsComponent_p_dialog_82_Template_p_dialog_visibleChange_0_listener","_r56","ctx_r55","showToolDetails","_c3","ctx_r10","frmToolsDetail","ForecastDetailsComponent_ng_template_86_Template_button_click_0_listener","_r58","_r11","ɵɵreference","accept","ForecastDetailsComponent_p_dialog_87_Template_p_dialog_visibleChange_0_listener","_r60","ctx_r59","showPlanDetails","ctx_r14","planData","ForecastDetailsComponent","constructor","blService","formBuilder","eqService","ppmPlanService","datePipe","planScheduleSrv","spinner","tradeService","partsService","toolsService","confirmationService","enumBL","enumAllBl","enumFL","enumRM","enumAllEquipment","enumEquipment","enumAllFL","allRmDdata","rm_data","eqData","planList","today","Date","requestsList","rowCount","ROW_COUNT","tradeHoursMap","toolHoursMap","partQuantityMap","tradeList","partsList","toolsList","isReload","filterPanel","group","blId","flId","rmId","eqId","planId","fromDate","required","checkDateValidation","toDate","toolsFormPanel","ngOnInit","loadBuilding","loadFloors","loadRooms","loadequipments","loadPlansData","month","getMonth","maxDate","setMonth","date","nextDate","setDefaultDates","loadTrades","loadParts","loadTools","setTimeout","patchValue","getALLBuilding","subscribe","res","map","i","blNameString","unshift","getALLFloor","flNameString","getALLRoom","rmNameString","getAllTrades","getAllParts","getAllTools","onSelectBlCode","siteId","filterFloorCode","filterAssets","bl_id","filter","t","onSelectFlCode","filterRmCode","onSelectRmCode","onSelectAsset","asset","getAllEquipments","status","Object","description","compId","getAllPlans","planName","control","value","undefined","controls","setErrors","clearAsyncValidators","updateValueAndValidity","dateFrom","dateTo","getTime","onSearch","show","filterData","transform","getForecastDetails","finalObject","hide","onClickRequest","data","split","time","type","title","getSelectedTrade","getSelectedPart","selectedTool","getSelectedTool","setToolForm","tradeId","find","partCode","toolId","tool","getCompleteDetails","trades","parts","tools","forecastDetails","forEach","forecast","planTradeList","trade","hoursRequired","planToolList","planPartsList","part","partId","qunatityRequired","actualDetails","each","parseFloat","availableCount","count","Trades","entries","Parts","Tools","console","log","noRequestsFoundAlert","confirm","message","NO_REQUESTS_FOUND","header","icon","key","onClear","reset","event","selectedTab","index","standardHours","qutOnHand","standardAvalTime","getNumberOfDays","from","to","date1","date2","Difference_In_Time","Difference_In_Days","getForecastPlanDetails","_","ɵɵdirectiveInject","i1","BuildingService","i2","FormBuilder","i3","EquipmentService","i4","PpmPlanService","i5","DatePipe","i6","PlanScheduleService","i7","NgxSpinnerService","i8","TradesService","i9","PartsService","i10","ToolsService","i11","ConfirmationService","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","ForecastDetailsComponent_Template","rf","ctx","ForecastDetailsComponent_ng_template_1_Template","ForecastDetailsComponent_div_24_Template","ForecastDetailsComponent_Template_ng_select_change_30_listener","ForecastDetailsComponent_Template_ng_select_change_36_listener","ForecastDetailsComponent_Template_ng_select_change_42_listener","ForecastDetailsComponent_Template_ng_select_change_48_listener","ForecastDetailsComponent_Template_button_click_58_listener","ForecastDetailsComponent_Template_button_click_59_listener","ForecastDetailsComponent_Template_div_click_61_listener","ForecastDetailsComponent_Template_button_click_70_listener","ForecastDetailsComponent_p_accordion_72_Template","ForecastDetailsComponent_Template_p_dialog_visibleChange_73_listener","ForecastDetailsComponent_ng_template_76_Template","ForecastDetailsComponent_ng_template_77_Template","ForecastDetailsComponent_ng_template_78_Template","ForecastDetailsComponent_ng_template_79_Template","ForecastDetailsComponent_p_dialog_80_Template","ForecastDetailsComponent_p_dialog_81_Template","ForecastDetailsComponent_p_dialog_82_Template","ForecastDetailsComponent_ng_template_85_Template","ForecastDetailsComponent_ng_template_86_Template","ForecastDetailsComponent_p_dialog_87_Template","length","valid","_c4","_c5"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\forecast-details\\modal\\forecast-details.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\forecast-details\\modal\\forecast-details.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { Equipment } from '../../Helpdesk/equipment/modal/DTO/equipmentDto.modal';\nimport { BuildingFilterInput } from '../../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../../background-loc/model/DTO/flFilterInput.model';\nimport { BuildingService } from '../../background-loc/services/bl.service';\nimport { EquipmentService } from '../../Helpdesk/equipment/services/equipment.services';\nimport { PpmPlanService } from '../../ppm-plan/services/ppm-plan-services';\nimport { DatePipe } from '@angular/common';\nimport { PlanScheduleService } from '../../ppm-schedule/services/plan-schedule-services';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\nimport { RMFilterInputDTO } from '../../background-loc/model/DTO/rmFilterInput.model';\nimport { CraftspersonService } from '../../Helpdesk/craftsperson/services/craftsperson.service';\nimport { TradesService } from '../../Helpdesk/trades/services/trades.services';\nimport { PartsService } from '../../Helpdesk/parts/services/parts.service';\nimport { ToolsService } from '../../Helpdesk/tools/services/tools.services';\n\n@Component({\n  selector: 'app-forecast-details',\n  templateUrl: './forecast-details.component.html',\n  styleUrls: ['./forecast-details.component.scss'],\n  providers: [MessageService],\n})\nexport class ForecastDetailsComponent {\n\n  filterPanel!: FormGroup;\n  frmToolsDetail!: FormGroup\n  enumBL: BuildingFilterInput[] = [];\n  enumAllBl: BuildingFilterInput[] = [];\n  enumFL: FLFilterInputDTO[] = [];\n  enumRM: BuildingFilterInput[] = [];\n  enumAllEquipment: any[] = [];\n  enumEquipment: Equipment[] = [];\n  enumAllFL: FLFilterInputDTO[] = [];\n  allRmDdata: any[] = [];\n  rm_data: any[] = [];\n  eqData: any[] = [];\n  planList: any[] = [];\n  maxDate!: Date;\n  errorMsg: string = '';\n  today: Date = new Date();\n  requestsList: any[] = [];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  filterData: any;\n  tradeHoursMap: { [key: string]: number } = {};\n  toolHoursMap: { [key: string]: number } = {};\n  partQuantityMap: { [key: string]: number } = {};\n  displayRequestList: boolean = false;\n  showTradeDetails: boolean = false;\n  selectedTrade: any;\n  tradeList: any[] = [];\n  showPartDetails: boolean = false;\n  selectedPart: any;\n  partsList: any[] = [];\n  showToolDetails: boolean = false;\n  toolsList: any[] = [];\n  cardTitles: any[] = [{ id: \"Trades\" }, { id: \"Tools\" }, { id: \"Parts\" }];\n  cardData: any[] = [];\n  finalObject: any;\n  isReload: boolean = false;\n  planData: any = [];\n  showPlanDetails: boolean = false;\n  constructor(\n    private blService: BuildingService,\n    private formBuilder: FormBuilder,\n    private eqService: EquipmentService,\n    private ppmPlanService: PpmPlanService,\n    private datePipe: DatePipe,\n    private planScheduleSrv: PlanScheduleService,\n    private spinner: NgxSpinnerService,\n    private tradeService: TradesService,\n    private partsService: PartsService,\n    private toolsService: ToolsService,\n    private confirmationService: ConfirmationService,\n  ) {\n    this.filterPanel = this.formBuilder.group({\n      blId: [null],\n      flId: [null],\n      rmId: [null],\n      eqId: [null],\n      planId: [null],\n      fromDate: [null, [Validators.required, this.checkDateValidation()]],\n      toDate: [null, [Validators.required, this.checkDateValidation()]],\n    });\n\n    this.frmToolsDetail = this.formBuilder.group({\n      toolsFormPanel: []\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadBuilding();\n    this.loadFloors();\n    this.loadRooms();\n    this.loadequipments();\n    this.loadPlansData();\n    let month = new Date().getMonth();\n    this.maxDate = new Date(new Date().setMonth(month + 6));\n    var date = new Date();\n    var nextDate = new Date(new Date().setMonth(month + 1));\n    this.setDefaultDates(date, nextDate);\n    this.loadTrades();\n    this.loadParts();\n    this.loadTools();\n  }\n\n  setDefaultDates(fromDate: any, toDate: any) {\n    setTimeout(() => {\n      this.filterPanel.patchValue({\n        fromDate: fromDate,\n        toDate: toDate,\n      });\n    }, 0);\n  }\n\n  loadBuilding() {\n    this.blService.getALLBuilding().subscribe((res: any) => {\n      this.enumAllBl = res;\n      this.enumAllBl = res.map((i: any) => { i.name = i.blNameString; return i; });\n      this.enumAllBl.unshift(new BuildingFilterInput('', 'Make a selection', '', 0));\n      this.enumBL = this.enumAllBl;\n    });\n  }\n\n  loadFloors() {\n    this.blService.getALLFloor().subscribe((res: any) => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map((i: any) => { i.name = i.flNameString; return i; });\n      this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', 0));\n      this.enumFL = this.enumAllFL;\n\n    });\n  }\n\n  loadRooms() {\n    this.blService.getALLRoom().subscribe((res: any[]) => {\n      this.allRmDdata = res;\n      this.allRmDdata = res.map((i: any) => { i.name = i.rmNameString; return i; });\n      this.allRmDdata.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', 0));\n      this.rm_data = this.allRmDdata;\n    });\n  }\n\n  loadTrades() {\n    this.tradeService.getAllTrades().subscribe((res: any) => {\n      this.tradeList = res;\n    })\n  }\n\n  loadParts() {\n    this.partsService.getAllParts().subscribe((res: any) => {\n      this.partsList = res;\n    })\n  }\n\n  loadTools() {\n    this.toolsService.getAllTools().subscribe((res: any) => {\n      this.toolsList = res;\n    })\n  }\n\n  onSelectBlCode($event: any) {\n    if ($event.id != null && $event.id != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null,\n          siteId: $event.siteId,\n          eqId: null\n        });\n        this.filterFloorCode($event.id);\n        this.filterAssets($event.id, null, null);\n      }, 0);\n    } else {\n      this.enumFL = this.enumAllFL\n      this.filterAssets(null, null, null);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n          rmId: null,\n          blId: null,\n          eqId: null\n        });\n      }, 0);\n    }\n    this.enumBL.unshift(new BuildingFilterInput('Make a selection', '', '', 0));\n  }\n\n  filterFloorCode(bl_id: any) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id)\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', 0));\n      this.rm_data = this.allRmDdata.filter(t => t.blId == bl_id)\n      this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', 0));\n    }\n  }\n\n  onSelectFlCode($event: any) {\n    if ($event.id != null && $event.id != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId,\n          rmId: null,\n          eqId: null\n        });\n        this.filterRmCode($event.id, $event.blId);\n        this.filterAssets($event.blId, $event.id, null);\n      }, 10);\n    }\n    else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          rmId: null,\n          flId: null,\n          eqId: null\n        });\n      }, 0);\n      this.enumFL = this.enumAllFL;\n      this.filterAssets(null, null, null);\n    }\n    this.rm_data = this.allRmDdata;\n  }\n\n  filterRmCode(flId: any, blId: any) {\n    if (flId != null) {\n      this.rm_data = [];\n      this.rm_data = this.allRmDdata.filter(t => t.blId == blId);\n      this.rm_data = this.rm_data.filter(t => t.flId == flId)\n      this.rm_data.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', 0));\n    }\n  }\n\n  onSelectRmCode($event: any) {\n    if ($event.id != null && $event.id != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId,\n          flId: $event.flId,\n          eqId: null\n        });\n      }, 0);\n      this.filterAssets($event.blId, $event.flId, $event.id);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          rmId: null,\n          eqId: null\n        });\n        this.filterAssets(null, null, null);\n      }, 0);\n    }\n  }\n\n  onSelectAsset($event: any) {\n    if ($event.eqId != null && $event.eqId != '') {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: $event.blId,\n          flId: $event.flId,\n          rmId: $event.rmId\n        });\n      }, 0);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: null,\n          flId: null,\n          rmId: null,\n        });\n      }, 0);\n    }\n  }\n\n  filterAssets(blId: any, flId: any, rmId: any) {\n    this.enumEquipment = this.enumAllEquipment;\n    blId ? this.enumEquipment = this.enumAllEquipment.filter(asset => asset.blId == blId) : '';\n    flId ? this.enumEquipment = this.enumEquipment.filter(asset => asset.blId == blId && asset.flId == flId) : '';\n    rmId ? this.enumEquipment = this.enumEquipment.filter(asset => asset.blId == blId && asset.flId == flId && asset.rmId == rmId) : '';\n    //this.enumEquipment.unshift(new Object({ eqId: \"Make a selection\", description: '', compId: 1 }))\n  }\n\n  loadequipments() {\n    this.eqService.getAllEquipments().subscribe((res: any) => {\n      if (res.status != 202) {\n        this.enumAllEquipment = res;\n        this.enumEquipment = this.enumAllEquipment;\n        this.enumEquipment.unshift(new Object({ eqId: \"Make a selection\", description: '', compId: 1 }))\n      }\n    });\n  }\n\n  loadPlansData() {\n    this.ppmPlanService.getAllPlans().subscribe((res: any) => {\n      if (res.status != 202) {\n        this.planList = res;\n        this.planList.unshift(new Object({ planId: null, planName: \"Make a selection\" }))\n      } else {\n        this.planList = [];\n      }\n    });\n  }\n\n  checkDateValidation(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined && control.value != null) {\n        this.errorMsg = '';\n        this.filterPanel.controls['fromDate'].setErrors(null);\n        this.filterPanel.controls['toDate'].setErrors(null);\n        this.filterPanel.clearAsyncValidators();\n        this.filterPanel.updateValueAndValidity();\n        var dateFrom = new Date(this.filterPanel.controls['fromDate'].value);\n        var dateTo = new Date(this.filterPanel.controls['toDate'].value);\n        if (dateFrom.getTime() > dateTo.getTime() && this.filterPanel.controls['toDate'].value != null) {\n          this.filterPanel.controls['fromDate'].setErrors({ 'incorrect': true });\n          this.filterPanel.updateValueAndValidity();\n          this.errorMsg = ' date end should be greater than date start.'\n          return { 'incorrect': true };\n        } else {\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n\n  onSearch() {\n    this.spinner.show();\n    this.filterData = {\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      rmId: this.filterPanel.controls.rmId.value,\n      eqId: this.filterPanel.controls.eqId.value,\n      planId: this.filterPanel.controls.planId.value ? this.filterPanel.controls.planId.value : 0,\n      fromDate: this.datePipe.transform(this.filterPanel.controls.fromDate.value, \"yyyy-MM-dd\"),\n      toDate: this.datePipe.transform(this.filterPanel.controls.toDate.value, \"yyyy-MM-dd\"),\n    }\n    this.requestsList = [];\n    this.isReload = false;\n    this.planScheduleSrv.getForecastDetails(this.filterData).subscribe((res: any) => {\n\n     \n      // if (res.forecastDetails.length == 0) {\n      //   this.noRequestsFoundAlert();\n      // } else {\n      //   this.requestsList = res.forecastDetails;\n      //   this.getCompleteDetails(res);\n      // }\n      this.requestsList = res.requestsList;\n      this.finalObject = res;\n      this.isReload = true;\n      this.spinner.hide();\n    });\n  }\n\n  onClickRequest() {\n    this.displayRequestList = true;\n  }\n\n  convertToDisplayTime(value: any) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n\n  onClickDetails(type: any, title: any) {\n    if (title == \"Trades\") {\n      this.selectedTrade = this.getSelectedTrade(type.id);\n      this.showTradeDetails = true;\n    } else if (title == \"Parts\") {\n      this.selectedPart = this.getSelectedPart(type.id);\n      this.showPartDetails = true;\n    } else {\n      let selectedTool = this.getSelectedTool(type.id);\n      this.setToolForm(selectedTool);\n      this.showToolDetails = true;\n    }\n\n  }\n\n\n  getSelectedTrade(tradeId: any) {\n    let selectedTrade = this.tradeList.find((t: any) => t.tradeId === tradeId);\n    if (selectedTrade) {\n      return selectedTrade;\n    }\n  }\n\n  getSelectedPart(partCode: any) {\n    let selectedPart = this.partsList.find((t: any) => t.partCode === partCode);\n    if (selectedPart) {\n      return selectedPart;\n    }\n  }\n\n  getSelectedTool(toolId: any) {\n    let selectedTool = this.toolsList.find((t: any) => t.tool === toolId);\n    if (selectedTool) {\n      return selectedTool;\n    }\n  }\n\n  setToolForm(value: any) {\n    setTimeout(() => {\n      this.frmToolsDetail.patchValue({\n        toolsFormPanel: value\n      });\n    }, 0);\n  }\n\n\n  getCompleteDetails(data: any) {\n    const trades: Record<string, { id: string, requiredHours: number; hoursInUse: number; availableHours: number }> = {};\n    const parts: Record<string, { id: string, requiredQuantity: number; inUseQuantity: number; availableQuantity: number }> = {};\n    const tools: Record<string, { id: string, requiredHours: number; hoursInUse: number; availableHours: number }> = {};\n    // Aggregate forecastDetails for trades, parts, and tools\n    data.forecastDetails.forEach((forecast: any) => {\n      forecast.planTradeList.forEach((trade: any) => {\n        trades[trade.tradeId] = trades[trade.tradeId] || { id: trade.tradeId, requiredHours: 0, hoursInUse: 0, availableHours: 0 };\n        trades[trade.tradeId].requiredHours += trade.hoursRequired;\n      });\n\n      forecast.planToolList.forEach((tool: any) => {\n        tools[tool.toolId] = tools[tool.toolId] || { id: tool.toolId, requiredHours: 0, hoursInUse: 0, availableHours: 0 };\n        tools[tool.toolId].requiredHours += tool.hoursRequired;\n\n      });\n\n      forecast.planPartsList.forEach((part: any) => {\n        parts[part.partId] = parts[part.partId] || { id: part.partId, requiredQuantity: 0, inUseQuantity: 0, availableQuantity: 0 };\n        parts[part.partId].requiredQuantity += part.qunatityRequired;\n      });\n    });\n\n    // Aggregate actualDetails for trades, parts, and tools\n    data.actualDetails.forEach((each: any) => {\n      each.trade.forEach((trade: any) => {\n        trades[trade.id] = trades[trade.id] || { id: trade.id, requiredHours: 0, hoursInUse: 0, availableHours: 0 };\n        trades[trade.id].availableHours += parseFloat(trade.availableCount);\n        trades[trade.id].hoursInUse += parseFloat(trade.count);\n      });\n\n      each.part.forEach((part: any) => {\n        parts[part.id] = parts[part.id] || { id: part.id, requiredQuantity: 0, inUseQuantity: 0, availableQuantity: 0 };\n        parts[part.id].availableQuantity += parseFloat(part.availableCount);\n        parts[part.id].inUseQuantity += parseFloat(part.count);\n      });\n\n      each.tool.forEach((tool: any) => {\n        tools[tool.id] = tools[tool.id] || { id: tool.id, requiredHours: 0, hoursInUse: 0, availableHours: 0 };\n        tools[tool.id].availableHours += parseFloat(tool.availableCount);\n        tools[tool.id].hoursInUse += parseFloat(tool.count);\n      });\n    })\n\n\n    // Construct the final object\n    this.finalObject = {\n      Trades: Object.entries(trades).map(([name, { id, requiredHours, hoursInUse, availableHours }]) => ({\n        name,\n        id,\n        requiredHours,\n        hoursInUse,\n        availableHours\n      })),\n      Parts: Object.entries(parts).map(([name, { id, requiredQuantity, inUseQuantity, availableQuantity }]) => ({\n        name,\n        id,\n        requiredQuantity,\n        inUseQuantity,\n        availableQuantity\n      })),\n      Tools: Object.entries(tools).map(([name, { id, requiredHours, hoursInUse, availableHours }]) => ({\n        name,\n        id,\n        requiredHours,\n        hoursInUse,\n        availableHours\n      }))\n    };\n    this.isReload = true;\n    this.spinner.hide();\n    console.log(this.finalObject);\n  }\n\n  noRequestsFoundAlert() {\n    this.confirmationService.confirm({\n      message: UtilConstant.NO_REQUESTS_FOUND,\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      key: 'noReqFound',\n      accept: () => {\n        this.onClear();\n      }\n    });\n  }\n\n  onClear() {\n    this.filterPanel.reset();\n    this.requestsList = [];\n    this.tradeHoursMap = {};\n    this.toolHoursMap = {};\n    this.partQuantityMap = {};\n    this.isReload = false;\n  }\n\n\n  onTabOpen(event: any) {\n\n    this.cardData = [];\n    var selectedTab = this.cardTitles[event.index];\n    switch (selectedTab.id) {\n      case 'Trades':\n        this.cardData = this.finalObject.Trades.map((trade: any) => {\n          \n            // this.selectedTrade = this.getSelectedTrade(trade.id);\n            trade.availableHours = trade.standardHours\n            return trade;\n      \n        });\n        break;\n      case 'Parts':\n        this.cardData = this.finalObject.Parts.map((part: any) => {\n          this.selectedPart = this.getSelectedPart(part.id);\n          part.availableQuantity = this.selectedPart.qutOnHand\n          return part;\n        });\n        break;\n      case 'Tools':\n        this.cardData = this.finalObject.Tools.map((tool: any) => {\n            let selectedTool = this.getSelectedTool(tool.id);\n            tool.availableHours = selectedTool.standardAvalTime * this.getNumberOfDays(this.filterData.fromDate, this.filterData.toDate);\n            return tool;\n        });\n        break;\n      default:\n        this.cardData = [];\n        break;\n    }\n  }\n\n  getNumberOfDays(from: Date, to: Date) {\n    var date1 = new Date(from);\n    var date2 = new Date(to);\n\n    // To calculate the time difference of two dates\n    var Difference_In_Time = date2.getTime() - date1.getTime();\n\n    // To calculate the no. of days between two dates\n    var Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\n    return Difference_In_Days+1;//return including both days\n  }\n\n  getPlanDetails() {\n    this.showPlanDetails = false;\n    this.planScheduleSrv.getForecastPlanDetails(this.filterData).subscribe((res:any) => {\n      this.planData = res;\n      this.showPlanDetails = true;\n    })\n  }\n\n}\n","<p-panel>\n    <ng-template pTemplate=\"header\">\n        <div class=\"header-container\">\n            <div class=\"header-label\">\n                <label class='form-field-lable'>Forecast</label>\n            </div>\n\n        </div>\n    </ng-template>\n    <div style=\"display: flex;\">\n        <div class=\"card\" style=\"width: 25%;\">\n            <form [formGroup]=\"filterPanel\">\n                <table width=\"100%\">\n                    <tr>\n                        <td style=\"width: 25%\">\n                            <div class=\"input-label-custom\">\n                                <div class=\"p-fluid\">\n                                    <div class=\"p-field\">\n                                        <label class='form-field-lable control-label'>From Date</label>\n                                        <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"date\"\n                                            formControlName=\"fromDate\" [minDate]=\"today\" [showIcon]=\"false\"\n                                            inputId=\"icon\"></p-calendar>\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 25%\">\n                            <div class=\"input-label-custom\">\n                                <div class=\"p-fluid\">\n                                    <div class=\"p-field\">\n                                        <label class='form-field-lable control-label'>To Date</label>\n                                        <p-calendar appendTo=\"body\" dateFormat=\"dd M yy\" name=\"date\"\n                                            formControlName=\"toDate\" [showIcon]=\"false\" inputId=\"icon\" [minDate]=\"today\"\n                                            [maxDate]=\"maxDate\"></p-calendar>\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 25%\">\n                            <div *ngIf=\"errorMsg.length >0 \">\n                                <label class='form-field-lable' style=\"color:red;\">{{errorMsg}}</label>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width=\"25%\">\n                            <div class=\"input-label-custom \">\n                                <label class='form-field-lable'>Building</label>\n                                <ng-select appendTo=\"body\" [clearable]=\"false\" placeholder=\"Make a selection\"\n                                    [searchable]=\"true\" [items]=\"enumBL\" formControlName=\"blId\" bindLabel=\"name\"\n                                    bindValue=\"id\" (change)=\"onSelectBlCode($event)\" class=\"ng-select-dropdown\">\n                                </ng-select>\n                            </div>\n                        </td>\n\n                    </tr>\n                    <tr>\n                        <td width=\"25%\">\n                            <div class=\"input-label-custom \">\n                                <label class='form-field-lable'>Floor </label>\n                                <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                    placeholder=\"Make a selection\" [items]=\"enumFL\" formControlName=\"flId\"\n                                    bindLabel=\"name\" bindValue=\"id\" (change)=\"onSelectFlCode($event)\"\n                                    class=\"ng-select-dropdown\">\n                                </ng-select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width=\"25%\">\n                            <div class=\"input-label-custom \">\n                                <label class='form-field-lable'>Room </label>\n                                <ng-select appendTo=\"body\" [clearable]=\"false\" [searchable]=\"true\"\n                                    placeholder=\"Make a selection\" class=\"ng-select-dropdown\" [items]=\"rm_data\"\n                                    formControlName=\"rmId\" (change)=\"onSelectRmCode($event)\" [searchable]=\"true\"\n                                    bindLabel=\"name\" bindValue=\"id\">\n                                </ng-select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 25%\">\n                            <div class=\"input-label-custom \">\n                                <label class='form-field-lable'>Asset</label>\n                                <ng-select appendTo=\"body\" [items]=\"enumEquipment\" [clearable]=\"false\"\n                                    [searchable]=\"true\" placeholder=\"Make a selection\" bindLabel=\"eqId\" bindValue=\"eqId\"\n                                    class=\"ng-select-dropdown\" formControlName=\"eqId\" (change)=\"onSelectAsset($event)\">\n                                </ng-select>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n\n                        <td style=\"width: 25%\">\n                            <div class=\"input-label-custom \">\n                                <label class='form-field-lable'>Plan Name</label>\n                                <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"planList\"\n                                    formControlName=\"planId\" [searchable]=\"true\" bindLabel=\"planName\" bindValue=\"planId\"\n                                    placeholder=\"Make a selection\" class=\"ng-select-dropdown\">\n                                </ng-select>\n                            </div>\n                        </td>\n\n                    </tr>\n                    <tr>\n                        <td style=\"width: 25%\">\n                            <div class=\"input-label-custom \"\n                                style=\"display: flex; flex-direction: row;justify-content: end;\">\n                                <button pButton (click)=\"onClear()\" pRipple label=\"Clear\" style=\"width: 60px;\"\n                                    class=\"p-button-primary p-button-sm pull-right\"></button>\n                                <button pButton pRipple label=\"Forecast\" (click)=\"onSearch()\"\n                                    style=\"width: 60px; margin: 0px 5px 0px 10px;\" class=\"p-button-primary p-button-sm\"\n                                    [disabled]=\"!filterPanel.valid\"></button>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </form>\n        </div>\n        <div class=\"card\" style=\"width: 75%;\">\n            <div class=\"row\" (click)=\"onClickRequest()\">\n                <!-- <div class=\"column\"> -->\n                <div class=\"card\" >\n                    <div class=\"card-header\">Requests</div>\n                    <div class=\"card-content  hover-pointer\" style=\"display: flex;\">\n                        <p class=\"card-content-title\">Total Request:</p> <span style=\"margin-right: 10px;\"\n                            id=\"requestCount\">{{requestsList.length}}</span>\n                        <button pButton pRipple icon=\"pi pi-info-circle\" (click)=\"onClickRequest()\"\n                            [hidden]=\"requestsList.length == 0\" matTooltip=\"View Part Details\"\n                            class=\"p-button-rounded pull-right\" style=\"margin-top: 1.5px;\"></button>\n                    </div>\n                </div>\n                <!-- </div> -->\n            </div>\n            <div class=\"row\">\n                <p-accordion (onOpen)=\"onTabOpen($event)\" *ngIf=\"isReload;\">\n                    <p-accordionTab *ngFor=\"let title of cardTitles;\" [header]=\"title.id\">\n                        <div *ngIf=\"title.id != null;\">\n                            <p-table [value]=\"cardData\" selectionMode=\"single\" [rowHover]=\"true\" [rows]=\"5\"\n                                [paginator]=\"true\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n                                [showCurrentPageReport]=\"true\" [scrollable]=\"true\" scrollDirection=\"both\"\n                                scrollHeight=\"500px\" [rowsPerPageOptions]=\"[5,10,25]\">\n                                <ng-template pTemplate=\"header\">\n                                    <tr>\n                                        <th style=\"width:1rem\"></th>\n                                        <th>Name</th>\n                                        <th *ngIf=\"title.id != 'Parts';\">Standard Hours</th>\n                                        <th *ngIf=\"title.id == 'Parts';\">Available Quantity</th>\n                                        <th *ngIf=\"title.id != 'Parts';\"> Required Hours</th>\n                                        <th *ngIf=\"title.id == 'Parts';\">Required Quantity</th>\n                                        <th *ngIf=\"title.id != 'Parts';\">Allocated Hours</th>\n                                        <th *ngIf=\"title.id == 'Parts';\">Allocated Quantity</th>\n\n                                    </tr>\n                                </ng-template>\n                                <ng-template pTemplate=\"body\" let-type>\n                                    <tr [pSelectableRow]=\"type\"  (click)=\"getPlanDetails()\">\n                                        <td style=\"width:1rem\">\n                                            <button pButton pRipple icon=\"pi pi-info-circle\"\n                                                (click)=\"onClickDetails(type,title.id)\" matTooltip=\"View Part Details\"\n                                                class=\"p-button-rounded pull-right\"></button>\n                                        </td>\n                                        <td>{{ type.name }}</td>\n                                        <td *ngIf=\"title.id != 'Parts';\">{{type.availableHours }}</td>\n                                        <td *ngIf=\"title.id == 'Parts';\">{{type.availableQuantity }}</td>\n                                        <td *ngIf=\"title.id != 'Parts';\">{{type.requiredHours }}</td>\n                                        <td *ngIf=\"title.id == 'Parts';\">{{type.requiredQuantity }}</td>\n                                        <td *ngIf=\"title.id != 'Parts';\">{{type.hoursInUse }}</td>\n                                        <td *ngIf=\"title.id == 'Parts';\">{{type.inUseQuantity }}</td>\n                                    </tr>\n                                </ng-template>\n                            </p-table>\n                        </div>\n                    </p-accordionTab>\n                </p-accordion>\n            </div>\n        </div>\n    </div>\n</p-panel>\n<!-- Request Details -->\n<p-dialog header=\"Requests List\" [(visible)]=\"displayRequestList\" [modal]=\"true\" [style]=\"{width: '70vw'}\"\n    [maximizable]=\"false\" [draggable]=\"false\" [resizable]=\"false\" [closable]=\"false\">\n    <p-table #tt [value]=\"requestsList\" [paginator]=\"true\" [rows]=\"rowCount\" [scrollable]=\"true\" scrollDirection=\"both\"\n        scrollHeight=\"500px\" [showCurrentPageReport]=\"true\"\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [rowsPerPageOptions]=\"[5,10,25]\"\n        styleClass=\"p-datatable-customers p-datatable-gridlines\" [rowHover]=\"false\">\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <!-- <th pSortableColumn=\"wrForecastId\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Request Id</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"wrForecastId\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"wrForecastId\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th> -->\n                <th pSortableColumn=\"dateRequested\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Requested Date </p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"dateRequested\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"dateRequested\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"escDateResponded\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Date To Respond</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"escDateResponded\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"escDateResponded\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"escDateResponded\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Date To Perform</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"escDateResponded\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"escDateResponded\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"escDateCompleted\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Date To Complete</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"escDateCompleted\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"escDateCompleted\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"building\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Building</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"building\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"building\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"floor\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Floor</p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"floor\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"floor\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"room\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Room </p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"room\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"room\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n                <th pSortableColumn=\"eqCode\">\n                    <div class=\"grid-header-column\">\n                        <div class=\"grid-header-label\">\n                            <p class=\"grid-label-paragraph\">Asset </p>\n                        </div>\n                        <div class=\"grid-sort-icon\">\n                            <p-sortIcon field=\"eqCode\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"eqCode\" display=\"menu\"></p-columnFilter>\n                        </div>\n                    </div>\n                </th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-wr>\n            <tr [pSelectableRow]=\"wr\">\n                <!-- <td>{{wr.wrForecast.wrForecastId}}</td> -->\n                <td>{{wr.dateRequested | date :\"dd MMM yyyy\"}}</td>\n                <td>{{wr.escDateResponded | date :\"dd MMM yyyy\"}}\n                    {{convertToDisplayTime(wr.escTimeResponded)}}\n                </td>\n                <td>{{wr.dateToPerform | date :\"dd MMM yyyy\"}} {{convertToDisplayTime(wr.escTimeResponded)}}\n                </td>\n                <td>{{wr.escDateCompleted | date :\"dd MMM yyyy\"}}\n                    {{convertToDisplayTime(wr.escTimeCompleted)}}\n                </td>\n                <td>{{wr.building}}</td>\n                <td>{{wr.floor}}</td>\n                <td>{{wr.room}}</td>\n                <td>{{wr.eqCode}}</td>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\" let-columns>\n            <tr>\n                <td [attr.colspan]=\"8\">\n                    No records found.\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n    <ng-template pTemplate=\"footer\">\n        <button icon=\"pi pi-times\" pButton label=\"Close\" styleClass=\"p-button-text\"\n            (click)=\"displayRequestList = false\"></button>\n    </ng-template>\n</p-dialog>\n\n<!-- Trade Details -->\n<p-dialog id=\"Trade Details\" [(visible)]=\"showTradeDetails\" *ngIf=\"showTradeDetails\" [style]=\"{width: '40vw'}\"\n    [modal]=\"true\">\n    <app-trade-details [selectedTrade]=\"selectedTrade\"></app-trade-details>\n</p-dialog>\n\n<!-- Part Details Form -->\n<p-dialog header=\"Part Details\" [(visible)]=\"showPartDetails\" *ngIf=\"showPartDetails\" [style]=\"{width: '32vw'}\"\n    [modal]=\"true\">\n    <app-part-details [selectedPart]=\"selectedPart\"></app-part-details>\n</p-dialog>\n\n<!-- Part Details Form -->\n<p-dialog header=\"Tool Details\" [(visible)]=\"showToolDetails\" *ngIf=\"showToolDetails\" [style]=\"{width: '35vw'}\"\n    [modal]=\"true\">\n    <form [formGroup]=\"frmToolsDetail\" class=\"disabled-form\">\n        <mat-card>\n            <mat-card-content id=\"tool\">\n                <app-add-tools formControlName=\"toolsFormPanel\"></app-add-tools>\n            </mat-card-content>\n        </mat-card>\n    </form>\n</p-dialog>\n<!-- No Requests Found -->\n<p-confirmDialog #cd key=\"noReqFound\" [style]=\"{width: '20vw'}\">\n    <ng-template pTemplate=\"header\">\n        <h3>Message</h3>\n    </ng-template>\n    <ng-template pTemplate=\"footer\">\n        <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Ok\" (click)=\"cd.accept()\"></button>\n    </ng-template>\n</p-confirmDialog>\n\n<!-- Forecast Plan Details -->\n<p-dialog header=\"Plans\" [(visible)]=\"showPlanDetails\" *ngIf=\"showPlanDetails\" \n    [modal]=\"true\" [draggable]=\"false\">\n    <app-forecast-plan-details [planData]=\"planData\"></app-forecast-plan-details>\n    <!-- <ng-template pTemplate=\"footer\">\n        <p-button icon=\"pi pi-times\" (click)=\"showPlanDetails = false\" label=\"Close\" styleClass=\"p-button-text\"></p-button>\n    </ng-template> -->\n</p-dialog>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}