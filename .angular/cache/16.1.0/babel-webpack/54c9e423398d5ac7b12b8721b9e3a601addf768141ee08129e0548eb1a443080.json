{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport let InventoryService = /*#__PURE__*/(() => {\n  class InventoryService {\n    constructor(inventorySrv) {\n      this.inventorySrv = inventorySrv;\n      this.EVENT = '';\n      this.API_NAME = '';\n    }\n    getAllItems() {\n      return this.inventorySrv.getAll('item', 'getAll');\n    }\n    getAllBudegetTerm() {\n      return this.inventorySrv.getAll('budgetTerms', 'getAll');\n    }\n    getAllCenterBudget() {\n      return this.inventorySrv.getAll('centerBudget', 'getAll');\n    }\n    getAllCenterUsage() {\n      return this.inventorySrv.getAll('centerUsage', 'getAll');\n    }\n    getItemByItemId(id) {\n      return this.inventorySrv.getAllById('item', 'getItemById', id);\n    }\n    getBudegetTermById(id) {\n      return this.inventorySrv.getAllById('budgetTerms', 'getBudgetTermsById', id);\n    }\n    getCenterBudgetById(id) {\n      return this.inventorySrv.getAllById('centerBudget', 'getCenterBudgetById', id);\n    }\n    getCenterUsageById(id) {\n      return this.inventorySrv.getAllById('centerUsage', 'getCenterUsageById', id);\n    }\n    saveItem(data) {\n      return this.inventorySrv.add('item', 'saveItem', data);\n    }\n    saveBudgetTerm(data) {\n      return this.inventorySrv.add('budgetTerms', 'saveBudgetTerms', data);\n    }\n    saveCenterBudget(data) {\n      return this.inventorySrv.add('centerBudget', 'saveCenterBudget', data);\n    }\n    saveCenterUsage(data) {\n      return this.inventorySrv.add('centerUsage', 'saveCenterUsage', data);\n    }\n    checkUsage(data) {\n      return this.inventorySrv.add('centerUsage', 'checkIfTotalCostExceed', data);\n    }\n    deleteItem(data) {\n      return this.inventorySrv.getSingleById('item', 'deleteByItemId', data);\n    }\n    deleteBudgetTerm(data) {\n      return this.inventorySrv.getSingleById('budgetTerms', 'deleteByBudgetTermId', data);\n    }\n    deleteCenterBudget(data) {\n      return this.inventorySrv.getSingleById('centerBudget', 'deleteCenterBudgetById', data);\n    }\n    deleteCenterUsage(data) {\n      return this.inventorySrv.getSingleById('centerUsage', 'deleteCenterUsageById', data);\n    }\n    getCenterBudgetByBudgetTermId(id) {\n      return this.inventorySrv.getSingleById('inventoryReport', 'getByBudgetTermId', id);\n    }\n    getCenterBudgetByBlIdFlId(data) {\n      return this.inventorySrv.search('inventoryReport', 'getByBudgetTermInputs', data);\n    }\n    getCenterUsageExpense(data) {\n      return this.inventorySrv.search('inventoryReport', 'getExpenseByBudgetTermBlFl', data);\n    }\n    getCenterUsageItemExpense(data) {\n      return this.inventorySrv.search('inventoryReport', 'getExpenseByBudgetTermBlFlItem', data);\n    }\n    static #_ = this.ɵfac = function InventoryService_Factory(t) {\n      return new (t || InventoryService)(i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: InventoryService,\n      factory: InventoryService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return InventoryService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}