{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../providers/help-desk-pd-provider\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../services/problem-description.services\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/panel\";\nimport * as i8 from \"primeng/confirmdialog\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"primeng/paginator\";\nfunction HelpDeskProblemDescriptionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function HelpDeskProblemDescriptionComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.addPdItem());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HelpDeskProblemDescriptionComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 13);\n    i0.ɵɵelementStart(2, \"th\", 14)(3, \"div\", 15);\n    i0.ɵɵtext(4, \" Problem Description\");\n    i0.ɵɵelement(5, \"p-sortIcon\", 16)(6, \"p-columnFilter\", 17);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction HelpDeskProblemDescriptionComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 18)(1, \"td\", 13)(2, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function HelpDeskProblemDescriptionComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const pd_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.editPdItem(pd_r7.pdId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function HelpDeskProblemDescriptionComponent_ng_template_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const pd_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onDelete(pd_r7.pdId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pd_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", pd_r7);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", pd_r7.pdDescription);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(pd_r7.pdDescription);\n  }\n}\nfunction HelpDeskProblemDescriptionComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 2);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport class HelpDeskProblemDescriptionComponent {\n  constructor(pdProvider, confirmationService, pdService, messageService) {\n    this.pdProvider = pdProvider;\n    this.confirmationService = confirmationService;\n    this.pdService = pdService;\n    this.messageService = messageService;\n    this.PdData = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.totalElements = 0;\n    this.paginationObj = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"pdId\"],\n      sortOrder: \"ASC\"\n    };\n    this.filterCriteria = {};\n    this.isFiltered = false;\n    this.filterCriteriaList = [];\n  }\n  ngOnInit() {\n    this.loadAllRecords();\n  }\n  loadAllRecords() {\n    let data = {\n      paginationDTO: this.paginationObj,\n      filterCriteria: this.filterCriteriaList\n    };\n    this.pdService.getALLPdsPaginated(data).subscribe(res => {\n      if (res) {\n        this.isFiltered = false;\n        this.PdData = res.content ? res.content : [];\n        this.totalElements = res.totalElements ? res.totalElements : 0;\n      } else {\n        this.PdData = [];\n      }\n    });\n  }\n  editPdItem(pdId) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      pdId: pdId,\n      isEdit: true,\n      newRecord: false\n    };\n    this.pdProvider.openDialog(dialogConfig);\n    this.pdProvider.onDialogueClosed.subscribe(result => {\n      if (result.code === 200) {\n        this.messageService.clear();\n        this.messageService.add({\n          key: 'pdMessage',\n          severity: 'success',\n          summary: 'Record saved successfully',\n          detail: 'Record saved successfully'\n        });\n        this.loadAllRecords();\n      }\n    });\n  }\n  addPdItem() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      pdId: null,\n      isEdit: true,\n      newRecord: true\n    };\n    this.pdProvider.openDialog(dialogConfig);\n    this.pdProvider.onDialogueClosed.subscribe(result => {\n      if (result.code === 200) {\n        this.messageService.clear();\n        this.messageService.add({\n          key: 'pdMessage',\n          severity: 'success',\n          summary: 'Record saved successfully',\n          detail: 'Record saved successfully'\n        });\n        this.loadAllRecords();\n      }\n    });\n  }\n  onDelete(id) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete ' + '?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.deletePd(id);\n      },\n      key: \"pdGrid\"\n    });\n  }\n  deletePd(id) {\n    this.pdService.deleteById(id).subscribe(res => {\n      if (res != null && res.code == 200) {\n        this.messageService.add({\n          key: 'pdMessage',\n          severity: 'success',\n          summary: 'Record deleted successfully',\n          detail: 'Record deleted successfully'\n        });\n        this.loadAllRecords();\n      } else {\n        this.messageService.add({\n          key: 'pdMessage',\n          severity: 'error',\n          summary: 'error',\n          detail: res.text\n        });\n      }\n    }, error => {});\n  }\n  onPageChange(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadAllRecords();\n  }\n  onInnerFilter(event) {\n    if (this.isFiltered) {\n      Object.keys(event.filters).forEach(field => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined) {\n          let filterCriteria = {\n            fieldName: field,\n            value: filterValue,\n            matchMode: matchMode\n          };\n          this.updateFilterCriteriaList(filterCriteria);\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadAllRecords();\n    }\n    this.isFiltered = true;\n  }\n  updateFilterCriteriaList(filterCriteria) {\n    let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaList.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaList[index] = filterCriteria;\n      } else {\n        this.filterCriteriaList.push(filterCriteria);\n      }\n    }\n  }\n  static #_ = this.ɵfac = function HelpDeskProblemDescriptionComponent_Factory(t) {\n    return new (t || HelpDeskProblemDescriptionComponent)(i0.ɵɵdirectiveInject(i1.ProblemDescriptionDialogueProvider), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.ProblemDescriptionService), i0.ɵɵdirectiveInject(i2.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HelpDeskProblemDescriptionComponent,\n    selectors: [[\"app-help-desk-problem-description\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 12,\n    vars: 11,\n    consts: [[\"header\", \"Problem Description\"], [\"pTemplate\", \"icons\"], [1, \"card\", 2, \"height\", \"79vh\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"scrollable\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"pdMessage\"], [\"key\", \"pdGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"pdDescription\"], [1, \"p-d-flex\", \"p-jc-between\", \"p-ai-center\"], [\"field\", \"pdDescription\"], [\"type\", \"text\", \"field\", \"pdDescription\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-times\", \"iconPos\", \"left\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"]],\n    template: function HelpDeskProblemDescriptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-panel\", 0);\n        i0.ɵɵtemplate(1, HelpDeskProblemDescriptionComponent_ng_template_1_Template, 1, 0, \"ng-template\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"p-table\", 3, 4);\n        i0.ɵɵlistener(\"onFilter\", function HelpDeskProblemDescriptionComponent_Template_p_table_onFilter_3_listener($event) {\n          return ctx.onInnerFilter($event);\n        });\n        i0.ɵɵtemplate(5, HelpDeskProblemDescriptionComponent_ng_template_5_Template, 7, 0, \"ng-template\", 5);\n        i0.ɵɵtemplate(6, HelpDeskProblemDescriptionComponent_ng_template_6_Template, 6, 3, \"ng-template\", 6);\n        i0.ɵɵtemplate(7, HelpDeskProblemDescriptionComponent_ng_template_7_Template, 3, 1, \"ng-template\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 8)(9, \"p-paginator\", 9);\n        i0.ɵɵlistener(\"onPageChange\", function HelpDeskProblemDescriptionComponent_Template_p_paginator_onPageChange_9_listener($event) {\n          return ctx.onPageChange($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(10, \"p-toast\", 10)(11, \"p-confirmDialog\", 11);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", ctx.PdData)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"rowHover\", false)(\"scrollable\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n      }\n    },\n    dependencies: [i2.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i4.SortIcon, i4.ColumnFilter, i5.ButtonDirective, i6.Toast, i7.Panel, i8.ConfirmDialog, i9.MatTooltip, i10.Paginator],\n    styles: [\".ellipsis[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-table {\\n  table-layout: fixed;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svaGVscC1kZXNrLXByb2JsZW0tZGVzY3JpcHRpb24vbW9kYWwvaGVscC1kZXNrLXByb2JsZW0tZGVzY3JpcHRpb24uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8uLi8uLi8uLi9NYW5hdiUyMEd1cHRhL0Rvd25sb2Fkcy9mbXMvZm1zL2Zyb250ZW5kL2Ztc19mcm9udGVuZC9zcmMvYXBwL3VpL0hlbHBkZXNrL2hlbHAtZGVzay1wcm9ibGVtLWRlc2NyaXB0aW9uL21vZGFsL2hlbHAtZGVzay1wcm9ibGVtLWRlc2NyaXB0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0FDQ0o7O0FERUU7RUFDRSxtQkFBQTtBQ0NKIiwic291cmNlc0NvbnRlbnQiOlsiLmVsbGlwc2lze1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IFxuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IFxuICB9XG5cbiAgOmhvc3QgOjpuZy1kZWVwIC5wLWRhdGF0YWJsZS10YWJsZXtcbiAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xuICB9IiwiLmVsbGlwc2lzIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG5cbjpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtdGFibGUge1xuICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MatDialogConfig","MessageService","UtilConstant","i0","ɵɵelementStart","ɵɵlistener","HelpDeskProblemDescriptionComponent_ng_template_1_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","addPdItem","ɵɵelementEnd","ɵɵelement","ɵɵtext","HelpDeskProblemDescriptionComponent_ng_template_6_Template_button_click_2_listener","restoredCtx","_r9","pd_r7","$implicit","ctx_r8","editPdItem","pdId","HelpDeskProblemDescriptionComponent_ng_template_6_Template_button_click_3_listener","ctx_r10","onDelete","ɵɵproperty","ɵɵadvance","ɵɵpropertyInterpolate","pdDescription","ɵɵtextInterpolate","ɵɵattribute","HelpDeskProblemDescriptionComponent","constructor","pdProvider","confirmationService","pdService","messageService","PdData","rowCount","ROW_COUNT","totalElements","paginationObj","pageNo","pageSize","sortBy","sortOrder","filterCriteria","isFiltered","filterCriteriaList","ngOnInit","loadAllRecords","data","paginationDTO","getALLPdsPaginated","subscribe","res","content","dialogConfig","disableClose","autoFocus","width","isEdit","newRecord","openDialog","onDialogueClosed","result","code","clear","add","key","severity","summary","detail","id","confirm","message","header","icon","accept","deletePd","deleteById","text","error","onPageChange","event","first","rows","onInnerFilter","Object","keys","filters","forEach","field","filterValue","value","matchMode","undefined","fieldName","updateFilterCriteriaList","index","findIndex","item","splice","push","_","ɵɵdirectiveInject","i1","ProblemDescriptionDialogueProvider","i2","ConfirmationService","i3","ProblemDescriptionService","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","HelpDeskProblemDescriptionComponent_Template","rf","ctx","ɵɵtemplate","HelpDeskProblemDescriptionComponent_ng_template_1_Template","HelpDeskProblemDescriptionComponent_Template_p_table_onFilter_3_listener","$event","HelpDeskProblemDescriptionComponent_ng_template_5_Template","HelpDeskProblemDescriptionComponent_ng_template_6_Template","HelpDeskProblemDescriptionComponent_ng_template_7_Template","HelpDeskProblemDescriptionComponent_Template_p_paginator_onPageChange_9_listener","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\help-desk-problem-description\\modal\\help-desk-problem-description.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\Helpdesk\\help-desk-problem-description\\modal\\help-desk-problem-description.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { ProblemDescriptionDialogueProvider } from '../providers/help-desk-pd-provider';\nimport { ProblemDescriptionService } from '../services/problem-description.services';\nimport { PaginationObj } from 'src/app/model/pagination-model';\n\n@Component({\n  selector: 'app-help-desk-problem-description',\n  templateUrl: './help-desk-problem-description.component.html',\n  styleUrls: ['./help-desk-problem-description.component.scss'],\n  providers: [MessageService]\n})\nexport class HelpDeskProblemDescriptionComponent implements OnInit {\n  PdData:any[] = [];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  totalElements:number = 0;\n  paginationObj:PaginationObj = {\n    pageNo:0,\n    pageSize:this.rowCount,\n    sortBy:[\"pdId\"],\n    sortOrder:\"ASC\"\n  }\n  filterCriteria:any = {};\n  isFiltered:boolean = false;\n  filterCriteriaList :any[]=[];\n  constructor(\n    private pdProvider: ProblemDescriptionDialogueProvider,\n    private confirmationService: ConfirmationService,\n    private pdService: ProblemDescriptionService,\n    private messageService: MessageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.loadAllRecords();\n  }\n\n  loadAllRecords(){\n    let data={paginationDTO:this.paginationObj,filterCriteria:this.filterCriteriaList};\n    this.pdService.getALLPdsPaginated(data).subscribe((res:any)=>{\n      if(res){\n        this.isFiltered= false;\n        this.PdData = res.content ? res.content : [];\n        this.totalElements = res.totalElements ? res.totalElements : 0;\n      }else{\n        this.PdData = [];\n      }\n    })\n  }\n\n  editPdItem(pdId:any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      pdId: pdId,\n      isEdit: true,\n      newRecord: false\n    };\n    this.pdProvider.openDialog(dialogConfig);\n    this.pdProvider.onDialogueClosed.subscribe((result:any)=>{\n      if(result.code === 200){\n        this.messageService.clear();\n        this.messageService.add({ key: 'pdMessage', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n        this.loadAllRecords();\n      }\n    })\n  }\n\n  addPdItem() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      pdId: null,\n      isEdit: true,\n      newRecord: true\n  };\n    this.pdProvider.openDialog(dialogConfig);\n    this.pdProvider.onDialogueClosed.subscribe((result:any)=>{\n      if(result.code === 200){\n        this.messageService.clear();\n        this.messageService.add({ key: 'pdMessage', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n        this.loadAllRecords();\n      }\n  })\n}\n\nonDelete(id: any) {\n  this.confirmationService.confirm({\n    message: 'Are you sure that you want to delete ' + '?',\n    header: 'Confirmation',\n    icon: 'pi pi-exclamation-triangle',\n    accept: () => {\n      this.deletePd(id);\n    },\n    key: \"pdGrid\"\n  });\n}\n\ndeletePd(id: any) {\n  this.pdService.deleteById(id).subscribe((res: any) => {\n    if (res != null && res.code == 200) {\n      this.messageService.add({ key: 'pdMessage', severity: 'success', summary: 'Record deleted successfully', detail: 'Record deleted successfully' });\n     this.loadAllRecords();\n    }else{\n      this.messageService.add({ key: 'pdMessage', severity: 'error', summary: 'error', detail: res.text });\n    }\n  },\n    error => {\n\n    }\n  );\n}\n\nonPageChange(event:any){\n  const pageNo = event.first ? event.first / event.rows : 0;\n  const pageSize = event.rows;\n  this.paginationObj.pageNo = pageNo;\n  this.paginationObj.pageSize = pageSize;\n  this.loadAllRecords();\n}\n\nonInnerFilter(event: any) {\n  if (this.isFiltered) {\n    Object.keys(event.filters).forEach((field) => {\n      const filterValue = event.filters[field][0].value;\n      const matchMode = event.filters[field][0].matchMode;\n      if(filterValue !== undefined){\n        let filterCriteria = { fieldName: field, value: filterValue, matchMode: matchMode };\n        this.updateFilterCriteriaList(filterCriteria);\n      }\n    });\n    this.paginationObj.pageNo = 0;\n    this.loadAllRecords();\n  }\n  this.isFiltered = true;\n}\n\nupdateFilterCriteriaList(filterCriteria:any){\n  let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n  if(filterCriteria['value']==null){\n    if(index !==-1){\n      this.filterCriteriaList.splice(index, 1);\n    }\n  }else {\n    if (index !== -1) {\n      this.filterCriteriaList[index] = filterCriteria;\n    } else {\n      this.filterCriteriaList.push(filterCriteria);\n    }\n  }\n}\n\n}\n","\n  <p-panel header=\"Problem Description\">\n    <ng-template pTemplate=\"icons\">\n      <button pButton (click)=\"addPdItem()\" label=\"Add\" icon=\"pi pi-plus\">\n      </button>\n    </ng-template>\n    <div class=\"card\" style=\"height:79vh;\">\n      <p-table #dt1 [value]=\"PdData\" [paginator]=\"false\" [rows]=\"rowCount\" (onFilter)=\"onInnerFilter($event)\"\n        styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\" [rowHover]=\"false\" [scrollable]=\"true\"\n        scrollDirection=\"both\" scrollHeight=\"500px\">\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width:8rem\"></th>\n            \n            <th pSortableColumn=\"pdDescription\">\n              <div class=\"p-d-flex p-jc-between p-ai-center\"> Problem Description<p-sortIcon field=\"pdDescription\">\n                </p-sortIcon>\n                <p-columnFilter type=\"text\" field=\"pdDescription\" display=\"menu\"></p-columnFilter>\n              </div>\n            </th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-pd>\n          <tr [pSelectableRow]=\"pd\">\n            <td style=\"width:8rem\">\n              <button pButton pRipple icon=\"pi pi-pencil\" type=\"button\" (click)=\"editPdItem(pd.pdId)\"\n                class=\"p-button-text p-button-rounded\">\n              </button>\n              <button pButton type=\"button\" class=\"p-button-text pull-right\" style=\"font-size: 5rem; color: red;\"\n                icon=\"pi pi-times\" iconPos=\"left\" (click)=\"onDelete(pd.pdId)\"></button>\n            </td>\n            <td matTooltip=\"{{pd.pdDescription}}\" matTooltipPosition=\"below\" class=\"ellipsis\">{{pd.pdDescription}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\" let-columns>\n          <tr>\n            <td [attr.colspan]=\"2\">\n              No records found\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n      <div class=\"paginator\">\n        <p-paginator  [rows]=\"rowCount\" [totalRecords]=\"totalElements\" (onPageChange)=\"onPageChange($event)\"\n        [first]=\"paginationObj.pageNo * paginationObj.pageSize\"\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\"\n          [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n      </div>\n    </div>\n  </p-panel>\n  <p-toast key=\"pdMessage\"></p-toast>\n  <p-confirmDialog key=\"pdGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}