{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"../providers/tool-type.oroviders\";\nimport * as i3 from \"../services/tool-type.service\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/toast\";\nimport * as i7 from \"primeng/panel\";\nimport * as i8 from \"primeng/confirmdialog\";\nimport * as i9 from \"ng-zorro-antd/table\";\nimport * as i10 from \"@angular/material/tooltip\";\nimport * as i11 from \"primeng/paginator\";\nfunction ToolTypeComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ToolTypeComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAdd());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ToolTypeComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 15);\n    i0.ɵɵelementStart(2, \"th\", 16)(3, \"div\", 17)(4, \"div\", 18)(5, \"p\", 19);\n    i0.ɵɵtext(6, \"Tool Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 20);\n    i0.ɵɵelement(8, \"p-sortIcon\", 21)(9, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 23)(11, \"div\", 17)(12, \"div\", 18)(13, \"p\", 19);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 20);\n    i0.ɵɵelement(16, \"p-sortIcon\", 24)(17, \"p-columnFilter\", 25);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ToolTypeComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 26)(1, \"td\", 15)(2, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function ToolTypeComponent_ng_template_7_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const toolType_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onEdit(toolType_r7.toolTypeId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function ToolTypeComponent_ng_template_7_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const toolType_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onDelete(toolType_r7));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 29);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const toolType_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", toolType_r7);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(toolType_r7.toolType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", toolType_r7.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(toolType_r7.description);\n  }\n}\nfunction ToolTypeComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c0 = function () {\n  return [\"\", \"cfId\", \"name\", \"lastActivity\", \"Phone\"];\n};\nconst _c1 = function () {\n  return [25, 50, 100];\n};\nexport class ToolTypeComponent {\n  constructor(confirmationService, messageService, toolTypeProvider, service) {\n    this.confirmationService = confirmationService;\n    this.messageService = messageService;\n    this.toolTypeProvider = toolTypeProvider;\n    this.service = service;\n    this.toolTypeData = [];\n    this.loading = false;\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.totalElements = 0;\n    this.paginationObj = {\n      pageNo: 0,\n      pageSize: this.rowCount,\n      sortBy: [\"toolTypeId\"],\n      sortOrder: \"ASC\"\n    };\n    this.filterCriteria = {};\n    this.isFiltered = false;\n    this.filterCriteriaList = [];\n  }\n  ngOnInit() {\n    this.loadRecords();\n  }\n  loadRecords() {\n    this.loading = true;\n    this.isFiltered = false;\n    let data = {\n      paginationDTO: this.paginationObj,\n      filterCriteria: this.filterCriteriaList\n    };\n    this.service.getAllToolTypesPaginated(data).subscribe(res => {\n      if (res) {\n        this.isFiltered = false;\n        this.toolTypeData = res.content ? res.content : [];\n        this.totalElements = res.totalElements ? res.totalElements : 0;\n      } else {\n        this.toolTypeData = [];\n      }\n      this.loading = false;\n    }, error => {\n      this.loading = false;\n    });\n  }\n  onEdit(id) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      toolTypeId: id,\n      isEdit: true,\n      newRecord: false\n    };\n    this.toolTypeProvider.openDialog(dialogConfig);\n    this.toolTypeProvider.onDialogueClosed.subscribe(result => {\n      this.messageService.clear();\n      if (result) {\n        this.messageService.add({\n          key: 'message',\n          severity: 'success',\n          summary: 'Record saved successfully',\n          detail: 'Record saved successfully'\n        });\n        this.loadRecords();\n      }\n    });\n  }\n  onAdd() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      toolTypeId: null,\n      isEdit: true,\n      newRecord: true\n    };\n    this.toolTypeProvider.openDialog(dialogConfig);\n    this.toolTypeProvider.onDialogueClosed.subscribe(result => {\n      this.messageService.clear();\n      if (result) {\n        this.messageService.add({\n          key: 'message',\n          severity: 'success',\n          summary: 'Record saved successfully',\n          detail: 'Record saved successfully'\n        });\n        this.loadRecords();\n      }\n    });\n  }\n  onDelete(toolType) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete ' + toolType.toolType + '?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.deleteToolType(toolType.toolTypeId);\n      },\n      key: \"toolTypeGrid\"\n    });\n  }\n  deleteToolType(id) {\n    this.service.deleteById(id).subscribe(res => {\n      this.messageService.clear();\n      if (res != null && res.code == 200) {\n        this.messageService.add({\n          key: 'message',\n          severity: 'success',\n          summary: 'Record deleted successfully',\n          detail: 'Record deleted successfully'\n        });\n        this.loadRecords();\n      } else {\n        this.messageService.add({\n          key: 'message',\n          severity: 'error',\n          summary: 'error',\n          detail: res.text\n        });\n      }\n    }, error => {});\n  }\n  onPageChange(event) {\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadRecords();\n  }\n  onInnerFilter(event) {\n    if (this.isFiltered) {\n      Object.keys(event.filters).forEach(field => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if (filterValue !== undefined) {\n          let filterCriteria = {\n            fieldName: field,\n            value: filterValue,\n            matchMode: matchMode\n          };\n          this.updateFilterCriteriaList(filterCriteria);\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadRecords();\n    }\n    this.isFiltered = true;\n  }\n  updateFilterCriteriaList(filterCriteria) {\n    let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if (filterCriteria['value'] == null) {\n      if (index !== -1) {\n        this.filterCriteriaList.splice(index, 1);\n      }\n    } else {\n      if (index !== -1) {\n        this.filterCriteriaList[index] = filterCriteria;\n      } else {\n        this.filterCriteriaList.push(filterCriteria);\n      }\n    }\n  }\n  static #_ = this.ɵfac = function ToolTypeComponent_Factory(t) {\n    return new (t || ToolTypeComponent)(i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.ToolTypeDialogueProvider), i0.ɵɵdirectiveInject(i3.ToolTypeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToolTypeComponent,\n    selectors: [[\"app-tool-type\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 14,\n    vars: 13,\n    consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Tool Type Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"dataKey\", \"id\", 3, \"value\", \"paginator\", \"loading\", \"scrollable\", \"globalFilterFields\", \"rowHover\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"message\"], [\"key\", \"toolTypeDelete\", \"position\", \"top-center\"], [\"key\", \"toolTypeGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"toolType\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"toolType\"], [\"type\", \"text\", \"field\", \"toolType\", \"display\", \"menu\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"icon\", \"pi pi-pencil\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", 3, \"click\"], [\"icon\", \"pi pi-times\", \"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-button-text\", \"p-button-rounded\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"]],\n    template: function ToolTypeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n        i0.ɵɵtemplate(2, ToolTypeComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4, 5);\n        i0.ɵɵlistener(\"onFilter\", function ToolTypeComponent_Template_p_table_onFilter_4_listener($event) {\n          return ctx.onInnerFilter($event);\n        });\n        i0.ɵɵtemplate(6, ToolTypeComponent_ng_template_6_Template, 18, 0, \"ng-template\", 6);\n        i0.ɵɵtemplate(7, ToolTypeComponent_ng_template_7_Template, 8, 4, \"ng-template\", 7);\n        i0.ɵɵtemplate(8, ToolTypeComponent_ng_template_8_Template, 3, 1, \"ng-template\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 9)(10, \"p-paginator\", 10);\n        i0.ɵɵlistener(\"onPageChange\", function ToolTypeComponent_Template_p_paginator_onPageChange_10_listener($event) {\n          return ctx.onPageChange($event);\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(11, \"p-toast\", 11)(12, \"p-toast\", 12)(13, \"p-confirmDialog\", 13);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.toolTypeData)(\"paginator\", false)(\"loading\", ctx.loading)(\"scrollable\", true)(\"globalFilterFields\", i0.ɵɵpureFunction0(11, _c0))(\"rowHover\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(12, _c1));\n      }\n    },\n    dependencies: [i1.PrimeTemplate, i4.Table, i4.SortableColumn, i4.SelectableRow, i4.SortIcon, i4.ColumnFilter, i5.ButtonDirective, i6.Toast, i7.Panel, i8.ConfirmDialog, i9.NzTableCellDirective, i9.NzThMeasureDirective, i9.NzTrDirective, i10.MatTooltip, i11.Paginator],\n    styles: [\".ellipsis[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n[_nghost-%COMP%]     .p-datatable-table {\\n  table-layout: fixed;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svdG9vbC10eXBlL21vZGFsL3Rvb2wtdHlwZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQUNKOztBQUVFO0VBQ0UsbUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5lbGxpcHNpc3tcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyBcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOyBcbiAgfVxuXG4gIDpob3N0IDo6bmctZGVlcCAucC1kYXRhdGFibGUtdGFibGV7XG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["MessageService","UtilConstant","MatDialogConfig","i0","ɵɵelementStart","ɵɵlistener","ToolTypeComponent_ng_template_2_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","onAdd","ɵɵelementEnd","ɵɵelement","ɵɵtext","ToolTypeComponent_ng_template_7_Template_button_click_2_listener","restoredCtx","_r9","toolType_r7","$implicit","ctx_r8","onEdit","toolTypeId","ToolTypeComponent_ng_template_7_Template_button_click_3_listener","ctx_r10","onDelete","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","toolType","ɵɵpropertyInterpolate","description","ɵɵattribute","ToolTypeComponent","constructor","confirmationService","messageService","toolTypeProvider","service","toolTypeData","loading","rowCount","ROW_COUNT","totalElements","paginationObj","pageNo","pageSize","sortBy","sortOrder","filterCriteria","isFiltered","filterCriteriaList","ngOnInit","loadRecords","data","paginationDTO","getAllToolTypesPaginated","subscribe","res","content","error","id","dialogConfig","disableClose","autoFocus","width","isEdit","newRecord","openDialog","onDialogueClosed","result","clear","add","key","severity","summary","detail","confirm","message","header","icon","accept","deleteToolType","deleteById","code","text","onPageChange","event","first","rows","onInnerFilter","Object","keys","filters","forEach","field","filterValue","value","matchMode","undefined","fieldName","updateFilterCriteriaList","index","findIndex","item","splice","push","_","ɵɵdirectiveInject","i1","ConfirmationService","i2","ToolTypeDialogueProvider","i3","ToolTypeService","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","ToolTypeComponent_Template","rf","ctx","ɵɵtemplate","ToolTypeComponent_ng_template_2_Template","ToolTypeComponent_Template_p_table_onFilter_4_listener","$event","ToolTypeComponent_ng_template_6_Template","ToolTypeComponent_ng_template_7_Template","ToolTypeComponent_ng_template_8_Template","ToolTypeComponent_Template_p_paginator_onPageChange_10_listener","ɵɵpureFunction0","_c0","_c1"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/tool-type/modal/tool-type.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/tool-type/modal/tool-type.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { ToolTypeDialogueProvider } from '../providers/tool-type.oroviders';\nimport { ToolTypeService } from '../services/tool-type.service';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { PaginationObj } from 'src/app/model/pagination-model';\n\n@Component({\n  selector: 'app-tool-type',\n  templateUrl: './tool-type.component.html',\n  styleUrls: ['./tool-type.component.scss'],\n  providers: [MessageService]\n})\nexport class ToolTypeComponent implements OnInit {\n  toolTypeData: any[] = [];\n  value: any;\n  loading: boolean = false;\n  rowCount: number = UtilConstant.ROW_COUNT;\n  totalElements:number = 0;\n  paginationObj:PaginationObj = {\n    pageNo:0,\n    pageSize:this.rowCount,\n    sortBy:[\"toolTypeId\"],\n    sortOrder:\"ASC\"\n  }\n  filterCriteria:any = {};\n  isFiltered:boolean = false;\n  filterCriteriaList :any[]=[];\n\n  constructor(\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService,\n    private toolTypeProvider: ToolTypeDialogueProvider,\n    private service: ToolTypeService,\n  ) { }\n\n  ngOnInit(): void {\n    this.loadRecords();\n  }\n\n  loadRecords() {\n    this.loading = true;\n    this.isFiltered = false;\n    let data={paginationDTO:this.paginationObj,filterCriteria:this.filterCriteriaList};\n    this.service.getAllToolTypesPaginated(data).subscribe((res: any) => {\n      if (res) {\n        this.isFiltered= false;\n        this.toolTypeData = res.content ? res.content : [];\n        this.totalElements = res.totalElements ? res.totalElements : 0;\n      }\n      else {\n        this.toolTypeData = [];\n      }\n      this.loading = false;\n    },\n      error => {\n        this.loading = false;\n      }\n    );\n  }\n\n  onEdit(id: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      toolTypeId: id,\n      isEdit: true,\n      newRecord: false\n    };\n    this.toolTypeProvider.openDialog(dialogConfig);\n    this.toolTypeProvider.onDialogueClosed.subscribe((result: any) => {\n      this.messageService.clear();\n      if (result) {\n        this.messageService.add({ key: 'message', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n        this.loadRecords();\n      }\n    });\n  }\n\n  onAdd() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '500px';\n    dialogConfig.data = {\n      toolTypeId: null,\n      isEdit: true,\n      newRecord: true\n    };\n    this.toolTypeProvider.openDialog(dialogConfig);\n    this.toolTypeProvider.onDialogueClosed.subscribe((result: any) => {\n      this.messageService.clear();\n      if (result) {\n        this.messageService.add({ key: 'message', severity: 'success', summary: 'Record saved successfully', detail: 'Record saved successfully' });\n        this.loadRecords();\n      }\n    });\n  }\n\n  onDelete(toolType: any) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete '+toolType.toolType+'?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.deleteToolType(toolType.toolTypeId);\n      },\n      key: \"toolTypeGrid\"\n    });\n  }\n\n  deleteToolType(id: any) {\n    this.service.deleteById(id).subscribe((res: any) => {\n      this.messageService.clear();\n      if (res != null && res.code == 200) {\n        this.messageService.add({ key: 'message', severity: 'success', summary: 'Record deleted successfully', detail: 'Record deleted successfully' });\n        this.loadRecords();\n      } else {\n        this.messageService.add({ key: 'message', severity: 'error', summary: 'error', detail: res.text });\n      }\n    },\n      error => {\n\n      }\n    );\n  }\n\n  onPageChange(event:any){\n    const pageNo = event.first ? event.first / event.rows : 0;\n    const pageSize = event.rows;\n    this.paginationObj.pageNo = pageNo;\n    this.paginationObj.pageSize = pageSize;\n    this.loadRecords();\n  }\n\n  onInnerFilter(event: any) {\n    if (this.isFiltered) {\n      Object.keys(event.filters).forEach((field) => {\n        const filterValue = event.filters[field][0].value;\n        const matchMode = event.filters[field][0].matchMode;\n        if(filterValue !== undefined){\n          let filterCriteria = { fieldName: field, value: filterValue, matchMode: matchMode };\n          this.updateFilterCriteriaList(filterCriteria);\n        }\n      });\n      this.paginationObj.pageNo = 0;\n      this.loadRecords();\n    }\n    this.isFiltered = true;\n  }\n\n  updateFilterCriteriaList(filterCriteria:any){\n    let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n    if(filterCriteria['value']==null){\n      if(index !==-1){\n        this.filterCriteriaList.splice(index, 1);\n      }\n    }else {\n      if (index !== -1) {\n        this.filterCriteriaList[index] = filterCriteria;\n      } else {\n        this.filterCriteriaList.push(filterCriteria);\n      }\n    }\n  }\n}\n","<div class=\"card\" style=\"height:92vh;\">\n  <p-panel header=\"Tool Type Details\">\n    <ng-template pTemplate=\"icons\">\n      <button pButton (click)=\"onAdd()\" label=\"Add\" icon=\"pi pi-plus\"></button>\n    </ng-template>\n    <div class=\"card\">\n      <p-table #dt1 [value]=\"toolTypeData\" [paginator]=\"false\" (onFilter)=\"onInnerFilter($event)\" [loading]=\"loading\"\n        [scrollable]=\"true\" scrollDirection=\"both\" scrollHeight=\"550px\"\n        [globalFilterFields]=\"['','cfId','name','lastActivity','Phone']\" [rowHover]=\"false\"\n        styleClass=\"p-datatable-customers p-datatable-gridlines\" dataKey=\"id\">\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width:8rem\"></th>\n            <th pSortableColumn=\"toolType\">\n              <div class=\"grid-header-column\">\n                <div class=\"grid-header-label\">\n                  <p class=\"grid-label-paragraph\">Tool Type</p>\n                </div>\n                <div class=\"grid-sort-icon\">\n                <p-sortIcon field=\"toolType\"></p-sortIcon>\n                <p-columnFilter type=\"text\" field=\"toolType\" display=\"menu\"></p-columnFilter>\n                  </div>\n               </div>\n            </th>\n            <th pSortableColumn=\"description\">\n            <div class=\"grid-header-column\">\n              <div class=\"grid-header-label\">\n                <p class=\"grid-label-paragraph\">Description</p>\n              </div>\n              <div class=\"grid-sort-icon\">\n                 <p-sortIcon field=\"description\"></p-sortIcon>\n                 <p-columnFilter type=\"text\" field=\"description\" display=\"menu\"></p-columnFilter>\n              </div>\n             </div>\n            </th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-toolType>\n          <tr [pSelectableRow]=\"toolType\">\n            <td style=\"width:8rem\">\n              <button icon=\"pi pi-pencil\" pButton pRipple type=\"button\" (click)=\"onEdit(toolType.toolTypeId)\"\n                class=\"p-button-text p-button-rounded\"></button>\n              <button icon=\"pi pi-times\" pButton pRipple type=\"button\" (click)=\"onDelete(toolType)\"\n                class=\"p-button-text p-button-rounded pull-right\" style=\"font-size: 5rem; color: red;\"></button>\n            </td>\n            <td>{{toolType.toolType}}</td>\n            <td matTooltip=\"{{toolType.description}}\" matTooltipPosition=\"below\" class=\"ellipsis\">{{toolType.description}}</td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\" let-columns>\n          <tr>\n            <td [attr.colspan]=\"3\">\n              No records found\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n      <div class=\"paginator\">\n        <p-paginator  [rows]=\"rowCount\" [totalRecords]=\"totalElements\" (onPageChange)=\"onPageChange($event)\"\n        [first]=\"paginationObj.pageNo * paginationObj.pageSize\"\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [showCurrentPageReport]=\"true\"\n          [rowsPerPageOptions]=\"[25,50,100]\"></p-paginator>\n    </div>\n    </div>\n  </p-panel>\n</div>\n<p-toast key=\"message\"></p-toast>\n<p-toast key=\"toolTypeDelete\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"toolTypeGrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}