{"ast":null,"code":"import { UtilConstant } from 'src/common/UtilConstant';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"../services/sla-request-parameters.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/toast\";\nimport * as i8 from \"primeng/panel\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"primeng/paginator\";\nfunction SlaRequestParametersComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function SlaRequestParametersComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onAddSla());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SlaRequestParametersComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 14);\n    i0.ɵɵelementStart(2, \"th\", 15)(3, \"div\", 16)(4, \"div\", 17)(5, \"p\", 18);\n    i0.ɵɵtext(6, \"Problem Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 19);\n    i0.ɵɵelement(8, \"p-sortIcon\", 20)(9, \"p-columnFilter\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 22)(11, \"div\", 16)(12, \"div\", 17)(13, \"p\", 18);\n    i0.ɵɵtext(14, \"Site\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 19);\n    i0.ɵɵelement(16, \"p-sortIcon\", 23)(17, \"p-columnFilter\", 24);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 25)(19, \"div\", 16)(20, \"div\", 17)(21, \"p\", 18);\n    i0.ɵɵtext(22, \"Building\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 19);\n    i0.ɵɵelement(24, \"p-sortIcon\", 26)(25, \"p-columnFilter\", 27);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\", 28)(27, \"div\", 16)(28, \"div\", 17)(29, \"p\", 18);\n    i0.ɵɵtext(30, \"Asset Standard\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 19);\n    i0.ɵɵelement(32, \"p-sortIcon\", 29)(33, \"p-columnFilter\", 30);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction SlaRequestParametersComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 31)(1, \"td\", 14)(2, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function SlaRequestParametersComponent_ng_template_7_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const slaRequest_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onEditSla(slaRequest_r7));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const slaRequest_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", slaRequest_r7);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(slaRequest_r7.problemTypeString);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(slaRequest_r7.siteSiteName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(slaRequest_r7.blBlName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(slaRequest_r7.eqStdEqStd);\n  }\n}\nfunction SlaRequestParametersComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let SlaRequestParametersComponent = /*#__PURE__*/(() => {\n  class SlaRequestParametersComponent {\n    constructor(authSrv, service, router) {\n      this.authSrv = authSrv;\n      this.service = service;\n      this.router = router;\n      this.sla_data = [];\n      this.loading = false;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.isDefaultSla = false;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"slaRequestParametersId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n    }\n    ngOnInit() {\n      this.loadRecords();\n    }\n    loadRecords() {\n      this.loading = true;\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.service.getAllSLARequestsPaginated(data).subscribe(res => {\n        if (res) {\n          this.isFiltered = false;\n          let content = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n          this.sla_data = content.map(each => {\n            if (each.probTypeId === null) {\n              return {\n                ...each,\n                problemTypeString: 'Default'\n              };\n            }\n            return each;\n          });\n        } else {\n          this.sla_data = [];\n        }\n        this.loading = false;\n      });\n    }\n    onAddSla() {\n      this.authSrv.setPreviousUrl(this.router.url);\n      this.router.navigate([\"/add-edit-sla\"], {\n        queryParams: {\n          slaRequestParametersId: 0,\n          slaRequest: null\n        },\n        skipLocationChange: true\n      });\n    }\n    onEditSla(slaRequest) {\n      if (slaRequest) {\n        if (slaRequest.probTypeId === null && slaRequest.siteId === null && slaRequest.blId === null && slaRequest.eqStdId === null) {\n          this.isDefaultSla = true;\n        } else {\n          this.isDefaultSla = false;\n        }\n        this.authSrv.setPreviousUrl(this.router.url);\n        this.router.navigate([\"/add-edit-sla\"], {\n          queryParams: {\n            slaRequestParametersId: slaRequest.slaRequestParametersId,\n            isDefaultSla: this.isDefaultSla\n          },\n          skipLocationChange: true\n        });\n      }\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        this.filterCriteria = {};\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {};\n            if (field == \"problemTypeString\") {\n              filterCriteria = {\n                fieldName: \"probType.probType\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"siteSiteName\") {\n              filterCriteria = {\n                fieldName: \"site.siteName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"blBlName\") {\n              filterCriteria = {\n                fieldName: \"bl.blName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"eqStdEqStd\") {\n              filterCriteria = {\n                fieldName: \"eqStd.eqStd\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function SlaRequestParametersComponent_Factory(t) {\n      return new (t || SlaRequestParametersComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.SLARequestServices), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SlaRequestParametersComponent,\n      selectors: [[\"app-sla-request-parameters\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 13,\n      vars: 10,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \" \"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"550px\", 3, \"value\", \"paginator\", \"rowHover\", \"scrollable\", \"onFilter\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"slaMessage\"], [\"key\", \"slaGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"problemTypeString\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"problemTypeString\"], [\"type\", \"text\", \"field\", \"problemTypeString\", \"display\", \"menu\"], [\"pSortableColumn\", \"siteSiteName\"], [\"field\", \"siteSiteName\"], [\"type\", \"text\", \"field\", \"siteSiteName\", \"display\", \"menu\"], [\"pSortableColumn\", \"blBlName\"], [\"field\", \"blBlName\"], [\"type\", \"text\", \"field\", \"blBlName\", \"display\", \"menu\"], [\"pSortableColumn\", \"eqStdEqStd\"], [\"field\", \"eqStdEqStd\"], [\"type\", \"text\", \"field\", \"eqStdEqStd\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"]],\n      template: function SlaRequestParametersComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, SlaRequestParametersComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4, 5);\n          i0.ɵɵlistener(\"onFilter\", function SlaRequestParametersComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(6, SlaRequestParametersComponent_ng_template_6_Template, 34, 0, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, SlaRequestParametersComponent_ng_template_7_Template, 11, 5, \"ng-template\", 7);\n          i0.ɵɵtemplate(8, SlaRequestParametersComponent_ng_template_8_Template, 3, 1, \"ng-template\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 9)(10, \"p-paginator\", 10);\n          i0.ɵɵlistener(\"onPageChange\", function SlaRequestParametersComponent_Template_p_paginator_onPageChange_10_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(11, \"p-toast\", 11)(12, \"p-confirmDialog\", 12);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.sla_data)(\"paginator\", false)(\"rowHover\", false)(\"scrollable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0));\n        }\n      },\n      dependencies: [i4.PrimeTemplate, i5.Table, i5.SortableColumn, i5.SelectableRow, i5.SortIcon, i5.ColumnFilter, i6.ButtonDirective, i7.Toast, i8.Panel, i9.ConfirmDialog, i10.Paginator]\n    });\n  }\n  return SlaRequestParametersComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}