{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport * as FileSaver from 'file-saver';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/ui/background-loc/provider/rm.provider\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"primeng/table\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"@angular/material/tooltip\";\nfunction AddRoomStatisticsReportTableComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 7);\n    i0.ɵɵelementStart(2, \"th\", 8)(3, \"div\", 9)(4, \"div\", 10)(5, \"p\", 11);\n    i0.ɵɵtext(6, \"Building Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 12);\n    i0.ɵɵelement(8, \"p-sortIcon\", 13)(9, \"p-columnFilter\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 15)(11, \"div\", 9)(12, \"div\", 10)(13, \"p\", 11);\n    i0.ɵɵtext(14, \" Floor Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 12);\n    i0.ɵɵelement(16, \"p-sortIcon\", 16)(17, \"p-columnFilter\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 18)(19, \"div\", 9)(20, \"div\", 10)(21, \"p\", 11);\n    i0.ɵɵtext(22, \" Room Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 12);\n    i0.ɵɵelement(24, \"p-sortIcon\", 19)(25, \"p-columnFilter\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"th\", 21)(27, \"div\", 9)(28, \"div\", 10)(29, \"p\", 11);\n    i0.ɵɵtext(30, \" Division\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 12);\n    i0.ɵɵelement(32, \"p-sortIcon\", 22)(33, \"p-columnFilter\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"th\", 24)(35, \"div\", 9)(36, \"div\", 10)(37, \"p\", 11);\n    i0.ɵɵtext(38, \" Department\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"div\", 12);\n    i0.ɵɵelement(40, \"p-sortIcon\", 25)(41, \"p-columnFilter\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(42, \"th\");\n    i0.ɵɵtext(43, \"Total Space\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"th\");\n    i0.ɵɵtext(45, \"Occupied Space\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"th\");\n    i0.ɵɵtext(47, \"Available Space\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"th\");\n    i0.ɵɵtext(49, \"Occupancy (%)\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddRoomStatisticsReportTableComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 27)(1, \"td\", 7)(2, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AddRoomStatisticsReportTableComponent_ng_template_5_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const rm_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.viewItem(rm_r3));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rm_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", rm_r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(rm_r3.blId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r3.flId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r3.rmId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r3.divId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r3.depId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r3.totalSpace);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r3.occupiedSpace);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r3.availableSpace);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rm_r3.occupiedPercentage);\n  }\n}\nfunction AddRoomStatisticsReportTableComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 7);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nexport let AddRoomStatisticsReportTableComponent = /*#__PURE__*/(() => {\n  class AddRoomStatisticsReportTableComponent {\n    constructor(rmProvider, cdr) {\n      this.rmProvider = rmProvider;\n      this.cdr = cdr;\n      this.rm_data = [];\n      this.rm_array = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n    }\n    ngOnInit() {\n      this.rm_data = this.data;\n      this.cdr.detectChanges();\n    }\n    viewItem(rm) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        isView: true,\n        bl_id: rm.blId,\n        fl_id: rm.flId,\n        rm_id: rm.rmId,\n        isEdit: true,\n        newRecord: false\n      };\n      this.rmProvider.openDialog(dialogConfig);\n      this.rmProvider.onDialogueClosed.subscribe(result => {});\n    }\n    exportExcel() {\n      this.getDestructuredData(this.rm_data);\n      var excelHeaders = [];\n      import(\"xlsx\").then(xlsx => {\n        const worksheet = xlsx.utils.json_to_sheet(this.rm_array);\n        worksheet['!cols'] = [{\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }, {\n          wch: 20\n        }];\n        excelHeaders = [\"Building Code\", \"Floor Code\", \"Room Code\", \"Division\", \"Department\", \"Total Space\", \"Occupied Space\", \"Available Space\", \"Occupancy (%)\"];\n        const headers = excelHeaders.map((header, index) => ({\n          v: header,\n          position: String.fromCharCode(65 + index) + 1\n        }));\n        headers.forEach(header => {\n          worksheet[header.position] = {\n            v: header.v\n          };\n        });\n        const workbook = {\n          Sheets: {\n            'data': worksheet\n          },\n          SheetNames: ['data']\n        };\n        const excelBuffer = xlsx.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array'\n        });\n        this.saveAsExcelFile(excelBuffer, \"room\");\n      });\n    }\n    getDestructuredData(data) {\n      this.rm_array = data.map(item => {\n        return {\n          \"Building Code\": item['blId'],\n          \"Floor Code\": item['flId'],\n          \"Room Code\": item['rmId'],\n          \"Division\": item['divId'],\n          \"Department\": item['depId'],\n          \"Total Space\": item['totalSpace'],\n          \"Occupied Space\": item['occupiedSpace'],\n          \"Available Space\": item['availableSpace'],\n          \"Occupancy (%)\": item['occupiedPercentage']\n        };\n      });\n    }\n    saveAsExcelFile(buffer, fileName) {\n      let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n      let EXCEL_EXTENSION = '.xlsx';\n      const data = new Blob([buffer], {\n        type: EXCEL_TYPE\n      });\n      FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n    }\n    static #_ = this.ɵfac = function AddRoomStatisticsReportTableComponent_Factory(t) {\n      return new (t || AddRoomStatisticsReportTableComponent)(i0.ɵɵdirectiveInject(i1.RMModalDialogueProvider), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddRoomStatisticsReportTableComponent,\n      selectors: [[\"app-add-room-statistics-report-table\"]],\n      inputs: {\n        data: \"data\"\n      },\n      decls: 7,\n      vars: 10,\n      consts: [[1, \"card\"], [2, \"margin\", \"10px\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-excel\", \"matTooltip\", \"XLS\", \"matTooltipPosition\", \"below\", 1, \"p-button-success\", \"p-mr-2\", \"pull-right\", 3, \"disabled\", \"click\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"350px\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"totalRecords\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"blId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"blId\"], [\"type\", \"text\", \"field\", \"blId\", \"display\", \"menu\"], [\"pSortableColumn\", \"flId\"], [\"field\", \"flId\"], [\"type\", \"text\", \"field\", \"flId\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmId\"], [\"field\", \"rmId\"], [\"type\", \"text\", \"field\", \"rmId\", \"display\", \"menu\"], [\"pSortableColumn\", \"divId\"], [\"field\", \"divId\"], [\"type\", \"text\", \"field\", \"divId\", \"display\", \"menu\"], [\"pSortableColumn\", \"depId\"], [\"field\", \"depId\"], [\"type\", \"text\", \"field\", \"depId\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-eye\", 1, \"p-button-text\", \"p-button-rounded\", \"pull-right\", 3, \"click\"]],\n      template: function AddRoomStatisticsReportTableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AddRoomStatisticsReportTableComponent_Template_button_click_2_listener() {\n            return ctx.exportExcel();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"p-table\", 3);\n          i0.ɵɵtemplate(4, AddRoomStatisticsReportTableComponent_ng_template_4_Template, 50, 0, \"ng-template\", 4);\n          i0.ɵɵtemplate(5, AddRoomStatisticsReportTableComponent_ng_template_5_Template, 21, 10, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, AddRoomStatisticsReportTableComponent_ng_template_6_Template, 3, 1, \"ng-template\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.rm_data.length == 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"value\", ctx.rm_data)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c0))(\"rowHover\", false)(\"scrollable\", true)(\"totalRecords\", ctx.rm_data.length);\n        }\n      },\n      dependencies: [i2.PrimeTemplate, i3.Table, i3.SortableColumn, i3.SelectableRow, i3.SortIcon, i3.ColumnFilter, i4.ButtonDirective, i5.MatTooltip]\n    });\n  }\n  return AddRoomStatisticsReportTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}