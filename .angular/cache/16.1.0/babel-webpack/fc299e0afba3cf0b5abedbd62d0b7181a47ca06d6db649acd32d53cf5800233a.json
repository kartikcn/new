{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/ui/Helpdesk/trades/services/trades.services\";\nimport * as i3 from \"../../services/request-trade-services\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"../../../../../../../directive/numbers-only.directive\";\nimport * as i7 from \"../../../../../../../directive/directive/two-digit-decimal-number\";\nfunction AddRequestTradeComponent_label_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 20);\n    i0.ɵɵtext(1, \"Trade already exists\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddRequestTradeComponent {\n  constructor(formBuilder, tradeService, requestTradeService) {\n    this.formBuilder = formBuilder;\n    this.tradeService = tradeService;\n    this.requestTradeService = requestTradeService;\n    this.today = new Date();\n    this.subscriptions = [];\n    this.tradesData = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.tradeExists = false;\n    this.isRequestor = false;\n    this.isApprover = false;\n    this.isTechnician = false;\n    this.isSupervisor = false;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.reqTradeFormPanel = this.formBuilder.group({\n      tradeId: [null, [Validators.required]],\n      requestTradeId: [null],\n      hoursRequired: [null, [Validators.required, Validators.min(1)]],\n      dateAssign: [null],\n      timeAssign: [null],\n      requestId: [null],\n      actualHoursStd: [null],\n      actualHoursDouble: [null],\n      actualHoursOvertime: [null],\n      totalHours: [null],\n      addedBy: [null]\n    });\n    this.subscriptions.push(this.reqTradeFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.loadTrades();\n    if (this.isView) {\n      this.reqTradeFormPanel.disable();\n    }\n  }\n  get value() {\n    const requestTools = {\n      tradeId: this.reqTradeFormPanel.controls.tradeId.value,\n      requestTradeId: this.reqTradeFormPanel.controls.requestTradeId.value,\n      hoursRequired: this.reqTradeFormPanel.controls.hoursRequired.value,\n      requestId: this.reqTradeFormPanel.controls.requestId.value,\n      dateAssign: this.reqTradeFormPanel.controls.dateAssign.value,\n      timeAssign: this.reqTradeFormPanel.controls.timeAssign.value,\n      actualHoursStd: this.reqTradeFormPanel.controls.actualHoursStd.value,\n      actualHoursDouble: this.reqTradeFormPanel.controls.actualHoursDouble.value,\n      actualHoursOvertime: this.reqTradeFormPanel.controls.actualHoursOvertime.value,\n      addedBy: this.reqTradeFormPanel.controls.addedBy.value\n    };\n    return requestTools;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.reqTradeFormPanel.patchValue({\n        tradeId: value.tradeId,\n        requestTradeId: value.requestTradeId,\n        hoursRequired: value.hoursRequired,\n        dateAssign: this.formatDate(value.dateAssign),\n        timeAssign: this.convertToTime(value.timeAssign),\n        requestId: value.requestId,\n        actualHoursStd: value.actualHoursStd,\n        actualHoursDouble: value.actualHoursDouble,\n        actualHoursOvertime: value.actualHoursOvertime,\n        totalHours: parseFloat(value.actualHoursStd) + parseFloat(value.actualHoursDouble) + parseFloat(value.actualHoursOvertime),\n        addedBy: value.addedBy\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const validationErros = [];\n    return validationErros;\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.reqTradeFormPanel.reset();\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  validate(_) {\n    return this.reqTradeFormPanel.valid ? null : {\n      reqTradeFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  loadTrades() {\n    this.tradeService.getAllTrades().subscribe(res => {\n      if (res) {\n        this.tradesData = res;\n      } else {\n        this.tradesData = [];\n      }\n    });\n  }\n  formatDate(date) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n  convertToTime(value) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      return currDate;\n    } else {\n      return null;\n    }\n  }\n  onChangeHours(event) {\n    let actualHoursStd = this.reqTradeFormPanel.controls.actualHoursStd.value;\n    let actualHoursDouble = this.reqTradeFormPanel.controls.actualHoursDouble.value;\n    let actualHoursOvertime = this.reqTradeFormPanel.controls.actualHoursOvertime.value;\n    let totalHours = 0;\n    totalHours = actualHoursStd ? totalHours + parseFloat(actualHoursStd) : totalHours;\n    totalHours = actualHoursDouble ? totalHours + parseFloat(actualHoursDouble) : totalHours;\n    totalHours = actualHoursOvertime ? totalHours + parseFloat(actualHoursOvertime) : totalHours;\n    setTimeout(() => {\n      this.reqTradeFormPanel.patchValue({\n        totalHours: totalHours\n      });\n    });\n  }\n  selectTrade(event) {\n    if (this.previousTrade != event.tradeId) {\n      let requestId = this.reqTradeFormPanel.controls.requestId.value;\n      let tradeId = event.tradeId;\n      this.requestTradeService.checkTradeExist(requestId, tradeId).subscribe(res => {\n        this.tradeExists = false;\n        if (res) {\n          this.tradeExists = true;\n        } else {\n          this.tradeExists = false;\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AddRequestTradeComponent_Factory(t) {\n    return new (t || AddRequestTradeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TradesService), i0.ɵɵdirectiveInject(i3.RequestTradeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddRequestTradeComponent,\n    selectors: [[\"app-add-request-trade\"]],\n    inputs: {\n      isNew: \"isNew\",\n      isView: \"isView\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddRequestTradeComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddRequestTradeComponent),\n      multi: true\n    }])],\n    decls: 49,\n    vars: 9,\n    consts: [[3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\", \"input-container\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"name\", \"tradeId\", \"formControlName\", \"tradeId\", \"bindLabel\", \"tradeCode\", \"bindValue\", \"tradeId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"readonly\", \"change\"], [1, \"input-label-custom\"], [\"type\", \"text\", \"name\", \"hoursRequired\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"hoursRequired\", 1, \"form-control\", 3, \"readonly\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"actual-hours-container\", 3, \"hidden\"], [1, \"scheduler-border\", \"form-field-lable\"], [1, \"scheduler-border\"], [1, \"input-label-custom\", 2, \"margin-left\", \"-80px\", \"margin-top\", \"10px\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"actualHoursStd\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"actualHoursStd\", 1, \"form-control\", 2, \"width\", \"80%\", 3, \"input\"], [1, \"input-label-custom\", 2, \"margin-left\", \"-20px\"], [\"type\", \"text\", \"name\", \"actualHoursOvertime\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"actualHoursOvertime\", 1, \"form-control\", 2, \"width\", \"90%\", 3, \"input\"], [1, \"input-label-custom\", 2, \"margin-left\", \"-80px\"], [\"type\", \"text\", \"name\", \"actualHoursDouble\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"actualHoursDouble\", 1, \"form-control\", 2, \"width\", \"80%\", 3, \"input\"], [\"type\", \"text\", \"name\", \"totalHours\", \"NumbersOnly\", \"\", \"TwoDigitDecimalNumber\", \"\", \"formControlName\", \"totalHours\", 1, \"form-control\", 2, \"width\", \"90%\", 3, \"readOnly\"], [1, \"form-field-lable\", 2, \"color\", \"red\"]],\n    template: function AddRequestTradeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"div\")(3, \"tr\")(4, \"td\", 2)(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Trade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 5);\n        i0.ɵɵlistener(\"change\", function AddRequestTradeComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.selectTrade($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\", 2)(10, \"div\", 6)(11, \"label\", 4);\n        i0.ɵɵtext(12, \"Required Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\")(14, \"input\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"tr\")(16, \"td\");\n        i0.ɵɵtemplate(17, AddRequestTradeComponent_label_17_Template, 2, 0, \"label\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"td\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 9)(20, \"fieldset\", 10)(21, \"legend\", 11);\n        i0.ɵɵtext(22, \"Actual Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"tr\")(24, \"td\")(25, \"div\", 12)(26, \"label\", 13);\n        i0.ɵɵtext(27, \"Standard Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵelementStart(29, \"input\", 14);\n        i0.ɵɵlistener(\"input\", function AddRequestTradeComponent_Template_input_input_29_listener($event) {\n          return ctx.onChangeHours($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"td\")(31, \"div\", 15)(32, \"label\", 13);\n        i0.ɵɵtext(33, \" Overtime Hours \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"br\");\n        i0.ɵɵelementStart(35, \"input\", 16);\n        i0.ɵɵlistener(\"input\", function AddRequestTradeComponent_Template_input_input_35_listener($event) {\n          return ctx.onChangeHours($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"tr\")(37, \"td\")(38, \"div\", 17)(39, \"label\", 13);\n        i0.ɵɵtext(40, \"Double Time Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"br\");\n        i0.ɵɵelementStart(42, \"input\", 18);\n        i0.ɵɵlistener(\"input\", function AddRequestTradeComponent_Template_input_input_42_listener($event) {\n          return ctx.onChangeHours($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"td\")(44, \"div\", 15)(45, \"label\", 13);\n        i0.ɵɵtext(46, \"Total Hours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"br\")(48, \"input\", 19);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.reqTradeFormPanel);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.tradesData)(\"searchable\", true)(\"readonly\", !ctx.isSupervisor && !ctx.isNew);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"readonly\", !ctx.isSupervisor && !ctx.isNew);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.tradeExists);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.isNew);\n        i0.ɵɵadvance(29);\n        i0.ɵɵproperty(\"readOnly\", true);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.NgSelectComponent, i6.NumbersOnlyDirective, i7.TwoDigitDecimalNumberDirective],\n    styles: [\".actual-hours-container[_ngcontent-%COMP%] {\\n  width: 97%;\\n}\\n\\nfieldset.scheduler-border[_ngcontent-%COMP%] {\\n  border: 1px groove #ddd !important;\\n  padding: 0 1.4em 1.4em 1.4em !important;\\n  margin: 0 0 1.5em 0 !important;\\n  box-shadow: 0px 0px 0px 0px #000;\\n  margin-top: 30px !important;\\n}\\n\\nlegend.scheduler-border[_ngcontent-%COMP%] {\\n  font-size: 1em !important;\\n  text-align: left !important;\\n  width: auto;\\n  padding: 0 10px;\\n  border-bottom: none;\\n  margin-top: -10px;\\n  background-color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svd29yay1yZXF1ZXN0LWRldGFpbHMvd2lkZ2V0cy9yZXF1ZXN0LXRyYWRlcy93aWRnZXRzL2FkZC1yZXF1ZXN0LXRyYWRlL2FkZC1yZXF1ZXN0LXRyYWRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksVUFBQTtBQUFKOztBQUlBO0VBQ0ksa0NBQUE7RUFDQSx1Q0FBQTtFQUNBLDhCQUFBO0VBRUEsZ0NBQUE7RUFDQSwyQkFBQTtBQURKOztBQUlFO0VBQ0UseUJBQUE7RUFFQSwyQkFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FBRkoiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0dWFsLWhvdXJzLWNvbnRhaW5lclxue1xuICAgIHdpZHRoOiA5NyU7XG4gICAvLyBib3JkZXI6IDFweCBzb2xpZCAjY2NjZGVmO1xufVxuXG5maWVsZHNldC5zY2hlZHVsZXItYm9yZGVyIHtcbiAgICBib3JkZXI6IDFweCBncm9vdmUgI2RkZCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDAgMS40ZW0gMS40ZW0gMS40ZW0gIWltcG9ydGFudDtcbiAgICBtYXJnaW46IDAgMCAxLjVlbSAwICFpbXBvcnRhbnQ7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggIzAwMDtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAwcHggIzAwMDtcbiAgICBtYXJnaW4tdG9wOiAzMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbiAgXG4gIGxlZ2VuZC5zY2hlZHVsZXItYm9yZGVyIHtcbiAgICBmb250LXNpemU6IDFlbSAhaW1wb3J0YW50O1xuICAgIC8vZm9udC13ZWlnaHQ6IGJvbGQgIWltcG9ydGFudDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgbWFyZ2luLXRvcDogLTEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAvLyB3aWR0aDo4NXB4O1xuICAgLy8gY29sb3I6IGJsYWNrO1xuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","NG_VALIDATORS","NG_VALUE_ACCESSOR","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AddRequestTradeComponent","constructor","formBuilder","tradeService","requestTradeService","today","Date","subscriptions","tradesData","enumList","enumClonedList","tradeExists","isRequestor","isApprover","isTechnician","isSupervisor","onChange","onTouched","reqTradeFormPanel","group","tradeId","required","requestTradeId","hoursRequired","min","dateAssign","timeAssign","requestId","actualHoursStd","actualHoursDouble","actualHoursOvertime","totalHours","addedBy","push","valueChanges","subscribe","value","ngOnInit","loadTrades","isView","disable","requestTools","controls","setTimeout","patchValue","formatDate","convertToTime","parseFloat","isValid","getValidationErrors","length","validationErros","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","forEach","s","unsubscribe","getAllTrades","res","date","dateCreated","currDate","data","split","time","setHours","setMinutes","onChangeHours","event","selectTrade","previousTrade","checkTradeExist","ɵɵdirectiveInject","i1","FormBuilder","i2","TradesService","i3","RequestTradeService","_2","selectors","inputs","isNew","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddRequestTradeComponent_Template","rf","ctx","ɵɵlistener","AddRequestTradeComponent_Template_ng_select_change_8_listener","$event","ɵɵelement","ɵɵtemplate","AddRequestTradeComponent_label_17_Template","AddRequestTradeComponent_Template_input_input_29_listener","AddRequestTradeComponent_Template_input_input_35_listener","AddRequestTradeComponent_Template_input_input_42_listener","ɵɵproperty","ɵɵadvance"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/work-request-details/widgets/request-trades/widgets/add-request-trade/add-request-trade.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/work-request-details/widgets/request-trades/widgets/add-request-trade/add-request-trade.component.html"],"sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Enums } from 'src/app/model/enums.model';\nimport { TradesService } from 'src/app/ui/Helpdesk/trades/services/trades.services';\nimport { RequestTradeService } from '../../services/request-trade-services';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\n\n@Component({\n  selector: 'app-add-request-trade',\n  templateUrl: './add-request-trade.component.html',\n  styleUrls: ['./add-request-trade.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddRequestTradeComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddRequestTradeComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddRequestTradeComponent {\n  today: Date = new Date();\n  reqTradeFormPanel!: FormGroup;\n  subscriptions: Subscription[] = [];\n  hoursRequired!: number;\n  tradesData: any[] = [];\n  enumList: Enums[] = [];\n  enumClonedList: Enums[] = [];\n  previousTrade: any;\n  tradeExists: boolean = false;\n  isRequestor: boolean = false;\n  isApprover: boolean = false;\n  isTechnician: boolean = false;\n  isSupervisor: boolean = false;\n  @Input() isNew!: boolean;\n  @Input() isView!: boolean;\n  constructor(\n    private formBuilder: FormBuilder,\n    private tradeService: TradesService,\n    private requestTradeService: RequestTradeService\n\n  ) {\n    this.reqTradeFormPanel = this.formBuilder.group({\n      tradeId: [null, [Validators.required]],\n      requestTradeId: [null],\n      hoursRequired: [null, [Validators.required,Validators.min(1)]],\n      dateAssign: [null],\n      timeAssign: [null],\n      requestId: [null],\n      actualHoursStd: [null],\n      actualHoursDouble: [null],\n      actualHoursOvertime: [null],\n      totalHours: [null],\n      addedBy:[null]\n\n    });\n\n    this.subscriptions.push(\n      this.reqTradeFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadTrades();\n    if(this.isView) {\n      this.reqTradeFormPanel.disable();\n    }\n  }\n  get value(): any {\n    const requestTools: any = {\n      tradeId: this.reqTradeFormPanel.controls.tradeId.value,\n      requestTradeId: this.reqTradeFormPanel.controls.requestTradeId.value,\n      hoursRequired: this.reqTradeFormPanel.controls.hoursRequired.value,\n      requestId: this.reqTradeFormPanel.controls.requestId.value,\n      dateAssign: this.reqTradeFormPanel.controls.dateAssign.value,\n      timeAssign: this.reqTradeFormPanel.controls.timeAssign.value,\n      actualHoursStd: this.reqTradeFormPanel.controls.actualHoursStd.value,\n      actualHoursDouble: this.reqTradeFormPanel.controls.actualHoursDouble.value,\n      actualHoursOvertime: this.reqTradeFormPanel.controls.actualHoursOvertime.value,\n      addedBy: this.reqTradeFormPanel.controls.addedBy.value,\n    };\n    return requestTools;\n  }\n\n  set value(value: any) {\n    setTimeout(() => {\n      this.reqTradeFormPanel.patchValue({\n        tradeId: value.tradeId,\n        requestTradeId: value.requestTradeId,\n        hoursRequired: value.hoursRequired,\n        dateAssign: this.formatDate(value.dateAssign),\n        timeAssign: this.convertToTime(value.timeAssign),\n        requestId: value.requestId,\n        actualHoursStd: value.actualHoursStd,\n        actualHoursDouble: value.actualHoursDouble,\n        actualHoursOvertime: value.actualHoursOvertime,\n        totalHours: parseFloat(value.actualHoursStd) + parseFloat(value.actualHoursDouble) + parseFloat(value.actualHoursOvertime),\n        addedBy: value.addedBy,\n\n      });\n    });\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n\n  public getValidationErrors() {\n    const validationErros: VaildationError[] = [];\n    return validationErros;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.reqTradeFormPanel.reset();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  validate(_: FormControl) {\n    return this.reqTradeFormPanel.valid ? null : { reqTradeFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  loadTrades() {\n    this.tradeService.getAllTrades().subscribe((res: any) => {\n      if (res) {\n        this.tradesData = res;\n      } else {\n        this.tradesData = []\n      }\n    })\n  }\n\n  formatDate(date: Date | null) {\n    if (date != null) {\n      var dateCreated = new Date(date);\n      return dateCreated;\n    } else {\n      return null;\n    }\n  }\n\n  convertToTime(value: any) {\n    if (value != null) {\n      var currDate = new Date();\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      currDate.setHours(data[0]);\n      currDate.setMinutes(data[1]);\n      return currDate;\n    } else {\n      return null;\n    }\n\n  }\n\n  onChangeHours(event: any) {\n    let actualHoursStd = this.reqTradeFormPanel.controls.actualHoursStd.value;\n    let actualHoursDouble = this.reqTradeFormPanel.controls.actualHoursDouble.value;\n    let actualHoursOvertime = this.reqTradeFormPanel.controls.actualHoursOvertime.value;\n    let totalHours = 0;\n    totalHours = actualHoursStd ? totalHours + parseFloat(actualHoursStd):totalHours;\n    totalHours = actualHoursDouble ? totalHours + parseFloat(actualHoursDouble):totalHours;\n    totalHours = actualHoursOvertime ? totalHours + parseFloat(actualHoursOvertime):totalHours;\n    setTimeout(() => {\n      this.reqTradeFormPanel.patchValue({\n        totalHours: totalHours,\n      });\n    });\n  }\n\n  selectTrade(event: any) {\n    if (this.previousTrade != event.tradeId) {\n\n      let requestId = this.reqTradeFormPanel.controls.requestId.value;\n      let tradeId = event.tradeId;\n      this.requestTradeService.checkTradeExist(requestId, tradeId).subscribe((res: any) => {\n        this.tradeExists = false;\n        if (res) {\n          this.tradeExists = true;\n        } else {\n          this.tradeExists = false;\n        }\n      })\n    }\n  }\n\n}\n","<form [formGroup]=\"reqTradeFormPanel\">\n    <table width=\"100%\">\n        <div>\n        <tr>\n            <td style=\"width: 50%;\"> \n                <div class=\"input-label-custom input-container\">\n                    <label class='form-field-lable control-label'>Trade</label>\n                    <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"tradesData\" name=\"tradeId\"\n                        formControlName=\"tradeId\" [searchable]=\"true\" bindLabel=\"tradeCode\" bindValue=\"tradeId\"\n                        placeholder=\"Make a selection\" class=\"ng-select-dropdown\" (change)=\"selectTrade($event)\"\n                        [readonly]=\"!isSupervisor && !isNew\">\n                    </ng-select>\n                </div>\n            </td>\n        \n            <td style=\"width: 50%;\">\n                <div class=\"input-label-custom \">\n                    <label class='form-field-lable control-label'>Required Hours</label><br>\n                    <input type=\"text\" class=\"form-control\" name=\"hoursRequired\" NumbersOnly TwoDigitDecimalNumber\n                        formControlName=\"hoursRequired\" [readonly]=\"!isSupervisor && !isNew\">\n                 </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label class='form-field-lable' *ngIf=\"tradeExists\" style=\"color:red;\">Trade already exists</label>\n            </td>\n            <td></td>\n        </tr>\n         </div>\n         <div class=\"actual-hours-container\"  [hidden]=\"isNew\">\n            <fieldset class=\"scheduler-border form-field-lable\">\n                <legend class=\"scheduler-border\" >Actual Hours</legend>\n                <tr>\n                    <td>\n                      <div class=\"input-label-custom \"style=\"margin-left: -80px;margin-top: 10px\" >\n                            <label class='form-field-lable'>Standard Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursStd\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"actualHoursStd\" style=\"width: 80%;\"(input)=onChangeHours($event)>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"input-label-custom \" style=\"margin-left: -20px;\"  >\n                            <label class='form-field-lable'> Overtime Hours </label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursOvertime\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"actualHoursOvertime\" style=\"width: 90%;\"(input)=onChangeHours($event)>\n                        </div>\n                    </td>\n                </tr><tr>\n                    <td >\n                        <div class=\"input-label-custom \"  style=\"margin-left: -80px;\">\n                            <label class='form-field-lable'>Double Time Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"actualHoursDouble\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"actualHoursDouble\"style=\"width: 80%;\"(input)=onChangeHours($event)>\n                        </div>\n                    </td>\n                    <td >\n                        <div class=\"input-label-custom \"   style=\"margin-left: -20px;\">\n                            <label class='form-field-lable'>Total Hours</label><br>\n                            <input type=\"text\" class=\"form-control\" name=\"totalHours\" NumbersOnly TwoDigitDecimalNumber\n                                formControlName=\"totalHours\"[readOnly]=\"true\"style=\"width: 90%;\">\n                        </div>\n                    </td>\n                </tr>\n            </fieldset>\n        </div>\n    </table>\n</form>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}