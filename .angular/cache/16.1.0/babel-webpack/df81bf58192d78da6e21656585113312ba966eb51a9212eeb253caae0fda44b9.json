{"ast":null,"code":"import { UtilConstant as UC } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nexport class BreakpointService {\n  static #_ = this.clients = [];\n  static #_2 = this.tabletPotrait = UC.TABLET_POTRAIT;\n  static #_3 = this.tabletLandscape = UC.TABLET_LANDSCAPE;\n  static #_4 = this.useTabletProtrait = false;\n  static #_5 = this.useTabletLandscape = false;\n  constructor(bpo) {\n    this.bpo = bpo;\n    BreakpointService.bpoSubscription = this.bpo.observe([BreakpointService.tabletPotrait, BreakpointService.tabletLandscape]).subscribe(state => {\n      BreakpointService.useTabletProtrait = state.breakpoints[BreakpointService.tabletPotrait];\n      BreakpointService.useTabletLandscape = state.breakpoints[BreakpointService.tabletLandscape];\n      BreakpointService.clients.forEach(client => {\n        client.notify();\n      });\n    });\n  }\n  register(client) {\n    BreakpointService.clients.push(client);\n    client.notify();\n  }\n  unregister(client) {\n    const index = BreakpointService.clients.indexOf(client, 0);\n    if (index > -1) BreakpointService.clients.splice(index, 1);\n  }\n  static #_6 = this.ɵfac = function BreakpointService_Factory(t) {\n    return new (t || BreakpointService)(i0.ɵɵinject(i1.BreakpointObserver));\n  };\n  static #_7 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BreakpointService,\n    factory: BreakpointService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}