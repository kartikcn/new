{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"../svg-view/services/svg-view.service\";\nimport * as i4 from \"../arrangement/services/arrangement.service\";\nimport * as i5 from \"../rm-config/rm-config/services/rm-config.service\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"primeng/api\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/button\";\nimport * as i13 from \"../svg-view/svg-view.component\";\nfunction FloorplanArrangementSvgComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FloorplanArrangementSvgComponent_div_21_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 22)(2, \"p-tableHeaderCheckbox\", 23);\n    i0.ɵɵlistener(\"click\", function FloorplanArrangementSvgComponent_div_21_ng_template_4_Template_p_tableHeaderCheckbox_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.checkboxChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"th\", 24);\n    i0.ɵɵtext(4, \" Arrangement Type \");\n    i0.ɵɵelement(5, \"p-sortIcon\", 25)(6, \"p-columnFilter\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \" Color \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FloorplanArrangementSvgComponent_div_21_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 27)(1, \"td\", 22)(2, \"p-tableCheckbox\", 28);\n    i0.ɵɵlistener(\"click\", function FloorplanArrangementSvgComponent_div_21_ng_template_5_Template_p_tableCheckbox_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.checkboxChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"div\", 29);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arr_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", arr_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", arr_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(arr_r8.arrangementType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", arr_r8.colorCode);\n  }\n}\nfunction FloorplanArrangementSvgComponent_div_21_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nfunction FloorplanArrangementSvgComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 15)(2, \"div\", 16)(3, \"p-table\", 17);\n    i0.ɵɵlistener(\"selectionChange\", function FloorplanArrangementSvgComponent_div_21_Template_p_table_selectionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.selectedArrangements = $event);\n    });\n    i0.ɵɵtemplate(4, FloorplanArrangementSvgComponent_div_21_ng_template_4_Template, 9, 0, \"ng-template\", 18);\n    i0.ɵɵtemplate(5, FloorplanArrangementSvgComponent_div_21_ng_template_5_Template, 7, 5, \"ng-template\", 19);\n    i0.ɵɵtemplate(6, FloorplanArrangementSvgComponent_div_21_ng_template_6_Template, 3, 1, \"ng-template\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 21);\n    i0.ɵɵelement(8, \"app-svg-view\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", ctx_r1.floorPlanArrangementList)(\"paginator\", true)(\"rows\", ctx_r1.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(8, _c0))(\"rowHover\", false)(\"scrollable\", true)(\"selection\", ctx_r1.selectedArrangements);\n  }\n}\nfunction FloorplanArrangementSvgComponent_ngx_spinner_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport let FloorplanArrangementSvgComponent = /*#__PURE__*/(() => {\n  class FloorplanArrangementSvgComponent {\n    constructor(blServ, authSrv, svgViewSrv, arrangeSrv, rmConfigSrv, formBuilder, cdr, spinner) {\n      this.blServ = blServ;\n      this.authSrv = authSrv;\n      this.svgViewSrv = svgViewSrv;\n      this.arrangeSrv = arrangeSrv;\n      this.rmConfigSrv = rmConfigSrv;\n      this.formBuilder = formBuilder;\n      this.cdr = cdr;\n      this.spinner = spinner;\n      this.allBl = [];\n      this.enumBL = [];\n      this.enumFL = [];\n      this.enumAllFL = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.viewSvg = false;\n      this.allSVGElementsData = [];\n      this.allDisplaySVGElementsData = [];\n      this.roomDetails = [];\n      this.availableRmConfigRoom = [];\n      this.focusParticularRoom = false;\n      this.fileString = '';\n      this.allArragements = [];\n      this.floorPlanArrangementList = [];\n      this.allRoomsList = [];\n      this.displayNoFloorPlanInfo = false;\n      this.selectedArrangements = [];\n      this.showSpinner = true;\n      this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n      this.filterPanel = this.formBuilder.group({\n        blId: [null, [Validators.required]],\n        flId: [null, [Validators.required]]\n      });\n    }\n    ngOnInit() {\n      this.compId = this.authSrv.getLoggedInUserCompId();\n      this.loadAllBuilding();\n      this.loadAllFloor();\n      this.loadAllArrangement();\n    }\n    ngAfterViewInit() {\n      if (this.viewSvg) {\n        this.svgViewComp;\n      }\n    }\n    loadAllArrangement() {\n      this.arrangeSrv.getAllArrangements().subscribe(res => {\n        this.allArragements = res;\n      });\n    }\n    loadAllBuilding() {\n      this.blServ.getALLBuilding().subscribe(res => {\n        this.enumBL = res;\n        this.enumBL = res.map(i => {\n          i.name = i.blNameString;\n          return i;\n        });\n        this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n      });\n    }\n    loadAllFloor() {\n      this.blServ.getALLFloor().subscribe(res => {\n        this.enumAllFL = res;\n        this.enumAllFL = res.map(i => {\n          i.name = i.flNameString;\n          return i;\n        });\n        this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n        this.enumFL = this.enumAllFL;\n      });\n    }\n    onSelectBlCode($event) {\n      if ($event.id != null) {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            flId: null\n          });\n          this.loadFloorCode($event.id);\n        }, 10);\n      } else {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            flId: null\n          });\n        }, 10);\n        this.enumFL = this.enumAllFL;\n      }\n    }\n    loadFloorCode(bl_id) {\n      if (bl_id != null) {\n        this.enumFL = [];\n        this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n        this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      }\n    }\n    onSelectFlCode(event) {\n      if (event.id != null) {\n        setTimeout(() => {\n          this.filterPanel.patchValue({\n            blId: event.blId\n          });\n        }, 10);\n      } else {\n        this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      }\n    }\n    onSearch() {\n      let blId = this.filterPanel.controls.blId.value;\n      let flId = this.filterPanel.controls.flId.value;\n      this.displayNoFloorPlanInfo = false;\n      this.viewSvg = false;\n      this.showSpinner = true;\n      this.spinner.show();\n      this.selectedArrangements = [];\n      let flData = this.enumFL.filter(i => i.blId == blId && i.id == flId);\n      //@ts-ignore\n      if (flData[0].svgName != null) {\n        let data = {\n          id: flId,\n          blId: blId,\n          name: '',\n          compId: this.compId,\n          svgName: '',\n          flInfo: '',\n          units: ''\n        };\n        this.svgViewSrv.getSVGFile(data).subscribe(res => {\n          if (res.fileName != \"error\") {\n            this.fileString = res.fileContent;\n            this.loadAllSVGData(blId, flId);\n          } else {\n            this.spinner.hide();\n            this.showSpinner = false;\n            this.displayNoFloorPlanInfo = true;\n          }\n        });\n      } else {\n        this.spinner.hide();\n        this.showSpinner = false;\n        this.displayNoFloorPlanInfo = true;\n      }\n    }\n    loadAllSVGData(blId, flId) {\n      this.allSVGElementsData = [];\n      this.allDisplaySVGElementsData = [];\n      this.floorPlanArrangementList = [];\n      let data = {\n        flId: flId,\n        blId: blId,\n        compId: this.compId\n      };\n      this.rmConfigSrv.getRmConfigByBlAndFlId(data).subscribe(res => {\n        if (res) {\n          this.allSVGElementsData = res.filter(each => each.rmSvgElementId !== null).map(each => {\n            let match = this.allArragements.find(obj2 => obj2.arrangementType === each.arrangementType);\n            return {\n              ...each,\n              ...match\n            };\n          });\n          this.allDisplaySVGElementsData = this.allSVGElementsData;\n          this.allSVGElementsData.forEach(el => {\n            let idObj = {\n              roomElementId: el.rmSvgElementId,\n              assetElementId: null\n            };\n            let colorObj = {\n              roomColor: el.highlightColor,\n              assetColor: null\n            };\n            let contentData = {\n              blId: parseInt(blId),\n              flId: parseInt(flId),\n              rmId: el.rmId,\n              label: [],\n              showLabel: false,\n              highlightRoom: true,\n              svgElementId: idObj,\n              color: colorObj,\n              rmCode: '',\n              zoomAtRoom: false\n            };\n            this.svgRoomData.content.push(contentData);\n          });\n          this.svgRoomData.blId = parseInt(blId);\n          this.svgRoomData.flId = parseInt(flId);\n          this.svgRoomData.locate = \"room\";\n          this.floorPlanArrangementList = Array.from(new Set(this.allSVGElementsData.map(item => item.arrangementType + \"-\" + item.highlightColor))).map(combination => {\n            let [arrangementType, colorCode] = combination.split(\"-\");\n            return {\n              arrangementType: arrangementType,\n              colorCode: colorCode\n            };\n          });\n          this.viewSvg = true;\n          this.cdr.detectChanges();\n          this.spinner.hide();\n          this.showSpinner = false;\n        }\n      });\n    }\n    onClear() {\n      this.viewSvg = false;\n      this.showSpinner = true;\n      this.allSVGElementsData = [];\n      this.allDisplaySVGElementsData = [];\n      this.fileString = '';\n      this.floorPlanArrangementList = [];\n      this.displayNoFloorPlanInfo = false;\n      this.selectedArrangements = [];\n      this.filterPanel.patchValue({\n        blId: null,\n        flId: null\n      });\n      this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    }\n    checkboxChange($event) {\n      this.viewSvg = false;\n      this.allDisplaySVGElementsData = [];\n      this.allDisplaySVGElementsData = this.allSVGElementsData.filter(each => this.selectedArrangements.some(eachArr => eachArr.arrangementType === each.arrangementType));\n      this.svgRoomData.content = [];\n      this.allDisplaySVGElementsData.forEach(el => {\n        let idObj = {\n          roomElementId: el.rmSvgElementId,\n          assetElementId: null\n        };\n        let colorObj = {\n          roomColor: el.highlightColor,\n          assetColor: null\n        };\n        let contentData = {\n          blId: el.blId,\n          flId: el.flId,\n          rmId: el.rmId,\n          label: [],\n          showLabel: false,\n          highlightRoom: true,\n          svgElementId: idObj,\n          color: colorObj,\n          rmCode: '',\n          zoomAtRoom: false\n        };\n        this.svgRoomData.content.push(contentData);\n      });\n      this.showSpinner = true;\n      this.spinner.show();\n      this.viewSvg = true;\n      this.cdr.detectChanges();\n      this.svgViewComp.loadSvgFile();\n      this.spinner.hide();\n      this.showSpinner = false;\n    }\n    static #_ = this.ɵfac = function FloorplanArrangementSvgComponent_Factory(t) {\n      return new (t || FloorplanArrangementSvgComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.SvgViewService), i0.ɵɵdirectiveInject(i4.ArrangementService), i0.ɵɵdirectiveInject(i5.RmConfigService), i0.ɵɵdirectiveInject(i6.UntypedFormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i7.NgxSpinnerService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FloorplanArrangementSvgComponent,\n      selectors: [[\"app-floorplan-arrangement-svg\"]],\n      viewQuery: function FloorplanArrangementSvgComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(SvgViewComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n        }\n      },\n      decls: 23,\n      vars: 11,\n      consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"margin\", \"5px 0 0 5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [1, \"card\", \"no-file-found\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"600px\"], [2, \"width\", \"22%\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"95%\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"selection\", \"selectionChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [2, \"width\", \"73%\", \"margin\", \"5px\"], [2, \"width\", \"4rem\"], [3, \"click\"], [\"pSortableColumn\", \"arrangementType\"], [\"field\", \"arrangementType\"], [\"type\", \"text\", \"field\", \"arrangementType\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [3, \"value\", \"click\"], [1, \"td-class\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n      template: function FloorplanArrangementSvgComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Building \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"ng-select\", 6);\n          i0.ɵɵlistener(\"change\", function FloorplanArrangementSvgComponent_Template_ng_select_change_8_listener($event) {\n            return ctx.onSelectBlCode($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n          i0.ɵɵtext(12, \"Floor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"ng-select\", 7);\n          i0.ɵɵlistener(\"change\", function FloorplanArrangementSvgComponent_Template_ng_select_change_13_listener($event) {\n            return ctx.onSelectFlCode($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(14, \"td\", 3)(15, \"td\", 3);\n          i0.ɵɵelementStart(16, \"td\", 3)(17, \"div\", 8)(18, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function FloorplanArrangementSvgComponent_Template_button_click_18_listener() {\n            return ctx.onSearch();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function FloorplanArrangementSvgComponent_Template_button_click_19_listener() {\n            return ctx.onClear();\n          });\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵtemplate(20, FloorplanArrangementSvgComponent_div_20_Template, 3, 0, \"div\", 11);\n          i0.ɵɵtemplate(21, FloorplanArrangementSvgComponent_div_21_Template, 9, 9, \"div\", 12);\n          i0.ɵɵtemplate(22, FloorplanArrangementSvgComponent_ngx_spinner_22_Template, 3, 1, \"ngx-spinner\", 13);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.displayNoFloorPlanInfo);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n        }\n      },\n      dependencies: [i8.NgIf, i9.NgSelectComponent, i10.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.TableCheckbox, i11.TableHeaderCheckbox, i11.ColumnFilter, i12.ButtonDirective, i6.ɵNgNoValidate, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i7.NgxSpinnerComponent, i13.SvgViewComponent],\n      styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header{background-color:#879cc9;color:#000;padding-left:10px;font-weight:400;margin-bottom:0;height:10px!important}.td-class[_ngcontent-%COMP%]{background-color:inherit;display:flex;align-items:center;justify-content:center;width:40px;height:20px;margin:10px auto auto}.no-file-found[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:600px}\"]\n    });\n  }\n  return FloorplanArrangementSvgComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}