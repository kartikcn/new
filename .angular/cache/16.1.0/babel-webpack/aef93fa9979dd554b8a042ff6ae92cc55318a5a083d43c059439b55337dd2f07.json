{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nexport class UsersService {\n  constructor(userService, userDetailService) {\n    this.userService = userService;\n    this.userDetailService = userDetailService;\n  }\n  getUserList(data) {\n    return this.userService.search('user', 'users', data);\n  }\n  getUserListPaginated(data) {\n    return this.userService.search('user', 'usersPaginated', data);\n  }\n  getUserById(id) {\n    return this.userDetailService.getSingleById('user', 'id', id);\n  }\n  getALLUsers() {\n    return this.userService.getAll(\"user\", \"list\");\n  }\n  getALLUsersPaginated(data) {\n    return this.userService.search(\"user\", \"listPaginated\", data);\n  }\n  getUserRole() {\n    return this.userService.getAll(\"userRole\", \"getList\");\n  }\n  saveUsers(item) {\n    return this.userService.add(\"user\", \"save\", item);\n  }\n  validateUserName(userName) {\n    return this.userDetailService.getSingleById('user', 'check', userName);\n  }\n  updateUserCrendentials(items) {\n    return this.userService.update('auth', 'pwd', items);\n  }\n  resetUserCrendentials(items) {\n    return this.userService.getSingleByItem('auth', 'forgetpwd', items);\n  }\n  getUserProfile(userName) {\n    return this.userService.getSingleById('user', 'profile/get', userName);\n  }\n  uploadProfilePhto(data) {\n    return this.userService.upload('doc', 'upload', data);\n  }\n  getDocumentsById(data) {\n    return this.userService.getSingleByItem(\"doc\", \"getDocumentsByRequest\", data);\n  }\n  deleteDocumentById(id) {\n    return this.userService.getAllById(\"doc\", \"deleteDocById\", id);\n  }\n  uploadDocument(data) {\n    return this.userService.upload('doc', 'uploadDocument', data);\n  }\n  static #_ = this.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UsersService","constructor","userService","userDetailService","getUserList","data","search","getUserListPaginated","getUserById","id","getSingleById","getALLUsers","getAll","getALLUsersPaginated","getUserRole","saveUsers","item","add","validateUserName","userName","updateUserCrendentials","items","update","resetUserCrendentials","getSingleByItem","getUserProfile","uploadProfilePhto","upload","getDocumentsById","deleteDocumentById","getAllById","uploadDocument","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserDetailsList } from '../model/user-details-list.model';\nimport { UserPasswrodInputDto } from '../ui/user-profile/model/user-password.model';\nimport { UserProfile } from '../ui/user-profile/model/user-profile.model';\nimport { UserFilterInput } from '../ui/user/modal/usersFilterInput.model';\nimport { UserOutputDto } from '../ui/user/model/DTO/userOutputDTO.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(\n    private userService: DataService<any>,\n    private userDetailService:DataService<UserDetailsList[]>\n    \n  ) { }\n\n  public getUserList(data:UserFilterInput){\n    return this.userService.search('user', 'users', data);\n  }\n  public getUserListPaginated(data:any){\n    return this.userService.search('user', 'usersPaginated', data);\n  }\n  public getUserById(id:any){\n    return this.userDetailService.getSingleById('user', 'id',id);\n  }\n\n  public getALLUsers() {\n    return this.userService.getAll(\"user\", \"list\");\n  }\n\n  public getALLUsersPaginated(data:any) {\n    return this.userService.search(\"user\", \"listPaginated\",data);\n  }\n  public getUserRole(){\n    return this.userService.getAll(\"userRole\",\"getList\");\n  }\n  public saveUsers(item: UserOutputDto){\n    return this.userService.add(\"user\",\"save\",item);\n  }\n  public validateUserName(userName:any){\n    return this.userDetailService.getSingleById('user', 'check', userName);\n  }\n  public updateUserCrendentials(items: UserPasswrodInputDto) {\n    return this.userService.update('auth', 'pwd', items);\n  }\n  public resetUserCrendentials(items: any) {\n    return this.userService.getSingleByItem('auth', 'forgetpwd', items);\n  }\n  public getUserProfile(userName: any): Observable<UserProfile>{\n    return this.userService.getSingleById('user','profile/get',userName);\n  }\n  public uploadProfilePhto(data:any){\n    return this.userService.upload('doc','upload',data)\n  }\n\n  public getDocumentsById(data: any) {\n    return this.userService.getSingleByItem(\"doc\", \"getDocumentsByRequest\", data);\n  }\n\n  public deleteDocumentById(id: any) {\n    return this.userService.getAllById(\"doc\", \"deleteDocById\", id);\n  }\n\n  public uploadDocument(data: any) {\n    return this.userService.upload('doc', 'uploadDocument', data)\n  }\n}\n"],"mappings":";;AAYA,OAAM,MAAOA,YAAY;EAEvBC,YACUC,WAA6B,EAC7BC,iBAAgD;IADhD,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,iBAAiB,GAAjBA,iBAAiB;EAEvB;EAEGC,WAAWA,CAACC,IAAoB;IACrC,OAAO,IAAI,CAACH,WAAW,CAACI,MAAM,CAAC,MAAM,EAAE,OAAO,EAAED,IAAI,CAAC;EACvD;EACOE,oBAAoBA,CAACF,IAAQ;IAClC,OAAO,IAAI,CAACH,WAAW,CAACI,MAAM,CAAC,MAAM,EAAE,gBAAgB,EAAED,IAAI,CAAC;EAChE;EACOG,WAAWA,CAACC,EAAM;IACvB,OAAO,IAAI,CAACN,iBAAiB,CAACO,aAAa,CAAC,MAAM,EAAE,IAAI,EAACD,EAAE,CAAC;EAC9D;EAEOE,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACT,WAAW,CAACU,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC;EAChD;EAEOC,oBAAoBA,CAACR,IAAQ;IAClC,OAAO,IAAI,CAACH,WAAW,CAACI,MAAM,CAAC,MAAM,EAAE,eAAe,EAACD,IAAI,CAAC;EAC9D;EACOS,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACZ,WAAW,CAACU,MAAM,CAAC,UAAU,EAAC,SAAS,CAAC;EACtD;EACOG,SAASA,CAACC,IAAmB;IAClC,OAAO,IAAI,CAACd,WAAW,CAACe,GAAG,CAAC,MAAM,EAAC,MAAM,EAACD,IAAI,CAAC;EACjD;EACOE,gBAAgBA,CAACC,QAAY;IAClC,OAAO,IAAI,CAAChB,iBAAiB,CAACO,aAAa,CAAC,MAAM,EAAE,OAAO,EAAES,QAAQ,CAAC;EACxE;EACOC,sBAAsBA,CAACC,KAA2B;IACvD,OAAO,IAAI,CAACnB,WAAW,CAACoB,MAAM,CAAC,MAAM,EAAE,KAAK,EAAED,KAAK,CAAC;EACtD;EACOE,qBAAqBA,CAACF,KAAU;IACrC,OAAO,IAAI,CAACnB,WAAW,CAACsB,eAAe,CAAC,MAAM,EAAE,WAAW,EAAEH,KAAK,CAAC;EACrE;EACOI,cAAcA,CAACN,QAAa;IACjC,OAAO,IAAI,CAACjB,WAAW,CAACQ,aAAa,CAAC,MAAM,EAAC,aAAa,EAACS,QAAQ,CAAC;EACtE;EACOO,iBAAiBA,CAACrB,IAAQ;IAC/B,OAAO,IAAI,CAACH,WAAW,CAACyB,MAAM,CAAC,KAAK,EAAC,QAAQ,EAACtB,IAAI,CAAC;EACrD;EAEOuB,gBAAgBA,CAACvB,IAAS;IAC/B,OAAO,IAAI,CAACH,WAAW,CAACsB,eAAe,CAAC,KAAK,EAAE,uBAAuB,EAAEnB,IAAI,CAAC;EAC/E;EAEOwB,kBAAkBA,CAACpB,EAAO;IAC/B,OAAO,IAAI,CAACP,WAAW,CAAC4B,UAAU,CAAC,KAAK,EAAE,eAAe,EAAErB,EAAE,CAAC;EAChE;EAEOsB,cAAcA,CAAC1B,IAAS;IAC7B,OAAO,IAAI,CAACH,WAAW,CAACyB,MAAM,CAAC,KAAK,EAAE,gBAAgB,EAAEtB,IAAI,CAAC;EAC/D;EAAC,QAAA2B,CAAA,G;qBAzDUhC,YAAY,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrC,YAAY;IAAAsC,OAAA,EAAZtC,YAAY,CAAAuC,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}