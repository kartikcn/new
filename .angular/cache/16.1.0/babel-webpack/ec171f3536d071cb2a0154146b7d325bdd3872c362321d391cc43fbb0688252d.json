{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../background-loc/services/bl.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"../svg-view/services/svg-view.service\";\nimport * as i4 from \"../arrangement/services/arrangement.service\";\nimport * as i5 from \"../rm-config/rm-config/services/rm-config.service\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ng-select/ng-select\";\nimport * as i10 from \"primeng/api\";\nimport * as i11 from \"primeng/table\";\nimport * as i12 from \"primeng/button\";\nimport * as i13 from \"../svg-view/svg-view.component\";\nfunction FloorplanArrangementSvgComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h1\");\n    i0.ɵɵtext(2, \"No Floorplan available\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FloorplanArrangementSvgComponent_div_21_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 22)(2, \"p-tableHeaderCheckbox\", 23);\n    i0.ɵɵlistener(\"click\", function FloorplanArrangementSvgComponent_div_21_ng_template_4_Template_p_tableHeaderCheckbox_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.checkboxChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"th\", 24);\n    i0.ɵɵtext(4, \" Arrangement Type \");\n    i0.ɵɵelement(5, \"p-sortIcon\", 25)(6, \"p-columnFilter\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \" Color \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FloorplanArrangementSvgComponent_div_21_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 27)(1, \"td\", 22)(2, \"p-tableCheckbox\", 28);\n    i0.ɵɵlistener(\"click\", function FloorplanArrangementSvgComponent_div_21_ng_template_5_Template_p_tableCheckbox_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.checkboxChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"div\", 29);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arr_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", arr_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", arr_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(arr_r8.arrangementType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", arr_r8.colorCode);\n  }\n}\nfunction FloorplanArrangementSvgComponent_div_21_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nfunction FloorplanArrangementSvgComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 15)(2, \"div\", 16)(3, \"p-table\", 17);\n    i0.ɵɵlistener(\"selectionChange\", function FloorplanArrangementSvgComponent_div_21_Template_p_table_selectionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.selectedArrangements = $event);\n    });\n    i0.ɵɵtemplate(4, FloorplanArrangementSvgComponent_div_21_ng_template_4_Template, 9, 0, \"ng-template\", 18);\n    i0.ɵɵtemplate(5, FloorplanArrangementSvgComponent_div_21_ng_template_5_Template, 7, 5, \"ng-template\", 19);\n    i0.ɵɵtemplate(6, FloorplanArrangementSvgComponent_div_21_ng_template_6_Template, 3, 1, \"ng-template\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 21);\n    i0.ɵɵelement(8, \"app-svg-view\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", ctx_r1.floorPlanArrangementList)(\"paginator\", true)(\"rows\", ctx_r1.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(8, _c0))(\"rowHover\", false)(\"scrollable\", true)(\"selection\", ctx_r1.selectedArrangements);\n  }\n}\nfunction FloorplanArrangementSvgComponent_ngx_spinner_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport class FloorplanArrangementSvgComponent {\n  constructor(blServ, authSrv, svgViewSrv, arrangeSrv, rmConfigSrv, formBuilder, cdr, spinner) {\n    this.blServ = blServ;\n    this.authSrv = authSrv;\n    this.svgViewSrv = svgViewSrv;\n    this.arrangeSrv = arrangeSrv;\n    this.rmConfigSrv = rmConfigSrv;\n    this.formBuilder = formBuilder;\n    this.cdr = cdr;\n    this.spinner = spinner;\n    this.allBl = [];\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n    this.viewSvg = false;\n    this.allSVGElementsData = [];\n    this.allDisplaySVGElementsData = [];\n    this.roomDetails = [];\n    this.availableRmConfigRoom = [];\n    this.focusParticularRoom = false;\n    this.fileString = '';\n    this.allArragements = [];\n    this.floorPlanArrangementList = [];\n    this.allRoomsList = [];\n    this.displayNoFloorPlanInfo = false;\n    this.selectedArrangements = [];\n    this.showSpinner = true;\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n    this.filterPanel = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllArrangement();\n  }\n  ngAfterViewInit() {\n    if (this.viewSvg) {\n      this.svgViewComp;\n    }\n  }\n  loadAllArrangement() {\n    this.arrangeSrv.getAllArrangements().subscribe(res => {\n      this.allArragements = res;\n    });\n  }\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe(res => {\n      this.enumBL = res;\n      this.enumBL = res.map(i => {\n        i.name = i.blNameString;\n        return i;\n      });\n      this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe(res => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map(i => {\n        i.name = i.flNameString;\n        return i;\n      });\n      this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n  onSelectBlCode($event) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    } else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n    }\n  }\n  loadFloorCode(bl_id) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id);\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n  onSelectFlCode(event) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId\n        });\n      }, 10);\n    } else {\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n  onSearch() {\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    this.displayNoFloorPlanInfo = false;\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.selectedArrangements = [];\n    let flData = this.enumFL.filter(i => i.blId == blId && i.id == flId);\n    //@ts-ignore\n    if (flData[0].svgName != null) {\n      let data = {\n        id: flId,\n        blId: blId,\n        name: '',\n        compId: this.compId,\n        svgName: '',\n        flInfo: '',\n        units: ''\n      };\n      this.svgViewSrv.getSVGFile(data).subscribe(res => {\n        if (res.fileName != \"error\") {\n          this.fileString = res.fileContent;\n          this.loadAllSVGData(blId, flId);\n        } else {\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.displayNoFloorPlanInfo = true;\n        }\n      });\n    } else {\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = true;\n    }\n  }\n  loadAllSVGData(blId, flId) {\n    this.allSVGElementsData = [];\n    this.allDisplaySVGElementsData = [];\n    this.floorPlanArrangementList = [];\n    let data = {\n      flId: flId,\n      blId: blId,\n      compId: this.compId\n    };\n    this.rmConfigSrv.getRmConfigByBlAndFlId(data).subscribe(res => {\n      if (res) {\n        this.allSVGElementsData = res.filter(each => each.rmSvgElementId !== null).map(each => {\n          let match = this.allArragements.find(obj2 => obj2.arrangementType === each.arrangementType);\n          return {\n            ...each,\n            ...match\n          };\n        });\n        this.allDisplaySVGElementsData = this.allSVGElementsData;\n        this.allSVGElementsData.forEach(el => {\n          let idObj = {\n            roomElementId: el.rmSvgElementId,\n            assetElementId: null\n          };\n          let colorObj = {\n            roomColor: el.highlightColor,\n            assetColor: null\n          };\n          let contentData = {\n            blId: parseInt(blId),\n            flId: parseInt(flId),\n            rmId: el.rmId,\n            label: [],\n            showLabel: false,\n            highlightRoom: true,\n            svgElementId: idObj,\n            color: colorObj,\n            rmCode: '',\n            zoomAtRoom: false\n          };\n          this.svgRoomData.content.push(contentData);\n        });\n        this.svgRoomData.blId = parseInt(blId);\n        this.svgRoomData.flId = parseInt(flId);\n        this.svgRoomData.locate = \"room\";\n        this.floorPlanArrangementList = Array.from(new Set(this.allSVGElementsData.map(item => item.arrangementType + \"-\" + item.highlightColor))).map(combination => {\n          let [arrangementType, colorCode] = combination.split(\"-\");\n          return {\n            arrangementType: arrangementType,\n            colorCode: colorCode\n          };\n        });\n        this.viewSvg = true;\n        this.cdr.detectChanges();\n        this.spinner.hide();\n        this.showSpinner = false;\n      }\n    });\n  }\n  onClear() {\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.allSVGElementsData = [];\n    this.allDisplaySVGElementsData = [];\n    this.fileString = '';\n    this.floorPlanArrangementList = [];\n    this.displayNoFloorPlanInfo = false;\n    this.selectedArrangements = [];\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null\n    });\n    this.svgRoomData = new SvgRoomData(null, null, \"\", []);\n  }\n  checkboxChange($event) {\n    this.viewSvg = false;\n    this.allDisplaySVGElementsData = [];\n    this.allDisplaySVGElementsData = this.allSVGElementsData.filter(each => this.selectedArrangements.some(eachArr => eachArr.arrangementType === each.arrangementType));\n    this.svgRoomData.content = [];\n    this.allDisplaySVGElementsData.forEach(el => {\n      let idObj = {\n        roomElementId: el.rmSvgElementId,\n        assetElementId: null\n      };\n      let colorObj = {\n        roomColor: el.highlightColor,\n        assetColor: null\n      };\n      let contentData = {\n        blId: el.blId,\n        flId: el.flId,\n        rmId: el.rmId,\n        label: [],\n        showLabel: false,\n        highlightRoom: true,\n        svgElementId: idObj,\n        color: colorObj,\n        rmCode: '',\n        zoomAtRoom: false\n      };\n      this.svgRoomData.content.push(contentData);\n    });\n    this.showSpinner = true;\n    this.spinner.show();\n    this.viewSvg = true;\n    this.cdr.detectChanges();\n    this.svgViewComp.loadSvgFile();\n    this.spinner.hide();\n    this.showSpinner = false;\n  }\n  static #_ = this.ɵfac = function FloorplanArrangementSvgComponent_Factory(t) {\n    return new (t || FloorplanArrangementSvgComponent)(i0.ɵɵdirectiveInject(i1.BuildingService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.SvgViewService), i0.ɵɵdirectiveInject(i4.ArrangementService), i0.ɵɵdirectiveInject(i5.RmConfigService), i0.ɵɵdirectiveInject(i6.UntypedFormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i7.NgxSpinnerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FloorplanArrangementSvgComponent,\n    selectors: [[\"app-floorplan-arrangement-svg\"]],\n    viewQuery: function FloorplanArrangementSvgComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SvgViewComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgViewComp = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 11,\n    consts: [[1, \"card\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [2, \"margin\", \"5px 0 0 5px\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"card no-file-found\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [1, \"card\", \"no-file-found\"], [2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"height\", \"600px\"], [2, \"width\", \"22%\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"95%\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"selection\", \"selectionChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [2, \"width\", \"73%\", \"margin\", \"5px\"], [2, \"width\", \"4rem\"], [3, \"click\"], [\"pSortableColumn\", \"arrangementType\"], [\"field\", \"arrangementType\"], [\"type\", \"text\", \"field\", \"arrangementType\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [3, \"value\", \"click\"], [1, \"td-class\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function FloorplanArrangementSvgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 6);\n        i0.ɵɵlistener(\"change\", function FloorplanArrangementSvgComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.onSelectBlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ng-select\", 7);\n        i0.ɵɵlistener(\"change\", function FloorplanArrangementSvgComponent_Template_ng_select_change_13_listener($event) {\n          return ctx.onSelectFlCode($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"td\", 3)(15, \"td\", 3);\n        i0.ɵɵelementStart(16, \"td\", 3)(17, \"div\", 8)(18, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function FloorplanArrangementSvgComponent_Template_button_click_18_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function FloorplanArrangementSvgComponent_Template_button_click_19_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵtemplate(20, FloorplanArrangementSvgComponent_div_20_Template, 3, 0, \"div\", 11);\n        i0.ɵɵtemplate(21, FloorplanArrangementSvgComponent_div_21_Template, 9, 9, \"div\", 12);\n        i0.ɵɵtemplate(22, FloorplanArrangementSvgComponent_ngx_spinner_22_Template, 3, 1, \"ngx-spinner\", 13);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayNoFloorPlanInfo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.viewSvg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    dependencies: [i8.NgIf, i9.NgSelectComponent, i10.PrimeTemplate, i11.Table, i11.SortableColumn, i11.SelectableRow, i11.SortIcon, i11.TableCheckbox, i11.TableHeaderCheckbox, i11.ColumnFilter, i12.ButtonDirective, i6.ɵNgNoValidate, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i7.NgxSpinnerComponent, i13.SvgViewComponent],\n    styles: [\"[_nghost-%COMP%]     .p-dialog .p-dialog-header {\\n  background-color: #879cc9;\\n  color: black;\\n  padding-left: 10px;\\n  font-weight: normal;\\n  margin-bottom: 0px;\\n  height: 10px !important;\\n}\\n\\n.td-class[_ngcontent-%COMP%] {\\n  background-color: inherit;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 20px;\\n  margin: 10px auto auto auto;\\n}\\n\\n.no-file-found[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 600px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvZmxvb3JwbGFuLWFycmFuZ2VtZW50LXN2Zy9mbG9vcnBsYW4tYXJyYW5nZW1lbnQtc3ZnLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vc3JjL3Njc3MvX3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vTWFuYXYlMjBHdXB0YS9Eb3dubG9hZHMvZm1zL2Ztcy9mcm9udGVuZC9mbXNfZnJvbnRlbmQvc3JjL2FwcC91aS9mbG9vcnBsYW4tYXJyYW5nZW1lbnQtc3ZnL2Zsb29ycGxhbi1hcnJhbmdlbWVudC1zdmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSx5QkNPSztFRE5MLFlBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSx1QkFBQTtBRURKOztBRklBO0VBQ0kseUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsMkJBQUE7QUVESjs7QUZJQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBRURKIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnL3NyYy9zY3NzL3ZhcmlhYmxlcyc7XG5cbjpob3N0IDo6bmctZGVlcCAucC1kaWFsb2cgLnAtZGlhbG9nLWhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRvb2xiYXI7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLnRkLWNsYXNzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgbWFyZ2luOiAxMHB4IGF1dG8gYXV0byBhdXRvO1xuICB9XG5cbi5uby1maWxlLWZvdW5ke1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDYwMHB4O1xufSIsIi8vIFR5cG9ncmFwaHkgdmFyaWFibGVzXG4kZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuJHVybDogJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvJmRpc3BsYXk9c3dhcCc7XG5cblxuLy8gVGhlbWluZyB2YXJpYWJsZVxuJHByaW1hcnktY29sb3I6ICMwYjllNmQ7XG4kd2hpdGU6ICNmZmZmZmY7XG4kbWFpbi1iYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuJHRleHQtc2l6ZToxMnB4O1xuJHRvb2xiYXI6Izg3OWNjOTtcbiRzaWRlLW5hdjojMzQzYTQwO1xuJG1hbmRhdG9yeUZpZWxkOiNlMDE1MTU7XG4kdGFiQmdDb2xvcjogIzg3OWNjOTtcbiR0YWJBY3RpdmVCZ0NvbG9yOiAjZmZmZmZmO1xuJHRhYkhlaWdodDogMi4zNTtcbiR0YWJXaWR0aDogODBweDtcbiR0YWJCb3JkZXJSYWRpdXM6IDZweCA2cHggMCAwO1xuJHRhYkJvcmRlckJvdHRvbTogM3B4IHNvbGlkICM4NzljYzkgIWltcG9ydGFudDtcbiR0YWJGb250Q29sb3I6ICNmZmZmZmY7XG4kdGFiUGFuZUJhY2tncm91bmRDb2xvcjogI0YwRjJGNTtcbiRBY3RpdmVUYWJGb250Q29sb3I6ICMwMDAwMDA7XG5cbiR0YWJsZXRQb3RyYWl0TWluV2lkdGg6NjAwcHggO1xuJHRhYmxldFBvdHJhaXRNYXhXaWR0aDogOTU5cHg7XG4kdGFibGV0TGFuZHNjYXBlTWluV2lkdGg6IDk2MHB4O1xuJHRhYmxldExhbmRzcGFjZU1heFdpZHRoOiAxNDM5cHg7XG4iLCI6aG9zdCA6Om5nLWRlZXAgLnAtZGlhbG9nIC5wLWRpYWxvZy1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODc5Y2M5O1xuICBjb2xvcjogYmxhY2s7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLnRkLWNsYXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIG1hcmdpbjogMTBweCBhdXRvIGF1dG8gYXV0bztcbn1cblxuLm5vLWZpbGUtZm91bmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA2MDBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","UtilConstant","BuildingFilterInput","FLFilterInputDTO","SvgViewComponent","SvgRoomData","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FloorplanArrangementSvgComponent_div_21_ng_template_4_Template_p_tableHeaderCheckbox_click_2_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","checkboxChange","ɵɵelement","FloorplanArrangementSvgComponent_div_21_ng_template_5_Template_p_tableCheckbox_click_2_listener","_r10","ctx_r9","ɵɵproperty","arr_r8","ɵɵadvance","ɵɵtextInterpolate","arrangementType","ɵɵstyleProp","colorCode","ɵɵattribute","FloorplanArrangementSvgComponent_div_21_Template_p_table_selectionChange_3_listener","_r13","ctx_r12","selectedArrangements","ɵɵtemplate","FloorplanArrangementSvgComponent_div_21_ng_template_4_Template","FloorplanArrangementSvgComponent_div_21_ng_template_5_Template","FloorplanArrangementSvgComponent_div_21_ng_template_6_Template","ctx_r1","floorPlanArrangementList","rowCount","ɵɵpureFunction0","_c0","FloorplanArrangementSvgComponent","constructor","blServ","authSrv","svgViewSrv","arrangeSrv","rmConfigSrv","formBuilder","cdr","spinner","allBl","enumBL","enumFL","enumAllFL","ROW_COUNT","viewSvg","allSVGElementsData","allDisplaySVGElementsData","roomDetails","availableRmConfigRoom","focusParticularRoom","fileString","allArragements","allRoomsList","displayNoFloorPlanInfo","showSpinner","svgRoomData","filterPanel","group","blId","required","flId","ngOnInit","compId","getLoggedInUserCompId","loadAllBuilding","loadAllFloor","loadAllArrangement","ngAfterViewInit","svgViewComp","getAllArrangements","subscribe","res","getALLBuilding","map","i","name","blNameString","unshift","getALLFloor","flNameString","onSelectBlCode","id","setTimeout","patchValue","loadFloorCode","bl_id","filter","t","onSelectFlCode","event","onSearch","controls","value","show","flData","svgName","data","flInfo","units","getSVGFile","fileName","fileContent","loadAllSVGData","hide","getRmConfigByBlAndFlId","each","rmSvgElementId","match","find","obj2","forEach","el","idObj","roomElementId","assetElementId","colorObj","roomColor","highlightColor","assetColor","contentData","parseInt","rmId","label","showLabel","highlightRoom","svgElementId","color","rmCode","zoomAtRoom","content","push","locate","Array","from","Set","item","combination","split","detectChanges","onClear","some","eachArr","loadSvgFile","_","ɵɵdirectiveInject","i1","BuildingService","i2","AuthService","i3","SvgViewService","i4","ArrangementService","i5","RmConfigService","i6","UntypedFormBuilder","ChangeDetectorRef","i7","NgxSpinnerService","_2","selectors","viewQuery","FloorplanArrangementSvgComponent_Query","rf","ctx","FloorplanArrangementSvgComponent_Template_ng_select_change_8_listener","FloorplanArrangementSvgComponent_Template_ng_select_change_13_listener","FloorplanArrangementSvgComponent_Template_button_click_18_listener","FloorplanArrangementSvgComponent_Template_button_click_19_listener","FloorplanArrangementSvgComponent_div_20_Template","FloorplanArrangementSvgComponent_div_21_Template","FloorplanArrangementSvgComponent_ngx_spinner_22_Template","valid"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\floorplan-arrangement-svg\\floorplan-arrangement-svg.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\floorplan-arrangement-svg\\floorplan-arrangement-svg.component.html"],"sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { ArrangementService } from '../arrangement/services/arrangement.service';\nimport { BuildingFilterInput } from '../background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from '../background-loc/model/DTO/flFilterInput.model';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { RmConfigService } from '../rm-config/rm-config/services/rm-config.service';\nimport { SvgViewService } from '../svg-view/services/svg-view.service';\nimport { SvgViewComponent } from '../svg-view/svg-view.component';\nimport { SvgRoomData } from 'src/app/model/svgroomdata.model';\nimport { SvgRoomContentData } from 'src/app/model/svgroomcontentdata.model';\nimport { SvgElementIdType } from 'src/app/model/svgelementidtype.model';\nimport { SvgElementColorType } from 'src/app/model/svgelementcolortype.model';\n\n@Component({\n  selector: 'app-floorplan-arrangement-svg',\n  templateUrl: './floorplan-arrangement-svg.component.html',\n  styleUrls: ['./floorplan-arrangement-svg.component.scss']\n})\nexport class FloorplanArrangementSvgComponent implements OnInit, AfterViewInit {\n  filterPanel!: UntypedFormGroup;\n  compId!: number;\n  allBl: any[] = [];\n  enumBL: BuildingFilterInput[] = [];\n  enumFL: FLFilterInputDTO[] = [];\n  enumAllFL: FLFilterInputDTO[] = [];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  viewSvg: boolean = false;\n  allSVGElementsData: any[] = [];\n  allDisplaySVGElementsData: any[] = [];\n  roomDetails: any[] = [];\n  availableRmConfigRoom: any[] = [];\n  focusParticularRoom: boolean = false;\n  fileString: string = '';\n  allArragements: any[] = [];\n  floorPlanArrangementList: any[] = [];\n  allRoomsList: any[] = [];\n  displayNoFloorPlanInfo: boolean = false;\n  selectedArrangements: any[] = [];\n  showSpinner: boolean = true;\n  @ViewChild(SvgViewComponent, { static: false }) svgViewComp!: SvgViewComponent;\n  svgRoomData : SvgRoomData = new SvgRoomData(null,null,\"\",[]);\n  constructor(\n    private blServ: BuildingService,\n    private authSrv: AuthService,\n    private svgViewSrv: SvgViewService,\n    private arrangeSrv: ArrangementService,\n    private rmConfigSrv: RmConfigService,\n    private formBuilder: UntypedFormBuilder,\n    private cdr: ChangeDetectorRef,\n    private spinner: NgxSpinnerService,\n  ) {\n    this.filterPanel = this.formBuilder.group({\n      blId: [null, [Validators.required]],\n      flId: [null, [Validators.required]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.compId = this.authSrv.getLoggedInUserCompId();\n    this.loadAllBuilding();\n    this.loadAllFloor();\n    this.loadAllArrangement();\n  }\n\n  ngAfterViewInit() {\n    if (this.viewSvg) {\n      this.svgViewComp;\n    }\n  }\n\n  loadAllArrangement() {\n    this.arrangeSrv.getAllArrangements().subscribe((res: any) => {\n      this.allArragements = res;\n    })\n  }\n\n  loadAllBuilding() {\n    this.blServ.getALLBuilding().subscribe((res: any) => {\n      this.enumBL = res;\n      this.enumBL = res.map((i: any) => { i.name = i.blNameString; return i; });\n      this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n    });\n  }\n\n  loadAllFloor() {\n    this.blServ.getALLFloor().subscribe((res: any) => {\n      this.enumAllFL = res;\n      this.enumAllFL = res.map((i: any) => { i.name = i.flNameString; return i; });\n      this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n      this.enumFL = this.enumAllFL;\n    });\n  }\n\n  onSelectBlCode($event: any) {\n    if ($event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n        });\n        this.loadFloorCode($event.id);\n      }, 10);\n    }\n    else {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          flId: null,\n        });\n      }, 10);\n      this.enumFL = this.enumAllFL;\n    }\n  }\n\n  loadFloorCode(bl_id: any) {\n    if (bl_id != null) {\n      this.enumFL = [];\n      this.enumFL = this.enumAllFL.filter(t => t.blId == bl_id)\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n\n  onSelectFlCode(event: any) {\n    if (event.id != null) {\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n        });\n      }, 10);\n    }\n    else {\n      this.enumFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n    }\n  }\n\n\n  onSearch() {\n    let blId = this.filterPanel.controls.blId.value;\n    let flId = this.filterPanel.controls.flId.value;\n    this.displayNoFloorPlanInfo = false;\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.spinner.show();\n    this.selectedArrangements = [];\n    let flData = this.enumFL.filter((i: any) => i.blId == blId && i.id == flId);\n    //@ts-ignore\n    if (flData[0].svgName != null) {\n      let data = {\n        id: flId,\n        blId: blId,\n        name: '',\n        compId: this.compId,\n        svgName: '',\n        flInfo: '',\n        units:''\n      }\n      this.svgViewSrv.getSVGFile(data).subscribe((res: any) => {\n        if (res.fileName!=\"error\") {\n          this.fileString = res.fileContent;\n          this.loadAllSVGData(blId, flId);\n        }\n        else{\n          this.spinner.hide();\n          this.showSpinner = false;\n          this.displayNoFloorPlanInfo = true;\n        }\n      })\n    } else {\n      this.spinner.hide();\n      this.showSpinner = false;\n      this.displayNoFloorPlanInfo = true;\n    }\n  }\n\n  loadAllSVGData(blId: string, flId: string) {\n    this.allSVGElementsData = [];\n    this.allDisplaySVGElementsData = [];\n    this.floorPlanArrangementList = [];\n    let data = {\n      flId: flId,\n      blId: blId,\n      compId: this.compId,\n    }\n    this.rmConfigSrv.getRmConfigByBlAndFlId(data).subscribe((res: any) => {\n      if (res) {\n        this.allSVGElementsData = res.filter((each: any) => each.rmSvgElementId !== null)\n          .map((each: any) => {\n            let match = this.allArragements.find(obj2 => obj2.arrangementType === each.arrangementType);\n            return { ...each, ...match };\n          });\n        this.allDisplaySVGElementsData = this.allSVGElementsData;\n        this.allSVGElementsData.forEach((el:any)=>{\n          let idObj:SvgElementIdType ={\n            roomElementId:el.rmSvgElementId,\n            assetElementId : null\n          }\n          let colorObj: SvgElementColorType ={\n            roomColor:el.highlightColor,\n            assetColor: null\n          }\n          let contentData:SvgRoomContentData ={\n            blId:parseInt(blId),\n            flId:parseInt(flId),\n            rmId:el.rmId,\n            label:[],\n            showLabel:false,\n            highlightRoom:true,\n            svgElementId : idObj,\n            color:colorObj,\n            rmCode:'',\n            zoomAtRoom:false\n          }\n          this.svgRoomData.content.push(contentData);\n        });\n        this.svgRoomData.blId = parseInt(blId);\n        this.svgRoomData.flId = parseInt(flId);\n        this.svgRoomData.locate = \"room\";\n        this.floorPlanArrangementList = Array.from(new Set(this.allSVGElementsData.map(item => item.arrangementType + \"-\" + item.highlightColor)))\n          .map(combination => {\n            let [arrangementType, colorCode] = combination.split(\"-\");\n            return { arrangementType: arrangementType, colorCode: colorCode };\n          });\n\n        this.viewSvg = true;\n        this.cdr.detectChanges();\n        this.spinner.hide();\n        this.showSpinner = false;\n      }\n    })\n  }\n\n  onClear() {\n    this.viewSvg = false;\n    this.showSpinner = true;\n    this.allSVGElementsData = [];\n    this.allDisplaySVGElementsData = [];\n    this.fileString = '';\n    this.floorPlanArrangementList = [];\n    this.displayNoFloorPlanInfo = false;\n    this.selectedArrangements = [];\n    this.filterPanel.patchValue({\n      blId: null,\n      flId: null\n    });\n    this.svgRoomData = new SvgRoomData(null,null,\"\",[]);\n  }\n  \n  checkboxChange($event: any) {\n    this.viewSvg = false;\n    this.allDisplaySVGElementsData = [];\n    this.allDisplaySVGElementsData = this.allSVGElementsData.filter(each =>\n      this.selectedArrangements.some(eachArr => eachArr.arrangementType === each.arrangementType)\n    );\n    this.svgRoomData.content=[];\n    this.allDisplaySVGElementsData.forEach((el:any)=>{\n      let idObj:SvgElementIdType ={\n        roomElementId:el.rmSvgElementId,\n        assetElementId : null\n      }\n      let colorObj: SvgElementColorType ={\n        roomColor:el.highlightColor,\n        assetColor: null\n      }\n      let contentData:SvgRoomContentData ={\n        blId:el.blId,\n        flId:el.flId,\n        rmId:el.rmId,\n        label:[],\n        showLabel:false,\n        highlightRoom:true,\n        svgElementId : idObj,\n        color:colorObj,\n        rmCode:'',\n        zoomAtRoom:false\n      }\n      this.svgRoomData.content.push(contentData);\n    })\n    this.showSpinner = true;\n    this.spinner.show();\n    this.viewSvg = true;\n    this.cdr.detectChanges();\n    this.svgViewComp.loadSvgFile();\n    this.spinner.hide();\n    this.showSpinner = false;\n  }\n\n}\n","<div class=\"card\">\n    <form [formGroup]=\"filterPanel\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Building </label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" (change)=\"onSelectBlCode($event)\"\n                            placeholder=\"Make a selection\" class=\"ng-select-dropdown\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div class=\"input-label-custom \">\n                        <label class='form-field-lable control-label'>Floor</label>\n                        <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\"\n                            [searchable]=\"true\" bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\"\n                            class=\"ng-select-dropdown\" (change)=\"onSelectFlCode($event)\">\n                        </ng-select>\n                    </div>\n                </td>\n                <td style=\"width: 20%\"></td>\n                <td style=\"width: 20%\"></td>\n                <td style=\"width: 20%\">\n                    <div style=\"margin: 5px 0 0 5px \">\n                        <button (click)=\"onSearch()\" [disabled]=\"!filterPanel.valid\" pButton pRipple label=\"Search\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                        <button (click)=\"onClear()\" pButton pRipple label=\"Clear\"\n                            style=\"width: 60px;  margin-left: 5px;\"\n                            class=\"p-button-primary p-button-sm pull right\"></button>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </form>\n</div>\n<div class=\"card no-file-found\" *ngIf=\"displayNoFloorPlanInfo\">\n    <h1>No Floorplan available</h1>\n</div>\n<div class=\"card\" *ngIf=\"viewSvg\">\n    <div style=\"display: flex; justify-content: space-between;height:600px;\">\n        <div style=\"width:22%\">\n            <p-table [value]=\"floorPlanArrangementList\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[5,10,25]\" styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\"\n                [rowHover]=\"false\" [scrollable]=\"true\" scrollDirection=\"both\" scrollHeight=\"95%\" [(selection)]=\"selectedArrangements\">\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th style=\"width:4rem\">\n                            <p-tableHeaderCheckbox (click)=\"checkboxChange($event)\"></p-tableHeaderCheckbox>\n                        </th>\n                        <th pSortableColumn=\"arrangementType\">\n                            Arrangement Type <p-sortIcon field=\"arrangementType\"></p-sortIcon>\n                            <p-columnFilter type=\"text\" field=\"arrangementType\" display=\"menu\"></p-columnFilter>\n                        </th>\n                        <th>\n                            Color \n                        </th>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-arr>\n                    <tr [pSelectableRow]=\"arr\">\n                        <td style=\"width:4rem\">\n                            <p-tableCheckbox [value]=\"arr\" (click)=\"checkboxChange($event)\"></p-tableCheckbox>\n                        </td>\n                        <td>{{arr.arrangementType}}</td>\n                        <td >\n                            <div class=\"td-class\"  [style.background-color]=\"arr.colorCode\">\n                            </div>\n                        </td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\" let-columns>\n                    <tr>\n                        <td [attr.colspan]=\"9\">\n                            No records found\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n        <div style=\"width:73%;margin: 5px;\">\n            <!-- <app-svg-view  [fileString]=\"fileString\"  [allSVGElementsData]=\"allDisplaySVGElementsData\" [isArrangementSvg]=\"true\"\n                [availableRmConfigRoom]=\"availableRmConfigRoom\" [allRoomsOfFloorWithElementId]=\"roomDetails\" [allSVGRoomsData]=\"svgRoomData\" \n                 ></app-svg-view> -->\n            <app-svg-view ></app-svg-view>\n        </div>\n    </div>\n</div>\n\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#879cc9\" class=\"spinner-color\" type=\"ball-spin-clockwise\"\n    *ngIf=\"showSpinner\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n</ngx-spinner>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}