{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { ArrangementFilterInputDTO } from 'src/app/ui/arrangement/model/arrangementFilterInput.model';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"../../services/rm-config.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"src/app/ui/arrangement/services/arrangement.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ng-select/ng-select\";\nimport * as i9 from \"@angular/material/legacy-card\";\nimport * as i10 from \"../../../../../directive/numbers-only.directive\";\nimport * as i11 from \"../../../../../directive/directive/trim-input.directive\";\nimport * as i12 from \"primeng/button\";\nimport * as i13 from \"primeng/toast\";\nimport * as i14 from \"primeng/confirmdialog\";\nimport * as i15 from \"ng-zorro-antd/table\";\nimport * as i16 from \"primeng/inputmask\";\nfunction RmConfigFormComponent_tr_19_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.errorMsg);\n  }\n}\nfunction RmConfigFormComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtemplate(2, RmConfigFormComponent_tr_19_label_2_Template, 2, 1, \"label\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r0.rmConfigForm.controls[\"preBlock\"] == null ? null : ctx_r0.rmConfigForm.controls[\"preBlock\"].errors.required));\n  }\n}\nfunction RmConfigFormComponent_tr_31_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.errorMsg);\n  }\n}\nfunction RmConfigFormComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtemplate(2, RmConfigFormComponent_tr_31_label_2_Template, 2, 1, \"label\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r1.rmConfigForm.controls[\"postBlock\"] == null ? null : ctx_r1.rmConfigForm.controls[\"postBlock\"].errors.required));\n  }\n}\nfunction RmConfigFormComponent_tr_43_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 31);\n    i0.ɵɵtext(1, \"Maximum capacity must be greater than zero\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RmConfigFormComponent_tr_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtemplate(2, RmConfigFormComponent_tr_43_label_2_Template, 2, 0, \"label\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r2.rmConfigForm.controls[\"maxCapacity\"] == null ? null : ctx_r2.rmConfigForm.controls[\"maxCapacity\"].errors.min) || (ctx_r2.rmConfigForm.controls[\"maxCapacity\"] == null ? null : ctx_r2.rmConfigForm.controls[\"maxCapacity\"].errors.required));\n  }\n}\nfunction RmConfigFormComponent_tr_58_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.errorMsg);\n  }\n}\nfunction RmConfigFormComponent_tr_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtemplate(2, RmConfigFormComponent_tr_58_label_2_Template, 2, 1, \"label\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r3.rmConfigForm.controls[\"dayStart\"] == null ? null : ctx_r3.rmConfigForm.controls[\"dayStart\"].errors.required));\n  }\n}\nfunction RmConfigFormComponent_tr_74_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r10.errorMsg);\n  }\n}\nfunction RmConfigFormComponent_tr_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 29);\n    i0.ɵɵtemplate(2, RmConfigFormComponent_tr_74_label_2_Template, 2, 1, \"label\", 30);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r4.rmConfigForm.controls[\"dayEnd\"] == null ? null : ctx_r4.rmConfigForm.controls[\"dayEnd\"].errors.required));\n  }\n}\nfunction RmConfigFormComponent_tr_87_td_2_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r12.errorMsg);\n  }\n}\nfunction RmConfigFormComponent_tr_87_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtemplate(1, RmConfigFormComponent_tr_87_td_2_label_1_Template, 2, 1, \"label\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r11.rmConfigForm.controls[\"arrangementType\"] == null ? null : ctx_r11.rmConfigForm.controls[\"arrangementType\"].errors.required));\n  }\n}\nfunction RmConfigFormComponent_tr_87_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\", 4);\n    i0.ɵɵtemplate(2, RmConfigFormComponent_tr_87_td_2_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r5.rmConfigForm.controls[\"arrangementType\"] == null ? null : ctx_r5.rmConfigForm.controls[\"arrangementType\"].errors) && ctx_r5.rmConfigForm.controls[\"arrangementType\"].dirty);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nexport let RmConfigFormComponent = /*#__PURE__*/(() => {\n  class RmConfigFormComponent {\n    constructor(data, formBuilder, confirmationService, enumsrv, service, messageService, dialogRef, arrangeService, datePipe) {\n      this.data = data;\n      this.formBuilder = formBuilder;\n      this.confirmationService = confirmationService;\n      this.enumsrv = enumsrv;\n      this.service = service;\n      this.messageService = messageService;\n      this.dialogRef = dialogRef;\n      this.arrangeService = arrangeService;\n      this.datePipe = datePipe;\n      this.isNew = true;\n      this.isEdit = true;\n      this.title = \"Add\";\n      this.enumList = [];\n      this.enumRmConfig = [];\n      this.enumExtAllowedData = [];\n      this.enumIsReservable = [];\n      this.enumRmCat = [];\n      this.enumAllRmCat = [];\n      this.enumRmType = [];\n      this.enumAllRmType = [];\n      this.time = null;\n      this.dayStart = null;\n      this.dayEnd = null;\n      this.errorMsg = '';\n      this.enumIsApprovalRequiredList = [];\n      this.enumArrangementType = [];\n      this.rmConfigForm = this.formBuilder.group({\n        blId: [null, [Validators.required]],\n        flId: [null, [Validators.required]],\n        rmId: [null, [Validators.required]],\n        blCode: ['', [Validators.required]],\n        flCode: ['', [Validators.required]],\n        rmCode: ['', [Validators.required]],\n        rmName: [''],\n        preBlock: [''],\n        postBlock: [''],\n        maxCapacity: ['', [Validators.required, Validators.min(1)]],\n        minCapacity: ['', [Validators.required, Validators.min(1)]],\n        dayStart: ['', [Validators.required]],\n        dayEnd: ['', [Validators.required]],\n        externalAllowed: [null, [Validators.required, Validators.min(1)]],\n        isReservable: [null, [Validators.required, Validators.min(1)]],\n        arrangementId: [null, [Validators.required]],\n        isApprovalRequired: ['', [Validators.required, Validators.min(1)]]\n      });\n    }\n    ngOnInit() {\n      console.log(this.data);\n      this.setFormData(this.data);\n      this.loadEnums();\n      this.isNew = true;\n      if (this.data != null) {\n        this.isNewRecord();\n      }\n      this.loadArrangementType();\n    }\n    setFormData(data) {\n      setTimeout(() => {\n        this.rmConfigForm.patchValue({\n          blId: data.blId,\n          flId: data.flId,\n          rmId: data.rmId,\n          blCode: data.blCode,\n          flCode: data.flCode,\n          rmCode: data.rmCode,\n          rmName: data.rmName,\n          preBlock: data.preBlock,\n          postBlock: data.postBlock,\n          maxCapacity: data.maxCapacity,\n          minCapacity: data.minCapacity,\n          dayStart: data.dayStart,\n          dayEnd: data.dayEnd,\n          externalAllowed: data.externalAllowed,\n          isReservable: data.isReservable,\n          arrangementId: data.arrangementId,\n          isApprovalRequired: data.isApprovalRequired\n        });\n      }, 0);\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res.map(x => Object.assign({}, x));\n        this.enumRmConfig = this.enumList.filter(t => t.tableName.toLocaleUpperCase() === 'rm_config'.toLocaleUpperCase());\n        this.enumExtAllowedData = this.enumRmConfig.filter(t => t.fieldName.toLocaleUpperCase() === 'external_allowed'.toLocaleUpperCase());\n        this.enumExtAllowedData.unshift(new EnumList(null, \"\", \"\", 'Make a selection', null));\n        this.enumIsReservable = this.enumRmConfig.filter(t => t.fieldName.toLocaleUpperCase() === 'is_reservable'.toLocaleUpperCase());\n        this.enumIsReservable.unshift(new EnumList(null, \"\", \"\", 'Make a selection', null));\n        this.enumIsApprovalRequiredList = this.enumRmConfig.filter(t => t.fieldName.toLocaleUpperCase() === 'is_approval_req'.toLocaleUpperCase());\n        this.enumIsApprovalRequiredList.unshift(new EnumList(null, \"\", \"\", 'Make a selection', null));\n      }, error => {});\n    }\n    loadArrangementType() {\n      this.arrangeService.getAllArrangements().subscribe(res => {\n        this.enumArrangementType = res.map(i => {\n          i.name = i.arrangementType;\n          return i;\n        });\n        this.enumArrangementType.unshift(new ArrangementFilterInputDTO('', '', 'Make a selection', null));\n      });\n    }\n    checkSelectedValue() {\n      return control => {\n        if (control.value !== undefined && control.value !== null && control.value !== \"\") {\n          var isReservable = this.rmConfigForm.controls['isReservable'].value;\n          var externalAllowed = this.rmConfigForm.controls['externalAllowed'].value;\n          var isApprovalRequired = this.rmConfigForm.controls['isApprovalRequired'].value;\n          this.rmConfigForm.clearAsyncValidators();\n          this.rmConfigForm.updateValueAndValidity();\n          if (control.value == 'Make a selection' && control.value == isReservable) {\n            this.rmConfigForm.controls['isReservable'].setErrors({\n              'incorrect': true\n            });\n            this.rmConfigForm.updateValueAndValidity();\n            return {\n              'incorrect': true\n            };\n          } else if (control.value == 'Make a selection' && control.value == externalAllowed) {\n            this.rmConfigForm.controls['externalAllowed'].setErrors({\n              'incorrect': true\n            });\n            this.rmConfigForm.updateValueAndValidity();\n            return {\n              'incorrect': true\n            };\n          } else if (control.value == 'Make a selection' && control.value == isApprovalRequired) {\n            this.rmConfigForm.controls['isApprovalRequired'].setErrors({\n              'incorrect': true\n            });\n            this.rmConfigForm.updateValueAndValidity();\n            return {\n              'incorrect': true\n            };\n          } else {\n            return null;\n          }\n        }\n        return null;\n      };\n    }\n    onSaveRecord() {\n      var RmConfigData = {\n        configId: this.data != null ? this.data.configId : 0,\n        blId: this.data.blId,\n        flId: this.data.flId,\n        rmId: this.data.rmId,\n        preBlock: this.rmConfigForm.controls.preBlock.value,\n        postBlock: this.rmConfigForm.controls.postBlock.value,\n        maxCapacity: this.rmConfigForm.controls.maxCapacity.value,\n        minCapacity: \"1\",\n        dayStart: this.convertToTime(this.rmConfigForm.controls.dayStart.value),\n        dayEnd: this.convertToTime(this.rmConfigForm.controls.dayEnd.value),\n        externalAllowed: this.rmConfigForm.controls.externalAllowed.value,\n        isReservable: this.rmConfigForm.controls.isReservable.value,\n        arrangementId: this.rmConfigForm.controls.arrangementId.value,\n        rmName: this.data.rmName,\n        isApprovalRequired: this.rmConfigForm.controls.isApprovalRequired.value\n      };\n      this.service.saveRmConfig(RmConfigData).subscribe(res => {\n        if (res.configId) {\n          this.messageService.add({\n            key: 'rmConfig',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          setTimeout(() => {\n            this.dialogRef.close(true);\n          }, 1500);\n        } else if (res.code == 409) {\n          this.messageService.add({\n            key: 'rmConfig',\n            severity: 'error',\n            summary: 'error',\n            detail: res.text\n          });\n        }\n      });\n    }\n    convertToTime(value) {\n      if (value != null) {\n        var currDate = new Date();\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        currDate.setHours(data[0]);\n        currDate.setMinutes(data[1]);\n        currDate.setSeconds(0);\n        currDate.setMilliseconds(0);\n        return this.datePipe.transform(currDate, \"HH:mm:ss\");\n      } else {\n        return '';\n      }\n    }\n    getTime(value) {\n      if (value != null) {\n        var currDate = new Date();\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        currDate.setHours(data[0]);\n        currDate.setMinutes(data[1]);\n        currDate.setSeconds(0);\n        currDate.setMilliseconds(0);\n        return currDate;\n      } else {\n        return null;\n      }\n    }\n    setTimerDayStart() {\n      var dayStartTime = this.rmConfigForm.controls['dayStart'].value;\n      if (dayStartTime == \"\" || dayStartTime == null) {\n        return;\n      }\n      var dayEndTime = this.rmConfigForm.controls['dayEnd'].value;\n      var array = dayStartTime.split(\":\");\n      var hours = array[0];\n      var mins = array[1];\n      hours = hours <= 23 ? hours : 23;\n      mins = mins <= 59 ? mins : 59;\n      dayStartTime = hours + \":\" + mins;\n      this.rmConfigForm.patchValue({\n        dayStart: dayStartTime\n      });\n      if (dayEndTime && dayStartTime != \"\") {\n        var start = this.getTime(dayStartTime);\n        var end = this.getTime(dayEndTime);\n        if (start >= end) {\n          this.rmConfigForm.controls['dayStart'].setErrors({\n            'incorrect': true\n          });\n          this.rmConfigForm.updateValueAndValidity();\n          this.errorMsg = \"Time day start  must be less than  time day end \";\n        }\n      }\n    }\n    setTimerDayEnd() {\n      var dayEndTime = this.rmConfigForm.controls['dayEnd'].value;\n      if (dayEndTime == \"\" || dayEndTime == null) {\n        return;\n      }\n      var dayStartTime = this.rmConfigForm.controls['dayStart'].value;\n      var array = dayEndTime.split(\":\");\n      var hours = array[0];\n      var mins = array[1];\n      hours = hours <= 23 ? hours : 23;\n      mins = mins <= 59 ? mins : 59;\n      dayEndTime = hours + \":\" + mins;\n      this.rmConfigForm.patchValue({\n        dayEnd: dayEndTime\n      });\n      if (dayStartTime && dayStartTime != \"\") {\n        var start = this.getTime(dayStartTime);\n        var end = this.getTime(dayEndTime);\n        if (start >= end) {\n          this.rmConfigForm.controls['dayEnd'].setErrors({\n            'incorrect': true\n          });\n          this.rmConfigForm.updateValueAndValidity();\n          this.errorMsg = \"Time day end  must be greater than  time day start\";\n        }\n      }\n    }\n    isNewRecord() {\n      if (this.data.newRecord != null) {\n        this.isNew = this.data.newRecord;\n        if (!this.isNew) {\n          this.title = 'Edit';\n        }\n      }\n    }\n    onCancel() {\n      this.confirmationService.confirm({\n        message: UtilConstant.CANCEL_Msg,\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.dialogRef.close();\n        }\n      });\n    }\n    static #_ = this.ɵfac = function RmConfigFormComponent_Factory(t) {\n      return new (t || RmConfigFormComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.EnumService), i0.ɵɵdirectiveInject(i4.RmConfigService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.ArrangementService), i0.ɵɵdirectiveInject(i7.DatePipe));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RmConfigFormComponent,\n      selectors: [[\"app-rm-config-form\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 100,\n      vars: 28,\n      consts: [[\"mat-dialog-title\", \"\", 1, \"mat-dialog-title-ext\"], [1, \"mat-typography\", \"mat-dialog-content-ext\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"name\", \"preBlock\", \"formControlName\", \"preBlock\", \"maxlength\", \"2\", \"appTrimInput\", \"\", 1, \"form-control\"], [1, \"form-field-lable\", \"control-label\"], [\"type\", \"text\", \"name\", \"blCode\", \"formControlName\", \"blCode\", 1, \"form-control\", 3, \"readOnly\"], [4, \"ngIf\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"name\", \"postBlock\", \"formControlName\", \"postBlock\", \"maxlength\", \"2\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"flCode\", \"formControlName\", \"flCode\", 1, \"form-control\", 3, \"readOnly\"], [\"type\", \"text\", \"NumbersOnly\", \"\", \"name\", \"maxCapacity\", \"formControlName\", \"maxCapacity\", \"maxlength\", \"9\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"rmCode\", \"formControlName\", \"rmCode\", 1, \"form-control\", 3, \"readOnly\"], [1, \"p-fluid\"], [1, \"p-field\"], [\"mask\", \"99:99\", \"formControlName\", \"dayStart\", \"placeholder\", \"00:00\", \"slotChar\", \"hh:mm\", 3, \"change\"], [\"type\", \"text\", \"name\", \"rmName\", \"formControlName\", \"rmName\", 1, \"form-control\", 3, \"readOnly\"], [\"mask\", \"99:99\", \"formControlName\", \"dayEnd\", \"placeholder\", \"00:00\", \"slotChar\", \"hh:mm\", 3, \"change\"], [\"appendTo\", \"body\", \"formControlName\", \"externalAllowed\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"isReservable\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"arrangementId\", \"bindLabel\", \"name\", \"bindValue\", \"arrangementId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"isApprovalRequired\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"align\", \"end\", 1, \"mat-dialog-actions-ext\"], [\"label\", \"Save\", \"icon\", \"pi pi-check\", 3, \"disabled\", \"click\"], [\"label\", \"Cancel\", \"icon\", \"pi pi-times\", \"styleClass\", \"p-button-secondary\", 3, \"click\"], [\"key\", \"rmConfig\", \"position\", \"top-right\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [2, \"width\", \"25%\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [\"style\", \"width:50%\", 4, \"ngIf\"]],\n      template: function RmConfigFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"form\")(4, \"mat-card\")(5, \"mat-card-content\")(6, \"form\", 2)(7, \"table\", 3)(8, \"tr\")(9, \"td\", 4)(10, \"div\", 5)(11, \"label\", 6);\n          i0.ɵɵtext(12, \"Pre-block (minutes)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"td\", 4)(15, \"div\", 5)(16, \"label\", 8);\n          i0.ɵɵtext(17, \"Building Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(19, RmConfigFormComponent_tr_19_Template, 3, 1, \"tr\", 10);\n          i0.ɵɵelementStart(20, \"tr\")(21, \"td\", 4)(22, \"div\", 5)(23, \"label\", 6);\n          i0.ɵɵtext(24, \"Post-block (minutes)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"td\", 4)(27, \"div\", 5)(28, \"label\", 8);\n          i0.ɵɵtext(29, \"Floor Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(30, \"input\", 12);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(31, RmConfigFormComponent_tr_31_Template, 3, 1, \"tr\", 10);\n          i0.ɵɵelementStart(32, \"tr\")(33, \"td\", 4)(34, \"div\", 5)(35, \"label\", 8);\n          i0.ɵɵtext(36, \"Maximum Capacity\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(37, \"input\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"td\", 4)(39, \"div\", 5)(40, \"label\", 8);\n          i0.ɵɵtext(41, \"Room Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(42, \"input\", 14);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(43, RmConfigFormComponent_tr_43_Template, 3, 1, \"tr\", 10);\n          i0.ɵɵelementStart(44, \"tr\")(45, \"td\", 4)(46, \"div\", 5)(47, \"div\", 15)(48, \"div\", 16)(49, \"label\", 8);\n          i0.ɵɵtext(50, \"Time Day Start\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(51, \"br\");\n          i0.ɵɵelementStart(52, \"p-inputMask\", 17);\n          i0.ɵɵlistener(\"change\", function RmConfigFormComponent_Template_p_inputMask_change_52_listener() {\n            return ctx.setTimerDayStart();\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(53, \"td\", 4)(54, \"div\", 5)(55, \"label\", 6);\n          i0.ɵɵtext(56, \"Room Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(57, \"input\", 18);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(58, RmConfigFormComponent_tr_58_Template, 3, 1, \"tr\", 10);\n          i0.ɵɵelementStart(59, \"tr\")(60, \"td\", 4)(61, \"div\", 5)(62, \"div\", 15)(63, \"div\", 16)(64, \"label\", 8);\n          i0.ɵɵtext(65, \"Time Day End\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(66, \"br\");\n          i0.ɵɵelementStart(67, \"p-inputMask\", 19);\n          i0.ɵɵlistener(\"change\", function RmConfigFormComponent_Template_p_inputMask_change_67_listener() {\n            return ctx.setTimerDayEnd();\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(68, \"td\", 4)(69, \"div\", 5)(70, \"div\", 5)(71, \"label\", 8);\n          i0.ɵɵtext(72, \"External Visitors Allowed\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(73, \"ng-select\", 20);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(74, RmConfigFormComponent_tr_74_Template, 3, 1, \"tr\", 10);\n          i0.ɵɵelementStart(75, \"tr\")(76, \"td\", 4)(77, \"div\", 5)(78, \"div\", 5)(79, \"label\", 8);\n          i0.ɵɵtext(80, \"Is Reservable?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(81, \"ng-select\", 21);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(82, \"td\", 4)(83, \"div\", 5)(84, \"label\", 8);\n          i0.ɵɵtext(85, \"Arrangement Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(86, \"ng-select\", 22);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(87, RmConfigFormComponent_tr_87_Template, 3, 1, \"tr\", 10);\n          i0.ɵɵelementStart(88, \"tr\")(89, \"td\", 4)(90, \"div\", 5)(91, \"div\", 5)(92, \"label\", 8);\n          i0.ɵɵtext(93, \"Is Approval Required?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(94, \"ng-select\", 23);\n          i0.ɵɵelementEnd()()()()()()()()()();\n          i0.ɵɵelementStart(95, \"mat-dialog-actions\", 24)(96, \"p-button\", 25);\n          i0.ɵɵlistener(\"click\", function RmConfigFormComponent_Template_p_button_click_96_listener() {\n            return ctx.onSaveRecord();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(97, \"p-button\", 26);\n          i0.ɵɵlistener(\"click\", function RmConfigFormComponent_Template_p_button_click_97_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(98, \"p-toast\", 27)(99, \"p-confirmDialog\", 28);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.title, \" Room Configuration\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.rmConfigForm);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"readOnly\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.rmConfigForm.controls[\"preBlock\"] == null ? null : ctx.rmConfigForm.controls[\"preBlock\"].errors) && ctx.rmConfigForm.controls[\"preBlock\"].dirty);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"readOnly\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.rmConfigForm.controls[\"postBlock\"] == null ? null : ctx.rmConfigForm.controls[\"postBlock\"].errors) && ctx.rmConfigForm.controls[\"postBlock\"].dirty);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"readOnly\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.rmConfigForm.controls[\"maxCapacity\"] == null ? null : ctx.rmConfigForm.controls[\"maxCapacity\"].errors) && ctx.rmConfigForm.controls[\"maxCapacity\"].dirty);\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"readOnly\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.rmConfigForm.controls[\"dayStart\"] == null ? null : ctx.rmConfigForm.controls[\"dayStart\"].errors) && ctx.rmConfigForm.controls[\"dayStart\"].dirty);\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumExtAllowedData)(\"searchable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.rmConfigForm.controls[\"dayEnd\"] == null ? null : ctx.rmConfigForm.controls[\"dayEnd\"].errors) && ctx.rmConfigForm.controls[\"dayEnd\"].dirty);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumIsReservable)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumArrangementType)(\"searchable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.rmConfigForm.controls[\"arrangementType\"] == null ? null : ctx.rmConfigForm.controls[\"arrangementType\"].errors) && ctx.rmConfigForm.controls[\"arrangementType\"].dirty);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumIsApprovalRequiredList)(\"searchable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.rmConfigForm.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c0));\n        }\n      },\n      dependencies: [i7.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i1.NgForm, i8.NgSelectComponent, i5.MatDialogTitle, i5.MatDialogContent, i5.MatDialogActions, i9.MatLegacyCard, i9.MatLegacyCardContent, i10.NumbersOnlyDirective, i11.TrimInputDirective, i12.Button, i13.Toast, i14.ConfirmDialog, i15.NzTableCellDirective, i15.NzTrDirective, i16.InputMask],\n      styles: [\".mat-dialog-title-ext[_ngcontent-%COMP%]{background-color:#879cc9;padding-left:10px;font-weight:400;margin-bottom:0}.mat-dialog-content-ext[_ngcontent-%COMP%]{margin:0;padding:10px;background-color:#fff!important}.mat-typography[_ngcontent-%COMP%]{max-height:100%}.mat-dialog-actions-ext[_ngcontent-%COMP%]{border-top:none;padding:3px;min-height:36px!important;margin-bottom:5px;background-color:#fff!important}.margin-left-20[_ngcontent-%COMP%]{margin-left:20px}.margin-5[_ngcontent-%COMP%]{margin:5px!important}.mat-card[_ngcontent-%COMP%]{border-radius:0}.mat-expansion-panel[_ngcontent-%COMP%]{background-color:#879cc9}.mat-card-content[_ngcontent-%COMP%], .mat-expansion-panel-content[_ngcontent-%COMP%]{background-color:#fff!important}.mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]{line-height:inherit!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px;margin-top:17px}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}.form-field-lable[_ngcontent-%COMP%]{font-size:11px;margin-bottom:0;font-weight:500}.form-control[_ngcontent-%COMP%]{margin-top:-3px;padding-left:5px}[_ngcontent-%COMP%]::placeholder{color:#555;opacity:1}[_ngcontent-%COMP%]:-ms-input-placeholder{color:#555}[_ngcontent-%COMP%]::-ms-input-placeholder{color:#555}.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{border-radius:0!important}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card[_ngcontent-%COMP%]{padding:0;border:thin double rgb(181,155,90)}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}\"]\n    });\n  }\n  return RmConfigFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}