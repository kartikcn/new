{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { UserFilterInput } from './usersFilterInput.model';\nimport { UtilConstant } from '../../../../common/UtilConstant';\nimport { BreakpointService } from 'src/app/services/breakpoint.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/enum.service\";\nimport * as i3 from \"src/app/services/users.service\";\nimport * as i4 from \"src/app/services/auth.service\";\nimport * as i5 from \"../provider/user.provider\";\nimport * as i6 from \"src/app/services/breakpoint.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ng-select/ng-select\";\nimport * as i9 from \"primeng/api\";\nimport * as i10 from \"primeng/table\";\nimport * as i11 from \"primeng/button\";\nimport * as i12 from \"primeng/dropdown\";\nimport * as i13 from \"primeng/panel\";\nimport * as i14 from \"../../../core/level-status/level-status.component\";\nimport * as i15 from \"primeng/paginator\";\nfunction UserComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 14)(1, \"tr\")(2, \"td\", 15)(3, \"div\", 16)(4, \"label\", 17);\n    i0.ɵɵtext(5, \"User Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"ng-select\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 15)(8, \"div\", 16)(9, \"label\", 17);\n    i0.ɵɵtext(10, \"User Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"ng-select\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\", 15)(13, \"div\", 16)(14, \"label\", 17);\n    i0.ɵɵtext(15, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"ng-select\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(17, \"td\", 15);\n    i0.ɵɵelementStart(18, \"td\", 21)(19, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function UserComponent_table_3_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onFilter(ctx_r7.userFilterPanel));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function UserComponent_table_3_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onClear());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumUsers)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumUserRoles)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumStatusList)(\"searchable\", true);\n  }\n}\nfunction UserComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table\", 14)(1, \"tr\")(2, \"td\", 15)(3, \"div\", 16)(4, \"label\", 17);\n    i0.ɵɵtext(5, \"User Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"ng-select\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 15)(8, \"div\", 16)(9, \"label\", 17);\n    i0.ɵɵtext(10, \"User Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"ng-select\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\", 15)(13, \"div\", 16)(14, \"label\", 17);\n    i0.ɵɵtext(15, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"ng-select\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(17, \"td\", 24);\n    i0.ɵɵelementStart(18, \"td\", 25)(19, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function UserComponent_table_4_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onFilter(ctx_r10.userFilterPanel));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function UserComponent_table_4_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onClear());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumUsers)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumUserRoles)(\"searchable\", true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r1.enumStatusList)(\"searchable\", true);\n  }\n}\nfunction UserComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function UserComponent_ng_template_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.addUser());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_ng_template_10_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 45);\n    i0.ɵɵlistener(\"onChange\", function UserComponent_ng_template_10_ng_template_26_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const filter_r17 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r17($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r16)(\"options\", ctx_r15.userStatus)(\"showClear\", true);\n  }\n}\nfunction UserComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 27);\n    i0.ɵɵelementStart(2, \"th\", 28)(3, \"div\", 29)(4, \"div\", 30)(5, \"p\", 31);\n    i0.ɵɵtext(6, \"User Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 32);\n    i0.ɵɵelement(8, \"p-sortIcon\", 33)(9, \"p-columnFilter\", 34);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 35)(11, \"div\", 29)(12, \"div\", 30)(13, \"p\", 31);\n    i0.ɵɵtext(14, \"User Role\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 32);\n    i0.ɵɵelement(16, \"p-sortIcon\", 36)(17, \"p-columnFilter\", 37);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 38)(19, \"div\", 29)(20, \"div\", 30)(21, \"p\", 31);\n    i0.ɵɵtext(22, \"User Status\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 32);\n    i0.ɵɵelement(24, \"p-sortIcon\", 39);\n    i0.ɵɵelementStart(25, \"p-columnFilter\", 40);\n    i0.ɵɵtemplate(26, UserComponent_ng_template_10_ng_template_26_Template, 1, 3, \"ng-template\", 41);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(27, \"th\", 42)(28, \"div\", 29)(29, \"div\", 30)(30, \"p\", 31);\n    i0.ɵɵtext(31, \"Employee Name \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 32);\n    i0.ɵɵelement(33, \"p-sortIcon\", 43)(34, \"p-columnFilter\", 44);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction UserComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 46)(1, \"td\", 27)(2, \"button\", 47);\n    i0.ɵɵlistener(\"click\", function UserComponent_ng_template_11_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const user_r20 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.openEditItem(user_r20.userId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"level-status\", 48);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r20 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", user_r20);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(user_r20.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r20.userrolesRoleName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"status\", ctx_r5.getNameById(user_r20.userStatus, \"user_status\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.getNameById(user_r20.userStatus, \"user_status\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", user_r20.employeeFirstName, \" \", user_r20.employeeLastName, \"\");\n  }\n}\nfunction UserComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 5);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let UserComponent = /*#__PURE__*/(() => {\n  class UserComponent {\n    constructor(fb, enumsrv, userSrv, authSrv, userModalDialogueProvider, bps) {\n      this.fb = fb;\n      this.enumsrv = enumsrv;\n      this.userSrv = userSrv;\n      this.authSrv = authSrv;\n      this.userModalDialogueProvider = userModalDialogueProvider;\n      this.bps = bps;\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumCC_stat = [];\n      this.enumUsers = [];\n      this.enumUserRoles = [];\n      this.GLACCList = [];\n      this.user_data = [];\n      this.enumStatusList = [];\n      this.enumStatus = [];\n      this.subscriptions = [];\n      this.loading = false;\n      this.isUserList = true;\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.userStatus = [];\n      this.useTabletProtrait = false;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"userId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteriaList = [];\n      this.isFiltered = false;\n      this.filterData = {\n        id: \"\",\n        name: \"\",\n        userRole: \"\",\n        status: null\n      };\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      this.userFilterPanel = this.fb.group({\n        user_id: [\"\"],\n        userRole: [\"\"],\n        status: [\"\"]\n      });\n    }\n    ngOnInit() {\n      this.bps.register(this);\n      this.loadUsers();\n      this.loadEnums();\n      this.afterRefreshPanel();\n    }\n    notify() {\n      this.useTabletProtrait = BreakpointService.useTabletProtrait;\n    }\n    loadUsers() {\n      this.userSrv.getALLUsers().subscribe(res => {\n        this.enumUsers = res;\n        this.enumUserRoles = res;\n        this.enumUserRoles = this.enumUserRoles.map(i => {\n          i.userRole = i.userRole;\n          return i.userRole;\n        });\n        this.enumUserRoles = this.enumUserRoles.filter((item, i, ar) => ar.indexOf(item) === i);\n        this.enumUserRoles.unshift(new UserFilterInput('', '', 'Make a selection', null));\n      });\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'fm_users'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'user_status'.toLocaleUpperCase());\n        this.userStatus = this.enumStatus;\n        this.enumStatusList = this.enumStatus.map(i => {\n          i.status = i.enumValue;\n          return i.enumValue;\n        });\n        this.enumStatusList.unshift(\"Make a Selection\");\n      }, error => {});\n    }\n    getNameIntials(firstName, lastName) {\n      return firstName.charAt(0) + lastName.charAt(0);\n    }\n    onClear() {\n      for (var fieldId in this.userFilterPanel.controls) {\n        this.userFilterPanel.controls[fieldId].setValue(null);\n      }\n      this.isUserList = true;\n      this.user_data = [];\n      this.userListPanelRefresh();\n    }\n    getIdByName(status, userStatus) {\n      return status ? this.enumList.find(t => t.enumValue == status && t.fieldName == userStatus) != null ? this.enumList.find(t => t.enumValue == status && t.fieldName == userStatus)?.enumKey : '' : '';\n    }\n    onFilter(formData) {\n      var code = formData.controls.user_id.value;\n      var role = formData.controls.userRole.value;\n      var status = formData.controls.status.value;\n      status = this.getIdByName(status, \"user_status\");\n      let postData = {\n        id: code,\n        name: \"\",\n        userRole: role,\n        status: status\n      };\n      this.filterData = {\n        ...postData\n      };\n      this.loadRecords(postData);\n    }\n    loadRecords(data) {\n      this.loading = true;\n      this.isUserList = true;\n      let finaldata = {\n        ...data,\n        filterDto: {\n          paginationDTO: this.paginationObj,\n          filterCriteria: this.filterCriteriaList\n        }\n      };\n      this.isFiltered = false;\n      this.userSrv.getUserListPaginated(finaldata).subscribe(res => {\n        if (res) {\n          this.isUserList = false;\n          this.isFiltered = false;\n          this.user_data = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        } else {\n          this.isUserList = true;\n          this.user_data = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    getNameById(enumKey, fieldName) {\n      return enumKey ? this.enumList.find(t => t.enumKey == enumKey && t.fieldName == fieldName) != null ? this.enumList.find(t => t.enumKey == enumKey && t.fieldName == fieldName)?.enumValue : '' : '';\n    }\n    addUser() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        user_name: 0,\n        isEdit: true,\n        newRecord: true,\n        title: \"Add\"\n      };\n      this.userModalDialogueProvider.openDialog(dialogConfig);\n      this.userModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        if (result == true) {\n          this.afterRefreshPanel();\n          this.loadUsers();\n        }\n      });\n    }\n    openEditItem(userId) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '750px';\n      dialogConfig.data = {\n        userId: userId,\n        isEdit: true,\n        newRecord: false,\n        title: \"Edit\"\n      };\n      this.userModalDialogueProvider.openDialog(dialogConfig);\n      this.userModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        if (result == true) {\n          this.afterRefreshPanel();\n        }\n      });\n    }\n    afterRefreshPanel() {\n      this.onClear();\n      this.userListPanelRefresh();\n    }\n    userListPanelRefresh() {\n      let postData = {\n        id: \"\",\n        name: \"\",\n        userRole: \"\"\n      };\n      this.loadRecords(postData);\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {}\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n      this.bps.unregister(this);\n    }\n    /// Start Of UI Related Non-Trivial Functionality ///\n    clear(table) {\n      table.clear();\n    }\n    onRowSelect(event) {\n      this.openEditItem(event.data.userName);\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords(this.filterData);\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {};\n            if (field == \"userrolesRoleName\") {\n              filterCriteria = {\n                fieldName: \"userroles.roleName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else if (field == \"employeeFirstName\") {\n              filterCriteria = {\n                fieldName: \"emEmployee.firstName\",\n                value: filterValue,\n                matchMode: matchMode\n              };\n            } else {\n              filterCriteria = {\n                fieldName: field,\n                value: filterValue,\n                matchMode: matchMode\n              };\n            }\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords(this.filterData);\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function UserComponent_Factory(t) {\n      return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.EnumService), i0.ɵɵdirectiveInject(i3.UsersService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.UserModalDialogueProvider), i0.ɵɵdirectiveInject(i6.BreakpointService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserComponent,\n      selectors: [[\"app-user\"]],\n      decls: 15,\n      vars: 16,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Filter\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\", 4, \"ngIf\"], [\"header\", \"User Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"selectionMode\", \"single\", \"dataKey\", \"userName\", \"scrollDirection\", \"both\", \"scrollHeight\", \"430px\", 3, \"value\", \"paginator\", \"rows\", \"rowHover\", \"selection\", \"scrollable\", \"onFilter\", \"selectionChange\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"user_id\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"userRole\", \"bindLabel\", \"userRole\", \"bindValue\", \"userRole\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"status\", \"bindLabel\", \"status\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"width\", \"11%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Filter\", 1, \"p-button-raised\", 3, \"click\"], [\"type\", \"reset\", \"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-raised\", \"pull-right\", 3, \"click\"], [2, \"width\", \"15%\"], [2, \"width\", \"25%\"], [\"pButton\", \"\", \"icon\", \"pi pi-plus\", \"label\", \"Add\", 3, \"click\"], [2, \"width\", \"4rem\"], [\"pSortableColumn\", \"userName\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"userName\"], [\"type\", \"text\", \"field\", \"userName\", \"display\", \"menu\"], [\"pSortableColumn\", \"userrolesRoleName\"], [\"field\", \"userrolesRoleName\"], [\"type\", \"text\", \"field\", \"userrolesRoleName\", \"display\", \"menu\"], [\"pSortableColumn\", \"userStatus\"], [\"field\", \"userStatus\"], [\"field\", \"userStatus\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"pSortableColumn\", \"employeeFirstName\"], [\"field\", \"employeeFirstName\"], [\"type\", \"text\", \"field\", \"employeeFirstName\", \"display\", \"menu\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Type\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [3, \"status\"]],\n      template: function UserComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"form\", 2);\n          i0.ɵɵtemplate(3, UserComponent_table_3_Template, 21, 9, \"table\", 3);\n          i0.ɵɵtemplate(4, UserComponent_table_4_Template, 21, 9, \"table\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"p-panel\", 4);\n          i0.ɵɵtemplate(6, UserComponent_ng_template_6_Template, 1, 0, \"ng-template\", 5);\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"p-table\", 7, 8);\n          i0.ɵɵlistener(\"onFilter\", function UserComponent_Template_p_table_onFilter_8_listener($event) {\n            return ctx.onInnerFilter($event);\n          })(\"selectionChange\", function UserComponent_Template_p_table_selectionChange_8_listener($event) {\n            return ctx.selectedUser = $event;\n          });\n          i0.ɵɵtemplate(10, UserComponent_ng_template_10_Template, 35, 0, \"ng-template\", 9);\n          i0.ɵɵtemplate(11, UserComponent_ng_template_11_Template, 12, 7, \"ng-template\", 10);\n          i0.ɵɵtemplate(12, UserComponent_ng_template_12_Template, 3, 1, \"ng-template\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 12)(14, \"p-paginator\", 13);\n          i0.ɵɵlistener(\"onPageChange\", function UserComponent_Template_p_paginator_onPageChange_14_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"toggleable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.userFilterPanel);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.useTabletProtrait);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.useTabletProtrait);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.user_data)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"rowHover\", true)(\"selection\", ctx.selectedUser)(\"scrollable\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(15, _c0));\n        }\n      },\n      dependencies: [i7.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.NgModel, i8.NgSelectComponent, i9.PrimeTemplate, i10.Table, i10.SortableColumn, i10.SelectableRow, i10.SortIcon, i10.ColumnFilter, i11.ButtonDirective, i12.Dropdown, i13.Panel, i14.LevelStatusComponent, i15.Paginator]\n    });\n  }\n  return UserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}