{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from '../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../background-loc/model/DTO/FloorFilterInputDTO.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../background-loc/services/bl.service\";\nimport * as i5 from \"../ppm-schedule/services/plan-schedule-services\";\nimport * as i6 from \"../Helpdesk/work-request/service/add-work-request.services\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"@ng-select/ng-select\";\nimport * as i9 from \"primeng/api\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/dialog\";\nimport * as i12 from \"primeng/panel\";\nimport * as i13 from \"primeng/checkbox\";\nimport * as i14 from \"primeng/selectbutton\";\nimport * as i15 from \"./widgets/pm-planner-req-details-table/pm-planner-req-details-table.component\";\nimport * as i16 from \"../Helpdesk/requests-by-asset-reports/widgets/add-table/add-table.component\";\nfunction PmPlannerComponent_div_19_div_27_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 44)(2, \"span\", 45);\n    i0.ɵɵlistener(\"click\", function PmPlannerComponent_div_19_div_27_div_5_div_1_Template_span_click_2_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const key_r8 = i0.ɵɵnextContext().$implicit;\n      const i_r6 = i0.ɵɵnextContext().index;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClickRowCard(key_r8, null, ctx_r12.titleStringList[i_r6]));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const key_r8 = i0.ɵɵnextContext().$implicit;\n    const plan_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Total Requests: \", ctx_r9.getProperty(key_r8, plan_r5).count, \"\");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction PmPlannerComponent_div_19_div_27_div_5_ng_template_2_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵlistener(\"click\", function PmPlannerComponent_div_19_div_27_div_5_ng_template_2_div_0_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const subItem_r20 = restoredCtx.$implicit;\n      const key_r8 = i0.ɵɵnextContext(3).$implicit;\n      const i_r6 = i0.ɵɵnextContext().index;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onClickRowCard(key_r8, subItem_r20, ctx_r21.titleStringList[i_r6]));\n    });\n    i0.ɵɵelementStart(1, \"span\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 50);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const subItem_r20 = ctx.$implicit;\n    const key_r8 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, subItem_r20.availableCount > subItem_r20.count ? \"#99ff99\" : subItem_r20.count > subItem_r20.availableCount ? \"#ff9999\" : \"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", subItem_r20.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", subItem_r20.count, \" \", key_r8 === \"part\" ? subItem_r20.units : \"hours\", \"\");\n  }\n}\nfunction PmPlannerComponent_div_19_div_27_div_5_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-panel\", 47);\n    i0.ɵɵtemplate(2, PmPlannerComponent_div_19_div_27_div_5_ng_template_2_div_0_div_2_Template, 5, 6, \"div\", 48);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const key_r8 = i0.ɵɵnextContext(2).$implicit;\n    const plan_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"header\", ctx_r18.getDisplayKey(key_r8))(\"toggleable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.getProperty(key_r8, plan_r5));\n  }\n}\nfunction PmPlannerComponent_div_19_div_27_div_5_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, PmPlannerComponent_div_19_div_27_div_5_ng_template_2_div_0_Template, 3, 3, \"div\", 46);\n  }\n  if (rf & 2) {\n    const key_r8 = i0.ɵɵnextContext().$implicit;\n    const plan_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.getProperty(key_r8, plan_r5).length > 0);\n  }\n}\nfunction PmPlannerComponent_div_19_div_27_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PmPlannerComponent_div_19_div_27_div_5_div_1_Template, 4, 1, \"div\", 42);\n    i0.ɵɵtemplate(2, PmPlannerComponent_div_19_div_27_div_5_ng_template_2_Template, 1, 1, \"ng-template\", null, 43, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const key_r8 = ctx.$implicit;\n    const _r10 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", key_r8 == \"request\")(\"ngIfElse\", _r10);\n  }\n}\nfunction PmPlannerComponent_div_19_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"div\", 38)(2, \"p\", 39);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 40);\n    i0.ɵɵtemplate(5, PmPlannerComponent_div_19_div_27_div_5_Template, 4, 2, \"div\", 41);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.titleStringList[i_r6]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.keyPmPlannerList);\n  }\n}\nfunction PmPlannerComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"div\", 18)(3, \"div\", 19)(4, \"p-selectButton\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function PmPlannerComponent_div_19_Template_p_selectButton_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.viewByValue = $event);\n    })(\"onChange\", function PmPlannerComponent_div_19_Template_p_selectButton_onChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.onViewByChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 21)(6, \"div\", 22)(7, \"div\", 23)(8, \"p-checkbox\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function PmPlannerComponent_div_19_Template_p_checkbox_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.selectedDisplayParameters = $event);\n    })(\"onChange\", function PmPlannerComponent_div_19_Template_p_checkbox_onChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.checkboxSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 25);\n    i0.ɵɵtext(10, \"Trade\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 23)(12, \"p-checkbox\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function PmPlannerComponent_div_19_Template_p_checkbox_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.selectedDisplayParameters = $event);\n    })(\"onChange\", function PmPlannerComponent_div_19_Template_p_checkbox_onChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.checkboxSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\", 27);\n    i0.ɵɵtext(14, \"Tool\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 23)(16, \"p-checkbox\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function PmPlannerComponent_div_19_Template_p_checkbox_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.selectedDisplayParameters = $event);\n    })(\"onChange\", function PmPlannerComponent_div_19_Template_p_checkbox_onChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.checkboxSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"label\", 29);\n    i0.ɵɵtext(18, \"Part\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\")(20, \"p-checkbox\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function PmPlannerComponent_div_19_Template_p_checkbox_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.selectedDisplayParameters = $event);\n    })(\"onChange\", function PmPlannerComponent_div_19_Template_p_checkbox_onChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.checkboxSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"label\", 31);\n    i0.ɵɵtext(22, \"Technician\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(23, \"div\", 32)(24, \"div\")(25, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function PmPlannerComponent_div_19_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onPrevious());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 34);\n    i0.ɵɵtemplate(27, PmPlannerComponent_div_19_div_27_Template, 6, 2, \"div\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\")(29, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function PmPlannerComponent_div_19_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onNext());\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"options\", ctx_r0.viewByData)(\"ngModel\", ctx_r0.viewByValue)(\"multiple\", false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedDisplayParameters);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedDisplayParameters);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedDisplayParameters);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedDisplayParameters);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.pmplannerData);\n  }\n}\nfunction PmPlannerComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-pm-planner-req-details-table\", 51);\n    i0.ɵɵlistener(\"reloadPmPlanner\", function PmPlannerComponent_ng_template_21_Template_app_pm_planner_req_details_table_reloadPmPlanner_0_listener($event) {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.reloadComponent($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r1.popUpTableData)(\"rowCardDetails\", ctx_r1.selectedRowCard);\n  }\n}\nfunction PmPlannerComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-add-table\", 52);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", ctx_r2.myRequestsData);\n  }\n}\nfunction PmPlannerComponent_ngx_spinner_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngx-spinner\", 53)(1, \"p\", 54);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nconst _c1 = function () {\n  return {\n    width: \"66vw\"\n  };\n};\nexport class PmPlannerComponent {\n  constructor(formBuilder, authSrv, datePipe, blServ, planscheduleSrv, wrServ, spinner, cdr) {\n    this.formBuilder = formBuilder;\n    this.authSrv = authSrv;\n    this.datePipe = datePipe;\n    this.blServ = blServ;\n    this.planscheduleSrv = planscheduleSrv;\n    this.wrServ = wrServ;\n    this.spinner = spinner;\n    this.cdr = cdr;\n    this.enumBL = [];\n    this.enumFL = [];\n    this.enumAllFL = [];\n    this.showCardGrid = false;\n    this.viewByData = [{\n      \"id\": 0,\n      \"label\": 'Daily',\n      \"value\": \"daily\"\n    }, {\n      \"id\": 1,\n      \"label\": 'Weekly',\n      \"value\": \"weekly\"\n    }, {\n      \"id\": 2,\n      \"label\": 'Monthly',\n      \"value\": \"monthly\"\n    }];\n    this.firstListTitle = \"firstList\";\n    this.secondListTitle = \"secondList\";\n    this.thirdListTitle = \"thirdList\";\n    this.fourthListTitle = \"fourthList\";\n    this.titleStringList = [];\n    this.currentDate = new Date();\n    this.pmplannerData = [];\n    this.keyPmPlannerList = [];\n    this.monthStart = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n    this.monthEnd = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0);\n    this.viewByValue = 'daily';\n    this.selectedDisplayParameters = [];\n    this.selectedRowCardTableName = '';\n    this.showRequestPopUpGrid = false;\n    this.showOtherPopUpGrid = false;\n    this.popUpTableData = [];\n    this.myRequestsData = [];\n    this.showSpinner = false;\n    this.selectedDateTitle = '';\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.selectedBl = {};\n    this.selectedFl = {};\n    this.scrollLimit = UtilConstant.SCROLL_LIMIT;\n    this.filterPanel = this.formBuilder.group({\n      blId: [null],\n      flId: [null]\n    });\n  }\n  ngOnInit() {\n    this.currentDate.setHours(0, 0, 0, 0);\n    this.filterPanel.patchValue({\n      dateFrom: this.monthStart,\n      dateTo: this.monthEnd\n    });\n  }\n  onSelectBlCode($event) {\n    this.filterPanel.patchValue({\n      flId: null\n    });\n    if ($event.blId != null) {\n      this.selectedBl = $event;\n      this.selectedFl = {};\n    } else {\n      this.selectedBl = {};\n      this.selectedFl = {};\n    }\n  }\n  onSelectFlCode(event) {\n    if (event.flId != null) {\n      this.selectedFl = event;\n      const blData = {\n        blId: event.blId,\n        blNameString: event.blNameString\n      };\n      this.selectedBl = blData;\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId\n        });\n      }, 10);\n    } else {}\n  }\n  getProperty(key, data) {\n    return data[key];\n  }\n  onViewByChange(event) {\n    this.showCardGrid = false;\n    this.onSearch();\n  }\n  onSearch() {\n    this.pmplannerData = [];\n    this.showCardGrid = true;\n    let viewByValue = this.viewByValue;\n    this.keyPmPlannerList = ['request', 'trade', 'tool', 'part', 'technician'];\n    this.selectedDisplayParameters = ['trade', 'tool', 'part', 'technician'];\n    this.showSpinner = true;\n    this.spinner.show();\n    let dateStart = '';\n    let dateEnd = '';\n    if (viewByValue == 'daily') {\n      dateStart = this.datePipe.transform(this.currentDate, \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(this.calculateNextDate(this.currentDate, 3), \"yyyy-MM-dd\");\n    } else if (viewByValue == 'weekly') {\n      let datestartvalue = this.getWeekFirstAndLastDateforDate(this.currentDate).firstDate;\n      let dateendvalue = this.calculateNextDate(datestartvalue, 27);\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\");\n    } else if (viewByValue == 'monthly') {\n      let datestartvalue = this.getMonthFirstAndLastDateforDate(this.currentDate).firstDate;\n      let dateendvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(this.currentDate, 3)).lastDate;\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\");\n    }\n    this.pmplannerFilter = {\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      rmId: null,\n      eqId: null,\n      dateRequestedFrom: dateStart,\n      dateRequestedTo: dateEnd,\n      viewByValue: viewByValue\n    };\n    this.planscheduleSrv.getPmPlannerData(this.pmplannerFilter).subscribe(res => {\n      this.pmplannerData = res;\n      if (viewByValue == 'daily') {\n        this.firstListTitle = this.datePipe.transform(this.currentDate, \"dd MMM yyyy\");\n        this.secondListTitle = this.datePipe.transform(this.calculateNextDate(this.currentDate, 1), \"dd MMM yyyy\");\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextDate(this.currentDate, 2), \"dd MMM yyyy\");\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextDate(this.currentDate, 3), \"dd MMM yyyy\");\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'weekly') {\n        let secondTitleDate = this.calculateNextDate(this.currentDate, 7);\n        let thirdTitleDate = this.calculateNextDate(this.currentDate, 14);\n        let fourthTitleDate = this.calculateNextDate(this.currentDate, 21);\n        this.firstListTitle = `${this.getWeekFirstAndLastDateforDate(this.currentDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(this.currentDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(this.currentDate).firstDate, \"dd MMM yyyy\")})`;\n        this.secondListTitle = `${this.getWeekFirstAndLastDateforDate(secondTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(secondTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(secondTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.thirdListTitle = `${this.getWeekFirstAndLastDateforDate(thirdTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(thirdTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(thirdTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.fourthListTitle = `${this.getWeekFirstAndLastDateforDate(fourthTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(fourthTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(fourthTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'monthly') {\n        this.firstListTitle = this.datePipe.transform(this.currentDate, \"MMMM yyyy\");\n        this.secondListTitle = this.datePipe.transform(this.calculateNextMonth(this.currentDate, 1), \"MMMM yyyy\");\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextMonth(this.currentDate, 2), \"MMMM yyyy\");\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextMonth(this.currentDate, 3), \"MMMM yyyy\");\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      }\n      this.spinner.hide();\n      this.showSpinner = false;\n    });\n  }\n  onNext() {\n    this.pmplannerData = [];\n    let viewByValue = this.viewByValue;\n    let dateStart = '';\n    let dateEnd = '';\n    this.showSpinner = true;\n    this.spinner.show();\n    let previousFirstDate;\n    if (viewByValue == 'daily') {\n      previousFirstDate = this.getDateFromDateString(this.firstListTitle);\n      dateStart = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 4), \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 7), \"yyyy-MM-dd\");\n    } else if (viewByValue == 'weekly') {\n      previousFirstDate = this.getDateFromWeekString(this.firstListTitle);\n      let datestartvalue = this.calculateNextDate(previousFirstDate, 28);\n      let dateendvalue = this.calculateNextDate(datestartvalue, 27);\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\");\n    } else if (viewByValue == 'monthly') {\n      previousFirstDate = this.getDateFromMonthString(this.firstListTitle);\n      let datestartvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, 4)).firstDate;\n      let dateendvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, 7)).lastDate;\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\");\n    }\n    this.pmplannerFilter = {\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      rmId: null,\n      eqId: null,\n      dateRequestedFrom: dateStart,\n      dateRequestedTo: dateEnd,\n      viewByValue: viewByValue\n    };\n    this.planscheduleSrv.getPmPlannerData(this.pmplannerFilter).subscribe(res => {\n      this.pmplannerData = res;\n      if (viewByValue == 'daily') {\n        this.firstListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 4), \"dd MMM yyyy\");\n        this.secondListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 5), \"dd MMM yyyy\");\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 6), \"dd MMM yyyy\");\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 7), \"dd MMM yyyy\");\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'weekly') {\n        let firstTitleDate = this.calculateNextDate(previousFirstDate, 28);\n        let secondTitleDate = this.calculateNextDate(previousFirstDate, 35);\n        let thirdTitleDate = this.calculateNextDate(previousFirstDate, 42);\n        let fourthTitleDate = this.calculateNextDate(previousFirstDate, 49);\n        this.firstListTitle = `${this.getWeekFirstAndLastDateforDate(firstTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(firstTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(firstTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.secondListTitle = `${this.getWeekFirstAndLastDateforDate(secondTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(secondTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(secondTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.thirdListTitle = `${this.getWeekFirstAndLastDateforDate(thirdTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(thirdTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(thirdTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.fourthListTitle = `${this.getWeekFirstAndLastDateforDate(fourthTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(fourthTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(fourthTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'monthly') {\n        this.firstListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, 4), \"MMMM yyyy\");\n        this.secondListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, 5), \"MMMM yyyy\");\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, 6), \"MMMM yyyy\");\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, 7), \"MMMM yyyy\");\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      }\n      this.spinner.hide();\n      this.showSpinner = false;\n    });\n  }\n  onPrevious() {\n    this.pmplannerData = [];\n    let viewByValue = this.viewByValue;\n    let dateStart = '';\n    let dateEnd = '';\n    this.showSpinner = true;\n    this.spinner.show();\n    let previousFirstDate;\n    if (viewByValue == 'daily') {\n      previousFirstDate = this.getDateFromDateString(this.firstListTitle);\n      dateStart = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -4), \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -1), \"yyyy-MM-dd\");\n    } else if (viewByValue == 'weekly') {\n      previousFirstDate = this.getDateFromWeekString(this.firstListTitle);\n      let datestartvalue = this.calculateNextDate(previousFirstDate, -28);\n      let dateendvalue = this.calculateNextDate(previousFirstDate, -1);\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\");\n    } else if (viewByValue == 'monthly') {\n      previousFirstDate = this.getDateFromMonthString(this.firstListTitle);\n      let datestartvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, -4)).firstDate;\n      let dateendvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, -1)).lastDate;\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\");\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\");\n    }\n    this.pmplannerFilter = {\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      rmId: null,\n      eqId: null,\n      dateRequestedFrom: dateStart,\n      dateRequestedTo: dateEnd,\n      viewByValue: viewByValue\n    };\n    this.planscheduleSrv.getPmPlannerData(this.pmplannerFilter).subscribe(res => {\n      this.pmplannerData = res;\n      if (viewByValue == 'daily') {\n        this.firstListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -4), \"dd MMM yyyy\");\n        this.secondListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -3), \"dd MMM yyyy\");\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -2), \"dd MMM yyyy\");\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -1), \"dd MMM yyyy\");\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'weekly') {\n        let firstTitleDate = this.calculateNextDate(previousFirstDate, -28);\n        let secondTitleDate = this.calculateNextDate(previousFirstDate, -21);\n        let thirdTitleDate = this.calculateNextDate(previousFirstDate, -14);\n        let fourthTitleDate = this.calculateNextDate(previousFirstDate, -7);\n        this.firstListTitle = `${this.getWeekFirstAndLastDateforDate(firstTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(firstTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(firstTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.secondListTitle = `${this.getWeekFirstAndLastDateforDate(secondTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(secondTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(secondTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.thirdListTitle = `${this.getWeekFirstAndLastDateforDate(thirdTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(thirdTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(thirdTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.fourthListTitle = `${this.getWeekFirstAndLastDateforDate(fourthTitleDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(fourthTitleDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(fourthTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'monthly') {\n        this.firstListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, -4), \"MMMM yyyy\");\n        this.secondListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, -3), \"MMMM yyyy\");\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, -2), \"MMMM yyyy\");\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, -1), \"MMMM yyyy\");\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      }\n      this.spinner.hide();\n      this.showSpinner = false;\n    });\n  }\n  loadForPmPlannerDataCurrentSelection() {\n    this.showCardGrid = false;\n    this.cdr.detectChanges();\n    this.showSpinner = true;\n    this.spinner.show();\n    this.planscheduleSrv.getPmPlannerData(this.pmplannerFilter).subscribe(res => {\n      this.pmplannerData = res;\n      this.showCardGrid = true;\n      this.cdr.detectChanges();\n      this.showOtherPopUpGrid = false;\n      this.cdr.detectChanges();\n      this.popUpTableData = [];\n      this.planscheduleSrv.getPmPlannerRequestDetails(this.pmplannerRoomFilter).subscribe(res => {\n        setTimeout(() => {\n          this.popUpTableData = res;\n          this.showOtherPopUpGrid = true;\n          this.cdr.detectChanges();\n          this.spinner.hide();\n          this.showSpinner = false;\n        }, 1000);\n      });\n    });\n  }\n  onClear() {\n    this.showCardGrid = false;\n    this.filterPanel.patchValue({\n      dateFrom: this.monthStart,\n      dateTo: this.monthEnd,\n      blId: null,\n      flId: null\n    });\n    this.titleStringList = [];\n    this.viewByValue = 'daily';\n    this.pmplannerData = [];\n    this.showSpinner = false;\n    this.selectedDisplayParameters = [];\n    this.selectedRowCardTableName = '';\n    this.selectedRowCard = {};\n    this.showRequestPopUpGrid = false;\n    this.showOtherPopUpGrid = false;\n    this.popUpTableData = [];\n    this.myRequestsData = [];\n    this.pmplannerFilter = {};\n    this.pmplannerRoomFilter = {};\n    this.selectedDateTitle = '';\n    this.selectedBl = {};\n    this.selectedFl = {};\n  }\n  checkboxSelected(event) {\n    this.keyPmPlannerList = [];\n    this.keyPmPlannerList.unshift('request');\n    event.checked.forEach(key => {\n      this.keyPmPlannerList.push(key);\n    });\n  }\n  onClickRowCard(key, item, title) {\n    this.showRequestPopUpGrid = false;\n    this.showOtherPopUpGrid = false;\n    this.popUpTableData = [];\n    this.myRequestsData = [];\n    this.selectedRowCardTableName = `${this.getDisplayKey(key)} Details`;\n    this.selectedRowCard = {\n      key: key,\n      rowDetails: item\n    };\n    let dateStart;\n    let dateEnd;\n    this.selectedDateTitle = title;\n    if (this.viewByValue == 'daily') {\n      dateStart = this.getDateFromDateString(title);\n      dateEnd = new Date(dateStart);\n    } else if (this.viewByValue == 'weekly') {\n      let dateResult = this.getWeekFirstAndLastDateforDate(this.getDateFromWeekString(title));\n      dateStart = dateResult.firstDate;\n      dateEnd = dateResult.lastDate;\n    } else if (this.viewByValue == 'monthly') {\n      let dateResult = this.getMonthFirstAndLastDateforDate(this.getDateFromMonthString(title));\n      dateStart = dateResult.firstDate;\n      dateEnd = dateResult.lastDate;\n    } else {\n      dateStart = new Date();\n      dateEnd = new Date();\n    }\n    if (key != 'request') {\n      let tableName = '';\n      if (key == 'trade') {\n        tableName = 'request_trade';\n      } else if (key == 'part') {\n        tableName = 'request_parts';\n      } else if (key == 'tool') {\n        tableName = 'request_tools';\n      } else if (key == 'technician') {\n        tableName = 'request_technician';\n      }\n      this.pmplannerRoomFilter = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        fromDate: this.datePipe.transform(dateStart, \"yyyy-MM-dd\"),\n        toDate: this.datePipe.transform(dateEnd, \"yyyy-MM-dd\"),\n        tableName: tableName,\n        fieldName: item.id\n      };\n      this.planscheduleSrv.getPmPlannerRequestDetails(this.pmplannerRoomFilter).subscribe(res => {\n        this.popUpTableData = res;\n        this.showOtherPopUpGrid = true;\n      });\n    } else {\n      let filterData = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        dateRequestedFrom: this.datePipe.transform(dateStart, \"yyyy-MM-dd\"),\n        dateRequestedTo: this.datePipe.transform(dateEnd, \"yyyy-MM-dd\"),\n        showRequestType: \"pmPlanner\"\n      };\n      this.wrServ.getAllWrByFilter(filterData).subscribe(res => {\n        this.myRequestsData = res;\n        this.showRequestPopUpGrid = true;\n      });\n    }\n  }\n  calculateNextDate(currentDate, daysToAdd) {\n    let nextDate = new Date(currentDate);\n    nextDate.setDate(nextDate.getDate() + daysToAdd);\n    return nextDate;\n  }\n  calculateNextMonth(currentDate, monthsToAdd) {\n    let date = new Date(currentDate);\n    date.setMonth(date.getMonth() + monthsToAdd);\n    return date;\n  }\n  getWeekNumber(date) {\n    let currentDate = new Date(date);\n    currentDate.setHours(0, 0, 0, 0);\n    currentDate.setDate(currentDate.getDate() + 4 - (currentDate.getDay() || 7));\n    let yearStart = new Date(currentDate.getFullYear(), 0, 1);\n    let weekNumber = Math.ceil(((currentDate - yearStart) / 86400000 + 1) / 7);\n    return weekNumber;\n  }\n  getWeekFirstAndLastDateforDate(date) {\n    const result = {\n      firstDate: new Date(date),\n      lastDate: new Date(date)\n    };\n    result.firstDate.setDate(date.getDate() - date.getDay() + (date.getDay() == 0 ? -6 : 1));\n    result.firstDate.setHours(0, 0, 0, 0);\n    result.lastDate.setDate(date.getDate() - date.getDay() + (date.getDay() == 0 ? 0 : 7));\n    result.lastDate.setHours(23, 59, 59, 999);\n    return result;\n  }\n  getMonthFirstAndLastDateforDate(date) {\n    const result = {\n      firstDate: new Date(date),\n      lastDate: new Date(date)\n    };\n    result.firstDate.setDate(1);\n    result.firstDate.setHours(0, 0, 0, 0);\n    result.lastDate.setMonth(date.getMonth() + 1, 0);\n    result.lastDate.setHours(23, 59, 59, 999);\n    return result;\n  }\n  getMonthNumber(month) {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months.indexOf(month);\n  }\n  getDateFromDateString(date) {\n    const dateString = date;\n    const dateParts = dateString.split(' ');\n    const year = parseInt(dateParts[2], 10);\n    const month = new Date(Date.parse(dateParts[1] + ' 1, 2023')).getMonth();\n    const day = parseInt(dateParts[0], 10);\n    const dateObject = new Date(year, month, day);\n    dateObject.setHours(0, 0, 0, 0);\n    return dateObject;\n  }\n  getDateFromWeekString(weekString) {\n    const parts = weekString.split(':');\n    const yearString = parts[0].trim();\n    const weekPart = parts[1].trim();\n    const year = parseInt(yearString, 10);\n    const weekMatch = weekPart.match(/\\d+/);\n    const weekNumber = weekMatch ? parseInt(weekMatch[0], 10) : 1;\n    const startOfWeekDay = 1;\n    const date = new Date(year, 0, 1);\n    const daysToMonday = (7 - (date.getDay() - startOfWeekDay)) % 7;\n    date.setDate(date.getDate() + daysToMonday);\n    const daysToAdd = (weekNumber - 1) * 7;\n    date.setDate(date.getDate() + daysToAdd);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n  getDateFromMonthString(monthString) {\n    const dateParts = monthString.split(' ');\n    const month = dateParts[0];\n    const year = parseInt(dateParts[1], 10);\n    const dateObject = new Date(year, this.getMonthNumber(month), 1);\n    dateObject.setHours(0, 0, 0, 0);\n    return dateObject;\n  }\n  getDisplayKey(key) {\n    let displayKey = \"\";\n    if (key == \"request\") {\n      displayKey = \"Request\";\n    } else if (key == \"trade\") {\n      displayKey = \"Trade\";\n    } else if (key == \"tool\") {\n      displayKey = \"Tool\";\n    } else if (key == \"part\") {\n      displayKey = \"Part\";\n    } else if (key == \"technician\") {\n      displayKey = \"Technician\";\n    }\n    return displayKey;\n  }\n  reloadComponent(reload) {\n    if (reload) {\n      this.loadForPmPlannerDataCurrentSelection();\n    }\n  }\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blServ.getALLBuildingByScroll(this.filterCriteria).subscribe(res => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    });\n  }\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blServ.getALLFloorByScroll(this.filterCriteria).subscribe(res => {\n      this.enumFL = res;\n      this.updateFlList(this.selectedFl);\n    });\n  }\n  searchBl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"blName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndBl();\n  }\n  searchFl(event) {\n    this.filterCriteria = {};\n    this.filterCriteria = {\n      fieldName: \"flName\",\n      value: event.term,\n      matchMode: \"contains\"\n    };\n    this.scrollToEndFl();\n  }\n  updateBlList(blData) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n  updateFlList(flData) {\n    if (flData.flId) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n    }\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null,\n      value: null,\n      matchMode: \"contains\",\n      limit: 0,\n      offset: 0\n    };\n    this.scrollToEndBl();\n  }\n  onOpenFl() {\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    if (this.selectedBl.blId) {\n      this.filterCriteria = {\n        fieldName: \"bl.blId\",\n        value: this.selectedBl.blId,\n        matchMode: \"equals\",\n        limit: 0,\n        offset: 0\n      };\n    } else {\n      this.filterCriteria = {\n        fieldName: null,\n        value: null,\n        matchMode: \"contains\",\n        limit: 0,\n        offset: 0\n      };\n    }\n    this.scrollToEndFl();\n  }\n  static #_ = this.ɵfac = function PmPlannerComponent_Factory(t) {\n    return new (t || PmPlannerComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.BuildingService), i0.ɵɵdirectiveInject(i5.PlanScheduleService), i0.ɵɵdirectiveInject(i6.AddWorkRequestService), i0.ɵɵdirectiveInject(i7.NgxSpinnerService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PmPlannerComponent,\n    selectors: [[\"app-pm-planner\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 25,\n    vars: 28,\n    consts: [[1, \"card\", \"filter-container\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"20%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"blNameString\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"flNameString\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\", \"scrollToEnd\", \"search\", \"open\"], [2, \"width\", \"40%\"], [2, \"margin-top\", \"16px\", \"margin-right\", \"10px\", \"display\", \"flex\", \"justify-content\", \"flex-end\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Search\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"card pmplanner-container\", 4, \"ngIf\"], [\"styleClass\", \"dark-panel\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"header\", \"visibleChange\"], [\"pTemplate\", \"body\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"class\", \"spinner-color\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\", 4, \"ngIf\"], [1, \"card\", \"pmplanner-container\"], [2, \"margin\", \"0px 5px 0px 5px\"], [2, \"height\", \"50px\", \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"space-between\"], [2, \"margin-left\", \"5px\"], [\"optionLabel\", \"label\", \"optionValue\", \"value\", 3, \"options\", \"ngModel\", \"multiple\", \"ngModelChange\", \"onChange\"], [2, \"margin-right\", \"5px\"], [2, \"display\", \"flex\"], [2, \"margin-right\", \"10px\"], [\"name\", \"group1\", \"value\", \"trade\", \"inputId\", \"trade\", 1, \"select-box\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"for\", \"trade\", 1, \"select-label\"], [\"name\", \"group1\", \"value\", \"tool\", \"inputId\", \"tool\", 1, \"select-box\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"for\", \"tool\", 1, \"select-label\"], [\"name\", \"group1\", \"value\", \"part\", \"inputId\", \"part\", 1, \"select-box\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"for\", \"part\", 1, \"select-label\"], [\"name\", \"group1\", \"value\", \"technician\", \"inputId\", \"technician\", 1, \"select-box\", 3, \"ngModel\", \"ngModelChange\", \"onChange\"], [\"for\", \"technician\", 1, \"select-label\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"justify-content\", \"space-between\", \"width\", \"100%\", \"height\", \"74vh\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-chevron-left\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"width\", \"30px\", 3, \"click\"], [1, \"pm-planner-details-conatiner\"], [\"class\", \"plan-collection-container\", 4, \"ngFor\", \"ngForOf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-chevron-right\", 1, \"p-button-primary\", \"p-button-sm\", 2, \"width\", \"30px\", 3, \"click\"], [1, \"plan-collection-container\"], [1, \"pmplanner-date-header-container\"], [1, \"card-text\"], [1, \"card\", \"example-container\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"otherItems\", \"\"], [1, \"card\", \"hover-pointer\", \"zoom-on-hover\", \"request-card\"], [1, \"request-content-title\", 3, \"click\"], [4, \"ngIf\"], [3, \"header\", \"toggleable\"], [\"class\", \"card hover-pointer zoom-on-hover internal-card\", 3, \"ngStyle\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"hover-pointer\", \"zoom-on-hover\", \"internal-card\", 3, \"ngStyle\", \"click\"], [1, \"card-content-title\"], [3, \"data\", \"rowCardDetails\", \"reloadPmPlanner\"], [\"isEscalatedData\", \"false\", 3, \"data\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#879cc9\", \"type\", \"ball-spin-clockwise\", 1, \"spinner-color\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function PmPlannerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Building \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ng-select\", 6);\n        i0.ɵɵlistener(\"change\", function PmPlannerComponent_Template_ng_select_change_8_listener($event) {\n          return ctx.onSelectBlCode($event);\n        })(\"scrollToEnd\", function PmPlannerComponent_Template_ng_select_scrollToEnd_8_listener() {\n          return ctx.scrollToEndBl();\n        })(\"search\", function PmPlannerComponent_Template_ng_select_search_8_listener($event) {\n          return ctx.searchBl($event);\n        })(\"open\", function PmPlannerComponent_Template_ng_select_open_8_listener() {\n          return ctx.onOpenBl();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Floor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ng-select\", 7);\n        i0.ɵɵlistener(\"change\", function PmPlannerComponent_Template_ng_select_change_13_listener($event) {\n          return ctx.onSelectFlCode($event);\n        })(\"scrollToEnd\", function PmPlannerComponent_Template_ng_select_scrollToEnd_13_listener() {\n          return ctx.scrollToEndFl();\n        })(\"search\", function PmPlannerComponent_Template_ng_select_search_13_listener($event) {\n          return ctx.searchFl($event);\n        })(\"open\", function PmPlannerComponent_Template_ng_select_open_13_listener() {\n          return ctx.onOpenFl();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"td\", 8);\n        i0.ɵɵelementStart(15, \"td\", 3)(16, \"div\", 9)(17, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function PmPlannerComponent_Template_button_click_17_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function PmPlannerComponent_Template_button_click_18_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵtemplate(19, PmPlannerComponent_div_19_Template, 30, 8, \"div\", 12);\n        i0.ɵɵelementStart(20, \"p-dialog\", 13);\n        i0.ɵɵlistener(\"visibleChange\", function PmPlannerComponent_Template_p_dialog_visibleChange_20_listener($event) {\n          return ctx.showOtherPopUpGrid = $event;\n        });\n        i0.ɵɵtemplate(21, PmPlannerComponent_ng_template_21_Template, 1, 2, \"ng-template\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p-dialog\", 13);\n        i0.ɵɵlistener(\"visibleChange\", function PmPlannerComponent_Template_p_dialog_visibleChange_22_listener($event) {\n          return ctx.showRequestPopUpGrid = $event;\n        });\n        i0.ɵɵtemplate(23, PmPlannerComponent_ng_template_23_Template, 1, 1, \"ng-template\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, PmPlannerComponent_ngx_spinner_24_Template, 3, 1, \"ngx-spinner\", 15);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCardGrid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(26, _c1));\n        i0.ɵɵproperty(\"visible\", ctx.showOtherPopUpGrid)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false)(\"header\", ctx.selectedRowCardTableName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c1));\n        i0.ɵɵproperty(\"visible\", ctx.showRequestPopUpGrid)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false)(\"header\", ctx.selectedRowCardTableName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinner);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i3.NgStyle, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.NgSelectComponent, i9.PrimeTemplate, i10.ButtonDirective, i11.Dialog, i12.Panel, i13.Checkbox, i14.SelectButton, i1.NgModel, i15.PmPlannerReqDetailsTableComponent, i16.AddTableComponent, i7.NgxSpinnerComponent],\n    styles: [\".example-container[_ngcontent-%COMP%] {\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  max-height: 63vh;\\n  overflow-y: auto;\\n  margin-top: 5px;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  padding: 5px 5px 5px 0px;\\n  font-size: 14px;\\n}\\n\\n.card-content-title[_ngcontent-%COMP%] {\\n  font-weight: 400;\\n  font-size: 11px;\\n}\\n\\n.table-header[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  font-size: 12px;\\n}\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n  background: lightgray;\\n  border-radius: 2px;\\n}\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 2px;\\n  height: 0px;\\n}\\n\\n.select-box[_ngcontent-%COMP%] {\\n  margin-right: 5px;\\n}\\n\\n.select-label[_ngcontent-%COMP%] {\\n  font-family: \\\"Segoe UI\\\", Tahoma, Geneva, Verdana, sans-serif;\\n  font-weight: normal;\\n}\\n\\n.pmplanner-date-header-container[_ngcontent-%COMP%] {\\n  height: 30px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: #c0dbf0;\\n}\\n\\n  .dark-panel.p-dialog .p-dialog-header {\\n  border-top-left-radius: 5px;\\n  border-top-right-radius: 5px;\\n  border-bottom-left-radius: 0px;\\n  border-bottom-right-radius: 0px;\\n  padding: 10px;\\n  padding-left: 20px;\\n}\\n\\n  .p-dialog-content {\\n  overflow: visible;\\n}\\n\\n  .p-dialog .p-dialog-content {\\n  padding: 10px;\\n}\\n\\n.hover-pointer[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  transition: background-color 0.2s, color 0.2s, border-color 0.2s, box-shadow 0.2s;\\n}\\n\\n.hover-pointer[_ngcontent-%COMP%]:hover {\\n  background-color: #c0dbf0;\\n  transform: scale(1);\\n}\\n\\n.zoom-on-hover[_ngcontent-%COMP%] {\\n  transition: transform 0.3s;\\n}\\n\\n.zoom-on-hover[_ngcontent-%COMP%]:hover {\\n  padding-left: 4px;\\n  border-radius: 2px;\\n  transform: scale(1.05);\\n  cursor: pointer;\\n}\\n\\n.internal-card[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  padding-left: 2px;\\n  padding-right: 2px;\\n  margin-bottom: 4px;\\n  height: 25px;\\n}\\n\\n  .p-panel .p-panel-header {\\n  border-bottom: none;\\n}\\n\\n  .p-panel .p-panel-content {\\n  padding: 0px 10px 0px 10px;\\n}\\n\\n.request-content-title[_ngcontent-%COMP%] {\\n  font-weight: 400;\\n  font-size: 12px;\\n  padding-left: 12px;\\n}\\n\\n.request-card[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  height: 30px;\\n  margin-top: 5px;\\n}\\n\\n.filter-container[_ngcontent-%COMP%] {\\n  height: 11vh;\\n}\\n\\n.pmplanner-container[_ngcontent-%COMP%] {\\n  height: 79vh;\\n}\\n\\n.plan-collection-container[_ngcontent-%COMP%] {\\n  width: 18.5vw;\\n  height: 68vh;\\n  margin: 0 5px 5px 5px;\\n  overflow-y: auto;\\n}\\n\\n.pm-planner-details-conatiner[_ngcontent-%COMP%] {\\n  display: flex;\\n  height: 100%;\\n}\\n\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n  .filter-container[_ngcontent-%COMP%] {\\n    height: 8vh;\\n  }\\n  .pm-planner-details-conatiner[_ngcontent-%COMP%] {\\n    display: grid;\\n    grid-template-columns: auto auto;\\n    grid-gap: 5px;\\n  }\\n  .plan-collection-container[_ngcontent-%COMP%] {\\n    width: 28vw;\\n    height: 35vh;\\n    margin: 0 5px 5px 5px;\\n    overflow-y: auto;\\n  }\\n}\\n@media screen and (min-width: 960px) and (max-width: 1439px) {\\n  .plan-collection-container[_ngcontent-%COMP%] {\\n    width: 18vw;\\n    height: 68vh;\\n    margin: 0 5px 5px 5px;\\n    overflow-y: auto;\\n  }\\n  [_nghost-%COMP%]     .p-dialog-mask {\\n    top: -5vh;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["MessageService","UtilConstant","BuildingFilterInputDTO","FloorFilterInputDTO","i0","ɵɵelementStart","ɵɵlistener","PmPlannerComponent_div_19_div_27_div_5_div_1_Template_span_click_2_listener","ɵɵrestoreView","_r14","key_r8","ɵɵnextContext","$implicit","i_r6","index","ctx_r12","ɵɵresetView","onClickRowCard","titleStringList","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r9","getProperty","plan_r5","count","PmPlannerComponent_div_19_div_27_div_5_ng_template_2_div_0_div_2_Template_div_click_0_listener","restoredCtx","_r23","subItem_r20","ctx_r21","ɵɵproperty","ɵɵpureFunction1","_c0","availableCount","name","ɵɵtextInterpolate2","units","ɵɵtemplate","PmPlannerComponent_div_19_div_27_div_5_ng_template_2_div_0_div_2_Template","ctx_r18","getDisplayKey","PmPlannerComponent_div_19_div_27_div_5_ng_template_2_div_0_Template","ctx_r11","length","PmPlannerComponent_div_19_div_27_div_5_div_1_Template","PmPlannerComponent_div_19_div_27_div_5_ng_template_2_Template","ɵɵtemplateRefExtractor","_r10","PmPlannerComponent_div_19_div_27_div_5_Template","ɵɵtextInterpolate","ctx_r4","keyPmPlannerList","PmPlannerComponent_div_19_Template_p_selectButton_ngModelChange_4_listener","$event","_r31","ctx_r30","viewByValue","PmPlannerComponent_div_19_Template_p_selectButton_onChange_4_listener","ctx_r32","onViewByChange","PmPlannerComponent_div_19_Template_p_checkbox_ngModelChange_8_listener","ctx_r33","selectedDisplayParameters","PmPlannerComponent_div_19_Template_p_checkbox_onChange_8_listener","ctx_r34","checkboxSelected","PmPlannerComponent_div_19_Template_p_checkbox_ngModelChange_12_listener","ctx_r35","PmPlannerComponent_div_19_Template_p_checkbox_onChange_12_listener","ctx_r36","PmPlannerComponent_div_19_Template_p_checkbox_ngModelChange_16_listener","ctx_r37","PmPlannerComponent_div_19_Template_p_checkbox_onChange_16_listener","ctx_r38","PmPlannerComponent_div_19_Template_p_checkbox_ngModelChange_20_listener","ctx_r39","PmPlannerComponent_div_19_Template_p_checkbox_onChange_20_listener","ctx_r40","PmPlannerComponent_div_19_Template_button_click_25_listener","ctx_r41","onPrevious","PmPlannerComponent_div_19_div_27_Template","PmPlannerComponent_div_19_Template_button_click_29_listener","ctx_r42","onNext","ctx_r0","viewByData","pmplannerData","PmPlannerComponent_ng_template_21_Template_app_pm_planner_req_details_table_reloadPmPlanner_0_listener","_r44","ctx_r43","reloadComponent","ctx_r1","popUpTableData","selectedRowCard","ɵɵelement","ctx_r2","myRequestsData","PmPlannerComponent","constructor","formBuilder","authSrv","datePipe","blServ","planscheduleSrv","wrServ","spinner","cdr","enumBL","enumFL","enumAllFL","showCardGrid","firstListTitle","secondListTitle","thirdListTitle","fourthListTitle","currentDate","Date","monthStart","getFullYear","getMonth","monthEnd","selectedRowCardTableName","showRequestPopUpGrid","showOtherPopUpGrid","showSpinner","selectedDateTitle","limitBl","offsetBl","limitFl","offsetFl","filterCriteria","fieldName","value","matchMode","limit","offset","selectedBl","selectedFl","scrollLimit","SCROLL_LIMIT","filterPanel","group","blId","flId","ngOnInit","setHours","patchValue","dateFrom","dateTo","onSelectBlCode","onSelectFlCode","event","blData","blNameString","updateBlList","setTimeout","key","data","onSearch","show","dateStart","dateEnd","transform","calculateNextDate","datestartvalue","getWeekFirstAndLastDateforDate","firstDate","dateendvalue","getMonthFirstAndLastDateforDate","calculateNextMonth","lastDate","pmplannerFilter","controls","rmId","eqId","dateRequestedFrom","dateRequestedTo","getPmPlannerData","subscribe","res","secondTitleDate","thirdTitleDate","fourthTitleDate","getWeekNumber","toString","hide","previousFirstDate","getDateFromDateString","getDateFromWeekString","getDateFromMonthString","firstTitleDate","loadForPmPlannerDataCurrentSelection","detectChanges","getPmPlannerRequestDetails","pmplannerRoomFilter","onClear","unshift","checked","forEach","push","item","title","rowDetails","dateResult","tableName","fromDate","toDate","id","filterData","showRequestType","getAllWrByFilter","daysToAdd","nextDate","setDate","getDate","monthsToAdd","date","setMonth","getDay","yearStart","weekNumber","Math","ceil","result","getMonthNumber","month","months","indexOf","dateString","dateParts","split","year","parseInt","parse","day","dateObject","weekString","parts","yearString","trim","weekPart","weekMatch","match","startOfWeekDay","daysToMonday","monthString","displayKey","reload","scrollToEndBl","getALLBuildingByScroll","scrollToEndFl","getALLFloorByScroll","updateFlList","searchBl","term","searchFl","filter","t","flData","onOpenBl","onOpenFl","_","ɵɵdirectiveInject","i1","UntypedFormBuilder","i2","AuthService","i3","DatePipe","i4","BuildingService","i5","PlanScheduleService","i6","AddWorkRequestService","i7","NgxSpinnerService","ChangeDetectorRef","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","PmPlannerComponent_Template","rf","ctx","PmPlannerComponent_Template_ng_select_change_8_listener","PmPlannerComponent_Template_ng_select_scrollToEnd_8_listener","PmPlannerComponent_Template_ng_select_search_8_listener","PmPlannerComponent_Template_ng_select_open_8_listener","PmPlannerComponent_Template_ng_select_change_13_listener","PmPlannerComponent_Template_ng_select_scrollToEnd_13_listener","PmPlannerComponent_Template_ng_select_search_13_listener","PmPlannerComponent_Template_ng_select_open_13_listener","PmPlannerComponent_Template_button_click_17_listener","PmPlannerComponent_Template_button_click_18_listener","PmPlannerComponent_div_19_Template","PmPlannerComponent_Template_p_dialog_visibleChange_20_listener","PmPlannerComponent_ng_template_21_Template","PmPlannerComponent_Template_p_dialog_visibleChange_22_listener","PmPlannerComponent_ng_template_23_Template","PmPlannerComponent_ngx_spinner_24_Template","valid","ɵɵstyleMap","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\pm-planner\\pm-planner.component.ts","C:\\Users\\Manav Gupta\\Downloads\\fms\\fms\\frontend\\fms_frontend\\src\\app\\ui\\pm-planner\\pm-planner.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DatePipe } from '@angular/common';\nimport { BuildingService } from '../background-loc/services/bl.service';\nimport { PlanScheduleService } from '../ppm-schedule/services/plan-schedule-services';\nimport { AddWorkRequestService } from '../Helpdesk/work-request/service/add-work-request.services';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { BuildingFilterInputDTO } from '../background-loc/model/DTO/BuildingFilterInputDTO.model';\nimport { FloorFilterInputDTO } from '../background-loc/model/DTO/FloorFilterInputDTO.model';\n\ninterface PmPlannerData {\n  request: { count: number; };\n  trade: { name: string; count: number; id: string; availableCount: number; }[];\n  tool: { name: string; count: number; id: string; availableCount: number; }[];\n  part: { name: string; count: number; id: string; availableCount: number;units: string }[];\n  technician: { name: string; count: number; id: string; availableCount: number; }[];\n}\n\n@Component({\n  selector: 'app-pm-planner',\n  templateUrl: './pm-planner.component.html',\n  styleUrls: ['./pm-planner.component.scss'],\n  providers: [MessageService]\n})\nexport class PmPlannerComponent {\n  filterPanel!: UntypedFormGroup;\n  enumBL: any[] = [];\n  enumFL: any[] = [];\n  enumAllFL: any[] = [];\n  showCardGrid: boolean = false;\n  viewByData: any[] = [\n    {\n      \"id\": 0,\n      \"label\": 'Daily',\n      \"value\": \"daily\"\n    },\n    {\n      \"id\": 1,\n      \"label\": 'Weekly',\n      \"value\": \"weekly\"\n    },\n    {\n      \"id\": 2,\n      \"label\": 'Monthly',\n      \"value\": \"monthly\"\n    }\n  ];\n  firstListTitle: string = \"firstList\";\n  secondListTitle: string = \"secondList\";\n  thirdListTitle: string = \"thirdList\";\n  fourthListTitle: string = \"fourthList\";\n  titleStringList: string[] = [];\n  currentDate = new Date();\n  pmplannerData: PmPlannerData[] = [];\n  keyPmPlannerList: string[] = [];\n  monthStart = new Date((new Date()).getFullYear(), (new Date()).getMonth(), 1);\n  monthEnd = new Date((new Date()).getFullYear(), (new Date()).getMonth() + 1, 0);\n  i!: number;\n  viewByValue: string = 'daily';\n  selectedDisplayParameters: string[] = [];\n  selectedRowCardTableName: string = '';\n  selectedRowCard: any;\n  showRequestPopUpGrid: boolean = false;\n  showOtherPopUpGrid: boolean = false;\n  popUpTableData: any[] = [];\n  myRequestsData: any[] = [];\n  pmplannerFilter: any;\n  pmplannerRoomFilter: any;\n  showSpinner: boolean = false;\n  selectedDateTitle: string = '';\n  limitBl: number = 0;\n  offsetBl: number = 0;\n  limitFl: number = 0;\n  offsetFl: number = 0;\n  filterCriteria: any = {\n    fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n  };\n\n  selectedBl: any = {};\n  selectedFl: any = {};\n  scrollLimit:number = UtilConstant.SCROLL_LIMIT;\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private authSrv: AuthService,\n    private datePipe: DatePipe,\n    private blServ: BuildingService,\n    private planscheduleSrv: PlanScheduleService,\n    private wrServ: AddWorkRequestService,\n    private spinner: NgxSpinnerService,\n    private cdr: ChangeDetectorRef,\n  ) {\n\n    this.filterPanel = this.formBuilder.group({\n      blId: [null],\n      flId: [null],\n    });\n  }\n\n  ngOnInit(): void {\n    this.currentDate.setHours(0, 0, 0, 0);\n    this.filterPanel.patchValue({\n      dateFrom: this.monthStart,\n      dateTo: this.monthEnd\n    })\n   \n  }\n\n  onSelectBlCode($event: any) {\n    this.filterPanel.patchValue({\n      flId: null,\n    });\n    if ($event.blId != null) {\n      this.selectedBl = $event;\n      this.selectedFl = {};\n    }\n    else {\n     this.selectedBl = {};\n     this.selectedFl = {};\n    }\n  }\n\n  onSelectFlCode(event: any) {\n    if (event.flId != null) {\n      this.selectedFl = event;\n      const blData: any = {\n        blId: event.blId,\n        blNameString: event.blNameString,\n      }\n      this.selectedBl = blData;\n      this.updateBlList(blData);\n      setTimeout(() => {\n        this.filterPanel.patchValue({\n          blId: event.blId,\n        });\n      }, 10);\n    }\n    else {\n   \n    }\n  }\n\n  getProperty(key: keyof PmPlannerData, data: PmPlannerData): any {\n    return data[key];\n  }\n\n  onViewByChange(event: any) {\n    this.showCardGrid = false;\n    this.onSearch();\n  }\n\n  onSearch() {\n    this.pmplannerData = [];\n    this.showCardGrid = true;\n    let viewByValue = this.viewByValue;\n    this.keyPmPlannerList = ['request', 'trade', 'tool', 'part', 'technician'];\n    this.selectedDisplayParameters = ['trade', 'tool', 'part', 'technician'];\n    this.showSpinner = true;\n    this.spinner.show();\n    let dateStart = '';\n    let dateEnd = '';\n    if (viewByValue == 'daily') {\n      dateStart = this.datePipe.transform(this.currentDate, \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(this.calculateNextDate(this.currentDate, 3), \"yyyy-MM-dd\")!;\n    } else if (viewByValue == 'weekly') {\n      let datestartvalue = this.getWeekFirstAndLastDateforDate(this.currentDate).firstDate;\n      let dateendvalue = this.calculateNextDate(datestartvalue, 27);\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\")!;\n    } else if (viewByValue == 'monthly') {\n      let datestartvalue = this.getMonthFirstAndLastDateforDate(this.currentDate).firstDate;\n      let dateendvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(this.currentDate, 3)).lastDate\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\")!;\n    }\n    this.pmplannerFilter = {\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      rmId: null,\n      eqId: null,\n      dateRequestedFrom: dateStart,\n      dateRequestedTo: dateEnd,\n      viewByValue: viewByValue\n    }\n    this.planscheduleSrv.getPmPlannerData(this.pmplannerFilter).subscribe((res: any) => {\n      this.pmplannerData = res;\n      if (viewByValue == 'daily') {\n        this.firstListTitle = this.datePipe.transform(this.currentDate, \"dd MMM yyyy\")!;\n        this.secondListTitle = this.datePipe.transform(this.calculateNextDate(this.currentDate, 1), \"dd MMM yyyy\")!;\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextDate(this.currentDate, 2), \"dd MMM yyyy\")!;\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextDate(this.currentDate, 3), \"dd MMM yyyy\")!;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'weekly') {\n        let secondTitleDate = this.calculateNextDate(this.currentDate, 7);\n        let thirdTitleDate = this.calculateNextDate(this.currentDate, 14);\n        let fourthTitleDate = this.calculateNextDate(this.currentDate, 21);\n        this.firstListTitle = `${this.getWeekFirstAndLastDateforDate(this.currentDate).lastDate.getFullYear()}: Week - ${this.getWeekNumber(this.currentDate).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(this.currentDate).firstDate, \"dd MMM yyyy\")})`;\n        this.secondListTitle = `${this.getWeekFirstAndLastDateforDate(secondTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(secondTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(secondTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.thirdListTitle = `${this.getWeekFirstAndLastDateforDate(thirdTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(thirdTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(thirdTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.fourthListTitle = `${this.getWeekFirstAndLastDateforDate(fourthTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(fourthTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(fourthTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'monthly') {\n        this.firstListTitle = this.datePipe.transform(this.currentDate, \"MMMM yyyy\")!;\n        this.secondListTitle = this.datePipe.transform(this.calculateNextMonth(this.currentDate, 1), \"MMMM yyyy\")!;\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextMonth(this.currentDate, 2), \"MMMM yyyy\")!;\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextMonth(this.currentDate, 3), \"MMMM yyyy\")!;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      }\n      this.spinner.hide();\n      this.showSpinner = false;\n    })\n\n  }\n\n  onNext() {\n    this.pmplannerData = [];\n    let viewByValue = this.viewByValue;\n    let dateStart = '';\n    let dateEnd = '';\n    this.showSpinner = true;\n    this.spinner.show();\n    let previousFirstDate: Date;\n    if (viewByValue == 'daily') {\n      previousFirstDate = this.getDateFromDateString(this.firstListTitle);\n      dateStart = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 4), \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 7), \"yyyy-MM-dd\")!;\n    } else if (viewByValue == 'weekly') {\n      previousFirstDate = this.getDateFromWeekString(this.firstListTitle)!;\n      let datestartvalue = this.calculateNextDate(previousFirstDate, 28);\n      let dateendvalue = (this.calculateNextDate(datestartvalue, 27));\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\")!;\n    } else if (viewByValue == 'monthly') {\n      previousFirstDate = this.getDateFromMonthString(this.firstListTitle)!;\n      let datestartvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, 4)).firstDate;\n      let dateendvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, 7)).lastDate\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\")!;\n    }\n    this.pmplannerFilter = {\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      rmId: null,\n      eqId: null,\n      dateRequestedFrom: dateStart,\n      dateRequestedTo: dateEnd,\n      viewByValue: viewByValue\n    }\n    this.planscheduleSrv.getPmPlannerData(this.pmplannerFilter).subscribe((res: any) => {\n      this.pmplannerData = res;\n      if (viewByValue == 'daily') {\n        this.firstListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 4), \"dd MMM yyyy\")!;\n        this.secondListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 5), \"dd MMM yyyy\")!;\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 6), \"dd MMM yyyy\")!;\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, 7), \"dd MMM yyyy\")!;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      }\n      else if (viewByValue == 'weekly') {\n        let firstTitleDate = this.calculateNextDate(previousFirstDate, 28);\n        let secondTitleDate = this.calculateNextDate(previousFirstDate, 35);\n        let thirdTitleDate = this.calculateNextDate(previousFirstDate, 42);\n        let fourthTitleDate = this.calculateNextDate(previousFirstDate, 49);\n        this.firstListTitle = `${this.getWeekFirstAndLastDateforDate(firstTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(firstTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(firstTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.secondListTitle = `${this.getWeekFirstAndLastDateforDate(secondTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(secondTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(secondTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.thirdListTitle = `${this.getWeekFirstAndLastDateforDate(thirdTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(thirdTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(thirdTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.fourthListTitle = `${this.getWeekFirstAndLastDateforDate(fourthTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(fourthTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(fourthTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'monthly') {\n        this.firstListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, 4), \"MMMM yyyy\")!;\n        this.secondListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, 5), \"MMMM yyyy\")!;\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, 6), \"MMMM yyyy\")!;\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, 7), \"MMMM yyyy\")!;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      }\n      this.spinner.hide();\n      this.showSpinner = false;\n    })\n  }\n\n  onPrevious() {\n    this.pmplannerData = [];\n    let viewByValue = this.viewByValue;\n    let dateStart = '';\n    let dateEnd = '';\n    this.showSpinner = true;\n    this.spinner.show();\n    let previousFirstDate: Date;\n    if (viewByValue == 'daily') {\n      previousFirstDate = this.getDateFromDateString(this.firstListTitle);\n      dateStart = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -4), \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -1), \"yyyy-MM-dd\")!;\n    } else if (viewByValue == 'weekly') {\n      previousFirstDate = this.getDateFromWeekString(this.firstListTitle)!;\n      let datestartvalue = this.calculateNextDate(previousFirstDate, -28);\n      let dateendvalue = this.calculateNextDate(previousFirstDate, -1);\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\")!;\n    } else if (viewByValue == 'monthly') {\n      previousFirstDate = this.getDateFromMonthString(this.firstListTitle)!;\n      let datestartvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, -4)).firstDate;\n      let dateendvalue = this.getMonthFirstAndLastDateforDate(this.calculateNextMonth(previousFirstDate, -1)).lastDate\n      dateStart = this.datePipe.transform(datestartvalue, \"yyyy-MM-dd\")!;\n      dateEnd = this.datePipe.transform(dateendvalue, \"yyyy-MM-dd\")!;\n    }\n    this.pmplannerFilter = {\n      blId: this.filterPanel.controls.blId.value,\n      flId: this.filterPanel.controls.flId.value,\n      rmId: null,\n      eqId: null,\n      dateRequestedFrom: dateStart,\n      dateRequestedTo: dateEnd,\n      viewByValue: viewByValue\n    }\n    this.planscheduleSrv.getPmPlannerData(this.pmplannerFilter).subscribe((res: any) => {\n      this.pmplannerData = res;\n      if (viewByValue == 'daily') {\n        this.firstListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -4), \"dd MMM yyyy\")!;\n        this.secondListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -3), \"dd MMM yyyy\")!;\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -2), \"dd MMM yyyy\")!;\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextDate(previousFirstDate, -1), \"dd MMM yyyy\")!;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      }\n      else if (viewByValue == 'weekly') {\n        let firstTitleDate = this.calculateNextDate(previousFirstDate, -28);\n        let secondTitleDate = this.calculateNextDate(previousFirstDate, -21);\n        let thirdTitleDate = this.calculateNextDate(previousFirstDate, -14);\n        let fourthTitleDate = this.calculateNextDate(previousFirstDate, -7);\n        this.firstListTitle = `${this.getWeekFirstAndLastDateforDate(firstTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(firstTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(firstTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.secondListTitle = `${this.getWeekFirstAndLastDateforDate(secondTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(secondTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(secondTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.thirdListTitle = `${this.getWeekFirstAndLastDateforDate(thirdTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(thirdTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(thirdTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.fourthListTitle = `${this.getWeekFirstAndLastDateforDate(fourthTitleDate).lastDate.getFullYear()}: Week - ${(this.getWeekNumber(fourthTitleDate)).toString()} (${this.datePipe.transform(this.getWeekFirstAndLastDateforDate(fourthTitleDate).firstDate, \"dd MMM yyyy\")})`;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      } else if (viewByValue == 'monthly') {\n        this.firstListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, -4), \"MMMM yyyy\")!;\n        this.secondListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, -3), \"MMMM yyyy\")!;\n        this.thirdListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, -2), \"MMMM yyyy\")!;\n        this.fourthListTitle = this.datePipe.transform(this.calculateNextMonth(previousFirstDate, -1), \"MMMM yyyy\")!;\n        this.titleStringList = [this.firstListTitle, this.secondListTitle, this.thirdListTitle, this.fourthListTitle];\n      }\n      this.spinner.hide();\n      this.showSpinner = false;\n    })\n  }\n\n  loadForPmPlannerDataCurrentSelection() {\n    this.showCardGrid = false;\n    this.cdr.detectChanges();\n    this.showSpinner = true;\n    this.spinner.show();\n    this.planscheduleSrv.getPmPlannerData(this.pmplannerFilter).subscribe((res: any) => {\n      this.pmplannerData = res;\n      this.showCardGrid = true;\n      this.cdr.detectChanges();\n      this.showOtherPopUpGrid = false;\n      this.cdr.detectChanges();\n      this.popUpTableData = [];\n      this.planscheduleSrv.getPmPlannerRequestDetails(this.pmplannerRoomFilter).subscribe((res: any) => {\n        setTimeout(() => {\n          this.popUpTableData = res;\n          this.showOtherPopUpGrid = true;\n          this.cdr.detectChanges();\n          this.spinner.hide();\n          this.showSpinner = false;\n        }, 1000);\n\n      })\n\n    });\n  }\n\n  onClear() {\n    this.showCardGrid = false;\n    this.filterPanel.patchValue({\n      dateFrom: this.monthStart,\n      dateTo: this.monthEnd,\n      blId: null,\n      flId: null,\n    });\n    this.titleStringList = [];\n    this.viewByValue = 'daily';\n    this.pmplannerData = [];\n    this.showSpinner = false;\n    this.selectedDisplayParameters = [];\n    this.selectedRowCardTableName = '';\n    this.selectedRowCard = {};\n    this.showRequestPopUpGrid = false;\n    this.showOtherPopUpGrid = false;\n    this.popUpTableData = [];\n    this.myRequestsData = [];\n    this.pmplannerFilter = {};\n    this.pmplannerRoomFilter = {};\n    this.selectedDateTitle = '';\n    this.selectedBl = {};\n    this.selectedFl = {};\n  }\n\n  checkboxSelected(event: any) {\n    this.keyPmPlannerList = [];\n    this.keyPmPlannerList.unshift('request');\n    event.checked.forEach((key: string) => {\n      this.keyPmPlannerList.push(key);\n    })\n  }\n\n  onClickRowCard(key: any, item: any, title: string) {\n    this.showRequestPopUpGrid = false;\n    this.showOtherPopUpGrid = false;\n    this.popUpTableData = [];\n    this.myRequestsData = [];\n    this.selectedRowCardTableName = `${this.getDisplayKey(key)} Details`;\n    this.selectedRowCard = {key:key,rowDetails:item};\n    let dateStart: Date;\n    let dateEnd: Date;\n    this.selectedDateTitle = title;\n    if (this.viewByValue == 'daily') {\n      dateStart = this.getDateFromDateString(title);\n      dateEnd = new Date(dateStart);\n    } else if (this.viewByValue == 'weekly') {\n      let dateResult = this.getWeekFirstAndLastDateforDate(this.getDateFromWeekString(title));\n      dateStart = dateResult.firstDate;\n      dateEnd = dateResult.lastDate;\n    } else if (this.viewByValue == 'monthly') {\n      let dateResult = this.getMonthFirstAndLastDateforDate(this.getDateFromMonthString(title));\n      dateStart = dateResult.firstDate;\n      dateEnd = dateResult.lastDate;\n    } else {\n      dateStart = new Date();\n      dateEnd = new Date();\n    }\n    if (key != 'request') {\n      let tableName = '';\n      if (key == 'trade') {\n        tableName = 'request_trade';\n      } else if (key == 'part') {\n        tableName = 'request_parts';\n      } else if (key == 'tool') {\n        tableName = 'request_tools';\n      } else if (key == 'technician') {\n        tableName = 'request_technician';\n      }\n      this.pmplannerRoomFilter = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        fromDate: this.datePipe.transform(dateStart, \"yyyy-MM-dd\"),\n        toDate: this.datePipe.transform(dateEnd, \"yyyy-MM-dd\"),\n        tableName: tableName,\n        fieldName: item.id\n      }\n      this.planscheduleSrv.getPmPlannerRequestDetails(this.pmplannerRoomFilter).subscribe((res: any) => {\n        this.popUpTableData = res;\n        this.showOtherPopUpGrid = true;\n      })\n    } else {\n      let filterData = {\n        blId: this.filterPanel.controls.blId.value,\n        flId: this.filterPanel.controls.flId.value,\n        dateRequestedFrom: this.datePipe.transform(dateStart, \"yyyy-MM-dd\"),\n        dateRequestedTo: this.datePipe.transform(dateEnd, \"yyyy-MM-dd\"),\n        showRequestType: \"pmPlanner\"\n      }\n      this.wrServ.getAllWrByFilter(filterData).subscribe((res: any) => {\n        this.myRequestsData = res;\n        this.showRequestPopUpGrid = true;\n      })\n    }\n  }\n\n  calculateNextDate(currentDate: Date, daysToAdd: number): Date {\n    let nextDate = new Date(currentDate);\n    nextDate.setDate(nextDate.getDate() + daysToAdd);\n    return nextDate;\n  }\n\n  calculateNextMonth(currentDate: Date, monthsToAdd: number): Date {\n    let date = new Date(currentDate);\n    date.setMonth(date.getMonth() + monthsToAdd);\n    return date;\n  }\n\n  getWeekNumber(date: Date): number {\n    let currentDate: any = new Date(date);\n    currentDate.setHours(0, 0, 0, 0);\n    currentDate.setDate(currentDate.getDate() + 4 - (currentDate.getDay() || 7));\n    let yearStart: any = new Date(currentDate.getFullYear(), 0, 1);\n    let weekNumber = Math.ceil(((currentDate - yearStart) / 86400000 + 1) / 7);\n    return weekNumber;\n  }\n\n  getWeekFirstAndLastDateforDate(date: Date) {\n    const result = {\n      firstDate: new Date(date),\n      lastDate: new Date(date),\n    };\n    result.firstDate.setDate(date.getDate() - date.getDay() + (date.getDay() ==0 ? -6 : 1));\n    result.firstDate.setHours(0, 0, 0, 0);\n    result.lastDate.setDate(date.getDate() - date.getDay() +  (date.getDay() == 0 ? 0 : 7));\n    result.lastDate.setHours(23, 59, 59, 999);\n    return result;\n  }\n\n  getMonthFirstAndLastDateforDate(date: Date) {\n    const result = {\n      firstDate: new Date(date),\n      lastDate: new Date(date),\n    };\n    result.firstDate.setDate(1);\n    result.firstDate.setHours(0, 0, 0, 0);\n    result.lastDate.setMonth(date.getMonth() + 1, 0);\n    result.lastDate.setHours(23, 59, 59, 999);\n    return result;\n  }\n\n  getMonthNumber(month: string): number {\n    const months: string[] = [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    return months.indexOf(month);\n  }\n\n  getDateFromDateString(date: string) {\n    const dateString = date;\n    const dateParts = dateString.split(' ');\n    const year = parseInt(dateParts[2], 10);\n    const month = new Date(Date.parse(dateParts[1] + ' 1, 2023')).getMonth();\n    const day = parseInt(dateParts[0], 10);\n    const dateObject = new Date(year, month, day);\n    dateObject.setHours(0, 0, 0, 0);\n    return dateObject;\n  }\n\n  getDateFromWeekString(weekString: string) {\n    const parts = weekString.split(':');\n    const yearString = parts[0].trim();\n    const weekPart = parts[1].trim();\n    const year = parseInt(yearString, 10);\n    const weekMatch = weekPart.match(/\\d+/);\n    const weekNumber = weekMatch ? parseInt(weekMatch[0], 10) : 1;\n    const startOfWeekDay = 1;\n    const date = new Date(year, 0, 1);\n    const daysToMonday = (7 - (date.getDay() - startOfWeekDay)) % 7;\n    date.setDate(date.getDate() + daysToMonday);\n    const daysToAdd = (weekNumber - 1) * 7;\n    date.setDate(date.getDate() + daysToAdd);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  getDateFromMonthString(monthString: string) {\n    const dateParts = monthString.split(' ');\n    const month = dateParts[0];\n    const year = parseInt(dateParts[1], 10);\n    const dateObject = new Date(year, this.getMonthNumber(month), 1);\n    dateObject.setHours(0, 0, 0, 0);\n    return dateObject;\n  }\n\n  getDisplayKey(key: string) {\n    let displayKey = \"\";\n    if (key == \"request\") {\n      displayKey = \"Request\";\n    } else if (key == \"trade\") {\n      displayKey = \"Trade\";\n    } else if (key == \"tool\") {\n      displayKey = \"Tool\";\n    } else if (key == \"part\") {\n      displayKey = \"Part\";\n    } else if (key == \"technician\") {\n      displayKey = \"Technician\";\n    }\n    return displayKey;\n  }\n\n  reloadComponent(reload: boolean) {\n    if (reload) {\n      this.loadForPmPlannerDataCurrentSelection()\n    }\n  }\n\n  scrollToEndBl() {\n    this.offsetBl = this.limitBl;\n    this.limitBl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitBl;\n    this.filterCriteria.offset = this.offsetBl;\n    this.blServ.getALLBuildingByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumBL = res;\n      this.updateBlList(this.selectedBl);\n    })\n  }\n\n  scrollToEndFl() {\n    this.offsetFl = this.limitFl;\n    this.limitFl += this.scrollLimit;\n    this.filterCriteria.limit = this.limitFl;\n    this.filterCriteria.offset = this.offsetFl;\n    this.blServ.getALLFloorByScroll(this.filterCriteria).subscribe((res: any) => {\n      this.enumFL = res;\n      this.updateFlList(this.selectedFl);\n    })\n  }\n\n  searchBl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"blName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndBl();\n  }\n\n  searchFl(event: any) {\n    this.filterCriteria = {};\n    this.filterCriteria = { fieldName: \"flName\", value: event.term, matchMode: \"contains\" };\n    this.scrollToEndFl();\n  }\n\n  updateBlList(blData: any) {\n    if (blData.blId) {\n      this.enumBL = this.enumBL.filter(t => t.blId !== blData.blId);\n      this.enumBL = this.enumBL.filter(t => t.blId !== null);\n      this.enumBL.unshift(blData);\n    }\n    this.enumBL.unshift(new BuildingFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  updateFlList(flData: any) {\n    if (flData.flId) {\n      this.enumFL = this.enumFL.filter(t => t.flId !== flData.flId);\n      this.enumFL = this.enumFL.filter(t => t.flId !== null);\n      this.enumFL.unshift(flData);\n    }\n    this.enumFL.unshift(new FloorFilterInputDTO(null, 'Make a selection', null));\n  }\n\n  onOpenBl() {\n    this.limitBl = 0;\n    this.offsetBl = 0;\n    this.filterCriteria = {\n      fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n    };\n    this.scrollToEndBl();\n  }\n\n  onOpenFl() {\n    this.limitFl = 0;\n    this.offsetFl = 0;\n    if (this.selectedBl.blId) {\n      this.filterCriteria = { fieldName: \"bl.blId\", value: this.selectedBl.blId, matchMode: \"equals\", limit: 0, offset: 0 }\n    } else {\n      this.filterCriteria = {\n        fieldName: null, value: null, matchMode: \"contains\", limit: 0, offset: 0\n      };\n    }\n    this.scrollToEndFl();\n  }\n\n}\n","<div class=\"card filter-container\" >\n  <form [formGroup]=\"filterPanel\">\n    <table width=\"100%\">\n      <tr>\n        <td style=\"width:20%\">\n          <div class=\"input-label-custom \">\n            <label class='form-field-lable '>Building </label>\n            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumBL\" formControlName=\"blId\" [searchable]=\"true\"\n              bindLabel=\"blNameString\" bindValue=\"blId\" (change)=\"onSelectBlCode($event)\" placeholder=\"Make a selection\"\n              class=\"ng-select-dropdown\"  (scrollToEnd)=\"scrollToEndBl()\" (search)=\"searchBl($event)\"(open)=\"onOpenBl()\">\n            </ng-select>\n          </div>\n        </td>\n        <td style=\"width:20%\">\n          <div class=\"input-label-custom \">\n            <label class='form-field-lable '>Floor</label>\n            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumFL\" formControlName=\"flId\" [searchable]=\"true\"\n              bindLabel=\"flNameString\" bindValue=\"flId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown\"\n              (change)=\"onSelectFlCode($event)\" (scrollToEnd)=\"scrollToEndFl()\" (search)=\"searchFl($event)\"(open)=\"onOpenFl()\">\n            </ng-select>\n          </div>\n        </td>\n        <td style=\"width:40%\"></td>\n        <td style=\"width: 20%\">\n          <div style=\"margin-top:16px;margin-right:10px;display: flex;justify-content: flex-end;\">\n            <button (click)=\"onSearch()\" pButton pRipple label=\"Search\" style=\"width: 60px;  margin-left: 5px;\"\n              class=\"p-button-primary p-button-sm pull right\" [disabled]=\"!filterPanel.valid\"></button>\n            <button (click)=\"onClear()\" pButton pRipple label=\"Clear\" style=\"width: 60px;  margin-left: 5px;\"\n              class=\"p-button-primary p-button-sm pull right\"></button>\n          </div>\n        </td>\n      </tr>\n    </table>\n  </form>\n</div>\n<div class=\"card pmplanner-container\" *ngIf=\"showCardGrid\" >\n  <div style=\"margin:0px 5px 0px 5px;\">\n    <div style=\"height:50px;display: flex;align-items: center;justify-content: space-between;\">\n      <div style=\"margin-left:5px;\">\n        <p-selectButton [options]=\"viewByData\" [(ngModel)]=\"viewByValue\" [multiple]=\"false\" optionLabel=\"label\"\n          optionValue=\"value\" (onChange)=\"onViewByChange($event)\"></p-selectButton>\n      </div>\n      <div style=\"margin-right:5px;\">\n        <div style=\"display: flex;\">\n          <div style=\"margin-right:10px;\">\n            <p-checkbox name=\"group1\" value=\"trade\" [(ngModel)]=\"selectedDisplayParameters\" inputId=\"trade\"\n              class=\"select-box\" (onChange)=\"checkboxSelected($event)\"></p-checkbox>\n            <label class=\"select-label\" for=\"trade\">Trade</label>\n          </div>\n          <div style=\"margin-right:10px;\">\n            <p-checkbox name=\"group1\" value=\"tool\" [(ngModel)]=\"selectedDisplayParameters\" inputId=\"tool\"\n              class=\"select-box\" (onChange)=\"checkboxSelected($event)\"></p-checkbox>\n            <label class=\"select-label\" for=\"tool\">Tool</label>\n          </div>\n          <div style=\"margin-right:10px;\">\n            <p-checkbox name=\"group1\" value=\"part\" [(ngModel)]=\"selectedDisplayParameters\" inputId=\"part\"\n              class=\"select-box\" (onChange)=\"checkboxSelected($event)\"></p-checkbox>\n            <label class=\"select-label\" for=\"part\">Part</label>\n          </div>\n          <div>\n            <p-checkbox name=\"group1\" value=\"technician\" [(ngModel)]=\"selectedDisplayParameters\" inputId=\"technician\"\n              class=\"select-box\" (onChange)=\"checkboxSelected($event)\"></p-checkbox>\n            <label class=\"select-label\" for=\"technician\">Technician</label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div style=\"display: flex;flex-direction: row; justify-content:space-between;width:100%;height:74vh;\" >\n      <div>\n        <button (click)=\"onPrevious()\" pButton pRipple icon=\"pi pi-chevron-left\" style=\"width: 30px;\"\n          class=\"p-button-primary p-button-sm \"></button>\n      </div>\n      <!-- <div class=\"plan-collection-container\" *ngFor=\"let plan of pmplannerData; let i=index ;\">\n        <div class=\"pmplanner-date-header-container\">\n          <p class=\"card-text\">{{titleStringList[i]}}</p>\n        </div>\n        <div class=\"card example-container\">\n          <div *ngFor=\"let key of keyPmPlannerList\">\n            <div *ngIf=\"key == 'request'; else otherItems\">\n              <div class=\"card hover-pointer zoom-on-hover request-card\" >\n                    <span class=\"request-content-title\" (click)=\"onClickRowCard(key,null,titleStringList[i])\"> Total\n                      Requests: {{ getProperty(key,plan).count }}</span>\n              </div>\n            </div>\n            <ng-template #otherItems>\n              <div *ngIf=\"getProperty(key,plan).length>0\">\n                <p-panel [header]=\"getDisplayKey(key)\" [toggleable]=\"true\">\n                  <div *ngFor=\"let subItem of getProperty(key,plan)\" class=\"card hover-pointer zoom-on-hover internal-card\"\n                  (click)=\"onClickRowCard(key,subItem,titleStringList[i])\" [ngStyle]=\"{\n                    'background-color': subItem.availableCount > subItem.count ? '#99ff99' : subItem.count > subItem.availableCount ? '#ff9999' : ''\n                  }\">\n                    <span class=\"card-content-title\"> {{subItem.name}}</span>\n                    <span class=\"card-content-title\"> {{ subItem.count }}\n                      {{ key === 'part' ? subItem.units : 'hours' }}</span>\n                  </div>\n                </p-panel>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </div> -->\n      <div class=\"pm-planner-details-conatiner\">\n        <div class=\"plan-collection-container\" *ngFor=\"let plan of pmplannerData; let i=index ;\">\n          <div class=\"pmplanner-date-header-container\">\n            <p class=\"card-text\">{{titleStringList[i]}}</p>\n          </div>\n          <div class=\"card example-container\">\n            <div *ngFor=\"let key of keyPmPlannerList\">\n              <div *ngIf=\"key == 'request'; else otherItems\">\n                <div class=\"card hover-pointer zoom-on-hover request-card\" >\n                      <span class=\"request-content-title\" (click)=\"onClickRowCard(key,null,titleStringList[i])\"> Total\n                        Requests: {{ getProperty(key,plan).count }}</span>\n                </div>\n              </div>\n              <ng-template #otherItems>\n                <div *ngIf=\"getProperty(key,plan).length>0\">\n                  <p-panel [header]=\"getDisplayKey(key)\" [toggleable]=\"true\">\n                    <div *ngFor=\"let subItem of getProperty(key,plan)\" class=\"card hover-pointer zoom-on-hover internal-card\"\n                    (click)=\"onClickRowCard(key,subItem,titleStringList[i])\" [ngStyle]=\"{\n                      'background-color': subItem.availableCount > subItem.count ? '#99ff99' : subItem.count > subItem.availableCount ? '#ff9999' : ''\n                    }\">\n                      <span class=\"card-content-title\"> {{subItem.name}}</span>\n                      <span class=\"card-content-title\"> {{ subItem.count }}\n                        {{ key === 'part' ? subItem.units : 'hours' }}</span>\n                    </div>\n                  </p-panel>\n                </div>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <button (click)=\"onNext()\" pButton pRipple icon=\"pi pi-chevron-right\" style=\"width: 30px;\"\n          class=\"p-button-primary p-button-sm \"></button>\n      </div>\n    </div>\n  </div>\n</div>\n<p-dialog [(visible)]=\"showOtherPopUpGrid\" [modal]=\"true\" [style]=\"{width: '66vw'}\" [maximizable]=\"true\"\n  [draggable]=\"false\" [resizable]=\"false\" styleClass=\"dark-panel\" [header]=\"selectedRowCardTableName\">\n  <ng-template pTemplate=\"body\">\n    <app-pm-planner-req-details-table [data]=\"popUpTableData\" [rowCardDetails]=\"selectedRowCard\" (reloadPmPlanner)=\"reloadComponent($event)\"\n    ></app-pm-planner-req-details-table>\n  </ng-template>\n</p-dialog>\n<p-dialog [(visible)]=\"showRequestPopUpGrid\" [modal]=\"true\" [style]=\"{width: '66vw'}\" [maximizable]=\"true\"\n  [draggable]=\"false\" [resizable]=\"false\" styleClass=\"dark-panel\" [header]=\"selectedRowCardTableName\">\n  <ng-template pTemplate=\"body\">\n    <app-add-table [data]=\"myRequestsData\" isEscalatedData=false></app-add-table>\n  </ng-template>\n</p-dialog>\n<ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#879cc9\" class=\"spinner-color\" type=\"ball-spin-clockwise\"\n  *ngIf=\"showSpinner\" [fullScreen]=\"true\">\n  <p style=\"color: white\"> Loading... </p>\n</ngx-spinner>"],"mappings":"AAEA,SAASA,cAAc,QAAQ,aAAa;AAO5C,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,sBAAsB,QAAQ,0DAA0D;AACjG,SAASC,mBAAmB,QAAQ,uDAAuD;;;;;;;;;;;;;;;;;;;;;ICiG7EC,EAAA,CAAAC,cAAA,UAA+C;IAEHD,EAAA,CAAAE,UAAA,mBAAAC,4EAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,IAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA,GAAAC,SAAA;MAAA,MAAAC,IAAA,GAAAT,EAAA,CAAAO,aAAA,GAAAG,KAAA;MAAA,MAAAC,OAAA,GAAAX,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAY,WAAA,CAAAD,OAAA,CAAAE,cAAA,CAAAP,MAAA,EAAmB,IAAI,EAAAK,OAAA,CAAAG,eAAA,CAAAL,IAAA,EAAoB;IAAA,EAAC;IAAET,EAAA,CAAAe,MAAA,GAC9C;IAAAf,EAAA,CAAAgB,YAAA,EAAO;;;;;;IADuChB,EAAA,CAAAiB,SAAA,GAC9C;IAD8CjB,EAAA,CAAAkB,kBAAA,sBAAAC,MAAA,CAAAC,WAAA,CAAAd,MAAA,EAAAe,OAAA,EAAAC,KAAA,KAC9C;;;;;;;;;;;IAM/CtB,EAAA,CAAAC,cAAA,cAGG;IAFHD,EAAA,CAAAE,UAAA,mBAAAqB,+FAAA;MAAA,MAAAC,WAAA,GAAAxB,EAAA,CAAAI,aAAA,CAAAqB,IAAA;MAAA,MAAAC,WAAA,GAAAF,WAAA,CAAAhB,SAAA;MAAA,MAAAF,MAAA,GAAAN,EAAA,CAAAO,aAAA,IAAAC,SAAA;MAAA,MAAAC,IAAA,GAAAT,EAAA,CAAAO,aAAA,GAAAG,KAAA;MAAA,MAAAiB,OAAA,GAAA3B,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAY,WAAA,CAAAe,OAAA,CAAAd,cAAA,CAAAP,MAAA,EAAAoB,WAAA,EAAAC,OAAA,CAAAb,eAAA,CAAAL,IAAA,EAA8C;IAAA,EAAC;IAGtDT,EAAA,CAAAC,cAAA,eAAiC;IAACD,EAAA,CAAAe,MAAA,GAAgB;IAAAf,EAAA,CAAAgB,YAAA,EAAO;IACzDhB,EAAA,CAAAC,cAAA,eAAiC;IAACD,EAAA,CAAAe,MAAA,GACc;IAAAf,EAAA,CAAAgB,YAAA,EAAO;;;;;IALAhB,EAAA,CAAA4B,UAAA,YAAA5B,EAAA,CAAA6B,eAAA,IAAAC,GAAA,EAAAJ,WAAA,CAAAK,cAAA,GAAAL,WAAA,CAAAJ,KAAA,eAAAI,WAAA,CAAAJ,KAAA,GAAAI,WAAA,CAAAK,cAAA,mBAEvD;IACkC/B,EAAA,CAAAiB,SAAA,GAAgB;IAAhBjB,EAAA,CAAAkB,kBAAA,MAAAQ,WAAA,CAAAM,IAAA,KAAgB;IAChBhC,EAAA,CAAAiB,SAAA,GACc;IADdjB,EAAA,CAAAiC,kBAAA,MAAAP,WAAA,CAAAJ,KAAA,OAAAhB,MAAA,cAAAoB,WAAA,CAAAQ,KAAA,eACc;;;;;IARtDlC,EAAA,CAAAC,cAAA,UAA4C;IAExCD,EAAA,CAAAmC,UAAA,IAAAC,yEAAA,kBAOM;IACRpC,EAAA,CAAAgB,YAAA,EAAU;;;;;;IATDhB,EAAA,CAAAiB,SAAA,GAA6B;IAA7BjB,EAAA,CAAA4B,UAAA,WAAAS,OAAA,CAAAC,aAAA,CAAAhC,MAAA,EAA6B;IACXN,EAAA,CAAAiB,SAAA,GAAwB;IAAxBjB,EAAA,CAAA4B,UAAA,YAAAS,OAAA,CAAAjB,WAAA,CAAAd,MAAA,EAAAe,OAAA,EAAwB;;;;;IAFrDrB,EAAA,CAAAmC,UAAA,IAAAI,mEAAA,kBAWM;;;;;;IAXAvC,EAAA,CAAA4B,UAAA,SAAAY,OAAA,CAAApB,WAAA,CAAAd,MAAA,EAAAe,OAAA,EAAAoB,MAAA,KAAoC;;;;;IAR9CzC,EAAA,CAAAC,cAAA,UAA0C;IACxCD,EAAA,CAAAmC,UAAA,IAAAO,qDAAA,kBAKM;IACN1C,EAAA,CAAAmC,UAAA,IAAAQ,6DAAA,iCAAA3C,EAAA,CAAA4C,sBAAA,CAac;IAChB5C,EAAA,CAAAgB,YAAA,EAAM;;;;;IApBEhB,EAAA,CAAAiB,SAAA,GAAwB;IAAxBjB,EAAA,CAAA4B,UAAA,SAAAtB,MAAA,cAAwB,aAAAuC,IAAA;;;;;IANpC7C,EAAA,CAAAC,cAAA,cAAyF;IAEhED,EAAA,CAAAe,MAAA,GAAsB;IAAAf,EAAA,CAAAgB,YAAA,EAAI;IAEjDhB,EAAA,CAAAC,cAAA,cAAoC;IAClCD,EAAA,CAAAmC,UAAA,IAAAW,+CAAA,kBAqBM;IACR9C,EAAA,CAAAgB,YAAA,EAAM;;;;;IAzBiBhB,EAAA,CAAAiB,SAAA,GAAsB;IAAtBjB,EAAA,CAAA+C,iBAAA,CAAAC,MAAA,CAAAlC,eAAA,CAAAL,IAAA,EAAsB;IAGtBT,EAAA,CAAAiB,SAAA,GAAmB;IAAnBjB,EAAA,CAAA4B,UAAA,YAAAoB,MAAA,CAAAC,gBAAA,CAAmB;;;;;;IAxEpDjD,EAAA,CAAAC,cAAA,cAA4D;IAIbD,EAAA,CAAAE,UAAA,2BAAAgD,2EAAAC,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAC,OAAA,GAAArD,EAAA,CAAAO,aAAA;MAAA,OAAAP,EAAA,CAAAY,WAAA,CAAAyC,OAAA,CAAAC,WAAA,GAAAH,MAAA;IAAA,EAAyB,sBAAAI,sEAAAJ,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAI,OAAA,GAAAxD,EAAA,CAAAO,aAAA;MAAA,OAC9BP,EAAA,CAAAY,WAAA,CAAA4C,OAAA,CAAAC,cAAA,CAAAN,MAAA,CAAsB;IAAA,EADQ;IACNnD,EAAA,CAAAgB,YAAA,EAAiB;IAE7EhB,EAAA,CAAAC,cAAA,cAA+B;IAGeD,EAAA,CAAAE,UAAA,2BAAAwD,uEAAAP,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAO,OAAA,GAAA3D,EAAA,CAAAO,aAAA;MAAA,OAAAP,EAAA,CAAAY,WAAA,CAAA+C,OAAA,CAAAC,yBAAA,GAAAT,MAAA;IAAA,EAAuC,sBAAAU,kEAAAV,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAU,OAAA,GAAA9D,EAAA,CAAAO,aAAA;MAAA,OAC9CP,EAAA,CAAAY,WAAA,CAAAkD,OAAA,CAAAC,gBAAA,CAAAZ,MAAA,CAAwB;IAAA,EADsB;IACpBnD,EAAA,CAAAgB,YAAA,EAAa;IACxEhB,EAAA,CAAAC,cAAA,gBAAwC;IAAAD,EAAA,CAAAe,MAAA,aAAK;IAAAf,EAAA,CAAAgB,YAAA,EAAQ;IAEvDhB,EAAA,CAAAC,cAAA,eAAgC;IACSD,EAAA,CAAAE,UAAA,2BAAA8D,wEAAAb,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAa,OAAA,GAAAjE,EAAA,CAAAO,aAAA;MAAA,OAAAP,EAAA,CAAAY,WAAA,CAAAqD,OAAA,CAAAL,yBAAA,GAAAT,MAAA;IAAA,EAAuC,sBAAAe,mEAAAf,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAe,OAAA,GAAAnE,EAAA,CAAAO,aAAA;MAAA,OAC7CP,EAAA,CAAAY,WAAA,CAAAuD,OAAA,CAAAJ,gBAAA,CAAAZ,MAAA,CAAwB;IAAA,EADqB;IACnBnD,EAAA,CAAAgB,YAAA,EAAa;IACxEhB,EAAA,CAAAC,cAAA,iBAAuC;IAAAD,EAAA,CAAAe,MAAA,YAAI;IAAAf,EAAA,CAAAgB,YAAA,EAAQ;IAErDhB,EAAA,CAAAC,cAAA,eAAgC;IACSD,EAAA,CAAAE,UAAA,2BAAAkE,wEAAAjB,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAiB,OAAA,GAAArE,EAAA,CAAAO,aAAA;MAAA,OAAAP,EAAA,CAAAY,WAAA,CAAAyD,OAAA,CAAAT,yBAAA,GAAAT,MAAA;IAAA,EAAuC,sBAAAmB,mEAAAnB,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAmB,OAAA,GAAAvE,EAAA,CAAAO,aAAA;MAAA,OAC7CP,EAAA,CAAAY,WAAA,CAAA2D,OAAA,CAAAR,gBAAA,CAAAZ,MAAA,CAAwB;IAAA,EADqB;IACnBnD,EAAA,CAAAgB,YAAA,EAAa;IACxEhB,EAAA,CAAAC,cAAA,iBAAuC;IAAAD,EAAA,CAAAe,MAAA,YAAI;IAAAf,EAAA,CAAAgB,YAAA,EAAQ;IAErDhB,EAAA,CAAAC,cAAA,WAAK;IAC0CD,EAAA,CAAAE,UAAA,2BAAAsE,wEAAArB,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAqB,OAAA,GAAAzE,EAAA,CAAAO,aAAA;MAAA,OAAAP,EAAA,CAAAY,WAAA,CAAA6D,OAAA,CAAAb,yBAAA,GAAAT,MAAA;IAAA,EAAuC,sBAAAuB,mEAAAvB,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAuB,OAAA,GAAA3E,EAAA,CAAAO,aAAA;MAAA,OACnDP,EAAA,CAAAY,WAAA,CAAA+D,OAAA,CAAAZ,gBAAA,CAAAZ,MAAA,CAAwB;IAAA,EAD2B;IACzBnD,EAAA,CAAAgB,YAAA,EAAa;IACxEhB,EAAA,CAAAC,cAAA,iBAA6C;IAAAD,EAAA,CAAAe,MAAA,kBAAU;IAAAf,EAAA,CAAAgB,YAAA,EAAQ;IAKvEhB,EAAA,CAAAC,cAAA,eAAuG;IAE3FD,EAAA,CAAAE,UAAA,mBAAA0E,4DAAA;MAAA5E,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAAyB,OAAA,GAAA7E,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAY,WAAA,CAAAiE,OAAA,CAAAC,UAAA,EAAY;IAAA,EAAC;IACU9E,EAAA,CAAAgB,YAAA,EAAS;IA+BnDhB,EAAA,CAAAC,cAAA,eAA0C;IACxCD,EAAA,CAAAmC,UAAA,KAAA4C,yCAAA,kBA4BM;IACR/E,EAAA,CAAAgB,YAAA,EAAM;IACNhB,EAAA,CAAAC,cAAA,WAAK;IACKD,EAAA,CAAAE,UAAA,mBAAA8E,4DAAA;MAAAhF,EAAA,CAAAI,aAAA,CAAAgD,IAAA;MAAA,MAAA6B,OAAA,GAAAjF,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAY,WAAA,CAAAqE,OAAA,CAAAC,MAAA,EAAQ;IAAA,EAAC;IACclF,EAAA,CAAAgB,YAAA,EAAS;;;;IA/FjChB,EAAA,CAAAiB,SAAA,GAAsB;IAAtBjB,EAAA,CAAA4B,UAAA,YAAAuD,MAAA,CAAAC,UAAA,CAAsB,YAAAD,MAAA,CAAA7B,WAAA;IAMMtD,EAAA,CAAAiB,SAAA,GAAuC;IAAvCjB,EAAA,CAAA4B,UAAA,YAAAuD,MAAA,CAAAvB,yBAAA,CAAuC;IAKxC5D,EAAA,CAAAiB,SAAA,GAAuC;IAAvCjB,EAAA,CAAA4B,UAAA,YAAAuD,MAAA,CAAAvB,yBAAA,CAAuC;IAKvC5D,EAAA,CAAAiB,SAAA,GAAuC;IAAvCjB,EAAA,CAAA4B,UAAA,YAAAuD,MAAA,CAAAvB,yBAAA,CAAuC;IAKjC5D,EAAA,CAAAiB,SAAA,GAAuC;IAAvCjB,EAAA,CAAA4B,UAAA,YAAAuD,MAAA,CAAAvB,yBAAA,CAAuC;IA0ChC5D,EAAA,CAAAiB,SAAA,GAAkB;IAAlBjB,EAAA,CAAA4B,UAAA,YAAAuD,MAAA,CAAAE,aAAA,CAAkB;;;;;;IAwC9ErF,EAAA,CAAAC,cAAA,2CACC;IAD4FD,EAAA,CAAAE,UAAA,6BAAAoF,uGAAAnC,MAAA;MAAAnD,EAAA,CAAAI,aAAA,CAAAmF,IAAA;MAAA,MAAAC,OAAA,GAAAxF,EAAA,CAAAO,aAAA;MAAA,OAAmBP,EAAA,CAAAY,WAAA,CAAA4E,OAAA,CAAAC,eAAA,CAAAtC,MAAA,CAAuB;IAAA,EAAC;IACvInD,EAAA,CAAAgB,YAAA,EAAmC;;;;IADFhB,EAAA,CAAA4B,UAAA,SAAA8D,MAAA,CAAAC,cAAA,CAAuB,mBAAAD,MAAA,CAAAE,eAAA;;;;;IAOzD5F,EAAA,CAAA6F,SAAA,wBAA6E;;;;IAA9D7F,EAAA,CAAA4B,UAAA,SAAAkE,MAAA,CAAAC,cAAA,CAAuB;;;;;IAG1C/F,EAAA,CAAAC,cAAA,sBAC0C;IACfD,EAAA,CAAAe,MAAA,mBAAW;IAAAf,EAAA,CAAAgB,YAAA,EAAI;;;IADpBhB,EAAA,CAAA4B,UAAA,oBAAmB;;;;;;;;AD9HzC,OAAM,MAAOoE,kBAAkB;EAyD7BC,YACUC,WAA+B,EAC/BC,OAAoB,EACpBC,QAAkB,EAClBC,MAAuB,EACvBC,eAAoC,EACpCC,MAA6B,EAC7BC,OAA0B,EAC1BC,GAAsB;IAPtB,KAAAP,WAAW,GAAXA,WAAW;IACX,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,GAAG,GAAHA,GAAG;IA/Db,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAC,YAAY,GAAY,KAAK;IAC7B,KAAAzB,UAAU,GAAU,CAClB;MACE,IAAI,EAAE,CAAC;MACP,OAAO,EAAE,OAAO;MAChB,OAAO,EAAE;KACV,EACD;MACE,IAAI,EAAE,CAAC;MACP,OAAO,EAAE,QAAQ;MACjB,OAAO,EAAE;KACV,EACD;MACE,IAAI,EAAE,CAAC;MACP,OAAO,EAAE,SAAS;MAClB,OAAO,EAAE;KACV,CACF;IACD,KAAA0B,cAAc,GAAW,WAAW;IACpC,KAAAC,eAAe,GAAW,YAAY;IACtC,KAAAC,cAAc,GAAW,WAAW;IACpC,KAAAC,eAAe,GAAW,YAAY;IACtC,KAAAnG,eAAe,GAAa,EAAE;IAC9B,KAAAoG,WAAW,GAAG,IAAIC,IAAI,EAAE;IACxB,KAAA9B,aAAa,GAAoB,EAAE;IACnC,KAAApC,gBAAgB,GAAa,EAAE;IAC/B,KAAAmE,UAAU,GAAG,IAAID,IAAI,CAAE,IAAIA,IAAI,EAAE,CAAEE,WAAW,EAAE,EAAG,IAAIF,IAAI,EAAE,CAAEG,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC7E,KAAAC,QAAQ,GAAG,IAAIJ,IAAI,CAAE,IAAIA,IAAI,EAAE,CAAEE,WAAW,EAAE,EAAG,IAAIF,IAAI,EAAE,CAAEG,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IAE/E,KAAAhE,WAAW,GAAW,OAAO;IAC7B,KAAAM,yBAAyB,GAAa,EAAE;IACxC,KAAA4D,wBAAwB,GAAW,EAAE;IAErC,KAAAC,oBAAoB,GAAY,KAAK;IACrC,KAAAC,kBAAkB,GAAY,KAAK;IACnC,KAAA/B,cAAc,GAAU,EAAE;IAC1B,KAAAI,cAAc,GAAU,EAAE;IAG1B,KAAA4B,WAAW,GAAY,KAAK;IAC5B,KAAAC,iBAAiB,GAAW,EAAE;IAC9B,KAAAC,OAAO,GAAW,CAAC;IACnB,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,OAAO,GAAW,CAAC;IACnB,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,cAAc,GAAQ;MACpBC,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE,IAAI;MAAEC,SAAS,EAAE,UAAU;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;KACxE;IAED,KAAAC,UAAU,GAAQ,EAAE;IACpB,KAAAC,UAAU,GAAQ,EAAE;IACpB,KAAAC,WAAW,GAAU5I,YAAY,CAAC6I,YAAY;IAY5C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACzC,WAAW,CAAC0C,KAAK,CAAC;MACxCC,IAAI,EAAE,CAAC,IAAI,CAAC;MACZC,IAAI,EAAE,CAAC,IAAI;KACZ,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAAC7B,WAAW,CAAC8B,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC,IAAI,CAACL,WAAW,CAACM,UAAU,CAAC;MAC1BC,QAAQ,EAAE,IAAI,CAAC9B,UAAU;MACzB+B,MAAM,EAAE,IAAI,CAAC5B;KACd,CAAC;EAEJ;EAEA6B,cAAcA,CAACjG,MAAW;IACxB,IAAI,CAACwF,WAAW,CAACM,UAAU,CAAC;MAC1BH,IAAI,EAAE;KACP,CAAC;IACF,IAAI3F,MAAM,CAAC0F,IAAI,IAAI,IAAI,EAAE;MACvB,IAAI,CAACN,UAAU,GAAGpF,MAAM;MACxB,IAAI,CAACqF,UAAU,GAAG,EAAE;KACrB,MACI;MACJ,IAAI,CAACD,UAAU,GAAG,EAAE;MACpB,IAAI,CAACC,UAAU,GAAG,EAAE;;EAEvB;EAEAa,cAAcA,CAACC,KAAU;IACvB,IAAIA,KAAK,CAACR,IAAI,IAAI,IAAI,EAAE;MACtB,IAAI,CAACN,UAAU,GAAGc,KAAK;MACvB,MAAMC,MAAM,GAAQ;QAClBV,IAAI,EAAES,KAAK,CAACT,IAAI;QAChBW,YAAY,EAAEF,KAAK,CAACE;OACrB;MACD,IAAI,CAACjB,UAAU,GAAGgB,MAAM;MACxB,IAAI,CAACE,YAAY,CAACF,MAAM,CAAC;MACzBG,UAAU,CAAC,MAAK;QACd,IAAI,CAACf,WAAW,CAACM,UAAU,CAAC;UAC1BJ,IAAI,EAAES,KAAK,CAACT;SACb,CAAC;MACJ,CAAC,EAAE,EAAE,CAAC;KACP,MACI,C;EAGP;EAEAzH,WAAWA,CAACuI,GAAwB,EAAEC,IAAmB;IACvD,OAAOA,IAAI,CAACD,GAAG,CAAC;EAClB;EAEAlG,cAAcA,CAAC6F,KAAU;IACvB,IAAI,CAACzC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACgD,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN,IAAI,CAACxE,aAAa,GAAG,EAAE;IACvB,IAAI,CAACwB,YAAY,GAAG,IAAI;IACxB,IAAIvD,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAI,CAACL,gBAAgB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,CAAC;IAC1E,IAAI,CAACW,yBAAyB,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,CAAC;IACxE,IAAI,CAAC+D,WAAW,GAAG,IAAI;IACvB,IAAI,CAACnB,OAAO,CAACsD,IAAI,EAAE;IACnB,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAI1G,WAAW,IAAI,OAAO,EAAE;MAC1ByG,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAAC/C,WAAW,EAAE,YAAY,CAAE;MACpE8C,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAAChD,WAAW,EAAE,CAAC,CAAC,EAAE,YAAY,CAAE;KAC9F,MAAM,IAAI5D,WAAW,IAAI,QAAQ,EAAE;MAClC,IAAI6G,cAAc,GAAG,IAAI,CAACC,8BAA8B,CAAC,IAAI,CAAClD,WAAW,CAAC,CAACmD,SAAS;MACpF,IAAIC,YAAY,GAAG,IAAI,CAACJ,iBAAiB,CAACC,cAAc,EAAE,EAAE,CAAC;MAC7DJ,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAACE,cAAc,EAAE,YAAY,CAAE;MAClEH,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAACK,YAAY,EAAE,YAAY,CAAE;KAC/D,MAAM,IAAIhH,WAAW,IAAI,SAAS,EAAE;MACnC,IAAI6G,cAAc,GAAG,IAAI,CAACI,+BAA+B,CAAC,IAAI,CAACrD,WAAW,CAAC,CAACmD,SAAS;MACrF,IAAIC,YAAY,GAAG,IAAI,CAACC,+BAA+B,CAAC,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACtD,WAAW,EAAE,CAAC,CAAC,CAAC,CAACuD,QAAQ;MAC9GV,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAACE,cAAc,EAAE,YAAY,CAAE;MAClEH,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAACK,YAAY,EAAE,YAAY,CAAE;;IAEhE,IAAI,CAACI,eAAe,GAAG;MACrB7B,IAAI,EAAE,IAAI,CAACF,WAAW,CAACgC,QAAQ,CAAC9B,IAAI,CAACV,KAAK;MAC1CW,IAAI,EAAE,IAAI,CAACH,WAAW,CAACgC,QAAQ,CAAC7B,IAAI,CAACX,KAAK;MAC1CyC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,IAAI;MACVC,iBAAiB,EAAEf,SAAS;MAC5BgB,eAAe,EAAEf,OAAO;MACxB1G,WAAW,EAAEA;KACd;IACD,IAAI,CAACgD,eAAe,CAAC0E,gBAAgB,CAAC,IAAI,CAACN,eAAe,CAAC,CAACO,SAAS,CAAEC,GAAQ,IAAI;MACjF,IAAI,CAAC7F,aAAa,GAAG6F,GAAG;MACxB,IAAI5H,WAAW,IAAI,OAAO,EAAE;QAC1B,IAAI,CAACwD,cAAc,GAAG,IAAI,CAACV,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAAC/C,WAAW,EAAE,aAAa,CAAE;QAC/E,IAAI,CAACH,eAAe,GAAG,IAAI,CAACX,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAAChD,WAAW,EAAE,CAAC,CAAC,EAAE,aAAa,CAAE;QAC3G,IAAI,CAACF,cAAc,GAAG,IAAI,CAACZ,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAAChD,WAAW,EAAE,CAAC,CAAC,EAAE,aAAa,CAAE;QAC1G,IAAI,CAACD,eAAe,GAAG,IAAI,CAACb,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAAChD,WAAW,EAAE,CAAC,CAAC,EAAE,aAAa,CAAE;QAC3G,IAAI,CAACpG,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;OAC9G,MAAM,IAAI3D,WAAW,IAAI,QAAQ,EAAE;QAClC,IAAI6H,eAAe,GAAG,IAAI,CAACjB,iBAAiB,CAAC,IAAI,CAAChD,WAAW,EAAE,CAAC,CAAC;QACjE,IAAIkE,cAAc,GAAG,IAAI,CAAClB,iBAAiB,CAAC,IAAI,CAAChD,WAAW,EAAE,EAAE,CAAC;QACjE,IAAImE,eAAe,GAAG,IAAI,CAACnB,iBAAiB,CAAC,IAAI,CAAChD,WAAW,EAAE,EAAE,CAAC;QAClE,IAAI,CAACJ,cAAc,GAAG,GAAG,IAAI,CAACsD,8BAA8B,CAAC,IAAI,CAAClD,WAAW,CAAC,CAACuD,QAAQ,CAACpD,WAAW,EAAE,YAAY,IAAI,CAACiE,aAAa,CAAC,IAAI,CAACpE,WAAW,CAAC,CAACqE,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAAC,IAAI,CAAClD,WAAW,CAAC,CAACmD,SAAS,EAAE,aAAa,CAAC,GAAG;QAC/Q,IAAI,CAACtD,eAAe,GAAG,GAAG,IAAI,CAACqD,8BAA8B,CAACe,eAAe,CAAC,CAACV,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACH,eAAe,CAAC,CAAEI,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACe,eAAe,CAAC,CAACd,SAAS,EAAE,aAAa,CAAC,GAAG;QAC/Q,IAAI,CAACrD,cAAc,GAAG,GAAG,IAAI,CAACoD,8BAA8B,CAACgB,cAAc,CAAC,CAACX,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACF,cAAc,CAAC,CAAEG,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACgB,cAAc,CAAC,CAACf,SAAS,EAAE,aAAa,CAAC,GAAG;QAC3Q,IAAI,CAACpD,eAAe,GAAG,GAAG,IAAI,CAACmD,8BAA8B,CAACiB,eAAe,CAAC,CAACZ,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACD,eAAe,CAAC,CAAEE,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACiB,eAAe,CAAC,CAAChB,SAAS,EAAE,aAAa,CAAC,GAAG;QAC/Q,IAAI,CAACvJ,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;OAC9G,MAAM,IAAI3D,WAAW,IAAI,SAAS,EAAE;QACnC,IAAI,CAACwD,cAAc,GAAG,IAAI,CAACV,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAAC/C,WAAW,EAAE,WAAW,CAAE;QAC7E,IAAI,CAACH,eAAe,GAAG,IAAI,CAACX,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAAC,IAAI,CAACtD,WAAW,EAAE,CAAC,CAAC,EAAE,WAAW,CAAE;QAC1G,IAAI,CAACF,cAAc,GAAG,IAAI,CAACZ,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAAC,IAAI,CAACtD,WAAW,EAAE,CAAC,CAAC,EAAE,WAAW,CAAE;QACzG,IAAI,CAACD,eAAe,GAAG,IAAI,CAACb,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAAC,IAAI,CAACtD,WAAW,EAAE,CAAC,CAAC,EAAE,WAAW,CAAE;QAC1G,IAAI,CAACpG,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;;MAE/G,IAAI,CAACT,OAAO,CAACgF,IAAI,EAAE;MACnB,IAAI,CAAC7D,WAAW,GAAG,KAAK;IAC1B,CAAC,CAAC;EAEJ;EAEAzC,MAAMA,CAAA;IACJ,IAAI,CAACG,aAAa,GAAG,EAAE;IACvB,IAAI/B,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAIyG,SAAS,GAAG,EAAE;IAClB,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAI,CAACrC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACnB,OAAO,CAACsD,IAAI,EAAE;IACnB,IAAI2B,iBAAuB;IAC3B,IAAInI,WAAW,IAAI,OAAO,EAAE;MAC1BmI,iBAAiB,GAAG,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAAC5E,cAAc,CAAC;MACnEiD,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,EAAE,YAAY,CAAE;MAChGzB,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,EAAE,YAAY,CAAE;KAC/F,MAAM,IAAInI,WAAW,IAAI,QAAQ,EAAE;MAClCmI,iBAAiB,GAAG,IAAI,CAACE,qBAAqB,CAAC,IAAI,CAAC7E,cAAc,CAAE;MACpE,IAAIqD,cAAc,GAAG,IAAI,CAACD,iBAAiB,CAACuB,iBAAiB,EAAE,EAAE,CAAC;MAClE,IAAInB,YAAY,GAAI,IAAI,CAACJ,iBAAiB,CAACC,cAAc,EAAE,EAAE,CAAE;MAC/DJ,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAACE,cAAc,EAAE,YAAY,CAAE;MAClEH,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAACK,YAAY,EAAE,YAAY,CAAE;KAC/D,MAAM,IAAIhH,WAAW,IAAI,SAAS,EAAE;MACnCmI,iBAAiB,GAAG,IAAI,CAACG,sBAAsB,CAAC,IAAI,CAAC9E,cAAc,CAAE;MACrE,IAAIqD,cAAc,GAAG,IAAI,CAACI,+BAA+B,CAAC,IAAI,CAACC,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAACpB,SAAS;MAClH,IAAIC,YAAY,GAAG,IAAI,CAACC,+BAA+B,CAAC,IAAI,CAACC,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAChB,QAAQ;MAC/GV,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAACE,cAAc,EAAE,YAAY,CAAE;MAClEH,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAACK,YAAY,EAAE,YAAY,CAAE;;IAEhE,IAAI,CAACI,eAAe,GAAG;MACrB7B,IAAI,EAAE,IAAI,CAACF,WAAW,CAACgC,QAAQ,CAAC9B,IAAI,CAACV,KAAK;MAC1CW,IAAI,EAAE,IAAI,CAACH,WAAW,CAACgC,QAAQ,CAAC7B,IAAI,CAACX,KAAK;MAC1CyC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,IAAI;MACVC,iBAAiB,EAAEf,SAAS;MAC5BgB,eAAe,EAAEf,OAAO;MACxB1G,WAAW,EAAEA;KACd;IACD,IAAI,CAACgD,eAAe,CAAC0E,gBAAgB,CAAC,IAAI,CAACN,eAAe,CAAC,CAACO,SAAS,CAAEC,GAAQ,IAAI;MACjF,IAAI,CAAC7F,aAAa,GAAG6F,GAAG;MACxB,IAAI5H,WAAW,IAAI,OAAO,EAAE;QAC1B,IAAI,CAACwD,cAAc,GAAG,IAAI,CAACV,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,EAAE,aAAa,CAAE;QAC3G,IAAI,CAAC1E,eAAe,GAAG,IAAI,CAACX,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,EAAE,aAAa,CAAE;QAC5G,IAAI,CAACzE,cAAc,GAAG,IAAI,CAACZ,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,EAAE,aAAa,CAAE;QAC3G,IAAI,CAACxE,eAAe,GAAG,IAAI,CAACb,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,EAAE,aAAa,CAAE;QAC5G,IAAI,CAAC3K,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;OAC9G,MACI,IAAI3D,WAAW,IAAI,QAAQ,EAAE;QAChC,IAAIuI,cAAc,GAAG,IAAI,CAAC3B,iBAAiB,CAACuB,iBAAiB,EAAE,EAAE,CAAC;QAClE,IAAIN,eAAe,GAAG,IAAI,CAACjB,iBAAiB,CAACuB,iBAAiB,EAAE,EAAE,CAAC;QACnE,IAAIL,cAAc,GAAG,IAAI,CAAClB,iBAAiB,CAACuB,iBAAiB,EAAE,EAAE,CAAC;QAClE,IAAIJ,eAAe,GAAG,IAAI,CAACnB,iBAAiB,CAACuB,iBAAiB,EAAE,EAAE,CAAC;QACnE,IAAI,CAAC3E,cAAc,GAAG,GAAG,IAAI,CAACsD,8BAA8B,CAACyB,cAAc,CAAC,CAACpB,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACO,cAAc,CAAC,CAAEN,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACyB,cAAc,CAAC,CAACxB,SAAS,EAAE,aAAa,CAAC,GAAG;QAC3Q,IAAI,CAACtD,eAAe,GAAG,GAAG,IAAI,CAACqD,8BAA8B,CAACe,eAAe,CAAC,CAACV,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACH,eAAe,CAAC,CAAEI,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACe,eAAe,CAAC,CAACd,SAAS,EAAE,aAAa,CAAC,GAAG;QAC/Q,IAAI,CAACrD,cAAc,GAAG,GAAG,IAAI,CAACoD,8BAA8B,CAACgB,cAAc,CAAC,CAACX,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACF,cAAc,CAAC,CAAEG,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACgB,cAAc,CAAC,CAACf,SAAS,EAAE,aAAa,CAAC,GAAG;QAC3Q,IAAI,CAACpD,eAAe,GAAG,GAAG,IAAI,CAACmD,8BAA8B,CAACiB,eAAe,CAAC,CAACZ,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACD,eAAe,CAAC,CAAEE,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACiB,eAAe,CAAC,CAAChB,SAAS,EAAE,aAAa,CAAC,GAAG;QAC/Q,IAAI,CAACvJ,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;OAC9G,MAAM,IAAI3D,WAAW,IAAI,SAAS,EAAE;QACnC,IAAI,CAACwD,cAAc,GAAG,IAAI,CAACV,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,EAAE,WAAW,CAAE;QAC1G,IAAI,CAAC1E,eAAe,GAAG,IAAI,CAACX,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,EAAE,WAAW,CAAE;QAC3G,IAAI,CAACzE,cAAc,GAAG,IAAI,CAACZ,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,EAAE,WAAW,CAAE;QAC1G,IAAI,CAACxE,eAAe,GAAG,IAAI,CAACb,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,EAAE,WAAW,CAAE;QAC3G,IAAI,CAAC3K,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;;MAE/G,IAAI,CAACT,OAAO,CAACgF,IAAI,EAAE;MACnB,IAAI,CAAC7D,WAAW,GAAG,KAAK;IAC1B,CAAC,CAAC;EACJ;EAEA7C,UAAUA,CAAA;IACR,IAAI,CAACO,aAAa,GAAG,EAAE;IACvB,IAAI/B,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAIyG,SAAS,GAAG,EAAE;IAClB,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAI,CAACrC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACnB,OAAO,CAACsD,IAAI,EAAE;IACnB,IAAI2B,iBAAuB;IAC3B,IAAInI,WAAW,IAAI,OAAO,EAAE;MAC1BmI,iBAAiB,GAAG,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAAC5E,cAAc,CAAC;MACnEiD,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,YAAY,CAAE;MACjGzB,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,YAAY,CAAE;KAChG,MAAM,IAAInI,WAAW,IAAI,QAAQ,EAAE;MAClCmI,iBAAiB,GAAG,IAAI,CAACE,qBAAqB,CAAC,IAAI,CAAC7E,cAAc,CAAE;MACpE,IAAIqD,cAAc,GAAG,IAAI,CAACD,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,EAAE,CAAC;MACnE,IAAInB,YAAY,GAAG,IAAI,CAACJ,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,CAAC;MAChE1B,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAACE,cAAc,EAAE,YAAY,CAAE;MAClEH,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAACK,YAAY,EAAE,YAAY,CAAE;KAC/D,MAAM,IAAIhH,WAAW,IAAI,SAAS,EAAE;MACnCmI,iBAAiB,GAAG,IAAI,CAACG,sBAAsB,CAAC,IAAI,CAAC9E,cAAc,CAAE;MACrE,IAAIqD,cAAc,GAAG,IAAI,CAACI,+BAA+B,CAAC,IAAI,CAACC,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC,CAACpB,SAAS;MACnH,IAAIC,YAAY,GAAG,IAAI,CAACC,+BAA+B,CAAC,IAAI,CAACC,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAChB,QAAQ;MAChHV,SAAS,GAAG,IAAI,CAAC3D,QAAQ,CAAC6D,SAAS,CAACE,cAAc,EAAE,YAAY,CAAE;MAClEH,OAAO,GAAG,IAAI,CAAC5D,QAAQ,CAAC6D,SAAS,CAACK,YAAY,EAAE,YAAY,CAAE;;IAEhE,IAAI,CAACI,eAAe,GAAG;MACrB7B,IAAI,EAAE,IAAI,CAACF,WAAW,CAACgC,QAAQ,CAAC9B,IAAI,CAACV,KAAK;MAC1CW,IAAI,EAAE,IAAI,CAACH,WAAW,CAACgC,QAAQ,CAAC7B,IAAI,CAACX,KAAK;MAC1CyC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,IAAI;MACVC,iBAAiB,EAAEf,SAAS;MAC5BgB,eAAe,EAAEf,OAAO;MACxB1G,WAAW,EAAEA;KACd;IACD,IAAI,CAACgD,eAAe,CAAC0E,gBAAgB,CAAC,IAAI,CAACN,eAAe,CAAC,CAACO,SAAS,CAAEC,GAAQ,IAAI;MACjF,IAAI,CAAC7F,aAAa,GAAG6F,GAAG;MACxB,IAAI5H,WAAW,IAAI,OAAO,EAAE;QAC1B,IAAI,CAACwD,cAAc,GAAG,IAAI,CAACV,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,aAAa,CAAE;QAC5G,IAAI,CAAC1E,eAAe,GAAG,IAAI,CAACX,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,aAAa,CAAE;QAC7G,IAAI,CAACzE,cAAc,GAAG,IAAI,CAACZ,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,aAAa,CAAE;QAC5G,IAAI,CAACxE,eAAe,GAAG,IAAI,CAACb,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACC,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,aAAa,CAAE;QAC7G,IAAI,CAAC3K,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;OAC9G,MACI,IAAI3D,WAAW,IAAI,QAAQ,EAAE;QAChC,IAAIuI,cAAc,GAAG,IAAI,CAAC3B,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,EAAE,CAAC;QACnE,IAAIN,eAAe,GAAG,IAAI,CAACjB,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,EAAE,CAAC;QACpE,IAAIL,cAAc,GAAG,IAAI,CAAClB,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,EAAE,CAAC;QACnE,IAAIJ,eAAe,GAAG,IAAI,CAACnB,iBAAiB,CAACuB,iBAAiB,EAAE,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC3E,cAAc,GAAG,GAAG,IAAI,CAACsD,8BAA8B,CAACyB,cAAc,CAAC,CAACpB,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACO,cAAc,CAAC,CAAEN,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACyB,cAAc,CAAC,CAACxB,SAAS,EAAE,aAAa,CAAC,GAAG;QAC3Q,IAAI,CAACtD,eAAe,GAAG,GAAG,IAAI,CAACqD,8BAA8B,CAACe,eAAe,CAAC,CAACV,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACH,eAAe,CAAC,CAAEI,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACe,eAAe,CAAC,CAACd,SAAS,EAAE,aAAa,CAAC,GAAG;QAC/Q,IAAI,CAACrD,cAAc,GAAG,GAAG,IAAI,CAACoD,8BAA8B,CAACgB,cAAc,CAAC,CAACX,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACF,cAAc,CAAC,CAAEG,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACgB,cAAc,CAAC,CAACf,SAAS,EAAE,aAAa,CAAC,GAAG;QAC3Q,IAAI,CAACpD,eAAe,GAAG,GAAG,IAAI,CAACmD,8BAA8B,CAACiB,eAAe,CAAC,CAACZ,QAAQ,CAACpD,WAAW,EAAE,YAAa,IAAI,CAACiE,aAAa,CAACD,eAAe,CAAC,CAAEE,QAAQ,EAAE,KAAK,IAAI,CAACnF,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACG,8BAA8B,CAACiB,eAAe,CAAC,CAAChB,SAAS,EAAE,aAAa,CAAC,GAAG;QAC/Q,IAAI,CAACvJ,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;OAC9G,MAAM,IAAI3D,WAAW,IAAI,SAAS,EAAE;QACnC,IAAI,CAACwD,cAAc,GAAG,IAAI,CAACV,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,CAAE;QAC3G,IAAI,CAAC1E,eAAe,GAAG,IAAI,CAACX,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,CAAE;QAC5G,IAAI,CAACzE,cAAc,GAAG,IAAI,CAACZ,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,CAAE;QAC3G,IAAI,CAACxE,eAAe,GAAG,IAAI,CAACb,QAAQ,CAAC6D,SAAS,CAAC,IAAI,CAACO,kBAAkB,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,CAAE;QAC5G,IAAI,CAAC3K,eAAe,GAAG,CAAC,IAAI,CAACgG,cAAc,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,eAAe,CAAC;;MAE/G,IAAI,CAACT,OAAO,CAACgF,IAAI,EAAE;MACnB,IAAI,CAAC7D,WAAW,GAAG,KAAK;IAC1B,CAAC,CAAC;EACJ;EAEAmE,oCAAoCA,CAAA;IAClC,IAAI,CAACjF,YAAY,GAAG,KAAK;IACzB,IAAI,CAACJ,GAAG,CAACsF,aAAa,EAAE;IACxB,IAAI,CAACpE,WAAW,GAAG,IAAI;IACvB,IAAI,CAACnB,OAAO,CAACsD,IAAI,EAAE;IACnB,IAAI,CAACxD,eAAe,CAAC0E,gBAAgB,CAAC,IAAI,CAACN,eAAe,CAAC,CAACO,SAAS,CAAEC,GAAQ,IAAI;MACjF,IAAI,CAAC7F,aAAa,GAAG6F,GAAG;MACxB,IAAI,CAACrE,YAAY,GAAG,IAAI;MACxB,IAAI,CAACJ,GAAG,CAACsF,aAAa,EAAE;MACxB,IAAI,CAACrE,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACjB,GAAG,CAACsF,aAAa,EAAE;MACxB,IAAI,CAACpG,cAAc,GAAG,EAAE;MACxB,IAAI,CAACW,eAAe,CAAC0F,0BAA0B,CAAC,IAAI,CAACC,mBAAmB,CAAC,CAAChB,SAAS,CAAEC,GAAQ,IAAI;QAC/FxB,UAAU,CAAC,MAAK;UACd,IAAI,CAAC/D,cAAc,GAAGuF,GAAG;UACzB,IAAI,CAACxD,kBAAkB,GAAG,IAAI;UAC9B,IAAI,CAACjB,GAAG,CAACsF,aAAa,EAAE;UACxB,IAAI,CAACvF,OAAO,CAACgF,IAAI,EAAE;UACnB,IAAI,CAAC7D,WAAW,GAAG,KAAK;QAC1B,CAAC,EAAE,IAAI,CAAC;MAEV,CAAC,CAAC;IAEJ,CAAC,CAAC;EACJ;EAEAuE,OAAOA,CAAA;IACL,IAAI,CAACrF,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC8B,WAAW,CAACM,UAAU,CAAC;MAC1BC,QAAQ,EAAE,IAAI,CAAC9B,UAAU;MACzB+B,MAAM,EAAE,IAAI,CAAC5B,QAAQ;MACrBsB,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;KACP,CAAC;IACF,IAAI,CAAChI,eAAe,GAAG,EAAE;IACzB,IAAI,CAACwC,WAAW,GAAG,OAAO;IAC1B,IAAI,CAAC+B,aAAa,GAAG,EAAE;IACvB,IAAI,CAACsC,WAAW,GAAG,KAAK;IACxB,IAAI,CAAC/D,yBAAyB,GAAG,EAAE;IACnC,IAAI,CAAC4D,wBAAwB,GAAG,EAAE;IAClC,IAAI,CAAC5B,eAAe,GAAG,EAAE;IACzB,IAAI,CAAC6B,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACC,kBAAkB,GAAG,KAAK;IAC/B,IAAI,CAAC/B,cAAc,GAAG,EAAE;IACxB,IAAI,CAACI,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC2E,eAAe,GAAG,EAAE;IACzB,IAAI,CAACuB,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACrE,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACW,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,UAAU,GAAG,EAAE;EACtB;EAEAzE,gBAAgBA,CAACuF,KAAU;IACzB,IAAI,CAACrG,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACA,gBAAgB,CAACkJ,OAAO,CAAC,SAAS,CAAC;IACxC7C,KAAK,CAAC8C,OAAO,CAACC,OAAO,CAAE1C,GAAW,IAAI;MACpC,IAAI,CAAC1G,gBAAgB,CAACqJ,IAAI,CAAC3C,GAAG,CAAC;IACjC,CAAC,CAAC;EACJ;EAEA9I,cAAcA,CAAC8I,GAAQ,EAAE4C,IAAS,EAAEC,KAAa;IAC/C,IAAI,CAAC/E,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACC,kBAAkB,GAAG,KAAK;IAC/B,IAAI,CAAC/B,cAAc,GAAG,EAAE;IACxB,IAAI,CAACI,cAAc,GAAG,EAAE;IACxB,IAAI,CAACyB,wBAAwB,GAAG,GAAG,IAAI,CAAClF,aAAa,CAACqH,GAAG,CAAC,UAAU;IACpE,IAAI,CAAC/D,eAAe,GAAG;MAAC+D,GAAG,EAACA,GAAG;MAAC8C,UAAU,EAACF;IAAI,CAAC;IAChD,IAAIxC,SAAe;IACnB,IAAIC,OAAa;IACjB,IAAI,CAACpC,iBAAiB,GAAG4E,KAAK;IAC9B,IAAI,IAAI,CAAClJ,WAAW,IAAI,OAAO,EAAE;MAC/ByG,SAAS,GAAG,IAAI,CAAC2B,qBAAqB,CAACc,KAAK,CAAC;MAC7CxC,OAAO,GAAG,IAAI7C,IAAI,CAAC4C,SAAS,CAAC;KAC9B,MAAM,IAAI,IAAI,CAACzG,WAAW,IAAI,QAAQ,EAAE;MACvC,IAAIoJ,UAAU,GAAG,IAAI,CAACtC,8BAA8B,CAAC,IAAI,CAACuB,qBAAqB,CAACa,KAAK,CAAC,CAAC;MACvFzC,SAAS,GAAG2C,UAAU,CAACrC,SAAS;MAChCL,OAAO,GAAG0C,UAAU,CAACjC,QAAQ;KAC9B,MAAM,IAAI,IAAI,CAACnH,WAAW,IAAI,SAAS,EAAE;MACxC,IAAIoJ,UAAU,GAAG,IAAI,CAACnC,+BAA+B,CAAC,IAAI,CAACqB,sBAAsB,CAACY,KAAK,CAAC,CAAC;MACzFzC,SAAS,GAAG2C,UAAU,CAACrC,SAAS;MAChCL,OAAO,GAAG0C,UAAU,CAACjC,QAAQ;KAC9B,MAAM;MACLV,SAAS,GAAG,IAAI5C,IAAI,EAAE;MACtB6C,OAAO,GAAG,IAAI7C,IAAI,EAAE;;IAEtB,IAAIwC,GAAG,IAAI,SAAS,EAAE;MACpB,IAAIgD,SAAS,GAAG,EAAE;MAClB,IAAIhD,GAAG,IAAI,OAAO,EAAE;QAClBgD,SAAS,GAAG,eAAe;OAC5B,MAAM,IAAIhD,GAAG,IAAI,MAAM,EAAE;QACxBgD,SAAS,GAAG,eAAe;OAC5B,MAAM,IAAIhD,GAAG,IAAI,MAAM,EAAE;QACxBgD,SAAS,GAAG,eAAe;OAC5B,MAAM,IAAIhD,GAAG,IAAI,YAAY,EAAE;QAC9BgD,SAAS,GAAG,oBAAoB;;MAElC,IAAI,CAACV,mBAAmB,GAAG;QACzBpD,IAAI,EAAE,IAAI,CAACF,WAAW,CAACgC,QAAQ,CAAC9B,IAAI,CAACV,KAAK;QAC1CW,IAAI,EAAE,IAAI,CAACH,WAAW,CAACgC,QAAQ,CAAC7B,IAAI,CAACX,KAAK;QAC1CyE,QAAQ,EAAE,IAAI,CAACxG,QAAQ,CAAC6D,SAAS,CAACF,SAAS,EAAE,YAAY,CAAC;QAC1D8C,MAAM,EAAE,IAAI,CAACzG,QAAQ,CAAC6D,SAAS,CAACD,OAAO,EAAE,YAAY,CAAC;QACtD2C,SAAS,EAAEA,SAAS;QACpBzE,SAAS,EAAEqE,IAAI,CAACO;OACjB;MACD,IAAI,CAACxG,eAAe,CAAC0F,0BAA0B,CAAC,IAAI,CAACC,mBAAmB,CAAC,CAAChB,SAAS,CAAEC,GAAQ,IAAI;QAC/F,IAAI,CAACvF,cAAc,GAAGuF,GAAG;QACzB,IAAI,CAACxD,kBAAkB,GAAG,IAAI;MAChC,CAAC,CAAC;KACH,MAAM;MACL,IAAIqF,UAAU,GAAG;QACflE,IAAI,EAAE,IAAI,CAACF,WAAW,CAACgC,QAAQ,CAAC9B,IAAI,CAACV,KAAK;QAC1CW,IAAI,EAAE,IAAI,CAACH,WAAW,CAACgC,QAAQ,CAAC7B,IAAI,CAACX,KAAK;QAC1C2C,iBAAiB,EAAE,IAAI,CAAC1E,QAAQ,CAAC6D,SAAS,CAACF,SAAS,EAAE,YAAY,CAAC;QACnEgB,eAAe,EAAE,IAAI,CAAC3E,QAAQ,CAAC6D,SAAS,CAACD,OAAO,EAAE,YAAY,CAAC;QAC/DgD,eAAe,EAAE;OAClB;MACD,IAAI,CAACzG,MAAM,CAAC0G,gBAAgB,CAACF,UAAU,CAAC,CAAC9B,SAAS,CAAEC,GAAQ,IAAI;QAC9D,IAAI,CAACnF,cAAc,GAAGmF,GAAG;QACzB,IAAI,CAACzD,oBAAoB,GAAG,IAAI;MAClC,CAAC,CAAC;;EAEN;EAEAyC,iBAAiBA,CAAChD,WAAiB,EAAEgG,SAAiB;IACpD,IAAIC,QAAQ,GAAG,IAAIhG,IAAI,CAACD,WAAW,CAAC;IACpCiG,QAAQ,CAACC,OAAO,CAACD,QAAQ,CAACE,OAAO,EAAE,GAAGH,SAAS,CAAC;IAChD,OAAOC,QAAQ;EACjB;EAEA3C,kBAAkBA,CAACtD,WAAiB,EAAEoG,WAAmB;IACvD,IAAIC,IAAI,GAAG,IAAIpG,IAAI,CAACD,WAAW,CAAC;IAChCqG,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACjG,QAAQ,EAAE,GAAGgG,WAAW,CAAC;IAC5C,OAAOC,IAAI;EACb;EAEAjC,aAAaA,CAACiC,IAAU;IACtB,IAAIrG,WAAW,GAAQ,IAAIC,IAAI,CAACoG,IAAI,CAAC;IACrCrG,WAAW,CAAC8B,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChC9B,WAAW,CAACkG,OAAO,CAAClG,WAAW,CAACmG,OAAO,EAAE,GAAG,CAAC,IAAInG,WAAW,CAACuG,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAC5E,IAAIC,SAAS,GAAQ,IAAIvG,IAAI,CAACD,WAAW,CAACG,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9D,IAAIsG,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC3G,WAAW,GAAGwG,SAAS,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1E,OAAOC,UAAU;EACnB;EAEAvD,8BAA8BA,CAACmD,IAAU;IACvC,MAAMO,MAAM,GAAG;MACbzD,SAAS,EAAE,IAAIlD,IAAI,CAACoG,IAAI,CAAC;MACzB9C,QAAQ,EAAE,IAAItD,IAAI,CAACoG,IAAI;KACxB;IACDO,MAAM,CAACzD,SAAS,CAAC+C,OAAO,CAACG,IAAI,CAACF,OAAO,EAAE,GAAGE,IAAI,CAACE,MAAM,EAAE,IAAIF,IAAI,CAACE,MAAM,EAAE,IAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACvFK,MAAM,CAACzD,SAAS,CAACrB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC8E,MAAM,CAACrD,QAAQ,CAAC2C,OAAO,CAACG,IAAI,CAACF,OAAO,EAAE,GAAGE,IAAI,CAACE,MAAM,EAAE,IAAKF,IAAI,CAACE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvFK,MAAM,CAACrD,QAAQ,CAACzB,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;IACzC,OAAO8E,MAAM;EACf;EAEAvD,+BAA+BA,CAACgD,IAAU;IACxC,MAAMO,MAAM,GAAG;MACbzD,SAAS,EAAE,IAAIlD,IAAI,CAACoG,IAAI,CAAC;MACzB9C,QAAQ,EAAE,IAAItD,IAAI,CAACoG,IAAI;KACxB;IACDO,MAAM,CAACzD,SAAS,CAAC+C,OAAO,CAAC,CAAC,CAAC;IAC3BU,MAAM,CAACzD,SAAS,CAACrB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC8E,MAAM,CAACrD,QAAQ,CAAC+C,QAAQ,CAACD,IAAI,CAACjG,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IAChDwG,MAAM,CAACrD,QAAQ,CAACzB,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;IACzC,OAAO8E,MAAM;EACf;EAEAC,cAAcA,CAACC,KAAa;IAC1B,MAAMC,MAAM,GAAa,CACvB,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACzH;IACD,OAAOA,MAAM,CAACC,OAAO,CAACF,KAAK,CAAC;EAC9B;EAEAtC,qBAAqBA,CAAC6B,IAAY;IAChC,MAAMY,UAAU,GAAGZ,IAAI;IACvB,MAAMa,SAAS,GAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC;IACvC,MAAMC,IAAI,GAAGC,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACvC,MAAMJ,KAAK,GAAG,IAAI7G,IAAI,CAACA,IAAI,CAACqH,KAAK,CAACJ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC9G,QAAQ,EAAE;IACxE,MAAMmH,GAAG,GAAGF,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACtC,MAAMM,UAAU,GAAG,IAAIvH,IAAI,CAACmH,IAAI,EAAEN,KAAK,EAAES,GAAG,CAAC;IAC7CC,UAAU,CAAC1F,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B,OAAO0F,UAAU;EACnB;EAEA/C,qBAAqBA,CAACgD,UAAkB;IACtC,MAAMC,KAAK,GAAGD,UAAU,CAACN,KAAK,CAAC,GAAG,CAAC;IACnC,MAAMQ,UAAU,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;IAClC,MAAMC,QAAQ,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;IAChC,MAAMR,IAAI,GAAGC,QAAQ,CAACM,UAAU,EAAE,EAAE,CAAC;IACrC,MAAMG,SAAS,GAAGD,QAAQ,CAACE,KAAK,CAAC,KAAK,CAAC;IACvC,MAAMtB,UAAU,GAAGqB,SAAS,GAAGT,QAAQ,CAACS,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;IAC7D,MAAME,cAAc,GAAG,CAAC;IACxB,MAAM3B,IAAI,GAAG,IAAIpG,IAAI,CAACmH,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC,MAAMa,YAAY,GAAG,CAAC,CAAC,IAAI5B,IAAI,CAACE,MAAM,EAAE,GAAGyB,cAAc,CAAC,IAAI,CAAC;IAC/D3B,IAAI,CAACH,OAAO,CAACG,IAAI,CAACF,OAAO,EAAE,GAAG8B,YAAY,CAAC;IAC3C,MAAMjC,SAAS,GAAG,CAACS,UAAU,GAAG,CAAC,IAAI,CAAC;IACtCJ,IAAI,CAACH,OAAO,CAACG,IAAI,CAACF,OAAO,EAAE,GAAGH,SAAS,CAAC;IACxCK,IAAI,CAACvE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,OAAOuE,IAAI;EACb;EAEA3B,sBAAsBA,CAACwD,WAAmB;IACxC,MAAMhB,SAAS,GAAGgB,WAAW,CAACf,KAAK,CAAC,GAAG,CAAC;IACxC,MAAML,KAAK,GAAGI,SAAS,CAAC,CAAC,CAAC;IAC1B,MAAME,IAAI,GAAGC,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACvC,MAAMM,UAAU,GAAG,IAAIvH,IAAI,CAACmH,IAAI,EAAE,IAAI,CAACP,cAAc,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC;IAChEU,UAAU,CAAC1F,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B,OAAO0F,UAAU;EACnB;EAEApM,aAAaA,CAACqH,GAAW;IACvB,IAAI0F,UAAU,GAAG,EAAE;IACnB,IAAI1F,GAAG,IAAI,SAAS,EAAE;MACpB0F,UAAU,GAAG,SAAS;KACvB,MAAM,IAAI1F,GAAG,IAAI,OAAO,EAAE;MACzB0F,UAAU,GAAG,OAAO;KACrB,MAAM,IAAI1F,GAAG,IAAI,MAAM,EAAE;MACxB0F,UAAU,GAAG,MAAM;KACpB,MAAM,IAAI1F,GAAG,IAAI,MAAM,EAAE;MACxB0F,UAAU,GAAG,MAAM;KACpB,MAAM,IAAI1F,GAAG,IAAI,YAAY,EAAE;MAC9B0F,UAAU,GAAG,YAAY;;IAE3B,OAAOA,UAAU;EACnB;EAEA5J,eAAeA,CAAC6J,MAAe;IAC7B,IAAIA,MAAM,EAAE;MACV,IAAI,CAACxD,oCAAoC,EAAE;;EAE/C;EAEAyD,aAAaA,CAAA;IACX,IAAI,CAACzH,QAAQ,GAAG,IAAI,CAACD,OAAO;IAC5B,IAAI,CAACA,OAAO,IAAI,IAAI,CAACY,WAAW;IAChC,IAAI,CAACR,cAAc,CAACI,KAAK,GAAG,IAAI,CAACR,OAAO;IACxC,IAAI,CAACI,cAAc,CAACK,MAAM,GAAG,IAAI,CAACR,QAAQ;IAC1C,IAAI,CAACzB,MAAM,CAACmJ,sBAAsB,CAAC,IAAI,CAACvH,cAAc,CAAC,CAACgD,SAAS,CAAEC,GAAQ,IAAI;MAC7E,IAAI,CAACxE,MAAM,GAAGwE,GAAG;MACjB,IAAI,CAACzB,YAAY,CAAC,IAAI,CAAClB,UAAU,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAkH,aAAaA,CAAA;IACX,IAAI,CAACzH,QAAQ,GAAG,IAAI,CAACD,OAAO;IAC5B,IAAI,CAACA,OAAO,IAAI,IAAI,CAACU,WAAW;IAChC,IAAI,CAACR,cAAc,CAACI,KAAK,GAAG,IAAI,CAACN,OAAO;IACxC,IAAI,CAACE,cAAc,CAACK,MAAM,GAAG,IAAI,CAACN,QAAQ;IAC1C,IAAI,CAAC3B,MAAM,CAACqJ,mBAAmB,CAAC,IAAI,CAACzH,cAAc,CAAC,CAACgD,SAAS,CAAEC,GAAQ,IAAI;MAC1E,IAAI,CAACvE,MAAM,GAAGuE,GAAG;MACjB,IAAI,CAACyE,YAAY,CAAC,IAAI,CAACnH,UAAU,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAoH,QAAQA,CAACtG,KAAU;IACjB,IAAI,CAACrB,cAAc,GAAG,EAAE;IACxB,IAAI,CAACA,cAAc,GAAG;MAAEC,SAAS,EAAE,QAAQ;MAAEC,KAAK,EAAEmB,KAAK,CAACuG,IAAI;MAAEzH,SAAS,EAAE;IAAU,CAAE;IACvF,IAAI,CAACmH,aAAa,EAAE;EACtB;EAEAO,QAAQA,CAACxG,KAAU;IACjB,IAAI,CAACrB,cAAc,GAAG,EAAE;IACxB,IAAI,CAACA,cAAc,GAAG;MAAEC,SAAS,EAAE,QAAQ;MAAEC,KAAK,EAAEmB,KAAK,CAACuG,IAAI;MAAEzH,SAAS,EAAE;IAAU,CAAE;IACvF,IAAI,CAACqH,aAAa,EAAE;EACtB;EAEAhG,YAAYA,CAACF,MAAW;IACtB,IAAIA,MAAM,CAACV,IAAI,EAAE;MACf,IAAI,CAACnC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACqJ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACnH,IAAI,KAAKU,MAAM,CAACV,IAAI,CAAC;MAC7D,IAAI,CAACnC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACqJ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACnH,IAAI,KAAK,IAAI,CAAC;MACtD,IAAI,CAACnC,MAAM,CAACyF,OAAO,CAAC5C,MAAM,CAAC;;IAE7B,IAAI,CAAC7C,MAAM,CAACyF,OAAO,CAAC,IAAIrM,sBAAsB,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;EACjF;EAEA6P,YAAYA,CAACM,MAAW;IACtB,IAAIA,MAAM,CAACnH,IAAI,EAAE;MACf,IAAI,CAACnC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACoJ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAClH,IAAI,KAAKmH,MAAM,CAACnH,IAAI,CAAC;MAC7D,IAAI,CAACnC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACoJ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAClH,IAAI,KAAK,IAAI,CAAC;MACtD,IAAI,CAACnC,MAAM,CAACwF,OAAO,CAAC8D,MAAM,CAAC;;IAE7B,IAAI,CAACtJ,MAAM,CAACwF,OAAO,CAAC,IAAIpM,mBAAmB,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;EAC9E;EAEAmQ,QAAQA,CAAA;IACN,IAAI,CAACrI,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACG,cAAc,GAAG;MACpBC,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE,IAAI;MAAEC,SAAS,EAAE,UAAU;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;KACxE;IACD,IAAI,CAACiH,aAAa,EAAE;EACtB;EAEAY,QAAQA,CAAA;IACN,IAAI,CAACpI,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,IAAI,CAACO,UAAU,CAACM,IAAI,EAAE;MACxB,IAAI,CAACZ,cAAc,GAAG;QAAEC,SAAS,EAAE,SAAS;QAAEC,KAAK,EAAE,IAAI,CAACI,UAAU,CAACM,IAAI;QAAET,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAC,CAAE;KACtH,MAAM;MACL,IAAI,CAACL,cAAc,GAAG;QACpBC,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;QAAEC,SAAS,EAAE,UAAU;QAAEC,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;OACxE;;IAEH,IAAI,CAACmH,aAAa,EAAE;EACtB;EAAC,QAAAW,CAAA,G;qBAjnBUpK,kBAAkB,EAAAhG,EAAA,CAAAqQ,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAvQ,EAAA,CAAAqQ,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAzQ,EAAA,CAAAqQ,iBAAA,CAAAK,EAAA,CAAAC,QAAA,GAAA3Q,EAAA,CAAAqQ,iBAAA,CAAAO,EAAA,CAAAC,eAAA,GAAA7Q,EAAA,CAAAqQ,iBAAA,CAAAS,EAAA,CAAAC,mBAAA,GAAA/Q,EAAA,CAAAqQ,iBAAA,CAAAW,EAAA,CAAAC,qBAAA,GAAAjR,EAAA,CAAAqQ,iBAAA,CAAAa,EAAA,CAAAC,iBAAA,GAAAnR,EAAA,CAAAqQ,iBAAA,CAAArQ,EAAA,CAAAoR,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBrL,kBAAkB;IAAAsL,SAAA;IAAAC,QAAA,GAAAvR,EAAA,CAAAwR,kBAAA,CAFlB,CAAC5R,cAAc,CAAC;IAAA6R,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCzB7B9R,EAAA,CAAAC,cAAA,aAAoC;QAMSD,EAAA,CAAAe,MAAA,gBAAS;QAAAf,EAAA,CAAAgB,YAAA,EAAQ;QAClDhB,EAAA,CAAAC,cAAA,mBAE6G;QADjED,EAAA,CAAAE,UAAA,oBAAA8R,wDAAA7O,MAAA;UAAA,OAAU4O,GAAA,CAAA3I,cAAA,CAAAjG,MAAA,CAAsB;QAAA,EAAC,yBAAA8O,6DAAA;UAAA,OAChCF,GAAA,CAAAxC,aAAA,EAAe;QAAA,EADiB,oBAAA2C,wDAAA/O,MAAA;UAAA,OACL4O,GAAA,CAAAnC,QAAA,CAAAzM,MAAA,CAAgB;QAAA,EADX,kBAAAgP,sDAAA;UAAA,OACoBJ,GAAA,CAAA7B,QAAA,EAAU;QAAA,EAD9B;QAE7ElQ,EAAA,CAAAgB,YAAA,EAAY;QAGhBhB,EAAA,CAAAC,cAAA,YAAsB;QAEeD,EAAA,CAAAe,MAAA,aAAK;QAAAf,EAAA,CAAAgB,YAAA,EAAQ;QAC9ChB,EAAA,CAAAC,cAAA,oBAEmH;QAAjHD,EAAA,CAAAE,UAAA,oBAAAkS,yDAAAjP,MAAA;UAAA,OAAU4O,GAAA,CAAA1I,cAAA,CAAAlG,MAAA,CAAsB;QAAA,EAAC,yBAAAkP,8DAAA;UAAA,OAAgBN,GAAA,CAAAtC,aAAA,EAAe;QAAA,EAA/B,oBAAA6C,yDAAAnP,MAAA;UAAA,OAA2C4O,GAAA,CAAAjC,QAAA,CAAA3M,MAAA,CAAgB;QAAA,EAA3D,kBAAAoP,uDAAA;UAAA,OAAoER,GAAA,CAAA5B,QAAA,EAAU;QAAA,EAA9E;QACnCnQ,EAAA,CAAAgB,YAAA,EAAY;QAGhBhB,EAAA,CAAA6F,SAAA,aAA2B;QAC3B7F,EAAA,CAAAC,cAAA,aAAuB;QAEXD,EAAA,CAAAE,UAAA,mBAAAsS,qDAAA;UAAA,OAAST,GAAA,CAAAlI,QAAA,EAAU;QAAA,EAAC;QACsD7J,EAAA,CAAAgB,YAAA,EAAS;QAC3FhB,EAAA,CAAAC,cAAA,kBACkD;QAD1CD,EAAA,CAAAE,UAAA,mBAAAuS,qDAAA;UAAA,OAASV,GAAA,CAAA7F,OAAA,EAAS;QAAA,EAAC;QACuBlM,EAAA,CAAAgB,YAAA,EAAS;QAOvEhB,EAAA,CAAAmC,UAAA,KAAAuQ,kCAAA,mBAuGM;QACN1S,EAAA,CAAAC,cAAA,oBACsG;QAD5FD,EAAA,CAAAE,UAAA,2BAAAyS,+DAAAxP,MAAA;UAAA,OAAA4O,GAAA,CAAArK,kBAAA,GAAAvE,MAAA;QAAA,EAAgC;QAExCnD,EAAA,CAAAmC,UAAA,KAAAyQ,0CAAA,0BAGc;QAChB5S,EAAA,CAAAgB,YAAA,EAAW;QACXhB,EAAA,CAAAC,cAAA,oBACsG;QAD5FD,EAAA,CAAAE,UAAA,2BAAA2S,+DAAA1P,MAAA;UAAA,OAAA4O,GAAA,CAAAtK,oBAAA,GAAAtE,MAAA;QAAA,EAAkC;QAE1CnD,EAAA,CAAAmC,UAAA,KAAA2Q,0CAAA,0BAEc;QAChB9S,EAAA,CAAAgB,YAAA,EAAW;QACXhB,EAAA,CAAAmC,UAAA,KAAA4Q,0CAAA,0BAGc;;;QA1JN/S,EAAA,CAAAiB,SAAA,GAAyB;QAAzBjB,EAAA,CAAA4B,UAAA,cAAAmQ,GAAA,CAAApJ,WAAA,CAAyB;QAMM3I,EAAA,CAAAiB,SAAA,GAAmB;QAAnBjB,EAAA,CAAA4B,UAAA,oBAAmB,UAAAmQ,GAAA,CAAArL,MAAA;QASnB1G,EAAA,CAAAiB,SAAA,GAAmB;QAAnBjB,EAAA,CAAA4B,UAAA,oBAAmB,UAAAmQ,GAAA,CAAApL,MAAA;QAUI3G,EAAA,CAAAiB,SAAA,GAA+B;QAA/BjB,EAAA,CAAA4B,UAAA,cAAAmQ,GAAA,CAAApJ,WAAA,CAAAqK,KAAA,CAA+B;QAStDhT,EAAA,CAAAiB,SAAA,GAAkB;QAAlBjB,EAAA,CAAA4B,UAAA,SAAAmQ,GAAA,CAAAlL,YAAA,CAAkB;QAwGC7G,EAAA,CAAAiB,SAAA,GAAyB;QAAzBjB,EAAA,CAAAiT,UAAA,CAAAjT,EAAA,CAAAkT,eAAA,KAAAC,GAAA,EAAyB;QAAzEnT,EAAA,CAAA4B,UAAA,YAAAmQ,GAAA,CAAArK,kBAAA,CAAgC,uFAAAqK,GAAA,CAAAvK,wBAAA;QAOkBxH,EAAA,CAAAiB,SAAA,GAAyB;QAAzBjB,EAAA,CAAAiT,UAAA,CAAAjT,EAAA,CAAAkT,eAAA,KAAAC,GAAA,EAAyB;QAA3EnT,EAAA,CAAA4B,UAAA,YAAAmQ,GAAA,CAAAtK,oBAAA,CAAkC,uFAAAsK,GAAA,CAAAvK,wBAAA;QAOzCxH,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAA4B,UAAA,SAAAmQ,GAAA,CAAApK,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}