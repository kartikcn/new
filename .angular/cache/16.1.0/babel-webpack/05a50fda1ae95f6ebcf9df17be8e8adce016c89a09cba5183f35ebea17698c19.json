{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/enum.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/ui/employee/services/employee.service\";\nimport * as i4 from \"src/app/ui/emstd/service/emstd.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ng-select/ng-select\";\nimport * as i7 from \"ng-zorro-antd/table\";\nimport * as i8 from \"ng-zorro-antd/form\";\nimport * as i9 from \"../../../../directive/directive/trim-input.directive\";\nfunction AddEmployeeComponent_tr_13_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 20);\n    i0.ɵɵtext(1, \" Employee code is already exists \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEmployeeComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 2);\n    i0.ɵɵtemplate(2, AddEmployeeComponent_tr_13_label_2_Template, 2, 0, \"label\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx_r0.frmEmployeeDetails.controls[\"emCode\"].errors) && !(ctx_r0.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx_r0.frmEmployeeDetails.controls[\"emCode\"].errors.required));\n  }\n}\nfunction AddEmployeeComponent_tr_47_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 20);\n    i0.ɵɵtext(1, \" Please enter valid Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEmployeeComponent_tr_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 2);\n    i0.ɵɵtemplate(2, AddEmployeeComponent_tr_47_label_2_Template, 2, 0, \"label\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx_r1.frmEmployeeDetails.controls[\"email\"].errors) && !(ctx_r1.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx_r1.frmEmployeeDetails.controls[\"email\"].errors.required));\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"control-label\": a0\n  };\n};\nexport let AddEmployeeComponent = /*#__PURE__*/(() => {\n  class AddEmployeeComponent {\n    constructor(enumsrv, formBuilder, emSrv, emstdSrv) {\n      this.enumsrv = enumsrv;\n      this.formBuilder = formBuilder;\n      this.emSrv = emSrv;\n      this.emstdSrv = emstdSrv;\n      this.subscriptions = [];\n      this.loadedEmcode = null;\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumInitial = [];\n      this.enumGender = [];\n      this.enumEmStandard = [];\n      this.enumEmStatus = [];\n      // enumLineMngr: EmpFilterInput[]=[];\n      this.enumLineMngr = [];\n      this.enumccCode = [];\n      this.isEdit = false;\n      this.isNew = false;\n      this.onChange = () => {};\n      this.onTouched = () => {};\n      // this.currentDate = this.datePipe.transform(new Date(), \"yyyy/MM/dd hh:mm:ss\");\n      /// Start Of Building Form \n      this.frmEmployeeDetails = this.formBuilder.group({\n        emId: [null],\n        emCode: [\"\", [Validators.required]],\n        initials: ['', [Validators.required]],\n        firstName: ['', [Validators.required]],\n        lastName: ['', [Validators.required]],\n        maidenName: [''],\n        aliasName: [''],\n        email: ['', [Validators.required, Validators.email]],\n        emstdId: [null, [Validators.required]],\n        emStatus: ['', [Validators.required]],\n        idNumber: [''],\n        birthDate: [''],\n        gender: ['', [Validators.required]],\n        compName: [''],\n        dateJoin: [''],\n        dateLeave: Date,\n        lineMngr: [null]\n      });\n      // End Of Building Form\n      this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.frmEmployeeDetails.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      }));\n    }\n    ngOnInit() {\n      this.loadEnums();\n      this.loadEmstd();\n      this.checkFormMode();\n      this.loadEmployee();\n    }\n    loadEmstd() {\n      this.emstdSrv.getEmStd().subscribe(res => {\n        this.enumEmStandard = res.map(i => {\n          i.emStdDesc = i.emStd + \" - \" + (i.emStdDesc.length > 20 ? i.emStdDesc.substr(0, 18) + \"...\" : i.emStdDesc);\n          return i;\n        });\n        this.enumEmStandard.unshift({\n          emstdId: null,\n          emStdDesc: \"Make a selection\"\n        });\n      });\n    }\n    loadEmployee() {\n      this.emSrv.getAllEmpByComp().subscribe(res => {\n        this.enumLineMngr = res.map(i => {\n          i.firstName = i.emCode + \" - \" + i.firstName;\n          return i;\n        });\n        // this.enumLineMngr.unshift(new EmpFilterInput(null, \"Make a selection\",0 ));\n      });\n    }\n    /// Start Of Form Validation Related Code\n    isValid() {\n      return this.getValidationErrors().length === 0;\n    }\n    getValidationErrors() {\n      const me = this;\n      const validationErros = [];\n      Object.keys(this.frmEmployeeDetails.controls).forEach(key => {\n        let field = this.frmEmployeeDetails.get(key);\n        const controlErrors = field != null ? field.errors : null;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            validationErros.push(new VaildationError(key, keyError, controlErrors[keyError]));\n          });\n        }\n      });\n      return validationErros;\n    }\n    /// End Of Form Validation Related Code\n    /// Start Of Reference Data Initiation\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumClonedList = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'em'.toLocaleUpperCase());\n        this.enumEmStatus = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'em_status'.toLocaleUpperCase());\n        this.enumInitial = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'initials'.toLocaleUpperCase());\n        this.enumGender = this.enumClonedList.filter(t => t.fieldName.toLocaleUpperCase() === 'gender'.toLocaleUpperCase());\n        // this.enumInitial.unshift(new Enums('', '', '', 'Make a selection'));\n        // this.enumEmStatus.unshift(new Enums('', '', '', 'Make a selection'));\n      }, error => {\n        // this.loginError = error.errorDesc;\n      });\n    }\n    /// Start Preparing Entered Data Model\n    get value() {\n      const details = {\n        emId: this.frmEmployeeDetails.controls.emId.value,\n        initials: this.frmEmployeeDetails.controls.initials.value,\n        firstName: this.frmEmployeeDetails.controls.firstName.value,\n        lastName: this.frmEmployeeDetails.controls.lastName.value,\n        maidenName: this.frmEmployeeDetails.controls.maidenName.value,\n        aliasName: this.frmEmployeeDetails.controls.aliasName.value,\n        email: this.frmEmployeeDetails.controls.email.value,\n        emstdId: this.frmEmployeeDetails.controls.emstdId.value,\n        emStatus: this.frmEmployeeDetails.controls.emStatus.value,\n        idNumber: this.frmEmployeeDetails.controls.idNumber.value,\n        birthDate: this.frmEmployeeDetails.controls.birthDate.value,\n        gender: this.frmEmployeeDetails.controls.gender.value,\n        compName: this.frmEmployeeDetails.controls.compName.value,\n        dateJoin: this.frmEmployeeDetails.controls.dateJoin.value,\n        dateLeave: this.frmEmployeeDetails.controls.dateLeave.value,\n        lineMngr: this.frmEmployeeDetails.controls.lineMngr.value,\n        emCode: this.frmEmployeeDetails.controls.emCode.value\n      };\n      return details;\n    }\n    set value(value) {\n      setTimeout(() => {\n        this.frmEmployeeDetails.patchValue({\n          emId: value.emId,\n          initials: value.initials,\n          firstName: value.firstName,\n          lastName: value.lastName,\n          maidenName: value.maidenName,\n          aliasName: value.aliasName,\n          email: value.email,\n          emstdId: value.emstdId,\n          emStatus: value.emStatus,\n          idNumber: value.idNumber,\n          birthDate: value.birthDate,\n          gender: value.gender,\n          compName: value.compName,\n          dateJoin: value.dateJoin,\n          dateLeave: value.dateLeave,\n          lineMngr: value.lineMngr,\n          emCode: value.emCode\n        });\n        this.loadedEmcode = value.emCode;\n        this.onChange(value);\n        this.onTouched();\n      }, 0);\n    }\n    checkFormMode() {\n      if (this.isEdit == false) {\n        this.frmEmployeeDetails.disable();\n      } else {\n        this.frmEmployeeDetails.enable();\n      }\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        this.frmEmployeeDetails.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    // communicate the inner form validation to the parent form\n    validate(_) {\n      return this.frmEmployeeDetails.valid ? null : {\n        frmEmployeeDetails: {\n          valid: false\n        }\n      };\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    static #_ = this.ɵfac = function AddEmployeeComponent_Factory(t) {\n      return new (t || AddEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EnumService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i4.EmStdService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEmployeeComponent,\n      selectors: [[\"app-add-employee\"]],\n      inputs: {\n        isEdit: \"isEdit\",\n        isNew: \"isNew\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AddEmployeeComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => AddEmployeeComponent),\n        multi: true\n      }])],\n      decls: 59,\n      vars: 21,\n      consts: [[\"nz-form\", \"\", 3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", 3, \"ngClass\"], [\"type\", \"text\", \"name\", \"emCode\", \"formControlName\", \"emCode\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [1, \"form-field-lable\", \"control-label\"], [\"formControlName\", \"initials\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [4, \"ngIf\"], [\"type\", \"text\", \"name\", \"firstName\", \"formControlName\", \"firstName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [1, \"form-field-lable\"], [\"type\", \"text\", \"name\", \"maidenName\", \"formControlName\", \"maidenName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"lastName\", \"formControlName\", \"lastName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\"], [\"formControlName\", \"gender\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"type\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\", \"blue-border\"], [\"formControlName\", \"emstdId\", \"bindLabel\", \"emStdDesc\", \"bindValue\", \"emstdId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"formControlName\", \"emStatus\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"formControlName\", \"lineMngr\", \"bindLabel\", \"firstName\", \"bindValue\", \"emId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [2, \"width\", \"calc(100% / 2)\"], [1, \"form-field-lable\", 2, \"color\", \"red\"]],\n      template: function AddEmployeeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"table\", 1)(2, \"tr\")(3, \"td\", 2)(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \"Employee Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"td\", 2)(9, \"div\", 3)(10, \"label\", 6);\n          i0.ɵɵtext(11, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"ng-select\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(13, AddEmployeeComponent_tr_13_Template, 4, 1, \"tr\", 8);\n          i0.ɵɵelementStart(14, \"tr\")(15, \"td\", 2)(16, \"div\", 3)(17, \"label\", 6);\n          i0.ɵɵtext(18, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"td\", 2)(21, \"div\", 3)(22, \"label\", 10);\n          i0.ɵɵtext(23, \"Middle Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 11);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(25, \"tr\")(26, \"td\", 2)(27, \"div\", 3)(28, \"label\", 6);\n          i0.ɵɵtext(29, \"Surname\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(30, \"input\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"td\", 2)(32, \"div\", 3)(33, \"label\", 6);\n          i0.ɵɵtext(34, \"Gender\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(35, \"ng-select\", 13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(36, \"tr\")(37, \"td\", 2)(38, \"div\", 3)(39, \"label\", 6);\n          i0.ɵɵtext(40, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(41, \"input\", 14);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"td\", 2)(43, \"div\", 3)(44, \"label\", 6);\n          i0.ɵɵtext(45, \"Employee Standard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(46, \"ng-select\", 15);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(47, AddEmployeeComponent_tr_47_Template, 4, 1, \"tr\", 8);\n          i0.ɵɵelementStart(48, \"tr\")(49, \"td\", 2)(50, \"div\", 3)(51, \"label\", 6);\n          i0.ɵɵtext(52, \"Employee Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(53, \"ng-select\", 16);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(54, \"td\", 2)(55, \"div\", 3)(56, \"label\", 10);\n          i0.ɵɵtext(57, \"Line Manager\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(58, \"ng-select\", 17);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.frmEmployeeDetails);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.isNew));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumInitial)(\"searchable\", false);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx.frmEmployeeDetails.controls[\"emCode\"].errors) && ((ctx.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx.frmEmployeeDetails.controls[\"emCode\"].dirty) || (ctx.frmEmployeeDetails.controls[\"emCode\"] == null ? null : ctx.frmEmployeeDetails.controls[\"emCode\"].touched)));\n          i0.ɵɵadvance(22);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumGender)(\"searchable\", false);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumEmStandard)(\"searchable\", false);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx.frmEmployeeDetails.controls[\"email\"].errors) && ((ctx.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx.frmEmployeeDetails.controls[\"email\"].dirty) || (ctx.frmEmployeeDetails.controls[\"email\"] == null ? null : ctx.frmEmployeeDetails.controls[\"email\"].touched)));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumEmStatus)(\"searchable\", false);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumLineMngr)(\"searchable\", true);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i6.NgSelectComponent, i7.NzTableCellDirective, i7.NzTrDirective, i8.NzFormDirective, i9.TrimInputDirective],\n      styles: [\".form-field-lable[_ngcontent-%COMP%]{font-size:11px;margin-bottom:0;font-weight:500}.form-control[_ngcontent-%COMP%]{margin-top:-3px;padding-left:5px}[_ngcontent-%COMP%]::placeholder{color:#555;opacity:1}[_ngcontent-%COMP%]:-ms-input-placeholder{color:#555}[_ngcontent-%COMP%]::-ms-input-placeholder{color:#555}.ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%]{border-radius:0!important}.mat-expansion-panel-header-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px}.mat-card[_ngcontent-%COMP%]{padding:0;border:thin double rgb(181,155,90)}.mat-card-title[_ngcontent-%COMP%]{color:#fff;letter-spacing:1px;font-size:13px;margin:0!important}.mat-card-header-text[_ngcontent-%COMP%]{margin:0!important}.mat-card-header[_ngcontent-%COMP%]{padding:5px!important;margin-left:-15px}.action-buttons[_ngcontent-%COMP%]{height:30px;width:70px}.blue-border[_ngcontent-%COMP%]{border-color:#879cc9!important;height:24px!important;margin-top:2px!important}\"]\n    });\n  }\n  return AddEmployeeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}