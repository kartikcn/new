{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\n//import { RmTypeFilterInputDTO } from '../ui/room category/model/DTO/rmtypeFilterInput.model';\nexport class RmcatService {\n  constructor(siteService, rmcatService, rmcatDetailService, rmTypeService) {\n    this.siteService = siteService;\n    this.rmcatService = rmcatService;\n    this.rmcatDetailService = rmcatDetailService;\n    this.rmTypeService = rmTypeService;\n  }\n  getRmcatList(data) {\n    return this.rmcatService.search('rmcat', 'list', data);\n  }\n  getRmTypeList(data) {\n    return this.rmTypeService.search('rmtype', 'list', data);\n  }\n  getRmTypeListPaginated(data) {\n    return this.rmTypeService.search('rmtype', 'listPaginated', data);\n  }\n  getRmcatById(id) {\n    return this.rmcatDetailService.getSingleById('rmcat', 'get', id);\n  }\n  getRmTypeById(rmcat, rmtype) {\n    return this.rmTypeService.getAllByIds('rmType', 'getRmType', rmcat, rmtype);\n  }\n  getALLRmcats() {\n    return this.rmcatService.getAll('rmcat', 'getList');\n  }\n  getALLRmcatsPaginated(data) {\n    return this.rmcatService.search('rmcat', 'getListPaginated', data);\n  }\n  saveRmcat(rmcat) {\n    return this.rmcatDetailService.add('rmcat', 'saveRmcat', rmcat);\n  }\n  saveRmType(rmcat) {\n    return this.rmTypeService.add('rmType', 'saveRmtype', rmcat);\n  }\n  deleteRoomType(data) {\n    return this.rmcatService.getAllByIds('rmType', 'delete', data.id, data.rmCat);\n  }\n  deleteRoomCat(rm_cat) {\n    return this.rmcatService.deleteById('rmcat', 'delete', rm_cat);\n  }\n  getALLRmTypes() {\n    return this.rmTypeService.getAll('rmType', 'getList');\n  }\n  validateRmType(rmStandard, rmType) {\n    return this.rmTypeService.getAllByIds('rmType', 'check', rmStandard, rmType);\n  }\n  getAllRmCatTreeList() {\n    return this.rmTypeService.getAll('rmcat', 'gettreelist');\n  }\n  validateRmCat(rmCat) {\n    return this.rmcatService.getAllById('rmcat', 'check', rmCat);\n  }\n  getRmCatAreaByFloor(data) {\n    return this.rmcatService.search(\"rmcat\", \"getareabyfloor\", data);\n  }\n  getRmTypeAreaByFloor(data) {\n    return this.rmcatService.search(\"rmType\", \"getareabyfloor\", data);\n  }\n  static #_ = this.ɵfac = function RmcatService_Factory(t) {\n    return new (t || RmcatService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RmcatService,\n    factory: RmcatService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RmcatService","constructor","siteService","rmcatService","rmcatDetailService","rmTypeService","getRmcatList","data","search","getRmTypeList","getRmTypeListPaginated","getRmcatById","id","getSingleById","getRmTypeById","rmcat","rmtype","getAllByIds","getALLRmcats","getAll","getALLRmcatsPaginated","saveRmcat","add","saveRmType","deleteRoomType","rmCat","deleteRoomCat","rm_cat","deleteById","getALLRmTypes","validateRmType","rmStandard","rmType","getAllRmCatTreeList","validateRmCat","getAllById","getRmCatAreaByFloor","getRmTypeAreaByFloor","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/services/rmcat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RmcatDetailsList } from '../model/rmcat-details-list.model';\nimport { RmcatFilterInput } from '../ui/rmcat/modal/rmcatFilterInput.model';\nimport { DataService } from './data.service';\nimport { RmTypeList } from '../ui/room category/model/rmtype-list.model';\n//import { RmTypeFilterInputDTO } from '../ui/room category/model/DTO/rmtypeFilterInput.model';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RmcatService {\n \n  constructor(\n    private siteService: DataService<any>,\n    private rmcatService: DataService<any>,\n    private rmcatDetailService: DataService<RmcatDetailsList>,\n    private rmTypeService: DataService<RmTypeList>\n    \n  ) { }\n\n  public getRmcatList(data:RmcatFilterInput){\n    return this.rmcatService.search('rmcat', 'list', data);\n  }\n\n  public getRmTypeList(data: any) {\n    return this.rmTypeService.search('rmtype', 'list', data);\n  }\n\n  public getRmTypeListPaginated(data: any) {\n    return this.rmTypeService.search('rmtype', 'listPaginated', data);\n  }\n\n  public getRmcatById(id:any){\n    return this.rmcatDetailService.getSingleById('rmcat', 'get',id);\n  }\n\n  public getRmTypeById(rmcat: any, rmtype: any) {\n    return this.rmTypeService.getAllByIds('rmType', 'getRmType', rmcat, rmtype);\n  }\n   public getALLRmcats() {\n     return this.rmcatService.getAll('rmcat', 'getList');\n   }\n\n   public getALLRmcatsPaginated(data:any) {\n    return this.rmcatService.search('rmcat', 'getListPaginated',data);\n  }\n\n   public saveRmcat(rmcat: RmcatDetailsList): Observable<RmcatDetailsList> {\n     return this.rmcatDetailService.add('rmcat', 'saveRmcat', rmcat);\n  }\n\n  public saveRmType(rmcat: RmTypeList): Observable<RmTypeList> {\n    return this.rmTypeService.add('rmType', 'saveRmtype', rmcat);\n  }\n  public deleteRoomType(data:any){\n    return this.rmcatService.getAllByIds('rmType', 'delete', data.id, data.rmCat);\n  }\n  public deleteRoomCat(rm_cat: string) {\n    return this.rmcatService.deleteById('rmcat', 'delete', rm_cat);\n  }\n\n  public getALLRmTypes() {\n    return this.rmTypeService.getAll('rmType', 'getList');\n  }\n  public validateRmType(rmStandard: any,rmType:any ){\n    return this.rmTypeService.getAllByIds('rmType','check' ,rmStandard, rmType);\n  }\n\n  public getAllRmCatTreeList(){\n    return this.rmTypeService.getAll('rmcat', 'gettreelist');\n  }\n\n  public validateRmCat(rmCat: any){\n    return this.rmcatService.getAllById('rmcat','check' ,rmCat);\n  }\n\n  public getRmCatAreaByFloor(data:any){\n    return this.rmcatService.search(\"rmcat\", \"getareabyfloor\", data);\n  }\n\n  public getRmTypeAreaByFloor(data:any){\n    return this.rmcatService.search(\"rmType\", \"getareabyfloor\", data);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}