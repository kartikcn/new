{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/enum.service\";\nimport * as i2 from \"src/app/ui/Helpdesk/work-request/service/add-work-request.services\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/dropdown\";\nimport * as i7 from \"primeng/toast\";\nimport * as i8 from \"primeng/panel\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/material/tooltip\";\nfunction RequestLogComponent_ng_template_3_ng_template_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 31);\n    i0.ɵɵlistener(\"onChange\", function RequestLogComponent_ng_template_3_ng_template_41_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const filter_r5 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r5($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r4)(\"options\", ctx_r3.enumWrStatus)(\"showClear\", true);\n  }\n}\nfunction RequestLogComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 8)(2, \"div\", 9)(3, \"div\", 10)(4, \"p\", 11);\n    i0.ɵɵtext(5, \"Request Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 12);\n    i0.ɵɵelement(7, \"p-sortIcon\", 13)(8, \"p-columnFilter\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"th\", 15)(10, \"div\", 9)(11, \"div\", 10)(12, \"p\", 11);\n    i0.ɵɵtext(13, \"Changed By\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 12);\n    i0.ɵɵelement(15, \"p-sortIcon\", 16)(16, \"p-columnFilter\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"th\", 18)(18, \"div\", 9)(19, \"div\", 10)(20, \"p\", 11);\n    i0.ɵɵtext(21, \"Date Changed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 12);\n    i0.ɵɵelement(23, \"p-sortIcon\", 19)(24, \"p-columnFilter\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"th\", 21)(26, \"div\", 9)(27, \"div\", 10)(28, \"p\", 11);\n    i0.ɵɵtext(29, \"Time Changed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 12);\n    i0.ɵɵelement(31, \"p-sortIcon\", 22)(32, \"p-columnFilter\", 23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"th\", 24)(34, \"div\", 9)(35, \"div\", 10)(36, \"p\", 11);\n    i0.ɵɵtext(37, \"Status\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(38, \"div\", 12);\n    i0.ɵɵelement(39, \"p-sortIcon\", 25);\n    i0.ɵɵelementStart(40, \"p-columnFilter\", 26);\n    i0.ɵɵtemplate(41, RequestLogComponent_ng_template_3_ng_template_41_Template, 1, 3, \"ng-template\", 27);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(42, \"th\", 28)(43, \"div\", 9)(44, \"div\", 10)(45, \"p\", 11);\n    i0.ɵɵtext(46, \"Comments\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(47, \"div\", 12);\n    i0.ɵɵelement(48, \"p-sortIcon\", 29)(49, \"p-columnFilter\", 30);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction RequestLogComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 32)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 33);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const requestLog_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", requestLog_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(requestLog_r8.requestId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(requestLog_r8.userUserName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 8, requestLog_r8.dateChanged, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.convertToDisplayTime(requestLog_r8.timeChanged));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getEnumById(requestLog_r8.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", requestLog_r8.comments);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", requestLog_r8.comments, \"\");\n  }\n}\nfunction RequestLogComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 34);\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 6);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nconst _c1 = function () {\n  return [\"\", \"partCode\", \"description\"];\n};\nexport class RequestLogComponent {\n  constructor(enumsrv, wrSrv, datePipe) {\n    this.enumsrv = enumsrv;\n    this.wrSrv = wrSrv;\n    this.datePipe = datePipe;\n    this.requestLogData = [];\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumWr = [];\n    this.enumWrStatus = [];\n    this.rowCount = UtilConstant.ROW_COUNT;\n  }\n  ngOnInit() {\n    this.loadEnums();\n  }\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n      this.enumWrStatus = this.enumWr.filter(t => t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n    }, error => {});\n  }\n  loadRequestLogData(requestId) {\n    this.wrSrv.getRequestLogByRequestId(requestId).subscribe(res => {\n      this.requestLogData = res;\n      this.requestLogData = this.requestLogData.sort((a, b) => a.requestLogId - b.requestLogId);\n      this.requestLogData = this.requestLogData.map(each => {\n        if (each.changedBy === null) {\n          return {\n            ...each,\n            userUserName: 'System',\n            formatedDateChanged: this.datePipe.transform(each.dateChanged, 'dd MMMM yyyy')\n          };\n        } else {\n          return {\n            ...each,\n            formatedDateChanged: this.datePipe.transform(each.dateChanged, 'dd MMMM yyyy')\n          };\n        }\n      });\n    });\n  }\n  getEnumById(enumKey) {\n    return this.enumWrStatus.find(t => t.enumKey === enumKey)?.enumValue;\n  }\n  convertToDisplayTime(value) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n  static #_ = this.ɵfac = function RequestLogComponent_Factory(t) {\n    return new (t || RequestLogComponent)(i0.ɵɵdirectiveInject(i1.EnumService), i0.ɵɵdirectiveInject(i2.AddWorkRequestService), i0.ɵɵdirectiveInject(i3.DatePipe));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RequestLogComponent,\n    selectors: [[\"app-request-log\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 9,\n    vars: 10,\n    consts: [[1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"scrollable\", \"rowsPerPageOptions\", \"globalFilterFields\", \"rowHover\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"key\", \"partSave\", \"position\", \"top-right\"], [\"key\", \"partwarning\", \"position\", \"top-center\"], [\"key\", \"partgrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pSortableColumn\", \"requestId\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"requestId\"], [\"type\", \"text\", \"field\", \"requestId\", \"display\", \"menu\"], [\"pSortableColumn\", \"userUserName\"], [\"field\", \"userUserName\"], [\"type\", \"text\", \"field\", \"userUserName\", \"display\", \"menu\"], [\"pSortableColumn\", \"formatedDateChanged\"], [\"field\", \"formatedDateChanged\"], [\"type\", \"text\", \"field\", \"formatedDateChanged\", \"display\", \"menu\"], [\"pSortableColumn\", \"timeChanged\"], [\"field\", \"timeChanged\"], [\"type\", \"text\", \"field\", \"timeChanged\", \"display\", \"menu\"], [\"pSortableColumn\", \"status\"], [\"field\", \"status\"], [\"field\", \"status\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"pSortableColumn\", \"comments\"], [\"field\", \"comments\"], [\"type\", \"text\", \"field\", \"comments\", \"display\", \"menu\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Status\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [3, \"pSelectableRow\"], [\"matTooltipPosition\", \"below\", 1, \"ellipsis\", 3, \"matTooltip\"], [2, \"text-align\", \"center\"]],\n    template: function RequestLogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-panel\")(1, \"div\", 0)(2, \"p-table\", 1);\n        i0.ɵɵtemplate(3, RequestLogComponent_ng_template_3_Template, 50, 0, \"ng-template\", 2);\n        i0.ɵɵtemplate(4, RequestLogComponent_ng_template_4_Template, 14, 11, \"ng-template\", 3);\n        i0.ɵɵtemplate(5, RequestLogComponent_ng_template_5_Template, 3, 1, \"ng-template\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(6, \"p-toast\", 5)(7, \"p-toast\", 6)(8, \"p-confirmDialog\", 7);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.requestLogData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"scrollable\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(8, _c0))(\"globalFilterFields\", i0.ɵɵpureFunction0(9, _c1))(\"rowHover\", false);\n      }\n    },\n    dependencies: [i4.PrimeTemplate, i5.Table, i5.SortableColumn, i5.SelectableRow, i5.SortIcon, i5.ColumnFilter, i6.Dropdown, i7.Toast, i8.Panel, i9.ConfirmDialog, i10.NgControlStatus, i10.NgModel, i11.MatTooltip, i3.DatePipe],\n    styles: [\".ellipsis[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvSGVscGRlc2svd29yay1yZXF1ZXN0LWRldGFpbHMvd2lkZ2V0cy9yZXF1ZXN0LWxvZy9tb2RhbC9yZXF1ZXN0LWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmVsbGlwc2lze1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IFxuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IFxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MessageService","UtilConstant","i0","ɵɵelementStart","ɵɵlistener","RequestLogComponent_ng_template_3_ng_template_41_Template_p_dropdown_onChange_0_listener","$event","restoredCtx","ɵɵrestoreView","_r7","filter_r5","filterCallback","ɵɵresetView","value","ɵɵelementEnd","ɵɵproperty","value_r4","ctx_r3","enumWrStatus","ɵɵtext","ɵɵelement","ɵɵtemplate","RequestLogComponent_ng_template_3_ng_template_41_Template","requestLog_r8","ɵɵadvance","ɵɵtextInterpolate","requestId","userUserName","ɵɵpipeBind2","dateChanged","ctx_r1","convertToDisplayTime","timeChanged","getEnumById","status","ɵɵpropertyInterpolate","comments","ɵɵtextInterpolate1","ɵɵattribute","RequestLogComponent","constructor","enumsrv","wrSrv","datePipe","requestLogData","enumList","enumClonedList","enumWr","rowCount","ROW_COUNT","ngOnInit","loadEnums","getEnums","subscribe","res","map","x","Object","assign","filter","t","tableName","toLocaleUpperCase","fieldName","error","loadRequestLogData","getRequestLogByRequestId","sort","a","b","requestLogId","each","changedBy","formatedDateChanged","transform","enumKey","find","enumValue","data","split","time","_","ɵɵdirectiveInject","i1","EnumService","i2","AddWorkRequestService","i3","DatePipe","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","RequestLogComponent_Template","rf","ctx","RequestLogComponent_ng_template_3_Template","RequestLogComponent_ng_template_4_Template","RequestLogComponent_ng_template_5_Template","ɵɵpureFunction0","_c0","_c1"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/work-request-details/widgets/request-log/modal/request-log.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/work-request-details/widgets/request-log/modal/request-log.component.html"],"sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { EnumList } from 'src/app/model/enum-list.model';\nimport { Enums } from 'src/app/model/enums.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { AddWorkRequestService } from 'src/app/ui/Helpdesk/work-request/service/add-work-request.services';\nimport { UtilConstant } from 'src/common/UtilConstant';\n\n@Component({\n  selector: 'app-request-log',\n  templateUrl: './request-log.component.html',\n  styleUrls: ['./request-log.component.scss'],\n  providers: [MessageService]\n})\nexport class RequestLogComponent implements OnInit {\n  requestLogData:any[] = [];\n  enumList: EnumList[] = [];\n  enumClonedList: EnumList[] = [];\n  enumWr: EnumList[] = [];\n  enumWrStatus: EnumList[] = [];\n  rowCount: number = UtilConstant.ROW_COUNT;\n  constructor(\n    private enumsrv: EnumService,\n    private wrSrv: AddWorkRequestService,\n    private datePipe : DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.loadEnums();\n  }\n\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: EnumList[]) => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumWr = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'wr'.toLocaleUpperCase());\n        this.enumWrStatus = this.enumWr.filter(t => t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n        },\n     error => {\n     }\n    );\n  }\n\n  loadRequestLogData(requestId:any) {\n    this.wrSrv.getRequestLogByRequestId(requestId).subscribe((res:any) => {\n      this.requestLogData = res;\n      this.requestLogData = this.requestLogData.sort((a, b) => a.requestLogId - b.requestLogId);\n      this.requestLogData = this.requestLogData.map((each: any) =>{\n          if(each.changedBy === null){\n            return{\n              ...each,\n              userUserName : 'System',\n              formatedDateChanged : this.datePipe.transform(each.dateChanged, 'dd MMMM yyyy')\n            }\n          }else{\n            return {\n              ...each,\n              formatedDateChanged : this.datePipe.transform(each.dateChanged, 'dd MMMM yyyy')\n            };\n          }\n      } )\n    })\n  }\n \n  getEnumById(enumKey: any) {\n    return this.enumWrStatus.find((t: any) => t.enumKey === enumKey)?.enumValue\n  }\n\n  convertToDisplayTime(value: any) {\n    if (value != null) {\n      var data = value.split(':');\n      var time = data[0] + ':' + data[1];\n      return time;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n","<p-panel>\n    <div class=\"card\">\n        <p-table [value]=\"requestLogData\" [paginator]=\"true\" [rows]=\"rowCount\" [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [scrollable]=\"true\"\n            scrollDirection=\"both\" scrollHeight=\"500px\" [rowsPerPageOptions]=\"[5,10,25]\"\n            [globalFilterFields]=\"['','partCode','description']\"\n            styleClass=\"p-datatable-responsive-demo p-datatable-gridlines\" [rowHover]=\"false\">\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"requestId\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Request Code</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"requestId\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"requestId\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"userUserName\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Changed By</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"userUserName\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"userUserName\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"formatedDateChanged\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Date Changed</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"formatedDateChanged\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"formatedDateChanged\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"timeChanged\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Time Changed</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"timeChanged\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"timeChanged\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"status\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Status</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"status\"></p-sortIcon>\n                                <p-columnFilter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                                    <ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                                        <p-dropdown [ngModel]=\"value\" [options]=\"enumWrStatus\" optionLabel=\"enumValue\"\n                                            optionValue=\"enumKey\" (onChange)=\"filter($event.value)\"\n                                            placeholder=\"Select a Status\" [showClear]=\"true\"></p-dropdown>\n                                    </ng-template>\n                                </p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"comments\">\n                        <div class=\"grid-header-column\">\n                            <div class=\"grid-header-label\">\n                                <p class=\"grid-label-paragraph\">Comments</p>\n                            </div>\n                            <div class=\"grid-sort-icon\">\n                                <p-sortIcon field=\"comments\"></p-sortIcon>\n                                <p-columnFilter type=\"text\" field=\"comments\" display=\"menu\"></p-columnFilter>\n                            </div>\n                        </div>\n                    </th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-requestLog>\n                <tr [pSelectableRow]=\"requestLog\">\n                    <td>{{requestLog.requestId}}</td>\n                    <td>{{requestLog.userUserName}}</td>\n                    <td>{{requestLog.dateChanged | date :\"dd MMM yyyy\"}}</td>\n                    <td>{{convertToDisplayTime(requestLog.timeChanged)}}</td>\n                    <td>{{getEnumById(requestLog.status)}}</td>\n                    <td matTooltipPosition=\"below\" class=\"ellipsis\"  matTooltip=\"{{requestLog.comments}}\">\n                        {{requestLog.comments}}</td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\" let-columns>\n                <tr>\n                    <td [attr.colspan]=\"6\" style=\"text-align: center;\">\n                        No records found\n                    </td>\n                </tr>\n            </ng-template>\n        </p-table>\n    </div>\n</p-panel>\n<p-toast key=\"partSave\" position=\"top-right\"></p-toast>\n<p-toast key=\"partwarning\" position=\"top-center\"></p-toast>\n<p-confirmDialog key=\"partgrid\" header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}