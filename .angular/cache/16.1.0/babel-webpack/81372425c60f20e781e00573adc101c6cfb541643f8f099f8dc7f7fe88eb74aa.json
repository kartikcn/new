{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../provider/resources-provider\";\nimport * as i2 from \"../service/resources.service\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dropdown\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/panel\";\nimport * as i11 from \"primeng/confirmdialog\";\nimport * as i12 from \"primeng/paginator\";\nimport * as i13 from \"@angular/common\";\nfunction ResourcesComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ResourcesComponent_ng_template_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onAdd());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResourcesComponent_ng_template_5_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 33);\n    i0.ɵɵlistener(\"onChange\", function ResourcesComponent_ng_template_5_ng_template_26_Template_p_dropdown_onChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const filter_r7 = restoredCtx.filterCallback;\n      return i0.ɵɵresetView(filter_r7($event.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", value_r6)(\"options\", ctx_r5.enummTypeData)(\"showClear\", true);\n  }\n}\nfunction ResourcesComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 12);\n    i0.ɵɵelementStart(2, \"th\", 13)(3, \"div\", 14)(4, \"div\", 15)(5, \"p\", 16);\n    i0.ɵɵtext(6, \"Resource Title\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 17);\n    i0.ɵɵelement(8, \"p-sortIcon\", 18)(9, \"p-columnFilter\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 20)(11, \"div\", 14)(12, \"div\", 15)(13, \"p\", 16);\n    i0.ɵɵtext(14, \"Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 17);\n    i0.ɵɵelement(16, \"p-sortIcon\", 21)(17, \"p-columnFilter\", 22);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"th\", 23)(19, \"div\", 14)(20, \"div\", 15)(21, \"p\", 16);\n    i0.ɵɵtext(22, \"Type\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 17);\n    i0.ɵɵelement(24, \"p-sortIcon\", 24);\n    i0.ɵɵelementStart(25, \"p-columnFilter\", 25);\n    i0.ɵɵtemplate(26, ResourcesComponent_ng_template_5_ng_template_26_Template, 1, 3, \"ng-template\", 26);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(27, \"th\", 27)(28, \"div\", 14)(29, \"div\", 15)(30, \"p\", 16);\n    i0.ɵɵtext(31, \"Quantity\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 17);\n    i0.ɵɵelement(33, \"p-sortIcon\", 28)(34, \"p-columnFilter\", 29);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(35, \"th\", 30)(36, \"div\", 14)(37, \"div\", 15)(38, \"p\", 16);\n    i0.ɵɵtext(39, \"Cost Per unit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(40, \"div\", 17);\n    i0.ɵɵelement(41, \"p-sortIcon\", 31)(42, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ResourcesComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 34)(1, \"td\", 12)(2, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function ResourcesComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const resource_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onEdit(resource_r10.resourcesId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ResourcesComponent_ng_template_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const resource_r10 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onView(resource_r10.resourcesId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const resource_r10 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", resource_r10);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(resource_r10.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resource_r10.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.getTypeById(resource_r10.type));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(resource_r10.quanity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(14, 6, resource_r10.costPerUnit, \"GBP\", true));\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100];\n};\nexport let ResourcesComponent = /*#__PURE__*/(() => {\n  class ResourcesComponent {\n    constructor(resourcesProvider, service, enumsrv, messageService) {\n      this.resourcesProvider = resourcesProvider;\n      this.service = service;\n      this.enumsrv = enumsrv;\n      this.messageService = messageService;\n      this.resourcesData = [];\n      this.loading = false;\n      this.enumList = [];\n      this.enumUsers = [];\n      this.enummTypeData = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.totalElements = 0;\n      this.paginationObj = {\n        pageNo: 0,\n        pageSize: this.rowCount,\n        sortBy: [\"resourcesId\"],\n        sortOrder: \"ASC\"\n      };\n      this.filterCriteria = {};\n      this.isFiltered = false;\n      this.filterCriteriaList = [];\n    }\n    ngOnInit() {\n      this.loadEnums();\n      this.loadRecords();\n    }\n    loadRecords() {\n      this.loading = true;\n      //this.resourcesData = [];\n      let data = {\n        paginationDTO: this.paginationObj,\n        filterCriteria: this.filterCriteriaList\n      };\n      this.service.getResourcesPaginated(data).subscribe(res => {\n        if (res) {\n          this.loading = false;\n          this.isFiltered = false;\n          this.resourcesData = res.content ? res.content : [];\n          this.totalElements = res.totalElements ? res.totalElements : 0;\n        }\n      }, error => {\n        this.loading = false;\n      });\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res.map(x => Object.assign({}, x));\n        // this.enumUsers = this.enumList.filter(t => t.tableName.toLocaleUpperCase() === 'resources'.toLocaleUpperCase());\n        this.enummTypeData = this.enumList.filter(t => t.tableName.toLocaleUpperCase() === 'resources'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'resources_type'.toLocaleUpperCase());\n        // this.enummTypeData.unshift(new Enums(0, \"\", \"\", 'Make a selection'));\n      });\n    }\n\n    onAdd() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = false;\n      dialogConfig.width = '800px';\n      dialogConfig.data = {\n        isEdit: false,\n        newRecord: true\n      };\n      this.resourcesProvider.openDialog(dialogConfig);\n      this.resourcesProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result != null) {\n          this.messageService.add({\n            key: 'resourceGrid',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onEdit(id) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '800px';\n      dialogConfig.data = {\n        resourcesId: id,\n        isEdit: true,\n        newRecord: false\n      };\n      this.resourcesProvider.openDialog(dialogConfig);\n      this.resourcesProvider.onDialogueClosed.subscribe(result => {\n        this.messageService.clear();\n        if (result != null) {\n          this.messageService.add({\n            key: 'resourceGrid',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords();\n        }\n      });\n    }\n    onView(id) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '800px';\n      dialogConfig.data = {\n        resourcesId: id,\n        isView: true,\n        newRecord: false\n      };\n      this.resourcesProvider.openDialog(dialogConfig);\n      this.resourcesProvider.onDialogueClosed.subscribe(result => {});\n    }\n    getTypeById(id) {\n      return id ? this.enummTypeData.find(t => t.enumKey == id) != null ? this.enummTypeData.find(t => t.enumKey == id)?.enumValue : '' : '';\n    }\n    convertToTime(value) {\n      if (value != null) {\n        var currDate = new Date();\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        currDate.setHours(data[0]);\n        currDate.setMinutes(data[1]);\n        return time;\n      } else {\n        return null;\n      }\n    }\n    formatDate(date) {\n      if (date != null) {\n        var date = new Date(date);\n        var userTimezoneOffset = date.getTimezoneOffset() * 60000;\n        var a = new Date(date.getTime() - userTimezoneOffset);\n        return a;\n      } else {\n        return null;\n      }\n    }\n    onPageChange(event) {\n      const pageNo = event.first ? event.first / event.rows : 0;\n      const pageSize = event.rows;\n      this.paginationObj.pageNo = pageNo;\n      this.paginationObj.pageSize = pageSize;\n      this.loadRecords();\n    }\n    onInnerFilter(event) {\n      if (this.isFiltered) {\n        Object.keys(event.filters).forEach(field => {\n          const filterValue = event.filters[field][0].value;\n          const matchMode = event.filters[field][0].matchMode;\n          if (filterValue !== undefined) {\n            let filterCriteria = {\n              fieldName: field,\n              value: filterValue,\n              matchMode: matchMode\n            };\n            this.updateFilterCriteriaList(filterCriteria);\n          }\n        });\n        this.paginationObj.pageNo = 0;\n        this.loadRecords();\n      }\n      this.isFiltered = true;\n    }\n    updateFilterCriteriaList(filterCriteria) {\n      let index = this.filterCriteriaList.findIndex(item => item.fieldName === filterCriteria['fieldName']);\n      if (filterCriteria['value'] == null) {\n        if (index !== -1) {\n          this.filterCriteriaList.splice(index, 1);\n        }\n      } else {\n        if (index !== -1) {\n          this.filterCriteriaList[index] = filterCriteria;\n        } else {\n          this.filterCriteriaList.push(filterCriteria);\n        }\n      }\n    }\n    static #_ = this.ɵfac = function ResourcesComponent_Factory(t) {\n      return new (t || ResourcesComponent)(i0.ɵɵdirectiveInject(i1.resourcesDialogueProvider), i0.ɵɵdirectiveInject(i2.ResourcesService), i0.ɵɵdirectiveInject(i3.EnumService), i0.ɵɵdirectiveInject(i4.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResourcesComponent,\n      selectors: [[\"app-resources\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 11,\n      vars: 11,\n      consts: [[1, \"card\", 2, \"height\", \"92vh\"], [\"header\", \"Resources Details\"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", 3, \"value\", \"paginator\", \"rows\", \"scrollable\", \"rowHover\", \"onFilter\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [1, \"paginator\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", 3, \"rows\", \"totalRecords\", \"first\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"onPageChange\"], [\"key\", \"resourceGrid\", \"position\", \"top-right\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"title\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"title\"], [\"type\", \"text\", \"field\", \"title\", \"display\", \"menu\"], [\"pSortableColumn\", \"description\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [\"pSortableColumn\", \"type\"], [\"field\", \"type\"], [\"field\", \"type\", \"matchMode\", \"equals\", \"display\", \"menu\"], [\"pTemplate\", \"filter\"], [\"pSortableColumn\", \"quanity\"], [\"field\", \"quanity\"], [\"type\", \"numeric\", \"field\", \"quanity\", \"display\", \"menu\"], [\"pSortableColumn\", \"costPerUnit\"], [\"field\", \"costPerUnit\"], [\"type\", \"numeric\", \"field\", \"costPerUnit\", \"display\", \"menu\"], [\"optionLabel\", \"enumValue\", \"optionValue\", \"enumKey\", \"placeholder\", \"Select a Type\", 3, \"ngModel\", \"options\", \"showClear\", \"onChange\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-eye\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", 3, \"click\"]],\n      template: function ResourcesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1);\n          i0.ɵɵtemplate(2, ResourcesComponent_ng_template_2_Template, 1, 0, \"ng-template\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"p-table\", 4);\n          i0.ɵɵlistener(\"onFilter\", function ResourcesComponent_Template_p_table_onFilter_4_listener($event) {\n            return ctx.onInnerFilter($event);\n          });\n          i0.ɵɵtemplate(5, ResourcesComponent_ng_template_5_Template, 43, 0, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, ResourcesComponent_ng_template_6_Template, 15, 10, \"ng-template\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 7)(8, \"p-paginator\", 8);\n          i0.ɵɵlistener(\"onPageChange\", function ResourcesComponent_Template_p_paginator_onPageChange_8_listener($event) {\n            return ctx.onPageChange($event);\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(9, \"p-toast\", 9)(10, \"p-confirmDialog\", 10);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.resourcesData)(\"paginator\", false)(\"rows\", ctx.rowCount)(\"scrollable\", true)(\"rowHover\", false);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"rows\", ctx.rowCount)(\"totalRecords\", ctx.totalElements)(\"first\", ctx.paginationObj.pageNo * ctx.paginationObj.pageSize)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i5.NgControlStatus, i5.NgModel, i4.PrimeTemplate, i6.Table, i6.SortableColumn, i6.SelectableRow, i6.SortIcon, i6.ColumnFilter, i7.ButtonDirective, i8.Dropdown, i9.Toast, i10.Panel, i11.ConfirmDialog, i12.Paginator, i13.CurrencyPipe]\n    });\n  }\n  return ResourcesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}