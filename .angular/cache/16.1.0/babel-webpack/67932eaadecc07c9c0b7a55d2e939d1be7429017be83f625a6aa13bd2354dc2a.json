{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport let AppParamsService = /*#__PURE__*/(() => {\n  class AppParamsService {\n    constructor(AppParamsSrv, AppParamsSaveSrv) {\n      this.AppParamsSrv = AppParamsSrv;\n      this.AppParamsSaveSrv = AppParamsSaveSrv;\n      this.EVENT = \"\";\n      this.API_NAME = \"ap\";\n    }\n    getAppParamById(id) {\n      this.EVENT = \"get\";\n      return this.AppParamsSrv.getSingleById(this.API_NAME, this.EVENT, id);\n    }\n    getAppParamByCode(id) {\n      this.EVENT = \"getByCode\";\n      return this.AppParamsSrv.getSingleById(this.API_NAME, this.EVENT, id);\n    }\n    getAllAppParams() {\n      this.EVENT = \"all\";\n      return this.AppParamsSrv.getAll(this.API_NAME, this.EVENT);\n    }\n    getAllAppParamsPaginated(data) {\n      this.EVENT = \"allPaginated\";\n      return this.AppParamsSrv.search(this.API_NAME, this.EVENT, data);\n    }\n    saveAppParam(data) {\n      this.EVENT = \"save\";\n      return this.AppParamsSaveSrv.add(this.API_NAME, this.EVENT, data);\n    }\n    deleteAppParamById(data) {\n      this.EVENT = \"delete\";\n      return this.AppParamsSrv.deleteById(this.API_NAME, this.EVENT, data);\n    }\n    checkAppParamExists(item) {\n      this.EVENT = \"check\";\n      return this.AppParamsSrv.getSingle(this.API_NAME, this.EVENT, item);\n    }\n    getAppParamByParamId(id) {\n      this.EVENT = \"getbyparamid\";\n      return this.AppParamsSrv.getSingleById(this.API_NAME, this.EVENT, id);\n    }\n    static #_ = this.ɵfac = function AppParamsService_Factory(t) {\n      return new (t || AppParamsService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppParamsService,\n      factory: AppParamsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AppParamsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}