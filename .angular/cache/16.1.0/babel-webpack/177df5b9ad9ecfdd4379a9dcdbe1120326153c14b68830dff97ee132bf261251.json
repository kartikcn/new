{"ast":null,"code":"import { forwardRef, EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { Enums } from 'src/app/model/enums.model';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { Craftsperson } from 'src/app/ui/Helpdesk/craftsperson/model/craftsperson.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/enum.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/users.service\";\nimport * as i4 from \"src/app/services/auth.service\";\nimport * as i5 from \"src/app/ui/employee/services/employee.service\";\nimport * as i6 from \"src/app/ui/Helpdesk/craftsperson/services/craftsperson.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ng-select/ng-select\";\nimport * as i9 from \"primeng/checkbox\";\nimport * as i10 from \"ng-zorro-antd/table\";\nimport * as i11 from \"ng-zorro-antd/form\";\nimport * as i12 from \"../../../../directive/directive/trim-input.directive\";\nfunction AddUserComponent_form_0_tr_13_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 17);\n    i0.ɵɵtext(1, \"User Name is already exists \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_form_0_tr_13_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 17);\n    i0.ɵɵtext(1, \"Please enter valid Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUserComponent_form_0_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 15);\n    i0.ɵɵtemplate(2, AddUserComponent_form_0_tr_13_label_2_Template, 2, 0, \"label\", 16);\n    i0.ɵɵtemplate(3, AddUserComponent_form_0_tr_13_label_3_Template, 2, 0, \"label\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"td\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r3.userFormPanel.controls[\"userName\"] == null ? null : ctx_r3.userFormPanel.controls[\"userName\"].errors.required) && !(ctx_r3.userFormPanel.controls[\"userName\"] == null ? null : ctx_r3.userFormPanel.controls[\"userName\"].errors.email));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.userFormPanel.controls[\"userName\"] == null ? null : ctx_r3.userFormPanel.controls[\"userName\"].errors.email);\n  }\n}\nfunction AddUserComponent_form_0_div_22_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"input\", 20);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction AddUserComponent_form_0_div_22_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ng-select\", 21);\n    i0.ɵɵlistener(\"change\", function AddUserComponent_form_0_div_22_ng_template_4_Template_ng_select_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r11.onSelectEmploye($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r10.enumEmp)(\"searchable\", true);\n  }\n}\nfunction AddUserComponent_form_0_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"label\", 8);\n    i0.ɵɵtext(2, \"Employee Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AddUserComponent_form_0_div_22_ng_container_3_Template, 2, 0, \"ng-container\", 18);\n    i0.ɵɵtemplate(4, AddUserComponent_form_0_div_22_ng_template_4_Template, 1, 3, \"ng-template\", null, 19, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(5);\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.isCreateNewEmployee)(\"ngIfElse\", _r9);\n  }\n}\nfunction AddUserComponent_form_0_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 22)(2, \"p-checkbox\", 23);\n    i0.ɵɵlistener(\"onChange\", function AddUserComponent_form_0_div_30_Template_p_checkbox_onChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onCheckBoxChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 24);\n    i0.ɵɵtext(4, \"Create new employee\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"control-label\": a0\n  };\n};\nfunction AddUserComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 2)(1, \"table\", 3)(2, \"tr\")(3, \"td\", 4)(4, \"div\", 5)(5, \"label\", 6);\n    i0.ɵɵtext(6, \"User Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\", 4)(9, \"div\", 5)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"User Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"ng-select\", 9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(13, AddUserComponent_form_0_tr_13_Template, 5, 2, \"tr\", 10);\n    i0.ɵɵelementStart(14, \"tr\")(15, \"td\", 4)(16, \"div\", 5)(17, \"label\", 8);\n    i0.ɵɵtext(18, \"User Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"ng-select\", 11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"tr\")(21, \"td\", 4);\n    i0.ɵɵtemplate(22, AddUserComponent_form_0_div_22_Template, 6, 2, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\", 4)(24, \"div\", 5)(25, \"label\", 13);\n    i0.ɵɵtext(26, \"Technician Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"ng-select\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"tr\")(29, \"td\", 4);\n    i0.ɵɵtemplate(30, AddUserComponent_form_0_div_30_Template, 5, 0, \"div\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"tr\");\n    i0.ɵɵelement(32, \"td\", 4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.userFormPanel);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx_r0.isNew));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"readonly\", ctx_r0.isNew == true ? null : true);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumStatus)(\"searchable\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.userFormPanel.controls[\"userName\"].errors && ctx_r0.userFormPanel.controls[\"userName\"].invalid);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.enumRole)(\"searchable\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isShow);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx_r0.technicianData)(\"searchable\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isCreateNewEmployeeChkBox);\n  }\n}\nfunction AddUserComponent_ng_template_1_Template(rf, ctx) {}\nexport class AddUserComponent {\n  constructor(enumsrv, formBuilder, userSrv, authSrv, emSrv, technicianServ) {\n    this.enumsrv = enumsrv;\n    this.formBuilder = formBuilder;\n    this.userSrv = userSrv;\n    this.authSrv = authSrv;\n    this.emSrv = emSrv;\n    this.technicianServ = technicianServ;\n    this.subscriptions = [];\n    this.newRecord = true;\n    this.enumList = [];\n    this.enumClonedList = [];\n    this.enumUsers = [];\n    this.enumStatus = [];\n    this.enumRole = [];\n    this.user_name_exists = false;\n    this.enumEmp = [];\n    this.isCreateNewEmployee = true;\n    this.isCreateNewEmployeeChkBox = false;\n    this.isShow = false;\n    this.isCompanyShow = false;\n    this.technicianData = [];\n    this.isProfile = false;\n    this.notifyParent = new EventEmitter();\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    /// Start Of Building Form \n    this.userFormPanel = this.formBuilder.group({\n      userId: [null],\n      userName: ['', [Validators.required, this.checkUserExistsValidator(), Validators.email]],\n      userStatus: ['', [Validators.required]],\n      userRoleId: ['', [Validators.required]],\n      deviceId: [''],\n      ipAddress: [''],\n      emId: ['', [Validators.required]],\n      technicianId: ['']\n    });\n    // End Of Building Form\n    this.subscriptions.push(\n    // any time the inner form changes update the parent of any change\n    this.userFormPanel.valueChanges.subscribe(value => {\n      this.onChange(value);\n      this.onTouched();\n    }));\n  }\n  ngOnInit() {\n    this.user_name_exists = false;\n    this.loadEnums();\n    this.loadUserRoles();\n    // this.setComp();\n    const id = 0;\n    this.loadUnAssignedTechnician(id);\n    this.loadUnAssignEmployee(id);\n  }\n  setComp() {\n    // const compId = this.authSrv.getLoggedInUserCompId();\n    // if (compId == 1){\n    //   this.isCompanyShow = true;\n    //   this.loadCompany();\n    // }\n    // setTimeout(() => {\n    //   this.userFormPanel.patchValue({\n    //     compId: compId\n    //   });\n    // }, 0);\n  }\n  // loadCompany(){\n  //   this.compSrv.getAllCompany().subscribe((res:CompanyInput[])=>{\n  //     this.enumCompany = res;\n  //   })\n  // }\n  loadUserRoles() {\n    this.userSrv.getUserRole().subscribe(res => {\n      this.enumRole = res;\n    });\n  }\n  /// Start Of Form Validation Related Code\n  isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  getValidationErrors() {\n    const validationErros = [];\n    Object.keys(this.userFormPanel.controls).forEach(key => {\n      let field = this.userFormPanel.get(key);\n      const controlErrors = field != null ? field.errors : null;\n      if (controlErrors != null) {\n        Object.keys(controlErrors).forEach(keyError => {\n          validationErros.push(new VaildationError(key, keyError, controlErrors[keyError]));\n        });\n      }\n    });\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n  /// Start Of Reference Data Initiation\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(res => {\n      this.enumList = res;\n      this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n      this.enumUsers = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'fm_users'.toLocaleUpperCase());\n      this.enumStatus = this.enumUsers.filter(t => t.fieldName.toLocaleUpperCase() === 'user_status'.toLocaleUpperCase());\n      this.enumStatus.unshift(new Enums(null, \"\", \"\", 'Make a selection'));\n      this.populateUserStatus();\n    }, error => {\n      // this.loginError = error.errorDesc;\n    });\n  }\n  populateUserStatus() {\n    if (this.isNew) {\n      setTimeout(() => {\n        this.userFormPanel.patchValue({\n          userStatus: 1\n        });\n      }, 0);\n    }\n  }\n  checkUserExistsValidator() {\n    return control => {\n      if (control.value !== undefined && control.value != null && control.value.length > 1 && this.isNew) {\n        this.userFormPanel.controls['userName'].setErrors(null);\n        this.userFormPanel.clearAsyncValidators();\n        this.userFormPanel.updateValueAndValidity();\n        this.userSrv.validateUserName(control.value).subscribe(res => {\n          if (res && res.text == \"true\") {\n            this.userFormPanel.controls['userName'].setErrors({\n              'incorrect': true\n            });\n            this.userFormPanel.updateValueAndValidity();\n            return {\n              'incorrect': true\n            };\n          } else {\n            return null;\n          }\n        });\n      }\n      return null;\n    };\n  }\n  /// Start Preparing Entered Data Model\n  get value() {\n    const records = {\n      userId: this.userFormPanel.controls.userId.value,\n      userName: this.userFormPanel.controls.userName.value,\n      userStatus: this.userFormPanel.controls.userStatus.value,\n      userRoleId: this.userFormPanel.controls.userRoleId.value,\n      deviceId: this.userFormPanel.controls.deviceId.value,\n      ipAddress: this.userFormPanel.controls.ipAddress.value,\n      emId: this.userFormPanel.controls.emId.value,\n      compId: this.authSrv.getLoggedInUserCompId(),\n      technicianId: this.userFormPanel.controls.technicianId.value\n    };\n    return records;\n  }\n  set value(value) {\n    setTimeout(() => {\n      this.userFormPanel.patchValue({\n        userName: value.userName,\n        userId: value.userId,\n        userStatus: value.userStatus,\n        userRoleId: value.userRoleId,\n        deviceId: value.deviceId,\n        ipAddress: value.ipAddress,\n        emId: value.emId,\n        compId: value.compId,\n        technicianId: value.technicianId\n      });\n      this.isCreateEmp(value.emId);\n      this.loadUnAssignEmployee(value.emId ? value.emId : 0);\n      this.setComp();\n      this.onChange(value);\n      this.onTouched();\n    }, 0);\n  }\n  writeValue(value) {\n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.userFormPanel.reset();\n      this.isCreateEmp(null);\n      this.loadUnAssignEmployee(0);\n    }\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  // communicate the inner form validation to the parent form\n  validate(_) {\n    return this.userFormPanel.valid ? null : {\n      userFormPanel: {\n        valid: false\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n  onCheckBoxChange(event) {\n    this.isShow = event.checked ? true : false;\n    if (this.isShow) {\n      this.userFormPanel.patchValue({\n        \"emId\": \"0\"\n      });\n    } else {\n      this.userFormPanel.patchValue({\n        \"emId\": \"\"\n      });\n    }\n    this.notifyParentPanel(this.isShow, \"0\");\n  }\n  notifyParentPanel(isShow, em_id) {\n    let data = {\n      \"showEmpPanel\": isShow,\n      \"em_id\": em_id\n    };\n    this.notifyParent.emit(data);\n  }\n  onChangeEmp(isShow, em_id) {\n    this.notifyParentPanel(isShow, em_id);\n  }\n  isCreateEmp(em_id) {\n    if (em_id != null) {\n      this.isCreateNewEmployeeChkBox = false;\n    } else {\n      this.isCreateNewEmployeeChkBox = this.isCreateNewEmployee = true;\n    }\n  }\n  loadUnAssignEmployee(emId) {\n    this.emSrv.getAllUnAssignEmployees(emId).subscribe(res => {\n      this.enumEmp = res;\n      //   this.enumEmp =  this.enumEmp.map(i=>{i.name = i.emCode + \" - \"+ i.name; return i;});\n      this.enumEmp.unshift({\n        id: null,\n        name: 'Make a selection'\n      });\n    });\n  }\n  onSelectEmploye(event) {\n    if (event && event.id != null) {\n      this.onChangeEmp(true, event.id);\n      this.isCreateNewEmployeeChkBox = false;\n    } else {\n      this.isCreateNewEmployeeChkBox = true;\n      this.onChangeEmp(false, \"0\");\n    }\n  }\n  loadUnAssignedTechnician(technicianId) {\n    this.technicianServ.getUnAssignedTechnician(technicianId).subscribe(res => {\n      if (res) {\n        this.technicianData = res;\n        this.technicianData.unshift(new Craftsperson(null, \"Make a selection\", \"\", \"\", 0, 0, 0, \"\", 0, 0, 0, 0, 0, \"\"));\n      } else {\n        this.technicianData = [];\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AddUserComponent_Factory(t) {\n    return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.EnumService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.UsersService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.EmployeeService), i0.ɵɵdirectiveInject(i6.CraftspersonService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddUserComponent,\n    selectors: [[\"app-add-user-items\"]],\n    inputs: {\n      isNew: \"isNew\",\n      isProfile: \"isProfile\"\n    },\n    outputs: {\n      notifyParent: \"notifyParent\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddUserComponent),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddUserComponent),\n      multi: true\n    }])],\n    decls: 3,\n    vars: 2,\n    consts: [[\"nz-form\", \"\", 3, \"formGroup\", 4, \"ngIf\", \"ngIfElse\"], [\"profiletemplate\", \"\"], [\"nz-form\", \"\", 3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"50%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\", 3, \"ngClass\"], [\"type\", \"text\", \"name\", \"userName\", \"formControlName\", \"userName\", \"maxlength\", \"64\", \"appTrimInput\", \"\", 1, \"form-control\", 3, \"readonly\"], [1, \"form-field-lable\", \"control-label\"], [\"appendTo\", \"body\", \"formControlName\", \"userStatus\", \"bindLabel\", \"enumValue\", \"bindValue\", \"enumKey\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [4, \"ngIf\"], [\"appendTo\", \"body\", \"formControlName\", \"userRoleId\", \"bindLabel\", \"roleTitle\", \"bindValue\", \"userRoleId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"class\", \"input-label-custom \", 4, \"ngIf\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"technicianId\", \"bindLabel\", \"name\", \"bindValue\", \"cfId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"width\", \"calc(100% / 2)\"], [\"class\", \"form-field-lable\", \"style\", \"color:red;\", 4, \"ngIf\"], [1, \"form-field-lable\", 2, \"color\", \"red\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseTemplate\", \"\"], [\"type\", \"text\", \"name\", \"emId\", \"formControlName\", \"emId\", \"readonly\", \"true\", 1, \"form-control\"], [\"appendTo\", \"body\", \"formControlName\", \"emId\", \"bindLabel\", \"name\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\", \"change\"], [1, \"p-field-checkbox\"], [\"binary\", \"true\", 3, \"onChange\"], [1, \"checkbox-custom-label\", 2, \"margin-left\", \"2px\", \"font-style\", \"italic\"]],\n    template: function AddUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddUserComponent_form_0_Template, 33, 17, \"form\", 0);\n        i0.ɵɵtemplate(1, AddUserComponent_ng_template_1_Template, 0, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isProfile == false)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i7.NgClass, i7.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i8.NgSelectComponent, i9.Checkbox, i10.NzTableCellDirective, i10.NzTrDirective, i11.NzFormDirective, i12.TrimInputDirective],\n    styles: [\".form-field-lable[_ngcontent-%COMP%] {\\n    font-size: 11px;\\n    margin-bottom: 0px;\\n    font-weight: 500;\\n  }\\n  .form-control[_ngcontent-%COMP%] {\\n    margin-top: -3px;\\n    padding-left: 5px;\\n  }\\n\\n  \\n  [_ngcontent-%COMP%]::placeholder { \\n\\n    color: #555;\\n    opacity: 1; \\n\\n  }\\n  \\n  [_ngcontent-%COMP%]:-ms-input-placeholder { \\n\\n    color: #555;\\n  }\\n  \\n  [_ngcontent-%COMP%]::-ms-input-placeholder { \\n\\n    color: #555;\\n  }\\n  \\n  \\n\\n  \\n  .ng-select.ng-select-single[_ngcontent-%COMP%]   .ng-select-container[_ngcontent-%COMP%] {\\n  border-radius: 0px !important;\\n  }\\n  \\n  .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\\n    color: white;\\n    letter-spacing: 1px;\\n  }\\n  .mat-card[_ngcontent-%COMP%] {\\n    padding: 0px;\\n    border: thin double rgb(181, 155, 90);\\n  }\\n  .mat-card-title[_ngcontent-%COMP%] {\\n    color: white;\\n    letter-spacing: 1px;\\n    font-size: 13px;\\n    margin: 0px !important;\\n  }\\n  .mat-card-header-text[_ngcontent-%COMP%] {\\n    margin: 0px !important;\\n  }\\n  .mat-card-header[_ngcontent-%COMP%]\\n  {\\n    padding: 5px !important;\\n    margin-left: -15px;\\n  }\\n  \\n  .action-buttons[_ngcontent-%COMP%] {\\n    height: 30px;\\n    width: 70px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdWkvdXNlci93aWRnZXRzL2FkZC11c2VyLWl0ZW0vYWRkLXVzZXItaXRlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEI7RUFDQTtJQUNFLGdCQUFnQjtJQUNoQixpQkFBaUI7RUFDbkI7OztFQUdBLGdCQUFnQix5Q0FBeUM7SUFDdkQsV0FBVztJQUNYLFVBQVUsRUFBRSxZQUFZO0VBQzFCOztFQUVBLHlCQUF5Qiw0QkFBNEI7SUFDbkQsV0FBVztFQUNiOztFQUVBLDBCQUEwQixtQkFBbUI7SUFDM0MsV0FBVztFQUNiOzs7OztFQUtBO0VBQ0EsNkJBQTZCO0VBQzdCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLG1CQUFtQjtFQUNyQjtFQUNBO0lBQ0UsWUFBWTtJQUNaLHFDQUFxQztFQUN2QztFQUNBO0lBQ0UsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2Ysc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSxzQkFBc0I7RUFDeEI7RUFDQTs7SUFFRSx1QkFBdUI7SUFDdkIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLFdBQVc7RUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWZpZWxkLWxhYmxlIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cbiAgLmZvcm0tY29udHJvbCB7XG4gICAgbWFyZ2luLXRvcDogLTNweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgfVxuXG4gIFxuICA6OnBsYWNlaG9sZGVyIHsgLyogQ2hyb21lLCBGaXJlZm94LCBPcGVyYSwgU2FmYXJpIDEwLjErICovXG4gICAgY29sb3I6ICM1NTU7XG4gICAgb3BhY2l0eTogMTsgLyogRmlyZWZveCAqL1xuICB9XG4gIFxuICA6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHsgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTAtMTEgKi9cbiAgICBjb2xvcjogIzU1NTtcbiAgfVxuICBcbiAgOjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBNaWNyb3NvZnQgRWRnZSAqL1xuICAgIGNvbG9yOiAjNTU1O1xuICB9XG4gIFxuICBcblxuICBcbiAgLm5nLXNlbGVjdC5uZy1zZWxlY3Qtc2luZ2xlIC5uZy1zZWxlY3QtY29udGFpbmVyIHtcbiAgYm9yZGVyLXJhZGl1czogMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbiAgXG4gIC5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci10aXRsZSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIH1cbiAgLm1hdC1jYXJkIHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgYm9yZGVyOiB0aGluIGRvdWJsZSByZ2IoMTgxLCAxNTUsIDkwKTtcbiAgfVxuICAubWF0LWNhcmQtdGl0bGUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBtYXJnaW46IDBweCAhaW1wb3J0YW50O1xuICB9XG4gIC5tYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gICAgbWFyZ2luOiAwcHggIWltcG9ydGFudDtcbiAgfVxuICAubWF0LWNhcmQtaGVhZGVyXG4gIHtcbiAgICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDtcbiAgICBtYXJnaW4tbGVmdDogLTE1cHg7XG4gIH1cbiAgXG4gIC5hY3Rpb24tYnV0dG9ucyB7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiA3MHB4O1xuICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["forwardRef","EventEmitter","Validators","NG_VALUE_ACCESSOR","NG_VALIDATORS","Enums","VaildationError","Craftsperson","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddUserComponent_form_0_tr_13_label_2_Template","AddUserComponent_form_0_tr_13_label_3_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r3","userFormPanel","controls","errors","required","email","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵlistener","AddUserComponent_form_0_div_22_ng_template_4_Template_ng_select_change_0_listener","$event","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","onSelectEmploye","ctx_r10","enumEmp","AddUserComponent_form_0_div_22_ng_container_3_Template","AddUserComponent_form_0_div_22_ng_template_4_Template","ɵɵtemplateRefExtractor","ctx_r4","isCreateNewEmployee","_r9","AddUserComponent_form_0_div_30_Template_p_checkbox_onChange_2_listener","_r14","ctx_r13","onCheckBoxChange","AddUserComponent_form_0_tr_13_Template","AddUserComponent_form_0_div_22_Template","AddUserComponent_form_0_div_30_Template","ctx_r0","ɵɵpureFunction1","_c0","isNew","enumStatus","invalid","enumRole","isShow","technicianData","isCreateNewEmployeeChkBox","AddUserComponent","constructor","enumsrv","formBuilder","userSrv","authSrv","emSrv","technicianServ","subscriptions","newRecord","enumList","enumClonedList","enumUsers","user_name_exists","isCompanyShow","isProfile","notifyParent","onChange","onTouched","group","userId","userName","checkUserExistsValidator","userStatus","userRoleId","deviceId","ipAddress","emId","technicianId","push","valueChanges","subscribe","value","ngOnInit","loadEnums","loadUserRoles","id","loadUnAssignedTechnician","loadUnAssignEmployee","setComp","getUserRole","res","isValid","getValidationErrors","length","validationErros","Object","keys","forEach","key","field","get","controlErrors","keyError","getEnums","map","x","assign","filter","t","tableName","toLocaleUpperCase","fieldName","unshift","populateUserStatus","error","setTimeout","patchValue","control","undefined","setErrors","clearAsyncValidators","updateValueAndValidity","validateUserName","text","records","compId","getLoggedInUserCompId","isCreateEmp","writeValue","reset","registerOnChange","fn","registerOnTouched","validate","_","valid","ngOnDestroy","s","unsubscribe","event","checked","notifyParentPanel","em_id","data","emit","onChangeEmp","getAllUnAssignEmployees","name","getUnAssignedTechnician","ɵɵdirectiveInject","i1","EnumService","i2","UntypedFormBuilder","i3","UsersService","i4","AuthService","i5","EmployeeService","i6","CraftspersonService","_2","selectors","inputs","outputs","features","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","AddUserComponent_Template","rf","ctx","AddUserComponent_form_0_Template","AddUserComponent_ng_template_1_Template","_r1"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/user/widgets/add-user-item/add-user-item.component.ts","/home/admin7/Documents/fms_frontend/src/app/ui/user/widgets/add-user-item/add-user-item.component.html"],"sourcesContent":["import { Component, forwardRef, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators, ValidationErrors, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, UntypedFormControl, NG_VALIDATORS} from '@angular/forms';\nimport { Enums } from 'src/app/model/enums.model';\nimport { EnumService } from 'src/app/services/enum.service';\nimport { VaildationError } from 'src/app/model/vaildationerror.model';\nimport { UserOutput } from '../../model/userOutput.model';\nimport { UsersService } from 'src/app/services/users.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { EmployeeService } from 'src/app/ui/employee/services/employee.service';\nimport { Craftsperson } from 'src/app/ui/Helpdesk/craftsperson/model/craftsperson.model';\nimport { CraftspersonService } from 'src/app/ui/Helpdesk/craftsperson/services/craftsperson.service';\n\n\ndeclare var $: any;\n@Component({\n  selector: 'app-add-user-items',\n  templateUrl: './add-user-item.component.html',\n  styleUrls: ['./add-user-item.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AddUserComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AddUserComponent),\n      multi: true\n    }\n  ]\n})\nexport class AddUserComponent implements ControlValueAccessor, OnDestroy {\n\n  userFormPanel: UntypedFormGroup;\n  subscriptions: Subscription[] = [];\n  newRecord:boolean=true;\n\n  enumList: Enums[] = [];\n  enumClonedList: Enums[] = [];\n  enumUsers: Enums[] = [];\n  enumStatus: Enums[] = [];\n  enumRole: any[] = [];\n  user_name_exists:boolean=false;\n  enumEmp:any[]=[];\n  isCreateNewEmployee: boolean = true;\n  isCreateNewEmployeeChkBox:boolean=false;\n  isShow:boolean=false;\n  isCompanyShow = false;\n  technicianData: any[]=[];\n  \n @Input() isNew!:boolean;\n  @Input() isProfile:boolean=false;\n  @Output() notifyParent = new EventEmitter();\n  \n  constructor(\n    private enumsrv: EnumService,\n    private formBuilder: UntypedFormBuilder,\n    private userSrv: UsersService,\n    private authSrv:AuthService,\n    private emSrv:EmployeeService,\n    private technicianServ: CraftspersonService\n\n    \n  ) {\n    /// Start Of Building Form \n    this.userFormPanel = this.formBuilder.group({\n      userId: [null],\n      userName: ['', [Validators.required, this.checkUserExistsValidator(),Validators.email]],\n      userStatus: ['',[Validators.required]],\n      userRoleId: ['', [Validators.required]],\n      deviceId: ['', ],\n      ipAddress: [''],\n      emId: ['', [Validators.required]],\n      technicianId: ['']\n    });\n    \n    // End Of Building Form\n    this.subscriptions.push(\n      // any time the inner form changes update the parent of any change\n      this.userFormPanel.valueChanges.subscribe(value => {\n        this.onChange(value);\n        this.onTouched();\n      })\n    );\n  }\n\n  \n  \n  ngOnInit() {\n    this.user_name_exists = false;\n    this.loadEnums();\n    this.loadUserRoles();\n   // this.setComp();\n    const id = 0;\n    this.loadUnAssignedTechnician(id);\n    this.loadUnAssignEmployee(id);\n\n  }\n  setComp(){\n    // const compId = this.authSrv.getLoggedInUserCompId();\n    // if (compId == 1){\n    //   this.isCompanyShow = true;\n    //   this.loadCompany();\n    // }\n    // setTimeout(() => {\n    //   this.userFormPanel.patchValue({\n    //     compId: compId\n    //   });\n    // }, 0);\n  }\n  // loadCompany(){\n  //   this.compSrv.getAllCompany().subscribe((res:CompanyInput[])=>{\n  //     this.enumCompany = res;\n      \n  //   })\n  // }\n  loadUserRoles(): void {\n    this.userSrv.getUserRole().subscribe((res: any) => {\n      this.enumRole = res;\n    });\n  }\n\n   /// Start Of Form Validation Related Code\n  public isValid() {\n    return this.getValidationErrors().length === 0;\n  }\n  \n  public getValidationErrors() {\n    const validationErros: VaildationError[] = [];\n    Object.keys(this.userFormPanel.controls).forEach(key => {\n      let field = this.userFormPanel.get(key);\n      const controlErrors: ValidationErrors | null = field != null ? field.errors : null;\n      if (controlErrors != null) {\n            Object.keys(controlErrors).forEach(keyError => {\n            validationErros.push(new VaildationError(key, keyError, controlErrors[keyError]));\n          });\n        }\n      });\n    return validationErros;\n  }\n  /// End Of Form Validation Related Code\n\n  /// Start Of Reference Data Initiation\n  loadEnums() {\n    this.enumList = [];\n    this.enumsrv.getEnums().subscribe(\n      (res: Enums[]) => {\n        this.enumList = res;\n        this.enumClonedList =  this.enumList.map(x => Object.assign({}, x));\n        this.enumUsers = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'fm_users'.toLocaleUpperCase());\n        this.enumStatus = this.enumUsers.filter(t => t.fieldName.toLocaleUpperCase() === 'user_status'.toLocaleUpperCase());\n\n        this.enumStatus.unshift(new Enums(null, \"\", \"\", 'Make a selection'));\n        this.populateUserStatus();\n        \n      },\n      error => {\n        // this.loginError = error.errorDesc;\n      }\n    );\n  }\n  populateUserStatus():void{\n    if(this.isNew){\n      setTimeout(() => {\n        this.userFormPanel.patchValue({\n          userStatus: 1\n        });\n      }, 0);\n    }\n  }\n\n  checkUserExistsValidator(): ValidatorFn {\n\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined && control.value != null && control.value.length > 1 && this.isNew) {\n        this.userFormPanel.controls['userName'].setErrors(null);\n        this.userFormPanel.clearAsyncValidators();\n        this.userFormPanel.updateValueAndValidity();\n        this.userSrv.validateUserName(control.value).subscribe((res:any)=>{\n          if (res && res.text == \"true\"){\n            this.userFormPanel.controls['userName'].setErrors({ 'incorrect': true });\n            this.userFormPanel.updateValueAndValidity();\n            return { 'incorrect': true };\n          }\n          else{\n            return null;\n          }\n        });\n        \n      }\n      return null;\n    };\n  }\n\n  /// Start Preparing Entered Data Model\n  get value(): UserOutput {\n    const records: UserOutput = {\n      userId: this.userFormPanel.controls.userId.value,\n      userName: this.userFormPanel.controls.userName.value,\n      userStatus: this.userFormPanel.controls.userStatus.value,\n      userRoleId: this.userFormPanel.controls.userRoleId.value,\n      deviceId: this.userFormPanel.controls.deviceId.value,\n      ipAddress: this.userFormPanel.controls.ipAddress.value,\n      emId: this.userFormPanel.controls.emId.value,\n      compId: this.authSrv.getLoggedInUserCompId(),\n      technicianId: this.userFormPanel.controls.technicianId.value\n    }\n    return records;\n  }\n  \n  set value(value:UserOutput ) { \n      setTimeout(() => {\n        this.userFormPanel.patchValue({\n          userName: value.userName,\n          userId: value.userId,\n          userStatus: value.userStatus,\n          userRoleId: value.userRoleId,\n          deviceId: value.deviceId,\n          ipAddress: value.ipAddress,\n          emId: value.emId,\n          compId:value.compId,\n          technicianId: value.technicianId,\n        });\n        this.isCreateEmp(value.emId);\n        this.loadUnAssignEmployee(value.emId ? value.emId : 0);\n        this.setComp();\n        this.onChange(value);\n        this.onTouched();\n      }, 0);\n    }\n\n  writeValue(value:any) {\n    \n    if (value) {\n      this.value = value;\n    }\n    if (value === null) {\n      this.userFormPanel.reset();\n      this.isCreateEmp(null);\n      this.loadUnAssignEmployee(0);\n    }\n  }\n  \n\n  registerOnChange(fn:any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  // communicate the inner form validation to the parent form\n  validate(_: UntypedFormControl) {\n    return this.userFormPanel.valid ? null : { userFormPanel: { valid: false } };\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  onCheckBoxChange(event:any){\n    \n      this.isShow = event.checked ? true:false;\n      if(this.isShow){\n        this.userFormPanel.patchValue({\"emId\":\"0\"});\n      }\n      else{\n        this.userFormPanel.patchValue({ \"emId\": \"\" });\n      }\n    this.notifyParentPanel(this.isShow,\"0\");\n    \n  }\n  notifyParentPanel(isShow:boolean,em_id:string){\n    let data = {\n      \"showEmpPanel\": isShow,\n      \"em_id\": em_id\n    }\n    this.notifyParent.emit(data);\n  }\n  onChangeEmp(isShow:boolean,em_id:any){\n    this.notifyParentPanel(isShow,em_id);\n    \n  }\n\n  isCreateEmp(em_id:any){\n    if(em_id != null){\n      this.isCreateNewEmployeeChkBox = false;\n      \n    }\n    else{\n      this.isCreateNewEmployeeChkBox = this.isCreateNewEmployee =true;\n    }\n  }\n  loadUnAssignEmployee(emId:any):void{\n    this.emSrv.getAllUnAssignEmployees(emId).subscribe((res:any)=>{\n      this.enumEmp = res;\n   //   this.enumEmp =  this.enumEmp.map(i=>{i.name = i.emCode + \" - \"+ i.name; return i;});\n\n      this.enumEmp.unshift({id:null,  name:'Make a selection'});\n    })\n  }\n  onSelectEmploye(event:any){\n    if (event && event.id != null){\n      this.onChangeEmp(true,event.id);\n      this.isCreateNewEmployeeChkBox = false;\n    }\n    else{\n      this.isCreateNewEmployeeChkBox = true;\n      this.onChangeEmp(false, \"0\");\n    }\n    \n  }\n\n  loadUnAssignedTechnician(technicianId: any){\n    this.technicianServ.getUnAssignedTechnician(technicianId).subscribe((res: any)=>{\n      if(res){\n        this.technicianData = res;\n        this.technicianData.unshift(new Craftsperson(null, \"Make a selection\", \"\", \"\", 0, 0, 0, \"\", 0, 0, 0, 0, 0,\"\"));\n      }else{\n        this.technicianData = []\n      }\n    })\n  }\n}","<form nz-form [formGroup]=\"userFormPanel\" *ngIf=\"isProfile==false else profiletemplate\">\n  <table width=\"100%\" >\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom\">\n          <label class='form-field-lable' [ngClass]=\"{'control-label': isNew}\">User Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"userName\" formControlName=\"userName\" [readonly]=\"isNew == true ?null : true\" maxlength=\"64\" appTrimInput>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom\">\n          <label class='form-field-lable control-label'>User Status</label>\n          <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumStatus\"\n                     formControlName=\"userStatus\" [searchable]=\"false\"\n                     bindLabel=\"enumValue\" bindValue=\"enumKey\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \">\n          </ng-select>\n        </div>\n      </td>\n    </tr>\n    <tr *ngIf=\"(userFormPanel.controls['userName'].errors) && (userFormPanel.controls['userName'].invalid)\">      \n      <td style=\"width:calc(100% / 2)\">\n        <label *ngIf=\"!userFormPanel.controls['userName']?.errors.required && !userFormPanel.controls['userName']?.errors.email\" class='form-field-lable' style=\"color:red;\">User Name is already exists </label>\n        <label *ngIf=\"userFormPanel.controls['userName']?.errors.email\" class='form-field-lable' style=\"color:red;\">Please enter valid Email</label>\n      </td>\n      \n      <td style=\"width:calc(100% / 2)\">\n      </td>\n    </tr>\n    \n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \">\n          <label class='form-field-lable control-label'>User Role</label>\n          <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumRole\" formControlName=\"userRoleId\" [searchable]=\"false\"\n            bindLabel=\"roleTitle\" bindValue=\"userRoleId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \">\n          </ng-select>\n        </div>\n      </td>\n      \n    </tr>\n    <tr>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom \" *ngIf=\"!isShow\">\n          <label class='form-field-lable control-label'>Employee Code</label>\n          \n          <ng-container *ngIf=\"!isCreateNewEmployee; else elseTemplate\">\n            <input type=\"text\"class=\"form-control\" name=\"emId\" formControlName=\"emId\" readonly=\"true\">\n          </ng-container>\n          <ng-template #elseTemplate>\n            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"enumEmp\" formControlName=\"emId\" [searchable]=\"true\"\n              bindLabel=\"name\" bindValue=\"id\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \" (change)=\"onSelectEmploye($event)\">\n            </ng-select>\n          </ng-template>\n        </div>\n      </td>\n      <td style=\"width: 50%\">\n        <div class=\"input-label-custom\">\n          <label class='form-field-lable'>Technician Code</label>\n            <ng-select appendTo=\"body\" [clearable]=\"false\" [items]=\"technicianData\" formControlName=\"technicianId\" [searchable]=\"true\"\n              bindLabel=\"name\" bindValue=\"cfId\" placeholder=\"Make a selection\" class=\"ng-select-dropdown \">\n            </ng-select>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <td style=\"width: 50%\">\n      <div class=\"input-label-custom \" *ngIf=\"isCreateNewEmployeeChkBox\">\n        <div class=\"p-field-checkbox\">\n        <p-checkbox (onChange)=\"onCheckBoxChange($event)\" binary=\"true\"></p-checkbox>\n        <label class=\"checkbox-custom-label\" style=\"margin-left: 2px; font-style: italic;\">Create new employee</label>\n        </div>\n      </div>\n      </td>\n    </tr>\n    <tr>\n      <td style=\"width: 50%\">\n      </td>\n    </tr>\n  </table>\n</form>\n\n<ng-template #profiletemplate>\n  \n</ng-template>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}