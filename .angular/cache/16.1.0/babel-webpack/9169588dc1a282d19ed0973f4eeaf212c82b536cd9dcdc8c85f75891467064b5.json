{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from 'src/common/UtilConstant';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { PlanTradeComponent } from 'src/app/ui/plan-trade/modal/plan-trade.component';\nimport { PlanToolComponent } from 'src/app/ui/plan-tool/modal/plan-tool.component';\nimport { PlanPartComponent } from 'src/app/ui/plan-part/modal/plan-part.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/ppm-plan-services\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../../providers/plan-steps-providers\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/table\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/toast\";\nimport * as i8 from \"primeng/panel\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"primeng/tabview\";\nimport * as i11 from \"../../../plan-trade/modal/plan-trade.component\";\nimport * as i12 from \"../../../plan-tool/modal/plan-tool.component\";\nimport * as i13 from \"../../../plan-part/modal/plan-part.component\";\nfunction PlanStepsListComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Steps For '\", ctx_r0.selectedPlan, \"'\");\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-left\": \".5em\"\n  };\n};\nfunction PlanStepsListComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function PlanStepsListComponent_ng_template_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onAdd());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"p-button\", 22);\n    i0.ɵɵlistener(\"click\", function PlanStepsListComponent_ng_template_5_Template_p_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onClearState());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c0));\n  }\n}\nfunction PlanStepsListComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 23);\n    i0.ɵɵelementStart(2, \"th\", 24)(3, \"div\", 25)(4, \"div\", 26)(5, \"p\", 27);\n    i0.ɵɵtext(6, \"Step Code\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 28);\n    i0.ɵɵelement(8, \"p-sortIcon\", 29)(9, \"p-columnFilter\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"th\", 31)(11, \"div\", 25)(12, \"div\", 26)(13, \"p\", 27);\n    i0.ɵɵtext(14, \"Instructions\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 28);\n    i0.ɵɵelement(16, \"p-sortIcon\", 32)(17, \"p-columnFilter\", 33);\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction PlanStepsListComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 34)(1, \"td\", 23)(2, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function PlanStepsListComponent_ng_template_9_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const planStep_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.openEditItem(planStep_r12.planStepId));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function PlanStepsListComponent_ng_template_9_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const planStep_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onDelete(planStep_r12.planStepId));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const planStep_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", planStep_r12);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(planStep_r12.stepCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(planStep_r12.instructions);\n  }\n}\nfunction PlanStepsListComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 5);\n  }\n}\nconst _c1 = function () {\n  return [5, 10, 25];\n};\nconst _c2 = function (a0) {\n  return {\n    \"readonly-panel\": a0\n  };\n};\nexport let PlanStepsListComponent = /*#__PURE__*/(() => {\n  class PlanStepsListComponent {\n    constructor(ppmPlanService, messageService, confirmationService, planStepsModalDialogueProvider) {\n      this.ppmPlanService = ppmPlanService;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.planStepsModalDialogueProvider = planStepsModalDialogueProvider;\n      this.selectedPlan = \"\";\n      this.loading = false;\n      this.plnStepData = [];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.planId = 0;\n      this.isHide = true;\n      this.showDetails = false;\n      this.index = 0;\n      this.selectedTab = '';\n      this.parentFun = new EventEmitter();\n    }\n    ngOnInit() {\n      this.showDetails = false;\n      this.loadRecords(this.planId);\n    }\n    loadRecords(planId) {\n      this.planId = planId;\n      this.loading = true;\n      this.plnStepData = [];\n      this.ppmPlanService.getAllPlanSteps(planId).subscribe(res => {\n        if (res.status != 202) {\n          this.plnStepData = res;\n        } else {\n          this.plnStepData = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    openEditItem(planStepId) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '350px';\n      dialogConfig.data = {\n        planStepId: planStepId,\n        isEdit: true,\n        newRecord: false\n      };\n      this.planStepsModalDialogueProvider.openDialog(dialogConfig);\n      this.planStepsModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.messageService.clear();\n          this.messageService.add({\n            key: 'planSave',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords(this.planId);\n        }\n      });\n    }\n    onAdd() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '350px';\n      dialogConfig.data = {\n        planStepId: null,\n        isEdit: true,\n        newRecord: true,\n        selectedPlanId: this.selectedPlanId\n      };\n      this.planStepsModalDialogueProvider.openDialog(dialogConfig);\n      this.planStepsModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        if (result) {\n          this.messageService.clear();\n          this.messageService.add({\n            key: 'planSave',\n            severity: 'success',\n            summary: 'Record saved successfully',\n            detail: 'Record saved successfully'\n          });\n          this.loadRecords(this.planId);\n        }\n      });\n    }\n    onRowSelect(event) {\n      this.selectedStep = event.data;\n      setTimeout(() => {\n        this.showDetails = true;\n        this.planTradeComponent.loadRecords(event.data.planStepId);\n      }, 10);\n    }\n    onClearState() {\n      this.parentFun.emit(true);\n    }\n    onDelete(id) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deletePlan(id);\n        },\n        key: \"planStepsGrid\"\n      });\n    }\n    deletePlan(id) {\n      this.ppmPlanService.deletePlanStep(id).subscribe(res => {\n        if (res.text === \"could not execute statement\" && res.code == 409) {\n          this.messageService.add({\n            key: 'planDelete',\n            severity: 'warn',\n            detail: 'The Step is associated with other records. Please change the Step before deleting the record.'\n          });\n        } else {\n          this.messageService.add({\n            key: 'planSave',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadRecords(this.planId);\n        }\n      }, error => {});\n    }\n    handleChange(event) {\n      if (event != null) {\n        this.index = event.index;\n        this.selectedTab = event.originalEvent.target.innerText;\n      }\n      switch (this.selectedTab) {\n        case \"Trades\":\n          this.planTradeComponent.loadRecords(this.selectedStep.planStepId);\n          break;\n        case \"Tools\":\n          this.planToolComponent.loadRecords(this.selectedStep.planStepId);\n          break;\n        case \"Parts\":\n          this.planPartComponent.loadRecords(this.selectedStep.planStepId);\n          break;\n      }\n    }\n    static #_ = this.ɵfac = function PlanStepsListComponent_Factory(t) {\n      return new (t || PlanStepsListComponent)(i0.ɵɵdirectiveInject(i1.PpmPlanService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i3.PlanStepsModalDialogueProvider));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PlanStepsListComponent,\n      selectors: [[\"app-plan-steps-list\"]],\n      viewQuery: function PlanStepsListComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(PlanTradeComponent, 5);\n          i0.ɵɵviewQuery(PlanToolComponent, 5);\n          i0.ɵɵviewQuery(PlanPartComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.planTradeComponent = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.planToolComponent = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.planPartComponent = _t.first);\n        }\n      },\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 25,\n      vars: 12,\n      consts: [[1, \"card\", 2, \"height\", \"85vh\"], [1, \"row\"], [1, \"col-sm-6\", \"col-md-6\", \"col-xm-6\", \"col-lg-6\", 2, \"padding-right\", \"2px\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"icons\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"350px\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"onRowSelect\"], [\"dt1\", \"\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [1, \"col-sm-6\", \"col-md-6\", \"col-xm-6\", \"col-lg-6\", 2, \"padding-left\", \"2px\", 3, \"ngClass\"], [3, \"activeIndex\", \"activeIndexChange\", \"onChange\"], [\"header\", \"Trades\"], [\"trades\", \"\"], [\"header\", \"Tools\"], [\"tools\", \"\"], [\"header\", \"Parts\"], [\"parts\", \"\"], [\"key\", \"planSave\", \"position\", \"top-right\"], [\"key\", \"planDelete\", \"position\", \"top-center\"], [\"key\", \"planStepsGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [1, \"form-field-lable\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [\"label\", \"Back\", \"icon\", \"pi pi-arrow-circle-left\", \"styleClass\", \"p-button-secondary\", 1, \"mr10\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"description\"], [1, \"grid-header-column\"], [1, \"grid-header-label\"], [1, \"grid-label-paragraph\"], [1, \"grid-sort-icon\"], [\"field\", \"description\"], [\"type\", \"text\", \"field\", \"description\", \"display\", \"menu\"], [\"pSortableColumn\", \"instructions\"], [\"field\", \"instructions\"], [\"type\", \"text\", \"field\", \"instructions\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-pencil\", \"type\", \"button\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"type\", \"button\", 1, \"p-button-text\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"]],\n      template: function PlanStepsListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"p-panel\");\n          i0.ɵɵtemplate(4, PlanStepsListComponent_ng_template_4_Template, 2, 1, \"ng-template\", 3);\n          i0.ɵɵtemplate(5, PlanStepsListComponent_ng_template_5_Template, 2, 3, \"ng-template\", 4);\n          i0.ɵɵelementStart(6, \"p-table\", 5, 6);\n          i0.ɵɵlistener(\"onRowSelect\", function PlanStepsListComponent_Template_p_table_onRowSelect_6_listener($event) {\n            return ctx.onRowSelect($event);\n          });\n          i0.ɵɵtemplate(8, PlanStepsListComponent_ng_template_8_Template, 18, 0, \"ng-template\", 3);\n          i0.ɵɵtemplate(9, PlanStepsListComponent_ng_template_9_Template, 8, 3, \"ng-template\", 7);\n          i0.ɵɵtemplate(10, PlanStepsListComponent_ng_template_10_Template, 3, 1, \"ng-template\", 8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"div\", 9)(12, \"p-tabView\", 10);\n          i0.ɵɵlistener(\"activeIndexChange\", function PlanStepsListComponent_Template_p_tabView_activeIndexChange_12_listener($event) {\n            return ctx.index = $event;\n          })(\"onChange\", function PlanStepsListComponent_Template_p_tabView_onChange_12_listener($event) {\n            return ctx.handleChange($event);\n          });\n          i0.ɵɵelementStart(13, \"p-tabPanel\", 11, 12);\n          i0.ɵɵelement(15, \"app-plan-trade\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"p-tabPanel\", 13, 14);\n          i0.ɵɵelement(18, \"app-plan-tool\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"p-tabPanel\", 15, 16);\n          i0.ɵɵelement(21, \"app-plan-part\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelement(22, \"p-toast\", 17)(23, \"p-toast\", 18)(24, \"p-confirmDialog\", 19);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"value\", ctx.plnStepData)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(9, _c1))(\"rowHover\", true)(\"scrollable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c2, !ctx.showDetails));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"activeIndex\", ctx.index);\n        }\n      },\n      dependencies: [i4.NgClass, i2.PrimeTemplate, i5.Table, i5.SortableColumn, i5.SelectableRow, i5.SortIcon, i5.ColumnFilter, i6.ButtonDirective, i6.Button, i7.Toast, i8.Panel, i9.ConfirmDialog, i10.TabView, i10.TabPanel, i11.PlanTradeComponent, i12.PlanToolComponent, i13.PlanPartComponent],\n      styles: [\"[_nghost-%COMP%]     .p-panel .p-panel-content{padding:0}[_nghost-%COMP%]     .p-panel .p-panel-header{padding:.3rem}.container[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column}.row[_ngcontent-%COMP%]{flex:1;display:flex}.column[_ngcontent-%COMP%]{flex:1}[_nghost-%COMP%]     .p-tabview .p-tabview-nav li .p-tabview-nav-link{border-color:#879cc9;background:#879cc9;color:#fff;margin-right:2px;line-height:2.35;min-width:80px;border-radius:6px 6px 0 0;border-bottom:3px solid #879cc9!important;box-shadow:none!important}[_nghost-%COMP%]     .p-tabview .p-tabview-nav li.p-highlight .p-tabview-nav-link{background:#ffffff;border-color:#879cc9;color:#000;margin-right:2px;line-height:2.35;min-width:80px;border-radius:6px 6px 0 0;border-bottom:3px solid #879cc9!important;box-shadow:none!important}.readonly-panel[_ngcontent-%COMP%]{opacity:.5;pointer-events:none}\"]\n    });\n  }\n  return PlanStepsListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}