{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatLegacyPaginator as MatPaginator } from '@angular/material/legacy-paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MessageService } from 'primeng/api';\nimport { UtilConstant } from '../../../../../common/UtilConstant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/enum.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/rmcat.service\";\nimport * as i5 from \"../../provider/rmcat.provider\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"primeng/table\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/panel\";\nimport * as i11 from \"primeng/confirmdialog\";\nfunction RmcatComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function RmcatComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.openAddItem());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RmcatComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"th\", 11);\n    i0.ɵɵelementStart(2, \"th\", 12)(3, \"div\", 13);\n    i0.ɵɵtext(4, \" Room Category \");\n    i0.ɵɵelement(5, \"p-sortIcon\", 14)(6, \"p-columnFilter\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"th\", 16)(8, \"div\", 13);\n    i0.ɵɵtext(9, \" Description \");\n    i0.ɵɵelement(10, \"p-sortIcon\", 17)(11, \"p-columnFilter\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Highlight Color\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RmcatComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 19)(1, \"td\", 11)(2, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function RmcatComponent_ng_template_6_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const rmcat_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.openEditItem(rmcat_r7.rmCat));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function RmcatComponent_ng_template_6_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const rmcat_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteRoomCat(rmcat_r7.rmCat));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵelement(9, \"div\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rmcat_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSelectableRow\", rmcat_r7);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(rmcat_r7.rmCat);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rmcat_r7.rmCatDesc);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", rmcat_r7.highlightColor);\n  }\n}\nfunction RmcatComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 3);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25];\n};\nexport let RmcatComponent = /*#__PURE__*/(() => {\n  class RmcatComponent {\n    constructor(fb, enumsrv, router, rmcatSrv, rmcatModalDialogueProvider, messageService, confirmationService) {\n      this.fb = fb;\n      this.enumsrv = enumsrv;\n      this.router = router;\n      this.rmcatSrv = rmcatSrv;\n      this.rmcatModalDialogueProvider = rmcatModalDialogueProvider;\n      this.messageService = messageService;\n      this.confirmationService = confirmationService;\n      this.EnumList = [];\n      this.enumClonedList = [];\n      this.enumCC_stat = [];\n      this.enumRmcats = [];\n      this.GLACCList = [];\n      this.rmstd_data = [];\n      this.subscriptions = [];\n      this.loading = false;\n      this.isRmstdListLoad = true;\n      this.displayedColumns = ['SiteId', 'siteName', 'long', 'lat', 'siteInfo', 'sitePhoto', 'ctryId', 'stateId', 'regnId', 'cityId'];\n      this.rowCount = UtilConstant.ROW_COUNT;\n      this.parentFun = new EventEmitter();\n      this.onChange = () => {};\n      this.onTouched = () => {};\n    }\n    ngOnInit() {\n      //this.loadRmcats();\n    }\n    /*loadRmcats(){\n      this.rmcatSrv.getALLRmcats().subscribe((res:any[])=>{\n        this.enumRmcats = res;\n        console.log(\"list return\"+this.enumRmcats);\n           this.enumRmcats = res.map((i:any) => { i.rmCatDesc = i.rmCat + ' - ' + i.rmCatDesc; return i; });\n        this.enumRmcats.unshift(new RmcatFilterInput('', 'Make a selection', ));\n      });\n    }\n    \n    onClear() {\n      \n      for (var fieldId in this.rmcatFilterPanel.controls) {\n        this.rmcatFilterPanel.controls[fieldId].setValue(null);\n      }\n      this.isRmstdListLoad = true;\n      this.rmstd_data = [];\n      this.loadRecords(new RmcatFilterInput(\"\",\"\"));\n    }\n    onFilter(formData: FormGroup) {\n      var code = formData.controls.rmCat.value;\n      code = code != null ? code.substring(code.indexOf(\"-\") + 1, code.length).trim() : \"\";\n      let postData = {\n        rmCat: code,\n        rmCatDesc:\"\"\n      }\n      this.loadRecords(postData);\n    }*/\n    loadRecords(data) {\n      this.rmcatFilter = data;\n      this.loading = true;\n      this.isRmstdListLoad = true;\n      this.rmcatSrv.getRmcatList(data).subscribe(res => {\n        if (res.status != 202) {\n          this.isRmstdListLoad = false;\n          this.rmstd_data = res;\n        } else {\n          this.isRmstdListLoad = true;\n          this.rmstd_data = [];\n        }\n        this.loading = false;\n      }, error => {\n        this.loading = false;\n      });\n    }\n    openEditItem(rmCat) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        rmCat: rmCat,\n        isEdit: true,\n        newRecord: false,\n        title: \"Edit\"\n      };\n      this.rmcatModalDialogueProvider.openDialog(dialogConfig);\n      this.rmcatModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        if (result == true) this.loadRecords(this.rmcatFilter);\n      });\n    }\n    //add button code\n    openAddItem() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '500px';\n      dialogConfig.data = {\n        rmCat: null,\n        isEdit: true,\n        newRecord: true,\n        title: \"Add\"\n      };\n      this.rmcatModalDialogueProvider.openDialog(dialogConfig);\n      this.rmcatModalDialogueProvider.onDialogueClosed.subscribe(result => {\n        if (result == true) this.loadRecords(this.rmcatFilter);\n      });\n    }\n    writeValue(value) {\n      if (value) {\n        this.value = value;\n      }\n      if (value === null) {\n        // this.frmEquipmentPositionDetails.reset();\n      }\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n    /// Start Of UI Related Non-Trivial Functionality ///\n    clear(table) {\n      table.clear();\n    }\n    onRowSelect(event) {\n      this.parentFun.emit(event.data);\n    }\n    deleteRoomCat(rm_cat) {\n      this.userDeleteConfirm(rm_cat);\n    }\n    deleteRecord(rm_cat) {\n      this.rmcatSrv.deleteRoomCat(rm_cat).subscribe(res => {\n        if (res != null && res.code == 200) {\n          this.messageService.add({\n            key: 'rmCatMessage',\n            severity: 'success',\n            summary: 'Record deleted successfully',\n            detail: 'Record deleted successfully'\n          });\n          this.loadRecords(this.rmcatFilter);\n          this.parentFun.emit(this.rmcatFilter);\n        }\n      });\n    }\n    userDeleteConfirm(rm_cat) {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delete ' + rm_cat + ' ?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.deleteRecord(rm_cat);\n        },\n        key: \"rmCatGrid\"\n      });\n    }\n    static #_ = this.ɵfac = function RmcatComponent_Factory(t) {\n      return new (t || RmcatComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.EnumService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.RmcatService), i0.ɵɵdirectiveInject(i5.RmcatModalDialogueProvider), i0.ɵɵdirectiveInject(i6.MessageService), i0.ɵɵdirectiveInject(i6.ConfirmationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RmcatComponent,\n      selectors: [[\"app-rmcat\"]],\n      viewQuery: function RmcatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatSort, 5);\n          i0.ɵɵviewQuery(MatPaginator, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        }\n      },\n      outputs: {\n        parentFun: \"parentFun\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 10,\n      vars: 8,\n      consts: [[\"header\", \" \"], [\"pTemplate\", \"icons\"], [1, \"card\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-responsive-demo p-datatable-gridlines\", \"scrollDirection\", \"both\", \"scrollHeight\", \"500px\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"rowHover\", \"scrollable\", \"onRowSelect\"], [\"dt1\", \"\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"key\", \"rmCatMessage\"], [\"key\", \"rmCatGrid\", \"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"label\", \"Add\", \"icon\", \"pi pi-plus\", 3, \"click\"], [2, \"width\", \"8rem\"], [\"pSortableColumn\", \"rmCat\"], [1, \"p-d-flex\", \"p-jc-between\", \"p-ai-center\"], [\"field\", \"rmCat\"], [\"type\", \"text\", \"field\", \"rmCat\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmCatDesc\"], [\"field\", \"rmCatDesc\"], [\"type\", \"text\", \"field\", \"rmCatDesc\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-pencil\", 1, \"p-button-text\", \"p-button\", \"mr5\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", 1, \"p-button-text\", \"p-button\", \"pull-right\", 2, \"font-size\", \"5rem\", \"color\", \"red\", 3, \"click\"], [1, \"td-class\"]],\n      template: function RmcatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0);\n          i0.ɵɵtemplate(1, RmcatComponent_ng_template_1_Template, 1, 0, \"ng-template\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"p-table\", 3, 4);\n          i0.ɵɵlistener(\"onRowSelect\", function RmcatComponent_Template_p_table_onRowSelect_3_listener($event) {\n            return ctx.onRowSelect($event);\n          });\n          i0.ɵɵtemplate(5, RmcatComponent_ng_template_5_Template, 14, 0, \"ng-template\", 5);\n          i0.ɵɵtemplate(6, RmcatComponent_ng_template_6_Template, 10, 5, \"ng-template\", 6);\n          i0.ɵɵtemplate(7, RmcatComponent_ng_template_7_Template, 3, 1, \"ng-template\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(8, \"p-toast\", 8)(9, \"p-confirmDialog\", 9);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"value\", ctx.rmstd_data)(\"paginator\", true)(\"rows\", ctx.rowCount)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(7, _c0))(\"rowHover\", true)(\"scrollable\", true);\n        }\n      },\n      dependencies: [i6.PrimeTemplate, i7.Table, i7.SortableColumn, i7.SelectableRow, i7.SortIcon, i7.ColumnFilter, i8.ButtonDirective, i9.Toast, i10.Panel, i11.ConfirmDialog],\n      styles: [\"span[_ngcontent-%COMP%]{height:24px!important;font-size:10px!important}.trFont[_ngcontent-%COMP%]{font-size:11px!important}.panel-group-custom[_ngcontent-%COMP%]{margin:-12px!important}label[_ngcontent-%COMP%]{font-size:10px;font-weight:500;padding:0 0 0 3px;margin-bottom:-10px!important}.td-calc-2[_ngcontent-%COMP%]{width:50%}.panel-body-custom[_ngcontent-%COMP%]{padding:0}.btn-ggb-default-custom[_ngcontent-%COMP%]{margin:16px!important}.btn-ggb-orange[_ngcontent-%COMP%]{width:90px!important}.btn-filter[_ngcontent-%COMP%]{margin-left:4px;margin-right:5px;width:50px}select[_ngcontent-%COMP%], input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{border:thin double rgb(181,155,90)!important;padding-left:5px;background:#fff}.input-group[_ngcontent-%COMP%]   .input-group-addon[_ngcontent-%COMP%]{height:24px}.td-class[_ngcontent-%COMP%]{background-color:inherit;display:flex;align-items:center;justify-content:center;width:40px;height:20px;margin:10px auto auto;border:1px solid black}\"]\n    });\n  }\n  return RmcatComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}