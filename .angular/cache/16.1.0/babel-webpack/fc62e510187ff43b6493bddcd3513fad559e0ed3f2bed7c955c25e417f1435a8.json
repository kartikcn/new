{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class ProblemDescriptionService {\n  constructor(pdService) {\n    this.pdService = pdService;\n  }\n  getPdById(id) {\n    return this.pdService.getSingleById('helpDeskPd', 'getById', id);\n  }\n  getALLPds() {\n    return this.pdService.getAll('helpDeskPd', 'getAll');\n  }\n  getALLPdsPaginated(data) {\n    return this.pdService.search('helpDeskPd', 'getAllPaginated', data);\n  }\n  savePd(pd) {\n    return this.pdService.add('helpDeskPd', 'save', pd);\n  }\n  deleteById(id) {\n    return this.pdService.deleteById(\"helpDeskPd\", \"deleteById\", id);\n  }\n  checkExists(description) {\n    return this.pdService.getSingleById('helpDeskPd', 'check', description);\n  }\n  static #_ = this.ɵfac = function ProblemDescriptionService_Factory(t) {\n    return new (t || ProblemDescriptionService)(i0.ɵɵinject(i1.DataService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProblemDescriptionService,\n    factory: ProblemDescriptionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProblemDescriptionService","constructor","pdService","getPdById","id","getSingleById","getALLPds","getAll","getALLPdsPaginated","data","search","savePd","pd","add","deleteById","checkExists","description","_","i0","ɵɵinject","i1","DataService","_2","factory","ɵfac","providedIn"],"sources":["/home/admin7/Documents/fms_frontend/src/app/ui/Helpdesk/help-desk-problem-description/services/problem-description.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataService } from 'src/app/services/data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProblemDescriptionService {\n\n  constructor(\n    private pdService: DataService<any>,\n    \n   ) { }\n\n \n   public getPdById(id:any){\n    return this.pdService.getSingleById('helpDeskPd', 'getById',id);\n   }\n\n   public getALLPds() {\n     return this.pdService.getAll('helpDeskPd', 'getAll');\n   }\n\n   public getALLPdsPaginated(data:any) {\n    return this.pdService.search('helpDeskPd', 'getAllPaginated',data);\n  }\n  \n   public savePd(pd: any): Observable<any> {\n     return this.pdService.add('helpDeskPd', 'save', pd);\n   }\n\n\n   public deleteById(id: any) {\n    return this.pdService.deleteById(\"helpDeskPd\", \"deleteById\", id);\n  }\n\n  public checkExists(description: any) {\n    return this.pdService.getSingleById('helpDeskPd', 'check', description);\n  }\n  \n}\n"],"mappings":";;AAQA,OAAM,MAAOA,yBAAyB;EAEpCC,YACUC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;EAEd;EAGGC,SAASA,CAACC,EAAM;IACtB,OAAO,IAAI,CAACF,SAAS,CAACG,aAAa,CAAC,YAAY,EAAE,SAAS,EAACD,EAAE,CAAC;EAChE;EAEOE,SAASA,CAAA;IACd,OAAO,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,YAAY,EAAE,QAAQ,CAAC;EACtD;EAEOC,kBAAkBA,CAACC,IAAQ;IACjC,OAAO,IAAI,CAACP,SAAS,CAACQ,MAAM,CAAC,YAAY,EAAE,iBAAiB,EAACD,IAAI,CAAC;EACpE;EAEQE,MAAMA,CAACC,EAAO;IACnB,OAAO,IAAI,CAACV,SAAS,CAACW,GAAG,CAAC,YAAY,EAAE,MAAM,EAAED,EAAE,CAAC;EACrD;EAGOE,UAAUA,CAACV,EAAO;IACxB,OAAO,IAAI,CAACF,SAAS,CAACY,UAAU,CAAC,YAAY,EAAE,YAAY,EAAEV,EAAE,CAAC;EAClE;EAEOW,WAAWA,CAACC,WAAgB;IACjC,OAAO,IAAI,CAACd,SAAS,CAACG,aAAa,CAAC,YAAY,EAAE,OAAO,EAAEW,WAAW,CAAC;EACzE;EAAC,QAAAC,CAAA,G;qBA/BUjB,yBAAyB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAzBtB,yBAAyB;IAAAuB,OAAA,EAAzBvB,yBAAyB,CAAAwB,IAAA;IAAAC,UAAA,EAFxB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}