{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport let TeamService = /*#__PURE__*/(() => {\n  class TeamService {\n    constructor(teamService) {\n      this.teamService = teamService;\n    }\n    getAllTeams() {\n      return this.teamService.getAll('team', 'getAll');\n    }\n    getAllTeamsPaginated(data) {\n      return this.teamService.search('team', 'getAllPaginated', data);\n    }\n    getTeamById(teamId) {\n      return this.teamService.getSingleById(\"team\", \"getById\", teamId);\n    }\n    saveTeam(data) {\n      return this.teamService.add('team', 'save', data);\n    }\n    validateTeam(teamId) {\n      return this.teamService.getSingleById('team', 'check', teamId);\n    }\n    deleteById(teamId) {\n      return this.teamService.getSingleById(\"team\", \"delete\", teamId);\n    }\n    getAssignedTeams(data) {\n      return this.teamService.search('team', 'getAssignedTeams', data);\n    }\n    getUnAssignedTeams(data) {\n      return this.teamService.search('team', 'getUnAssignedTeams', data);\n    }\n    saveWorkTeams(data) {\n      return this.teamService.add('wt', 'save', data);\n    }\n    deleteWorkTeams(data) {\n      return this.teamService.add('wt', 'delete', data);\n    }\n    getTeamsHavingTechnician() {\n      return this.teamService.getAll('team', 'getTeamsHavingtechnician');\n    }\n    getTeamsHavingEmployee() {\n      return this.teamService.getAll('team', 'getTeamsHavingemployee');\n    }\n    static #_ = this.ɵfac = function TeamService_Factory(t) {\n      return new (t || TeamService)(i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TeamService,\n      factory: TeamService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TeamService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}