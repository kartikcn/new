{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { Enums } from 'src/app/model/enums.model';\nimport { BuildingFilterInput } from 'src/app/ui/background-loc/model/DTO/blFilterInput.model';\nimport { FLFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/flFilterInput.model';\nimport { RMFilterInputDTO } from 'src/app/ui/background-loc/model/DTO/rmFilterInput.model';\nimport html2canvas from 'html2canvas';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"src/app/services/enum.service\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"../../services/booking.services\";\nimport * as i6 from \"src/app/ui/rm-config/rm-config/services/rm-config.service\";\nimport * as i7 from \"primeng/api\";\nimport * as i8 from \"@ng-select/ng-select\";\nimport * as i9 from \"primeng/table\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/dialog\";\nimport * as i12 from \"primeng/panel\";\nimport * as i13 from \"primeng/chart\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"@angular/common\";\nfunction BookingReportsByMonthComponent_ng_template_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function BookingReportsByMonthComponent_ng_template_36_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      const _r1 = i0.ɵɵreference(38);\n      return i0.ɵɵresetView(ctx_r6.exportChartToPDF(_r1));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !(ctx_r0.requestData.length > 0));\n  }\n}\nfunction BookingReportsByMonthComponent_ng_template_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 29)(2, \"div\", 30);\n    i0.ɵɵtext(3, \" Type\");\n    i0.ɵɵelement(4, \"p-sortIcon\", 31)(5, \"p-columnFilter\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"th\", 33)(7, \"div\", 30);\n    i0.ɵɵtext(8, \" Meeting Id \");\n    i0.ɵɵelement(9, \"p-sortIcon\", 34)(10, \"p-columnFilter\", 35);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"th\", 36);\n    i0.ɵɵtext(12, \" Building\");\n    i0.ɵɵelement(13, \"p-sortIcon\", 37)(14, \"p-columnFilter\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\", 39);\n    i0.ɵɵtext(16, \" Floor\");\n    i0.ɵɵelement(17, \"p-sortIcon\", 40)(18, \"p-columnFilter\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"th\", 42);\n    i0.ɵɵtext(20, \" Room\");\n    i0.ɵɵelement(21, \"p-sortIcon\", 43)(22, \"p-columnFilter\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"th\", 45);\n    i0.ɵɵtext(24, \" Date\");\n    i0.ɵɵelement(25, \"p-sortIcon\", 46)(26, \"p-columnFilter\", 47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"th\", 48);\n    i0.ɵɵtext(28, \" From Time\");\n    i0.ɵɵelement(29, \"p-sortIcon\", 49)(30, \"p-columnFilter\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"th\", 51);\n    i0.ɵɵtext(32, \" To Time\");\n    i0.ɵɵelement(33, \"p-sortIcon\", 52)(34, \"p-columnFilter\", 53);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"th\", 54)(36, \"div\", 30);\n    i0.ɵɵtext(37, \" Status \");\n    i0.ɵɵelement(38, \"p-sortIcon\", 55)(39, \"p-columnFilter\", 56);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(40, \"th\", 57)(41, \"div\", 30);\n    i0.ɵɵtext(42, \" Meeting Name \");\n    i0.ɵɵelement(43, \"p-sortIcon\", 58)(44, \"p-columnFilter\", 59);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(45, \"th\", 60)(46, \"div\", 30);\n    i0.ɵɵtext(47, \" Requested By \");\n    i0.ɵɵelement(48, \"p-sortIcon\", 61)(49, \"p-columnFilter\", 62);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction BookingReportsByMonthComponent_ng_template_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 63)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\", 64);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const bookingReport_r8 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", bookingReport_r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bookingReport_r8.bookingType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bookingReport_r8.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bookingReport_r8.blId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bookingReport_r8.flId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bookingReport_r8.rmId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 13, bookingReport_r8.dateStart, \"dd MMM yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.convertToDisplayTime(bookingReport_r8.timeStart));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.convertToDisplayTime(bookingReport_r8.timeEnd));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.getEnumById(bookingReport_r8.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"matTooltip\", bookingReport_r8.meetingName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", bookingReport_r8.meetingName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bookingReport_r8.requestedBy);\n  }\n}\nfunction BookingReportsByMonthComponent_ng_template_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \" No records found \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 9);\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nconst _c1 = function () {\n  return {\n    \"960px\": \"75vw\"\n  };\n};\nconst _c2 = function () {\n  return [5, 10, 25];\n};\nconst _c3 = function () {\n  return {\n    \"width\": \"1600px\"\n  };\n};\nexport let BookingReportsByMonthComponent = /*#__PURE__*/(() => {\n  class BookingReportsByMonthComponent {\n    constructor(formBuilder, authSrv, enumsrv, spinner, bookingSrv, rmConfigSrv, messageService) {\n      this.formBuilder = formBuilder;\n      this.authSrv = authSrv;\n      this.enumsrv = enumsrv;\n      this.spinner = spinner;\n      this.bookingSrv = bookingSrv;\n      this.rmConfigSrv = rmConfigSrv;\n      this.messageService = messageService;\n      this.enumBL = [];\n      this.enumFL = [];\n      this.enumStatusData = [];\n      this.years = [];\n      this.enumList = [];\n      this.enumClonedList = [];\n      this.enumStatusList = [];\n      this.enumeStatus = [];\n      this.enumAllFL = [];\n      this.allRmDdata = [];\n      this.rm_data = [];\n      this.req_array = [];\n      this.allBl = [];\n      this.req_data = [];\n      this.displayList = false;\n      this.requestData = [];\n      this.chartImg = [];\n      this.filterPanel = this.formBuilder.group({\n        blId: [null],\n        flId: [null],\n        rmId: [null],\n        status: [null],\n        year: [new Date().getFullYear()]\n      });\n    }\n    ngOnInit() {\n      this.spinner.hide();\n      this.compId = this.authSrv.getLoggedInUserCompId();\n      this.loggedInUser = this.authSrv.getLoggedInUserId();\n      this.loadFilterPanelData();\n      this.loadStatus();\n      this.loadEnums();\n      this.CurrentYear = new Date().getFullYear();\n      const previousYear = this.CurrentYear - 1;\n      const nextYear = this.CurrentYear + 1;\n      this.years = [{\n        name: previousYear,\n        code: previousYear\n      }, {\n        name: this.CurrentYear,\n        code: this.CurrentYear\n      }, {\n        name: nextYear,\n        code: nextYear\n      }];\n      this.onSearch();\n    }\n    onSearch() {\n      this.spinner.show();\n      var blId = this.filterPanel.controls.blId.value;\n      var flId = this.filterPanel.controls.flId.value;\n      var rmId = this.filterPanel.controls.rmId.value;\n      var status = this.filterPanel.controls.status.value;\n      var year = this.filterPanel.controls.year.value;\n      this.spinner.hide();\n      this.filterArray = {\n        month: this.month,\n        year: year,\n        status: status,\n        blId: blId,\n        flId: flId,\n        rmId: rmId,\n        compId: this.compId\n      };\n      this.getBookingReportsByMonth(this.filterArray);\n    }\n    loadFilterPanelData() {\n      this.rmConfigSrv.getAllFilterData().subscribe(res => {\n        this.allBl = res.blList;\n        this.enumBL = res.blList;\n        this.enumBL = res.blList.map(i => {\n          i.name = i.blId + (i.blName ? ' - ' + i.blName : \"\");\n          return i;\n        });\n        this.enumBL.unshift(new BuildingFilterInput('', 'Make a selection', '', this.compId));\n        this.enumAllFL = res.flList;\n        this.enumAllFL = res.flList.map(i => {\n          i.name = i.blId + '-' + i.flId + (i.flName ? ' - ' + i.flName : '');\n          return i;\n        });\n        this.enumAllFL.unshift(new FLFilterInputDTO('', 'Make a selection', '', this.compId));\n        this.enumFL = this.enumAllFL;\n        this.allRmDdata = res.rmList;\n        this.allRmDdata = res.rmList.map(i => {\n          i.name = i.blId + '-' + i.flId + ' - ' + i.rmId + (i.rmName ? ' - ' + i.rmName : '');\n          return i;\n        });\n        this.allRmDdata.unshift(new RMFilterInputDTO('', 'Make a selection', '', '', this.compId));\n        this.rm_data = this.allRmDdata;\n      });\n    }\n    loadStatus() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumStatusData = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'reserve'.toLocaleUpperCase() && t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n        this.enumStatusData.unshift(new Enums(0, \"\", \"\", 'Make a selection'));\n      });\n    }\n    onClick(event) {\n      var index = event.element.index;\n      this.month = index + 1;\n      this.filterArray.month = this.month;\n      this.monthBooking = this.basicData.labels[index];\n      this.req_data = [];\n      this.bookingSrv.getReservationRequestByMonth(this.filterArray).subscribe(res => {\n        this.req_data = res;\n        this.getDestructuredData(this.req_data);\n        this.displayList = true;\n      }, error => {});\n    }\n    getDestructuredData(req_data) {\n      this.req_array = req_data.map(item => {\n        return {\n          \"Type\": item['bookingType'],\n          \"Meeting Id \": item['id'],\n          \"Building\": item['blId'],\n          \"Floor\": item['flId'],\n          \"Room\": item['rmId'],\n          \"Date\": item['dateStart'],\n          \"From Time\": item['timeStart'],\n          \"To Time\": item['timeEnd'],\n          \"status\": this.getEnumById(item['status']),\n          \"Meeting Name\": item['meetingName'],\n          \"Requested By\": item['requestedBy']\n        };\n      });\n    }\n    loadEnums() {\n      this.enumList = [];\n      this.enumsrv.getEnums().subscribe(res => {\n        this.enumList = res;\n        this.enumClonedList = this.enumList.map(x => Object.assign({}, x));\n        this.enumeStatus = this.enumClonedList.filter(t => t.tableName.toLocaleUpperCase() === 'reserve'.toLocaleUpperCase());\n        this.enumStatusList = this.enumeStatus.filter(t => t.fieldName.toLocaleUpperCase() === 'status'.toLocaleUpperCase());\n      }, error => {});\n    }\n    getEnumById(id) {\n      return this.enumStatusList.find(t => t.id === id)?.enumValue;\n    }\n    convertToDisplayTime(value) {\n      if (value != null) {\n        var data = value.split(':');\n        var time = data[0] + ':' + data[1];\n        return time;\n      } else {\n        return '';\n      }\n    }\n    getBookingReportsByMonth(data) {\n      this.bookingSrv.getCountByMonth(data).subscribe(res => {\n        var data = res;\n        this.requestData = [];\n        for (var i = 1; i <= 12; i++) {\n          var cnt = data.find(t => t[0] == i);\n          cnt = cnt != null && cnt != 'undefined' ? cnt[1] : 0;\n          this.requestData.push(cnt);\n        }\n        this.setChartData(this.requestData);\n      }, error => {});\n    }\n    setChartData(dataList) {\n      this.basicData = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        datasets: [{\n          label: 'Months',\n          backgroundColor: '#42A5F5',\n          data: dataList\n        }]\n      };\n    }\n    exportChartToPDF(chartElement) {\n      html2canvas(chartElement).then(canvas => {\n        const imgData = canvas.toDataURL('image/png');\n        this.chartImg = [];\n        this.chartImg.push(imgData);\n        this.printPDF();\n      });\n    }\n    printPDF() {\n      var reportDetails = {\n        chartImg: this.chartImg,\n        title: 'Monthly Booking-Report'\n      };\n      this.bookingSrv.printPdf(reportDetails).subscribe(res => {\n        if (res != null) {\n          this.messageService.add({\n            key: 'reportBookingSer',\n            severity: 'success',\n            summary: 'PDF Created',\n            detail: 'PDF created successfully'\n          });\n          var file = new Blob([res], {\n            type: 'application/pdf'\n          });\n          var fileURL = URL.createObjectURL(file);\n          window.open(fileURL);\n        }\n      });\n    }\n    static #_ = this.ɵfac = function BookingReportsByMonthComponent_Factory(t) {\n      return new (t || BookingReportsByMonthComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.EnumService), i0.ɵɵdirectiveInject(i4.NgxSpinnerService), i0.ɵɵdirectiveInject(i5.BookingService), i0.ɵɵdirectiveInject(i6.RmConfigService), i0.ɵɵdirectiveInject(i7.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BookingReportsByMonthComponent,\n      selectors: [[\"app-booking-reports-by-month\"]],\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 47,\n      vars: 41,\n      consts: [[\"header\", \"Bookings Per Month\", 3, \"toggleable\"], [3, \"formGroup\"], [\"width\", \"100%\"], [2, \"width\", \"16.6%\"], [1, \"input-label-custom\"], [1, \"form-field-lable\"], [\"appendTo\", \"body\", \"formControlName\", \"blId\", \"bindLabel\", \"name\", \"bindValue\", \"blId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"flId\", \"bindLabel\", \"name\", \"bindValue\", \"flId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"rmId\", \"bindLabel\", \"name\", \"bindValue\", \"rmId\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [\"appendTo\", \"body\", \"formControlName\", \"status\", \"bindLabel\", \"enumValue\", \"bindValue\", \"id\", \"placeholder\", \"Make a selection\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [1, \"p-fluid\"], [1, \"p-field\"], [\"appendTo\", \"body\", \"formControlName\", \"year\", \"value\", \"2021\", \"bindLabel\", \"name\", \"bindValue\", \"name\", 1, \"ng-select-dropdown\", 3, \"clearable\", \"items\", \"searchable\"], [2, \"width\", \"6%\"], [2, \"width\", \"10.6%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Show\", 1, \"p-button-primary\", \"p-button-sm\", \"pull\", \"right\", 2, \"width\", \"60px\", \"margin-left\", \"5px\", 3, \"disabled\", \"click\"], [\"type\", \"reset\", \"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Clear\", 1, \"p-button-raised\", \"pull-right\"], [\"pTemplate\", \"header\"], [1, \"card\", 2, \"margin-top\", \"3px\"], [\"chart\", \"\"], [\"type\", \"bar\", 3, \"data\", \"height\", \"options\", \"onDataSelect\"], [3, \"header\", \"visible\", \"breakpoints\", \"resizable\", \"draggable\", \"maximizable\", \"visibleChange\"], [1, \"card\", 2, \"margin-top\", \"35px\"], [\"currentPageReportTemplate\", \"Showing {first} to {last} of {totalRecords} entries\", \"styleClass\", \"p-datatable-customers p-datatable-gridlines\", \"scrollHeight\", \"450px\", \"selectionMode\", \"single\", 3, \"value\", \"paginator\", \"rows\", \"showCurrentPageReport\", \"rowsPerPageOptions\", \"tableStyle\", \"scrollable\", \"rowHover\"], [\"dt1\", \"\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [2, \"width\", \"100%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-pdf\", \"matTooltip\", \"PDF\", \"matTooltipPosition\", \"below\", 1, \"p-button-danger\", \"p-mr-2\", \"pull-right\", 2, \"margin-left\", \"auto\", \"margin-bottom\", \"5px\", 3, \"disabled\", \"click\"], [\"pSortableColumn\", \"bookingType\"], [1, \"p-d-flex\", \"p-jc-between\", \"p-ai-center\"], [\"field\", \"bookingType\"], [\"type\", \"text\", \"field\", \"bookingType\", \"display\", \"menu\"], [\"pSortableColumn\", \"id\"], [\"field\", \"id\"], [\"type\", \"numeric\", \"field\", \"id\", \"display\", \"menu\"], [\"pSortableColumn\", \"blId\"], [\"field\", \"blId\"], [\"type\", \"text\", \"field\", \"blId\", \"display\", \"menu\"], [\"pSortableColumn\", \"flId\"], [\"field\", \"flId\"], [\"type\", \"text\", \"field\", \"flId\", \"display\", \"menu\"], [\"pSortableColumn\", \"rmId\"], [\"field\", \"rmId\"], [\"type\", \"text\", \"field\", \"rmId\", \"display\", \"menu\"], [\"pSortableColumn\", \"dateStart\"], [\"field\", \"dateStart\"], [\"type\", \"text\", \"field\", \"dateStart\", \"display\", \"menu\"], [\"pSortableColumn\", \"timeStart\"], [\"field\", \"timeStart\"], [\"type\", \"text\", \"field\", \"timeStart\", \"display\", \"menu\"], [\"pSortableColumn\", \"timeEnd\"], [\"field\", \"timeEnd\"], [\"type\", \"text\", \"field\", \"timeEnd\", \"display\", \"menu\"], [\"pSortableColumn\", \"status\"], [\"field\", \"status\"], [\"type\", \"text\", \"field\", \"status\", \"display\", \"menu\"], [\"pSortableColumn\", \"meetingName\"], [\"field\", \"meetingName\"], [\"type\", \"text\", \"field\", \"meetingName\", \"display\", \"menu\"], [\"pSortableColumn\", \"requestedBy\"], [\"field\", \"requestedBy\"], [\"type\", \"text\", \"field\", \"requestedBy\", \"display\", \"menu\"], [3, \"pSelectableRow\"], [\"matTooltipPosition\", \"top\", 1, \"ellipsis\", 3, \"matTooltip\"]],\n      template: function BookingReportsByMonthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-panel\", 0)(1, \"form\", 1)(2, \"table\", 2)(3, \"tr\")(4, \"td\", 3)(5, \"div\", 4)(6, \"label\", 5);\n          i0.ɵɵtext(7, \"Building \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"ng-select\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"td\", 3)(10, \"div\", 4)(11, \"label\", 5);\n          i0.ɵɵtext(12, \"Floor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"ng-select\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"td\", 3)(15, \"div\", 4)(16, \"label\", 5);\n          i0.ɵɵtext(17, \"Room\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"ng-select\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"td\", 3)(20, \"div\", 4)(21, \"label\", 5);\n          i0.ɵɵtext(22, \"Status \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"ng-select\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"td\", 3)(25, \"div\", 4)(26, \"div\", 10)(27, \"div\", 11)(28, \"label\", 5);\n          i0.ɵɵtext(29, \"Year\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(30, \"ng-select\", 12);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelement(31, \"td\", 13);\n          i0.ɵɵelementStart(32, \"td\", 14)(33, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function BookingReportsByMonthComponent_Template_button_click_33_listener() {\n            return ctx.onSearch();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"button\", 16);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(35, \"p-panel\");\n          i0.ɵɵtemplate(36, BookingReportsByMonthComponent_ng_template_36_Template, 2, 1, \"ng-template\", 17);\n          i0.ɵɵelementStart(37, \"div\", 18, 19)(39, \"p-chart\", 20);\n          i0.ɵɵlistener(\"onDataSelect\", function BookingReportsByMonthComponent_Template_p_chart_onDataSelect_39_listener($event) {\n            return ctx.onClick($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(40, \"p-dialog\", 21);\n          i0.ɵɵlistener(\"visibleChange\", function BookingReportsByMonthComponent_Template_p_dialog_visibleChange_40_listener($event) {\n            return ctx.displayList = $event;\n          });\n          i0.ɵɵelementStart(41, \"div\", 22)(42, \"p-table\", 23, 24);\n          i0.ɵɵtemplate(44, BookingReportsByMonthComponent_ng_template_44_Template, 50, 0, \"ng-template\", 17);\n          i0.ɵɵtemplate(45, BookingReportsByMonthComponent_ng_template_45_Template, 24, 16, \"ng-template\", 25);\n          i0.ɵɵtemplate(46, BookingReportsByMonthComponent_ng_template_46_Template, 3, 1, \"ng-template\", 26);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"toggleable\", true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterPanel);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumBL)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumFL)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.rm_data)(\"searchable\", true);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.enumStatusData)(\"searchable\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"clearable\", false)(\"items\", ctx.years)(\"searchable\", true);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", !ctx.filterPanel.valid);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"data\", ctx.basicData)(\"height\", 130)(\"options\", ctx.basicOptions);\n          i0.ɵɵadvance(1);\n          i0.ɵɵstyleMap(i0.ɵɵpureFunction0(37, _c0));\n          i0.ɵɵpropertyInterpolate1(\"header\", \"Booking Details \", ctx.monthBooking, \"\");\n          i0.ɵɵproperty(\"visible\", ctx.displayList)(\"breakpoints\", i0.ɵɵpureFunction0(38, _c1))(\"resizable\", true)(\"draggable\", true)(\"maximizable\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ctx.req_data)(\"paginator\", true)(\"rows\", 5)(\"showCurrentPageReport\", true)(\"rowsPerPageOptions\", i0.ɵɵpureFunction0(39, _c2))(\"tableStyle\", i0.ɵɵpureFunction0(40, _c3))(\"scrollable\", true)(\"rowHover\", true);\n        }\n      },\n      dependencies: [i8.NgSelectComponent, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i7.PrimeTemplate, i9.Table, i9.SortableColumn, i9.SelectableRow, i9.SortIcon, i9.ColumnFilter, i10.ButtonDirective, i11.Dialog, i12.Panel, i13.UIChart, i14.MatTooltip, i15.DatePipe],\n      styles: [\".ellipsis[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]     .p-datatable .p-datatable-tbody>tr>td{text-align:left;border:1px solid #e9ecef;border-width:0 0 1px 0;padding:.5rem}[_nghost-%COMP%]     .p-datatable .p-datatable-thead>tr>th{text-align:left;padding:.5rem;border:3px solid #e9ecef;border-width:0 0 1px 0;font-weight:600;color:#495057;background:#f8f9fa;transition:box-shadow .2s}\"]\n    });\n  }\n  return BookingReportsByMonthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}