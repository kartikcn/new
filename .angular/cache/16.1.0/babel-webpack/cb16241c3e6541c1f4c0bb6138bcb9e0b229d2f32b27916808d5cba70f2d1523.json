{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\n//import { RmTypeFilterInputDTO } from '../ui/room category/model/DTO/rmtypeFilterInput.model';\nexport let RmcatService = /*#__PURE__*/(() => {\n  class RmcatService {\n    constructor(siteService, rmcatService, rmcatDetailService, rmTypeService) {\n      this.siteService = siteService;\n      this.rmcatService = rmcatService;\n      this.rmcatDetailService = rmcatDetailService;\n      this.rmTypeService = rmTypeService;\n    }\n    getRmcatList(data) {\n      return this.rmcatService.search('rmcat', 'list', data);\n    }\n    getRmTypeList(data) {\n      return this.rmTypeService.search('rmtype', 'list', data);\n    }\n    getRmTypeListPaginated(data) {\n      return this.rmTypeService.search('rmtype', 'listPaginated', data);\n    }\n    getRmcatById(id) {\n      return this.rmcatDetailService.getSingleById('rmcat', 'get', id);\n    }\n    getRmTypeById(rmcat, rmtype) {\n      return this.rmTypeService.getAllByIds('rmType', 'getRmType', rmcat, rmtype);\n    }\n    getALLRmcats() {\n      return this.rmcatService.getAll('rmcat', 'getList');\n    }\n    getALLRmcatsPaginated(data) {\n      return this.rmcatService.search('rmcat', 'getListPaginated', data);\n    }\n    saveRmcat(rmcat) {\n      return this.rmcatDetailService.add('rmcat', 'saveRmcat', rmcat);\n    }\n    saveRmType(rmcat) {\n      return this.rmTypeService.add('rmType', 'saveRmtype', rmcat);\n    }\n    deleteRoomType(data) {\n      return this.rmcatService.getAllByIds('rmType', 'delete', data.id, data.rmCat);\n    }\n    deleteRoomCat(rm_cat) {\n      return this.rmcatService.deleteById('rmcat', 'delete', rm_cat);\n    }\n    getALLRmTypes() {\n      return this.rmTypeService.getAll('rmType', 'getList');\n    }\n    validateRmType(rmStandard, rmType) {\n      return this.rmTypeService.getAllByIds('rmType', 'check', rmStandard, rmType);\n    }\n    getAllRmCatTreeList() {\n      return this.rmTypeService.getAll('rmcat', 'gettreelist');\n    }\n    validateRmCat(rmCat) {\n      return this.rmcatService.getAllById('rmcat', 'check', rmCat);\n    }\n    getRmCatAreaByFloor(data) {\n      return this.rmcatService.search(\"rmcat\", \"getareabyfloor\", data);\n    }\n    getRmTypeAreaByFloor(data) {\n      return this.rmcatService.search(\"rmType\", \"getareabyfloor\", data);\n    }\n    static #_ = this.ɵfac = function RmcatService_Factory(t) {\n      return new (t || RmcatService)(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RmcatService,\n      factory: RmcatService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RmcatService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}