{"ast":null,"code":"import { of } from \"rxjs\";\nimport { shareReplay } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport let SLARequestServices = /*#__PURE__*/(() => {\n  class SLARequestServices {\n    constructor(service) {\n      this.service = service;\n    }\n    getAllSLARequests() {\n      return this.service.getAll('slaRequestParameters', 'getAll');\n    }\n    getAllSLARequestsPaginated(data) {\n      return this.service.search('slaRequestParameters', 'getAllPaginated', data);\n    }\n    getSLARequestById(id) {\n      return this.service.getSingleById(\"slaRequestParameters\", \"getSlaRequestParametersById\", id);\n    }\n    saveSLARequest(data) {\n      return this.service.add('slaRequestParameters', 'saveSlaRequestParameters', data);\n    }\n    checkSlaRequestExists(data) {\n      return this.service.search('slaRequestParameters', 'checkSlaExist', data);\n    }\n    getAllSLAResponses() {\n      return this.service.getAll('slaResponseParameter', 'getList');\n    }\n    getSLAResponseByIds(seqId) {\n      return this.service.getSingleById(\"slaResponseParameter\", \"getById\", seqId);\n    }\n    saveSLAResponse(data) {\n      return this.service.add('slaResponseParameter', 'save', data);\n    }\n    getAllPriorities(data) {\n      if (data == null || data === '') {\n        return of([]);\n      }\n      return this.service.getAllById('slaResponseParameter', \"search\", data);\n    }\n    searchPriorities(term) {\n      return this.getAllPriorities(term).pipe(shareReplay(2));\n    }\n    getAllWrStatus() {\n      return this.service.getAll(\"wrStatus\", \"getList\");\n    }\n    saveSLASteps(data) {\n      return this.service.add('slaRequestStep', 'save', data);\n    }\n    getSlaStepsList(slaResponseParametersId) {\n      return this.service.getAllById('slaRequestStep', 'getAll', slaResponseParametersId);\n    }\n    deleteSlaRequestStep(slaRequestStepsId) {\n      return this.service.getSingleById('slaRequestStep', 'delete', slaRequestStepsId);\n    }\n    getApplicableSlaRequestParameters(data) {\n      return this.service.search('slaRequestParameters', \"getApplicableSla\", data);\n    }\n    getAllSLAResponseBySlaRequestId(slaRequestId) {\n      return this.service.getSingleById(\"slaResponseParameter\", \"getBySlaRequestId\", slaRequestId);\n    }\n    updateAllOtherPriorities(data) {\n      return this.service.add('slaResponseParameter', 'updateAllPriorities', data);\n    }\n    getSlaResponseParametersById(id) {\n      return this.service.getSingleById(\"slaResponseParameter\", \"getById\", id);\n    }\n    static #_ = this.ɵfac = function SLARequestServices_Factory(t) {\n      return new (t || SLARequestServices)(i0.ɵɵinject(i1.DataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SLARequestServices,\n      factory: SLARequestServices.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SLARequestServices;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}